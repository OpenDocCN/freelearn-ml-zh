["```py\n<video id='video' width='640' height='480' preload autoplay>\n    <source src=\"img/video.mp4\">\n</video>\n<canvas id='ballCanvas' width='640px' height='480px'></canvas>\n```", "```py\nvar ballCanvas = document.getElementById('ballCanvas'),\n        ballContext = ballCanvas.getContext('2d'),\n        ballSceneW = ballCanvas.width,\n        ballSceneH = ballCanvas.height;\n```", "```py\nvar tracker = new tracking.ColorTracker(['yellow']);\ntracker.setMinDimension(20);\n```", "```py\ntracker.on('track', function (event) {   \n    ballContext.clearRect(0, 0, ballSceneW, ballSceneH);\n    if (event.data.length > 0)\n        move(event.data[0]);\n});\n```", "```py\nfunction move(rect) {\n    ballContext.beginPath();\n    var ballX = rect.x + rect.width / 2;\n    var ballY = rect.y + rect.height / 2;\n    ballContext.arc(ballX, ballY, 30, 0, 2 * Math.PI, false);\n    ballContext.fillStyle = 'yellow';\n    ballContext.fill();\n    ballContext.stroke();\n}\n```", "```py\ntracking.track('#video', tracker);\n```", "```py\nheadtrackr.controllers.three.realisticAbsoluteCameraControl\n```", "```py\ncamera.position.x = fixedPosition[0];\ncamera.position.y = fixedPosition[1];\ncamera.position.z = fixedPosition[2];\ncamera.lookAt(lookAt);\n```", "```py\nvar wh = screenHeight_cms * scaling;\nvar ww = wh * camera.aspect;\n```", "```py\ndocument.addEventListener('headtrackingEvent', function (event) {\n...\n// function body\n...\n});\n```", "```py\ncamera.position.x = fixedPosition[0] + event.x * scaling;\ncamera.position.y = fixedPosition[1] + event.y * scaling;\ncamera.position.z = fixedPosition[2] + event.z * scaling;\n```", "```py\nvar xOffset = event.x > 0 ? 0 : -event.x * 2 * scaling;\nvar yOffset = event.y < 0 ? 0 : event.y * 2 * scaling;\ncamera.setViewOffset(ww + Math.abs(event.x * 2 * scaling), wh + Math.abs(event.y * 2 * scaling), xOffset, yOffset, ww, wh);\n```", "```py\ncamera.fov = Math.atan2(wh / 2 + Math.abs(event.y * scaling), Math.abs(event.z * scaling)) * 180 * 2 / Math.PI;\n```", "```py\ncamera.updateProjectionMatrix();\n```", "```py\n<script src=\"img/three.min.js\"></script>\n<script src=\"img/Projector.js\"></script>\n<script src=\"img/CanvasRenderer.js\"></script>\n<script src=\"img/headtrackr.js\"></script>\n```", "```py\n<canvas id=\"compare\" width=\"320\" height=\"240\" style=\"display:none\"></canvas>\n<video id=\"vid\" autoplay loop></video>\n```", "```py\ncamera.far = 10000;\n```", "```py\nheadtrackr.controllers.three.realisticAbsoluteCameraControl(camera, 20, [0, 150, 100], cube.position);\n```", "```py\nvar htracker = new headtrackr.Tracker();\n```", "```py\nvar videoInput = document.getElementById('vid');\nvar canvasInput = document.getElementById('compare');\nvideoInput.style.position = 'absolute';\nvideoInput.style.top = '50px';\nvideoInput.style.zIndex = '100001';\nvideoInput.style.display = 'block';\nhtracker.init(videoInput, canvasInput);\nhtracker.start();\n```", "```py\n<script src=\"img/oflow.js\"></script>\n```", "```py\n<div>\n    <video id='videoOut' width='640' height='360' autoplay>\n        <source src=\"img/video.mp4\">\n    </video>\n    <canvas id='ballScene' width='320' height='190'></canvas>\n</div>\n<canvas id='flow' width='640' height='360'></canvas>\n```", "```py\nvar zoneSize = 8,\n        videoElement = document.getElementById('videoOut');\nvar webCamFlow = new oflow.VideoFlow(videoElement, zoneSize),\n```", "```py\nwebCamFlow.onCalculated(function (direciton) {\n    flowContext.clearRect(0, 0, sceneWidth, sceneHeight);\n    for (var i = 0; i < direciton.zones.length; ++i) {\n        var zone = direciton.zones[i];\n        drawArrow(flowContext, zone, {x: zone.x + zone.u * 4, y: zone.y + zone.v * 4}, 2);\n    }\n```", "```py\n    ballContext.clearRect(0, 0, ballSceneW, ballSceneH);\n    ballContext.beginPath();\n    ballX -= direciton.u;\n    ballY += direciton.v;\n    if (ballX < 0) {\n        ballX = ballSceneW;\n    }\n    if (ballX > ballSceneW) {\n        ballX = 0;\n    }\n    if (ballY < 0) {\n        ballY = ballSceneH;\n    }\n    if (ballY > ballSceneH) {\n        ballY = 0;\n    }\n    ballContext.arc(ballX, ballY, 10, 0, 2 * Math.PI, false);\n    ballContext.fillStyle = 'yellow';\n    ballContext.fill();\n    ballContext.stroke();\n});\n```", "```py\nwebCamFlow.startCapture();\n```", "```py\n<script src=\"img/compatibility.js\"></script>\n```", "```py\n<video id=\"vid\" width=\"640\" height=\"360\" autoplay style=\"display: none\">\n    <source src=\"img/video.mp4\"/>\n</video>\n<div>\n    <canvas id=\"canvas\" width=\"640\" height=\"360\"></canvas>\n</div>\n```", "```py\nvar video = document.getElementById('vid');\nvar canvas = document.getElementById('canvas');\nvar context, canvasWidth, canvasHeight;\nvar curr_pyr, prev_pyr, count, status, prev_xy, curr_xy;\n```", "```py\nfunction init(videoWidth, videoHeight) {\n    canvasWidth = canvas.width;\n    canvasHeight = canvas.height;\n    context = canvas.getContext('2d');\n    context.fillStyle = \"rgb(0,255,0)\";\n    curr_pyr = new jsfeat.pyramid_t(3);\n    prev_pyr = new jsfeat.pyramid_t(3);\n    curr_pyr.allocate(canvasWidth, canvasHeight, jsfeat.U8C1_t);\n    prev_pyr.allocate(canvasWidth, canvasHeight, jsfeat.U8C1_t);\n    count = 0;\n    status = new Uint8Array(100);\n    prev_xy = new Float32Array(100 * 2);\n    curr_xy = new Float32Array(100 * 2);\n}\n```", "```py\ncompatibility.requestAnimationFrame(process);\n```", "```py\nfunction process() {\n    compatibility.requestAnimationFrame(process);\n    if (video.readyState === video.HAVE_ENOUGH_DATA) {\n        context.drawImage(video, 0, 0, canvasWidth, canvasHeight);\n        var imageData = context.getImageData(0, 0, canvasWidth, canvasHeight);\n```", "```py\n        var _points = prev_xy;\n        prev_xy = curr_xy;\n        curr_xy = _points;\n        var _pyr = prev_pyr;\n        prev_pyr = curr_pyr;\n        curr_pyr = _pyr;\n```", "```py\n        jsfeat.imgproc.grayscale(imageData.data, canvasWidth, canvasHeight, curr_pyr.data[0]);\n        curr_pyr.build(curr_pyr.data[0], true);\n```", "```py\n        var win_size = 20;\n        var max_iter = 30;\n        var eps = 0.01;\n        var min_eigen_threshold = 0.001;\n        jsfeat.optical_flow_lk.track(prev_pyr, curr_pyr, prev_xy, curr_xy, count, win_size, max_iter, status, eps, min_eigen_threshold);\n        prune_oflow_points(context);\n    }\n}\n```", "```py\n#content {\n    position: absolute;\n    margin: auto;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    width: 100px;\n    height: 100px;\n    line-height: 100px;\n    font-size: 10pt;\n    text-align: center;\n    vertical-align: middle;\n}\n<div id=\"content\">Content</div>\n```", "```py\ncompatibility.getUserMedia({video: true}, function (stream) {\n    try {\n        video.src = compatibility.URL.createObjectURL(stream);\n    } catch (error) {\n        video.src = stream;\n    }\n    setTimeout(function () {\n        video.play();\n    }, 500);\n}, function (error) {\n});\n```", "```py\njsfeat.optical_flow_lk.track(prev_pyr, curr_pyr, prev_xy, curr_xy, count, win_size, max_iter, status, eps, min_eigen_threshold);\nif (count == 2)\n    zoom(prev_xy, curr_xy);\n```", "```py\nvar size = 100.0;\nvar content = document.getElementById('content');\nfunction zoom(prev_xy, curr_xy) {\n    var prev_d = dist2(prev_xy);\n    var curr_d = dist2(curr_xy);\n    size = Math.round(size * Math.sqrt(curr_d / prev_d));\n    content.style.width = size + 'px';\n    content.style.height = size + 'px';\n    content.style['line-height'] = size + 'px';\n    content.style['font-size'] = (size / 10) + 'pt';\n}\n\nfunction dist2(arr) {\n    return Math.pow(arr[0] - arr[2], 2) + Math.pow(arr[1] - arr[3], 2);\n}\n```"]