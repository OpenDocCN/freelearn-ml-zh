["```py\n        {\n          \"Version\": \"2012-10-17\",\n          \"Statement\": [\n            {\n              \"Sid\": \"AmazonML_s3:ListBucket\",\n              \"Effect\": \"Allow\",\n              \"Principal\": {\n                \"Service\": \"machinelearning.amazonaws.com\"\n              },\n              \"Action\": \"s3:ListBucket\",\n              \"Resource\": \"arn:aws:s3:::{YOUR_BUCKET_NAME}\",\n              \"Condition\": {\n                \"StringLike\": {\n                  \"s3:prefix\": \"*\"\n                }\n              }\n            },\n            {\n              \"Sid\": \"AmazonML_s3:GetObject\",\n              \"Effect\": \"Allow\",\n              \"Principal\": {\n                \"Service\": \"machinelearning.amazonaws.com\"\n              },\n              \"Action\": \"s3:GetObject\",\n              \"Resource\": \"arn:aws:s3:::{YOUR_BUCKET_NAME}/*\"\n            },\n            {\n              \"Sid\": \"AmazonML_s3:PutObject\",\n              \"Effect\": \"Allow\",\n              \"Principal\": {\n                \"Service\": \"machinelearning.amazonaws.com\"\n              },\n              \"Action\": \"s3:PutObject\",\n              \"Resource\": \"arn:aws:s3:::{YOUR_BUCKET_NAME}/*\"\n            }\n          ]\n        }\n\n```", "```py\n{\n  \"version\" : \"1.0\",\n  \"rowId\" : null,\n  \"rowWeight\" : null,\n  \"targetAttributeName\" : \"survived\",\n  \"dataFormat\" : \"CSV\",\n  \"dataFileContainsHeader\" : true,\n  \"attributes\" : [ {\n    \"attributeName\" : \"pclass\",\n    \"attributeType\" : \"CATEGORICAL\"\n    }, {\n     \"attributeName\" : \"survived\",\n     \"attributeType\" : \"BINARY\"\n    }, {\n     \"attributeName\" : \"name\",\n     \"attributeType\" : \"TEXT\"\n    }, {\n     \"attributeName\" : \"sex\",\n     \"attributeType\" : \"BINARY\"\n    }, {\n     \"attributeName\" : \"age\",\n     \"attributeType\" : \"NUMERIC\"\n    }, {\n     \"attributeName\" : \"sibsp\",\n     \"attributeType\" : \"NUMERIC\"\n    }, {\n     \"attributeName\" : \"parch\",\n     \"attributeType\" : \"NUMERIC\"\n    }, {\n     \"attributeName\" : \"ticket\",\n     \"attributeType\" : \"TEXT\"\n    }, {\n     \"attributeName\" : \"fare\",\n     \"attributeType\" : \"NUMERIC\"\n    }, {\n     \"attributeName\" : \"cabin\",\n     \"attributeType\" : \"TEXT\"\n    }, {\n     \"attributeName\" : \"embarked\",\n     \"attributeType\" : \"CATEGORICAL\"\n    }, {\n     \"attributeName\" : \"boat\",\n     \"attributeType\" : \"CATEGORICAL\"\n    }, {\n     \"attributeName\" : \"body\",\n     \"attributeType\" : \"NUMERIC\"\n    }, {\n     \"attributeName\" : \"home.dest\",\n     \"attributeType\" : \"TEXT\"\n    } ],\n     \"excludedAttributeNames\" : [\"home.dest\", \"body\", \"boat\"]\n    }\n\n```", "```py\n        CREATE EXTERNAL TABLE temp ();\n\n```", "```py\nCREATE DATABASE titanic_db;\n\n```", "```py\nCREATE EXTERNAL TABLE IF NOT EXISTS titanic_db.titanic (\n  pclass tinyint,\n  survived tinyint,\n  name string,\n  sex string,\n  age double,\n  sibsp tinyint,\n  parch tinyint,\n  ticket string,\n  fare double,\n  cabin string,\n  embarked string,\n  boat string,\n  body string,\n  home_dest string\n )\n ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe' WITH SERDEPROPERTIES (\n  'serialization.format' = ',',\n  'field.delim' = ','\n  ) LOCATION 's3://aml.packt/athena_data/'\n\n```", "```py\nselect coalesce(age, 28) as age, coalesce(fare, 14.5) as fare from titanic;\n\n```", "```py\nSELECT age, CASE \n WHEN age is null THEN 0\n ELSE 1\n END as is_age_missing\nfrom titanic;\n\n```", "```py\nselect fare, log(fare +1, 2) as log_fare from titanic;\n\n```", "```py\nSELECT name, split(name, ' ')[2] as title from titanic;\n\n```", "```py\nSELECT cabin, substr(cabin, 1, 1) as deck  FROM titanic;\n\n```", "```py\nselect sibps + parch + 1 as family_size from titanic; \n\n```", "```py\nSELECT pclass, \nsurvived, \nname, \nsex, \nCOALESCE(age, 28) as age, \nsibsp, \nparch, \nticket, \nCOALESCE(fare, 14.5) as fare, \ncabin, \nembarked, \nboat, \nbody, \nhome_dest, \nCASE \n WHEN age is null THEN 0\n ELSE 1\n END as is_age_missing, \nlog(fare + 1, 2) as log_fare,\nsplit(name, ' ')[2] as title,\nsubstr(cabin, 1, 1) as deck,\nsibsp + parch + 1 as family_size \nFROM titanic\nORDER BY RAND();\n\n```", "```py\n{\n  \"attributeName\" : \"is_age_missing\",\n  \"attributeType\" : \"BINARY\"\n  }, {\n  \"attributeName\" : \"log_fare\",\n  \"attributeType\" : \"NUMERIC\"\n  }, {\n  \"attributeName\" : \"title\",\n  \"attributeType\" : \"CATEGORICAL\"\n  }, {\n  \"attributeName\" : \"deck\",\n  \"attributeType\" : \"CATEGORICAL\"\n  }, {\n  \"attributeName\" : \"family_size\",\n  \"attributeType\" : \"NUMERIC\"\n }\n\n```"]