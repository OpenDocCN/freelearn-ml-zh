["```py\n137, 80, 78, 71, 13, 10, 26, 10\n```", "```py\nusing var ms = new MemoryStream(data);\n\nbyte[] fileMagic = new byte[FileMagicBytes.Length];\n\nms.Read(fileMagic, 0, fileMagic.Length);\n\nif (!fileMagic.SequenceEqual(FileMagicBytes))\n{\n     return (string.Empty, false, null);\n}\n```", "```py\nwhile (ms.Position != data.Length)\n{\n    byte[] chunkInfo = new byte[ChunkInfoSize];\n\n    ms.Read(chunkInfo, 0, chunkInfo.Length);\n\n    var chunkSize = chunkInfo.ToInt32();\n\n    byte[] chunkIdBytes = new byte[ChunkIdSize];\n\n    ms.Read(chunkIdBytes, 0, ChunkIdSize);\n\n    var chunkId = Encoding.UTF8.GetString(chunkIdBytes);\n\n    byte[] chunk = new byte[chunkSize];\n\n    ms.Read(chunk, 0, chunkSize);\n\n    switch (chunkId)\n    {\n        case nameof(IHDR):\n            var header = new IHDR(chunk);\n\n            // Payload exceeds length\n            if (data.Length <= (header.Width * header.Height * MaxByteDepth) + ms.Position)\n            {\n                break;\n            }\n\n            return (FileType, false, new[] { \"SUSPICIOUS: Payload is larger than what the size should be\" });\n        case nameof(IDAT):\n            // Build Embedded file from the chunks\n            break;\n        case nameof(IEND):\n            // Note that the PNG had an end\n            break;\n    }\n}\n```", "```py\npublic class IHDR\n{\n    public Int32 Width;\n\n    public Int32 Height;\n\n    public byte BitDepth;\n\n    public byte ColorType;\n\n    public byte Compression;\n\n    public byte FilterMethod;\n\n    public byte Interlace;\n\n    public IHDR(byte[] data)\n    {\n        Width = data.ToInt32();\n\n        Height = data.ToInt32(4);\n    }\n}\n```"]