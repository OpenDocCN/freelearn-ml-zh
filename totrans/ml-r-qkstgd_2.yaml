- en: Predicting Failures of Banks - Data Collection
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 预测银行失败 - 数据收集
- en: In each model development, we will need to obtain enough data to build the model.
    It is very common to read the expression g*arbage in, garbage out*, which relates
    to the fact that if you develop a model with bad data, the resulting model will
    be also bad.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在每个模型开发中，我们需要获取足够的数据来构建模型。非常常见的是阅读“垃圾输入，垃圾输出”这个表达，这与如果你用糟糕的数据开发模型，结果模型也会很糟糕的事实相关。
- en: Especially in machine learning applications, what we expect is to have a huge
    amount of data, although in many cases that's not the case. Regardless of the
    amount of information available, the quality of this data is the most important
    issue.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 尤其是在机器学习应用中，我们期望拥有大量数据，尽管在许多情况下并非如此。无论可用信息的数量如何，数据的质量是最重要的问题。
- en: Moreover, as a developer, it is important to have structured data, because it
    can be immediately manipulated. However, data is commonly found in an unstructured
    form, meaning that it takes a lot of time to process and prepare for development.
    Many people consider machine learning applications to only be based on the use
    of new algorithms or techniques using lines of code. The process is more complex
    than this, and it requires more time spent understanding the data you have and
    to obtain the maximum of all your observations. Through the real-world cases that
    we will discuss in this book, we will observe that data collection, cleansing,
    and preparation are some of the most important and time-consuming steps.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，作为一个开发者，拥有结构化数据非常重要，因为它可以立即进行操作。然而，数据通常以非结构化形式存在，这意味着处理和准备用于开发需要花费大量时间。许多人认为机器学习应用仅基于使用新的算法或技术，而实际上这个过程比这更复杂，需要更多时间来理解你所拥有的数据，以获得所有观察的最大价值。通过本书中我们将讨论的实际情况，我们将观察到数据收集、清洗和准备是一些最重要且耗时的工作。
- en: 'In this chapter, we will explore how to collect data for our problem statements:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将探讨如何为我们的问题陈述收集数据：
- en: Collecting financial data
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 收集财务数据
- en: Collecting the target variable
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 收集目标变量
- en: Structuring data
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据结构化
- en: Collecting financial data
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 收集财务数据
- en: We will obtain our data from the **Federal Deposit Insurance Corporation** (**FDIC**)
    website ([https://www.fdic.gov/](https://www.fdic.gov/)). The FDIC is an independent
    agency led by the US Congress with an aim to maintain the confidence of the people
    and the stability of the financial system.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从**联邦存款保险公司**（**FDIC**）网站（[https://www.fdic.gov/](https://www.fdic.gov/)）获取我们的数据。FDIC是一个由美国国会领导的独立机构，其目标是维护人民的信心和金融系统的稳定。
- en: Why FDIC?
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为什么选择FDIC？
- en: FDIC provides deposit insurance to depositors in US commercial banks and savings
    institutions. Thus, if a US bank fails and closes, the FDIC guarantees that the
    depositors do not lose their savings. Up to US$250,000 is guaranteed.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: FDIC为美国商业银行和储蓄机构的存款人提供存款保险。因此，如果一家美国银行倒闭并关闭，FDIC保证存款人不会损失他们的储蓄。最高可保证25万美元。
- en: 'The FDIC also examines and supervises certain financial institutions. These
    institutions are obliged to periodically report detailed information about their
    financial statements related to the following:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: FDIC还检查和监督某些金融机构。这些机构有义务定期报告与以下相关的财务报表的详细信息：
- en: Capital level
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 资本水平
- en: Solvency
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 清偿能力
- en: Quality, type, liquidity, and diversification of assets
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 资产的质量、类型、流动性和多元化
- en: Loan and investment concentrations
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 贷款和投资集中度
- en: Earnings
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 收益
- en: Liquidity
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 流动性
- en: Information on banks is publicly available on the FDIC website, and we can download
    it for our purpose. We will find that information is already structured in the
    so-called **Uniform Bank Performance Reports** (**UBPR**), which includes several
    ratios combining different accounts from the financial statements.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 银行的信息在FDIC网站上公开可用，我们可以下载用于我们的目的。我们会发现信息已经以所谓的**统一银行绩效报告**（**UBPR**）的形式结构化，它包括从财务报表中结合不同账户的几个比率。
- en: 'For example, if you want a UBPR for a particular bank, or if you just wish
    to view any other UBPR report, you can select Uniform Bank Performance Report
    (UBPR) at [https://cdr.ffiec.gov/public/ManageFacsimiles.aspx](https://cdr.ffiec.gov/public/ManageFacsimiles.aspx):'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果您想获取特定银行的UBPR，或者只是想查看任何其他UBPR报告，您可以在[https://cdr.ffiec.gov/public/ManageFacsimiles.aspx](https://cdr.ffiec.gov/public/ManageFacsimiles.aspx)选择统一银行绩效报告（UBPR）：
- en: '![](img/f168b9e0-cffe-46bc-aa23-9b5483195789.png)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/f168b9e0-cffe-46bc-aa23-9b5483195789.png)'
- en: The Report drop-down menu allows the selection of the UBPR. We can search for
    an individual bank using the name or the FDIC certificate number among other alternatives.
    Additionally, information can be downloaded for all the available banks at the
    same time by visiting this link at [https://cdr.ffiec.gov/public/PWS/DownloadBulkData.aspx](https://cdr.ffiec.gov/public/PWS/DownloadBulkData.aspx).
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 报告下拉菜单允许选择UBPR。我们可以通过名称或其他选项（如FDIC证书号码）搜索单个银行。此外，通过访问此链接[https://cdr.ffiec.gov/public/PWS/DownloadBulkData.aspx](https://cdr.ffiec.gov/public/PWS/DownloadBulkData.aspx)，可以同时下载所有可用银行的详细信息。
- en: 'As an example, the following screenshot shows how it is possible to download
    the bulk data of financial ratios for 2016 in text format:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，以下截图显示了如何以文本格式下载2016年财务比率的批量数据：
- en: '![](img/f4bcf192-e456-41a4-8c76-d5e182620f67.png)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/f4bcf192-e456-41a4-8c76-d5e182620f67.png)'
- en: You should only select the UBPR Ratio -- Single Period option, then select the
    desired date (12/31/2016), and finally set the output format, for example, Tab
    Delimited.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 您应仅选择“UBPR比率 - 单期”选项，然后选择所需的日期（12/31/2016），最后设置输出格式，例如，制表符分隔。
- en: In this exercise, we will need to download many files, one for each year from
    2002 to 2016\. It is not necessary to download the data if you don't want to.
    After the application of a relevant step in the code, the R workspace is saved
    and this backup is available for readers without spending time running the code
    or downloading information.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个练习中，我们需要下载许多文件，从2002年到2016年每年一个。如果您不想下载数据，则没有必要下载。在代码中应用相关步骤后，R工作空间将被保存，并且这个备份可供读者使用，无需花费时间运行代码或下载信息。
- en: In my experience of learning any programming language, spending time finding
    errors in code while the rest of your co-learners advance is very frustrating.
    For that reason, these workspaces allow the reader to never be frustrated by a
    problem with a specific line of code or even a concrete package that does not
    work properly on our computer.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在我学习任何编程语言的经验中，当其他学习者进步时，花费时间在代码中寻找错误是非常令人沮丧的。因此，这些工作空间允许读者永远不会因为特定代码行的问题或甚至在我们的计算机上无法正常工作的具体包而感到沮丧。
- en: In this case, information is downloaded in text delimited files, making it easier
    to upload on to R later. For each year, one ZIP file is downloaded containing
    several text files. Each of these text files contains quarterly-relevant information
    on specific areas of a bank. The size of all the ZIP files for the year 2002 to
    2016 reaches 800MB.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，信息以文本分隔文件的形式下载，这使得以后上传到R中变得更加容易。对于每一年的每个ZIP文件都包含几个文本文件。这些文本文件包含关于银行特定领域的季度相关信息。2002年到2016年所有ZIP文件的总大小达到800MB。
- en: Listing files
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 列出文件
- en: We should create a folder for each year in our computer, where each ZIP file
    is decompressed.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 我们应该在电脑中为每年的文件创建一个文件夹，其中每个ZIP文件都需要解压缩。
- en: 'Once folders are created, we can write the following code in R to list all
    the folders that we have created:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦创建了文件夹，我们就可以在R中编写以下代码来列出我们创建的所有文件夹：
- en: '[PRE0]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The `pattern` option allows us to search for all the folders that contain `20`
    in their names, going through all the folders that we have created before.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '`pattern`选项允许我们搜索所有名称中包含`20`的文件夹，遍历我们之前创建的所有文件夹。'
- en: Finding files
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 查找文件
- en: 'Let''s read all the `.txt` files included in each folder in the `myfiles` list.
    Once `.txt` files are read for each year, they are merged together in only one
    table. This process takes several minutes to finish (in my case, almost 30 minutes):'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们读取`myfiles`列表中每个文件夹包含的所有`.txt`文件。一旦为每个年份读取了`.txt`文件，它们就会合并成一个单一的表格。这个过程需要几分钟才能完成（在我的情况下，几乎需要30分钟）。
- en: '[PRE1]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Hence, it first lists all the folders we have created. Then, it lists all the
    `.txt` files in each folder and reads them into R. Individual `.txt` files provide
    different data frames, which are then merged into a single table. As a result
    of the code, 16 different tables are created, each of them with information for
    one specific year.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，它首先列出我们创建的所有文件夹。然后，它列出每个文件夹中的所有`.txt`文件并将它们读入R。单个`.txt`文件提供不同的数据框，然后合并成一个单一的表格。代码的结果是创建了16个不同的表格，每个表格包含一个特定年份的信息。
- en: Combining results
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 合并结果
- en: 'Let''s now merge the yearly tables using the `rbind` function. This is possible
    because all the tables contain exactly the same number of columns:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们使用`rbind`函数合并年度表格。这是可能的，因为所有表格包含的确切列数相同：
- en: '[PRE2]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Removing tables
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 删除表格
- en: 'With the `rm()` command, we can remove all the tables in the workspace apart
    from `database`:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `rm()` 命令，我们可以删除工作空间中除 `database` 之外的所有表格：
- en: '[PRE3]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Knowing your observations
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 了解你的观测值
- en: 'The database contains a total of `420404` observations and `1571` columns:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 数据库包含总共 `420404` 个观测值和 `1571` 列：
- en: '[PRE4]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Let''s see what the dataset now looks like, or at least, the first few observations
    and columns:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看数据集现在看起来像什么，或者至少，前几个观测值和列：
- en: '[PRE5]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: As you can see, the first column is the identifier of each bank. In the second
    column, the reference date of the financial information is provided. The rest
    of the columns are codified with the `UBPR` prefix and a number. This situation
    is very common in real situations where a huge number of variables are available
    and their meanings are unknown. This situation can be very problematic because
    we do not exactly know if some variables are calculated considering the target
    variable, or if the variable will be available at the moment when the model will
    be implemented.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，第一列是每个银行的标识符。在第二列中，提供了财务信息的参考日期。其余的列使用 `UBPR` 前缀和数字编码。这种情况在实际情况中非常常见，因为有很多变量可用，但它们的含义是未知的。这种情况可能非常有问题，因为我们并不确切知道某些变量是否考虑了目标变量，或者变量是否将在模型实施时可用。
- en: In our case, this issue is not really a problem because you can find a dictionary
    with the meaning of the variables at [https://cdr.ffiec.gov/CDRDownload/CDR/UserGuide/v96/FFIEC%20UBPR%20Complete%20User%20Guide_2019-01-11.Zip](https://cdr.ffiec.gov/CDRDownload/CDR/UserGuide/v96/FFIEC%20UBPR%20Complete%20User%20Guide_2019-01-11.Zip).
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的情况下，这个问题实际上并不是一个问题，因为你可以找到一个包含变量含义的字典，位于[https://cdr.ffiec.gov/CDRDownload/CDR/UserGuide/v96/FFIEC%20UBPR%20Complete%20User%20Guide_2019-01-11.Zip](https://cdr.ffiec.gov/CDRDownload/CDR/UserGuide/v96/FFIEC%20UBPR%20Complete%20User%20Guide_2019-01-11.Zip)。
- en: For example, the meaning of the first variable, `UBPR1795`, is net credit losses,
    measuring the total amount of loans that generated losses to a bank because they
    were not paid.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，第一个变量 `UBPR1795` 的含义是净信贷损失，衡量由于未偿还而产生的损失，导致银行贷款的总金额。
- en: Handling duplications
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 处理重复项
- en: When we joined the different text files into only one table per year, some columns
    were duplicated because they were included in several text files at the same time.
    For example, all the ratios included in text files named `Summary ratios` will
    be duplicated in the other text files. In those cases, R assigns a `.x` or `.y`
    suffix to the variables.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们将不同的文本文件合并成每年一个表格时，一些列被重复了，因为它们同时包含在多个文本文件中。例如，所有包含在名为 `Summary ratios` 的文本文件中的比率都将复制到其他文本文件中。在这些情况下，R
    为变量分配 `.x` 或 `.y` 后缀。
- en: 'In the following code, we remove the variables with the suffix `.x` because
    they are duplicated in the database:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下代码中，我们删除了具有 `.x` 后缀的变量，因为它们在数据库中是重复的：
- en: '[PRE6]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The `grep` function searches for the `.x` pattern among the columns names.
    If this pattern is detected in a column, this column will be removed. Additionally,
    the `.y` suffix is removed from the column names:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '`grep` 函数在列名中搜索 `.x` 模式。如果检测到列中有此模式，则该列将被删除。此外，列名中的 `.y` 后缀也将被移除：'
- en: '[PRE7]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Finally, the import process also creates some erroneous and uninformed variables.
    The name of these columns starts with `X`. These variables are also removed, as
    follows:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，导入过程还创建了一些错误和不准确变量。这些列的名称以 `X` 开头。这些变量也将被删除，如下所示：
- en: '[PRE8]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Let''s save the workspace until this following step:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们将工作空间保存到以下步骤：
- en: '[PRE9]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Operating our problem
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 操作我们的问题
- en: The database contains a column indicating the date of the financial statements
    for each bank (called the `Reporting Period` field). Each bank can appear several
    times in the dataset, once a quarter from December 2002 to December 2016.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 数据库包含一个表示每个银行财务报表日期的列（称为 `Reporting Period` 字段）。每个银行可以在数据集中出现多次，从2002年12月到2016年12月，每季度一次。
- en: 'However, this field is not recognized as a date format in R:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，这个字段在 R 中不被识别为日期格式：
- en: '[PRE10]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Let''s transform this field into a date format:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们将此字段转换为日期格式：
- en: 'First, extract the left part of the `Reporting Period` column. The first 10
    characters are extracted in a new variable called `Date`:'
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，从 `Reporting Period` 列中提取左侧部分。前10个字符被提取到一个名为 `Date` 的新变量中：
- en: '[PRE11]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Let''s convert this new column into a date using the `as.Date` command:'
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们使用 `as.Date` 命令将这个新列转换为日期格式：
- en: '[PRE12]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Finally, remove the `Reporting Period` field as it is no longer relevant:'
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，删除 `Reporting Period` 字段，因为它不再相关：
- en: '[PRE13]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: We have information about all the quarters from 2002 to 2016, but we are only
    interested in the financial information provided on year-end.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有关于2002年至2016年所有季度的信息，但我们只对年末提供的财务信息感兴趣。
- en: 'Let''s filter the dataset to consider information from December of each year:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们过滤数据集，以考虑每年12月的信息：
- en: '[PRE14]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'After the preceding line of code, our database contains `110239` observations:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一行代码之后，我们的数据库包含`110239`个观测值：
- en: '[PRE15]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'In addition, it contains `1494` variables, as shown in the following code block:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，它包含`1494`个变量，如下面的代码块所示：
- en: '[PRE16]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'At this point, let''s save a backup of the workspace:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，让我们保存工作区的一个备份：
- en: '[PRE17]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'You can now take a look at all the variables in the dataset:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 您现在可以查看数据集中的所有变量：
- en: '[PRE18]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'As the number of variables is substantially high, it is recommended to save
    the name of variables in an Excel file:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 由于变量数量相当高，建议将变量的名称保存到Excel文件中：
- en: '[PRE19]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: As you can see, there are variables in the dataset whose names are a kind of
    code. And we also know that it is possible to obtain the meaning of each variable
    in the FDIC website. This situation is really normal, especially in credit risk
    applications, where information gives details about account movements or transactions.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，数据集中有一些变量的名称是一种代码。我们还知道，可以在FDIC网站上找到每个变量的含义。这种情况真的很常见，尤其是在信用风险应用中，信息提供了关于账户变动或交易详情。
- en: It is important to understand in some way the meaning of variables, or at least
    how they are generated. If not, we can include some variables very close to the
    target variable as predictors, or even include variables that will not be available
    at the moment of model implementation. However, we know that there is no apparent
    target in the dataset. So let's collect the target variable for our problem.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 以某种方式理解变量的含义，或者至少了解它们是如何生成的，这是很重要的。如果不这样做，我们可以包括一些与目标变量非常接近的变量作为预测变量，甚至包括在模型实施时不可用的变量。然而，我们知道数据集中没有明显的目标。因此，让我们收集我们问题的目标变量。
- en: Collecting the target variable
  id: totrans-88
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 收集目标变量
- en: We need to determine whether or not a bank has failed in the past – this will
    be our target. This information is also available on the FDIC website at [https://www.fdic.gov/bank/individual/failed/banklist.html](https://www.fdic.gov/bank/individual/failed/banklist.html).
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要确定一家银行是否在过去失败过——这将是我们目标。此信息也可在FDIC网站上找到，网址为[https://www.fdic.gov/bank/individual/failed/banklist.html](https://www.fdic.gov/bank/individual/failed/banklist.html)。
- en: 'The website includes banks that have failed since October 2000, which covers
    all our dataset:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 网站包括自2000年10月以来失败的银行，这涵盖了我们的整个数据集：
- en: '![](img/0e7f89fb-1b52-410f-a94a-279333b63e4b.png)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/0e7f89fb-1b52-410f-a94a-279333b63e4b.png)'
- en: 'Let''s see the steps to achieve this:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看实现这一目标的步骤：
- en: 'Download this information into a `.csv` file:'
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将此信息下载到`.csv`文件中：
- en: '[PRE20]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Even this list is updated periodically, as historical information does not change,
    but the results are still replicable. Anyway, the file used in the development
    is also available in the data repository of this book.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 即使这个列表定期更新，因为历史信息不会改变，但结果仍然是可复制的。无论如何，用于开发的文件也包含在这本书的数据存储库中。
- en: 'Now, upload the downloaded file into R, as follows:'
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，将下载的文件上传到R中，如下所示：
- en: '[PRE21]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Use the following command to see all the variables and some details about the
    data contained in the list of failed banks:'
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令查看所有变量以及失败银行列表中包含的数据的一些详细信息：
- en: '[PRE22]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Let''s print the first ten rows, as follows:'
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们打印前十行，如下所示：
- en: '[PRE23]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'The file contains these relevant pieces of information:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 文件包含以下相关信息：
- en: The number of failed banks
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 失败银行的数目
- en: The states where these banks were located
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这些银行所在的状态
- en: The date when they failed
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 他们失败的时间
- en: The acquiring institution
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 收购机构
- en: 'It will be quite interesting to plot the evolution of failures over time. For
    that purpose, let''s check whether the `Closing.Date` column is recognized as
    a date:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 绘制失败随时间演变的趋势将非常有趣。为此，让我们检查`Closing.Date`列是否被识别为日期：
- en: '[PRE24]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'This column is not a date. Let''s convert it to a date by using another command
    similar to `as.Date` using the `lubridate` library:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 这列不是日期。让我们使用类似于`as.Date`的另一个命令，通过`lubridate`库将其转换为日期：
- en: '[PRE25]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Structuring data
  id: totrans-111
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据结构化
- en: After having acquired our target variable and knowing our dataset, we can now
    move on to the actual data collection based on our target. Here, we will try acquiring
    the data of the bank according to different years as described in the *Collecting
    the target variable* section.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 在获取了我们的目标变量并了解了我们的数据集之后，我们现在可以继续根据我们的目标进行实际的数据收集。在这里，我们将尝试根据*收集目标变量*部分中描述的不同年份获取银行的资料。
- en: 'To do this, we create a new variable extracting only the year when a bank went
    bankrupt, and then we count the number of banks by year:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 要做到这一点，我们创建一个新的变量，只提取银行破产时的年份，然后按年份计算银行的数目：
- en: '[PRE26]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Let''s view our data graphically:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们以图形方式查看我们的数据：
- en: '[PRE27]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'The preceding code gives us the following output:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 上述代码给出了以下输出：
- en: '![](img/ef3821cc-1c58-42ce-8217-4edcd35e9ae2.png)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ef3821cc-1c58-42ce-8217-4edcd35e9ae2.png)'
- en: As the preceding graph shows, the number of failed banks increased during the
    dot-com crisis in 2001 and 2002, and then during the financial crisis that started
    in 2008.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 如前图所示，在2001年和2002年的互联网泡沫危机期间以及从2008年开始的金融危机期间，破产银行的数目有所增加。
- en: Now we need to merge the list of failed banks with our database. In the failed
    banks dataset, there is a column that contains the ID of each bank, specifically
    the `Certificate number` column. This is a number assigned by the FDIC that uniquely
    identifies institutions and insurance certificates.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们需要将破产银行的列表与我们的数据库合并。在破产银行数据集中，有一个包含每个银行ID的列，具体是`证书号码`列。这是FDIC分配的一个数字，用于唯一标识机构和保险证书。
- en: Nevertheless, in the other database, which contains financial information, the
    ID number is called RSSD ID, which is different. This number is a unique identifier
    assigned to institutions by the Federal Reserve System.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在包含财务信息的其他数据库中，ID号码被称为RSSD ID，这是不同的。这个数字是由联邦储备系统分配给机构的唯一标识符。
- en: So, how can we join both datasets? We need a mapping between both identifiers.
    This mapping can also be found on the FDIC website, again in the same part where
    we previously downloaded the bulk data of all financial statements. Remember,
    the website can be accessed at [https://cdr.ffiec.gov/public/pws/downloadbulkdata.aspx](https://cdr.ffiec.gov/public/pws/downloadbulkdata.aspx).
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，我们如何将这两个数据集连接起来呢？我们需要在两个标识符之间建立一个映射。这个映射也可以在FDIC网站上找到，再次是在我们之前下载所有财务报表批量数据的同一部分。记住，网站可以通过[https://cdr.ffiec.gov/public/pws/downloadbulkdata.aspx](https://cdr.ffiec.gov/public/pws/downloadbulkdata.aspx)访问。
- en: 'On this website, we''ll need to download the Call Reports -- Single Period
    files during the relevant period (2002-2016):'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个网站上，我们需要在相关期间（2002-2016）下载呼叫报告——单期文件：
- en: '![](img/56f8df48-eb9b-4635-bd71-a7dadadde700.png)'
  id: totrans-124
  prefs: []
  type: TYPE_IMG
  zh: '![](img/56f8df48-eb9b-4635-bd71-a7dadadde700.png)'
- en: In each of the recently downloaded files, we can find a file with the name `FFIEC
    CDR Call Bulk POR mmddyyyy.txt`.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 在最近下载的每个文件中，我们都可以找到一个名为`FFIEC CDR Call Bulk POR mmddyyyy.txt`的文件。
- en: This file contains all the information about each bank. First, we use them to
    assign an `ID RSSD` number for each bank in the failed bank list. Then, we can
    join the financial ratios with the list of failed banks using the `ID RSSD` field.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 这个文件包含了关于每家银行的全部信息。首先，我们使用它们为破产银行列表中的每家银行分配一个`ID RSSD`号码。然后，我们可以使用`ID RSSD`字段将财务比率与破产银行列表连接起来。
- en: Once you have downloaded the files, list all the available files in your system
    using the `list.files` function.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 下载完文件后，使用`list.files`函数列出您系统中的所有可用文件。
- en: 'We need to find all the files that contain `FFIEC CDR Call Bulk POR` in their
    names:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要找到所有名称中包含`FFIEC CDR Call Bulk POR`的文件：
- en: '[PRE28]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Now, we will read all the files into R and merge them into one data frame called
    `IDs`.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将所有文件读入R中，并将它们合并到一个名为`IDs`的数据框中：
- en: Additionally, a new column is created called `year`. This column reflects the
    year of the corresponding information. We need to store the `IDs` and the date
    because identifiers can change over the time. For example, changes could occur
    when two banks merge; one of the bank's will disappear in the dataset and the
    other can maintain the same number or get a new number.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，还创建了一个名为`year`的新列。这个列反映了对应信息的年份。我们需要存储`IDs`和日期，因为标识符可能会随时间变化。例如，当两家银行合并时，其中一家银行将在数据集中消失，而另一家可以保持相同的号码或获得一个新的号码。
- en: 'You can create a new empty frame called `IDs`, as follows:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以创建一个名为`IDs`的新空框架，如下所示：
- en: '[PRE29]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Then, we iteratively read all the text files and merge them together in this
    `IDs` data frame:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们迭代地读取所有文本文件，并将它们合并到这个`IDs`数据框中：
- en: '[PRE30]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Let''s print the resulting table, as follows:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们按照以下方式打印出结果表：
- en: '[PRE31]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: Now, a master table containing the `ID RSSD` frame and the `Certificate number`
    column of each bank over the time is available.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，一个包含`ID RSSD`框架和每个银行随时间变化的`Certificate number`列的主表已经可用。
- en: 'You can remove the irrelevant information as follows:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以按照以下方式删除无关信息：
- en: '[PRE32]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Next, we''ll merge the `failed banks` list and the `IDs` dataset using the
    certificate date, but first, we need to convert the certificate numbers into a
    numeric format in both datasets:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将使用证书日期将`failed banks`名单和`IDs`数据集合并，但在合并之前，我们需要将两个数据集中的证书号码转换为数值格式：
- en: '[PRE33]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: If we try to merge the list of failed banks with the `IDs` dataset, we will
    find a problem. In the `failed banks` list we have a column indicating the year
    when a bank went bankrupt, which will not be found in the table `IDs` if we join
    both tables using the column year.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们尝试将失败银行名单与`IDs`数据集合并，我们会发现一个问题。在`failed banks`名单中有一个表示银行破产年份的列，如果我们使用年份列将两个表连接起来，则不会在`IDs`表中找到这个列。
- en: As the `IDs` snapshot corresponds to December of each year, a failed bank cannot
    already be found at the end of this specific year.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 由于`IDs`快照对应于每年的12月，因此一家失败的银行不可能在这一特定年份的年底就已经存在。
- en: 'In order to merge both datasets correctly, create a new variable (`id_year`)
    in the `failed banks` dataset, subtracting one year from the `year` column:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 为了正确合并两个数据集，在`failed banks`数据集中创建一个新的变量（`id_year`），从`year`列中减去一年：
- en: '[PRE34]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'The failed banks are now joined with the `IDs` information using the `merge`
    function. Using this function is easy; you only need to specify both tables and
    the name of the columns used to make the join:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 现在失败的银行已经使用`merge`函数与`IDs`信息连接起来。使用这个函数很简单；你只需要指定两个表以及用于连接的列名：
- en: '[PRE35]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'A new backup of the workspace is done as follows:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 工作空间的新备份操作如下：
- en: '[PRE36]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Now, it is possible to merge the database containing financial statements with
    the list of failed banks and to then create the target variable. We will join
    both tables using the `ID RSSD` identifier:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，可以将包含财务报表的数据库与失败银行名单合并，然后创建目标变量。我们将使用`ID RSSD`标识符将两个表连接起来：
- en: '[PRE37]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'Two new columns are included in the database: `CERT` and `Closing.Date`. The
    preceding code alerted us to a previously non-detected duplicated column. So,
    we should remove one of the duplicated columns. Using the `grep` function, we
    will obtain the number of columns where the `UBPR4340` variable is present:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 数据库中增加了两个新列：`CERT`和`Closing.Date`。前面的代码提醒我们之前未检测到的重复列。因此，我们应该删除其中一个重复的列。使用`grep`函数，我们将获得包含`UBPR4340`变量的列数：
- en: '[PRE38]'
  id: totrans-154
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'Remove the second column where the repeated variable appears:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 删除出现重复变量的第二列：
- en: '[PRE39]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'When a missing value is found in any of these two new variables (`CERT` and
    `Closing.Date`) it implies that this bank continues operating in the US financial
    system. On the other hand, if a bank contains information in these variables it
    implies that this bank failed. We can see how many failed observations are in
    our database:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 当这两个新变量（`CERT`和`Closing.Date`）中的任何一个发现缺失值时，这表明这家银行在美国金融体系中仍在运营。另一方面，如果一家银行在这些变量中包含信息，则表明这家银行已经破产。我们可以看到数据库中有多少失败的观测值：
- en: '[PRE40]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: There are `3.705` observations corresponding to failed banks in the dataset.
    As you can see, the number of failed observations makes up a small part of total
    observations.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 数据集中有`3.705`个与失败银行对应的观测值。正如你所看到的，失败观测值的数量占总观测值的一小部分。
- en: 'Failed observations do not represent unique failed banks. It means that a failed
    bank has different financial statements some time before it finally goes to bankrupt.
    For example, for the bank mentioned in the following code block, different years
    of financial information are available. According to our database, this bank went
    bankrupt in 2010:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 失败的观测值不代表独特的失败银行。这意味着一家失败的银行在最终破产之前的一段时间内有不同的财务报表。例如，对于以下代码块中提到的银行，有不同年份的财务信息可用。根据我们的数据库，这家银行在2010年破产：
- en: '[PRE41]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: We should assess the time horizon of our predictive model. The higher the difference
    between the information date and the closing date, the lower the expected predictive
    power of our model. The explanation is quite simple; it is more difficult to forecast
    the failure of a bank from the current information in, for example, five years'
    time than in only one or two years' time.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 我们应该评估我们预测模型的时间范围。信息日期和关闭日期之间的差异越大，我们模型的预期预测能力就越低。解释相当简单；从五年前的当前信息预测银行的失败比从一两年前的信息预测更困难。
- en: 'Let''s calculate the difference between the closing and the financial statements
    dates:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们计算一下资产负债表日期之间的差异：
- en: '[PRE42]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: What will our target variable be? What do we want to predict? Well, we could
    develop a model to predict bankruptcies in the next six months, one year, or even
    five years after the current financial information.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的目标变量会是什么？我们想要预测什么？好吧，我们可以开发一个模型来预测在当前财务信息之后的六个月、一年甚至五年内的破产情况。
- en: The definition of the target variable should be done according to the purpose
    of the model, but also taking into account the number of failed banks or *bad*
    banks in the sample.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 目标变量的定义应根据模型的目的进行，同时也要考虑到样本中失败银行或*不良*银行的数目。
- en: The standard period is different depending on the portfolio, the model's purpose,
    and the sample of *bad* banks or the minority class, which should be large enough
    to develop a robust model.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 标准期限根据投资组合、模型的目的以及*不良*银行或少数群体的样本而有所不同，这个样本应该足够大，以便开发一个稳健的模型。
- en: The definition of the time horizon is very important, determining the objective
    of our model and its future use.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 时间跨度的定义非常重要，它决定了我们模型的目标及其未来的用途。
- en: 'For example, we can classify as *bad* those banks that failed less than a year
    after the financial statements in the dataset:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，我们可以将数据集中在财务报表后不到一年就失败的银行归类为*不良*银行：
- en: '[PRE43]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'According to this definition, the number of *bad* banks will be as follows:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 根据这个定义，*不良*银行的数目将如下：
- en: '[PRE44]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: Only `476` banks in the dataset failed less than one year after the observed
    financial information.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 数据集中只有`476`家银行在观察到财务信息后不到一年就失败了。
- en: 'For example, the following bank failed only half of a year after the observed
    financial information:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，以下银行在观察到财务信息后仅半年就失败了：
- en: '[PRE45]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'At this point, a new backup of the workspace is made:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一点上，对工作空间进行了一次新的备份：
- en: '[PRE46]'
  id: totrans-177
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: In this problem, we have seen that most of the banks are **solvent** and these
    banks are repeated in the sample several times, although with different financial
    statements.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个问题中，我们看到了大多数银行都是**有偿付能力的**，这些银行在样本中多次重复出现，尽管财务报表不同。
- en: However, it is not relevant to keep all the good banks in the sample and increase
    the importance of *bad* banks. There are some techniques to deal with this problem.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，保留样本中的所有良好银行并增加*不良*银行的重要性并不相关。有一些技术可以处理这个问题。
- en: One of them could be to assign different weights to each good and bad observation
    in such a way that two classes can be more balanced. This approach, although useful,
    makes the execution of the machine learning algorithms much more time consuming
    because we will be using the entire dataset, which in our case, is more than 100,00
    observations.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 其中一个方法是为每个良好和不良观察值分配不同的权重，以便两个类别可以更加平衡。这种方法虽然有用，但会使机器学习算法的执行变得耗时得多，因为我们将会使用整个数据集，在我们的案例中，这超过了10万个观察值。
- en: 'Very unbalanced classes, as we find in this problem, can impact model fitting
    in a negative way. In order to keep all the observations, it is very common to
    subsample the data. Three main techniques are usually carried out:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 类别非常不平衡，正如我们在这个问题中发现的那样，可能会以负面方式影响模型拟合。为了保留所有观察值，数据子采样是非常常见的。通常执行三种主要技术：
- en: '**Undersampling**: This is perhaps the simplest strategy. It consists of randomly
    reducing the majority class to the same size of the minority class. By undersampling,
    the imbalance issue is solved, but in general, we reduce the dataset, especially
    in cases where the minority class is very scarce. If this is the case, it is very
    likely that model results will be poor.'
  id: totrans-182
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**欠采样**：这可能是最简单的策略。它包括随机减少多数类到与少数类相同的大小。通过欠采样，不平衡问题得到了解决，但通常情况下，我们会减少数据集，特别是在少数类非常稀缺的情况下。如果这种情况发生，模型结果很可能会很糟糕。'
- en: '**Oversampling**: The minority class is randomly selected many times to reach
    the same size of the majority class. The most common way to do this is to replicate
    the minority observations several times. Oversampling could be problematic at
    this point of the problem solution, where we have not already selected what data
    will be used for training or testing our future algorithms. We will be duplicating
    examples of the minority that could be found in the future in both training and
    validation sets, resulting in both overfitting and misleading results.'
  id: totrans-183
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**过采样**：通过多次随机选择少数类来达到多数类的相同大小。最常见的方法是多次复制少数观测。在问题解决方案的这个阶段，我们还没有选择用于训练或测试未来算法的数据，过采样可能会出现问题。我们将在训练集和验证集中重复未来可能发现的少数类示例，从而导致过拟合和误导性结果。'
- en: '**Other techniques**: Techniques such as **Synthetic Minority Over-sampling
    Technique** (**SMOTE**) and **Random Over-Sampling Examples** (**ROSE**) reduce
    the majority class and create artificially new observations in the minority class.'
  id: totrans-184
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**其他技术**：如**合成少数过采样技术**（**SMOTE**）和**随机过采样示例**（**ROSE**）等技术减少多数类，并在少数类中创建人工新观测。'
- en: In this case, we'll follow a hybrid approach.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，我们将采用一种混合方法。
- en: 'To make some of the following steps easier, we''ll rename the first column,
    which contains the identifier of each bank:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使以下步骤更容易，我们将重命名包含每个银行标识符的第一列：
- en: '[PRE47]'
  id: totrans-187
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'Now we will treat failed and non-failed banks in a different way. Let''s start
    with the part of the database that contains only the failed banks:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将以不同的方式处理失败和非失败的银行。让我们从只包含失败银行的数据库部分开始：
- en: '[PRE48]'
  id: totrans-189
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'There are `3705` observations containing information of failed banks:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 有`3705`个观测包含失败银行的信息：
- en: '[PRE49]'
  id: totrans-191
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'Here is what this sample looks like:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 这个样本看起来是这样的：
- en: '[PRE50]'
  id: totrans-193
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: As it is displayed, in the list of failed banks we have financial information
    for several years for the same banks. The closer financial information to the
    bankruptcy date for each bank will be finally selected.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 如显示的那样，在失败银行的列表中，我们有几个年份的相同银行的财务信息。每个银行距离破产日期最近的财务信息将被最终选中。
- en: 'For that, we create an auxiliary table. This table will contain the minimum
    distance of a bank observation to the failure date. For that purpose, we''ll now
    use a useful package, `sqldf`. This package allows us to write queries as if we
    are using the SQL language:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 为了做到这一点，我们创建一个辅助表。这个表将包含银行观测到失败日期的最小距离。为此，我们现在将使用一个有用的包，`sqldf`。这个包允许我们像使用SQL语言一样编写查询：
- en: '[PRE51]'
  id: totrans-196
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'Now, our sample with failed banks and this auxiliary table are merged together:'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们的包含失败银行的样本与这个辅助表合并在一起：
- en: '[PRE52]'
  id: totrans-198
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: 'Then, we will only select observations where the differences between the financial
    statement date and the closing date are the same as the `min_diff` column:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们只选择财务报表日期与截止日期之间的差异与`min_diff`列相同的观测：
- en: '[PRE53]'
  id: totrans-200
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'The recently created columns are removed as follows:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 按以下方式删除最近创建的列：
- en: '[PRE54]'
  id: totrans-202
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: Now we want to reduce the number of non-failed banks. For that purpose, we select
    one year of financial statements for each bank at random.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们想要减少非失败银行的数目。为此，我们随机选择每个银行的财务报表的一年：
- en: 'The total observations of non-failed banks is extracted with the following
    code:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下代码提取非失败银行的观测总数：
- en: '[PRE55]'
  id: totrans-205
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: 'To randomly select financial statements, we should follow these steps:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 为了随机选择财务报表，我们应该遵循以下步骤：
- en: 'First, establish a `seed`. A seed is needed to obtain reproducible results
    when random numbers are generated. Using the same `seed` will allow you to obtain
    the same results as those described in this book:'
  id: totrans-207
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，建立一个`种子`。在生成随机数时，需要一个种子来获得可重复的结果。使用相同的`种子`将允许你获得与本书中描述的相同的结果：
- en: '[PRE56]'
  id: totrans-208
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: 'Generate random numbers; we generate as many random numbers as the number of
    rows existing in the non-failed banks dataset:'
  id: totrans-209
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 生成随机数；我们生成的随机数数量与非失败银行数据集中的行数相同：
- en: '[PRE57]'
  id: totrans-210
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: 'Add the random numbers to the database as a new column:'
  id: totrans-211
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将随机数作为新列添加到数据库中：
- en: '[PRE58]'
  id: totrans-212
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: 'The maximum random number of each bank is calculated and a new data frame called
    `max` is created:'
  id: totrans-213
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 计算每个银行的随机数最大值，并创建一个新的名为`max`的数据框：
- en: '[PRE59]'
  id: totrans-214
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: 'Join the data frame with the non-failed banks to the `max` data frame. Then,
    only the observations where the random number is the same as the maximum value
    for each bank is selected:'
  id: totrans-215
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将非失败银行的数据框与`max`数据框连接。然后，只选择随机数与每个银行最大值相同的观测：
- en: '[PRE60]'
  id: totrans-216
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: 'Remove the irrelevant columns as follows:'
  id: totrans-217
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按以下方式删除无关的列：
- en: '[PRE61]'
  id: totrans-218
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: 'Using the `dim` function, we can obtain the number of observations of non-failed
    banks. You can see the number of *good* banks has been significantly reduced:'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE62]'
  id: totrans-220
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: There are only `9654` observations and `1496` variables.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
- en: 'Therefore, we can finally build our dataset to develop our model by combining
    both previous data frames:'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE63]'
  id: totrans-223
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: 'The target variable can now be defined as well:'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE64]'
  id: totrans-225
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: 'The rest of the objects loaded in the workspace can be removed, as follows:'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE65]'
  id: totrans-227
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: It is usually possible to use current variables to define new features and then
    include them in the development. These new variables are usually named **derived
    variables**. Thus, we can define derived variables as new variables calculated
    from one or more base variables.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
- en: A very intuitive example is the calculation of a variable named `age` from a
    dataset with information about different customers. This variable could be calculated
    as the difference between the date when this customer is stored in the system
    and their birth date.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
- en: New variables should add useful and non-redundant information that will facilitate
    the subsequent learning and will help in generalizing steps.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
- en: Feature generation should not be confused with feature extraction. Feature extraction
    is related to dimensionality reduction as it transforms original features and
    selects a subset from the pool of potential original and derived features that
    can be used in our model.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
- en: However, in the problem we are dealing with, it is not very relevant to build
    additional variables. We have a very large dataset measuring all relevant aspects
    in the analysis of a financial institution.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
- en: Moreover, in this part of the development, variables that have been included
    at the data extraction or manipulation phase, but which serve no purpose for the
    model development, must be dropped.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
- en: 'Therefore, the following variables will be removed:'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE66]'
  id: totrans-235
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: 'All these steps were needed to build our database. You can see how much time
    we have spent collecting the data, the target variable, and trying to organize
    all the data in this chapter. In the next chapter, we will start with the analysis
    of our dataset. You can do one final backup before continuing, as follows:'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE67]'
  id: totrans-237
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: Summary
  id: totrans-238
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we have started collecting the data needed to develop our model
    to predict bank failures. In this case, we have downloaded a large amount of data
    and we have structured it. Moreover, we have created our target variable. At the
    end of this chapter, you should have learned that data collection is the first
    and one of the most important steps in the model development. When you deal with
    your own problems, take time to understand the problem and then think about what
    kind of data you need and how to obtain it. In the next chapter, we will do a
    descriptive analysis of the data that we have acquired.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
