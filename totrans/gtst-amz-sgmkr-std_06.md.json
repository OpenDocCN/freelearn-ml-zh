["```py\ndata_url='https://archive.ics.uci.edu/ml/machine-learning-databases/auto-mpg/auto-mpg.data'\ncol_names=['mpg','cylinders', 'displacement', 'horsepower', 'weight', 'acceleration', 'model_year', 'origin', 'car_name']\ndf=pd.read_csv(data_url, delimiter='\\s+', header=None, names=col_names, na_values='?')\ndf['car_name']=df['car_name'].astype('string')\n```", "```py\nd_df = {}\nfor yr in df['model_year'].unique():\n    print(yr)\n    d_df[str(yr)]=df[df['model_year']==yr]\n    d_df[str(yr)]['event_time']=datetime.datetime(1900+yr, 1, 1, 8, 0, 0).timestamp()\n```", "```py\n    from sagemaker.feature_store.feature_group import FeatureGroup\n    feature_group = FeatureGroup(name=feature_group_name, sagemaker_session=sess)\n    ```", "```py\nfeature_group.load_feature_definitions(data_frame=d_df['70'])\n[FeatureDefinition(feature_name='mpg', feature_type=<FeatureTypeEnum.FRACTIONAL: 'Fractional'>),\n FeatureDefinition(feature_name='cylinders', feature_type=<FeatureTypeEnum.INTEGRAL: 'Integral'>),\n FeatureDefinition(feature_name='displacement', feature_type=<FeatureTypeEnum.FRACTIONAL: 'Fractional'>),\n FeatureDefinition(feature_name='horsepower', feature_type=<FeatureTypeEnum.FRACTIONAL: 'Fractional'>),\n FeatureDefinition(feature_name='weight', feature_type=<FeatureTypeEnum.FRACTIONAL: 'Fractional'>),\n FeatureDefinition(feature_name='acceleration', feature_type=<FeatureTypeEnum.FRACTIONAL: 'Fractional'>),\n FeatureDefinition(feature_name='model_year', feature_type=<FeatureTypeEnum.INTEGRAL: 'Integral'>),\n FeatureDefinition(feature_name='origin', feature_type=<FeatureTypeEnum.INTEGRAL: 'Integral'>),\n FeatureDefinition(feature_name='car_name', feature_type=<FeatureTypeEnum.STRING: 'String'>),\n FeatureDefinition(feature_name='event_time', feature_type=<FeatureTypeEnum.FRACTIONAL: 'Fractional'>)]\n```", "```py\n    record_identifier_feature_name = 'car_name'\n    event_time_feature_name = 'event_time'\n    feature_group.create(\n        s3_uri=f's3://{bucket}/{prefix}',\n        record_identifier_name=record_identifier_feature_name,\n        event_time_feature_name=event_time_feature_name,\n        role_arn=role,\n        enable_online_store=True,\n        description=description\n    )\n    ```", "```py\nfor yr, df_auto in d_df.items():\n    print(yr)\n    print(df_auto.shape)\n    feature_group.ingest(data_frame=df_auto, max_workers=1, max_processes = 1, wait=True)\n```", "```py\ncar_name = 'amc concord'\nfeaturestore_runtime =  sess.boto_session.client(service_name='sagemaker-featurestore-runtime', \n                                                 region_name=region)\nsample_record = featurestore_runtime.get_record(\n    FeatureGroupName=feature_group_name, RecordIdentifierValueAsString=car_name\n) \nsample_record\n```", "```py\nrecord = [{'FeatureName': 'mpg', \n           'ValueAsString': str(mpg)},\n          {'FeatureName':'cylinders', \n           'ValueAsString': str(cylinders)},\n          {'FeatureName':'displacement', \n           'ValueAsString': str(displacement)}, \n          {'FeatureName': 'horsepower', \n           'ValueAsString': str(horsepower)},\n          {'FeatureName': 'weight', \n           'ValueAsString': str(weight)},\n          {'FeatureName': 'acceleration', \n           'ValueAsString': str(acceleration)},\n          {'FeatureName': 'model_year', \n           'ValueAsString': str(model_year)},\n          {'FeatureName': 'origin', \n           'ValueAsString': str(origin)},\n           'ValueAsString': str(car_name)},\n          {'FeatureName': 'event_time', \n           'ValueAsString': str(int(round(time.time())))}]\nfeaturestore_runtime.put_record(FeatureGroupName=feature_group_name, \n                                Record=record)\n```", "```py\nquery = feature_group.athena_query()\ntable_name = query.table_name\nquery_string = ('SELECT * FROM \"%s\"' % table_name)\nquery.run(\n        query_string=query_string,\n        output_location=f's3://{bucket}/{prefix}/query_results/')\nquery.wait()\ndataset = query.as_DataFrame()\n```", "```py\nquery_string_2 = '''\nSELECT * FROM \"%s\" WHERE model_year < 79\n''' % table_name\n```", "```py\nquery_string_3 = '''\nSELECT *\nFROM\n    (SELECT *,\n         row_number()\n        OVER (PARTITION BY car_name\n    ORDER BY  event_time desc, Api_Invocation_Time DESC, write_time DESC) AS row_number\n    FROM \"%s\"\n    where event_time < %.f)\nWHERE row_number = 1 and\nNOT is_deleted\n''' % (table_name, datetime.datetime(1979, 1, 1, 8, 0, 0).timestamp())\n```", "```py\ncar_name = 'amc gremlin'\nfeaturestore_runtime =  sess.boto_session.client(service_name='sagemaker-featurestore-runtime', region_name=region)\namc_gremlin = featurestore_runtime.get_record(\n    FeatureGroupName=feature_group_name, \n    RecordIdentifierValueAsString=car_name\n)\namc_gremlin['Record']\n[{'FeatureName': 'mpg', 'ValueAsString': '20.0'},\n {'FeatureName': 'cylinders', 'ValueAsString': '6'},\n {'FeatureName': 'displacement', 'ValueAsString': '232.0'},\n {'FeatureName': 'horsepower', 'ValueAsString': '100.0'},\n {'FeatureName': 'weight', 'ValueAsString': '2914.0'},\n {'FeatureName': 'acceleration', 'ValueAsString': '16.0'},\n {'FeatureName': 'model_year', 'ValueAsString': '75'},\n {'FeatureName': 'origin', 'ValueAsString': '1'},\n {'FeatureName': 'car_name', 'ValueAsString': 'amc gremlin'},\n {'FeatureName': 'event_time', 'ValueAsString': '157795200.0'}]\n```", "```py\ncar_names = ['amc gremlin', 'amc concord', 'dodge colt']\nfeature_names = ['cylinders', 'displacement', 'horsepower'] \nsample_batch_records=featurestore_runtime.batch_get_record(\n   Identifiers=[\n     {'FeatureGroupName': feature_group_name,\n       'RecordIdentifiersValueAsString': car_names,\n       'FeatureNames': feature_names},\n   ]\n)\nsample_batch_records['Records'][0]['Record'] # indexing first record\n[{'FeatureName': 'cylinders', 'ValueAsString': '4'},\n {'FeatureName': 'displacement', 'ValueAsString': '151.0'},\n {'FeatureName': 'horsepower', 'ValueAsString': '90.0'}]\n```"]