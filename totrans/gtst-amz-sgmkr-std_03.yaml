- en: '*Chapter 2*: Introducing Amazon SageMaker Studio'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第二章*：介绍 Amazon SageMaker Studio'
- en: As we just learned in [*Chapter 1*](B17447_01_ePub_RK.xhtml#_idTextAnchor013),
    *Machine Learning and Its Life Cycle in the Cloud*, an ML life cycle is complex
    and iterative. Steps can be quite manual even though most things are done with
    coding. Having the right tool for an ML project is essential for you to be successful
    in delivering ML models for production in the cloud. With this chapter, you are
    in the right place! Amazon SageMaker Studio is a purpose-built ML **Integrated
    Development Environment** (**IDE**) that offers features covering an end-to-end
    ML life cycle to make developers' and data scientists' jobs easy in the AWS Cloud.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们刚刚在[*第一章*](B17447_01_ePub_RK.xhtml#_idTextAnchor013)，“云中的机器学习及其生命周期”中学习的，机器学习生命周期是复杂且迭代的。尽管大多数事情都是通过编码完成的，但步骤可能相当手动。对于机器学习项目来说，拥有合适的工具对于你在云中成功交付机器学习模型至关重要。通过本章，你将处于正确的位置！Amazon
    SageMaker Studio 是一个专为机器学习设计的**集成开发环境**（**IDE**），它提供了覆盖端到端机器学习生命周期的功能，使开发人员和数据科学家在
    AWS 云中的工作变得容易。
- en: 'In this chapter, we will cover the following:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下内容：
- en: Introducing SageMaker Studio and its components
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 介绍 SageMaker Studio 及其组件
- en: Setting up SageMaker Studio
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置 SageMaker Studio
- en: Walking through the SageMaker Studio UI
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 漫步 SageMaker Studio 用户界面
- en: Demystifying SageMaker Studio notebooks, instances, and kernels
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 揭秘 SageMaker Studio 笔记本、实例和内核
- en: Using the SageMaker Python SDK
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 SageMaker Python SDK
- en: Technical requirements
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: For this chapter, you will need to have an AWS account. If you don't have one,
    please revisit the *Setting up AWS environment* section in [*Chapter 1*](B17447_01_ePub_RK.xhtml#_idTextAnchor013),
    *Machine Learning and Its Life Cycle in the Cloud*.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 对于本章，您需要一个 AWS 账户。如果您还没有，请回顾[*第一章*](B17447_01_ePub_RK.xhtml#_idTextAnchor013)，“云中的机器学习及其生命周期”中的*设置
    AWS 环境*部分。
- en: Introducing SageMaker Studio and its components
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍 SageMaker Studio 及其组件
- en: 'Amazon SageMaker is an ML service from AWS that has features dedicated to each
    phase of an ML life cycle that we discussed in [*Chapter 1*](B17447_01_ePub_RK.xhtml#_idTextAnchor013),
    *Machine Learning and Its Life Cycle in the Cloud*. Amazon SageMaker Studio is
    an ML IDE designed for end-to-end ML development with Amazon SageMaker. You can
    access Amazon SageMaker features using the SageMaker Studio IDE or using the SageMaker
    Python SDK, as we will discuss in the *Using SageMaker Python SDK* section. The
    following chart provides an overview:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon SageMaker 是 AWS 提供的机器学习服务，具有针对我们在[*第一章*](B17447_01_ePub_RK.xhtml#_idTextAnchor013)，“云中的机器学习及其生命周期”中讨论的机器学习生命周期每个阶段的专用功能。Amazon
    SageMaker Studio 是一个专为使用 Amazon SageMaker 进行端到端机器学习开发设计的机器学习 IDE。您可以使用 SageMaker
    Studio IDE 或使用 SageMaker Python SDK 访问 Amazon SageMaker 功能，正如我们将在*使用 SageMaker
    Python SDK*部分讨论的那样。以下图表提供了一个概述：
- en: '![Figure 2.1 – Amazon SageMaker Studio overview – four pillars represent the
    four stages in the ML life cycle'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.1 – Amazon SageMaker Studio 概览 – 四个支柱代表机器学习生命周期的四个阶段]'
- en: '](img/B17447_02_01.jpg)'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/B17447_02_01.jpg]'
- en: Figure 2.1 – Amazon SageMaker Studio overview – four pillars represent the four
    stages in the ML life cycle
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.1 – Amazon SageMaker Studio 概览 – 四个支柱代表机器学习生命周期的四个阶段
- en: This chart highlights the SageMaker components that are covered in the book.
    Let's first walk through at a high level for each component in the ML life cycle
    stages in this chapter. Then, I will provide pointers to the later chapters.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 本图表突出了书中涵盖的 SageMaker 组件。让我们首先从本章对每个组件在机器学习生命周期各个阶段的概述开始。然后，我将提供指向后续章节的指南。
- en: Prepare
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备
- en: Amazon SageMaker Studio helps data scientists and developers build high-quality
    datasets for ML quickly. You can use the following features to explore, process,
    transform, aggregate data, and store processed data or ML features in a central
    repository.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon SageMaker Studio 帮助数据科学家和开发者快速构建高质量的机器学习数据集。您可以使用以下功能来探索、处理、转换数据，并将处理后的数据或机器学习特征存储在中央存储库中。
- en: SageMaker Data Wrangler
  id: totrans-18
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: SageMaker 数据整理器
- en: '**Amazon SageMaker Data Wrangler** helps developers explore and build a dataset
    for ML in a fast, easy, and repeatable manner. SageMaker Data Wrangler puts the
    data preparation workflow – importing from various cloud storage and data warehouses,
    aggregating multiple tables, understanding data bias and target leakage, and exploring
    data patterns with visualization – in one easy-to-use graphical interface where
    you can simply point and click to create a repeatable and portable data recipe.
    The easy-to-use graphical interface is exclusively in SageMaker Studio. SageMaker
    Data Wrangler has over 300 built-in data transformations so that you do not need
    to re-invent the wheel for typical data processing steps in ML. Besides built-in
    transformation, SageMaker Data Wrangler also supports custom transformation written
    in Python, SQL, and PySpark to enrich your data engineering steps. We will dive
    deeper into SageMaker Data Wrangler in [*Chapter 3*](B17447_03_ePub_RK.xhtml#_idTextAnchor043),
    *Data Preparation with SageMaker Data Wrangler*.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '**Amazon SageMaker Data Wrangler** 帮助开发者以快速、简便和可重复的方式探索和构建机器学习（ML）的数据集。SageMaker
    Data Wrangler 将数据准备工作流程——从各种云存储和数据仓库导入、聚合多个表、理解数据偏差和目标泄露，以及使用可视化探索数据模式——集成在一个易于使用的图形界面中，您只需简单地点击即可创建可重复和可移植的数据配方。易于使用的图形界面仅限于
    SageMaker Studio。SageMaker Data Wrangler 拥有超过 300 个内置数据转换，因此您无需在机器学习的典型数据处理步骤中重新发明轮子。除了内置转换外，SageMaker
    Data Wrangler 还支持使用 Python、SQL 和 PySpark 编写的自定义转换，以丰富您的数据工程步骤。我们将在 [*第 3 章*](B17447_03_ePub_RK.xhtml#_idTextAnchor043)
    中深入了解 SageMaker Data Wrangler，即 *使用 SageMaker Data Wrangler 进行数据准备*。'
- en: SageMaker Clarify
  id: totrans-20
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: SageMaker Clarify
- en: '**Amazon SageMaker Clarify** helps developers discover underlying bias in the
    training data and explain feature importance from a model prediction. **Data bias**
    is an imbalance in the training data across different groups and categories, such
    as age and education level, that is introduced to the training data due to a sampling
    error or other intricate reasons. Data bias is often neglected until a trained
    model makes incorrect or unfair predictions against a certain group. It is well
    understood that a model will learn what is present in the data, including any
    bias, and will replicate that bias in its inferences. It is more critical than
    ever to be able to discover the inherent biases in the data early and take action
    to address them. SageMaker Clarify computes various metrics to measure the bias
    in the data so that you do not have to be an expert in the science of ML bias.
    SageMaker Clarify integrates with Amazon SageMaker Data Wrangler so you can detect
    bias in the preparation phase. SageMaker Clarify also integrates with **Amazon
    SageMaker Experiments** and **Amazon SageMaker Model Monitor** so that you can
    identify bias and feature importance in a trained model and inference data in
    production. We will learn more about SageMaker Clarify in [*Chapter 6*](B17447_06_ePub_RK.xhtml#_idTextAnchor090)*,
    Detecting ML Bias and Explaining Models with SageMaker Clarify*.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '**Amazon SageMaker Clarify** 帮助开发者发现训练数据中的潜在偏差，并从模型预测中解释特征重要性。**数据偏差**是指由于抽样错误或其他复杂原因导致的不同群体和类别（如年龄和教育水平）在训练数据中的不平衡。数据偏差通常直到训练模型对某个群体做出错误或不公平的预测时才会被忽视。众所周知，模型将学习数据中存在的内容，包括任何偏差，并将其复制到其推断中。能够早期发现数据中的固有偏差并采取行动解决它们比以往任何时候都更加重要。SageMaker
    Clarify 计算各种指标来衡量数据中的偏差，这样您就不必成为机器学习偏差科学的专家。SageMaker Clarify 与 Amazon SageMaker
    Data Wrangler 集成，以便您可以在准备阶段检测偏差。SageMaker Clarify 还与 **Amazon SageMaker Experiments**
    和 **Amazon SageMaker Model Monitor** 集成，以便您可以在训练模型和推理数据中识别偏差和特征重要性。我们将在 [*第 6
    章*](B17447_06_ePub_RK.xhtml#_idTextAnchor090) 中了解更多关于 SageMaker Clarify 的信息，即
    *使用 SageMaker Clarify 检测机器学习偏差和解释模型*。'
- en: SageMaker Processing
  id: totrans-22
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: SageMaker Processing
- en: '**Amazon SageMaker Processing** is a feature that runs your scripts and containers
    in SageMaker''s fully managed compute instances instead of your limited local
    compute resource. It is designed to make data processing and model evaluation
    easy and scalable. It is flexible so that developers can use it to run any code
    at any time in the ML life cycle. SageMaker Processing is also integrated with
    several SageMaker features as the compute backbone. SageMaker Data Wrangler uses
    SageMaker Processing to execute your SageMaker Data Wrangler data recipe and save
    the processed features into storage. SageMaker Clarify uses SageMaker Processing
    to compute the bias metrics and feature importance. SageMaker Model Monitor, which
    will be discussed in the *Deploy* section later in this chapter, uses SageMaker
    Processing to compute the data drift. SageMaker Autopilot, which will be discussed
    in the *Build* section shortly, uses SageMaker Processing for data exploration
    and feature engineering.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '**Amazon SageMaker Processing** 是一个功能，它可以在 SageMaker 的完全托管计算实例中运行您的脚本和容器，而不是您的有限本地计算资源。它旨在使数据处理和模型评估变得简单且可扩展。它具有灵活性，因此开发人员可以在
    ML 生命周期的任何时间运行任何代码。SageMaker Processing 还与几个 SageMaker 功能集成，作为计算骨干。SageMaker Data
    Wrangler 使用 SageMaker Processing 来执行您的 SageMaker Data Wrangler 数据配方，并将处理后的特征保存到存储中。SageMaker
    Clarify 使用 SageMaker Processing 来计算偏差指标和特征重要性。将在本章后面的 *部署* 部分讨论的 SageMaker Model
    Monitor 使用 SageMaker Processing 来计算数据漂移。将在接下来的 *构建* 部分讨论的 SageMaker Autopilot
    使用 SageMaker Processing 进行数据探索和特征工程。'
- en: SageMaker Feature Store
  id: totrans-24
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: SageMaker 特征存储
- en: '**Amazon SageMaker Feature Store** is a fully managed ML feature repository
    that allows ML developers to store, update, query, and share ML features among
    other ML developers with governance. Having a central feature repository as a
    single source of features in an organization where many teams are collaborating
    on feature engineering but go on to create their own models speeds up the development
    of the models, as features can now be shared and reused across teams, as well
    as applications for both training and inferencing. It reduces the feature development
    time and waste of effort for teams. SageMaker Feature Store offers both **online**
    and **offline feature stores** for real-time, low-latency ML inference use and
    for querying batch data for model training, respectively. SageMaker Feature Store
    also has versioning and time travel to allow developers to reuse features and
    audit past model training and inferences. We will explore more about SageMaker
    Feature Store in [*Chapter 4*](B17447_04_ePub_RK.xhtml#_idTextAnchor063)*, Building
    a Feature Repository with SageMaker Feature Store* .'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '**Amazon SageMaker Feature Store** 是一个完全托管的 ML 特征存储库，允许 ML 开发人员存储、更新、查询和与其他
    ML 开发人员共享 ML 特征，并具有治理功能。在许多团队协作进行特征工程但继续创建他们自己的模型组织中，拥有一个中央特征存储库作为特征的单一来源，可以加快模型开发的速度，因为现在特征可以在团队之间以及用于训练和推理的应用程序中共享和重用。它减少了团队的特征开发时间和努力浪费。SageMaker
    Feature Store 提供了 **在线** 和 **离线特征存储**，分别用于实时、低延迟的 ML 推理和查询用于模型训练的批量数据。SageMaker
    Feature Store 还具有版本控制和时间旅行功能，允许开发人员重用特征并审计过去模型训练和推理。我们将在 [*第 4 章*](B17447_04_ePub_RK.xhtml#_idTextAnchor063)*，使用
    SageMaker Feature Store 构建特征存储库* 中进一步探讨 SageMaker Feature Store。'
- en: Build
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 构建
- en: Amazon SageMaker Studio as an IDE for ML has many features and functionalities
    that can help you build ML models depending on your use case and project complexity.
    Heard of an ML algorithm but not sure how to implement it? Amazon SageMaker Studio
    has **low to no-code options** – automatic ML (**autoML**), pre-built ML solutions,
    and built-in training algorithms – to help you build a complex ML model and solution
    by simply plugging in your data. A SageMaker Studio notebook re-invents the way
    you develop ML models with Jupyter notebooks.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 作为 ML IDE 的 Amazon SageMaker Studio 具有许多功能和功能，可以帮助您根据您的用例和项目复杂度构建 ML 模型。听说过
    ML 算法但不确定如何实现它？Amazon SageMaker Studio 提供了 **低到无代码选项** – 自动 ML（**autoML**）、预构建的
    ML 解决方案和内置训练算法 – 通过简单地插入您的数据，帮助您构建复杂的 ML 模型和解决方案。SageMaker Studio 笔记本重新发明了您使用
    Jupyter 笔记本开发 ML 模型的方式。
- en: SageMaker Autopilot
  id: totrans-28
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: SageMaker 自动驾驶
- en: '**Amazon SageMaker Autopilot** explores, transforms data, and trains and tunes
    ML models automatically for your input dataset. You only need to select the dataset
    location and the target to make SageMaker Autopilot learn and predict in a simple-to-use
    graphic interface. Then, off it goes. SageMaker Autopilot provides full control
    and visibility of how the model is built. Jupyter notebooks with code and exploratory
    data analysis are given to you as well for you to understand how SageMaker Autopilot
    works under the hood. With the code available to you, you may also improve any
    step in the process and rerun the job to achieve even better results. When models
    are trained, the SageMaker Studio user interface makes it easy to browse through
    and choose the best model. You can view a leader board in SageMaker Studio, compare
    performance among the choice of an ML algorithm and other hyperparameters, and
    deploy the best model with just a couple of clicks. We will continue our exploration
    of SageMaker Autopilot in [*Chapter 8*](B17447_08_ePub_RK.xhtml#_idTextAnchor108),
    *Jumpstarting ML with SageMaker JumpStart and Autopilot*.'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '**Amazon SageMaker Autopilot** 自动探索、转换数据，并为您输入的数据集自动训练和调整机器学习模型。您只需选择数据集位置和目标，SageMaker
    Autopilot就可以通过简单易用的图形界面进行学习和预测。然后，它就会开始工作。SageMaker Autopilot提供了对模型构建过程的全面控制和可见性。同时，还提供了带有代码和探索性数据分析的Jupyter笔记本，以便您了解SageMaker
    Autopilot在底层是如何工作的。有了可用的代码，您还可以改进过程中的任何步骤，并重新运行作业以获得更好的结果。当模型训练完成后，SageMaker Studio用户界面使得浏览和选择最佳模型变得简单。您可以在SageMaker
    Studio中查看排行榜，比较所选机器学习算法和其他超参数之间的性能，并只需点击几个按钮即可部署最佳模型。我们将在[*第8章*](B17447_08_ePub_RK.xhtml#_idTextAnchor108)，“使用SageMaker
    JumpStart和Autopilot快速启动机器学习”中继续探索SageMaker Autopilot。'
- en: SageMaker JumpStart
  id: totrans-30
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: SageMaker JumpStart
- en: '**Amazon SageMaker JumpStart** makes it easy to get started with ML by providing
    a collection of solutions purposefully built for the most common use cases across
    industries and a model zoo of more than 150 popular open source deep learning
    models for computer vision and natural language processing use cases. A solution
    in SageMaker JumpStart is composed of a reference architecture for an end-to-end
    system, beyond just the ML modeling, that can be deployed to your AWS account.
    You can simply browse the catalog inside SageMaker Studio IDE for the right solution,
    deploy with one click, and see how things work together as a production system
    in the cloud. As for the ML model zoo from SageMaker JumpStart, you can also easily
    choose a model that meets your use case from the catalog and deploy with one click
    to perform inferencing on your data or in your applications. You can also fine-tune
    a model to your use case with your own dataset with training completely managed
    by SageMaker JumpStart without any coding. We will learn more about how to use
    SageMaker JumpStart in [*Chapter 8*](B17447_08_ePub_RK.xhtml#_idTextAnchor108),
    *Jumpstarting ML with SageMaker JumpStart and Autopilot*.'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '**Amazon SageMaker JumpStart** 通过提供针对行业中最常见用例精心构建的解决方案集合，以及超过150个流行的开源深度学习模型库，用于计算机视觉和自然语言处理用例，使得开始使用机器学习变得简单。SageMaker
    JumpStart中的解决方案由一个端到端系统的参考架构组成，不仅限于机器学习建模，还可以部署到您的AWS账户。您只需在SageMaker Studio IDE内部浏览目录，找到合适的解决方案，一键部署，就可以在云中看到系统如何作为一个生产系统协同工作。至于SageMaker
    JumpStart的机器学习模型库，您也可以轻松地从目录中选择满足您用例的模型，一键部署以对您的数据进行推理或在您的应用程序中执行。您还可以使用自己的数据集微调模型，SageMaker
    JumpStart完全管理训练过程，无需任何编码。我们将在[*第8章*](B17447_08_ePub_RK.xhtml#_idTextAnchor108)，“使用SageMaker
    JumpStart和Autopilot快速启动机器学习”中了解更多关于如何使用SageMaker JumpStart的信息。'
- en: SageMaker Studio notebooks
  id: totrans-32
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: SageMaker Studio笔记本
- en: On the topic of building an ML model, developers often write code in a Jupyter
    notebook for its simplicity and readability, as it captures code. The Amazon SageMaker
    Studio interface is built on top of JupyterLab, with many additional features
    designed to enhance the experience. SageMaker Studio notebooks provide an elastic
    and scalable way to write code and build ML models compared to a regular notebook
    in stock JupyterLab. For each notebook, not only can developers choose what notebook
    kernel to run the notebook, but also what compute instance to back the notebook.
    So, for a data exploration notebook, you can provision an instance that has 2
    vCPU and 4 GiB of RAM for plotting and data processing for a modest amount of
    data. Should you need to load much more data or need a GPU for quick experimentation,
    you can either create a new notebook with a different compute instance or switch
    to a different instance on the existing notebook. You can find a list of supported
    SageMaker instances in the **Studio Notebooks** tab in https://aws.amazon.com/sagemaker/pricing/.
    We will spend more time talking about the infrastructure behind SageMaker Studio
    notebooks in the *Demystifying SageMaker Studio notebooks, instances, and kernels*
    section later in this chapter, and in [*Chapter 6*](B17447_06_ePub_RK.xhtml#_idTextAnchor090),
    *Detecting ML Bias and Explaining Models with SageMaker Clarify*.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '在构建机器学习模型的话题上，开发者们通常会在Jupyter笔记本中编写代码，因为它的简洁性和可读性，它能捕捉代码。Amazon SageMaker Studio界面建立在JupyterLab之上，并集成了许多旨在增强用户体验的额外功能。与JupyterLab中的常规笔记本相比，SageMaker
    Studio笔记本提供了一种弹性且可扩展的方式来编写代码和构建机器学习模型。对于每个笔记本，开发者不仅可以选择运行笔记本的笔记本内核，还可以选择支持笔记本的计算实例。因此，对于数据探索笔记本，你可以为处理适量数据而配置一个具有2个vCPU和4
    GiB RAM的实例进行绘图和数据处理。如果你需要加载更多数据或需要GPU进行快速实验，你可以创建一个新的笔记本并使用不同的计算实例，或者切换到现有笔记本上的不同实例。你可以在https://aws.amazon.com/sagemaker/pricing/的**Studio笔记本**选项卡中找到支持的SageMaker实例列表。我们将在本章后面的*揭秘SageMaker
    Studio笔记本、实例和内核*部分，以及[*第6章*](B17447_06_ePub_RK.xhtml#_idTextAnchor090)，*使用SageMaker
    Clarify检测机器学习偏差和解释模型*中，更多地讨论SageMaker Studio笔记本背后的基础设施。 '
- en: Training algorithms
  id: totrans-34
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 训练算法
- en: Building ML models does not necessarily mean that you need to write lots of
    code. Amazon SageMaker offers 17 scalable, infrastructure-optimized, built-in
    algorithms for supervised and unsupervised problem types, and for tabular, computer
    vision, and Natural Language Processing (NLP) use cases. The **built-in algorithms**
    are designed to be used with Amazon SageMaker's fully managed compute. When training
    with the built-in algorithms, you point the algorithm and hyperparameters to a
    dataset on an S3 bucket, and SageMaker provisions training instances behind the
    scenes, takes your data and the algorithm as a Docker container to the training
    instances, and performs the training. By scalable and infrastructure-optimized,
    we mean the code base behind these algorithms is optimized for AWS compute infrastructure
    and is capable of running distributed training using multiple instances. The best
    thing about the built-in algorithms is that you do not need to write extensive
    code. We will learn more about the built-in algorithms and how to train models
    with them in [*Chapter 5*](B17447_05_ePub_RK.xhtml#_idTextAnchor077)*, Building
    and Training ML Models with SageMaker Studio IDE*.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 构建机器学习模型并不意味着你需要编写大量的代码。Amazon SageMaker提供了17种可扩展、基础设施优化的内置算法，用于监督学习和无监督学习问题类型，以及表格、计算机视觉和自然语言处理（NLP）用例。**内置算法**旨在与Amazon
    SageMaker的完全托管计算一起使用。使用内置算法进行训练时，你将算法和超参数指向S3存储桶上的数据集，SageMaker在幕后提供训练实例，将你的数据和算法作为Docker容器带到训练实例上，并执行训练。通过可扩展和基础设施优化，我们指的是这些算法背后的代码库针对AWS计算基础设施进行了优化，并且能够使用多个实例进行分布式训练。内置算法的最好之处在于，你不需要编写大量的代码。我们将在[*第5章*](B17447_05_ePub_RK.xhtml#_idTextAnchor077)*，使用SageMaker
    Studio IDE构建和训练机器学习模型*中了解更多关于内置算法以及如何使用它们训练模型的信息。
- en: Training and tuning
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 训练和调整
- en: Training and tuning ML models perhaps consumes the most time and effort of a
    data scientist. To help data scientists focus on modeling and not infrastructure,
    having a fully managed, reliable, and scalable compute environment is critical
    for them to operate at their best. Amazon SageMaker Studio makes ML training easy
    and scalable with the following features.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 训练和调整机器学习模型可能消耗数据科学家最多的时间和精力。为了帮助数据科学家专注于建模而不是基础设施，拥有一个完全托管、可靠且可扩展的计算环境对他们来说至关重要，这样他们才能发挥最佳水平。Amazon
    SageMaker Studio通过以下功能使机器学习训练变得简单且可扩展。
- en: Managed training
  id: totrans-38
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 管理训练
- en: SageMaker-managed training enables ML developers to access on-demand compute
    resources from anywhere and makes model training a near-serverless experience.
    You can launch a model training job using an optimal compute resource from a wide
    variety of SageMaker ML instances. You can find a list of training instances under
    the **Training** tab in [https://aws.amazon.com/sagemaker/pricing/](https://aws.amazon.com/sagemaker/pricing/).
    For a deep learning model that needs a powerful GPU instance, you can easily specify
    an **Accelerated Computing** instance that equips with GPU device(s). If you have
    a linear regression model at hand that utilizes a CPU rather than GPU, you can
    choose an instance from the **Standard** or **Compute Optimized** instances based
    on the CPU and memory need. As a SageMaker-managed feature, there is no server
    provisioning and management for you to do at all. You submit a training job, and
    SageMaker handles the server provision and shuts down when the training job completes.
    Monitoring a training job is easy because the training metrics and logs are pushed
    to **Amazon CloudWatch**. This experience allows you to focus on model building
    and training rather than the infrastructure. We will learn more about SageMaker
    managed training and examples of training ML models with popular ML frameworks
    such as TensorFlow and PyTorch in [*Chapter 5*](B17447_05_ePub_RK.xhtml#_idTextAnchor077)*,
    Building and Training ML Models with SageMaker Studio IDE*. SageMaker managed
    training also supports spot instances so that you can save up to 90% on on-demand
    instances. We will learn more about SageMaker managed spot training in [*Chapter
    9*](B17447_09_ePub_RK.xhtml#_idTextAnchor125), *Training ML Models at Scale in
    SageMaker Studio.*.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: SageMaker管理的训练使机器学习开发者能够从任何地方访问按需计算资源，并使模型训练成为一种几乎无服务器的体验。您可以使用来自广泛的SageMaker
    ML实例的最佳计算资源启动模型训练作业。您可以在[https://aws.amazon.com/sagemaker/pricing/](https://aws.amazon.com/sagemaker/pricing/)的**训练**选项卡下找到训练实例列表。对于需要强大GPU实例的深度学习模型，您可以轻松指定配备GPU设备（s）的**加速计算**实例。如果您手头有一个使用CPU而不是GPU的线性回归模型，您可以根据CPU和内存需求选择**标准**或**计算优化**实例。作为一个SageMaker管理的功能，您根本不需要进行服务器配置和管理。您提交一个训练作业，SageMaker将处理服务器配置，并在训练作业完成后关闭。监控训练作业非常简单，因为训练指标和日志被推送到**Amazon
    CloudWatch**。这种体验使您能够专注于模型构建和训练，而不是基础设施。我们将在[*第5章*](B17447_05_ePub_RK.xhtml#_idTextAnchor077)*，使用SageMaker
    Studio IDE构建和训练ML模型*中了解更多关于SageMaker管理的训练和用TensorFlow和PyTorch等流行ML框架训练ML模型的示例。SageMaker管理的训练还支持spot实例，这样您可以在按需实例上节省高达90%的费用。我们将在[*第9章*](B17447_09_ePub_RK.xhtml#_idTextAnchor125)*，*在SageMaker
    Studio中大规模训练ML模型*中了解更多关于SageMaker管理的spot训练。
- en: Distributed training libraries
  id: totrans-40
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 分布式训练库
- en: As deep learning models are getting bigger and need more data, training a large
    neural network pushes the need for GPUs beyond a single compute instance. You
    need to find a way to distribute the training data and the large neural network
    model to multiple instances. **Amazon SageMaker's distributed training libraries**
    make it easy to develop your ML training code in a distributed manner. A SageMaker
    distributed training library has two techniques for scaling – **data parallelism**
    and **model parallelism**. Data parallelism distributes large datasets to instances
    to train concurrently. Model parallelism splits models that are too large to fit
    on a single GPU into portions across multiple GPUs in order to train. SageMaker's
    distributed training libraries also optimize the distribution framework and partitioning
    algorithms to train fast on SageMaker's GPU instances, achieving near-linear scaling
    efficiency. With a few lines of code on top of your training code base, you can
    turn your model training into a distributed one to efficiently utilize multiple
    GPU devices on multiple instances. We will dive deeper with examples of how distributed
    training libraries work in [*Chapter 9*](B17447_09_ePub_RK.xhtml#_idTextAnchor125),
    *Training ML Models at Scale in SageMaker Studio.*
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 随着深度学习模型变得越来越大并需要更多数据，训练大型神经网络推动了将GPU需求扩展到单个计算实例之外的需求。您需要找到一种方法将训练数据和大型神经网络模型分布到多个实例上。**Amazon
    SageMaker的分布式训练库**使您能够以分布式方式开发您的机器学习训练代码。SageMaker分布式训练库有两种扩展技术——**数据并行**和**模型并行**。数据并行将大型数据集分布到实例上以并行训练。模型并行将太大而无法适应单个GPU的模型分割成多个GPU上的多个部分以进行训练。SageMaker的分布式训练库还优化了分布框架和分区算法，以便在SageMaker的GPU实例上快速训练，实现接近线性的扩展效率。通过在您的训练代码基础上添加几行代码，您可以将模型训练转变为分布式训练，以有效地利用多个实例上的多个GPU设备。我们将在[*第9章*](B17447_09_ePub_RK.xhtml#_idTextAnchor125)，“在SageMaker
    Studio中大规模训练机器学习模型”中通过示例深入了解分布式训练库的工作方式。
- en: SageMaker Debugger
  id: totrans-42
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: SageMaker Debugger
- en: During a model training job, it is critical to know whether there are problems
    during training and how your training code is utilizing the compute resource.
    This feedback information allows you to adjust network architecture, change hyperparameters,
    and modify other parameters so that you can train a better model and stop failing
    training jobs without wasting more time and resources. **Amazon SageMaker Debugger**
    makes it easy to optimize ML models and training instance utilization. SageMaker
    Debugger is designed to capture training metrics and compute resource utilization
    in real time and report actionable insights and issues when they arise. SageMaker
    Debugger creates an interactive dashboard in SageMaker Studio that you can visualize
    in real time as the training happens. This is especially helpful when training
    complex neural network models. We will discuss more and show how to use SageMaker
    Debugger when you are training models at scale in [*Chapter 9*](B17447_09_ePub_RK.xhtml#_idTextAnchor125),
    *Training ML Models at Scale in SageMaker Studio.*
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在模型训练工作中，了解训练过程中是否存在问题以及您的训练代码如何利用计算资源至关重要。这些反馈信息使您能够调整网络架构、更改超参数以及修改其他参数，以便您能够训练出更好的模型，避免在浪费更多时间和资源的情况下停止训练工作。**Amazon
    SageMaker Debugger**使优化机器学习模型和训练实例利用率变得简单。SageMaker Debugger旨在实时捕获训练指标和计算资源利用率，并在出现问题时报告可操作的见解和问题。SageMaker
    Debugger在SageMaker Studio中创建了一个交互式仪表板，您可以在训练过程中实时可视化。这对于训练复杂的神经网络模型尤其有帮助。当您在SageMaker
    Studio中大规模训练模型时，我们将在[*第9章*](B17447_09_ePub_RK.xhtml#_idTextAnchor125)，“在SageMaker
    Studio中大规模训练机器学习模型”中进一步讨论并展示如何使用SageMaker Debugger。
- en: SageMaker Experiments
  id: totrans-44
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: SageMaker Experiments
- en: Amazon SageMaker Experiments is a feature that helps you organize and track
    your work in the ML life cycle. As you embark on an ML project, you process data,
    apply a transformation with parameters, and train ML models from various algorithms
    and hyperparameters. You will realize when the number of trials and experiments
    grow quickly and become unmanageable. Developers can use the SageMaker Experiments
    Python SDK to set up trackers to track the data sources, processing steps, and
    parameters. The SageMaker Studio IDE makes it easy to search the experiments and
    trials, compare the parameters and model performance, and create charts to visualize
    the progress. We will go deeper into SageMaker Experiments in [*Chapter 5*](B17447_05_ePub_RK.xhtml#_idTextAnchor077)*,
    Building and Training ML Models with SageMaker Studio IDE.*
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon SageMaker Experiments是一个功能，可以帮助您在机器学习生命周期中组织和跟踪您的作业。当您开始一个机器学习项目时，您处理数据，应用带有参数的转换，并从各种算法和超参数中训练机器学习模型。您将意识到当试验和实验的数量迅速增长并变得难以管理时。开发者可以使用SageMaker
    Experiments Python SDK设置跟踪器来跟踪数据源、处理步骤和参数。SageMaker Studio IDE使得搜索实验和试验、比较参数和模型性能以及创建图表以可视化进度变得容易。我们将在[*第五章*](B17447_05_ePub_RK.xhtml#_idTextAnchor077)*，使用SageMaker
    Studio IDE构建和训练机器学习模型*中更深入地探讨SageMaker Experiments。
- en: Deploy
  id: totrans-46
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 部署
- en: An ML model is created to serve and to make predictions. Deploying an ML model
    is the starting point of making use of a model. How you serve a model to make
    inference reliably, at scale, and cost-effectively while creating a feedback loop
    for your ML application is one of the most important aspects in the ML life cycle,
    as we learn that, often, 90% or more of ML costs are spent on hosting models for
    inference.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 一个机器学习模型被创建出来用于服务和进行预测。部署机器学习模型是利用模型的第一步。如何可靠、大规模且成本效益地提供服务以进行推理，同时为您的机器学习应用创建反馈循环，这是机器学习生命周期中最重要方面之一，正如我们所学，通常90%或更多的机器学习成本都花在为推理托管模型上。
- en: Managed deployment
  id: totrans-48
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 管理部署
- en: SageMaker managed model deployment takes away the heavy lifting of managing,
    provisioning, and scaling compute instances for model inferencing. Machine learning
    models can be deployed for real-time inference and for batch inference on SageMaker.
    Real-time inference is typically required if the ML inference is a part of an
    online application. The deployed model is also expected to return an inference
    in a low-latency fashion. With just a couple of lines of code, the **Amazon SageMaker
    model hosting** feature deploys your model into fully managed ML instance(s) as
    an endpoint for low latency real-time inference. You can also set up autoscaling
    of the endpoints so that when the traffic to your model increases, SageMaker will
    automatically spin up more instances to handle the additional burden so as not
    to overwhelm the existing instances.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: SageMaker管理的模型部署消除了管理、配置和扩展模型推理计算实例的繁重工作。机器学习模型可以在SageMaker上进行实时推理和批量推理。如果机器学习推理是在线应用的一部分，通常需要实时推理。部署的模型还预期以低延迟的方式返回推理结果。只需几行代码，**Amazon
    SageMaker模型托管**功能就将您的模型部署到完全管理的ML实例（s）作为端点，以实现低延迟的实时推理。您还可以设置端点的自动扩展，以便当模型流量增加时，SageMaker将自动启动更多实例来处理额外的负载，以免压倒现有实例。
- en: If your ML project requires you to create multiple models for better accuracy
    for each, say, a geographic area, **SageMaker's multi-model endpoints** are a
    cost-effective option for you to deploy your models. Instead of hosting 50 models
    on 50 endpoints for an ML use case with data from 50 US states and paying for
    50 endpoints when you know the traffic to some states will be sparser compared
    to some other states, you can consolidate 50 models into 1 multi-model endpoint
    to fully utilize the compute capacity for the endpoint and reduce the hosting
    cost.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您的机器学习项目需要您为每个地理区域创建多个模型以获得更高的准确性，那么**SageMaker的多模型端点**是您部署模型的经济有效选择。您不需要在50个端点上托管50个模型，当您知道某些州的流量与其他州相比会更稀疏时，您只需将50个模型合并为1个多模型端点，以充分利用端点的计算能力并降低托管成本。
- en: As for batch inference, **SageMaker batch transform** is a cost-effective and
    scalable way to make inferences against your model for a large dataset in batches.
    SageMaker batch transform handles the data ingestion efficiently so that you do
    not need to worry about the data size overwhelming the compute instance.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 对于批量推理，**SageMaker批量转换**是一种经济有效且可扩展的方法，可以对大量数据集中的模型进行批量推理。SageMaker批量转换高效地处理数据摄入，这样您就不必担心数据量会压倒计算实例。
- en: 'Model deployment and hosting is a big topic, and we will discuss more in [*Chapter
    7*](B17447_07_ePub_RK.xhtml#_idTextAnchor099), *Hosting ML Models in the Cloud:
    Best Practices*.'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
- en: SageMaker Model Monitor
  id: totrans-53
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: As discussed in [*Chapter 1*](B17447_01_ePub_RK.xhtml#_idTextAnchor013), *Machine
    Learning and Its Life Cycle in the Cloud*, closing the ML feedback loop is a step
    that ensures the model quality and allows developers to take action before it's
    too late. The **Amazon SageMaker Model Monitor** feature closes the feedback loop
    by setting up data capture, computing the input data statistic as a baseline,
    and monitoring the **data drift** for your live endpoints, hosted on SageMaker
    on a schedule. SageMaker Model Monitor uses a set of statistics and metrics to
    determine whether the new incoming data is conforming to how the baseline training
    data looks statistically and schematically. You can also define your own metrics
    and use them in SageMaker Model Monitor. Once the model monitoring for an endpoint
    is set up, you can visualize the data drift and any data issues over time in a
    dashboard in SageMaker Studio IDE. You can also set up alarms and triggers using
    other AWS services in order to act according to data drift or model performance
    drift. We will learn more and show how to set up SageMaker model monitoring in
    [*Chapter 10*](B17447_10_ePub_RK.xhtml#_idTextAnchor134), *Monitoring ML Models
    in Production with SageMaker Model Monitor.*
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
- en: MLOps
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Data scientists used to spend too much time and effort maintaining and manually
    managing an ML pipeline, a process that starts with data processing, model training,
    and evaluation, and ends with model hosting with ongoing maintenance. SageMaker
    Studio provides features that aim to streamline this operation with **Continuous
    Integration** (**CI**) and **Continuous Delivery** (**CD**) as best practices.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
- en: SageMaker Pipelines
  id: totrans-57
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Amazon SageMaker Pipelines** is an orchestration layer that allows you to
    build workflows for your ML life cycle that can be automated in a production system.
    You can automate steps, including data processing, model training, tuning, evaluation,
    and deployment, under one pipeline. You can apply business conditions and logic
    into a pipeline in order to maintain the model''s quality. SageMaker Pipelines
    creates an audit trail for models because it keeps information of every step in
    the pipeline in one place. ML pipelines from SageMaker Pipelines can be executed
    at any time, on a schedule, or in response to trigger events. We will discuss
    and run an example of SageMaker Pipelines in [*Chapter 11*](B17447_11_ePub_RK.xhtml#_idTextAnchor144),
    *Operationalize ML Projects with SageMaker Projects, Pipelines, and Model Registry*.'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
- en: SageMaker projects and model registry
  id: totrans-59
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Amazon SageMaker projects** is a feature that helps you bring all your ML
    artifacts into one place with CI/CD best practices to ensure models in production
    come with reproducibility, auditability, and governance.'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
- en: 'A SageMaker project collects ML code bases, pipelines, experiments, model registry,
    and deployed endpoints into one single pane of glass. SageMaker provides MLOps
    templates for you to get started with MLOps in AWS easily. You can choose a built-in
    template or create your own based on your use case, deploy the template, and start
    filling in your ML workflow to equip your ML workflow with CI/CD best practices.
    These include the following:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: SageMaker项目将ML代码库、管道、实验、模型注册和已部署端点收集到一个单一的视图中。SageMaker为您提供了MLOps模板，以便您在AWS中轻松开始使用MLOps。您可以选择内置模板或根据您的用例创建自己的模板，部署模板，并开始填写您的ML工作流程，以使您的ML工作流程具备CI/CD最佳实践。以下包括以下内容：
- en: Code repositories for version control
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 版本控制的代码仓库
- en: ML pipelines for automating model training
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动化模型训练的ML管道
- en: A code build process that verifies that code commits are working
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 验证代码提交是否工作的代码构建流程
- en: A model deployment quality control gate and a model registry for version control
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 模型部署质量控制门和版本控制的模型注册
- en: An automated model deployment process
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动化模型部署流程
- en: We will walk through the feature and MLOps best practices in [*Chapter 11*](B17447_11_ePub_RK.xhtml#_idTextAnchor144),
    *Operationalize ML Projects with SageMaker Projects, Pipelines, and Model Registry*.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在[*第11章*](B17447_11_ePub_RK.xhtml#_idTextAnchor144)中介绍功能和MLOps最佳实践，*使用SageMaker
    Projects、Pipelines和模型注册实现ML项目的运营化*。
- en: Now that we've had a brief introduction to the many components of SageMaker
    Studio, let's get your AWS account ready and learn how to set up SageMaker Studio.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经简要介绍了SageMaker Studio的许多组件，让我们准备好您的AWS账户，并学习如何设置SageMaker Studio。
- en: Setting up SageMaker Studio
  id: totrans-69
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置SageMaker Studio
- en: 'With the core features out of the way, let''s get started with Amazon SageMaker
    Studio. Please log in to your AWS account with your IAM user and go to the Amazon
    SageMaker console page from the **Services** drop-down menu. You should be greeted
    with the page shown in *Figure 2.2*:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 在核心功能准备就绪后，让我们开始使用Amazon SageMaker Studio。请使用您的IAM用户登录到您的AWS账户，并从**服务**下拉菜单转到Amazon
    SageMaker控制台页面。您应该会看到*图2.2*所示的页面：
- en: '![Figure 2.2 – Amazon SageMaker console page'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '![图2.2 – Amazon SageMaker控制台页面'
- en: '](img/B17447_02_02.jpg)'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17447_02_02.jpg)'
- en: Figure 2.2 – Amazon SageMaker console page
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.2 – Amazon SageMaker控制台页面
- en: Click on the **SageMaker Studio** button.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 点击**SageMaker Studio**按钮。
- en: Setting up a domain
  id: totrans-75
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置域名
- en: Because this is our first time with Amazon SageMaker Studio, we need to set
    up a SageMaker domain and a user profile. There is a quick start setup and a standard
    setup – which one should you use? Well, it depends on your needs. It is sufficient
    to use quick start to complete all of the exercises in this book and for most
    of your personal projects. The standard setup, on the other hand, provides additional
    options for customizing your compute environment to meet specific security requirements
    that are often in place in enterprises such as networking and authentication methods.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 因为这是我们第一次使用Amazon SageMaker Studio，我们需要设置一个SageMaker域名和用户配置文件。有快速入门设置和标准设置 –
    您应该使用哪一个？嗯，这取决于您的需求。使用快速入门完成本书中的所有练习以及您的大多数个人项目是足够的。另一方面，标准设置提供了额外的选项，以自定义您的计算环境以满足企业中常见的特定安全要求，如网络和认证方法。
- en: 'With the standard setup, you can configure the following:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 使用标准设置，您可以配置以下内容：
- en: '*The authentication method*: **Single Sign-On** (**SSO**) or **AWS Identity
    and Access Management** (**IAM**). SSO is a popular method for enterprise teams
    that allows you to log in with a single sign-on credential to access software
    and cloud resources in a portal from anywhere. You do not need to access the AWS
    console in this case. However, it requires you to first set up an SSO account.
    The IAM method allows you to set up a domain more quickly and simply. This is
    also the method used in the quick start setup. You need to first log in to the
    AWS console using your IAM role in order to access Studio.'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*认证方法*：**单点登录**（**SSO**）或**AWS身份和访问管理**（**IAM**）。SSO是企业团队中流行的认证方法，允许您使用单一登录凭证从任何位置登录到门户中的软件和云资源。在这种情况下，您不需要访问AWS控制台。然而，它要求您首先设置一个SSO账户。IAM方法允许您更快、更简单地设置域名。这也是快速入门设置中使用的该方法。您需要首先使用IAM角色登录AWS控制台，以便访问Studio。'
- en: '*Permission*: A default execution role defining permissions such as what S3
    buckets you are allowed to access and what actions you can perform from within
    SageMaker Studio for the domain. Note that each new user added to the SageMaker
    Studio domain can either inherit this default execution role or can have another
    execution role with different permissions.'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*权限*：一个默认执行角色，定义了诸如您允许访问哪些 S3 存储桶以及您可以在 SageMaker Studio 中执行哪些操作等权限。请注意，每个添加到
    SageMaker Studio 域的新用户都可以继承此默认执行角色，或者可以拥有具有不同权限的另一个执行角色。'
- en: '*Notebook-sharing configuration*: Notebook sharing is a key feature when it
    comes to collaboration. You can configure where the notebook sharing metadata
    is saved on S3 if you want to encrypt the shareable notebooks and have the ability
    to share the cell output, or you can disable notebook sharing.'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*笔记本共享配置*：当涉及到协作时，笔记本共享是一个关键特性。如果您想加密可共享的笔记本并具有共享单元格输出的能力，可以配置笔记本共享元数据在 S3
    上的存储位置，或者您可以选择禁用笔记本共享。'
- en: '*SageMaker projects and JumpStart*: Whether you would like to enable the SageMaker
    project templates and JumpStart for an account and/or users.'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*SageMaker 项目和 JumpStart*：您是否希望为账户和/或用户启用 SageMaker 项目模板和 JumpStart。'
- en: '*Network and storage*: SageMaker Studio, as a cloud resource, can be launched
    inside a **Virtual Private Cloud** (**VPC**), a logical virtual network where
    you can control the route tables, network gateways, public internet access, availability
    zones, and much more on network security. These options allow enterprises for
    whom cloud security is crucial to securely run an ML workload in the cloud. You
    have the option here to choose to host SageMaker Studio in a default VPC created
    in every AWS account, or your own VPC. You can choose one or more subnets for
    high availability.'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*网络和存储*：作为云资源，SageMaker Studio 可以在 **虚拟私有云**（**VPC**）内部启动，这是一个逻辑虚拟网络，您可以在其中控制路由表、网络网关、公共互联网访问、可用区以及更多网络安全方面。这些选项允许对云安全至关重要的企业安全地运行云中的机器学习工作负载。您在这里可以选择将
    SageMaker Studio 部署在 AWS 账户中创建的默认 VPC 中，或者您的 VPC 中。您可以选择一个或多个子网以实现高可用性。'
- en: Many organizations require a well-governed internet access policy in the cloud.
    You can choose whether the public internet is to be allowed and what set of security
    groups, which control inbound and outbound rules, should be enforced. Last but
    not least, you have the option to encrypt the storage used in SageMaker Studio,
    namely, the EFS filesystem.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 许多组织在云中需要良好的互联网访问策略。您可以选择是否允许使用公共互联网，以及应该强制执行哪些安全组，这些安全组控制着入站和出站规则。最后但同样重要的是，您可以选择加密在
    SageMaker Studio 中使用的存储，即 EFS 文件系统。
- en: '*Tags*: You can add tags in key-value pairs to the Studio domain. This allows
    you or the administrator to group resources based on tags attached and understand
    the spending in the cloud.'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*标签*：您可以在 Studio 域中添加键值对形式的标签。这允许您或管理员根据附加的标签对资源进行分组，并了解云中的支出。'
- en: 'After reviewing the standard options, let''s return to **Quick start**, as
    this is sufficient and more straightforward for us in the context of this book:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 在查看标准选项后，让我们回到**快速入门**，因为在本书的上下文中，这足够简单直接：
- en: Fill in your username.
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 填写您的用户名。
- en: For **Execution role**, we create a new one.
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于**执行角色**，我们创建一个新的角色。
- en: '![Figure 2.3 – Setting up a SageMaker Studio domain with Quick start'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.3 – 使用快速入门设置 SageMaker Studio 域'
- en: '](img/B17447_02_03.jpg)'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17447_02_03.jpg)'
- en: Figure 2.3 – Setting up a SageMaker Studio domain with Quick start
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.3 – 使用快速入门设置 SageMaker Studio 域
- en: 'You have an option to allow access to any S3 bucket, specific buckets, or no
    additional buckets, outside of the four other rules listed in the following figure.
    Let''s choose **None** to practice least privilege access. We will be using a
    SageMaker default bucket that will be created later and satisfies existing rules.
    Click **Create role**:'
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以选择允许访问任何 S3 存储桶、特定存储桶或除以下图中列出的四个其他规则之外的无额外存储桶。让我们选择**无**以练习最小权限访问。我们将使用稍后创建的
    SageMaker 默认存储桶，它符合现有规则。点击**创建角色**：
- en: '![Figure 2.4 – Creating an IAM role'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.4 – 创建 IAM 角色'
- en: '](img/B17447_02_04.jpg)'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17447_02_04.jpg)'
- en: Figure 2.4 – Creating an IAM role
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.4 – 创建 IAM 角色
- en: 'Before you hit **Submit**, make sure to enable Amazon SageMaker project templates
    and JumpStart. Choose **Submit**. It will take a few minutes to spin up a domain
    and a user profile. Feel free to take a quick break and come back later:'
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您点击**提交**之前，请确保启用 Amazon SageMaker 项目模板和 JumpStart。选择**提交**。启动域名和用户配置文件可能需要几分钟时间。您可以随时休息一下，稍后再回来：
- en: '![Figure 2.5 – SageMaker Studio Control Panel'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.5 – SageMaker Studio 控制面板'
- en: '](img/B17447_02_05.jpg)'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17447_02_05.jpg)'
- en: Figure 2.5 – SageMaker Studio Control Panel
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.5 – SageMaker Studio 控制面板
- en: Once ready, click on **Open Studio**.
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 准备就绪后，点击 **打开 Studio**。
- en: A Jupyter Server application will be created when you open it for the first
    time and this will take a couple of minutes.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 当您第一次打开它时，将创建一个 Jupyter 服务器应用程序，这需要几分钟时间。
- en: Next, let's explore the SageMaker Studio UI.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们探索 SageMaker Studio UI。
- en: Walking through the SageMaker Studio UI
  id: totrans-102
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 漫步 SageMaker Studio UI
- en: '*Figure 2.6* is a screenshot of the SageMaker Studio UI and the Studio **Launcher**
    page. You may find the interface very similar to the JupyterLab interface. SageMaker
    Studio indeed builds on top of JupyterLab and adds many additional features to
    it to provide you with an end-to-end ML experience within the IDE:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 2.6* 是 SageMaker Studio UI 和 Studio **启动器**页面的截图。您可能会发现界面与 JupyterLab 界面非常相似。SageMaker
    Studio 确实建立在 JupyterLab 之上，并为其添加了许多附加功能，以在 IDE 内提供端到端的机器学习体验：'
- en: '![Figure 2.6 – The SageMaker Studio UI – the left sidebar is indicated in the
    red box'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.6 – SageMaker Studio UI – 左侧边栏用红色框标出'
- en: '](img/B17447_02_06.jpg)'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17447_02_06.jpg)'
- en: Figure 2.6 – The SageMaker Studio UI – the left sidebar is indicated in the
    red box
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.6 – SageMaker Studio UI – 左侧边栏用红色框标出
- en: Let's talk about the key components in the Studio UI.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们谈谈 Studio UI 中的关键组件。
- en: The main work area
  id: totrans-108
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 主要工作区域
- en: The main work area is where the **Launcher** page, the notebooks, code editor,
    terminals, and consoles go. In addition to these base features from JupyterLab,
    as you will learn throughout the book, SageMaker Studio's own features, such as
    Data Wrangler, Autopilot, JumpStart, Feature Store, Pipelines, Model Monitor,
    and Experiments, also deliver the rich user experience in the main work area.
    The **Launcher** page is the portal to all the new resources you might like to
    create, such as a new JumpStart solution, a new feature store, a new MLOps project,
    a new notebook, and a new terminal.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 主要工作区域是 **启动器**页面、笔记本、代码编辑器、终端和控制台所在的地方。除了来自 JupyterLab 的这些基本功能外，正如您将在本书中了解到的那样，SageMaker
    Studio 的自身功能，如 Data Wrangler、AutoPilot、JumpStart、特征存储、管道、模型监控和实验，也在主要工作区域中提供了丰富的用户体验。**启动器**页面是通往您可能希望创建的所有新资源的门户，例如新的
    JumpStart 解决方案、新的特征存储、新的 MLOps 项目、新的笔记本和新的终端。
- en: The sidebar
  id: totrans-110
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 侧边栏
- en: 'The sidebar on the left with seven icons (eight when you have a notebook opened)
    serves as a portal to all of the resources that you have or may need, as indicated
    in *Figure 2.6*. From top to bottom, they are as follows:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 左侧带有七个图标（当您打开笔记本时为八个）的侧边栏是一个门户，通往您拥有或可能需要的所有资源，如 *图 2.6* 所示。从上到下，它们如下所示：
- en: '**File Browser** is where you access files on your home directory on the EFS
    filesystem and upload new files.'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**文件浏览器**是您访问 EFS 文件系统上主目录中的文件并上传新文件的地方。'
- en: '**Git** is where you can connect to a Git repository and perform Git operations
    to your code base interactively.'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Git** 是您可以连接到 Git 仓库并交互式地对代码库执行 Git 操作的地方。'
- en: The **Running Terminals and Kernels** tab allows you to view, access, and shut
    down compute resources such as notebooks, kernels, and instances.
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**正在运行的终端和内核**标签允许您查看、访问和关闭笔记本、内核和实例等计算资源。'
- en: '**Commands** shows a list of commands and actions you can take in the Studio
    UI.'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**命令**显示了您可以在 Studio UI 中执行的命令和操作列表。'
- en: '**Network Tools** lets you access a notebook''s metadata. It is only shown
    when a notebook is open in the main work area.'
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**网络工具**允许您访问笔记本的元数据。仅在笔记本在主要工作区域打开时显示。'
- en: '**Open Tabs** shows a list of open tabs.'
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**打开标签**显示打开标签的列表。'
- en: The **SageMaker JumpStart** icon shows launched solutions and associated training
    jobs and endpoints.
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**SageMaker JumpStart** 图标显示了启动的解决方案以及相关的训练作业和端点。'
- en: '**SageMaker Components and Registries** lists projects, Data Wrangler files,
    pipelines, experiments, models, endpoints, and feature stores that you can view
    and access. There is also a search bar in each component for you to easily find
    your resources.'
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**SageMaker 组件和注册表**列出了您可以查看和访问的项目、Data Wrangler 文件、管道、实验、模型、端点和特征存储。每个组件中还有一个搜索栏，方便您轻松找到资源。'
- en: The sidebar to the right of the main working area is the **Settings** pane,
    which allows you to edit table and chart properties when you create a visual analysis
    from experiments or model monitoring jobs, which is a great feature of SageMaker
    Studio as well.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 主要工作区域右侧的侧边栏是 **设置**面板，允许您在从实验或模型监控作业创建可视化分析时编辑表格和图表属性，这是 SageMaker Studio 的一个出色功能。
- en: '"Hello world!" in SageMaker Studio'
  id: totrans-121
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Let's start with a very basic task – open a notebook, and run a very simple
    program in Python that every single programming book would use – "*hello world!*".
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.7 – Creating a SageMaker Studio notebook'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B17447_02_07.jpg)'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.7 – Creating a SageMaker Studio notebook
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
- en: Go to **Notebooks and compute resources**, **Select a SageMaker image** (optional
    for now – the **Data Science** default is perfect but you may choose another image),
    and click on the **+** icon in the **Notebook** | **Python 3** box. A new notebook
    will pop up.
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'If you notice that there is an **Unknown** next to the **Python 3** (**Data
    Science**) in the top right corner, and there is **Kernel: Starting...** in the
    status bar down at the bottom, as shown in *Figure 2.8*, it means the notebook
    is still connecting to the compute resource. It should take about a minute. We
    will talk more in depth about what''s happening behind the scenes in the next
    section, *Demystifying SageMaker Studio notebooks, instances, and kernels*.'
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 2.8 – A kernel is starting for a new SageMaker Studio notebook'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B17447_02_08.jpg)'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.8 – A kernel is starting for a new SageMaker Studio notebook
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
- en: 'If you see **2 vCPU + 4 GiB** next to the **Python 3 (Data Science)** kernel
    image, it means that the notebook has finally connected to the instance that has
    2 virtual CPUs (**vCPUs**) and 4 GiB of RAM. Let''s write our first line of code
    in the first cell of the notebook:'
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-132
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'And now let''s execute, as shown in the following screenshot:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.9 – The notebook has connected to the kernel and our "hello world!"
    program is working'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B17447_02_09.jpg)'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.9 – The notebook has connected to the kernel and our "hello world!"
    program is working
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
- en: 'Great! We just launched an elastic notebook in SageMaker Studio and executed
    our "hello world!" example. However, if you went too quickly and executed the
    code while the status bar at the bottom was still showing **Kernel: Starting…**,
    you might get the following error:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: What is happening here? Let's switch gears to talk about the infrastructure
    behind SageMaker Studio.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
- en: Demystifying SageMaker Studio notebooks, instances, and kernels
  id: totrans-140
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*Figure 2.10* is an architectural diagram of the SageMaker Studio domain and
    how a notebook kernel relates to other components. There are four entities we
    need to understand here:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
- en: '**EC2 instance**: The hardware that the notebook runs on. You can choose what
    instance type to use based on the vCPU, GPU, and amount of memory. The instance
    type determines the pricing rate, which can be found in [https://aws.amazon.com/sagemaker/pricing/](https://aws.amazon.com/sagemaker/pricing/).'
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**SageMaker image**: A container image that can be run on SageMaker Studio.
    It contains language packages and other files required to run a notebook. You
    can run multiple images in an EC2 instance.'
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**KernelGateway app**: A SageMaker image runs as a KernelGateway app. There
    is a one-to-one relationship between a SageMaker image and a KernelGateway app.'
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**KernelGateway 应用程序**：SageMaker 图像作为 KernelGateway 应用程序运行。SageMaker 图像与 KernelGateway
    应用程序之间存在一对一的关系。'
- en: '**Kernel**: A process that runs the code in a notebook. There can be multiple
    kernels in a SageMaker image.'
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**内核**：在笔记本中运行代码的过程。SageMaker 图像中可以有多个内核。'
- en: So far, we, as `ipynb` file will be created in the **User1** home directory
    on the **Amazon EFS filesystem**. SageMaker Studio will attempt to connect the
    notebook (frontend) to a backend compute resource that satisfies the requirements,
    namely, the kernel image, and EC2 instance types. In SageMaker Studio, we also
    call a launched kernel image a KernelGateway app.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们作为 `ipynb` 文件将在 **User1** 主目录下的 **Amazon EFS 文件系统** 中创建。SageMaker Studio
    将尝试将笔记本（前端）连接到一个满足要求的后端计算资源，即内核镜像和 EC2 实例类型。在 SageMaker Studio 中，我们还将启动的内核镜像称为
    KernelGateway 应用程序。
- en: '![Figure 2.10 – The infrastructure behind the SageMaker Studio IDE'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.10 – SageMaker Studio IDE 背后的基础设施'
- en: '](img/B17447_02_10.jpg)'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片 B17447_02_10.jpg]'
- en: Figure 2.10 – The infrastructure behind the SageMaker Studio IDE
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.10 – SageMaker Studio IDE 背后的基础设施
- en: Important Note
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: 'Image courtesy of the following link: [https://docs.aws.amazon.com/sagemaker/latest/dg/notebooks.html](https://docs.aws.amazon.com/sagemaker/latest/dg/notebooks.html).'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由以下链接提供：[https://docs.aws.amazon.com/sagemaker/latest/dg/notebooks.html](https://docs.aws.amazon.com/sagemaker/latest/dg/notebooks.html)。
- en: If the requested compute resource is available, a notebook will connect immediately
    and become ready for coding. If none are available, as in our case because we
    just launched our first-ever notebook in the domain, SageMaker Studio spins up
    a compute instance (`ml.t3.medium`, by default) and attaches the kernel image
    (the data science image we have chosen) as a container in the compute instance.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 如果请求的计算资源可用，笔记本将立即连接并准备好进行编码。如果没有可用资源，就像我们在这个案例中，因为我们刚刚在该域中启动了我们第一个笔记本，SageMaker
    Studio 将启动一个计算实例（默认为 `ml.t3.medium`）并将内核镜像（我们选择的数据科学镜像）作为容器附加到计算实例中。
- en: That's why we are seeing `datascience-1-0-ml-t3-medium-xxxx` KernelGateway app
    is in a pending state.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们看到 `datascience-1-0-ml-t3-medium-xxxx` KernelGateway 应用程序处于挂起状态。
- en: '![Figure 2.11 – A KernelGateway app is starting up in SageMaker Studio'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.11 – SageMaker Studio 中 KernelGateway 应用程序正在启动'
- en: '](img/B17447_02_11.jpg)'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片 B17447_02_11.jpg]'
- en: Figure 2.11 – A KernelGateway app is starting up in SageMaker Studio
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.11 – SageMaker Studio 中 KernelGateway 应用程序正在启动
- en: 'Once the KernelGateway app is ready, our notebook becomes ready. This innovative
    mechanism behind the notebooks in SageMaker Studio allows users (multi-tenants)
    to use the right compute resource for each of the notebooks that we are running
    under one roof. If you click on **2 vCPU + 4 GiB**, you will be able to see what
    instance type you are using and what is available to you, as follows:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦 KernelGateway 应用程序准备就绪，我们的笔记本也就准备好了。SageMaker Studio 中笔记本背后的这种创新机制允许用户（多租户）为我们在同一屋檐下运行的每个笔记本使用正确的计算资源。如果您点击
    **2 vCPU + 4 GiB**，您将能够看到您正在使用的实例类型以及可供您使用的资源，如下所示：
- en: '![Figure 2.12 – Selecting an instance for a notebook'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.12 – 为笔记本选择实例'
- en: '](img/B17447_02_12.jpg)'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片 B17447_02_12.jpg]'
- en: Figure 2.12 – Selecting an instance for a notebook
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.12 – 为笔记本选择实例
- en: There are four commonly used instance types of different categories that are
    **Fast Launch**, that is, instances that are designed to launch in under 2 minutes.
    If you uncheck the **Fast launch only** checkbox, you will see all the instance
    types that are available in SageMaker Studio for your notebook, including the
    ones that are not of the fast launch type. Feel free to switch to other instance
    types and kernel images to experiment. You can see all the running instances,
    apps, and live notebook sessions in **Running Terminals and Kernels** in the left
    sidebar. You should shut down **RUNNING APPS** and **KERNEL SESSIONS** that you
    no longer need with the power buttons, as highlighted in the following screenshot,
    to terminate and recycle the resource on the running instance. Also, you should
    shut down the **RUNNING INSTANCES** you no longer need to stop incurring charges.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 有四种常用的不同类别的**快速启动**实例类型，即设计在2分钟内启动的实例。如果你取消选择**仅快速启动**复选框，你将看到SageMaker Studio中可用于笔记本的所有实例类型，包括非快速启动类型的实例。你可以自由切换到其他实例类型和内核镜像进行实验。你可以在左侧边栏的**运行终端和内核**中查看所有正在运行的实例、应用程序和实时笔记本会话。你应该使用电源按钮关闭你不再需要的**正在运行的应用程序**和**内核会话**，如以下截图所示，以终止和回收正在运行的实例上的资源。此外，你应该关闭你不再需要的**正在运行的实例**，以停止产生费用。
- en: '![Figure 2.13 – Viewing Running Terminals and Kernels from the left sidebar'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 2.13 – Viewing Running Terminals and Kernels from the left sidebar]'
- en: '](img/B17447_02_13.jpg)'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/B17447_02_13.jpg]'
- en: Figure 2.13 – Viewing Running Terminals and Kernels from the left sidebar
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.13 – 从左侧边栏查看正在运行的终端和内核
- en: Now that we have a good understanding of how notebooks work with instances and
    kernel images, let's get our hands dirtier with another major resource that we
    will use throughout the book and your ML development life cycle in SageMaker Studio.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经很好地理解了笔记本如何与实例和内核镜像协同工作，让我们进一步探索另一个我们将贯穿整本书以及你在SageMaker Studio的机器学习开发生命周期中会使用的重大资源。
- en: Using the SageMaker Python SDK
  id: totrans-166
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用SageMaker Python SDK
- en: SageMaker Studio is more than just a place to run codes in notebooks. Yes, SageMaker
    Studio is a great place to start coding and training ML models in elastic notebooks,
    but there are so many more capabilities, as we discussed in the *Introducing SageMaker
    Studio and its components* section in this chapter.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: SageMaker Studio不仅仅是一个在笔记本中运行代码的地方。是的，SageMaker Studio是一个开始编码和训练机器学习模型在弹性笔记本中的绝佳地方，但正如我们在本章的“介绍SageMaker
    Studio及其组件”部分所讨论的，它还有许多其他功能。
- en: There are two main ways to communicate and work with SageMaker features. One
    is through the components that have a UI frontend, such as SageMaker Data Wrangler;
    the other is through a **Software Development Kit** (**SDK**). The SDK enables
    developers to interact with the world of Amazon SageMaker beyond the interface.
    You can access SageMaker's scalable, built-in algorithms for your data. You can
    programmatically run SageMaker Autopilot jobs. If you develop your deep learning
    models with TensorFlow, PyTorch, or MXNet, you can use the SDK to interact with
    the SageMaker compute infrastructure for training, processing, and hosting models
    for them. You can create a feature store with the SDK. And there is so much more.
    I won't enumerate all the capabilities in this section, as we will mostly use
    and learn about the SDK for the SageMaker features in future chapters when we
    need to code.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 与SageMaker功能进行通信和工作的主要有两种方式。一种是通过具有UI前端组件的方式，例如SageMaker Data Wrangler；另一种是通过**软件开发工具包**（**SDK**）。SDK使开发者能够超越界面与Amazon
    SageMaker的世界进行交互。你可以访问SageMaker的可扩展、内置算法来处理你的数据。你可以通过编程方式运行SageMaker Autopilot作业。如果你使用TensorFlow、PyTorch或MXNet开发深度学习模型，你可以使用SDK与SageMaker的计算基础设施进行交互，以训练、处理和托管这些模型。你可以使用SDK创建特征存储。还有更多功能。我不会在本节中列举所有功能，因为我们将在未来的章节中主要使用和学习SDK来处理SageMaker功能，那时我们需要进行编码。
- en: 'There are several SDKs from AWS that use SageMaker features, such as the following:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: AWS提供了几个使用SageMaker功能的SDK，例如以下这些：
- en: The **SageMaker Python SDK**, which provides a high-level API that is familiar
    to data scientists
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**SageMaker Python SDK**，它提供了一个数据科学家熟悉的高级API'
- en: '**AWS SDK for Python (Boto3)**, which provides low-level access to SageMaker
    API and other AWS services'
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**AWS SDK for Python (Boto3)**，它提供了对SageMaker API和其他AWS服务的低级访问'
- en: AWS SDK for other programming languages ([https://aws.amazon.com/sagemaker/resources/](https://aws.amazon.com/sagemaker/resources/)),
    depending on your application
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AWS SDK支持其他编程语言（[https://aws.amazon.com/sagemaker/resources/](https://aws.amazon.com/sagemaker/resources/)），取决于你的应用程序
- en: For many data scientists, the SageMaker Python SDK is a more natural choice
    because of its API design. We will be using the SageMaker Python SDK throughout
    this book.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 对于许多数据科学家来说，由于其API设计，SageMaker Python SDK是一个更自然的选择。在这本书中，我们将使用SageMaker Python
    SDK。
- en: The SageMaker Python SDK comes standard in all fully managed SageMaker kernel
    images, so there is no need for you to install and manage the different versions.
    You can simply run `import sagemaker` in the code and notebook and use the library.
    You can also use the SageMaker Python SDK anywhere outside of SageMaker Studio,
    such as on your laptop or in a serverless application on AWS Lambda, to talk to
    SageMaker, provided that you have the correct IAM permission configurations.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: SageMaker Python SDK在所有完全管理的SageMaker内核映像中都是标准配置，因此您无需安装和管理不同版本。您只需在代码和笔记本中运行`import
    sagemaker`即可使用该库。您还可以在SageMaker Studio之外的地方使用SageMaker Python SDK，例如在您的笔记本电脑或AWS
    Lambda上的无服务器应用程序中，前提是您有正确的IAM权限配置。
- en: 'Because SageMaker is a cloud service in AWS, there are some aspects that you
    need to take care of before using the service. The following code is a typical
    method for setting up the SageMaker Python SDK in a given environment. You will
    see more examples throughout the book:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 由于SageMaker是AWS中的云服务，在使用服务之前，您需要关注一些方面。以下代码是在给定环境中设置SageMaker Python SDK的典型方法。您将在本书中看到更多示例：
- en: '[PRE2]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'This code snippet does the following:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 此代码片段执行以下操作：
- en: Import the SageMaker Python SDK into the runtime.
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将SageMaker Python SDK导入到运行时。
- en: Create a **session** that allows you to interact with the Amazon SageMaker API
    and any other AWS services.
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个**会话**，允许您与Amazon SageMaker API和任何其他AWS服务进行交互。
- en: Create a default bucket for use and return the name of the bucket. The bucket
    has the form of `sagemaker-{region}-{AWS account ID}`.
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个默认存储桶以供使用，并返回存储桶的名称。存储桶的格式为`sagemaker-{region}-{AWS account ID}`。
- en: Retrieve the execution role that is available locally. On SageMaker Studio,
    it is the execution role that we assigned when the user profile was created. A
    role should have permissions to select S3 buckets and perform SageMaker-related
    actions in order to properly use the SDK. Our role has the `AmazonSageMakerFullAccess`
    policy attached to it, so we are covered. If you are using the SDK on your PC,
    make sure you have an AWS credential with an IAM user that permits you to perform
    SageMaker-related actions.
  id: totrans-181
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 获取本地可用的执行角色。在SageMaker Studio中，它是创建用户配置文件时分配的执行角色。一个角色应该有选择S3存储桶和执行与SageMaker相关操作权限，以便正确使用SDK。我们的角色附带了`AmazonSageMakerFullAccess`策略，所以我们是有保障的。如果您在PC上使用SDK，请确保您有一个AWS凭证，并且有一个IAM用户允许您执行与SageMaker相关的操作。
- en: You may print out `bucket` and `role` to see what they are. They are string
    values to an S3 bucket and of an IAM role, respectively. The `role` value is required
    by all APIs that talk to and perform actions on the cloud. This is important because
    security is job zero in the cloud. As we discussed in [*Chapter 1*](B17447_01_ePub_RK.xhtml#_idTextAnchor013),
    *Machine Learning and Its Life Cycle in the Cloud*, in AWS, you need to have valid
    and proper permissions in order to perform and access any cloud resources. When
    executing actions with SageMaker features, `role` will be used to verify whether
    you have sufficient permission to do so before proceeding.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以打印出`bucket`和`role`以查看它们是什么。它们分别是S3存储桶和IAM角色的字符串值。`role`值是所有与云进行交互并执行操作的API所必需的。这很重要，因为在云中，安全性是首要任务。正如我们在[*第1章*](B17447_01_ePub_RK.xhtml#_idTextAnchor013)，“机器学习及其在云中的生命周期”中讨论的那样，在AWS中，您需要拥有有效和适当的权限才能执行和访问任何云资源。在执行具有SageMaker功能的操作时，`role`将用于在继续之前验证您是否有足够的权限。
- en: As an open source library, you can access the source code here at [https://github.com/aws/sagemaker-python-sdk](https://github.com/aws/sagemaker-python-sdk)
    and the documentation at [https://sagemaker.readthedocs.io/en/stable/index.html](https://sagemaker.readthedocs.io/en/stable/index.html).
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 作为开源库，您可以在[https://github.com/aws/sagemaker-python-sdk](https://github.com/aws/sagemaker-python-sdk)处访问源代码，并在[https://sagemaker.readthedocs.io/en/stable/index.html](https://sagemaker.readthedocs.io/en/stable/index.html)处查看文档。
- en: Summary
  id: totrans-184
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we introduced the SageMaker Studio features at a high level.
    We mapped the features to the phases of a typical ML life cycle and discussed
    why and how SageMaker is used in the ML life cycle. We set up a SageMaker Studio
    domain and executed our first-ever notebook in SageMaker Studio. We learned the
    infrastructure of the SageMaker Studio and how to pick the right kernel image
    and compute instance for a notebook. Lastly, we talked about the basic concepts
    behind the key tool, the SageMaker Python SDK, and how it interacts with the cloud
    and SageMaker, as this is the foundation to lots of our future activities inside
    SageMaker Studio.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们以高层次的视角介绍了 SageMaker Studio 的功能。我们将这些功能映射到典型机器学习生命周期的各个阶段，并讨论了为什么以及如何使用
    SageMaker 在机器学习生命周期中。我们设置了 SageMaker Studio 域，并在 SageMaker Studio 中执行了我们第一个笔记本。我们学习了
    SageMaker Studio 的基础设施以及如何为笔记本选择合适的内核镜像和计算实例。最后，我们讨论了关键工具 SageMaker Python SDK
    背后的基本概念，以及它是如何与云和 SageMaker 交互的，因为这是我们在 SageMaker Studio 内进行许多未来活动的基础。
- en: In the next chapter, we will jumpstart our ML journey by preparing a dataset
    with SageMaker Data Wrangler for an ML use case. You will learn how easy it is
    to prepare and process your data in SageMaker Studio.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将通过使用 SageMaker Data Wrangler 准备一个用于机器学习用例的数据集来启动我们的机器学习之旅。你将了解到在 SageMaker
    Studio 中准备和处理数据是多么简单。
