["```py\nfeature_matrix, feature_defs = ft.dfs(\n    entityset=es,\n    target_dataframe_name=\"customers\",\n    agg_primitives=[\"count\"],\n    trans_primitives=[\"month\"],\n    max_depth=1,\n)\nfeature_matrix\n```", "```py\nes = ft.EntitySet(id=\"wind-turbine\")\nes = es.add_dataframe(\n    dataframe_name=\"wind-turbine\",\n    dataframe=df,\n    index=\"tracking_id\"\n)\n```", "```py\nfeature_matrix, feature_defs = ft.dfs(\n    entityset=es, target_dataframe_name=\"wind-turbine\",\n    trans_primitives=[\"day\", \"year\", \"month\", \"weekday\"],\n    max_depth=1)\nfeature_matrix_enc, features_enc = ft.encode_features(\n    feature_matrix, feature_defs)\n```", "```py\n...\n'cloud_level = Low',\n'cloud_level = Medium',\n'cloud_level = Extremely Low',\n'cloud_level is unknown',\n'MONTH(datetime) = 1',\n'MONTH(datetime) = 2',\n...\n'MONTH(datetime) = 8',\n'MONTH(datetime) = 9',\n'MONTH(datetime) = 11',\n'MONTH(datetime) is unknown',\n...\n'YEAR(datetime) = 2019',\n'YEAR(datetime) = 2018',\n'YEAR(datetime) is unknown'\n```", "```py\nautoml = flaml.AutoML()\nautoml.fit(X, y, task=\"regression\", time_budget=60)\n```", "```py\nautoml = flaml.AutoML()\ncustom_hp = {\n    \"learning_rate\": {\n        \"domain\": flaml.tune.loguniform(0.0001, 0.05)\n    }\n}\nautoml.fit(X, y, task=\"regression\", time_budget=120,\n           metric=\"mse\",\n           estimator_list=['lgbm', 'xgboost', 'rf'],\n           custom_hp={\n               \"lgbm\": custom_hp\n           },\n           hpo_method=\"bs\")\n```", "```py\ny_pred = automl.predict(X)\nprint(f\"r2: {1 - sklearn_metric_loss_score('r2',\n    y_pred, y)}\")\nprint(f\"MSE: {sklearn_metric_loss_score('mse',\n    y_pred, y)}\")\nr2: 0.9878605489721696\nMSE: 0.08090827806554425\n```", "```py\nprint(automl.best_config)\nprint(automl.best_config_per_estimator)\nprint(automl.time_to_find_best_model)\n```", "```py\nfrom flaml.default import LGBMRegressor\nzs_model = LGBMRegressor()\nzs_model.fit(X, y)\n```"]