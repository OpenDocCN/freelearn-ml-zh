- en: '*Chapter 4*: Online Learning with River'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第4章*：使用River进行在线学习'
- en: In this and the coming three chapters, you will learn how to work with a library
    for online machine learning called River. Online machine learning is a part of
    machine learning in which models are designed in such a way that they can update
    their learned model on the reception of any new data point.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章和接下来的三章中，你将学习如何使用一个名为River的在线机器学习库。在线机器学习是机器学习的一个分支，其中模型被设计成能够在接收到任何新的数据点时更新其学习到的模型。
- en: Online machine learning is the opposite of offline machine learning, which is
    the regular machine learning that you are probably already aware of. In general,
    in machine learning, a model will try to learn a mathematical rule that can perform
    a certain task. This task is learned on the basis of a number of data points.
    The mathematics behind these tasks is based on statistics and algorithmics.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在线机器学习是离线机器学习的对立面，后者是你可能已经熟悉的常规机器学习。一般来说，在机器学习中，模型会尝试学习一个可以执行特定任务的数学规则。这个任务是在基于多个数据点的基础上学习的。这些任务背后的数学基于统计学和算法学。
- en: In this chapter, you will discover how to work with online machine learning,
    and you will discover multiple types of online machine learning. You will go more
    in depth into the differences between online and offline machine learning. You
    will also see how to build online machine learning models using River in Python.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你将了解如何使用在线机器学习，你将发现多种类型的在线机器学习。你将更深入地了解在线和离线机器学习之间的差异。你还将看到如何使用Python中的River构建在线机器学习模型。
- en: 'This chapter covers the following topics:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本章涵盖了以下主题：
- en: What is online machine learning?
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 什么是在线机器学习？
- en: River for online learning
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: River用于在线学习
- en: A super simple example with River
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与River的一个超级简单的示例
- en: A second example with River
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与River的第二个示例
- en: Technical requirements
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'You can find all the code for this book on GitHub at the following link: [https://github.com/PacktPublishing/Machine-Learning-for-Streaming-Data-with-Python](https://github.com/PacktPublishing/Machine-Learning-for-Streaming-Data-with-Python).
    If you are not yet familiar with Git and GitHub, the easiest way to download the
    notebooks and code samples is the following:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在以下链接在GitHub上找到本书的所有代码：[https://github.com/PacktPublishing/Machine-Learning-for-Streaming-Data-with-Python](https://github.com/PacktPublishing/Machine-Learning-for-Streaming-Data-with-Python)。如果你还不熟悉Git和GitHub，下载笔记本和代码示例的最简单方法是以下：
- en: Go to the link of the repository.
  id: totrans-11
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往存储库的链接。
- en: Go to the green **Code** button.
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击绿色的**代码**按钮。
- en: Select **Download ZIP**.
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**下载ZIP**。
- en: When you download the ZIP file, unzip it in your local environment, and you
    will be able to access the code through your preferred Python editor.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 当你下载ZIP文件后，在你的本地环境中解压它，你将能够通过你偏好的Python编辑器访问代码。
- en: Python environment
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Python环境
- en: To follow along with this book, you can download the code in the repository
    and execute it using your preferred Python editor.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 要跟随本书学习，你可以下载存储库中的代码，并使用你偏好的Python编辑器执行它。
- en: If you are not yet familiar with Python environments, I would advise you to
    check out Anaconda ([https://www.anaconda.com/products/individual](https://www.anaconda.com/products/individual)),
    which comes with the Jupyter Notebook and JupyterLabs, which are both great for
    executing notebooks. It also comes with Spyder and VSCode for editing scripts
    and programs.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你还不熟悉Python环境，我建议你查看Anaconda ([https://www.anaconda.com/products/individual](https://www.anaconda.com/products/individual))，它包含了Jupyter
    Notebook和JupyterLabs，这两个都是执行笔记本的绝佳选择。它还包含了Spyder和VSCode，用于编辑脚本和程序。
- en: If you have difficulty installing Python or the associated programs on your
    machine, you can check out Google Colab ([https://colab.research.google.com/](https://colab.research.google.com/))
    or Kaggle Notebooks ([https://www.kaggle.com/code](https://www.kaggle.com/code)),
    which both allow you to run Python code in online notebooks for free, without
    any setup to do.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在机器上安装Python或相关程序时遇到困难，你可以查看Google Colab ([https://colab.research.google.com/](https://colab.research.google.com/))
    或Kaggle Notebooks ([https://www.kaggle.com/code](https://www.kaggle.com/code))，这两个平台都允许你免费在线笔记本中运行Python代码，无需任何设置。
- en: Note
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The code in the book will generally use Colab and Kaggle notebooks with Python
    version 3.7.13 and you can set up your own environment to mimic this.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 书中的代码将一般使用Python 3.7.13版本的Colab和Kaggle笔记本，你可以设置自己的环境来模拟这种情况。
- en: What is online machine learning?
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是在线机器学习？
- en: 'In machine learning, the most common way to train a model is to do a single
    training pass. The general steps in this approach are as follows:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在机器学习中，训练模型最常见的方式是进行单次训练遍历。这种方法的一般步骤如下：
- en: Data preparation.
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 数据准备。
- en: Create a train-test split.
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建训练-测试分割。
- en: Do model benchmarking and hyperparameter tuning.
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 进行模型基准测试和超参数调整。
- en: Select the best model.
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择最佳模型。
- en: Move this model to production.
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将此模型部署到生产环境中。
- en: This approach is called **offline learning**.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 这种方法被称为**离线学习**。
- en: With streaming data, you can often use this type of model very well. You can
    build the model once, deploy it, and use it for predicting your input stream.
    You can probably track the performance metrics of your model, and when the performance
    starts to change, you can do an update or retraining of your model, deploy the
    new version, and let it set in the production environment as long as it works.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 在流数据的情况下，你通常可以很好地使用这种类型的模型。你可以一次性构建模型，部署它，并用于预测你的输入流。你可能可以跟踪你模型的性能指标，当性能开始变化时，你可以更新或重新训练你的模型，部署新版本，只要它能在生产环境中正常工作。
- en: Online machine learning is a branch of machine learning that contains models
    that work very differently. They do not learn a full dataset at once, but rather,
    update the learned model (the decision rules for prediction) through sequential
    steps. Using such an approach, you can automatically update your model that is
    in production; it continues to learn on new data.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在线机器学习是机器学习的一个分支，包含的模型工作方式非常不同。它们不会一次性学习完整的数据集，而是通过一系列步骤更新学习到的模型（预测的决策规则）。使用这种方法，你可以自动更新生产中的模型；它继续在新数据上学习。
- en: How is online learning different from regular learning?
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在线学习与常规学习有何不同？
- en: The practice of building online learning systems takes a different angle at
    the machine learning problem than the offline machine learning approach. With
    offline learning, there is a real possibility to test what a model has learned,
    whereas, for online learning systems, this can change at any moment.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在线学习系统的构建实践在机器学习问题上与离线机器学习方法的视角不同。在离线学习中，有真实的机会测试模型学到了什么，而对于在线学习系统，这种变化可能随时发生。
- en: For some use cases, it is impossible to use offline learning. An example is
    forecasting use cases. In general, for forecasting, you predict a value in the
    future. To do so, you use the most recent data available to train and retrain
    your model. In many forecasting applications, machine learning models are retrained
    every time a new forecast must be predicted.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 对于某些用例，无法使用离线学习。一个例子是预测用例。通常，对于预测，你预测未来的一个值。为此，你使用最新的可用数据来训练和重新训练你的模型。在许多预测应用中，机器学习模型每次需要预测新的预报时都会重新训练。
- en: Outlier detection is another example where offline learning can be less appropriate.
    If your model does not integrate each new data point, these data points cannot
    be used as reference cases against new values. This can be solved through offline
    learning as well, but online learning may be the more appropriate solution to
    tackle this use case.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 异常值检测是另一个离线学习可能不太合适的例子。如果你的模型没有整合每个新的数据点，这些数据点就不能作为参考案例来对抗新值。这个问题也可以通过离线学习来解决，但在线学习可能是解决这个用例的更合适方案。
- en: Advantages of online learning
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在线学习的优势
- en: 'Online learning has two main advantages:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 在线学习有两个主要优势：
- en: The first main advantage is that online learning algorithms can be updated.
    They can, therefore, learn in multiple passes. This way, a big dataset does not
    have to pass at once in a model but can be passed in multiple steps. This is a
    big advantage when the datasets are large, or when the computing resources are
    limited.
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第一个主要优势是在线学习算法可以更新。因此，它们可以通过多次迭代学习。这样，大型数据集不需要一次性通过模型，而可以分多步进行。当数据集很大或计算资源有限时，这是一个很大的优势。
- en: 'The second advantage of online learning is that an online model can adapt to
    newer processes when updating: it is less fixed. Therefore, where an offline model
    can become obsolete when data trends change slightly over time, an online model
    can adapt to these changes and remain performant.'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在线学习的第二个优势是，在线模型在更新时可以适应更新的过程：它不太固定。因此，当一个离线模型在数据趋势随时间略微变化时可能会过时，在线模型可以适应这些变化并保持性能。
- en: Challenges of online learning
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在线学习的挑战
- en: However, there are also disadvantages to using online learning.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，使用在线学习也存在一些缺点。
- en: First, the concept is less widespread, and it will be a bit harder to find model
    implementations and documentation for online learning use cases.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，这个概念不太普及，并且找到在线学习用例的模型实现和文档可能会有些困难。
- en: Second, and more important, online learning has a risk of models learning things
    that you don't want them to learn or things that are wrong. With offline learning,
    you have much more control to validate what a model learns before pushing it to
    a production environment, whereas when pushing online learning to production environments,
    it may well continue to learn and decrease in performance due to the updates that
    it has learned.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 其次，更重要的是，在线学习存在模型学习到你不希望它们学习的内容或错误内容的风险。与离线学习相比，你在将模型推送到生产环境之前有更多的控制来验证模型学习的内容，而将在线学习推送到生产环境时，它可能会继续学习并由于学习到的更新而性能下降。
- en: Now that you understand the concept of online learning, let's now discover multiple
    types of online learning.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 既然你已经理解了在线学习的概念，现在让我们来探索多种在线学习类型。
- en: Types of online learning
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在线学习类型
- en: 'Although there is no clearly defined distinction in types of online machine
    learning, it is good to consider at least the following three terms: incremental
    learning, adaptive learning, and reinforcement learning.'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然在线学习的类型没有明确的定义，但考虑以下三个术语至少是好的：增量学习、自适应学习和强化学习。
- en: Incremental learning
  id: totrans-46
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 增量学习
- en: '**Incremental learning** methods are models that can be updated with a single
    observation at a time. As described previously, one of the main added values of
    online machine learning is this, as this is something that is not possible with
    standard offline learning.'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '**增量学习**方法是那些可以一次更新一个观察值的模型。如前所述，在线机器学习的主要增值之一就是这一点，这是标准离线学习所无法实现的。'
- en: Adaptive learning
  id: totrans-48
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 自适应学习
- en: Just updating the model, however, may not be enough for the second important
    added value of online learning that was cited before. If you want a model to adapt
    well to more recent data, you will have to choose an **adaptive** online learning
    method. These methods deal well with any situation that would need a model to
    adapt, for example, new trends that appear in the underlying data before people
    even become aware of them.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，仅仅更新模型可能不足以满足之前提到的在线学习的第二个重要增值。如果你想使模型更好地适应更近期的数据，你必须选择一个**自适应**的在线学习方法。这些方法很好地处理了任何需要模型适应的情况，例如，在人们甚至还没有意识到之前，数据中出现的新的趋势。
- en: Reinforcement learning
  id: totrans-50
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 强化学习
- en: '**Reinforcement learning** is not necessarily considered a subfield of online
    learning. Although the approach of reinforcement learning is different than the
    previously cited online learning approaches, it can be used for the same business
    problems. It is, therefore, important to learn about reinforcement learning as
    well. It will be covered in more depth in a later chapter. In the coming section,
    you will see how to use the River package in Python to build online machine learning
    models.'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '**强化学习**并不一定被视为在线学习的子领域。尽管强化学习的方法与之前提到的在线学习方法不同，但它可以用于相同的企业问题。因此，了解强化学习也很重要。它将在后面的章节中更深入地介绍。在接下来的部分，你将看到如何使用
    Python 中的 River 包构建在线机器学习模型。'
- en: Using River for online learning
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 River 进行在线学习
- en: In this section, you will discover the River library for online learning. River
    is a Python library that is made specifically for online machine learning. Its
    code base is a result of the combination of the `creme` and the `scikit-multiflow`
    libraries. The goal of River is to become the go-to library for machine learning
    on streaming data.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，你将了解用于在线学习的 River 库。River 是一个专门为在线机器学习制作的 Python 库。其代码库是 `creme` 和 `scikit-multiflow`
    库的结合结果。River 的目标是成为流数据机器学习的首选库。
- en: 'In this example, you''ll see how to train an online model on a well-known dataset.
    The steps that you will take throughout this example are the following:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，你将看到如何在一个知名数据集上训练在线模型。在这个例子中，你将采取以下步骤：
- en: Import the data.
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入数据。
- en: Reclassify the data to obtain a binary classification problem.
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重新分类数据以获得二元分类问题。
- en: Fit an online model for binary classification.
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用在线模型进行二元分类。
- en: Improve the model evaluation using a train-test split.
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用训练-测试分割来改进模型评估。
- en: Fit an online multiclass classification model using one-vs-rest.
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用一对一策略对在线多类分类模型进行拟合。
- en: Training an online model with River
  id: totrans-60
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 River 训练在线模型
- en: For this example, you will use the well-known iris dataset. You can download
    it from the UCI machine learning repository, but you can also use the following
    code to download it directly into pandas.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
- en: 'The steps to get to our goal are as follows:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
- en: Importing the data
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Reclassifying the data into a binary problem
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Converting the data into a suitable input format
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Learning the model one data point at a time
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Evaluating the model
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'We will get started using the following steps:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
- en: 'We will first import the dataset as seen here:'
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Code Block 4-1
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The dataset looks as follows:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.1 – The iris dataset'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B18335_04_001.jpg)'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
- en: Figure 4.1 – The iris dataset
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
- en: The iris dataset is very commonly used, mainly in tutorials and examples. The
    dataset contains a number of observations of three different iris species, a type
    of flower. For each flower, you have the length and width of specific parts of
    the plant. You can use the four variables to predict the species of iris.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
- en: 'For this first model, you will need to convert the class column into a binary
    column, as you will use the `LogisticRegression` model from River, which does
    not support multiclass:'
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Code Block 4-2
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'This results in the following output:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.2 – The series with Boolean data type'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B18335_04_002.jpg)'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
- en: Figure 4.2 – The series with Boolean data type
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
- en: 'As a next step, we will write code to loop through the data to simulate a streaming
    data input. The `X` data should be in dictionary format, and `y` can be string,
    int, or Boolean. In the following code, you see a loop that stops after the first
    iteration, so that it prints one `X` and one `y`:'
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Code Block 4-3
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'You can see that `X` has to be in a dictionary format, which is relatively
    uncommon for those who are familiar with offline learning. Then, `y` can be either
    Boolean, a string, or an int. This will look as follows:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.3 – The x and y inputs for the model'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B18335_04_003.jpg)'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
- en: Figure 4.3 – The x and y inputs for the model
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, let''s fit the model one by one. It is important to add `.sample(frac=1)`
    to avoid getting the data in order. If you do not add this, the model would first
    receive all the data from one class and then from the other classes. The model
    has a hard time dealing with that, so a random order should be introduced using
    the sample function:'
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Code Block 4-4
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Let''s see how the predictions can be made on the training data. You can use
    `predict_many` to predict on a data frame, or else you can use `predict_one`:'
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Code Block 4-5
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The result looks as follows:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.4 – The 150 Boolean observations'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B18335_04_004.jpg)'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
- en: Figure 4.4 – The 150 Boolean observations
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
- en: 'You can use the `scikit-learn` accuracy score to estimate the training accuracy
    of this model:'
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Code Block 4-6
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: The obtained training accuracy, in this case, is `1`, indicating that the model
    has perfectly learned the training data. Although the model has learned perfect
    prediction on the data that it has seen during the learning process, it is unlikely
    that the performance would be as good on new, unseen data points. In the next
    section, we will improve our model evaluation so that we avoid having overestimated
    performance metrics.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，获得的训练准确率是 `1`，表明模型已经完美地学习了训练数据。尽管模型在学习过程中已经学会了在它所见到的数据上的完美预测，但不太可能在新的、未见过的数据点上表现同样出色。在下一节中，我们将改进我们的模型评估，以避免高估性能指标。
- en: Improving the model evaluation
  id: totrans-105
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 改进模型评估
- en: In the first example, there was no real relearning and updating.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 在第一个例子中，没有真正的重新学习和更新。
- en: In this example, we will update and track the accuracy throughout the learning
    process. You will also see how to keep a training and separate test set. You can
    use each data point for learning once it arrives, and you will use the updated
    model for the prediction of the next data point to arrive. This more closely resembles
    a streaming use case.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我们将更新并跟踪学习过程中的准确率。你还将看到如何保持训练集和独立的测试集。你可以使用每个到达的数据点进行学习，然后使用更新后的模型来预测下一个到达的数据点。这更接近于流式使用案例。
- en: 'The steps to get there are as follows:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 达到这一步的步骤如下：
- en: Train-test split.
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 训练-测试集划分。
- en: Fit the model on the training data.
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在训练数据上拟合模型。
- en: Check out the learning curve.
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查看学习曲线。
- en: Compute performance metrics on the test data.
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在测试数据上计算性能指标。
- en: 'We will get started as follows:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将按以下步骤开始：
- en: 'Let''s start with a stratified train-test split on the data:'
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们从对数据进行分层训练-测试集划分开始：
- en: Code Block 4-7
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块 4-7
- en: '[PRE6]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'You can now redo the same learning loop as before but on the training data.
    You can see that there is a list called `correct` to track how the learning has
    gone over time:'
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你现在可以重新执行之前的相同学习循环，但这次是在训练数据上。你可以看到一个名为 `correct` 的列表，用于跟踪学习随时间的变化：
- en: Code Block 4-8
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块 4-8
- en: '[PRE7]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Let''s plot the cumulative sum of `correct` scores over time, to see whether
    the model learned well from the beginning, or whether the model had fewer errors
    at the end of the learning curve:'
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们绘制 `correct` 分数随时间的累积总和，以查看模型是否从一开始就学得很好，或者模型在学习曲线的末尾是否有更少的错误：
- en: Code Block 4-9
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块 4-9
- en: '[PRE8]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'You can see that the learning curve is quite linear; the accuracy stays more
    or less constant over time. It would have been expected to see an improvement
    in accuracy over time (more correct responses over time, with an exponential-like
    curve) if the ml was actually improving with training. You can check out the learning
    curve in the following graph:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以看到学习曲线相当线性；准确率在时间上保持大致不变。如果机器学习实际上随着训练而改进，那么预计会看到准确率随时间提高（随着时间的推移，正确响应增多，呈现指数曲线）的情况。你可以在以下图表中查看学习曲线：
- en: '![Figure 4.5 – The learning curve'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 4.5 – 学习曲线](img/Figure_4.5 – The_learning_curve.jpg)'
- en: '](img/B18335_04_005.jpg)'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/B18335_04_005.jpg](img/B18335_04_005.jpg)'
- en: Figure 4.5 – The learning curve
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.5 – 学习曲线
- en: 'Finally, let''s compute the accuracy on the test score to see how well the
    model generates out-of-sample data:'
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，让我们计算测试分数上的准确率，以查看模型生成样本外数据的性能如何：
- en: Code Block 4-10
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块 4-10
- en: '[PRE9]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: The score that this obtained is `0.94`, which is slightly lower than the `1.0`
    obtained on the train set. This teaches us that the model learned quite well.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 这个得分是 `0.94`，略低于在训练集上获得的 `1.0`。这告诉我们模型学得相当好。
- en: In the coming chapters, you'll see more tricks and tools that can help improve
    models and accuracy.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的章节中，你将看到更多可以帮助提高模型和准确率的技巧和工具。
- en: Building a multiclass classifier using one-vs-rest
  id: totrans-132
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 one-vs-rest 构建多类分类器
- en: 'In the previous example, you have seen how to build a binary classifier. To
    do this, you reclassified the target variable into *setosa-vs-rest*. However,
    you would want to build one model that allows you to do all of the three classes
    at the same time. This can be done using River''s `OneVsRest` classifier. Let''s
    now see an example of this:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一个例子中，你已经看到了如何构建一个二元分类器。为此，你将目标变量重新分类为 *setosa-vs-rest*。然而，你可能希望构建一个模型，能够同时处理所有三个类别。这可以通过使用
    River 的 `OneVsRest` 分类器来实现。现在让我们看看一个例子：
- en: 'You can start with the same train-test split as before, except that now, you
    can stratify on the class:'
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以从之前的相同训练-测试集划分开始，但现在，你可以对类别进行分层：
- en: Code Block 4-11
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块 4-11
- en: '[PRE10]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'You then fit the model on the training data. The code is almost the same, except
    that you use `OneVsRestClassifier` around the call to `LogisticRegression`:'
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后你在训练数据上拟合模型。代码几乎相同，只是你在调用`LogisticRegression`时使用`OneVsRestClassifier`：
- en: Code Block 4-12
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块 4-12
- en: '[PRE11]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'When looking at the learning over time, you can see that the model has started
    learning better after around 40 observations. Before 40 observations, it had much
    fewer correct predictions than after:'
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当观察学习随时间的变化时，你可以看到模型在约40个观测值之后开始更好地学习。在40个观测值之前，它的正确预测比之后少得多：
- en: Code Block 4-13
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块 4-13
- en: '[PRE12]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'The plot looks as follows. It clearly has a less steep slope in the first 40
    observations and accuracy improves after that:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 图形如下所示。它在前40个观测值中有一个较缓的斜率，之后的准确性有所提高：
- en: '![Figure 4.6 – A better learning curve'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 4.6 – 更好的学习曲线'
- en: '](img/B18335_04_006.jpg)'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B18335_04_006.jpg)'
- en: Figure 4.6 – A better learning curve
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.6 – 更好的学习曲线
- en: 'You can again use `predict_many` to see whether the predictions are any good.
    When doing `predict`, you will now not have `True`/`False`, but instead, have
    the string values of each of the iris types:'
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以使用`predict_many`再次查看预测是否准确。当你进行`predict`操作时，现在你将不会得到`True`/`False`，而是得到每个鸢尾花类型的字符串值：
- en: Code Block 4-14
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块 4-14
- en: '[PRE13]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'This results in the following output:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 这导致了以下输出：
- en: '![Figure 4.7 – The multiclass target'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 4.7 – 多类目标'
- en: '](img/B18335_04_007.jpg)'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B18335_04_007.jpg)'
- en: Figure 4.7 – The multiclass target
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.7 – 多类目标
- en: 'The test accuracy of the model can be computed using the following code:'
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 可以使用以下代码计算模型的测试准确率：
- en: Code Block 4-15
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块 4-15
- en: '[PRE14]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: The model obtains an accuracy score of `0.63` on the test data.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 模型在测试数据上获得了`0.63`的准确率。
- en: Summary
  id: totrans-158
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, you have learned the basics of online machine learning in both
    theory and practice. You have seen different types of online machine learning,
    including incremental, adaptive, and reinforcement learning.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你已经在理论和实践两方面学习了在线机器学习的基础知识。你看到了不同类型的在线机器学习，包括增量学习、自适应学习和强化学习。
- en: You have seen a number of advantages and disadvantages of online machine learning.
    Among other reasons, you may be almost obliged to refer to online methods if quick
    relearning is required. A disadvantage is that fewer methods are commonly available,
    as batch learning remains the industry standard for now.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 你已经看到了在线机器学习的许多优点和缺点。在其他原因中，如果你需要快速重新学习，你可能几乎不得不参考在线方法。一个缺点是，由于批处理学习仍然是目前的行业标准，因此可用的方法较少。
- en: Finally, you have started practicing and implementing online machine learning
    through a Python example on the well-known iris dataset.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，你已经开始通过一个Python示例在著名的鸢尾花数据集上练习和实现在线机器学习。
- en: In the coming chapter, you'll go much deeper into online machine learning, focusing
    on anomaly detection. You'll see how machine learning can be used to replace the
    fixed rule alerting system that was built in previous chapters. In the chapters
    after that, you'll learn more about online classification and regression using
    River with examples that continue the learnings from the iris classification model
    from the current chapter.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，你将更深入地学习在线机器学习，重点关注异常检测。你将看到机器学习如何被用来替代之前章节中构建的固定规则警报系统。在随后的章节中，你将学习更多关于使用River进行在线分类和回归的知识，并通过继续本章中鸢尾花分类模型的例子来学习。
- en: Further reading
  id: totrans-163
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: '*UCI Machine Learning Repository*: [https://archive.ics.uci.edu/ml/index.php](https://archive.ics.uci.edu/ml/index.php)'
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*UCI机器学习仓库*：[https://archive.ics.uci.edu/ml/index.php](https://archive.ics.uci.edu/ml/index.php)'
- en: 'River ML: [https://riverml.xyz/latest/](https://riverml.xyz/latest/)'
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: River ML：[https://riverml.xyz/latest/](https://riverml.xyz/latest/)
- en: '*Online Machine Learning*: [https://en.wikipedia.org/wiki/Online_machine_learning](https://en.wikipedia.org/wiki/Online_machine_learning)'
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*在线机器学习*：[https://en.wikipedia.org/wiki/Online_machine_learning](https://en.wikipedia.org/wiki/Online_machine_learning)'
- en: '*Incremental Learning*: [https://en.wikipedia.org/wiki/Incremental_learning](https://en.wikipedia.org/wiki/Incremental_learning)'
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*增量学习*：[https://en.wikipedia.org/wiki/Incremental_learning](https://en.wikipedia.org/wiki/Incremental_learning)'
- en: '*Reinforcement Learning*: [https://en.wikipedia.org/wiki/Reinforcement_learning](https://en.wikipedia.org/wiki/Reinforcement_learning)'
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*强化学习*：[https://en.wikipedia.org/wiki/Reinforcement_learning](https://en.wikipedia.org/wiki/Reinforcement_learning)'
- en: 'Logistic Regression: [https://www.statisticssolutions.com/free-resources/directory-of-statistical-analyses/what-is-logistic-regression/](https://www.statisticssolutions.com/free-resources/directory-of-statistical-analyses/what-is-logistic-regression/)'
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 逻辑回归：[https://www.statisticssolutions.com/zh-cn/免费资源/统计分析目录/什么是逻辑回归/](https://www.statisticssolutions.com/zh-cn/免费资源/统计分析目录/什么是逻辑回归/)
- en: 'One vs Rest: [https://stats.stackexchange.com/questions/167623/understanding-the-one-vs-the-rest-classifier](https://stats.stackexchange.com/questions/167623/understanding-the-one-vs-the-rest-classifier)'
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一对余：[https://stats.stackexchange.com/questions/167623/understanding-the-one-vs-the-rest-classifier](https://stats.stackexchange.com/questions/167623/understanding-the-one-vs-the-rest-classifier)
- en: '*Multiclass classification*: [https://en.wikipedia.org/wiki/Multiclass_classification](https://en.wikipedia.org/wiki/Multiclass_classification)'
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*多类分类*：[https://zh.wikipedia.org/wiki/多类分类](https://zh.wikipedia.org/wiki/多类分类)'
- en: 'scikit-learn metrics: [https://scikit-learn.org/stable/modules/model_evaluation.html](https://scikit-learn.org/stable/modules/model_evaluation.html)'
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: scikit-learn 评估指标：[https://scikit-learn.org/stable/zh/latest/modules/model_evaluation.html](https://scikit-learn.org/stable/zh/latest/modules/model_evaluation.html)
