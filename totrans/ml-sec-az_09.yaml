- en: '9'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Logging, Monitoring, and Threat Detection
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Following best practices is not enough. The threat landscape changes every day
    and adversaries find new ways to gain access to our resources. Monitoring the
    safeguards we have put in place is vital to maintaining our security posture.
    In this chapter, we will see how to monitor our resources and see how effective
    our security measures are in preventing and detecting threats. We will learn how
    Azure Monitor works and how to configure logging, retention, and notifications.
    Finally, we will explore some features of Defender for Cloud and Microsoft Sentinel
    that can further help us protect our resources and mitigate threats even in real
    time.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we’re going to cover the following main topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Enabling logging and configuring data retention for Azure services
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Securing resources with Microsoft Defender
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Exploring threat management with Sentinel
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: By the end of this chapter, we will be able to set up alerts, create analytics
    queries, improve our organization’s security posture, and see what the next steps
    are in skilling up to mitigate threats in real time.
  prefs: []
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Although this chapter deals mostly with monitoring and logging, knowing the
    **Kusto Query Language** (**KQL**) might come in handy when implementing solutions.
  prefs: []
  type: TYPE_NORMAL
- en: KQL is a query language used to query, analyze, and visualize large datasets
    stored in Azure Data Explorer, Azure Monitor, Microsoft Sentinel, and Application
    Insights. KQL is a powerful language that allows you to perform various operations
    on your data, including filtering, aggregating, joining, and visualizing it.
  prefs: []
  type: TYPE_NORMAL
- en: KQL learning resources
  prefs: []
  type: TYPE_NORMAL
- en: 'Some resources to learn KQL can be found here: https://learn.microsoft.com/en-us/azure/data-explorer/kql-learning-resources.'
  prefs: []
  type: TYPE_NORMAL
- en: Enabling logging and configuring data retention for Azure services
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As soon as we create an Azure subscription, we get full monitoring capabilities
    with the **Azure Monitor** service. This is a service where we do not need to
    enable or do any action, it is automatically available for our subscriptions.
    Although it provides us with full stack monitoring and advanced analytics, there
    are different things we can do with services that work on top of Azure Monitor.
    Azure Monitor can monitor and combine data in Azure, on-premises, and other clouds.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can access the Azure Monitor service by searching for `monitor` on the
    search bar and clicking on the resource. In this blade, you will see all Monitor
    has to offer:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.1 – An Azure Monitor overview](img/B21076_09_1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.1 – An Azure Monitor overview
  prefs: []
  type: TYPE_NORMAL
- en: Let us see the key components of Azure Monitor.
  prefs: []
  type: TYPE_NORMAL
- en: Working with Azure Monitor
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: There are two types of data Monitor gathers, **metrics** and **logs**. Metrics
    are numerical values that represent various aspects of the performance and health
    of Azure resources at a specific point in time. These metrics provide real-time
    data about how a resource is functioning and can be used to monitor and troubleshoot
    applications and infrastructure in Azure. Azure Monitor collects a wide range
    of metrics, including performance indicators such as CPU usage, memory usage,
    network traffic, and disk activity. These metrics are specific to different types
    of resources, such as virtual machines, databases, and web apps.
  prefs: []
  type: TYPE_NORMAL
- en: Metrics in Azure Monitor are collected at different time frames, depending on
    the type of resource. For example, some metrics might be collected every minute,
    while others might be collected every hour. Metrics collected by Azure Monitor
    metrics are also used in Azure autoscale to automatically adjust the number of
    resources in a resource group, based on demand. Data is retained in the service
    for 90 days. For longer retention, there are other services such as *Log Analytics*
    or infinite retention in a *Storage account* using the Azure APIs.
  prefs: []
  type: TYPE_NORMAL
- en: 'In the following screenshot, we can see how metrics are visualized in graphs:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.2 – Azure Monitor metrics](img/B21076_09_2.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.2 – Azure Monitor metrics
  prefs: []
  type: TYPE_NORMAL
- en: These graphs can be filtered and modified to show different metrics, can be
    used to generate alerts, and can be saved and added to Azure dashboards.
  prefs: []
  type: TYPE_NORMAL
- en: Azure Monitor also collects logs. Logs are records of events from various sources
    across your Azure subscriptions and tenants. Logs can be collected from a wide
    variety of sources, including Azure resources, guest operating systems, databases,
    security events, networking event applications, and custom logs from external
    sources that use APIs to import data.
  prefs: []
  type: TYPE_NORMAL
- en: 'Logs and metrics work together in Azure Monitor. You can correlate metrics
    data with log data to gain a comprehensive view of the health and performance
    of your resources. We can view individual logs for each resource by going to the
    **Resource** blade and clicking on **Activity log**, as shown in the following
    screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.3 – Azure Monitor logs](img/B21076_09_3.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.3 – Azure Monitor logs
  prefs: []
  type: TYPE_NORMAL
- en: The activity log is also available from the Monitor main page or the top bar
    in the Azure portal by clicking the bell icon. You can get metrics and logs via
    the Rest API and command-line tools.
  prefs: []
  type: TYPE_NORMAL
- en: 'Monitor also has built-in RBAC roles when interacting with monitoring or **Log
    Analytics** data. Take a look at the following screenshot of the table to see
    what these roles can do:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.4 – Azure Monitor RBAC](img/B21076_09_4.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.4 – Azure Monitor RBAC
  prefs: []
  type: TYPE_NORMAL
- en: Moving forward, let us see how we can query and gain insights from the logs
    using Log Analytics.
  prefs: []
  type: TYPE_NORMAL
- en: Setting up Log Analytics
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Azure Monitor holds data for 90 days as we saw previously. If we need to hold
    data for a longer time period, we can use Log Analytics. It is a powerful tool
    that helps us collect data from multiple sources and save it in one or more workspaces,
    which act as containers for our logs. They provide a scope for queries, views,
    and other configurations. We can have multiple workspaces to organize and manage
    log data from different sources. These queries can be visualized, exported, and
    saved for continuous monitoring. Azure Monitor Logs uses KQL to query and analyze
    log data. KQL is a powerful, SQL-like language specifically designed to query
    large datasets efficiently. It allows us to perform complex searches and analytics
    on our logs.
  prefs: []
  type: TYPE_NORMAL
- en: 'To start collecting logs, we need to create a Log Analytics workspace. Search
    for `Log Analytics workspaces` and then click on **+ Create** to create a new
    workspace, as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.5 – Azure Log Analytics workspaces](img/B21076_09_5.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.5 – Azure Log Analytics workspaces
  prefs: []
  type: TYPE_NORMAL
- en: On the creation form, fill in the name and the rest of the required information,
    and then click the **Review + Create** button to deploy the resource.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.6 – Create Log Analytics workspace](img/B21076_09_6.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.6 – Create Log Analytics workspace
  prefs: []
  type: TYPE_NORMAL
- en: Now that we have a Log Analytics workspace, all we need is some data. In the
    next section, let us see how to enable diagnostics settings for our Azure Machine
    Learning resource and send them to the workspace.
  prefs: []
  type: TYPE_NORMAL
- en: Enabling diagnostic settings
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Azure diagnostic settings allow us to collect and route diagnostic data from
    various Azure resources to different destinations for analysis, monitoring, and
    compliance. This feature helps you gain insights into the performance and operational
    health of our resources and provides us with filtering and bigger retention, depending
    on what the destination is. Common destinations include an Azure **Storage account**,
    **Log****Analytics workspace**, and **Event Hubs**. We can send data to multiple
    destinations simultaneously. For example, we can send data to both, a Log Analytics
    workspace and an Azure Storage account, for redundancy or different types of analysis.
  prefs: []
  type: TYPE_NORMAL
- en: Let us enable **Diagnostic settings** on our Azure Machine Learning resource.
  prefs: []
  type: TYPE_NORMAL
- en: 'To start, open your Azure Machine Learning resource, select **Diagnostic settings**,
    and click on **Add diagnostic setting**, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.7 – Add diagnostic setting](img/B21076_09_7.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.7 – Add diagnostic setting
  prefs: []
  type: TYPE_NORMAL
- en: 'Select the log categories you are interested in and click to choose the destination
    details. For this one, we will use the **Log Analytics** resource we created in
    the previous section. Check the **Send to Log Analytics workspace** checkbox and
    provide the required details, as shown in the following screenshot. Then, click
    on **Save**:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.8 – Selecting log categories and a destination](img/B21076_09_8.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.8 – Selecting log categories and a destination
  prefs: []
  type: TYPE_NORMAL
- en: One of the most important reasons we have to enable additional logs and more
    data is to get notifications when something is happening in our system. Let us
    review how to set up alerts in Azure Monitor.
  prefs: []
  type: TYPE_NORMAL
- en: Working with alerts
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Alerts help us to monitor and manage resources in Azure. We can use alerts and
    get notifications when certain conditions are met, which can help us proactively
    respond to issues or changes. There are a lot of components that go into creating
    and working with alerts, so let us see what they are.
  prefs: []
  type: TYPE_NORMAL
- en: 'We will start by going to **Alerts** under the **Monitor** blade. Here, we
    can see **Alerts** that have been fired by priority and create new alerts:'
  prefs: []
  type: TYPE_NORMAL
- en: n
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.9 – Monitor | Alerts](img/B21076_09_9.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.9 – Monitor | Alerts
  prefs: []
  type: TYPE_NORMAL
- en: However, before we dive into **Alerts** creation, let us review action groups.
  prefs: []
  type: TYPE_NORMAL
- en: Creating an action group
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: It is better to create an action group before we create an alert. Action groups
    define a set of notifications and actions to be taken when an alert is triggered.
    This can include sending emails and SMS messages, making HTTP requests, and triggering
    Azure functions. We can create am action group directly from the alert form, but
    it makes things simpler if it already exists.
  prefs: []
  type: TYPE_NORMAL
- en: Click on **Create**, and from the dropdown, choose **Action group**. This will
    take you to the **Create action group** form. Fill in some basic details, as shown
    in the following screenshot, and click **Next**.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.10 – The Create action group basic details](img/B21076_09_10.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.10 – The Create action group basic details
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, in the **Notifications** tab, there are two types of notifications we
    can create – email to a specific role or email/send an SMS to a specific account/number.
    We will configure both options here. Choose **Email Azure Resource Manager Role**
    on the dropdown to reveal the menu on the right. Choose **Owner** as the role,
    and click **OK**. There are other options for the role to be notified, including
    **Contributor** and **Reader**. On this screen, you also need to provide a name:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.11 – Creating a role notification](img/B21076_09_11.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.11 – Creating a role notification
  prefs: []
  type: TYPE_NORMAL
- en: 'On the next row, choose the second option of the **Email/SMS message/Push/Voice**
    dropdown to reveal the menu on the right. Here, the easiest way to get notifications
    is to provide an email or send a push notification to the Azure mobile app; however,
    there are more options available that might incur extra charges, such as **SMS**
    and **Voice**. Check the desired option and provide the necessary details. For
    example, in the **Email** section, you have to provide an individual email as
    shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.12 – Creating an email notification](img/B21076_09_12.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.12 – Creating an email notification
  prefs: []
  type: TYPE_NORMAL
- en: 'If you need more roles or more emails, you can always add more rows and configure
    them accordingly. This is how it looks:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.13 – Multiple notifications enabled](img/B21076_09_13.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.13 – Multiple notifications enabled
  prefs: []
  type: TYPE_NORMAL
- en: As soon as you are done, click **Next** to go to the next tab, **Actions**.
  prefs: []
  type: TYPE_NORMAL
- en: 'In the **Actions** tab, we can set up actions. Actions are not required; however,
    it is another way for doing both, sending a notification and triggering some other
    action in one step. Our options include the following, as shown in the following
    screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.14 – Action types](img/B21076_09_14.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.14 – Action types
  prefs: []
  type: TYPE_NORMAL
- en: 'We will not set anything, but let us review our options anyway. Some of these
    we have already seen in [*Chapter 8*](B21076_08.xhtml#_idTextAnchor176):'
  prefs: []
  type: TYPE_NORMAL
- en: '**Automation Runbook**: Runbooks are a way to automate tasks in Azure. They
    are built using PowerShell, Python, or a graphical workflow designer. They can
    perform a wide range of tasks, from simple scripts to complex workflows involving
    multiple Azure services.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Azure Function**: This is a serverless compute service that allows us to
    run event-triggered code without having to explicitly provision or manage infrastructure.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Event Hub**: This is designed to collect, process, and analyze large streams
    of events or data. An event hub can handle millions of events per second, making
    it a powerful tool to process high-throughput data streams.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**ITSM**: This is a way to integrate Azure Monitor alerts with **IT Service
    Management** (**ITSM**) tools such as ServiceNow or System Center Service Manager.
    It allows you to automatically create incidents or tickets in your ITSM system
    when specific conditions in your alerts are met.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Logic App**: This is a cloud-based workflow automation platform that enables
    you to automate and integrate various tasks and business processes across different
    applications and services, using a visual designer and connectors.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Secure Webhook**/**Webhook**: Another way for an application to provide other
    apps with real-time information is by using a webhook.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: These are all our options under **Actions**. Depending on the specific case,
    we might need multiple action groups, and as soon as we have them in place, we
    are ready to start creating alert rules.
  prefs: []
  type: TYPE_NORMAL
- en: Creating alert rules
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To create a new alert rule, click on **Create**, and on the dropdown, choose
    **Alert rules**. This will take us to the **Create an alert** **rule** form:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.15 – The Alerts blade](img/B21076_09_15.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.15 – The Alerts blade
  prefs: []
  type: TYPE_NORMAL
- en: The first step is to choose the scope of the rule. This can be a subscription,
    a resource, or a resource group. Here, we can choose the Azure Machine Learning
    resource.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.16 – Selecting a scope](img/B21076_09_16.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.16 – Selecting a scope
  prefs: []
  type: TYPE_NORMAL
- en: 'On the second tab, we can select **Condition**. There are different types of
    conditions:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Based on metrics emitted by Azure resources**: For example, you can set an
    alert to trigger when CPU usage exceeds a certain threshold'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Based on operations performed on resources**: For instance, you can set an
    alert to trigger when a specific type of operation occurs, such as a virtual machine
    being deleted'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Based on log queries against data collected by Azure Monitor Logs**: You
    can create complex queries to define the conditions for your alert'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Here, go to the **Select a signal** dropdown, and select the **All Administrative
    operations** option. This will send an alert for any administrative change on
    the Azure Machine Learning resource:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.17 – Select a signal](img/B21076_09_17.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.17 – Select a signal
  prefs: []
  type: TYPE_NORMAL
- en: 'Depending on the signal, you might get more options, such as frequency, but
    here, we have only a few in terms of **Alert logic**, as shown in the following
    screenshot. Leave the values as default and click **Next**:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.18 – Alert logic](img/B21076_09_18.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.18 – Alert logic
  prefs: []
  type: TYPE_NORMAL
- en: 'On the **Actions** tab, choose the action group we created previously and click
    **Next**:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.19 – Select action groups](img/B21076_09_19.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.19 – Select action groups
  prefs: []
  type: TYPE_NORMAL
- en: 'On the **Details** tab, we can fill in some basic details to ensure that we
    can recognize the alert in the list, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.20 – The alert name and description](img/B21076_09_20.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.20 – The alert name and description
  prefs: []
  type: TYPE_NORMAL
- en: Now that we have completed the configuration, all we have to do is wait for
    the alert to fire.
  prefs: []
  type: TYPE_NORMAL
- en: Let us see in the following section how we can manage multiple alerts.
  prefs: []
  type: TYPE_NORMAL
- en: Managing alerts
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'When events fire, you will get notified depending on how you have set up the
    action group. Another way to monitor alerts is from the **Alerts** menu in the
    **Monitor** blade, as shown in the following screenshot, where we can see an event
    firing. Alerts can be filtered by resource or severity:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.21 – Alerts fired](img/B21076_09_21.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.21 – Alerts fired
  prefs: []
  type: TYPE_NORMAL
- en: 'To ensure that not everyone works on the same alert, we can change the user
    response on this alert by clicking the three-dot menu on the right, switching
    from **New** to either **Acknowledged** or even **Closed**, as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.22 – Changing a user response](img/B21076_09_22.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.22 – Changing a user response
  prefs: []
  type: TYPE_NORMAL
- en: Remember that Azure Monitor alerts are a critical part of maintaining the health
    and performance of your Azure resources. Properly configured alerts can help you
    stay proactive in managing your resources and responding to any issues promptly.
    Although throughout this chapter we will see more ways to monitor our resources,
    this is the fastest and simplest way to get started.
  prefs: []
  type: TYPE_NORMAL
- en: Now, let us see how to monitor our models and endpoints using Application Insights.
  prefs: []
  type: TYPE_NORMAL
- en: Working with Application Insights
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'When we created a workspace, one of the associated resources was **Application
    Insights**. Application Insights works on top of Monitor and provides real-time
    monitoring of your applications. It tracks various metrics such as request rates,
    response times, failure rates, and dependencies. This helps you identify performance
    bottlenecks, errors, and exceptions. Applications Insights can help us troubleshoot
    ML endpoints deployed in **Azure Kubernetes Service** (**AKS**) or **Azure Container
    Instances** (**ACI**). Application Insights collects the following information:'
  prefs: []
  type: TYPE_NORMAL
- en: Exceptions
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Responses
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Output data
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Request rates, response times, and failure rates
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dependency rates, response times, and failure rates
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let us see how to enable Insights via the Azure Machine Learning Studio or the
    SDK.
  prefs: []
  type: TYPE_NORMAL
- en: Configuring logging via the Studio and SDK
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'In [*Chapter 1*](B21076_01.xhtml#_idTextAnchor015), we deployed a model to
    an ACI endpoint. In the model deployment screen, all we have to do to enable Application
    Insights is to expand the **Advanced** dropdown and check the **Enable Application
    Insights diagnostics and data collection** checkbox, as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.23 – Model deployment advanced settings](img/B21076_09_23.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.23 – Model deployment advanced settings
  prefs: []
  type: TYPE_NORMAL
- en: Now, after deployment, we will get insights regarding this endpoint. If you
    are already using the SDK, the process might be simpler. Depending on the service,
    all you need to do is set the `enable_app_insights` flag to `true` or `false`
    to enable or disable logging, respectively.
  prefs: []
  type: TYPE_NORMAL
- en: 'First, we need to get a reference to the web service and then update the flag,
    as shown in the following code snippet:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Then, we can see the results in the **Applications Insights** resource blade:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.24 – Application Insights](img/B21076_09_24.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.24 – Application Insights
  prefs: []
  type: TYPE_NORMAL
- en: Here, besides the logs and metrics available, we can integrate with DevOps,
    create a live metrics stream, and track users and sessions along with dependent
    apps and services. By clicking on **Logs**, we can run log analytics queries.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is an example of a simple KQL query:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Let’s examine the query:'
  prefs: []
  type: TYPE_NORMAL
- en: '`requests`: This is the table that contains information about all the HTTP
    requests made to your application.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`where timestamp > ago(24h)`: This line filters the requests to only include
    those that occurred in the last 24 hours. You can adjust the time frame as needed.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`where resultCode !startswith "2"`: This line filters for requests where `resultCode`
    does not start with `2`. This effectively filters for non-`2xx` status codes,
    which usually indicate an error.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`project`: This selects specific columns to display in the result. You can
    adjust this to include more or fewer columns, depending on your needs.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`order by timestamp desc`: This line orders results by timestamp in descending
    order so that you see the most recent errors first.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: This query will provide you with information about recent requests that resulted
    in errors, including details such as the timestamp, request name, URL, status
    code, operation ID, duration, and client type. Depending on what we need to monitor,
    we would need to change the query to the appropriate tables. On top of that, we
    can add our own custom exceptions to the logs.
  prefs: []
  type: TYPE_NORMAL
- en: The Application Insights API for custom events and metrics
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To ingest or send data to the Applications Insight resource, make sure you
    familiarize yourselves with the available API and SDKs here: [https://learn.microsoft.com/en-us/azure/azure-monitor/app/api-custom-events-metrics](https://learn.microsoft.com/en-us/azure/azure-monitor/app/api-custom-events-metrics).
    Application Insights also provides a dashboard to monitor everything.'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.25 – The Application Insights dashboard](img/B21076_09_25.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.25 – The Application Insights dashboard
  prefs: []
  type: TYPE_NORMAL
- en: We can access this dashboard from the **Overview** blade of the Application
    Insights resource. All we need to do is click on **Application Dashboard** to
    open the dashboard view (as shown in *Figure 9**.24*).
  prefs: []
  type: TYPE_NORMAL
- en: Creating Azure dashboards
  prefs: []
  type: TYPE_NORMAL
- en: 'To learn more about the Application Insights dashboard, read this documentation:
    [https://learn.microsoft.com/en-us/azure/azure-monitor/app/overview-dashboard](https://learn.microsoft.com/en-us/azure/azure-monitor/app/overview-dashboard).'
  prefs: []
  type: TYPE_NORMAL
- en: 'To learn how to work with Azure dashboards in general, see here: [https://learn.microsoft.com/en-us/azure/azure-portal/azure-portal-dashboards](https://learn.microsoft.com/en-us/azure/azure-portal/azure-portal-dashboards).'
  prefs: []
  type: TYPE_NORMAL
- en: 'Dashboards can also be created programmatically by using templates. Find out
    more information in this link: [https://learn.microsoft.com/en-us/azure/azure-portal/azure-portal-dashboards-create-programmatically](https://learn.microsoft.com/en-us/azure/azure-portal/azure-portal-dashboards-create-programmatically).'
  prefs: []
  type: TYPE_NORMAL
- en: Application Insights is designed to help developers monitor the performance
    and usage of their applications, identify and diagnose issues, and gain insights
    into how users interact with our applications. It is very useful in Azure Machine
    Learning, as it can monitor your endpoints, and by using the connection string,
    we can also gather logs from our applications.
  prefs: []
  type: TYPE_NORMAL
- en: Logs and metrics can be difficult to read, but in large datasets, it is easier
    to visualize them. Let us see some ways that we can visualize metrics and logs
    gathered from Azure Monitor.
  prefs: []
  type: TYPE_NORMAL
- en: Visualizing the data
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: To visualize data from Azure Monitor, we have various tools and techniques.
    Let us see some of those here.
  prefs: []
  type: TYPE_NORMAL
- en: '**Dashboards**: Azure dashboards allow us to combine multiple visualizations
    (such as charts, tables, and other widgets) in a single view. We can pin visualizations
    from Azure Monitor Logs to a dashboard for easy access and monitoring. Dashboards
    can also be set as the Azure portal start page so that we can see them right away.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Workbooks**: Azure Workbooks provides a flexible and customizable way to
    visualize data from Azure Monitor logs. It includes a range of pre-built workbook
    templates for common scenarios, such as virtual machines, that can be customized
    to suit our specific needs. Workbooks can be shared with team members and scheduled
    for regular updates.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Log Analytics language**: You can write queries in the Azure Log Analytics
    query language to retrieve specific data from your logs. Once you have the data,
    you can use visualization functions to display it in a graphical format.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**PowerBI**: Power BI can connect to Azure Monitor logs and help you create
    more complex and interactive visualizations.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Azure Monitor is a critical tool to maintain the health and performance of your
    Azure infrastructure and applications. It’s particularly valuable for businesses
    running mission-critical applications in the cloud, as it helps in identifying
    and resolving issues quickly, optimizing resource utilization, and ensuring a
    smooth user experience.
  prefs: []
  type: TYPE_NORMAL
- en: Now, let us see a couple of other tools to help us monitor our resources, which
    can also provide security recommendations.
  prefs: []
  type: TYPE_NORMAL
- en: Securing resources with Microsoft Defender
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Microsoft Defender for Cloud** is a **cloud-native application protection
    platform** (**CNAPP**) designed specifically for cloud environments. It offers
    a comprehensive set of security measures and best practices, aimed at safeguarding
    cloud-based applications against a wide range of cyber attacks and vulnerabilities.
    Microsoft Defender for Cloud combines several functionalities, including a **cloud
    workload protection platform** (**CWPP**) focusing on infrastructure, storage,
    and so on, a **cloud security posture management** (**CSPM**) solution to prevent
    security issues, and a **DevSecOps** solution that helps to secure code across
    different clouds if needed. Defender includes a basic CSPM without additional
    cost. There are advanced features that you can enable on top of that, including
    attack path analysis, the cloud security explorer, advanced threat hunting, security
    governance, as well as tools to evaluate your security compliance across regulatory
    standards that apply to specific industries’ locations.'
  prefs: []
  type: TYPE_NORMAL
- en: Microsoft Defender for Cloud pricing
  prefs: []
  type: TYPE_NORMAL
- en: 'You can check out Defender pricing and features here: [https://azure.microsoft.com/en-us/pricing/details/defender-for-cloud/?v=17.23h](https://azure.microsoft.com/en-us/pricing/details/defender-for-cloud/?v=17.23h).'
  prefs: []
  type: TYPE_NORMAL
- en: Let us walk through the service and see how we can leverage it in our Azure
    Machine Learning resources.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following is the main blade of `Defender for Cloud` in the top search box:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.26 – Microsoft Defender for Cloud](img/B21076_09_26.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.26 – Microsoft Defender for Cloud
  prefs: []
  type: TYPE_NORMAL
- en: At first glance, we can see the **Security posture** secure score of our workloads,
    which is based on implemented security recommendations in our resources; our **Regulatory
    compliance** score, which is based on applied policies; our **Workload protections**
    percentage; and an inventory of monitored assets. There are also other articles
    available on the rest of the screen and announcements regarding Defender.
  prefs: []
  type: TYPE_NORMAL
- en: Let us see how we can use the information provided to secure our Azure Machine
    Learning resources.
  prefs: []
  type: TYPE_NORMAL
- en: Improving our security posture
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The first thing is to click on **Security posture** to see recommendations to
    improve our secure score. The secure score is an indicator that evaluates and
    assigns a score to the security status of your Azure resources and workloads.
    The lower the score, the less your resources are following security recommendations.
    To improve our score, we need to implement recommendations for each of our resources.
  prefs: []
  type: TYPE_NORMAL
- en: Note in the following screenshot that the security posture is evaluated for
    Azure, **Amazon Web Services** (**AWS**), and the **Google Cloud Platform** (**GCP**).
    You can connect your analytics and create a unified security blade.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.27 – Security posture](img/B21076_09_27.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.27 – Security posture
  prefs: []
  type: TYPE_NORMAL
- en: To get started with recommendations, click on your subscription on the **View**
    **recommendations** link.
  prefs: []
  type: TYPE_NORMAL
- en: 'Then, we can see the recommendations for all our resources:'
  prefs: []
  type: TYPE_NORMAL
- en: "![Figure 9.28 – \uFEFFRecommendations](img/B21076_09_28.jpg)"
  prefs: []
  type: TYPE_IMG
- en: Figure 9.28 – Recommendations
  prefs: []
  type: TYPE_NORMAL
- en: 'To focus on the Azure Machine Learning recommendations, filter this list appropriately.
    As my ML resources are in the same resource group, I will filter by **Resource
    group**, containing my Azure Machine Learning workspace and associated services:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.29 – Adding a filter to the resource group](img/B21076_09_29.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.29 – Adding a filter to the resource group
  prefs: []
  type: TYPE_NORMAL
- en: 'For each recommendation, we can see how the implementation will improve our
    score. All recommendations under each category must be implemented to get the
    aforementioned score increase. For example, the **Apply system updates** recommendation
    only has one action in the following screenshot, but the implementation will improve
    our score by **5%**. To implement the recommendation, you can click on the link
    to see more information:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.30 – Security posture recommendations](img/B21076_09_30.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.30 – Security posture recommendations
  prefs: []
  type: TYPE_NORMAL
- en: 'Here, we can see the issue severity, a description, the remediation steps,
    and the affected resources. We can then manually proceed and update the resources
    as instructed:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.31 – Recommendation remediation](img/B21076_09_31.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.31 – Recommendation remediation
  prefs: []
  type: TYPE_NORMAL
- en: We can even enforce this in the future by clicking the **Enforce** button, as
    shown in the previous screenshot, which will assign this recommendation as a policy.
  prefs: []
  type: TYPE_NORMAL
- en: Similarly, we can implement security recommendations in our Azure Machine Learning
    instance and any other resources in our subscriptions. The recommendations are
    part of the Azure security baseline, which we will analyze in more detail in [*Chapter
    10*](B21076_10.xhtml#_idTextAnchor203), where we will create a security baseline
    for our Azure Machine Learning environment by using security best practices.
  prefs: []
  type: TYPE_NORMAL
- en: Now, let us explore Microsoft Sentinel to help us secure and automate our response
    to security incidents.
  prefs: []
  type: TYPE_NORMAL
- en: Exploring threat management with Sentinel
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Microsoft Sentinel is a cloud-native **Security Information and Event Management**
    (**SIEM**) and **Security Orchestration, Automation, and Response** (**SOAR**)
    solution. It offers intelligent security analytics and threat intelligence centrally
    for Azure and other clouds. With Sentinel, we have smart alert detection, threat
    visibility, hunting, and response, all in a single pane. There are several benefits
    to using Sentinel for the aforementioned tasks:'
  prefs: []
  type: TYPE_NORMAL
- en: As a cloud solution, it scales with our data, and we pay for what we use.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Microsoft Sentinel gathers data using connectors from a wide range of sources,
    including Azure services, on-premises environments, and other clouds.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The service comes with built-in ML models that help to identify suspicious activities
    and reduce false positives. Over time, these models can be trained to improve
    their accuracy based on your organization’s unique patterns.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Threat hunting is done using KQL to identify threats, anomalies, and patterns,
    and there are templates available to get you started.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Beyond just detection, Microsoft Sentinel also allows you to automate common
    tasks and responses. This can help organizations respond more quickly to threats.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We can use workbooks to visualize and help teams drill down into data, find
    patterns, and understand security postures better.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Microsoft Sentinel provides tools to handle incidents, from identification to
    investigation to remediation.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Default data retention is at 30 days, but it can be increased to 90 days.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: To work with Sentinel, we need a Log Analytics workspace to gather logs. Refer
    to the previous sections of this chapter to create a new Log Analytics workspace.
    After you have a workspace, you can add Microsoft Sentinel to the workspace. Find
    `Microsoft Sentinel` from the search bar of the Azure portal, and on the page
    that loads, click on **Create**.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.32 – Microsoft Sentinel](img/B21076_09_32.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.32 – Microsoft Sentinel
  prefs: []
  type: TYPE_NORMAL
- en: In the next step, **Add Microsoft Sentinel to a workspace**, choose the workspace
    we created previously, as shown in the next screenshot.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.33 – Adding Sentinel to a workspace](img/B21076_09_33.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.33 – Adding Sentinel to a workspace
  prefs: []
  type: TYPE_NORMAL
- en: As soon as you add a workspace, you can leverage the Sentinel threat management
    capabilities. This is the main page of Sentinel. Everything you need to work with
    threat management can be found on the left menu.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let us explore the most useful features of Microsoft Sentinel:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Incidents**: In Microsoft Sentinel, incidents are compilations of related
    alerts, representing potentially harmful activities or patterns within a system.
    They provide a consolidated view to help security analysts estimate the scope
    and sequence of a potential attack. Incidents in Microsoft Sentinel are equipped
    with information such as the entities involved, a timeline of related alerts,
    and other relevant details. Incidents allow security teams to focus on broader
    events rather than individual alerts, helping prioritize responses based on the
    combined severity of related alerts.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Figure 9.34 – Incidents](img/B21076_09_34.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.34 – Incidents
  prefs: []
  type: TYPE_NORMAL
- en: '**Hunting**: Hunting in Microsoft Sentinel refers to proactive queries and
    exploration of data to identify signs of malicious or suspicious activities that
    haven’t necessarily raised automatic alerts. We can run predefined or custom KQL
    queries to filter through collected data, searching for anomalies or patterns
    of interest. The goal is to discover hidden threats, identify previously unnoticed
    patterns, and strengthen detection capabilities.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: To access hunting queries, click on **Hunting**. The process of creating a hunt
    is easy. From the main page, click on **New hunt**.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 9.35 – Hunting queries](img/B21076_09_35.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.35 – Hunting queries
  prefs: []
  type: TYPE_NORMAL
- en: Provide a *name* and more information if necessary, and then click **Create**.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.36 – A new hunt](img/B21076_09_36.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.36 – A new hunt
  prefs: []
  type: TYPE_NORMAL
- en: A hunt is composed of one or more queries. To add your query, click on the hunt
    name you just created, and under **Query actions**, you can select **New query**
    or **Add queries to hunt** to choose from existing queries. Queries are written
    in KQL.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.37 – Adding queries](img/B21076_09_37.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.37 – Adding queries
  prefs: []
  type: TYPE_NORMAL
- en: I chose the latter and selected these two queries from the list, as shown in
    the next screenshot.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.38 – Adding existing queries](img/B21076_09_38.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.38 – Adding existing queries
  prefs: []
  type: TYPE_NORMAL
- en: Now, you can run these queries to confirm your hypothesis and discover suspected
    threats. Upon discovery, we can create an incident directly from the hunting page.
  prefs: []
  type: TYPE_NORMAL
- en: '**Threat intelligence**: Threat intelligence in Microsoft Sentinel involves
    leveraging information about existing and emerging threats and vulnerabilities.
    Microsoft Sentinel integrates with Microsoft Defender’s Threat Intelligence, which
    provides data about known malicious IP addresses, URLs, file hashes, and so on.
    When this data matches activity in your environment, Sentinel can raise alerts.
    The integration of threat intelligence allows organizations to cross-reference
    their real-time data with known threat indicators, improving the detection of
    potential security breaches and understanding the broader threat landscape.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: These are just the basics. Sentinel has a lot of capabilities, as it integrates
    with multiple Microsoft services such as Defender for Cloud and Microsoft 365\.
    To skill up in Sentinel, take a look at the following resources, ranging from
    learning paths to certifications.
  prefs: []
  type: TYPE_NORMAL
- en: Get started with Microsoft Sentinel
  prefs: []
  type: TYPE_NORMAL
- en: 'To get started with Microsoft Sentinel, check out the following learning paths:
    [https://learn.microsoft.com/en-us/azure/sentinel/skill-up-resources](https://learn.microsoft.com/en-us/azure/sentinel/skill-up-resources).'
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we learned to utilize multiple services, ensuring we can monitor
    our resources effectively by enabling different services and learning how we can
    start to use the logs we gather to prevent security incidents. The first one we
    worked with was Azure Monitor, using Monitor alerts to make sure we can be notified
    about any issues. By combining the capabilities of Monitor Log Analytics and Application
    Insights, we can have end-to-end monitoring of our resources and our model endpoints.
    Additionally, by using Microsoft Defender for Cloud, we can get recommendations
    to implement best practices, and we can use Microsoft Sentinel for advanced threat
    management. Now that we have a comprehensive view of the best practices across
    different surface areas included in a ML project, we can combine them and see
    how we can build a security baseline for our Azure resources in the next chapter.
  prefs: []
  type: TYPE_NORMAL
- en: 'Part 4: Best Practices for Enterprise Security in Azure Machine Learning'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this part, you will review the best practices outlined in this book and explore
    more services that could be used to further secure your cloud resources. You will
    also see a sample solution architecture that incorporates all those practices.
    Finally, you will learn how to work with threat modeling, developing a strategy
    to maintain the same level of security and stay protected in the future.
  prefs: []
  type: TYPE_NORMAL
- en: 'This part has the following chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 10*](B21076_10.xhtml#_idTextAnchor203)*, Setting a Security Baseline
    for Your Azure Machine Learning Workloads*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
