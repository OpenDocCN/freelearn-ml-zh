- en: Feature Extraction - A Bag of Tricks
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we will provide a hands-on guide to the extraction and selection
    of features from real-life data, with emphasis on the fact that practical machine
    learning systems are all about proper feature engineering. This chapter will focus
    on teaching you the best practices for feeding data to your machine learning algorithms.
    Moreover, it will show you how to remove redundant data that can negatively impact
    the performance of your machine learning system. Lastly, it will show you some
    strategies for combining data from different sources.
  prefs: []
  type: TYPE_NORMAL
- en: 'We will cover the following topics in this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: Preprocessing
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dimensional reduction
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Data fusion
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A bag of tricks
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Preprocessing
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: What does preprocessing mean?
  prefs: []
  type: TYPE_NORMAL
- en: Beyond selecting a specific set of data that you want to use for a particular
    machine learning project, you also need to preprocess that data. This typically
    involves tasks such as formatting, cleaning, and sampling (or profiling). We won't
    be delving too far into the definitions of each of these tasks, and will assume
    that the reader grasps their meaning and purpose. We'll say that **formatting**
    is a way of simply putting the data source into a form that can be easily understood
    and consumed within your project. **Cleaning** is mostly concerned with removing
    unwanted data and **sampling** is all about reducing the overall size of the data
    for performance reasons.
  prefs: []
  type: TYPE_NORMAL
- en: Although, being a developer at heart, I am anxious to take on these tasks by
    crafting a script or perusing and selecting a function from an open source library,
    instead, let's explore what Watson Studio offers us for achieving these objectives.
  prefs: []
  type: TYPE_NORMAL
- en: The data refinery
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As part of preprocessing, Watson Studio gives you the ability to refine data.
    Refining data is described in the online documentation as the cleansing and shaping
    of data.
  prefs: []
  type: TYPE_NORMAL
- en: 'As you manipulate data within Watson Studio using the refinery feature, you
    build what is referred to as a customized data refinery flow. We can try out some
    of the features and functions offered by the data refinery by going through the
    following steps (starting with some setup):'
  prefs: []
  type: TYPE_NORMAL
- en: 'To create a project, you click on New project on the right side of the Watson
    Studio My Projects page, as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/9d10a881-21fb-410e-8866-972520fc53e8.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Next, choose a project starter. We''ll choose Data Engineering, as shown in
    the following screenshot (you may need to select or provision the required services
    at this step, depending upon what you selected; for our selection, no additional
    services are needed):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/45b8d86c-5741-40dd-94a1-7ec6d19f67f8.png)'
  prefs: []
  type: TYPE_IMG
- en: 'On the New project screen, you can add a name and description for the project,
    as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/db5afac9-205b-4a44-a685-1d88d348a4b2.png)'
  prefs: []
  type: TYPE_IMG
- en: At this point, you need to choose whether to restrict who you can add as collaborators
    (we'll use the default settings in this example), and you might be prompted to
    add services as you add assets that require them (in this example, no additional
    services will be needed, but as an FYI, you can also add other services after
    you create a project using the Settings page).
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, click on Create, as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/0b741bc9-f4ab-40ff-b539-246762aa39f5.png)'
  prefs: []
  type: TYPE_IMG
- en: 'After clicking on Create, Watson Studio will prepare the project for you, displaying
    the dialog shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/8fe07921-02e9-450f-8035-17c76aa9171a.png)'
  prefs: []
  type: TYPE_IMG
- en: And finally (typically, it only takes a minute or two), your new project will
    open, ready to go, and you can start having fun developing it!
  prefs: []
  type: TYPE_NORMAL
- en: Data
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Of course, every project needs data, and so the next step is to add data to
    our project. When you add data, it is considered a **data asset**, and by default,
    all of the project''s collaborators are automatically authorized to access the
    data. Go through the following steps to add a data file to your project:'
  prefs: []
  type: TYPE_NORMAL
- en: From the project's Assets page, click on the Find and add data icon, as shown
    in the following screenshot*:*
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/5f4911f4-0b61-4ec7-8bd5-047324cfe999.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Next, click on Load and then browse to find the file or drag it onto the Load
    pane, as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/28b19291-3742-4b5a-aa95-6686414724b4.png)'
  prefs: []
  type: TYPE_IMG
- en: You must stay on the page until the load is complete. You can cancel an ongoing
    load process if you want to stop loading a file. Be advised that there really
    isn't any progress indicator while the file is loading, so give it a few minutes!!
  prefs: []
  type: TYPE_NORMAL
- en: The file we are using in this project (`combine.csv`) is a comma-delimited text
    file containing statistics on players who attended the NFL scouting combine.
  prefs: []
  type: TYPE_NORMAL
- en: 'The files you add are saved in the object storage bin that is associated with
    your project and are listed as data assets on the **Assets** page of your project
    (as you can see in the preceding screenshot). From there, you must select the
    specific file and click on Add as data asset. At that point, you will be prompted
    to click on Apply, as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/da127cbb-65fa-47e8-aa29-b72979e72e19.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Now, we are ready to use the file in our project:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/6b54d8ae-a9a9-4dbc-a687-3240b0bd7ebf.png)'
  prefs: []
  type: TYPE_IMG
- en: Adding the refinery
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Let''s go through the following steps to add the refinery:'
  prefs: []
  type: TYPE_NORMAL
- en: 'To access the IBM Watson Studio data refinery, you can click on Add to project,
    as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/1dfdf932-830c-4b55-80bb-1ead5c67da74.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Then, choose Data Refinery Flow, as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/c30b5262-129e-45f3-a93d-80578d6c2b2f.png)'
  prefs: []
  type: TYPE_IMG
- en: 'After you''ve invoked the refinery, you need to add our data file (by clicking
    on the data asset (file)) and then click on **Add** at the bottom-right of the
    page. Once the data is read into the refinery (as shown in the following screenshot),
    you will be ready to process it:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/e1a7ba6e-7d9b-4e6c-880e-76b1d0415fd4.png)'
  prefs: []
  type: TYPE_IMG
- en: Refining data by using commands
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Rather than using scripting to process or refine your data, you can use commands
    (also known as **operations**) to preprocess the data. To do this, you can start
    by entering a command (or **operation name**) and let Watson Studio's autocomplete
    function help you find the right operation and syntax (no programming involved!).
  prefs: []
  type: TYPE_NORMAL
- en: Note that, if you hover over any operation or function name, you'll see both
    a description and detailed information for completing the command.
  prefs: []
  type: TYPE_NORMAL
- en: When you're ready, you can then click on Apply to add the operation to your
    data refinery flow.
  prefs: []
  type: TYPE_NORMAL
- en: 'For example, you might want to sort or reorder a column of data. If you start
    typing `arra`, you''ll see the following result:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/1e0d7c6e-84bf-4223-98d8-8913cf73ffb3.png)'
  prefs: []
  type: TYPE_IMG
- en: 'If you then click to select the arrange() function, you can click on the ()
    and select a column from your data file, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/99dd668b-2e31-4a6c-a6cc-66344a81896a.png)'
  prefs: []
  type: TYPE_IMG
- en: 'When you''re ready, click on the Apply button to add the command to the data
    refinery flow, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/5558dd3b-66ea-4de0-95ff-c5db14b0d8be.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Without saving the data refinery (more on this in a moment), Watson Studio
    will display the effect of applying the command to your data, as shown in the
    following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/1e96330a-0572-4106-969b-0a7803cda3ed.png)'
  prefs: []
  type: TYPE_IMG
- en: 'There are numerous commands available to add to the data refinery flow. Each
    command will be added as a step within the flow. If you click on Steps (as shown
    in the following screenshot) you can view and edit each of the steps you have
    defined for the flow; you can even delete them, if you wish. In our case, I have
    added three steps: the first to arrange (sort) the data, the second to convert
    the first column from a string into an integer, and the third to filter out only
    those records for the years before 2011, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/f715883f-13e6-4770-92c0-1ddc47e2782f.png)'
  prefs: []
  type: TYPE_IMG
- en: 'At any time, you can save and run the data refinery flow by clicking the save
    data refinery flow and run data refinery flow icons shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/1d9b0f4e-4a07-4aae-8a95-d5261b42539b.png)'
  prefs: []
  type: TYPE_IMG
- en: Again, there are commands to perform almost any of the preprocessing tasks required
    in most machine learning projects, such as `group`, `rename`, `sample_n`, and
    `summarize`. Perhaps most importantly, the data refinery provides scripting support
    for the many `dplyr` R library operations, functions, and logical operators. For
    example, `sample_frac` and `sample_n` are supported by the data refinery and are
    very useful for generating sample datasets for your original data source.
  prefs: []
  type: TYPE_NORMAL
- en: 'We can use the following command to take our original file (`combine_.csv`)
    and create a data refinery flow to generate a sample:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'The preceding command will generate the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/6aa399e9-8d2e-4c1c-87f8-82ae57ed0b42.png)'
  prefs: []
  type: TYPE_IMG
- en: This will automatically read our original file and create a a random sample
    of data based on the number of rows indicated (in our case, 99). The `replace`
    parameter indicates that if a dataset already exists with the output filename,
    then it will be overwritten.
  prefs: []
  type: TYPE_NORMAL
- en: 'After saving and running the data refinery flow, we will see a summary of our
    results (along with a list of our prior runs), as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/c9ce6b4a-7951-4fde-88db-b496ca236bdd.png)'
  prefs: []
  type: TYPE_IMG
- en: 'We can see that we have created a sample file from the original, named `combine.csv_sharped_199.csv`,
    as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/a6e92791-cc70-42ea-8ce8-e88e7f85f757.png)'
  prefs: []
  type: TYPE_IMG
- en: Dimensional reduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Dimensional reduction** is usually used to reduce the number of variables
    that are to be considered in an machine learning project. It is often used where
    columns of data in a file have more than an acceptable number of missing values,
    have low variance, or are extremely variable in nature. Before attempting to reduce
    your data source by removing those unwanted columns, you need to be comfortable
    that this is the right thing to be doing. In other words, you want to make sure
    that the data you reduce does not create a bias in the remaining data. Profiling
    the data is an excellent way to determine whether the dimensional reduction of
    a particular column or columns is appropriate. **Data** **profiling** is a technique
    that is used to examine **data** to determine its accuracy and completeness. This
    is the process of examining a **data source** to uncover the erroneous sections
    in the **data**.'
  prefs: []
  type: TYPE_NORMAL
- en: You can create effective scripts to accomplish this, and, as expected, there
    are numerous packages and libraries available to for you to download and use.
    However, once again, Watson Studio can easily do this for us.
  prefs: []
  type: TYPE_NORMAL
- en: We can gather the information we need to profile our data source without the
    need for scripting or programming by creating a data asset profile. The profile
    of a data asset created by Watson Studio by default includes generated metadata
    and statistics about the textual content of a data file.
  prefs: []
  type: TYPE_NORMAL
- en: To create a profile for your data, you can go to the asset's Profile page and
    click on Create Profile.
  prefs: []
  type: TYPE_NORMAL
- en: You can update any existing profile when the data changes.
  prefs: []
  type: TYPE_NORMAL
- en: 'After clicking on Create Profile, the results will be displayed, as shown in
    the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/13453bad-1445-4d40-9ac8-558d7fc6cf21.png)'
  prefs: []
  type: TYPE_IMG
- en: You can take a minute or two to scroll though the generated profile to view
    the various statistics, such as the overall number of columns and rows. You can
    search by column or data point, value frequencies, unique values, min/max, mean,
    and so on.
  prefs: []
  type: TYPE_NORMAL
- en: Data fusion
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Data fusion is not a data analysis practice, but rather describes the integration
    of data from disparate sources. Thankfully, you will find that you can use Watson
    Studio to collect and combine data sources without much effort.
  prefs: []
  type: TYPE_NORMAL
- en: With Watson Studio, you can set up a **catalog** for all of your data sources
    so that you can easily find and share data (and other assets). A catalog is a
    defined private space within an environment or organization. It is a way to organize
    your resources across many data science projects—resources such as data assets
    and analytical assets—and can be used to manage the access that users have to
    each of these assets.
  prefs: []
  type: TYPE_NORMAL
- en: 'What is particularly exciting about this feature is the fact that you can organize
    and control access to many different types of asset within a single catalog including
    the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Data in files
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Connected data
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Connections themselves
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Folders
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A host of other analytical assets (which we'll experiment with later in this
    book)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Catalog setup
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Creating a catalog is easy. Let''s create a catalog by going through the following
    steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Start by clicking on Catalog, then View All Catalogs, and then New Catalog,
    as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/b3081db9-ea70-4d04-8dda-c6f02a708f78.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Then provide, some basic information, such as a name and a description for
    your new catalog, and then click on Create, as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/bb0f780f-ff2d-4d80-8673-2caa3e36083f.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Almost instantly, the fresh new catalog will be created and ready to be used,
    as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/af08d0fa-847b-435f-a8eb-3bd9b2dba884.png)'
  prefs: []
  type: TYPE_IMG
- en: 'To add some assets to the catalog, you can click on Add to Catalog (in the
    top-right of the page) and select the type of asset you want to add (Local files,
    Connected asset, or Connection), as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/5673f1ef-5496-48c0-93fb-984ca8ba1d9b.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Here, we will just add some local files to our catalog. Once we click on Local
    files, the Add data assets from local files page will be displayed (as shown in
    the follow screenshot), where you can browse and select the files you want to
    add:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/532b5d73-3d33-40f4-ab2c-cfe292384ab9.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Once you have added all of your files to this page, you must click on Add,
    as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/289bd8b6-5e9e-409b-bb79-cf91930bc4e8.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Again, after a short pause, the catalog will be updated, organized, and ready
    to use, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/707e6493-c548-4b28-b880-c80bdfb5cc09.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Once you create and update your catalog, you can mange who can access the catalog,
    as well as how they can access it, by clicking on Access Control, as shown in
    the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/1fd87c89-5815-4072-8538-61c4fbcaca9e.png)'
  prefs: []
  type: TYPE_IMG
- en: Watson Studio catalogs allow collaborators to quickly and easily find, preview,
    rate, and consume each asset in the catalog. We will look at catalogs in more
    detail later in this book.
  prefs: []
  type: TYPE_NORMAL
- en: Recommended assets
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Another cool feature of Watson Studio catalogs is that Watson Studio actually
    uses **Watson Machine Learning** to derive a list of assets that you haven't accessed
    yet based on attributes common to the assets that you've viewed, created, and
    added to projects, such as tags, asset classification, attribute classifiers,
    data types, asset owners, and asset types. The more assets you access and catalog,
    the better the recommendations are. Again, we'll dig deeper into this feature
    in later chapters of this book!
  prefs: []
  type: TYPE_NORMAL
- en: A bag of tricks
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The more orderly you are in your handling of data, the more consistent and better
    results you are like likely to achieve (with any project). The process for getting
    data ready for a machine learning algorithm (selecting, preprocessing, and transforming)
    can be accomplished using IBM Watson Studio with little programming or scripting
    required and, by leveraging the data refinery and catalog features, the work that
    you did at the start can be used over and over with little or no reworking required.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here are a few parting words of advice:'
  prefs: []
  type: TYPE_NORMAL
- en: Take the time to add descriptions for your assets and always use descriptive
    names
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Manage your data assets well: remove extraneous copies or test versions right
    away and keep your catalogs clean'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Use the profiling feature religiously to better understand your assets
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Control who can access your assets by managing project and asset collaborators
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we jumped right into using IBM Watson Studio's various features
    to accomplish various data preprocessing and setup objectives, such as using built-in
    R libraries for data preprocessing, dimensional reduction, and data fusion. We
    then offered a number of recommendations to save you time when preparing an ML
    project.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we'll examine the machine learning paradigm and focus on
    various approaches and algorithms. The chapter will start by giving a practical
    background to model evaluation, model selection, and algorithm selection in machine
    learning and will then cover supervised learning.
  prefs: []
  type: TYPE_NORMAL
