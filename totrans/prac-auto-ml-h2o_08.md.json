["```py\naml = h2o.automl.H2OAutoML(balance_classes = True, class_sampling_factors =[0.3, 2.0], max_after_balance_size=0.95, seed = 123)\naml.train(x = features, y = label, training_frame = train_dataframe)\n```", "```py\naml <- h2o.automl(x = features, y = label, training_frame = train_dataframe, seed = 123, balance_classes = TRUE, class_sampling_factors = c(0.3, 2.0), max_after_balance_size=0.95)\n```", "```py\naml = h2o.automl.H2OAutoML(stopping_metric = \"mse\", stopping_rounds = 5, stopping_tolerance = 0.001)\naml.train(x = features, y = label, training_frame = train_dataframe)\n```", "```py\naml <- h2o.automl(x = features, y = label, training_frame = train_dataframe, seed = 123, stopping_metric = \"mse\", stopping_rounds = 5, stopping_tolerance = 0.001)\n```", "```py\naml = h2o.automl.H2OAutoML(nfolds = 10, fold_assignment = \"AUTO\", seed = 123)\naml.train(x = features, y = label, training_frame = train_dataframe)\n```", "```py\naml <- h2o.automl(x = features, y = label, training_frame = train_dataframe, seed = 123, nfolds = 10, fold_assignment = \"AUTO\")\n```", "```py\naml.train(x = features, y = label, training_frame = train_dataframe, fold_column = \"fold_column_name\")\n```", "```py\naml <- h2o.automl(x = features, y = label, training_frame = train_dataframe, seed = 123, fold_column=\"fold_numbers\")\n```", "```py\naml = h2o.automl.H2OAutoML(nfolds = 10, keep_cross_validation_fold_assignment = True, keep_cross_validation_models = True, keep_cross_validation_predictions= True, seed = 123)\naml.train(x = features, y = label, training_frame = train_dataframe)\n```", "```py\naml <- h2o.automl(x = features, y = label, training_frame = train_dataframe, seed = 123, nfolds = 10, keep_cross_validation_fold_assignment = TRUE, keep_cross_validation_models = TRUE, keep_cross_validation_predictions= TRUE)\n```"]