["```py\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom prophet import Prophet\ndf = pd.read_csv('divvy_daily.csv')\ndf = df[['date', 'rides']]\ndf['date'] = pd.to_datetime(df['date'])\ndf.columns = ['ds', 'y']\nmodel = Prophet(seasonality_mode='multiplicative',\n                yearly_seasonality=4)\n```", "```py\nmodel.add_country_holidays(country_name='US')\n```", "```py\nmodel.fit(df)\nfuture = model.make_future_dataframe(periods=365)\nforecast = model.predict(future)\nfig = model.plot(forecast)\nplt.show()\n```", "```py\nfig2 = model.plot_components(forecast)\nplt.show()\n```", "```py\nmodel.train_holiday_names\n```", "```py\ndef first_non_zero(fcst, holiday):\n    return fcst[fcst[holiday] != 0][holiday].values[0]\npd.DataFrame({'holiday': model.train_holiday_names,\n              'effect': [first_non_zero(forecast, holiday)\n                         for holiday in \\\n                         model.train_holiday_names]})\n```", "```py\nfrom prophet.make_holidays import make_holidays_df\n```", "```py\nyear_list = df['ds'].dt.year.unique().tolist()\n# Identify the final year, as an integer, and increase it by 1\nyear_list.append(year_list[-1] + 1)\nholidays = make_holidays_df(year_list=year_list,\n                            country='US',\n                            state='IL')\n```", "```py\nholidays.head()\n```", "```py\nmodel = Prophet(seasonality_mode='multiplicative',\n                yearly_seasonality=4,\n                holidays=holidays)\nmodel.fit(df)\nfuture = model.make_future_dataframe(periods=365)\nforecast = model.predict(future)\n```", "```py\nholidays = make_holidays_df(year_list=year_list,\n                            country='US')\n```", "```py\nblack_friday = pd.DataFrame({'holiday': 'Black Friday',\n                             'ds': pd.to_datetime(\n                                 ['2014-11-28',\n                                  '2015-11-27',\n                                  '2016-11-25',\n                                  '2017-11-24',\n                                  '2018-11-23'])})\nchristmas_eve = pd.DataFrame({'holiday': 'Christmas Eve',\n                              'ds': pd.to_datetime(\n                                  ['2014-12-24',\n                                   '2015-12-24',\n                                   '2016-12-24',\n                                   '2017-12-24',\n                                   '2018-12-24'])})\n```", "```py\nholidays = pd.concat([holidays, black_friday,\n                      christmas_eve]).sort_values('ds')\\\n                      .reset_index(drop=True)\n```", "```py\nmodel = Prophet(seasonality_mode='multiplicative',\n                yearly_seasonality=4,\n                holidays=holidays)\nmodel.fit(df)\nfuture = model.make_future_dataframe(periods=365)\nforecast = model.predict(future)\n```", "```py\nholidays = make_holidays_df(year_list=year_list,\n                            country='US')\ntaste_of_chicago = \\\npd.DataFrame({'holiday':'Taste of Chicago',\n              'ds': pd.to_datetime(['2014-07-09',\n                                    '2015-07-08',\n                                    '2016-07-06',\n                                    '2017-07-05',\n                                    '2018-07-11']),\n              'lower_window': 0,\n              'upper_window': 4})\nholidays = pd.concat([holidays, taste_of_chicago])\\\n                     .sort_values('ds')\\\n                     .reset_index(drop=True)\n```", "```py\nholidays.head(10)\n```", "```py\nmodel = Prophet(seasonality_mode='multiplicative',\n                yearly_seasonality=4,\n                holidays=holidays)\nmodel.fit(df)\nfuture = model.make_future_dataframe(periods=365)\nforecast = model.predict(future)\n```", "```py\nprint(forecast[forecast['ds'].isin(['2018-07-11',\n                                    '2018-07-12',\n                                    '2018-07-13',\n                                    '2018-07-14',\n                                    '2018-07-15']\n                                  )][['ds',\n                                      'Taste of Chicago']])\n```", "```py\nfrom prophet.plot import plot_forecast_component\n```", "```py\nfig3 = plot_forecast_component(model,\n                               forecast,\n                               'Taste of Chicago',\n                               figsize=(10.5, 3.25))\nplt.show()\n```", "```py\nmodel = Prophet(seasonality_mode='multiplicative',\n                yearly_seasonality=4,\n                holidays_prior_scale=10)\nmodel.add_country_holidays(country_name='US')\nmodel.fit(df)\nfuture = model.make_future_dataframe(periods=365)\nforecast = model.predict(future)\nfig = plot_forecast_component(model, forecast, 'holidays')\nplt.show()\n```", "```py\nmodel = Prophet(seasonality_mode='multiplicative',\n                yearly_seasonality=4,\n                holidays_prior_scale=0.05)\nmodel.add_country_holidays(country_name='US')\nmodel.fit(df)\nfuture = model.make_future_dataframe(periods=365)\nforecast = model.predict(future)\nfig = plot_forecast_component(model, forecast, 'holidays')\nplt.show()\n```", "```py\nholidays = make_holidays_df(year_list=year_list,\n                            country='US')\n```", "```py\nblack_friday = pd.DataFrame({'holiday': 'Black Friday',\n                             'ds': pd.to_datetime(\n                                 ['2014-11-28',\n                                  '2015-11-27',\n                                  '2016-11-25',\n                                  '2017-11-24',\n                                  '2018-11-23']),\n                             'prior_scale': 1})\nchristmas_eve = pd.DataFrame({'holiday': 'Christmas Eve',\n                              'ds': pd.to_datetime(\n                                  ['2014-12-24',\n                                   '2015-12-24',\n                                   '2016-12-24',\n                                   '2017-12-24',\n                                   '2018-12-24']),\n                              'prior_scale': 1})\ntaste_of_chicago = \\\npd.DataFrame({'holiday': 'Taste of Chicago',\n              'ds': pd.to_datetime(['2014-07-09',\n                                    '2015-07-08',\n                                    '2016-07-06',\n                                    '2017-07-05',\n                                    '2018-07-11']),\n              'lower_window': 0,\n              'upper_window': 4,\n              'prior_scale': 0.1})\n```", "```py\nholidays = pd.concat([holidays,\n                      black_friday,\n                      christmas_eve,\n                      taste_of_chicago]\n                    ).sort_values('ds')\\\n                     .reset_index(drop=True)\n```", "```py\nholidays.head(16)\n```", "```py\nmodel = Prophet(seasonality_mode='multiplicative',\n                yearly_seasonality=4,\n                holidays=holidays,\n                holidays_prior_scale=10)\nmodel.fit(df)\nfuture = model.make_future_dataframe(periods=365)\nforecast = model.predict(future)\n```"]