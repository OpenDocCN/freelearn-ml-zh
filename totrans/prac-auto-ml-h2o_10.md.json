["```py\n    import h2o\n    h2o.init()\n    ```", "```py\n    data_frame = h2o.import_file(\"Dataset/iris.data\")\n    ```", "```py\n    features = data_frame.columns\n    label = \"C5\"\n    features.remove(label)\n    ```", "```py\n    aml=h2o.automl.H2OAutoML(max_models=10, seed = 5)\n    ```", "```py\n    aml.train(x = features, y = label, training_frame = data_frame)\n    ```", "```py\n    h2o.download_pojo(aml.leader, path=\"~/Downloads/\", jar_name=\"AutoMLModel\")\n    ```", "```py\n    library(h2o)\n    h2o.init()\n    ```", "```py\n    data_frame <- h2o.importFile(\"Dataset/iris.data\")\n    ```", "```py\n    label <- \"C5\"\n    features <- setdiff(names(data), label)\n    ```", "```py\n    aml <- h2o.automl(x = features, y = label, training_frame = data_frame, max_models=10, seed = 5)\n    ```", "```py\n    h2o.download_pojo(aml@leaderboard, path=\"~/Downloads/\", jar_name=\"AutoMLModel\")\n    ```", "```py\n    mkdir H2O_POJO\n    cd H2O_POJO\n    ```", "```py\n    mv {path_to_download_location}/{name_of_model_POJO} .\n    ```", "```py\n    curl http://localhost:54321/3/h2o-genmodel.jar > h2o-genmodel.jar\n    ```", "```py\n<dependency>\n<dependency>\n        <groupId>ai.h2o</groupId>\n        <artifactId>h2o-genmodel</artifactId>\n        <version>3.35.0.2</version>\n</dependency>\n\n```", "```py\n    vim main.java\n    ```", "```py\n    import hex.genmodel.easy.RowData;\n    import hex.genmodel.easy.EasyPredictModelWrapper;\n    import hex.genmodel.easy.prediction.*;\n    ```", "```py\n    public class main { }\n    ```", "```py\n    private static final String modelPOJOClassName = \"{name_of_model_POJO}\";\n    ```", "```py\n    public static void main(String[] args) throws Exception { }\n    ```", "```py\n    hex.genmodel.GenModel rawModel;\n    rawModel = (hex.genmodel.GenModel) Class.forName(modelPOJOClassName).getDeclaredConstructor().newInstance();\n    ```", "```py\n    EasyPredictModelWrapper model = new EasyPredictModelWrapper(rawModel);\n    ```", "```py\n    RowData row = new RowData();\n    row.put(\"C1\", 5.1);\n    row.put(\"C2\", 3.5);\n    row.put(\"C3\", 1.4);\n    row.put(\"C4\", 0.2);\n    ```", "```py\n    MultinomialModelPrediction predictionResultHandler = model.predictMultinomial(row);\n    ```", "```py\nSystem.out.println(\"Predicted Class of Iris flower is: \" + predictionResultHandler.label);\n```", "```py\nSystem.out.println(\"Class probabilities are: \");\nfor (int labelClassIndex = 0; labelClassIndex < predictionResultHandler.classProbabilities.length; labelClassIndex++) {\n        System.out.println(predictionResultHandler.classProbabilities[labelClassIndex]);\n}\n```", "```py\n    javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m DRF_1_AutoML_1_20220619_210236.java main.java\n    ```", "```py\n    java -cp .:h2o-genmodel.jar main\n    ```"]