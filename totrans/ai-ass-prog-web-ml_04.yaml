- en: '4'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '4'
- en: Build the Appearance of Our App with HTML and Copilot
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用HTML和Copilot构建我们应用的外观
- en: Introduction
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: Building a web app involves the usage of HTML for markup, CSS for styling, and
    JavaScript for making it interactive.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 构建网络应用涉及使用HTML进行标记，CSS进行样式设计，以及JavaScript使其具有交互性。
- en: We’ve come a long way from building a web app from static pages in the 1990s
    to now using frameworks to build large apps. Regardless of whether you use a framework
    or a library, it still rests on the same foundation, HTML, CSS, and JavaScript.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 我们从20世纪90年代使用静态页面构建网络应用已经走了很长的路，到现在使用框架构建大型应用。无论你是否使用框架或库，它仍然建立在相同的基础上，即HTML、CSS和JavaScript。
- en: To tackle these three markup and programming languages, we can use an AI assistant.
    There’s more to using an AI assistant than generating text, given text input.
    You also need working knowledge of the area you’re trying to tackle. For markup
    languages like HTML and CSS, “working knowledge” means you should know how to
    structure a web page or configure the styling with CSS. In short, you know how
    to do the task at hand, and the AI assistant is there to make you faster and more
    efficient.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 为了应对这三种标记和编程语言，我们可以使用人工智能助手。使用人工智能助手不仅仅是生成文本，给定文本输入。你还需要对该领域有实际的工作知识。对于像HTML和CSS这样的标记语言，“实际的工作知识”意味着你应该知道如何构建网页结构或使用CSS配置样式。简而言之，你知道如何完成手头的任务，而人工智能助手在那里是为了让你更快、更有效率。
- en: The output from the prompts mentioned in this chapter may vary based on training
    data, what files you have open, and what you typed previously.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中提到的提示的输出可能因训练数据、你打开的文件以及你之前输入的内容而异。
- en: You will see throughout the different chapters of this book how we will follow
    a specific method of first discussing a business problem we’re looking to solve,
    with web development or data science merely being approaches that help us solve
    the problem. We will then focus on the problem, which varies depending on whether
    we’re a web developer or data scientist, followed by dividing up our problem into
    smaller more manageable parts. Finally, we will recommend a “prompt” strategy
    that works well for this particular type of problem.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 你将在本书的不同章节中看到，我们将遵循一种特定的方法，首先讨论我们想要解决的商业问题，而网络开发或数据科学仅仅是帮助我们解决问题的方法。然后，我们将专注于问题，这取决于我们是网络开发者还是数据科学家，接着将问题分解成更小、更易于管理的部分。最后，我们将推荐一种适用于此类特定问题的“提示”策略。
- en: 'In this chapter, we will:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将：
- en: '**Generate basic HTML**: GitHub Copilot is capable of generating different
    kinds of code, including HTML.'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**生成基本HTML**：GitHub Copilot能够生成各种代码，包括HTML。'
- en: '**Apply prompting techniques**: There are different techniques we can use to
    get the desired content.'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**应用提示技术**：我们可以使用不同的技术来获取所需的内容。'
- en: 'Business problem: e-commerce'
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 商业问题：电子商务
- en: E-commerce is quite an interesting domain. There are many problems to be solved
    within this domain. For example, you need to provide a technical platform that
    allows users to purchase items. That in itself means you need to build various
    solutions for taking payments as well as products to buy and also some logistics
    that allow for shipping and more.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 电子商务是一个非常有趣的领域。在这个领域内有许多问题需要解决。例如，你需要提供一个技术平台，让用户能够购买商品。这本身就意味着你需要构建各种支付解决方案以及可购买的产品，还有一些物流，允许进行运输等。
- en: If you look at this business from the data side of things, you see that you
    need to analyze customer behavior to ensure you have the right number of items
    in stock, the correct prices on the items, and so on. In short, e-commerce is
    an intriguing domain that you will see mentioned throughout the book.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你从数据的角度来看这个业务，你会发现你需要分析客户行为，以确保你有足够的库存，商品价格正确，等等。简而言之，电子商务是一个引人入胜的领域，你将在整本书中看到它的提及。
- en: Problem domain
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 问题领域
- en: 'This chapter focuses on the role of the web developer, so let’s discuss what
    type of problems await a web developer in e-commerce. There are usually two to
    three major roles you need to solve for as a web developer:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 本章主要关注网络开发者的角色，因此让我们讨论一下作为网络开发者，在电子商务中可能会遇到哪些类型的问题。通常，作为网络开发者，你需要解决两个或三个主要角色：
- en: The customer and all the actions that a customer can take like browsing and
    purchasing items to managing their account.
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户以及客户可以采取的所有行动，如浏览和购买商品，到管理他们的账户。
- en: 'Back office: This is the company behind the e-commerce application. Here, you
    need to ensure there exist technical solutions so that company employees can manage
    inventory, product information, payment solutions, and more.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 后台办公室：这是电子商务应用背后的公司。在这里，你需要确保存在技术解决方案，以便公司员工可以管理库存、产品信息、支付解决方案等。
- en: From a data standpoint, you, as a web developer, need to ensure that data can
    be stored and updated on areas like products, purchase orders, and customer information.
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从数据的角度来看，作为Web开发者，你需要确保数据可以在产品、采购订单和客户信息等区域存储和更新。
- en: 'Problem breakdown: identify the features'
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 问题分解：识别特征
- en: To start breaking down this problem domain into something we can write prompt
    input for, let’s again turn to the roles we mentioned, customer and back office.
    Here’s an attempt at breaking the problem down into features we can build.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 为了将这个问题领域分解成我们可以编写提示输入的内容，我们再次转向我们提到的角色，即客户和后台办公室。以下是将问题分解成我们可以构建的特征的尝试。
- en: 'Let’s start with the customer role and the major area, “Authentication.” Let’s
    attempt to break it down into things the customer should be able to do. Here are
    the actions we should support:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从客户角色和主要领域“认证”开始。让我们尝试将其分解成客户应该能够执行的事情。以下是我们应该支持的操作：
- en: '**Login:** The user should be able to log in.'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**登录**：用户应该能够登录。'
- en: '**Logout:** The user should be able to log out.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**登出**：用户应该能够登出。'
- en: '**Create a new user:** It should be possible to create a new user.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**创建新用户**：应该能够创建新用户。'
- en: '**Update password:** An existing user should be able to update their password.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**更新密码**：现有用户应该能够更新他们的密码。'
- en: '**Password:** If a user forgets their password, it should be possible to reset
    it in a safe way.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**密码**：如果用户忘记了他们的密码，应该能够以安全的方式重置它。'
- en: Now, we have a set of features for a specific domain, “Authentication,” and
    we have a better grasp of the different actions we should support. We’ll leave
    it to you to further break down your problem domain like this, but see the preceding
    list as the detail level you should preferably be on before you start using your
    AI assistant.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们针对特定领域“认证”有一套特征，并且我们对应该支持的不同动作有了更深入的了解。我们将把这个任务留给你，让你进一步将你的问题领域分解成这样，但在开始使用你的AI助手之前，请将前述列表视为你应达到的详细程度。
- en: 'Given the preceding breakdown into features, you could now, for example, type
    a prompt like so to attempt solving the first feature we identified above:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 基于前面的特征分解，你现在可以，例如，输入如下提示来尝试解决我们上面识别出的第一个特征：
- en: '**[Prompt]**'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '**[提示]**'
- en: Generate a login page, with fields for username, password, and repeat password
    and login button.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 生成一个登录页面，包含用户名、密码和重复密码字段以及登录按钮。
- en: '**[End of prompt]**'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '**[提示结束]**'
- en: As a web developer, you’ve usually already done this breakdown of the problem
    domain into features before you start developing and even called these “user stories”
    if you use a development methodology like Scrum, for example.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 作为Web开发者，你在开始开发之前通常已经将问题领域分解成特征了，如果你使用像Scrum这样的开发方法，甚至可能称之为“用户故事”。
- en: With web development, though, you know it’s a matter of looking at this problem
    from three different layers, the frontend, backend, and the data layer, usually
    a database where you store the data. The rest of this chapter will focus on the
    frontend when using the AI assistant. In later chapters, we will focus on other
    layers of the e-commerce example.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在Web开发中，你知道这是一个从三个不同层面看待问题的过程，即前端、后端和数据层，通常是一个数据库，用于存储数据。本章的其余部分将专注于使用AI助手时的前端。在后续章节中，我们将关注电子商务示例的其他层。
- en: Prompt strategy
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 提示策略
- en: So, how do we select a prompt strategy and what do we mean by prompt strategy?
    Our strategy is about how we will prompt; will we write one prompt per feature
    or many short ones? It’s also about how we use our chosen AI assistant, GitHub
    Copilot, and how we choose to input the prompts into the tool.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，我们如何选择提示策略？我们所说的提示策略是什么意思？我们的策略是关于我们将如何提示；我们会为每个功能写一个提示，还是写很多简短的提示？这也关乎我们如何使用我们选择的AI助手GitHub
    Copilot，以及我们如何选择将提示输入到工具中。
- en: In GitHub Copilot, there are two major choices for how you write your prompts,
    either using the chat functionality or via typing comments or code directly in
    a text file. In this chapter, we will use the latter approach of typing directly
    in the text file. The general recommendation is that both approaches are valid
    and, it’s our experience that you vary between these two approaches as you solve
    a problem.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 在GitHub Copilot中，您有两种主要的写提示方式，要么使用聊天功能，要么通过在文本文件中直接输入注释或代码。在本章中，我们将使用在文本文件中直接输入的方法。一般建议是这两种方法都是有效的，而且根据我们的经验，您在解决问题时会在这两种方法之间切换。
- en: Now that we’ve chosen our GitHub Copilot approach, what about the prompts themselves?
    We will choose a prompt strategy here where we type shorter prompts – we refer
    to this pattern as “Exploratory prompt pattern” in *Chapter 2* of the book. We
    will let GitHub Copilot build up its runtime context and learn from our code as
    we type it.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 既然我们已经选择了GitHub Copilot的方法，那么提示本身又如何呢？在这里，我们将选择一种提示策略，即输入较短的提示——我们在本书的**第2章**中将这种模式称为“探索性提示模式”。我们将让GitHub
    Copilot在输入代码的同时建立其运行时上下文并从我们的代码中学习。
- en: In the upcoming section, we will showcase how you can start generating markup
    code while being inside an open text file. At the end of this chapter, you will
    see how we revisit our e-commerce use case.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的章节中，我们将展示如何在打开的文本文件内开始生成标记代码。在本章结束时，您将看到我们如何重新审视我们的电子商务用例。
- en: Page structure
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 页面结构
- en: 'A web page is defined in HTML, and all such pages are made up of a tree called
    a **document object model** (**DOM**). The DOM has the following parts:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 一个网页在HTML中定义，所有这样的页面都是由一个称为**文档对象模型**（**DOM**）的树构成的。DOM包含以下部分：
- en: '[PRE0]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: You can see how the markup of the page consists of elements. The top elements
    need to be laid out hierarchically with HTML being the root element having the
    inner nodes HEAD and BODY. In the HEAD node, we define things like styling, instructions
    for search engines, page title, and more. In the BODY element, we place content
    we want to be visible.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以看到页面的标记由元素组成。顶部元素需要以层次结构排列，HTML是根元素，其内部节点是HEAD和BODY。在HEAD节点中，我们定义诸如样式、搜索引擎指令、页面标题等内容。在BODY元素中，我们放置我们希望可见的内容。
- en: Add AI assistance to our page structure
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将AI辅助添加到我们的页面结构中
- en: How can we leverage GitHub Copilot for this? Normally, web apps should have
    an `index.html` as an entry point for the app. To leverage GitHub Copilot, create
    a comment, `<!-- my comment -->`, on the page. You need to replace `my comment`
    with your prompt. So, what do you type instead of `my comment?` The answer is
    to provide GitHub Copilot with enough context for it to know what to generate
    in response.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 我们如何利用GitHub Copilot来实现这一点呢？通常，Web应用应该有一个`index.html`作为应用的入口点。为了利用GitHub Copilot，在页面上创建一个注释`<!--
    my comment -->`。您需要将`my comment`替换为您的提示。那么，您应该输入什么来代替`my comment`呢？答案是提供足够的上下文给GitHub
    Copilot，以便它知道如何根据您输入的提示生成响应。
- en: GitHub Copilot builds a runtime context not only based on its training model
    but also based on file endings like `.js` or `.html`, and what text is in both
    open or closed files in the directory you’re in. This context is what decides
    what text should be generated based on what prompt you type.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: GitHub Copilot不仅基于其训练模型，还基于文件扩展名（如`.js`或`.html`），以及您所在目录中打开或关闭的文件中的文本，来构建运行时上下文。这个上下文决定了根据您输入的提示应该生成什么文本。
- en: Your first prompt, simple prompting, and aiding your AI assistant
  id: totrans-46
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 您的第一个提示，简单提示，并辅助您的AI助手
- en: Let’s try writing our first prompts in an open text file.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们尝试在一个打开的文本文件中编写我们的第一个提示。
- en: If you want to try the following prompts yourself while reading this, create
    an `index.html` page. Prompts are comments that you write. The comment should
    use the assigned comment format for the chosen type of file, meaning `<!-- -->`
    is how you comment in an HTML page, and `//` is how you write a comment in a JavaScript
    file.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想在阅读此内容时尝试以下提示，请创建一个`index.html`页面。提示是您写的注释。注释应使用为所选文件类型指定的注释格式，这意味着在HTML页面中注释的方式是`<!--
    -->`，而在JavaScript文件中写注释的方式是`//`。
- en: 'Here’s a prompt you can try adding as an HTML comment at the top of the page:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一个您可以尝试添加到页面顶部的HTML注释的提示：
- en: '**[Prompt]**'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '**[提示]**'
- en: Create a page with a title and list.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个包含标题和列表的页面。
- en: '**[End of prompt]**'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '**[提示结束]**'
- en: '`<!-- create a page with a title and list -->`.'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '`<!-- 创建一个包含标题和列表的页面 -->`。'
- en: In this case, this prompt generates another prompt, namely, `<!-- the list should
    contain 3 items -->`.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，这个提示生成另一个提示，即`<!-- 列表中应包含3个项目 -->`。
- en: At first glance, this might look confusing. Why would GitHub Copilot give me
    another comment as output? The explanation is that your AI assistant is trained
    on code and comments. In this case, GitHub Copilot provides you with the most
    likely response given its training data.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 初看可能会觉得有些困惑。为什么GitHub Copilot会给我另一个评论作为输出？解释是，你的AI助手是在代码和注释上训练的。在这种情况下，GitHub
    Copilot根据其训练数据为你提供最可能的响应。
- en: 'So, how do you get HTML markup as a response instead? The answer is that you
    start typing HTML, which narrows it down for GitHub Copilot, so the code in your
    text file should look like the following:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，如何得到HTML标记作为响应呢？答案是，你开始输入HTML，这会缩小GitHub Copilot的范围，因此你的文本文件中的代码应如下所示：
- en: '[PRE1]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'GitHub Copilot now generates code that should look similar to the following
    output:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: GitHub Copilot现在生成的代码应该看起来类似于以下输出：
- en: '**[Prompt response]**'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '**[提示响应]**'
- en: '[PRE2]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '**[End of response]**'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '**[响应结束]**'
- en: 'If you keep hitting the *Return* key, and accepting the suggestions with *Tab*,
    more and more code will be generated so you end up with an output like so:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你持续按*回车*键，并使用*Tab*键接受建议，将生成越来越多的代码，最终得到如下输出：
- en: '**[Prompt response]**'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '**[提示响应]**'
- en: '[PRE3]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '**[End of response]**'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '**[响应结束]**'
- en: 'Your second prompt: adding more context'
  id: totrans-66
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 你的第二个提示：添加更多上下文
- en: Let’s erase what we’ve done so far and start with a new prompt. The objective
    is to understand how writing a better-written prompt, with more context, yields
    a better output.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们擦除到目前为止所做的一切，并从一个新的提示开始。目标是理解如何通过编写更好的提示，提供更多上下文，从而得到更好的输出。
- en: 'Let’s try a second prompt, with more context and have it look like the following
    text:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们尝试第二个提示，包含更多上下文，并使其看起来如下所示：
- en: '**[Prompt]**'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '**[提示]**'
- en: Create a page with a title and list, each item should have fields title, description
    and completed.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个带有标题和列表的页面，每个条目应包含标题、描述和完成字段。
- en: '**[End of prompt]**'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '**[提示结束]**'
- en: Note how we’re now saying that the list consists of items and that each item
    has separate fields. So, what’s the output of this prompt? Like before, use the
    *Return* key to generate a prompt response and *Tab* to accept the completion
    provided by GitHub Copilot.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 注意我们现在说的是列表由条目组成，并且每个条目有单独的字段。那么，这个提示的输出是什么？像之前一样，使用*回车*键生成提示响应，并使用*Tab*键接受GitHub
    Copilot提供的完成。
- en: '**[Prompt response]**'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '**[提示响应]**'
- en: '[PRE4]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '**[End of response]**'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '**[响应结束]**'
- en: Our AI assistant is able to guess that we’re trying to build a so-called “Todo
    app,” a common type of app where we have tasks we’re looking to complete. It was
    also able to generate a header element `h2` for the title, a `p` for the description,
    and a checkbox for the `Completed` field. By adding more context, our AI assistant
    was able to provide a better output.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的AI助手能够猜测我们正在尝试构建一个所谓的“待办事项应用”，这是一种常见的应用类型，其中我们有需要完成的任务。它还生成了一个`h2`标题元素、一个`p`描述和一个复选框用于`Completed`字段。通过添加更多上下文，我们的AI助手能够提供更好的输出。
- en: 'Your third prompt: accept prompt suggestions'
  id: totrans-77
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 你的第三个提示：接受提示建议
- en: So far, you’ve seen the difference between the two prompts, but what happens
    if we add even more context like so?
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，你已经看到了两个提示之间的区别，但如果我们添加更多上下文，会发生什么呢？
- en: '**[Prompt]**'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '**[提示]**'
- en: create a page with a header, main part, and a footer. Use dark theme.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个带有标题、主体和页脚的页面。使用深色主题。
- en: '**[End of prompt]**'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '**[提示结束]**'
- en: 'At this point, the output consists of more comments (suggestions), and if you
    accept several of them by entering the *Return* key (to get a new suggestion)
    and the *Tab* key (to accept the completion), your text file should now have content
    similar to the following output:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 到这个阶段，输出包含更多的注释（建议），如果你通过输入*回车*键（以获取新的建议）和*Tab*键（以接受完成）接受几个建议，你的文本文件现在应该有如下所示的内容：
- en: It’s also possible to reject the suggestion by, for example, continuing to type.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 也有可能通过例如继续输入来拒绝建议。
- en: '**[Prompt response]**'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '**[提示响应]**'
- en: '[PRE5]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '**[End of response]**'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '**[响应结束]**'
- en: 'GitHub Copilot can suggest prompts that you might not even consider like navigation,
    images, and the use of CSS variables. If you type `<html` at this point, you see
    an output similar to:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: GitHub Copilot可以建议你可能甚至都没有考虑过的提示，如导航、图片和CSS变量的使用。如果你此时输入`<html`，你会看到一个类似的输出：
- en: '**[Prompt response]**'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '**[提示响应]**'
- en: '[PRE6]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '**[End of response]**'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '**[响应结束]**'
- en: View this output in a browser and it should display the preceding sections that
    contain the title, description, and image for a number of items (exactly what
    you will see varies as these images are random).
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 在浏览器中查看此输出，它应该显示包含标题、描述和多个项目的图像的先前部分（你将看到的确切内容因这些图像是随机的而有所不同）。
- en: 'As a web developer, you take this for what it is: a nice first scaffold that
    you need to add styling to at a later stage to make it look better.'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一名网页开发者，你把这看作是一个很好的起点，你需要在稍后添加样式来让它看起来更好。
- en: '![page with images](img/B21232_04_01.png)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![带图片的页面](img/B21232_04_01.png)'
- en: 'Figure 4.1: Page with images (without the header and footer)'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.1：带图片的页面（不含页眉和页脚）
- en: 'Challenge: vary the prompt'
  id: totrans-95
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 挑战：改变提示
- en: You can vary the output by adding or removing context. As a suggestion, see
    if you can change the prompt to add tables, forms, a multi-column layout, and
    more.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过添加或删除上下文来改变输出。作为一个建议，看看你是否可以修改提示来添加表格、表单、多列布局等。
- en: 'Use case: build a front for an e-commerce'
  id: totrans-97
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 用例：构建电子商务的前端
- en: 'Now that we’ve learned how to use GitHub Copilot for creating HTML markup,
    let’s use it for a more challenging project: an e-commerce website. The requirements
    are that it should be a site with the following parts:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经学会了如何使用GitHub Copilot创建HTML标记，让我们用它来完成一个更具挑战性的项目：一个电子商务网站。要求是它应该是一个包含以下部分的网站：
- en: A login page
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个登录页面
- en: A user creation page
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户创建页面
- en: A products page for products to put in a basket
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个用于将产品放入购物车的产品页面
- en: A basket page to show items you mean to purchase
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个显示你打算购买的商品的购物车页面
- en: A checkout page showing your basket content and form for payment information
    and address info for shipping
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个显示购物车内容和支付信息表单以及用于发货的地址信息的结账页面
- en: An admin page that allows you to edit your products
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个允许你编辑产品的管理员页面
- en: Let’s start with these pages as they are commonly found on e-commerce websites.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从这些页面开始，因为这些页面通常在电子商务网站上很常见。
- en: Login page
  id: totrans-106
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 登录页面
- en: The requirements for a login page are that you as a user can enter a username
    and password and that there’s a button verifying your credentials. Optionally,
    you can add links for creating a user and a link if you forgot your password.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 登录页面的要求是，作为用户，你可以输入用户名和密码，并且有一个验证凭证的按钮。可选地，你可以添加创建用户的链接和忘记密码的链接。
- en: 'Try the following prompt as a comment at the top of a page called `login.html`:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 在名为`login.html`的页面的顶部尝试以下提示作为注释：
- en: '**[Prompt]**'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '**[提示**]'
- en: '[PRE7]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '**[End of prompt]**'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: '**[提示结束**]'
- en: You may need to start typing `<html>` for the completion to be generated. Also,
    ensure you close all files except for the current one to make sure that your AI
    assistant is not distracted by other files that might be open.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能需要开始键入`<html>`以生成完成。同时，确保除了当前文件外，关闭所有文件，以确保你的AI助手不会被其他可能打开的文件分散注意力。
- en: 'You should see an output similar to:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该看到一个类似以下输出的结果：
- en: '**[Prompt response]**'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '**[提示响应**]'
- en: '[PRE8]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '**[End of response]**'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '**[响应结束**]'
- en: 'This renders like so:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 这会呈现如下：
- en: '![login page](img/B21232_04_02.png)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![登录页面](img/B21232_04_02.png)'
- en: 'Figure 4.2: Login page'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.2：登录页面
- en: Product list page
  id: totrans-120
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 产品列表页面
- en: 'On this page, we want to see a list of products we can buy, some details on
    each product, and an “**Add to Cart**” button. For this, we will create a `products.html`
    page and give it the following prompt:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个页面上，我们希望看到可以购买的产品列表，每个产品的详细信息，以及一个“**添加到购物车**”按钮。为此，我们将创建一个`products.html`页面，并给它以下提示：
- en: '[PRE9]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'You should see an output similar to:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该看到一个类似以下输出的结果：
- en: '**[Prompt response]**'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '**[提示响应**]'
- en: '[PRE10]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '**[End of response]**'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: '**[响应结束**]'
- en: 'This should render something like so:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 这应该呈现类似的效果：
- en: '![product list page](img/B21232_04_03.png)'
  id: totrans-128
  prefs: []
  type: TYPE_IMG
  zh: '![产品列表页面](img/B21232_04_03.png)'
- en: 'Figure 4.3: Product list page'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.3：产品列表页面
- en: Remaining pages
  id: totrans-130
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 剩余页面
- en: We will leave it as an exercise for you to produce the remaining pages. Remember
    to create a dedicated HTML page and put a prompt comment at the top of the page.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将把这个任务留给你来完成剩余的页面。记住要创建一个专门的HTML页面，并在页面的顶部放置一个提示注释。
- en: 'Here’s some suggested prompts for the remaining pages:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是一些为剩余页面建议的提示：
- en: A user creation page.
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户创建页面。
- en: 'Here is a suggested prompt:'
  id: totrans-134
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这里是一个建议的提示：
- en: '[PRE11]'
  id: totrans-135
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: A basket page to show items you mean to purchase.
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个显示你打算购买的商品的购物车页面。
- en: 'Here is a suggested prompt:'
  id: totrans-137
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这里是一个建议的提示：
- en: '[PRE12]'
  id: totrans-138
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: A checkout page showing your basket content and form for payment information
    and address info for shipping.
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个显示购物车内容和支付信息表单以及用于发货的地址信息的结账页面。
- en: 'Here is a suggested prompt:'
  id: totrans-140
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这里是一个建议的提示：
- en: '[PRE13]'
  id: totrans-141
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: An admin page that allows you to edit your products.
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个允许你编辑产品的管理员页面。
- en: 'Here is a suggested prompt:'
  id: totrans-143
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这里有一个建议的提示：
- en: '[PRE14]'
  id: totrans-144
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Assignment
  id: totrans-145
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 作业
- en: In this assignment, you will create a resume website. What context you provide
    GitHub Copilot with is up to you but start by creating an `index.html` and an
    HTML comment, `<!-- my prompt -->`.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个任务中，您将创建一个简历网站。您提供给GitHub Copilot的上下文由您决定，但首先创建一个`index.html`和一个HTML注释，`<!--
    my prompt -->`。
- en: Remember the techniques you were taught.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 记住您学到的技巧。
- en: '**Write a prompt**'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: '**编写一个提示**'
- en: Write a prompt and start typing the code/markup on the next line to help your
    assistant. Use the *Return* key to generate a response and the *Tab* key to accept
    the suggested text. Rewrite the prompt and add or change what it says to get the
    desired result.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 编写一个提示并开始输入下一行的代码/标记，以帮助您的助手。使用*回车键*生成响应，使用*制表键*接受建议的文本。重写提示并添加或更改内容以获得所需的结果。
- en: 'You can find the solution to this assignment in the GitHub repository: [https://github.com/PacktPublishing/AI-Assisted-Software-Development-with-GitHub-Copilot-and-ChatGPT/tree/main/04](https://github.com/PacktPublishing/AI-Assisted-Software-Development-with-GitHub-Copilot-and-ChatGPT/tree/main/04)'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在GitHub仓库中找到这个任务的解决方案：[https://github.com/PacktPublishing/AI-Assisted-Software-Development-with-GitHub-Copilot-and-ChatGPT/tree/main/04](https://github.com/PacktPublishing/AI-Assisted-Software-Development-with-GitHub-Copilot-and-ChatGPT/tree/main/04)
- en: Challenge
  id: totrans-151
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 挑战
- en: Given your built resume, you can improve it further by adding colors. How would
    you prompt to do so?
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 给定您构建的简历，您可以通过添加颜色来进一步改进它。您将如何提示这样做？
- en: Quiz
  id: totrans-153
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 测验
- en: 'Here’s a set of questions to ensure you’ve grasped the key concepts:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一系列问题，以确保您已经掌握了关键概念：
- en: 'The text you send to your AI assistant is called:'
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您发送给AI助手的文本被称为：
- en: text
  id: totrans-156
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 文本
- en: instruction
  id: totrans-157
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 指令
- en: prompt
  id: totrans-158
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 提示
- en: 'Your AI assistant builds a context from:'
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您的AI助手从以下内容构建上下文：
- en: what you type
  id: totrans-160
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您输入的内容
- en: what you type, the file ending, and the open and closed files in your working
    directory
  id: totrans-161
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您输入的内容、文件扩展名以及您工作目录中的打开和关闭文件
- en: what you type and the file ending
  id: totrans-162
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您输入的内容和文件扩展名
- en: 'You can find the solution to this quiz in the GitHub repository: [https://github.com/PacktPublishing/AI-Assisted-Software-Development-with-GitHub-Copilot-and-ChatGPT/tree/main/04](https://github.com/PacktPublishing/AI-Assisted-Software-Development-with-GitHub-Copilot-and-ChatGPT/tree/main/04)'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在GitHub仓库中找到这个测验的解决方案：[https://github.com/PacktPublishing/AI-Assisted-Software-Development-with-GitHub-Copilot-and-ChatGPT/tree/main/04](https://github.com/PacktPublishing/AI-Assisted-Software-Development-with-GitHub-Copilot-and-ChatGPT/tree/main/04)
- en: '*# Summary'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: '**# 摘要**'
- en: In this chapter, we covered how to generate HTML markup using GitHub Copilot.
    We also covered how to use prompting techniques and how to add context to your
    prompts. As part of learning these prompting techniques, we discovered that the
    more context you give your AI assistant, the better the output. You also build
    up context over time as you add more content to your page.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们介绍了如何使用GitHub Copilot生成HTML标记。我们还介绍了如何使用提示技术以及如何为您的提示添加上下文。作为学习这些提示技术的一部分，我们发现，您提供给AI助手的上下文越多，输出就越好。随着时间的推移，您通过添加更多内容到您的页面，也会逐渐积累上下文。
- en: Additionally, we started on a use case where we started building an e-commerce
    website. This use case is something we will continue to build on in the coming
    chapters.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，我们开始了一个用例，即构建一个电子商务网站。这个用例是我们将在接下来的章节中继续构建的内容。
- en: For the next chapter, we will continue to cover web development but shift our
    focus to CSS and styling. You will see how the same or similar prompting techniques
    can be used for CSS as well.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 对于下一章，我们将继续介绍网络开发，但将重点转向CSS和样式。您将看到相同的或类似的提示技术也可以用于CSS。
- en: Join our community on Discord
  id: totrans-168
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 加入我们的Discord社区
- en: 'Join our community’s Discord space for discussions with the author and other
    readers:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 加入我们的社区Discord空间，与作者和其他读者进行讨论：
- en: '[https://packt.link/aicode](https://packt.link/aicode)'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://packt.link/aicode](https://packt.link/aicode)'
- en: '![](img/QR_Code510410532445718281.png)*'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: '![二维码](img/QR_Code510410532445718281.png)*'
