- en: '19'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '19'
- en: Regression with Copilot Suggestions
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基于Copilot建议的回归
- en: Introduction
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: In the previous chapter, we used GitHub Copilot Chat to build a regression problem
    and explored how AI can assist in coding. In this chapter, we’ll take a different
    approach. We will write code with the help of GitHub Copilot, allowing it to guide
    us through coding and adding helpful comments. This will be an interactive experience,
    combining our coding skills with Copilot’s suggestions to effectively tackle a
    regression problem. Let’s see how GitHub Copilot can enhance our coding process
    in real time.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们使用GitHub Copilot Chat构建了一个回归问题，并探讨了人工智能如何协助编程。在本章中，我们将采取不同的方法。我们将借助GitHub
    Copilot编写代码，让它引导我们进行编码并添加有用的注释。这将是一种交互式体验，结合我们的编码技能和Copilot的建议，有效地解决回归问题。让我们看看GitHub
    Copilot如何实时增强我们的编码过程。
- en: In the task, we will use the Apple dataset to predict stock prices and help
    investors decide whether to buy or not. This is the same dataset we used in *Chapter
    18*, *Regression with Copilot Chat*, where we used Copilot Chat to analyze it.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个任务中，我们将使用苹果公司（AAPL）的数据集来预测股票价格，并帮助投资者决定是否买入。这是我们之前在*第18章*，*基于Copilot Chat的回归*中使用的数据集，当时我们使用Copilot
    Chat来分析它。
- en: Dataset overview
  id: totrans-5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据集概述
- en: This dataset provides us with a wealth of information about Apple’s stock (traded
    under AAPL) over the past decade, starting from the year 2010\. This data is incredibly
    valuable because it can help us develop forecasting algorithms to predict the
    future price of Apple’s stock, which is crucial for making investment decisions.
    The data in this set has been collected and aggregated from 25 different stock
    exchanges.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 这个数据集为我们提供了关于苹果公司（AAPL）过去十年股票（交易代码为AAPL）的大量信息，始于2010年。这些数据极其宝贵，因为它可以帮助我们开发预测算法，预测苹果公司股票的未来价格，这对于投资决策至关重要。这个数据集中的数据是从25个不同的证券交易所收集和汇总的。
- en: 'To effectively use this data for forecasting, we need to understand the key
    elements: the features that influence our target, which is predicting stock prices.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 为了有效地使用这些数据来进行预测，我们需要理解关键要素：影响我们目标（预测股票价格）的特征。
- en: 'The dataset includes five important values that indicate how the stock price
    changes over a specific period of time, which is typically one day, but it could
    also be one week or one month. These values are:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 数据集包括五个重要值，这些值表示股票价格在特定时间段内的变化情况，通常是整天，但也可能是一周或一个月。这些值包括：
- en: '**Open**: This is the stock price at the beginning of the trading day.'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**开盘价**：这是交易日开始时的股票价格。'
- en: '**Close**: This is the stock price at the end of the trading day.'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**收盘价**：这是交易日结束时的股票价格。'
- en: '**High**: This value shows the highest price the stock reached during the trading
    day.'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**高**：此值表示股票在交易日达到的最高价格。'
- en: '**Low**: This indicates the lowest price the stock hit during the trading day.'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**低**：这表示股票在交易日达到的最低价格。'
- en: '**Volume**: This is the total number of shares that were traded throughout
    the day before the market closed.'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**成交量**：这是在市场收盘前一天内交易的总股数。'
- en: Our focus will be on using historical price data, which includes these five
    recorded values, along with the stock’s past performance, to make predictions
    about its future prices.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将重点关注使用历史价格数据，包括这五个记录的值，以及股票过去的业绩，来预测其未来的价格。
- en: Prompt strategy
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 提示策略
- en: In this chapter, we’ll use the “Exploratory prompt pattern” as described in
    *Chapter 2*. We feel pretty confident on what actions we want to take in general
    but is interested in what the AI assistant will generate in case we need to pivot.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将使用*第2章*中描述的“探索性提示模式”。我们对想要采取的一般行动相当有信心，但很感兴趣AI助手在需要转向时会产生什么。
- en: Start coding with Copilot’s help
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Copilot的帮助下开始编码
- en: 'With GitHub Copilot installed, you’re ready to start coding your regression
    problem in Python. The approach of using suggestions in an open file is a bit
    different from using the chat window. The main difference is that we will rely
    on typing comments and use the *Tab* key to get Copilot to provide us with suggestions.
    This technique works equally well in Jupyter Notebook and normal text files. Here’s
    how it works:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 安装了GitHub Copilot后，你就可以开始用Python编写你的回归问题了。在打开的文件中使用建议的方法与使用聊天窗口的方法略有不同。主要区别在于，我们将依赖输入注释并使用*Tab*键让Copilot提供建议。这种技术在Jupyter
    Notebook和普通文本文件中都同样有效。以下是具体操作方法：
- en: '[PRE0]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Here, we have an open text file. We’ve added comments to generate `import`
    statements. To get Copilot to generate a response, we need to use the *Return*
    key followed by the *Tab* key to accept the suggestion. Here’s how the above text
    file could change:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们有一个打开的文本文件。我们已经添加了注释来生成`import`语句。为了使Copilot生成响应，我们需要使用*回车*键后跟*Tab*键来接受建议。上面的文本文件可能如下所示：
- en: '[PRE1]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The `import` statement is what is generated by Copilot when pressing *Tab* followed
    by *Return*.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 当按下*Tab*键后跟*回车*键时，`import`语句是由Copilot生成的。
- en: The AI assistant helps by providing code completion, but remember to review
    and understand each suggestion before accepting it.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 人工智能助手通过提供代码补全来帮助，但请记住在接受每个建议之前进行审查和理解。
- en: 'Step 1: Import libraries with Copilot’s assistance'
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第1步：在Copilot的帮助下导入库
- en: 'We could start with a prompt suggestion comment that describes the problem
    upfront, the dataset, and more, just like we did with Copilot Chat in other chapters
    in this book. Then, the prompt could look like so:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以开始用一个描述问题的提示建议注释，包括数据集以及更多内容，就像我们在本书的其他章节中使用Copilot Chat一样。然后，提示可能看起来像这样：
- en: '[PRE2]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: However, we will try an approach where we ask for everything we need.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，我们将尝试一种方法，即请求我们所需的一切。
- en: 'Let’s begin. Let’s create our first comment (this is equivalent to typing in
    a chat window):'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始吧。让我们创建我们的第一个评论（这相当于在聊天窗口中输入）：
- en: '**[Prompt]**'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '**[提示]**'
- en: import pandas
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: import pandas
- en: '**[End of prompt]**'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '**[提示结束]**'
- en: 'Accept the suggestion with *Tab*. You should see the following bold code:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 使用*Tab*键接受建议。你应该看到以下加粗代码：
- en: '**[Prompt response]**'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '**[提示响应]**'
- en: '[PRE3]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '**[End of response]**'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '**[响应结束]**'
- en: Great! We have imported the libraries we need. Let’s load and explore the dataset
    next.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 太好了！我们已经导入了所需的库。接下来，让我们加载数据集并探索。
- en: 'Step 2: Load and explore the dataset'
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第2步：加载数据集并探索
- en: 'In the next step, we want to load the dataset and explore the data features.
    Keep working in the same file and add the below prompt:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一步中，我们想要加载数据集并探索数据特征。继续在同一个文件上工作，并添加以下提示：
- en: '**[Prompt]**'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '**[提示]**'
- en: '[PRE4]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '**[End of prompt]**'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '**[提示结束]**'
- en: 'At this point, Copilot understands what we’re trying to do, so we don’t need
    to type more than the above prompt comment. So, we just need to press *Return*
    followed by *Tab* a number of times, and we should get the content below:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一点上，Copilot理解我们试图做什么，所以我们不需要输入比上面的提示评论更多的内容。因此，我们只需要按下*回车*键，然后多次按下*Tab*键，我们应该会得到以下内容：
- en: '**[Prompt response]**'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '**[提示响应]**'
- en: '[PRE5]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '**[End of response]**'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '**[响应结束]**'
- en: Ensure you have downloaded the dataset from Kaggle ([https://www.kaggle.com/datasets/varpit94/apple-stock-data-updated-till-22jun2021](https://www.kaggle.com/datasets/varpit94/apple-stock-data-updated-till-22jun2021))
    and that you have replaced the path in `read_csv` to point to where the file is
    in your system.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 确保您已从Kaggle下载了数据集（[https://www.kaggle.com/datasets/varpit94/apple-stock-data-updated-till-22jun2021](https://www.kaggle.com/datasets/varpit94/apple-stock-data-updated-till-22jun2021)）并且您已将`read_csv`中的路径替换为您系统中的文件位置。
- en: 'If you run the suggested code, you should see similar output to:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您运行建议的代码，您应该看到类似以下输出：
- en: '[PRE6]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: If you see the above, that means the data was loaded successfully.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您看到上述内容，这意味着数据已成功加载。
- en: Get types and columns
  id: totrans-50
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 获取类型和列
- en: 'Great! Now that we’ve successfully loaded the data, let’s learn more about
    the loaded dataset, such as what columns and column types it has. As usual, let’s
    keep working on the same file and add a prompt as a comment like so:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 太好了！现在我们已经成功加载数据，让我们更多地了解加载数据集，例如它有哪些列和列类型。像往常一样，让我们继续在同一个文件上工作，并添加如下提示的注释：
- en: '**[Prompt]**'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '**[提示]**'
- en: '[PRE7]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '**[End of prompt]**'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '**[提示结束]**'
- en: 'You should see the below results:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该看到以下结果：
- en: '**[Prompt response]**'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '**[提示响应]**'
- en: '[PRE8]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '**[End of response]**'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '**[响应结束]**'
- en: 'Now, let’s run the code. It should show our columns and their data types:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们运行代码。它应该显示我们的列及其数据类型：
- en: '[PRE9]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Great! We see the columns, but many of the columns have the `object` type. That’s
    not good; they need to be numerical to be used in machine learning training. Let’s
    see if we can address this shortly, but first, let’s learn more about the shape
    of the dataset.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 太好了！我们看到列，但许多列的类型是`object`。这不太好；它们需要是数值型才能用于机器学习训练。让我们看看我们是否能很快解决这个问题，但首先，让我们更多地了解数据集的形状。
- en: Shape of the dataset
  id: totrans-62
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 数据集形状
- en: 'Let’s learn more about our dataset in terms of structure, like how many columns
    and how many rows it consists of. This will help us assess its complexity, see
    how much data we have, and whether it’s enough to train a model to be reliable.
    Let’s write our next prompt comment:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
- en: '**[Prompt]**'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '**[End of prompt]**'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
- en: 'You should see the below suggestion:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
- en: '**[Prompt response]**'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '**[End of response]**'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
- en: 'Running the code above should provide the response below:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: This response tells us we have 2518 rows and 6 columns.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
- en: Addressing the column types
  id: totrans-74
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'At this point, we know we need more numerical columns, so let’s deal with the
    ones that aren’t numerical. First, let’s identify those non-numerical columns:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
- en: '**[Prompt]**'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '**[End of prompt]**'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
- en: 'You should see a suggestion like below:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
- en: '**[Prompt response]**'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '**[End of response]**'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
- en: It’s interesting that although we just asked to print the columns, Copilot makes
    the decision to show us only the columns of the `object` type. It’s not really
    surprising because Copilot has been trained on machine learning and is able to
    deduce what will happen next, which in this case is converting columns for use
    in model training.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, let’s be a bit prescriptive and ask for columns to be converted to numerical
    versions with the below prompt comment:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
- en: '**[Prompt]**'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '**[End of prompt]**'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
- en: You should see the below code, which turns several columns into numerical versions.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
- en: '**[Prompt response]**'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '**[End of response]**'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
- en: Great! Let’s inspect the columns next to ensure the conversion has been carried
    out correctly.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
- en: '**[Prompt]**'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '**[End of prompt]**'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
- en: 'You should see a response similar to this:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
- en: '**[Prompt response]**'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '**[End of response]**'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
- en: 'If you run the above code, you should see the response below:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: We can clearly see that the dollar signs have been removed and the columns are
    now numerical, save for the Date column, which we can deal with later.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
- en: Statistical summary
  id: totrans-103
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Next, let’s learn a bit more about the dataset by asking for a statistical
    summary. We can expect to see these values:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
- en: '**Count**: The number of non-null entries'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Mean**: The average value'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Standard Deviation (std)**: The spread of the data'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Minimum (min)**: The smallest value'
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**25th Percentile (25%)**: The value below which 25% of the data falls'
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Median (50%)**: The middle value, also known as the 50th percentile'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**75th Percentile (75%)**: The value below which 75% of the data falls'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Maximum (max)**: The largest value'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'With that in mind, let’s write a prompt comment:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
- en: '**[Prompt]**'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '**[End of prompt]**'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
- en: 'You should see an output similar to this:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
- en: '**[Prompt response]**'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '**[End of response]**'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
- en: 'If you run the code, you will see data similar to this:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Check for missing values
  id: totrans-123
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'It’s crucial to identify missing values to assess the quality of your dataset.
    High numbers of null values might indicate issues with data collection or entry
    and may affect our model, so we need a way to handle them:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
- en: '**[Prompt]**'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
- en: Check for missing values
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
- en: '**[End of prompt]**'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
- en: 'You should see a response similar to this:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
- en: '**[Prompt response]**'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: '**[End of response]**'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
- en: 'Great! So, what does the code do? Well, let’s explain. Let’s say you have the
    following dataset:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Running the suggested code would summarize the number of missing values per
    column, and you would see a response like this:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: What you can do is replace the missing value with a value that doesn’t affect
    the overall score. One way to do so is to add the mean value and replace `None`
    with that.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
- en: Check for duplicates
  id: totrans-137
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Another way to clean up the data is to remove duplicated data, because you
    don’t want that data to create a reinforcing effect on the model. Let’s create
    a comment for that and see if Copilot can help us:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
- en: '**[Prompt]**'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '**[End of prompt]**'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
- en: 'At this point, Copilot understands what we’re trying to do, that is, identify
    and remove duplicates. So, you should see suggested code for both operations below:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
- en: '**[Prompt response]**'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: '**[End of response]**'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
- en: Scale numerical features
  id: totrans-146
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Next, we’re going to scale values, so they fall into a specific range, 0–1\.
    This type of preprocessing will have beneficial effects on a number of things,
    such as algorithm performance, convergence speed, interpretability, and preventing
    a group of values from dominating. Let’s create a prompt for scaling features:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
- en: '**[Prompt]**'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: '**[End of prompt]**'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
- en: 'Note that when there’s more than one row in the response, you may need to press
    *Return* and *Tab* repeatedly. You should see output similar to this:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
- en: '**[Prompt response]**'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: '**[End of response]**'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
- en: 'Running the suggested code should result in the below output:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: Visualization
  id: totrans-157
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Next, we want to visualize our data. We could give vague instructions on how
    to do it, but in this case, a scatter plot is a good tool to use, so let’s reflect
    that in the prompt:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
- en: '**[Prompt]**'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE31]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: '**[End of prompt]**'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
- en: 'You should see a response similar to this:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
- en: '**[Prompt response]**'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE32]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: '**[End of response]**'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
- en: 'Running the code above should result in a scatter plot like this:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
- en: '![A blue dotted line with white text  Description automatically generated](img/B21232_19_01.png)'
  id: totrans-167
  prefs: []
  type: TYPE_IMG
- en: 'Figure 19.1: Scatter plot showing the relation between the Open and Close columns'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
- en: 'Step 3: Split data into training and testing sets'
  id: totrans-169
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Before we can train the model, we need to split the data into training data
    and test data. Let’s create a prompt to help with this:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
- en: '**[Prompt]**'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
- en: “use train_test_split from scikit-learn to split the dataset”
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
- en: '**[End of prompt]**'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
- en: 'You should see an output similar to:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
- en: '**[Prompt response]**'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE33]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: '**[End of response]**'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE34]'
  id: totrans-178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'If you run the code above, you should see a response similar to:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE35]'
  id: totrans-180
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: Asking questions
  id: totrans-181
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Just like in the chat experience of Copilot, it’s possible to ask questions
    on a specific topic. If you prefix a question with “Q:”, Copilot understands it’s
    a question. Let’s try this to find out our next step:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
- en: '**[Prompt]**'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
- en: 'Q: what is the next step after splitting the data into training and testing
    sets?'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
- en: '**[End of prompt]**'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
- en: 'You should see a response similar to:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
- en: '**[Prompt response]**'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE36]'
  id: totrans-188
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: '**[End of response]**'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
- en: 'Step 4: Build a regression problem'
  id: totrans-190
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The time has come to train the model. You could be pretty vague here and just
    ask Copilot to perform training. It’s recommended, however, to suggest the type
    of training you want. In this case, we want linear regression, so let’s create
    a prompt that includes that:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是训练模型的时候了。你可以相当模糊地询问Copilot进行训练。然而，建议你提出你想要的训练类型。在这种情况下，我们想要线性回归，所以让我们创建一个包含该内容的提示：
- en: '**[Prompt]**'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: '**[提示]**'
- en: “initialize a LinearRegression model”.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: “初始化一个线性回归模型”。
- en: '**[End of prompt]**'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: '**[结束提示]**'
- en: 'You should see a response similar to this:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该看到类似以下的响应：
- en: '**[Prompt response]**'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: '**[提示响应]**'
- en: '[PRE37]'
  id: totrans-197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: '**[End Suggestion Response]**'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: '**[结束建议响应]**'
- en: Great! We have some code that ensures we use linear regression. We haven’t carried
    out any training, though, so that’s next.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 太好了！我们有一些代码确保我们使用线性回归。尽管如此，我们还没有进行任何训练，所以这是下一步。
- en: 'Step 5: Train the model'
  id: totrans-200
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第5步：训练模型
- en: 'With the type of training specified, let’s train the model next:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 根据指定的训练类型，接下来让我们训练模型：
- en: '**[Prompt]**'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: '**[提示]**'
- en: “fit the model”
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: “拟合模型”
- en: '**[End of prompt]**'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: '**[结束提示]**'
- en: 'You should see a response similar to this:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该看到类似以下的响应：
- en: '**[Prompt response]**'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: '**[提示响应]**'
- en: '[PRE38]'
  id: totrans-207
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: '**[End of response]**'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: '**[结束响应]**'
- en: 'Step 6: Evaluate model performance'
  id: totrans-209
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第6步：评估模型性能
- en: 'Great! We have trained the model, but we don’t know anything about how well
    it performs, and that’s something we should address next:'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 太好了！我们已经训练了模型，但我们不知道它的表现如何，这是我们接下来应该解决的问题：
- en: '**[Prompt]**'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: '**[提示]**'
- en: Evaluate the performance metrics like MSE or R-squared.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 评估性能指标，如MSE或R平方。
- en: '**[End of prompt]**'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: '**[结束提示]**'
- en: 'You should see an output similar to this:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该看到类似的输出：
- en: '**[Prompt response]**'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: '**[提示响应]**'
- en: '[PRE39]'
  id: totrans-216
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: '**[End of response]**'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: '**[结束响应]**'
- en: 'If you run the above code, you should see a response like this:'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你运行上述代码，你应该看到如下响应：
- en: '[PRE40]'
  id: totrans-219
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'The output we get represents two different errors: mean squared error and root
    mean squared error.'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 我们得到的输出代表两种不同的误差：均方误差和均方根误差。
- en: A lower MSE indicates a better fit of the model to the data. In this case, the
    MSE is quite low, suggesting that the model’s predictions are very close to the
    actual values.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 较低的MSE表明模型与数据的拟合度更好。在这种情况下，MSE相当低，表明模型的预测非常接近实际值。
- en: The RMSE value is also very low, reinforcing that the model’s predictions are
    highly accurate. Great! Let’s go over this chapter’s assignment, and then summarize
    what we have learned about using Copilot to help us with machine learning.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: RMSE值也非常低，这进一步证实了模型的预测非常准确。太好了！让我们回顾本章的作业，然后总结一下我们关于使用Copilot帮助机器学习的所学内容。
- en: Assignment
  id: totrans-223
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 作业
- en: 'Try to solve this problem using a prompting approach where you provide a lot
    of information upfront. We suggest constructing a prompt like so:'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试使用提示方法解决这个问题，你需要在开始时提供大量信息。我们建议构建一个如下所示的提示：
- en: '“Carry out regression on a dataset with the following shape:'
  id: totrans-225
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: “在以下形状的数据集上执行回归：
- en: 'Open: This is the stock price at the beginning of the trading day.'
  id: totrans-226
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开盘价：这是交易日开始的股票价格。
- en: 'Close: This represents the stock price at the end of the trading day.'
  id: totrans-227
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 收盘价：这代表了交易日结束时的股票价格。
- en: 'High: This value shows the highest price the stock reached during the trading
    day.'
  id: totrans-228
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 高：这个值显示了股票在交易日内达到的最高价格。
- en: 'Low: This indicates the lowest price the stock hit during the trading day.'
  id: totrans-229
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 低：这表示股票在交易日内达到的最低价格。
- en: 'Volume: This is the total number of shares that were traded throughout the
    day before the market closed.'
  id: totrans-230
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 成交量：这是在市场收盘前一天内交易的总股数。
- en: Suggest all the steps from loading and pre-processing the data to training and
    evaluating the model. You must show code for each step.”
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 建议从加载数据和预处理到训练和评估模型的全部步骤。你必须为每个步骤展示代码。”
- en: 'Then see what the response is and try to run the suggested code snippet for
    each step. If you encounter any issues, indicate the error to Copilot with a question
    prompt like so:'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 然后查看响应，并尝试为每个步骤运行建议的代码片段。如果你遇到任何问题，可以用如下问题提示向Copilot报告错误：
- en: '“Q: the below/above code doesn’t work, please fix”'
  id: totrans-233
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: “问题：以下/以上代码不工作，请修复”
- en: Don’t forget to press *Return* and *Tab* to accept the completion.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 不要忘记按*Enter*和*Tab*键接受完成。
- en: Summary
  id: totrans-235
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we wanted to use the suggestion feature of GitHub Copilot,
    meaning we would type comments and use the *Return* and *Tab* keys to receive
    suggestions from Copilot. There’s a bit of a trick to it because sometimes you
    need to repeatedly press *Return* and *Tab* to get the full response. It’s also
    an AI experience that’s well suited to whenever you actively write code. GitHub
    Copilot Chat also has a place. In fact, the two different experiences complement
    one another; choose how much of each approach you want to use. Also, always test
    the code suggested by Copilot and ask Copilot to fix the code output if needed.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们想使用 GitHub Copilot 的建议功能，这意味着我们会输入注释并使用 *回车* 和 *Tab* 键来接收 Copilot 的建议。这里有点技巧，因为有时你需要反复按
    *回车* 和 *Tab* 键才能获得完整的响应。它也是一种非常适合你在积极编写代码时的 AI 体验。GitHub Copilot Chat 也有其位置。实际上，这两种不同的体验是互补的；选择你想要使用多少每种方法。此外，始终测试
    Copilot 提出的代码，并在需要时让 Copilot 修复代码输出。
- en: Join our community on Discord
  id: totrans-237
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 加入我们的 Discord 社区
- en: 'Join our community’s Discord space for discussions with the author and other
    readers:'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 加入我们社区的 Discord 空间，与作者和其他读者进行讨论：
- en: '[https://packt.link/aicode](https://packt.link/aicode)'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://packt.link/aicode](https://packt.link/aicode)'
- en: '![](img/QR_Code510410532445718281.png)'
  id: totrans-240
  prefs: []
  type: TYPE_IMG
  zh: '![](img/QR_Code510410532445718281.png)'
