- en: '3'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Tools of the Trade: Introducing Our AI Assistants'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Writing code or text takes time, at least if you want it to be well organized
    and readable. But what if you could have a tool that would help you write code
    faster and with less effort? That’s what GitHub Copilot and ChatGPT are really
    all about.
  prefs: []
  type: TYPE_NORMAL
- en: Before you start using an AI assistant, it’s a good idea to get a mile-high
    view of its capabilities and limitations. You want to see what you can and can’t
    use it for, or at least understand where the tool performs less well.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Understanding what GitHub Copilot and ChatGPT are and how they work
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Learning about Copilot’s capabilities and limits
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Installing GitHub Copilot
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Generating code completions via GitHub Copilot
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Understanding Copilot
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Pair programming is the idea of (usually two) developers working together, often
    in front of the same screen, also sometimes called “pairing.” GitHub Copilot can
    be seen as an “AI pair programmer” that helps you write code, enabling you to
    get more done, faster. It’s based on OpenAI’s Codex model, a new AI system trained
    on publicly available source code and natural language. But in reality, it has
    gone beyond this. Let’s denote GitHub Copilot as Copilot for the remainder of
    the book. Copilot suggests whole lines or entire functions right inside your editor.
  prefs: []
  type: TYPE_NORMAL
- en: How Copilot knows what to generate
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The idea behind Copilot is that it learns from the code you and others have
    written and uses that knowledge to suggest new lines of code as you type.
  prefs: []
  type: TYPE_NORMAL
- en: 'How does Copilot work? It uses machine learning to build a model of the code
    you and others have written and suggests the best text for you to use next. There
    are two parts of importance, the trained model and the so-called in-memory context.
    The model is trained on public repositories on GitHub and the context is something
    it assembles at runtime from looking at your files. Using the context and the
    underlying model, it provides you with text suggestions. Copilot uses some of
    the following to build its context (i.e., its in-memory capability that it uses
    together with the trained model to provide suggestions):'
  prefs: []
  type: TYPE_NORMAL
- en: '**Your active file**: The code you’re working on.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Comments**: Copilot uses comments to understand the context of your code.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Open files and your workspace**: It not only looks at the code in your active
    file but also at the code in other files in your workspace.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Import statements**: Even import statements are factored into Copilot’s suggestions.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**The underlying model and its training data**: The code in public GitHub repositories
    constitutes the base of what it’s trained on.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Copilot capabilities and limits
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'So, what can Copilot do? It can do a lot, but here’s a non-exhaustive list
    of capabilities:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Code completion**: Copilot can complete lines of code for you.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Code generation**: Copilot can generate whole functions for you.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Tests**, **comments**, **and** **documentation**: Copilot can generate tests,
    comments, and documentation for you.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Suggest improvements**: Copilot can suggest improvements to your code. Improvements
    can come in many forms, from suggesting a better variable name or a better way
    to write a function to how to organize code better.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Translate code**: Copilot can translate code from one language to another.
    For example, it can translate Python code to JavaScript code.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Answer questions**: Copilot can answer questions about your code. For example,
    it can tell you what a function does or what a variable is used for, and answer
    questions about a domain such as “What is machine learning?”, for example.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Setup and installation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: How can you get started? You can use Copilot from a variety of places and editors
    including Visual Studio, Visual Studio Code, GitHub Codespaces, and GitHub’s web-based
    editor. In this chapter, we’ll use Visual Studio Code.
  prefs: []
  type: TYPE_NORMAL
- en: Installing Copilot
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: To install Copilot, you need to install the GitHub Copilot extension for Visual
    Studio Code and also need to allow access.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s review the steps in more detail (as outlined on the official Copilot docs
    page).
  prefs: []
  type: TYPE_NORMAL
- en: 'You can install the GitHub Copilot extension for Visual Studio Code from the
    Visual Studio Code Marketplace or from within Visual Studio Code. We will show
    the latter here:'
  prefs: []
  type: TYPE_NORMAL
- en: 'In the **Extension: GitHub Copilot** tab in Visual Studio Code, select **Install**.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If you have not previously authorized Visual Studio Code in your GitHub account,
    you will be prompted to sign in to GitHub in Visual Studio Code.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If you have previously authorized Visual Studio Code for your account on GitHub,
    GitHub Copilot will be automatically authorized.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If you don’t get the prompt to authorize, select the bell icon in the bottom
    panel of the Visual Studio Code window.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In your browser, GitHub will request the necessary permissions for GitHub Copilot.
    To approve these permissions, select **Authorize Visual Studio Code**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: To confirm the authentication, in Visual Studio Code, select **Open** in the
    **Visual Studio Code** dialog box.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Refer to this page if you have any problems getting Copilot to work: [https://docs.github.com/en/copilot/getting-started-with-github-copilot](https://docs.github.com/en/copilot/getting-started-with-github-copilot).'
  prefs: []
  type: TYPE_NORMAL
- en: Getting started with Copilot
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: How do we get started? Well, provided you have installed Copilot and there’s
    a Copilot icon in the bottom-right corner of your Visual Studio Code window, you’re
    good to go.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here’s a suggestion to get started:'
  prefs: []
  type: TYPE_NORMAL
- en: Create a new file in Visual Studio Code named `app.js`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Start typing the text prompt “Express web api with routes products and customers”
    as a comment at the top of the file like so, and press *Enter*:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Give it a few seconds and you should see a suggestion from Copilot as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: If nothing appears, try pressing *Ctrl* + *Spacebar* to trigger a suggestion
    or start typing the start of the code, i.e., *const*, and wait for a suggestion
    to appear.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'You will have to press the *Tab* key to accept the suggestion. At this point,
    Copilot can keep generating code for you. To ensure it does, press *Enter* and
    watch as Copilot generates more code for you. Repeatedly press *Enter* and press
    *Tab* to accept the suggestions until you have code similar to the following:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Congratulations, you’ve just written your first lines of code with Copilot.
    Feel free to experiment with Copilot and try adding comments, so-called prompts,
    in the middle of your code and see what happens. Also, try varying the prompts
    and see what happens.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Assignment: improve the code'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'As an assignment, you’re asked to improve the code generated by Copilot. Here
    are a few suggestions:'
  prefs: []
  type: TYPE_NORMAL
- en: Add a route for the root of the web API.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Add a route for a specific product.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Add documentation for one of the routes.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Solution
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Here’s a possible solution:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Challenge
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: See if you can add a test for one of the routes.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will look at how to use Copilot in more detail. To use
    any AI assistant well, you need to understand how it works and how to use it.
    There’s a skill associated with using these tools well and it’s called prompt
    engineering. Prompt engineering is the art of writing prompts, not only to make
    it understand your intentions but also to produce an output you’re happy with.
    It’s more than just writing a comment; you can instruct your AI assistant to solve
    something, apply a form of reasoning to it, and much more. The next chapter presents
    the central theme of this book, prompt engineering.
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Copilot landing page: [https://github.com/features/copilot](https://github.com/features/copilot)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Copilot docs: [https://docs.github.com/en/copilot/getting-started-with-github-copilot](https://docs.github.com/en/copilot/getting-started-with-github-copilot)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Understanding ChatGPT
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: ChatGPT, an OpenAI development, is a specialized version of the GPT model designed
    to simulate human-like conversations. It excels in creating human-like text in
    dialogues, handling a variety of topics. It’s available for free at [chat.openai.com](http://chat.openai.com),
    with a premium ChatGPT Plus option (also known as GPT-4), and can draft essays,
    generate art prompts, and program code. The premium version offers enhanced features
    such as visual and audio input and output handling, file uploads, code execution,
    data visualization with select Python libraries, and customizable GPT capabilities.
  prefs: []
  type: TYPE_NORMAL
- en: You can access ChatGPT simply by visiting [chat.openai.com](http://chat.openai.com)
    and creating an OpenAI account. It is also available as an app for both Android
    and iOS. More details can be found on the official website ([https://openai.com/](https://openai.com/)).
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B21232_03_01.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 3.1: Offerings of OpenAI'
  prefs: []
  type: TYPE_NORMAL
- en: How does ChatGPT work?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: ChatGPT, paralleling Copilot’s code-oriented approach but in natural language
    processing, is adept at content generation, challenging traditional search engines.
    It excels in tasks such as essay writing and summarizing texts. The quality of
    ChatGPT’s responses heavily depends on the prompts it receives.
  prefs: []
  type: TYPE_NORMAL
- en: ChatGPT leverages extensive training data including books, websites, and a variety
    of textual sources for comprehensive language understanding.
  prefs: []
  type: TYPE_NORMAL
- en: It employs sophisticated machine learning algorithms, such as deep learning
    neural networks based on the Transformer architecture, to predict accurate and
    contextually relevant text responses.
  prefs: []
  type: TYPE_NORMAL
- en: ChatGPT’s contextual understanding is honed through advanced techniques, enabling
    it to interpret and respond to varying conversation threads intelligently. This
    approach mirrors the principles used in Copilot for code, adapted here for nuanced,
    human-like text interaction.
  prefs: []
  type: TYPE_NORMAL
- en: ChatGPT capabilities and limits
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Capabilities of ChatGPT:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Content creation**: Generates creative content including marketing material,
    blog posts, stories, and poems'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Educational explanations**: Offers detailed explanations on complex topics
    for educational purposes'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Coding assistance**: Assists developers with code optimization, error debugging,
    and algorithm design'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Learning aid**: Acts as a companion in online learning, offering real-time
    assistance and clarification of concepts'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Conversational AI**: Enhances user experience in virtual assistants and chatbots
    through natural language interactions'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Limitations and concerns of ChatGPT:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Accuracy issues**: ChatGPT may generate responses with factual inaccuracies
    or biases from training data, also known as hallucinations. These outputs often
    emerge from the AI model’s inherent biases, lack of real-world understanding,
    or training data limitations. In other words, the AI system “hallucinates” information
    that it has not been explicitly trained on, leading to unreliable or misleading
    responses. Hence, users should always verify and validate the responses and should
    not use them blindly.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Ethical implications**: Raises concerns about the misuse of AI-generated
    content for fraudulent activities or harmful information gathering.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Employment impact**: Fear of AI replacing human jobs in certain sectors.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Security risks**: Potential use in phishing, creating malware, and cybercriminal
    activities.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Data privacy**: Concerns about the use of vast internet data in training,
    impacting user privacy.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Message cap:** At the time of writing the book, GPT-4 was capped to offer
    a maximum of 40 responses over 3 hours.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Limited Python libraries for code execution:** TheCode Interpreter and Advanced
    Data Analysis features of ChatGPT use limited sets of libraries, heavily featuring
    machine learning libraries but not such great support for other libraries, such
    as Keras or TensorFlow, required for deep learning.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Setup and installation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Setting up and installing ChatGPT involves a few steps:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Create an OpenAI account**: Visit the OpenAI website and sign up for an account.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**API access**: Developers need to obtain API access by applying on the OpenAI
    platform.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: For non-developers, using ChatGPT is as simple as visiting the ChatGPT website
    or installing the Android or iOS app and logging in with your OpenAI account.
    No installation is required for general use. For more detailed steps and information,
    please refer to OpenAI’s official documentation and website.
  prefs: []
  type: TYPE_NORMAL
- en: Getting started with ChatGPT
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Once you’ve logged in to your OpenAI account on the ChatGPT side of the website,
    it’s time to get to know the AI tool’s window. Here’s a breakdown of what you
    will see:'
  prefs: []
  type: TYPE_NORMAL
- en: '**New chat and hide sidebar buttons:** On the left side of your screen, the
    New chat button can be used to start fresh conversations at any time. It creates
    a new discussion without context. There’s also an option to hide the sidebar.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Chat history:** The left sidebar keeps your previous conversations accessible.
    You can edit chat titles, share your chat history, or delete it. Optionally, you
    can turn off chat history.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Account:** Click your name at the bottom left to access your account information.
    This includes settings, log out, help, and FAQs. If you don’t have ChatGPT Plus,
    you’ll see an **Upgrade** button here.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Your prompts:** Your questions or prompts appear in the middle of the chat
    window, accompanied by your account photo or initials.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**ChatGPT’s responses:** ChatGPT’s responses display the logo on the left.
    On the right, you’ll see options such as Copy, Thumbs Up, and Thumbs Down. Copy
    text to your clipboard for use elsewhere and provide feedback on response accuracy.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Regenerate response:** Click Regenerate response if you encounter issues
    or unsatisfactory answers. It prompts ChatGPT to generate a new reply based on
    your latest prompt.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Text area:** This is where you enter your prompts and questions.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**ChatGPT version:** Below the text input area, you’ll find fine print, including
    a disclaimer: “ChatGPT can make mistakes. Consider checking important information.”
    Note that the display of the ChatGPT model version has been discontinued.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The following screenshot illustrates how this looks.
  prefs: []
  type: TYPE_NORMAL
- en: In the top-left corner, you can see the GPTs you have access to if you have
    the premium version.
  prefs: []
  type: TYPE_NORMAL
- en: At the bottom are your previous conversations.
  prefs: []
  type: TYPE_NORMAL
- en: If you have the premium version, you can choose **GPT-4** from the dropdown
    along with plugins.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B21232_03_02.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 3.2: Selecting different versions of ChatGPT'
  prefs: []
  type: TYPE_NORMAL
- en: You can even set custom instructions at the profile level if you wish to apply
    your configuration to all new conversations.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B21232_03_03.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 3.3: ChatGPT custom instructions'
  prefs: []
  type: TYPE_NORMAL
- en: Prompting
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Let’s draft our first prompt with ChatGPT.
  prefs: []
  type: TYPE_NORMAL
- en: You just have to ask questions in your natural language and converse with it
    like you would with a human and it will start sharing its knowledge with you.
  prefs: []
  type: TYPE_NORMAL
- en: '**[Prompt]**'
  prefs: []
  type: TYPE_NORMAL
- en: Can you please explain the process of machine learning in bullet points to me?
  prefs: []
  type: TYPE_NORMAL
- en: '**[End of prompt]**'
  prefs: []
  type: TYPE_NORMAL
- en: You should see a response similar to the following screenshot. Note that the
    responses are never identical, and you will not get the exact same text each time.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B21232_03_04.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 3.4: ChatGPT prompt screen'
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we’ve looked at GitHub Copilot and ChatGPT, including what
    they are, how they work, and how to get started with them.
  prefs: []
  type: TYPE_NORMAL
- en: We’ve also looked at some of their capabilities and limitations.
  prefs: []
  type: TYPE_NORMAL
- en: Finally, we’ve looked at how to install them and work with them. You were also
    given some idea of how to use them via prompts. 3
  prefs: []
  type: TYPE_NORMAL
- en: Join our community on Discord
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Join our community’s Discord space for discussions with the author and other
    readers:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://packt.link/aicode](https://packt.link/aicode)'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/QR_Code510410532445718281.png)'
  prefs: []
  type: TYPE_IMG
