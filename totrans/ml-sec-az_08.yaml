- en: '8'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '8'
- en: Managing and Securing the MLOps Life Cycle
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 管理和安全保障MLOps生命周期
- en: As important as data and infrastructure are, their management can create overhead
    and take away from the actual ML tasks. When different roles collaborate on an
    ML project, there is a need to automate and standardize things to make the daily
    tasks more efficient.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管数据和基础设施很重要，但它们的管理可能会产生额外的开销，并从实际的ML任务中分散注意力。当不同的角色在ML项目中协作时，需要自动化和标准化事物，以使日常任务更加高效。
- en: In this chapter, we will explore MLOps best practices and how we can implement
    them using Azure and other tools. We will dive into how to leverage **Infrastructure
    as Code** (**IaC**) and some applications of DevOps in the ML life cycle for **continuous
    integration**/**continuous delivery** (**CI**/**CD**) using Azure DevOps. These
    are not the only ways to implement MLOps, though. Azure provides us with comprehensive
    monitoring and logging capabilities, which we can leverage with services such
    as Event Grid and others to initiate event-driven workflows. This means we are
    not limited to tools but we can implement our own workflows and easily tailor
    them to our own processes.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将探讨MLOps的最佳实践以及如何使用Azure和其他工具来实施它们。我们将深入了解如何利用**基础设施即代码**（**IaC**）和Azure
    DevOps中DevOps在ML生命周期中的应用，以实现**持续集成**/**持续交付**（**CI**/**CD**）。尽管这些不是实施MLOps的唯一方法，但Azure为我们提供了全面的监控和日志记录功能，我们可以利用事件网格等服务来启动事件驱动的流程。这意味着我们不仅限于工具，还可以实施我们自己的工作流程，并轻松地根据我们的流程进行定制。
- en: 'In this chapter, we’re going to cover the following main topics:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主要主题：
- en: Working with MLOps in Azure Machine Learning
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Azure Machine Learning中使用MLOps
- en: Leveraging IaC
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 利用IaC
- en: Implementing CI/CD
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实施CI/CD
- en: Exploring event-driven workflows in Azure
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索Azure中的事件驱动工作流程
- en: By the end of the chapter, we will know what MLOps is, what CI/CD looks like
    in Azure Machine Learning, and how to combine different services and create our
    own workflows.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 到本章结束时，我们将了解MLOps是什么，Azure Machine Learning中的CI/CD是什么样的，以及如何结合不同的服务并创建我们自己的工作流程。
- en: Technical requirements
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'This chapter delves into several DevOps concepts. Some experience with Git,
    version control, and DevOps will be useful to understand the concepts described
    in this chapter. If you lack knowledge of the preceding technologies, the following
    learning resources will help you understand some basic concepts and functions.
    Go through them to review the prerequisites needed to understand the content of
    this chapter:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 本章深入探讨了几个DevOps概念。对Git、版本控制和DevOps有一定的了解将有助于理解本章中描述的概念。如果你缺乏先前的技术知识，以下的学习资源将帮助你理解一些基本概念和功能。请阅读它们以回顾理解本章内容所需的前提条件：
- en: '**Git and version** **control**: [https://learn.microsoft.com/en-us/training/modules/intro-to-git/](https://learn.microsoft.com/en-us/training/modules/intro-to-git/
    )'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Git和版本控制**：[https://learn.microsoft.com/en-us/training/modules/intro-to-git/](https://learn.microsoft.com/en-us/training/modules/intro-to-git/)'
- en: '**Building applications with Azure** **DevOps**: [https://learn.microsoft.com/en-us/training/paths/build-applications-with-azure-devops/](https://learn.microsoft.com/en-us/training/paths/build-applications-with-azure-devops/)'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**使用Azure DevOps构建应用程序**：[https://learn.microsoft.com/en-us/training/paths/build-applications-with-azure-devops/](https://learn.microsoft.com/en-us/training/paths/build-applications-with-azure-devops/)'
- en: '**GitHub** **Actions**: [https://learn.microsoft.com/en-us/training/paths/automate-workflow-github-actions/](https://learn.microsoft.com/en-us/training/paths/automate-workflow-github-actions/)'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**GitHub Actions**：[https://learn.microsoft.com/en-us/training/paths/automate-workflow-github-actions/](https://learn.microsoft.com/en-us/training/paths/automate-workflow-github-actions/)'
- en: Working with MLOps in Azure Machine Learning
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Azure Machine Learning中使用MLOps
- en: The term **MLOps** is a combination of **Machine Learning** and **Operations**
    and refers to the practices, tools, and strategies for the life cycle management
    of ML models in a production environment. Just as DevOps aims to streamline the
    development and operations processes for software, MLOps aims to do the same for
    ML systems. Implementing MLOps can improve productivity, reproducibility, and
    agility in ML projects. MLOps focuses on a specific set of practices.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**MLOps**这个术语是**机器学习**和**运营**的结合，指的是在生产环境中管理ML模型生命周期的实践、工具和策略。正如DevOps旨在简化软件的开发和运营流程一样，MLOps旨在为ML系统做同样的事情。实施MLOps可以提高ML项目的生产力、可重复性和敏捷性。MLOps专注于一系列特定的实践。'
- en: 'Let us explore each practice and how we can use Azure Machine Learning features
    for each one:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们探索每个实践以及如何使用Azure Machine Learning功能来实现它们：
- en: '**Collaboration**: Facilitating effective collaboration between various roles
    such as data scientists, ML engineers, and operations teams is core in ML projects
    as there are multiple roles involved in the success of the project. By using shared
    platforms and tools, a data scientist focuses on model prototyping, an ML engineer
    ensures it’s production-ready, and an operations specialist monitors its real-time
    performance. Azure Machine Learning is already implemented via a dedicated workspace
    where everyone can collaborate, promoting transparency and teamwork. Additionally,
    it is based on Azure, and with the help of Microsoft Entra ID and RBAC, we can
    implement collaboration easily while adhering to security best practices.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**协作**: 在机器学习项目中，促进数据科学家、机器学习工程师和运维团队等不同角色之间的有效协作是核心，因为项目的成功涉及多个角色。通过使用共享的平台和工具，数据科学家可以专注于模型原型设计，机器学习工程师确保其生产就绪，而运维专家则监控其实时性能。Azure
    机器学习已经通过一个专用的工作空间实现，在这里每个人都可以协作，促进透明度和团队合作。此外，它基于 Azure，借助 Microsoft Entra ID
    和 RBAC，我们可以轻松实现协作，同时遵守安全最佳实践。'
- en: '**Versioning**: Version control in MLOps is not restricted to just code. It
    extends to datasets, model configurations, parameters, and results. The aim is
    to ensure that any experiment or model training can be deterministically reproduced
    at any time. Consider a scenario where a model’s performance suddenly drops. Using
    version control, a team can revert to an earlier, better-performing model configuration,
    identifying which dataset and hyperparameters were used at that time. This involves
    maintaining a systematic record of model versions, training data, decisions, and
    changes. It is essential for compliance, especially in regulated industries, and
    ensures that model decisions are transparent and traceable. Azure Machine Learning
    allows us to have tracking and versioning in data and models by registering them
    to the workspace.'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**版本控制**: 在 MLOps 中的版本控制不仅限于代码，它还扩展到数据集、模型配置、参数和结果。目标是确保任何实验或模型训练都可以在任何时间确定性地重现。考虑一个场景，即模型的性能突然下降。使用版本控制，团队可以回滚到之前表现更好的模型配置，确定当时使用了哪些数据集和超参数。这涉及到维护模型版本、训练数据、决策和变更的系统记录。这对于合规性至关重要，尤其是在受监管的行业中，并确保模型决策透明且可追溯。Azure
    机器学习允许我们通过将它们注册到工作空间来实现数据和模型的跟踪和版本控制。'
- en: '**Model validation**: This practice ensures models meet quality standards before
    deployment. It involves rigorous testing, including unit tests for code, validation
    against holdout datasets, and even real-world scenario simulations. For example,
    before deploying a self-driving car model, it’s tested in a virtual environment
    to ensure it correctly identifies pedestrians, obeys traffic signals, and reacts
    to various weather conditions. This can be implemented as part of a CI/CD pipeline.'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**模型验证**: 这种做法确保模型在部署前符合质量标准。它包括对代码的单元测试、对保留数据集的验证，甚至是对现实世界场景的模拟。例如，在部署自动驾驶汽车模型之前，它在虚拟环境中进行测试，以确保它正确识别行人、遵守交通信号并应对各种天气条件。这可以作为
    CI/CD 管道的一部分实现。'
- en: '**CI/CD**: CI/CD for ML automates the model training, validation, and deployment
    processes. When new data arrives or the code changes, the model is retrained and,
    if it meets set standards, is automatically deployed. For example, after refining
    a model’s architecture, a data scientist pushes the changes to a repository. The
    CI/CD pipeline retrains the model, evaluates it, and, if it surpasses a predefined
    accuracy threshold, updates the model in production without manual intervention.
    In the next section, we will see some implementations using DevOps.'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**CI/CD**: 机器学习的 CI/CD 自动化模型训练、验证和部署过程。当新数据到来或代码发生变化时，模型将被重新训练，如果它符合设定的标准，则自动部署。例如，在改进模型架构后，数据科学家将更改推送到存储库。CI/CD
    管道重新训练模型，评估它，如果它超过预定义的准确度阈值，则无需人工干预即可在生产中更新模型。在下一节中，我们将看到一些使用 DevOps 的实现。'
- en: '**Monitoring and logging**: Continuous monitoring tracks a model’s health,
    performance, and any potential data drift. Logging captures predictions, input
    data, and anomalies, ensuring there’s traceable evidence of the model’s behavior
    in production. An image recognition model in production begins misclassifying
    certain objects. Monitoring tools detect this performance dip, and by inspecting
    the logs, engineers can identify the issue. Azure Machine Learning maintains logs
    about multiple aspects of the workspace, whether it is data drift or an endpoint
    not responding.'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**监控和日志记录**：持续监控跟踪模型的健康状况、性能以及任何潜在的数据漂移。日志记录捕获预测、输入数据和异常，确保有可追溯的证据来记录模型在生产中的行为。一个生产中的图像识别模型开始错误地分类某些对象。监控工具检测到这种性能下降，通过检查日志，工程师可以识别问题。Azure机器学习维护关于工作区多个方面的日志，无论是数据漂移还是端点未响应。'
- en: '**Scalability**: MLOps focuses on building ML systems that can scale with increasing
    data or demand, ensuring that infrastructure and processes can handle growth without
    degradation in performance. Suppose a start-up’s user base grows tenfold in a
    year. Their recommendation system, designed with scalability in mind, handles
    this surge without requiring a complete overhaul or causing service interruptions.
    As Azure Machine Learning leverages the Azure infrastructure, we can scale endpoints
    and compute to accommodate scaling scenarios such as this one.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可扩展性**：MLOps专注于构建可以随着数据或需求的增加而扩展的机器学习系统，确保基础设施和流程可以处理增长而不会降低性能。假设一个初创公司的用户基础在一年内增长了十倍。他们的推荐系统在设计时就考虑了可扩展性，可以处理这种激增，而无需进行全面的重构或造成服务中断。由于Azure机器学习利用Azure基础设施，我们可以扩展端点和计算以适应这种类型的扩展场景。'
- en: '**Reproducibility**: Central to MLOps is the ability to recreate experiments,
    results, or model deployments. This ensures consistency, aids debugging, and promotes
    trust in the system. Suppose a team member discovers a groundbreaking model improvement;
    using MLOps practices, other team members can replicate the exact conditions,
    data preprocessing steps, and training configuration to verify and further build
    upon the findings. Model registration handles this within the workspace.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可重现性**：MLOps的核心是能够重现实验、结果或模型部署。这确保了一致性，有助于调试，并促进了对系统的信任。假设团队成员发现了一个突破性的模型改进；使用MLOps实践，其他团队成员可以复制确切的条件、数据预处理步骤和训练配置，以验证并在此基础上进一步研究。模型注册在工作区内部处理这个问题。'
- en: '**Automation**: Many stages of the ML life cycle, from data ingestion to model
    retraining, are automated to enhance efficiency and reduce manual errors. When
    monthly sales data is uploaded to cloud storage, an automated pipeline preprocesses
    the data, retrains a forecasting model, and updates dashboards with new predictions—all
    without human intervention. Depending on what it is that we want to do, we can
    leverage services such as DevOps, Azure Functions, or simple Webhooks to automate
    pipelines and workflows.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**自动化**：机器学习生命周期的许多阶段，从数据摄取到模型重新训练，都是自动化的，以提高效率和减少人为错误。当月销售数据上传到云存储时，自动化的管道会预处理数据，重新训练预测模型，并使用新的预测更新仪表板——这一切都不需要人为干预。根据我们想要做什么，我们可以利用DevOps、Azure
    Functions或简单的Webhooks等服务来自动化管道和工作流程。'
- en: Incorporating MLOps practices in Azure Machine Learning creates a comprehensive
    and efficient ML life cycle management system, ensuring models are reliable and
    efficient and bring consistent value.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在Azure机器学习中结合MLOps实践，创建了一个全面高效的机器学习生命周期管理系统，确保模型可靠高效，并带来持续的价值。
- en: Let us see some of those practices in action, starting with IaC.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看这些实践的实际应用，从IaC开始。
- en: Leveraging IaC
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 利用IaC
- en: IaC is a key practice in DevOps that enables developers and operations to automatically
    manage, provision, and configure IT infrastructure through code. In Azure, there
    are a variety of tools and services that facilitate IaC practices. We have already
    mentioned some of these previously but we will review everything here.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: IaC（基础设施即代码）是DevOps中的关键实践，它通过代码自动管理、提供和配置IT基础设施。在Azure中，有多种工具和服务可以促进IaC实践。我们之前已经提到了一些，但在这里我们将全面回顾。
- en: 'Let us delve into how IaC is implemented in Azure and the services we can use:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们深入了解如何在Azure中实现IaC以及我们可以使用的服务：
- en: '**Azure Resource Manager** (**ARM**) **templates**: ARM templates are the native
    IaC solution in Azure. They are JSON files that define the resources you need
    to deploy for your solution. By using ARM templates, you can define and deploy
    your infrastructure declaratively. We can make them more modular by defining parameters
    for our templates to create reusable deployment scripts and implement conditional
    logic for resource deployment.'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Azure 资源管理器**（**ARM**）**模板**：ARM 模板是 Azure 中的原生 IaC 解决方案。它们是定义您需要为解决方案部署的资源所需的
    JSON 文件。通过使用 ARM 模板，您可以声明式地定义和部署您的基础设施。我们可以通过为模板定义参数来使它们更模块化，以创建可重用的部署脚本并实现资源部署的条件逻辑。'
- en: '**Azure Bicep**: Bicep is a language for deploying Azure resources declaratively.
    It’s essentially a transparent abstraction over ARM templates, making it easier
    to write and manage Azure infrastructure. Bicep offers a more concise and readable
    syntax compared to ARM’s JSON, and there are development environment integrations
    that provide autocompletion, type safety, and other helpful features.'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Azure Bicep**：Bicep 是一种用于声明式部署 Azure 资源的编程语言。它本质上是对 ARM 模板的透明抽象，使得编写和管理 Azure
    基础设施更加容易。与 ARM 的 JSON 相比，Bicep 提供了更简洁、易读的语法，并且有开发环境集成，提供自动完成、类型安全和其他有用功能。'
- en: '**Azure CLI and PowerShell**: Both Azure CLI and Azure PowerShell are command-line
    tools provided by Azure for managing Azure resources. While they are technically
    imperative tools (you’re telling Azure exactly what to do, step by step), they’re
    often used in scripts to automate provisioning and configuration tasks in an IaC
    manner.'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Azure CLI 和 PowerShell**：Azure CLI 和 Azure PowerShell 都是 Azure 提供的用于管理 Azure
    资源的命令行工具。虽然它们在技术上属于命令式工具（您正在逐步告诉 Azure 要做什么），但它们通常用于脚本中，以自动化 IaC 方式的配置和部署任务。'
- en: '**Azure Blueprints**: Azure Blueprints allows organizations to define a repeatable
    set of Azure resources that adhere to organizational standards and requirements.
    Blueprints are more comprehensive than ARM templates, as they can define role
    assignments, policy assignments, and ARM template deployments. Like code, blueprints
    are versioned, so previous versions can be used when assigning new subscriptions.'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Azure 蓝图**：Azure Blueprints 允许组织定义一组符合组织标准和要求的可重复使用的 Azure 资源。与 ARM 模板相比，蓝图更全面，因为它们可以定义角色分配、策略分配和
    ARM 模板部署。与代码一样，蓝图具有版本控制功能，因此可以在分配新订阅时使用旧版本。'
- en: '**Terraform on Azure**: Terraform is an open source IaC tool developed by HashiCorp.
    It uses a language called **HashiCorp Configuration Language** (**HCL**) to define
    and provision infrastructure. Azure fully supports Terraform, allowing you to
    use it as an alternative to ARM templates. Other supported third-party platforms
    are Ansible, Chef, and Pulumi for infrastructure automation in Azure.'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Azure 上的 Terraform**：Terraform 是 HashiCorp 开发的开源 IaC 工具。它使用一种称为 **HashiCorp
    配置语言**（**HCL**）的语言来定义和配置基础设施。Azure 完全支持 Terraform，允许您将其用作 ARM 模板的替代方案。其他支持的第三方平台包括
    Ansible、Chef 和 Pulumi，用于在 Azure 中进行基础设施自动化。'
- en: Regardless of which service you use, there are multiple benefits to using IaC.
    We gain consistency by eliminating environmental drift and ensuring that every
    environment is provisioned the same way. There is reusability because we can use
    the same scripts or templates across different environments or projects. In services
    that support it, such as Azure Blueprints, we can have versioning. For others
    that do not support this out of the box, we can still save the scripts using version
    control systems, to keep track of changes and roll back when necessary. Additionally,
    we can integrate IaC into CI/CD pipelines to automatically provision or update
    infrastructure as part of the deployment process.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 无论您使用哪种服务，使用 IaC 都有多种好处。通过消除环境漂移并确保每个环境以相同的方式部署，我们获得了一致性。由于我们可以在不同的环境或项目中使用相同的脚本或模板，因此具有可重用性。在支持它的服务中，例如
    Azure Blueprints，我们可以拥有版本控制。对于不支持此功能的其他服务，我们仍然可以使用版本控制系统保存脚本，以跟踪更改并在必要时回滚。此外，我们还可以将
    IaC 集成到 CI/CD 管道中，作为部署过程的一部分自动配置或更新基础设施。
- en: Let us discover how IaC integrates with Azure Machine Learning.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们探索 IaC 如何与 Azure 机器学习集成。
- en: Combining IaC with Azure Machine Learning
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将 IaC 与 Azure 机器学习结合
- en: Combining IaC with Azure Machine Learning means that we are integrating the
    automated setup, management, and provisioning of ML resources with the broader
    cloud infrastructure on which they rely. This approach ensures consistency, reproducibility,
    and efficiency in ML operations.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 将 IaC 与 Azure Machine Learning 结合意味着我们将 ML 资源的自动化设置、管理和配置与它们所依赖的更广泛的云基础设施集成在一起。这种方法确保了
    ML 运作的一致性、可重复性和效率。
- en: 'Here are some examples of combining IaC with Azure Machine Learning:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些将 IaC 与 Azure Machine Learning 结合的示例：
- en: '**Infrastructure**: Everything starts with setting up the resources needed,
    including the workspace itself, compute instances such as training clusters (for
    example, **Azure Kubernetes Service** (**AKS**) or AML compute), inference clusters,
    and networking components such as VNets, subnets, and security groups.'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**基础设施**：一切从设置所需资源开始，包括工作区本身、计算实例（例如，训练集群，例如 **Azure Kubernetes 服务**（**AKS**）或
    AML 计算）、推理集群以及网络组件，如 VNets、子网和安全组。'
- en: '**Datastores and datasets**: Datastores in Azure Machine Learning represent
    storage backends (for example, Azure Blob Storage). After the provisioning, we
    can use the Azure Machine Learning SDK to programmatically register datastores
    and datasets once they are set up via IaC.'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据存储和数据集**：Azure Machine Learning 中的数据存储代表存储后端（例如，Azure Blob Storage）。在配置后，我们可以使用
    Azure Machine Learning SDK 通过 IaC 程序化注册数据存储和数据集。'
- en: '**Model deployment**: The same principle as for the data follows the models.
    Once models are trained, they can be deployed to endpoints for real-time or batch
    inferencing. We can use IaC to provision deployment targets such as AKS or **Azure
    Container Instances** (**ACI**). Then, we can use the Azure Machine Learning SDK
    to deploy models to these targets and integrate features such as autoscaling,
    logging, and monitoring.'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**模型部署**：与数据相同的原理适用于模型。一旦模型训练完成，它们可以被部署到端点进行实时或批量推理。我们可以使用 IaC 来配置部署目标，例如 AKS
    或 **Azure 容器实例**（**ACI**）。然后，我们可以使用 Azure Machine Learning SDK 将模型部署到这些目标，并集成自动缩放、日志记录和监控等功能。'
- en: '**Automation and orchestration**: We can store all IaC scripts and ML code
    in a version control system such as Git. Then, we can use Azure DevOps, GitHub
    Actions, or other CI/CD tools to automate the deployment of infrastructure and
    execution of ML workflows. This ensures that infrastructure changes or updates
    to ML models initiate automated processes.'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**自动化和编排**：我们可以将所有 IaC 脚本和 ML 代码存储在版本控制系统（如 Git）中。然后，我们可以使用 Azure DevOps、GitHub
    Actions 或其他 CI/CD 工具来自动化基础设施的部署和 ML 工作流的执行。这确保了基础设施更改或 ML 模型的更新将启动自动化流程。'
- en: By integrating IaC with Azure Machine Learning, teams can ensure a consistent
    environment, streamline ML workflows, and foster collaboration between data scientists,
    ML engineers, and DevOps teams. As IaC is an integral part of MLOps, this setup
    ensures that every change—whether it’s infrastructure-related or model-related
    – is versioned, reproducible, and automatically processed. This streamlined process
    minimizes manual interventions and potential errors, optimizing the ML development
    life cycle.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 通过将 IaC 与 Azure Machine Learning 集成，团队可以确保环境的一致性，简化 ML 工作流程，并促进数据科学家、ML 工程师和
    DevOps 团队之间的协作。由于 IaC 是 MLOps 的一个组成部分，这种设置确保了每个更改——无论是基础设施相关的还是模型相关的——都是版本化的、可重复的，并且可以自动处理。这种简化的流程最小化了人工干预和潜在错误，优化了
    ML 开发生命周期。
- en: Another core part of MLOps is continuous integration and delivery. Let us explore
    how to use it with Azure DevOps.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: MLOps 的另一个核心部分是持续集成和持续交付。让我们探索如何使用 Azure DevOps 来实现它。
- en: Implementing CI/CD
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实施CI/CD
- en: CI/CD is a software engineering practice that promotes frequent code integration
    and automated deployment. This approach is becoming increasingly popular in ML
    projects to ensure models are constantly improved, validated, and deployed in
    a streamlined manner. In Azure Machine Learning, there are multiple tools and
    services to help you implement CI/CD in your ML life cycle.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: CI/CD 是一种软件工程实践，它促进了频繁的代码集成和自动化部署。这种方法在 ML 项目中越来越受欢迎，以确保模型不断改进、验证和以简化的方式部署。在
    Azure Machine Learning 中，有多个工具和服务可以帮助您在 ML 生命周期中实现 CI/CD。
- en: 'Here’s an example of CI/CD:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一个 CI/CD 的示例：
- en: By using VS Code with Azure Machine Learning extensions for development, we
    can develop our scripts.
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过使用带有 Azure Machine Learning 扩展的 VS Code 进行开发，我们可以编写我们的脚本。
- en: Those scripts can be version-controlled using Git repositories (such as GitHub
    or Azure Repos).
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这些脚本可以使用 Git 仓库（例如 GitHub 或 Azure Repos）进行版本控制。
- en: If we have the expertise, we can set up automated testing to validate our models.
    This might include unit tests, integration tests, and other validation or data
    checks.
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我们有专业知识，我们可以设置自动测试来验证我们的模型。这可能包括单元测试、集成测试以及其他验证或数据检查。
- en: 'We can configure Azure Pipelines to automatically trigger when changes are
    made to the repository. A CI/CD pipeline could include the following:'
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以配置 Azure 管道，以便在代码库发生更改时自动触发。CI/CD 管道可能包括以下内容：
- en: Training the model
  id: totrans-54
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 训练模型
- en: Logging metrics
  id: totrans-55
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 记录指标
- en: Retrieving the registered model
  id: totrans-56
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检索已注册的模型
- en: Packaging and deploying the model
  id: totrans-57
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 打包和部署模型
- en: Let us see an example of Azure DevOps and Pipelines next.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看 Azure DevOps 和管道的示例。
- en: Working with Azure DevOps
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 Azure DevOps 进行工作
- en: Azure DevOps is a set of development tools and services to work and collaborate
    on code development and build and deploy applications.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: Azure DevOps 是一套开发工具和服务，用于代码开发、构建和部署应用程序的工作和协作。
- en: 'Azure DevOps consists of a range of services, such as the following:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: Azure DevOps 包含一系列服务，例如以下内容：
- en: '**Azure Boards**: This provides work tracking with Kanban boards, backlogs,
    team dashboards, and custom reporting. It allows teams to plan, track, and discuss
    work across the entire development life cycle.'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Azure 板**：这提供了带有看板、待办事项、团队仪表板和自定义报告的工作跟踪。它允许团队在整个开发生命周期中规划、跟踪和讨论工作。'
- en: '**Azure Repos**: This is a version control system that provides Git repositories
    for source control. It supports pull requests, branching, and searching.'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Azure 代码库**：这是一个版本控制系统，提供 Git 代码库以进行源代码控制。它支持拉取请求、分支和搜索。'
- en: '**Azure Pipelines**: This is a CI/CD platform for deploying and testing applications
    to different platforms both for cloud and on-premises offerings.'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Azure 管道**：这是一个 CI/CD 平台，用于部署和测试应用程序到不同的平台，包括云和本地提供的产品。'
- en: '**Azure Test Plans**: This is a platform that includes multiple testing tools
    for different scenarios such as exploratory or continuous testing.'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Azure 测试计划**：这是一个包含多种测试工具的平台，适用于不同的场景，如探索性测试或持续测试。'
- en: '**Azure Artifacts**: This allows collaboration between teams to share packages
    from private or public repositories such as NuGet or Maven into their pipelines.'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Azure 软件包**：这允许团队之间协作，将来自私有或公共存储库（如 NuGet 或 Maven）的软件包共享到他们的管道中。'
- en: Signing up for Azure DevOps
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 注册 Azure DevOps
- en: 'To get started with Azure DevOps, follow this quickstart guide: [https://learn.microsoft.com/en-us/azure/devops/user-guide/sign-up-invite-teammates?view=azure-devops](https://learn.microsoft.com/en-us/azure/devops/user-guide/sign-up-invite-teammates?view=azure-devops).'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始使用 Azure DevOps，请遵循此快速入门指南：[https://learn.microsoft.com/en-us/azure/devops/user-guide/sign-up-invite-teammates?view=azure-devops](https://learn.microsoft.com/en-us/azure/devops/user-guide/sign-up-invite-teammates?view=azure-devops)。
- en: For Azure Machine Learning, we can leverage pipelines to trigger ML tasks. Let
    us see how we can connect the Azure Machine Learning workspace and run our ML
    pipelines via Azure DevOps.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 Azure 机器学习，我们可以利用管道来触发 ML 任务。让我们看看我们如何连接 Azure 机器学习工作区并通过 Azure DevOps 运行我们的
    ML 管道。
- en: Creating a connection to the workspace
  id: totrans-70
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建与工作区的连接
- en: 'Before we work with anything that has to do with the Azure Machine Learning
    workspace, we need to create a service connection with Azure DevOps. For this,
    we need to create a new project in Azure DevOps. Here are the steps for it:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始处理与 Azure 机器学习工作区相关的内容之前，我们需要使用 Azure DevOps 创建一个服务连接。为此，我们需要在 Azure DevOps
    中创建一个新的项目。以下是步骤：
- en: 'Open your Azure DevOps project and, under **Project Settings**, look for **Service
    connections**:'
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开您的 Azure DevOps 项目，在 **项目设置** 下查找 **服务连接**：
- en: '![Figure 8.1 – Creating a service connection](img/B21076_08_1.jpg)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.1 – 创建服务连接](img/B21076_08_1.jpg)'
- en: Figure 8.1 – Creating a service connection
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.1 – 创建服务连接
- en: 'Click on **Create service connection**, and in the form that follows, choose
    **Azure Resource Manager**, as shown here:'
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **创建服务连接**，在随后的表单中，选择 **Azure 资源管理器**，如图所示：
- en: '![Figure 8.2 – Starting with the Azure Resource Manager option](img/B21076_08_2.jpg)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.2 – 从 Azure 资源管理器选项开始](img/B21076_08_2.jpg)'
- en: Figure 8.2 – Starting with the Azure Resource Manager option
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.2 – 从 Azure 资源管理器选项开始
- en: Click **Next** at the bottom of the page, and in the **Authentication method**
    options, the fastest option is to choose **Service principal (automatic)** because
    it requires no further configuration from the Azure portal. For better security,
    you might consider **Managed identity** if you have one created, but if you are
    not sure, you can just go ahead with the **Service principal (****automatic)**
    option.
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击页面底部的**下一步**，在**身份验证方法**选项中，最快的选项是选择**服务主体（自动）**，因为它不需要从Azure门户进行进一步配置。为了更好的安全性，如果您有一个已创建的**托管标识**，您可以考虑使用它，但如果您不确定，您可以直接使用**服务主体（自动）**选项。
- en: '![Figure 8.3 – Choosing the Service principal option](img/B21076_08_3.jpg)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![图8.3 – 选择服务主体选项](img/B21076_08_3.jpg)'
- en: Figure 8.3 – Choosing the Service principal option
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.3 – 选择服务主体选项
- en: 'Then, choose the workspace resource in your **Subscription** level by filling
    in the details shown in the following screenshot:'
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，通过填写以下截图所示的详细信息，在您的**订阅**级别选择工作区资源：
- en: '![Figure 8.4 – Selecting and connecting to the workspace resource](img/B21076_08_4.jpg)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![图8.4 – 选择并连接到工作区资源](img/B21076_08_4.jpg)'
- en: Figure 8.4 – Selecting and connecting to the workspace resource
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.4 – 选择并连接到工作区资源
- en: That is it! Now we have a connection to the workspace, and we can use it to
    run pipelines. You can still make any updates or see usage data by choosing your
    connection from the list.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 就这样！现在我们已经建立了与工作区的连接，我们可以用它来运行管道。您仍然可以通过从列表中选择您的连接来执行任何更新或查看使用数据。
- en: '![Figure 8.5 – Changing connection properties](img/B21076_08_5.jpg)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![图8.5 – 修改连接属性](img/B21076_08_5.jpg)'
- en: Figure 8.5 – Changing connection properties
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.5 – 修改连接属性
- en: Now that we have our connection, we are free to run pipelines. Let us see how
    in the following section.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经建立了连接，我们可以自由地运行管道。让我们在下一节中看看如何操作。
- en: Creating a new pipeline
  id: totrans-88
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建新管道
- en: The steps to create a new pipeline are straightforward. The challenge is to
    have the necessary preparations in place to call the Azure Machine Learning pipeline
    from Azure DevOps.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 创建新管道的步骤很简单。挑战在于做好必要的准备工作，以便从Azure DevOps调用Azure机器学习管道。
- en: If you do not have any examples, you can use the following repository, which
    includes pipeline examples and code.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您没有任何示例，可以使用以下存储库，其中包含管道示例和代码。
- en: Azure Machine Learning example repository
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: Azure机器学习示例存储库
- en: 'If you don’t have a pipeline and would like to explore some ML examples in
    Azure, you can fork and run code from this repository: https://github.com/Azure/mlops-v2-ado-demo.'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您没有管道并想探索Azure中的某些ML示例，您可以从这个存储库中fork和运行代码：https://github.com/Azure/mlops-v2-ado-demo。
- en: 'In Azure DevOps, you will need to build a YAML pipeline to run your tasks.
    Here are the steps necessary to create a new pipeline:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 在Azure DevOps中，您需要构建一个YAML管道来运行您的任务。以下是创建新管道所需的步骤：
- en: 'Start by creating a new pipeline, as shown in the following screenshot:'
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先创建一个新的管道，如下面的截图所示：
- en: '![Figure 8.6 – New pipeline](img/B21076_08_6.jpg)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![图8.6 – 新管道](img/B21076_08_6.jpg)'
- en: Figure 8.6 – New pipeline
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.6 – 新管道
- en: 'You will need to provide the repository where your scripts are stored. You
    can use the repository from your project or an external one such as Bitbucket
    or GitHub:'
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您需要提供存储脚本所在的存储库。您可以使用项目中的存储库或外部存储库，例如Bitbucket或GitHub：
- en: '![Figure 8.7 – Choosing your code repository](img/B21076_08_7.jpg)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![图8.7 – 选择代码存储库](img/B21076_08_7.jpg)'
- en: Figure 8.7 – Choosing your code repository
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.7 – 选择代码存储库
- en: 'I selected the one in the repository in the same project, so all I have to
    do is select the name of the repository, as shown in the next screenshot:'
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我选择了同一项目中的存储库中的那个，所以我只需要选择存储库的名称，如下一截图所示：
- en: f
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: f
- en: '![Figure 8.8 – Selecting the repository from the list](img/B21076_08_8.jpg)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![图8.8 – 从列表中选择存储库](img/B21076_08_8.jpg)'
- en: Figure 8.8 – Selecting the repository from the list
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.8 – 从列表中选择存储库
- en: 'Here, select the **Starter pipeline** template to load a simple pipeline YAML
    file:'
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在这里，选择**启动管道**模板以加载简单的管道YAML文件：
- en: '![Figure 8.9 – Choosing the Starter pipeline template](img/B21076_08_9.jpg)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![图8.9 – 选择启动管道模板](img/B21076_08_9.jpg)'
- en: Figure 8.9 – Choosing the Starter pipeline template
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.9 – 选择启动管道模板
- en: Now, here is the big challenge. You need to define the triggers and start up
    your Azure Machine Learning pipeline from here. An effective way to get started
    is to use the CLI to submit any ML jobs.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，这里是一个大挑战。您需要定义触发器并从这里启动Azure机器学习管道。一个有效的开始方法是使用CLI提交任何ML作业。
- en: 'The starter pipeline does provide some sample code, as shown in the next screenshot,
    to get started and fill in the details. For several things, such as variables,
    you can also add them via an integrated designer:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 启动管道确实提供了一些示例代码，如下一张截图所示，以帮助您开始并填写详细信息。对于一些事物，例如变量，您也可以通过集成设计器添加它们：
- en: '![Figure 8.10 – Filling in the code to call your pipeline](img/B21076_08_10.jpg)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.10 – 填写代码以调用您的管道](img/B21076_08_10.jpg)'
- en: Figure 8.10 – Filling in the code to call your pipeline
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.10 – 填写代码以调用您的管道
- en: If you chose to clone the repository suggested in the previous section, you
    can find the pipeline YAML code in the `mlops/devops-pipelines` folder. Copy and
    paste the file of your choice and submit the code.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您选择克隆上一节中建议的存储库，您可以在 `mlops/devops-pipelines` 文件夹中找到管道 YAML 代码。复制并粘贴您选择的文件并提交代码。
- en: Once you submit the code, you can run your pipeline. If anything goes wrong,
    you can see what happened with the associated error messages and you can always
    go back to fix the pipeline code and resubmit the job.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦提交代码，您就可以运行您的管道。如果出现问题，您可以看到相关的错误消息，并且您始终可以返回修复管道代码并重新提交作业。
- en: YAML pipeline editor
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: YAML 管道编辑器
- en: 'For a brief introduction to the YAML editor in Azure DevOps, take a look at
    the information at this link: [https://learn.microsoft.com/en-us/azure/devops/pipelines/get-started/yaml-pipeline-editor?view=azure-devops](https://learn.microsoft.com/en-us/azure/devops/pipelines/get-started/yaml-pipeline-editor?view=azure).'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 有关 Azure DevOps 中 YAML 编辑器的简要介绍，请参阅此链接的信息：[https://learn.microsoft.com/en-us/azure/devops/pipelines/get-started/yaml-pipeline-editor?view=azure-devops](https://learn.microsoft.com/en-us/azure/devops/pipelines/get-started/yaml-pipeline-editor?view=azure)。
- en: Azure DevOps provides logs and output that can help you monitor the run. Additionally,
    you can also monitor the run directly from the Azure Machine Learning workspace.
    Consider using *triggers* in Azure DevOps to automate the ML pipeline run – for
    example, every time there is a change to your training script or dataset.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: Azure DevOps 提供日志和输出，可以帮助您监控运行情况。此外，您还可以直接从 Azure 机器学习工作区监控运行。考虑在 Azure DevOps
    中使用 *触发器*来自动化 ML 管道运行 – 例如，每次您的训练脚本或数据集发生变化时。
- en: GitHub Actions
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: GitHub Actions
- en: 'Similar functionality can also be accomplished using GitHub Actions. For a
    quickstart guide, take a look at this tutorial: https:/learn.microsoft.com/en-us/azure/machine-learning/how-to-github-actions-machine-learning?view=azureml-api-2&tabs=userlevel.'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 类似的功能也可以使用 GitHub Actions 实现。有关快速入门指南，请参阅此教程：https:/learn.microsoft.com/en-us/azure/machine-learning/how-to-github-actions-machine-learning?view=azureml-api-2&tabs=userlevel。
- en: Remember, the specific steps and tasks you will undertake will depend on the
    complexity of your ML project and how you wish to structure your CI/CD pipelines.
    The preceding steps offer a high-level guide, but you might need to delve into
    specifics depending on your requirements.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，您将执行的具体步骤和任务将取决于您的 ML 项目的复杂性和您希望如何构建您的 CI/CD 管道。前面的步骤提供了一个高级指南，但您可能需要根据您的需求深入了解具体细节。
- en: Azure DevOps offers a comprehensive and integrated suite of tools that facilitate
    agile software development, CI/CD, testing, and collaboration among teams. However,
    it is not the only CI/CD tool that integrates with Azure Machine Learning. We
    can use GitHub Actions or create our own workflows by using other services altogether.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: Azure DevOps 提供了一套全面且集成的工具，这些工具有助于敏捷软件开发、CI/CD、测试以及团队之间的协作。然而，它并不是唯一与 Azure
    机器学习集成的 CI/CD 工具。我们可以使用 GitHub Actions 或通过使用其他服务来创建自己的工作流程。
- en: Let us see how we can use Azure events and logs to drive workflows in Azure
    Machine Learning.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看如何使用 Azure 事件和日志来驱动 Azure 机器学习中的工作流程。
- en: Exploring event-driven workflows in Azure
  id: totrans-121
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索 Azure 中的事件驱动工作流程
- en: In the context of Microsoft Azure, the term *event* can be associated with several
    services and concepts, but most commonly, it refers to a message or notification
    that indicates the occurrence of something on the platform. For example, every
    action we complete in the workspace generates events, such as when the workspace
    was created or when we changed settings. These events can be leveraged by other
    services such as Azure Event Grid to create workflows triggered by the event.
    Let us check it next.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Microsoft Azure 的背景下，术语 *事件* 可以与多个服务和概念相关联，但最常见的是指一个消息或通知，表明平台上的某个事件发生。例如，我们在工作区中完成的每个操作都会生成事件，例如当工作区被创建或我们更改设置时。这些事件可以通过其他服务，如
    Azure Event Grid，利用事件来创建工作流程。让我们接下来检查它。
- en: Exploring Event Grid
  id: totrans-123
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 探索事件网格
- en: Azure Event Grid is a fully managed event routing service. It enables you to
    easily build applications that react to changes or events happening within Azure
    services or even on-premises. Azure Event Grid is designed to connect different
    parts of a cloud-based application together through events. Applications can greatly
    benefit from Azure Event Grid in various scenarios, such as automating workflows
    in response to events (for example, creating a thumbnail when an image is uploaded
    to Azure Blob Storage) or monitoring resources in Azure (for example, getting
    notifications of virtual machine changes).
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: Azure事件网格是一个完全托管的事件路由服务。它使您能够轻松构建响应Azure服务或本地环境中发生的变化或事件的程序。Azure事件网格旨在通过事件将基于云的应用程序的不同部分连接在一起。应用程序可以在各种场景中从Azure事件网格中受益，例如在事件响应中自动化工作流（例如，在将图像上传到Azure
    Blob存储时创建缩略图）或监控Azure中的资源（例如，获取虚拟机更改的通知）。
- en: Event Grid uses a publish-subscribe model to distribute events. The **publish-subscribe**
    (often abbreviated as **pub-sub**) model is a messaging communication pattern
    used in distributed systems. It decouples the senders (publishers) from the receivers
    (subscribers), allowing them to operate independently. This decoupling means that
    the publisher and subscriber don’t need to know about each other’s existence.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 事件网格使用发布/订阅模型来分发事件。**发布/订阅**（通常缩写为**pub-sub**）模型是一种在分布式系统中使用的消息通信模式。它将发送者（发布者）与接收者（订阅者）解耦，允许它们独立操作。这种解耦意味着发布者和订阅者不需要知道彼此的存在。
- en: 'Here’s how the publish-subscribe model works. There are at least three components:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是发布/订阅模型的工作原理。至少有三个组件：
- en: '**Publisher**: This is the entity or component that produces messages or events.
    It doesn’t send them directly to a specific receiver or subscriber. Instead, it
    publishes the messages to an intermediary known as a topic or channel.'
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**发布者**：这是产生消息或事件的实体或组件。它不会直接发送到特定的接收者或订阅者。相反，它将消息发布到一个称为主题或频道的中间件。'
- en: '**Topic or channel**: A topic (sometimes called a channel) is a conduit where
    messages are published. Subscribers express interest in one or more topics and
    only receive messages that are of interest, without knowing who the publishers
    are.'
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**主题或频道**：主题（有时也称为频道）是消息发布的通道。订阅者对一个或多个主题表示兴趣，并且只接收感兴趣的消息，而无需知道发布者是谁。'
- en: '**Subscribers or handlers**: This is the entity or component interested in
    receiving certain messages. It subscribes to a specific topic or channel and gets
    notified when a publisher sends a message to that topic.'
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**订阅者或处理器**：这是对接收特定消息感兴趣的实体或组件。它订阅特定的主题或频道，并在发布者向该主题发送消息时收到通知。'
- en: Publish-subscribe model
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 发布/订阅模型
- en: 'Here is a little more information regarding the publish-subscribe model: https://learn.microsoft.com/en-us/azure/architecture/patterns/publisher-subscriber.'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是有关发布/订阅模型的一些更多信息：[发布/订阅模型](https://learn.microsoft.com/en-us/azure/architecture/patterns/publisher-subscriber)。
- en: 'Event Grid is an eventing plane that takes care of managing topics, storing
    messages, and notifying subscribers. Here are some key benefits:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 事件网格是一个负责管理主题、存储消息和通知订阅者的事件平面。以下是关键好处：
- en: '**Event sources**: Azure Event Grid supports various built-in event sources
    such as Azure Blob Storage, ARM, and more. It also allows the creation of custom
    topics for user-defined events.'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事件源**：Azure事件网格支持各种内置事件源，如Azure Blob存储、ARM等。它还允许创建用于用户定义事件的定制主题。'
- en: '**Unified event schema**: Event Grid has a common event model, which makes
    it easier to handle events across different Azure services.'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**统一事件架构**：事件网格有一个通用的事件模型，这使得跨不同的Azure服务处理事件变得更加容易。'
- en: '**Event filtering**: It enables fine-grained control by allowing subscribers
    to filter the events they’re interested in based on event type or subject.'
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事件过滤**：它通过允许订阅者根据事件类型或主题过滤他们感兴趣的事件，实现了细粒度控制。'
- en: '**Reliability**: It offers an *at-least-once* delivery guarantee to ensure
    that events are always delivered to subscribers. It also provides an option called
    **dead lettering** to save events that were, for whatever reason, *dropped* to
    a storage blob for further processing.'
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可靠性**：它提供至少一次交付保证，以确保事件始终被发送到订阅者。它还提供了一个名为**死信队列**的选项，用于保存由于各种原因而被**丢弃**到存储blob以供进一步处理的事件。'
- en: '**Scalability**: It is built to automatically scale based on demand, ensuring
    that your application can handle large numbers of events, as provided by most
    Azure services.'
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Low latency**: It provides consistent low-latency event delivery, which is
    crucial for real-time applications.'
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Decoupling**: By separating event producers from event consumers, Event Grid
    allows for greater flexibility and more modular application architectures.'
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In the next section, we will see an example where the publisher is the Azure
    Machine Learning workspace, and the handler is the storage queue.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
- en: Let us see how to implement this using the Event Grid.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
- en: Working with events in Azure Machine Learning
  id: totrans-142
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'We can start the process directly from the Azure portal. Here are the steps
    to do it:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
- en: 'Open the **Azure Machine Learning Resource** blade and find the **Events**
    section:'
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 8.11 – Opening AzureML resource events](img/B21076_08_11.jpg)'
  id: totrans-145
  prefs: []
  type: TYPE_IMG
- en: Figure 8.11 – Opening AzureML resource events
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
- en: 'In the **Get started** tab, if we scroll down, we can see which event handlers
    are natively supported by Event Grid. Of course, we can always create our own:'
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 8.12 – Azure Event Grid handlers](img/B21076_08_12.jpg)'
  id: totrans-148
  prefs: []
  type: TYPE_IMG
- en: Figure 8.12 – Azure Event Grid handlers
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
- en: 'At the top of the page, we can click on **+ Event Subscription** to create
    a new event subscription. Fill in the basic fields, carefully choosing the event
    we want to monitor, as shown in the following screenshot:'
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 8.13 – Create Event Subscription](img/B21076_08_13.jpg)'
  id: totrans-151
  prefs: []
  type: TYPE_IMG
- en: Figure 8.13 – Create Event Subscription
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
- en: 'Then, we can choose a destination. For this example, we are going to add them
    to a storage queue for further processing, but always remember that you can trigger
    simple to complex workflows by using another service such as Azure Functions or
    Azure Logic Apps. Under **ENDPOINT DETAILS**, select the **Storage Queues** endpoint
    type and click **Select** **an endpoint**:'
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 8.14 – Choosing a storage queue](img/B21076_08_14.jpg)'
  id: totrans-154
  prefs: []
  type: TYPE_IMG
- en: Figure 8.14 – Choosing a storage queue
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
- en: 'Complete the details and, when prompted, select **Create new queue** and provide
    a name for it:'
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 8.15 – Creating a new queue](img/B21076_08_15.jpg)'
  id: totrans-157
  prefs: []
  type: TYPE_IMG
- en: Figure 8.15 – Creating a new queue
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
- en: 'Under **MANAGED IDENTITY FOR DELIVERY**, select **System Assigned**:'
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 8.16 – Selecting a managed identity](img/B21076_08_16.jpg)'
  id: totrans-160
  prefs: []
  type: TYPE_IMG
- en: Figure 8.16 – Selecting a managed identity
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
- en: 'In the **Filters** tab, you can select your desired filters. I will skip this
    tab for now:'
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 8.17 – Selecting filters](img/B21076_08_17.jpg)'
  id: totrans-163
  prefs: []
  type: TYPE_IMG
- en: Figure 8.17 – Selecting filters
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
- en: 'In the **Additional Features** tab, it is wise to select the **Enable dead-lettering**
    option, and you can choose your desired **RETRY POLICIES** and **EVENT SUBSCRIPTION
    EXPIRATION** **TIME** values:'
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 8.18 – Enabling additional features](img/B21076_08_18.jpg)'
  id: totrans-166
  prefs: []
  type: TYPE_IMG
- en: Figure 8.18 – Enabling additional features
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
- en: 'In the **Delivery Properties** tab, select an appropriate storage queue message
    **time to live** (**TTL**). The default is **7** days:'
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**交付属性**选项卡中，选择合适的存储队列消息**生存时间**（**TTL**）。默认为**7**天：
- en: '![Figure 8.19 – Selecting the message time to live](img/B21076_08_19.jpg)'
  id: totrans-169
  prefs: []
  type: TYPE_IMG
  zh: '![图8.19 – 选择消息生存时间](img/B21076_08_19.jpg)'
- en: Figure 8.19 – Selecting the message time to live
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.19 – 选择消息生存时间
- en: Finally, click on **Create** and that is it. Now, every time an event is logged
    into the service, it will be saved in the storage queue.
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，点击**创建**，这样就完成了。现在，每当事件被记录到服务中时，它将被保存在存储队列中。
- en: Of course, this is not the only option we have; we can use multiple services
    as event handlers to capture events from Event Grid. Let us explore those services
    next.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，这并不是我们拥有的唯一选项；我们可以使用多个服务作为事件处理器来捕获来自Event Grid的事件。让我们接下来探索那些服务。
- en: Discovering event handlers in Azure
  id: totrans-173
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在Azure中探索事件处理器
- en: 'When working with Event Grid, there are other options that integrate seamlessly.
    In **EVENT TYPES** in the previously demonstrated **Event Subscription** form,
    the following are the options we have to choose from:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用Event Grid时，还有其他无缝集成的选项。在之前演示的**事件订阅**表单中的**事件类型**中，以下是我们可以选择的选项：
- en: '![Figure 8.20 – Endpoint options in Azure Event Grid](img/B21076_08_20.jpg)'
  id: totrans-175
  prefs: []
  type: TYPE_IMG
  zh: '![图8.20 – Azure Event Grid的端点选项](img/B21076_08_20.jpg)'
- en: Figure 8.20 – Endpoint options in Azure Event Grid
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.20 – Azure Event Grid的端点选项
- en: 'Let us explore some of those services and how they work with Event Grid:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们探索一些这些服务以及它们如何与Event Grid协同工作：
- en: '**Azure Functions**: Azure Functions is a serverless compute service. It allows
    developers to run pieces of code (functions) in response to specific events without
    worrying about the infrastructure. These functions can be written in multiple
    languages, including C#, Java, JavaScript, Python, and PowerShell. Azure Functions
    integrates easily with Event Grid as it supports an Event Grid trigger. This means
    that when an event is published, the Azure Functions function will automatically
    get triggered and process the event data.'
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Azure Functions**：Azure Functions是一种无服务器计算服务。它允许开发者在特定事件发生时运行代码片段（函数），而无需担心基础设施。这些函数可以用多种语言编写，包括C#、Java、JavaScript、Python和PowerShell。Azure
    Functions可以轻松集成Event Grid，因为它支持Event Grid触发器。这意味着当事件发布时，Azure Functions函数将自动触发并处理事件数据。'
- en: '**Azure Logic Apps**: Azure Logic Apps is a cloud service that enables users
    to design and execute workflows that integrate different services and systems.
    These workflows can be both within Azure and outside of it, connecting cloud-based
    and on-premises systems. The primary focus of Logic Apps is integration, making
    it easy to connect disparate services, orchestrate data flows, and automate processes.
    This description is very similar to the Azure Functions service; however, Logic
    Apps requires no-code scenarios and provides a visual design experience, making
    it simple to create workflows using drag-and-drop connectors. When an event occurs
    (for example, a file is added to Azure Blob Storage), Azure Event Grid can notify
    a Logic Apps app, which, in turn, can start a predefined workflow.'
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Azure Logic Apps**：Azure Logic Apps是一种云服务，它使用户能够设计和执行集成不同服务和系统的流程。这些流程可以在Azure内部和外部进行，连接基于云和本地系统。Logic
    Apps的主要重点是集成，这使得连接不同的服务、编排数据流和自动化流程变得容易。这个描述与Azure Functions服务非常相似；然而，Logic Apps需要无代码场景并提供可视化设计体验，这使得使用拖放连接器创建工作流程变得简单。当发生事件（例如，文件被添加到Azure
    Blob存储）时，Azure Event Grid可以通知Logic Apps应用程序，反过来，该应用程序可以启动预定义的工作流程。'
- en: '`POST` requests (from the Webhook) to act upon. Webhooks are often used as
    a lightweight method to integrate different systems or services on the web. Azure
    Event Grid can use Webhooks to send event data to external systems. Essentially,
    the external system subscribes to an Event Grid topic via a Webhook, and when
    events are sent to that topic, Azure Event Grid uses the Webhook to push the event
    data to the subscriber’s endpoint.'
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对Webhook的`POST`请求（用于执行操作）。Webhook通常用作在网络上集成不同系统或服务的轻量级方法。Azure Event Grid可以使用Webhook将事件数据发送到外部系统。本质上，外部系统通过Webhook订阅Event
    Grid主题，当事件发送到该主题时，Azure Event Grid使用Webhook将事件数据推送到订阅者的端点。
- en: '**Event Hubs**: Azure Event Hubs is a big data streaming platform and event
    ingestion service provided by Microsoft Azure. It can receive and process millions
    of events per second, making it ideal for telemetry and event stream analysis
    scenarios, such as real-time analytics, application monitoring, and IoT telemetry.
    Event Hubs essentially acts as a highly scalable “front door” for your event pipeline,
    allowing you to ingest vast amounts of event data and then process or store it
    downstream.'
  id: totrans-181
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事件中心**：Azure事件中心是微软Azure提供的一个大数据流平台和事件摄取服务。它每秒可以接收和处理数百万个事件，使其非常适合遥测和事件流分析场景，例如实时分析、应用程序监控和物联网遥测。事件中心本质上充当了事件管道的高度可扩展的“前门”，允许您摄取大量的事件数据，然后对其进行处理或存储。'
- en: While Azure Event Grid and Azure Event Hubs both deal with events, they serve
    different purposes. Event Grid is designed for event routing and event-driven
    architectures across different Azure services. Event Hubs, on the other hand,
    is designed for high-throughput, large-scale event streaming.
  id: totrans-182
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 虽然 Azure Event Grid 和 Azure Event Hubs 都处理事件，但它们有不同的用途。Event Grid 是为跨不同 Azure
    服务的事件路由和事件驱动架构而设计的。另一方面，事件中心是为高吞吐量、大规模事件流而设计的。
- en: Azure Event Grid can be used in conjunction with Azure Event Hubs in scenarios
    where you want to respond to specific events related to Event Hubs, such as when
    a new event stream is created.
  id: totrans-183
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在需要响应与事件中心相关的特定事件的情况下，例如创建新的事件流时，可以使用 Azure Event Grid 与 Azure Event Hubs 结合使用。
- en: These are some of the most common handlers for Event Grid. However, as we can
    build our own handlers using Webhooks or Azure Functions, we can integrate any
    business logic based on those events, including triggering pipeline endpoints
    in the case that we do not want to use external DevOps services such as Azure
    DevOps or GitHub. In essence, Azure Event Grid simplifies event-based application
    creation and allows for a more reactive and dynamic cloud application landscape.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是 Event Grid 最常见的处理程序。然而，由于我们可以使用 Webhooks 或 Azure Functions 构建自己的处理程序，因此我们可以根据这些事件集成任何业务逻辑，包括在不想使用外部
    DevOps 服务（如 Azure DevOps 或 GitHub）的情况下触发管道端点。本质上，Azure Event Grid 简化了基于事件的应用程序创建，并允许云应用程序景观更加反应灵敏和动态。
- en: Summary
  id: totrans-185
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we saw a brief explanation of MLOps and how valuable it is
    in ML projects. By using MLOps tools and best practices, we can streamline our
    ML tasks to facilitate efficiency and collaboration.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们简要介绍了MLOps及其在机器学习项目中的价值。通过使用MLOps工具和最佳实践，我们可以简化我们的机器学习任务，提高效率和协作。
- en: Although MLOps has tools and practices that range from data, models, deployments,
    and development, we focused more on how we can use IaC to handle our resources,
    and how to implement CI/CD using DevOps. Although using established code development
    tools offers the most common ways of working, when it comes to Azure, they are
    not the only ones. As Azure collects several logs and events in its services,
    we can leverage those to automate and create our own custom workflows using other
    Azure services and tools. The logs that Azure collects about its services can
    be used for more than telemetry and reporting.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管MLOps拥有从数据、模型、部署到开发的工具和实践，但我们更关注如何使用基础设施即代码（IaC）来管理我们的资源，以及如何使用DevOps实现持续集成和持续部署（CI/CD）。虽然使用成熟的代码开发工具提供了最常见的工作方式，但当涉及到Azure时，它们并非唯一的选择。由于Azure在其服务中收集了多个日志和事件，我们可以利用这些日志来自动化并使用其他Azure服务和工具创建自定义工作流程。Azure收集的有关其服务的日志可以用于遥测和报告之外的其他用途。
- en: Let us move on to the next chapter now, in which we will see how we can use
    the Azure Monitor service for logging, monitoring, and threat detection.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们继续进入下一章，我们将看到如何使用 Azure Monitor 服务进行日志记录、监控和威胁检测。
