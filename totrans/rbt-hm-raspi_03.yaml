- en: '3'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Designing a Robot Chassis in FreeCAD
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We’ve been talking about building a robot, but how do you make a **chassis**?
    How would you design one simple enough for a first build? Making a custom chassis
    takes more work than buying ready-made ones, but is a skill worth learning.
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, you will see how to use FreeCAD to make 3D designs for a chassis,
    its parts, and its frame. We’ll consider the material we’ll use and what adjustments
    we’ll need to make to it.
  prefs: []
  type: TYPE_NORMAL
- en: You will then take this **CAD** design into the real world, making printable
    drawings that we’ll use to cut our robot parts in later chapters. You’ll be learning
    and using design skills for making robot designs.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we’re going to cover the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Introducing FreeCAD
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Making robot chassis sketches in FreeCAD
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Designing the caster placement
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Modeling chassis parts from sketches
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Making FreeCAD technical drawings
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: FreeCAD is free software. This chapter does not require any paid software, making
    it useful to a wide audience.
  prefs: []
  type: TYPE_NORMAL
- en: 'You will require the following:'
  prefs: []
  type: TYPE_NORMAL
- en: FreeCAD software download version 0.20 or later from [freecadweb.org](http://freecadweb.org).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Your cardboard test fit.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The FreeCAD design examples for this chapter can be found on GitHub at [https://github.com/PacktPublishing/Robotics-at-Home-with-Raspberry-Pi-Pico/tree/main/ch-03](https://github.com/PacktPublishing/Robotics-at-Home-with-Raspberry-Pi-Pico/tree/main/ch-03).
  prefs: []
  type: TYPE_NORMAL
- en: Introducing FreeCAD
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: FreeCAD is a free and open source **3D CAD design** tool available on most home
    computer platforms. In this section, we’ll introduce you to the software and configure
    it for our needs.
  prefs: []
  type: TYPE_NORMAL
- en: If you don’t yet have it, please download FreeCAD and install it before continuing.
    I recommend using FreeCAD in fullscreen mode if you can to accommodate all the
    toolbars and panels.
  prefs: []
  type: TYPE_NORMAL
- en: The FreeCAD screen
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We will start with concepts you’ll need to use FreeCAD.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s start with an overview of the screen you’ll see when you launch FreeCAD:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.1 – FreeCAD start window ](img/Figure_3.01_B18001.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.1 – FreeCAD start window
  prefs: []
  type: TYPE_NORMAL
- en: 'The preceding screenshot shows the FreeCAD start screen. The important areas
    are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: The toolbar is a ribbon of buttons that changes with the workbench.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The **Combo** view has two modes: **Model**, which shows a model tree, and
    **Tasks**, which shows tasks relative to a selection.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The **Properties** view lets you view and edit properties. It’s only visible
    in the **Model** view.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The **Main** view shows the sketch, part, or assembly you are working on.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The **Report** view shows output messages from the system.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The **Python** console shows Python code equivalent to your actions.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You’ll use these views in making parts. In the next section, we will look at
    workbenches, which you’ll need in order to use FreeCAD effectively.
  prefs: []
  type: TYPE_NORMAL
- en: Selecting workbenches
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: FreeCAD has many object types—for example, parts, sketches, and drawings. A
    **workbench** has operations for manipulating and creating different object types.
    When you change the workbench, the toolbar and views change.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s take a closer look at **Workbench Selector** in the toolbar:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.2 – Workbench Selector ](img/Figure_3.02_B18001.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.2 – Workbench Selector
  prefs: []
  type: TYPE_NORMAL
- en: '*Figure 3**.2* shows the **Workbench Selector** parts. On the left is how this
    selector looks in the toolbar. Clicking this will show an expanded menu of options,
    shown in part on the right. Highlighted here are **Part Design**, **Sketcher**,
    and **TechDraw**, which are workbenches we will use in this chapter. Here is a
    quick overview of their functions:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Sketcher** is where you input geometry in 2D to create parts from.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Part Design** is used to design 3D parts based on sketches.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**TechDraw** makes output drawings for cutting/drilling.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: Directly below the **Part Design** workbench is a **Part** workbench. They look
    similar. Avoid accidentally choosing **Part** instead of **Part Design**.
  prefs: []
  type: TYPE_NORMAL
- en: When using FreeCAD, be aware of the workbench you are using. The toolbar and
    actions you can perform in a view change based on your workbench selection.
  prefs: []
  type: TYPE_NORMAL
- en: You’ll see more workbenches as you use them. We’ll configure FreeCAD first.
  prefs: []
  type: TYPE_NORMAL
- en: FreeCAD settings
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We should make FreeCAD settings consistent before starting.
  prefs: []
  type: TYPE_NORMAL
- en: Loading workbenches
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: FreeCAD does not start with all workbenches loaded. Therefore, we should ensure
    that the workbenches we will use are loaded before we continue.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can access the **Preferences** panel via **Edit**, then **Preferences**—or
    **FreeCAD**—and then **Preferences** on macOS. You should see something like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.3 – Preferences panels: loading workbenches ](img/Figure_3.03_B18001.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 3.3 – Preferences panels: loading workbenches'
  prefs: []
  type: TYPE_NORMAL
- en: '*Figure 3**.3* shows the **Preferences** panel, with the **Workbenches** panel
    selected. You can load workbenches with these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: In the **Preferences** panel, click **Workbenches**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click the **Load now** button alongside **Part Design**, **Sketcher**, and **TechDraw**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now, check the **Autoload** checkbox for each of these three sketches.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Press the **Apply** button. Three additional workbenches should appear.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The other preferences will make things more consistent.
  prefs: []
  type: TYPE_NORMAL
- en: Display preferences
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Display preferences ensure that your view and navigation work the same way
    as in this chapter. Please look at the following **Preferences** panels:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.4 – Preferences panels ](img/Figure_3.04_B18001.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.4 – Preferences panels
  prefs: []
  type: TYPE_NORMAL
- en: 'The left of *Figure 3**.4* shows the **Display** preferences. Perform the following
    steps:'
  prefs: []
  type: TYPE_NORMAL
- en: In the **Preferences** panel, click **Display** and then the **Navigation**
    tab.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Ensure that the navigation cube is enabled and that its **Corner** is **Top
    right**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Set the **3D Navigation** system to **Gesture**. Gesture navigation is great
    for mice, trackballs, and touchpads.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We also need to prepare **Sketcher** preferences. These alter how the 2D drawing
    mode operates. Select the **Sketcher** pane under **Preferences** to show the
    panel on the right of *Figure 3**.4*.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Ensure **Auto remove redundants** is enabled. This will remove redundant constraints
    and prevent conflicts later. We will explain constraints later in the chapter.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click **OK** to accept these settings.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: With the settings in place, we can start creating our sketches. In the next
    section, we’ll create a document and start sketching in it.
  prefs: []
  type: TYPE_NORMAL
- en: Making robot chassis sketches in FreeCAD
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We will model our robot, revisit the test fit as sketches, and then model it
    in 3D to guide us in cutting the chassis and attaching parts. We’ll model parts
    as boxes with outside dimensions and screw holes where needed. That way, we can
    see where things will go without adding detail. We are aiming for this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.5 – A 3D CAD bounding box fit for our robot ](img/Figure_3.05_B18001.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.5 – A 3D CAD bounding box fit for our robot
  prefs: []
  type: TYPE_NORMAL
- en: '*Figure 3**.5* shows a model of a robot in boxes. Parts are modeled by drawing
    rectangles, and then pulling them into 3D. We can then use this as a guide to
    cut the chassis plate and then assemble our chassis.'
  prefs: []
  type: TYPE_NORMAL
- en: We’ll start by sketching our robot, and in later sections, we will develop it
    into 3D parts.
  prefs: []
  type: TYPE_NORMAL
- en: Preparing the document
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Everything you make in FreeCAD starts with making documents. The following
    screenshot shows how:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.6 – Creating a document ](img/Figure_3.06_B18001.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.6 – Creating a document
  prefs: []
  type: TYPE_NORMAL
- en: '*Figure 3**.6* shows annotated screenshots of FreeCAD. Follow these steps to
    get started:'
  prefs: []
  type: TYPE_NORMAL
- en: Select **Part Design** from the **Workbench** menu to enter this workbench.
    The toolbar will look like the top of *Figure 3**.6*.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Create a new document by clicking the toolbar icon. You’ll see an empty 3D view,
    shown in the lower screenshot in *Figure 3**.6*.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A **Part Design** 3D solid object is a **body**. Click **Create body** in the
    toolbar.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Save this document as `Robot`—the name changes in the model view.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'We will have a few bodies, so it’s good to name them. First, ensure you have
    the `Body`; we should rename it something more meaningful. Follow these steps
    to rename it:'
  prefs: []
  type: TYPE_NORMAL
- en: Select `Body` by clicking it.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Press *Enter* to make its name editable.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Type a new name, `SketchMain`. Press *Enter* to accept it, and the body name
    should update.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Use the **Save** button or press *Ctrl*/*Cmd* + *S* to save this document.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We have an empty body, but we need to create some shapes in it. We’ll do this
    by making main sketches for them and pulling them into 3D. Let’s see how to sketch.
  prefs: []
  type: TYPE_NORMAL
- en: Sketching the chassis outline
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Sketching is a critical part of a FreeCAD workflow. We’ll start with the main
    sketches of chassis parts and use them to model in 3D. Click the **Create Sketch**
    toolbar icon, as shown in *Figure 3**.6*.
  prefs: []
  type: TYPE_NORMAL
- en: 'The document view now has a navigation cube in the top right—it shows which
    side of the 3D system we are looking at. The following diagram shows how to navigate
    here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.7 – 3D gesture navigation ](img/Figure_3.07_B18001.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.7 – 3D gesture navigation
  prefs: []
  type: TYPE_NORMAL
- en: '*Figure 3**.7* shows 3D gesture navigation. Hold the left mouse button and
    drag to orbit/rotate the camera around in 3D. Scroll the wheel to zoom in and
    out of the model. Use the right mouse button to pan, moving the camera up/down
    and left/right. You can click the navigation cube faces to see different views
    of your model.'
  prefs: []
  type: TYPE_NORMAL
- en: 'FreeCAD is waiting for you to choose a sketch plane, as shown in the following
    screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.8 – Choosing a sketch plane ](img/Figure_3.08_B18001.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.8 – Choosing a sketch plane
  prefs: []
  type: TYPE_NORMAL
- en: '*Figure 3**.8* shows a dialog for choosing a plane, a flat surface to sketch
    on. FreeCAD requires you to choose a surface for sketching. You have two ways
    to select it:'
  prefs: []
  type: TYPE_NORMAL
- en: The **Tasks** view on the left shows a list of base plane choices.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You can choose flat surfaces or planes in the 3D view.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For this sketch, choose `XY_Plane`. This is the horizontal plane.
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: If you find it hard to select things, note that as you hover the mouse near
    FreeCAD objects, they become highlighted, and then you click to select them. This
    hover/click operation is vital to making selections.
  prefs: []
  type: TYPE_NORMAL
- en: 'Click **OK** to enter the **Sketcher** workbench, as shown in the following
    screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.9 – The Sketcher workbench ](img/Figure_3.09_B18001.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.9 – The Sketcher workbench
  prefs: []
  type: TYPE_NORMAL
- en: '*Figure 3**.9* shows **Sketcher** screen elements. At the top are toolbars.
    We’ll mostly use two toolbars—**Sketcher Geometry** to create shapes and lines,
    and **Sketcher Constraints** to place geometry. The default arrangement of toolbars
    puts items offscreen, shown in the top right. However, we can drag toolbars to
    rearrange them to see all the toolbars, as per the second toolbar shot.'
  prefs: []
  type: TYPE_NORMAL
- en: The second toolbar shot has **Rectangle**, **Symmetry**, and **Dimension** tools
    highlighted. We’ll be using these in the following sections.
  prefs: []
  type: TYPE_NORMAL
- en: Below this, on the left, the **Tasks** panel lists constraints and sketch components.
    On the right is the main sketching view. The navigation cube shows we are looking
    at a view of **Top**. The *x* and *y* axes divide the screen with a cross.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s use these tools to draw our chassis. Follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Click on the **Rectangle** tool in the geometry toolbar, highlighted in *Figure
    3**.9*.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Create a rectangle crossing the center lines—click once for a corner and again
    to place the opposite corner. It should look like the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 3.10 – Sketched rectangle ](img/Figure_3.10_B18001.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.10 – Sketched rectangle
  prefs: []
  type: TYPE_NORMAL
- en: The right of *Figure 3**.10* shows the rectangle. The sketch taskbar on the
    left has the **Constraints** and **Elements** sections. Elements are drawable
    items such as lines.
  prefs: []
  type: TYPE_NORMAL
- en: 'Sketcher uses **constraints** to position geometry. Here, there are eight constraints:'
  prefs: []
  type: TYPE_NORMAL
- en: Four have crosses with a dot in the middle; these constraints make the rectangle
    line ends coincident, so they join.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The other four constrain two lines horizontally and two vertically.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let’s add more constraints to position and size this geometry.
  prefs: []
  type: TYPE_NORMAL
- en: 'In [*Chapter 1*](B18001_01.xhtml#_idTextAnchor015), *Planning a Robot with
    Raspberry Pi Pico*, we suggested 150 mm x 200 mm in our test fit. Look at the
    next screenshots to see how to size the rectangle:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.11 – Adding dimensions ](img/Figure_3.11_B18001.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.11 – Adding dimensions
  prefs: []
  type: TYPE_NORMAL
- en: '*Figure 3**.11* shows the addition of dimension constraints to the rectangle.
    Follow these steps to add constraints:'
  prefs: []
  type: TYPE_NORMAL
- en: Right-click to drop the **Rectangle** tool. Right-clicking drops your current
    tool.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Hover the mouse over the top line so that it is yellow, and then click to turn
    it green.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Use the `150 mm`, and press *Enter*.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If things don’t fit on the screen, use the **Fit content to** **screen** button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Dimension the right line to 200 mm.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The small line icons indicate vertical or horizontal constraints. FreeCAD creates
    them automatically when you add rectangles.
  prefs: []
  type: TYPE_NORMAL
- en: The rectangle has dimensions but is not fully constrained, and it can move around,
    so we need to anchor it.
  prefs: []
  type: TYPE_NORMAL
- en: 'The next sequence shows how to fix it to the origin:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.12 – Adding symmetry ](img/Figure_3.12_B18001.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.12 – Adding symmetry
  prefs: []
  type: TYPE_NORMAL
- en: 'The sequence in *Figure 3**.12* shows how to add symmetry to your rectangle.
    The previous screenshot shows the **Symmetry** button—the left side shows selecting
    three points, while the right side shows a fully constrained sketch with symmetry.
    Follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Select the top-left point, bottom-right point, and middle point where the axes
    cross.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click **Symmetry** to add a symmetry constraint.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: When you do this, the sketch changes color to show the sketch is fully constrained.
    The points are locked relative to the origin.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The **Tasks** panel has also changed to show the sketch state. Look at this
    screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.13 – Tasks panel for a fully constrained sketch ](img/Figure_3.13_B18001.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.13 – Tasks panel for a fully constrained sketch
  prefs: []
  type: TYPE_NORMAL
- en: The `ChassisOutline`.
  prefs: []
  type: TYPE_NORMAL
- en: This sketch is dimensioned and constrained. However, we will create a further
    sketch as the main sketch for the upper deck parts.
  prefs: []
  type: TYPE_NORMAL
- en: Creating the upper parts main sketch
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We will use a further sketch named `UpperParts` to make parts on the top of
    our chassis. It will follow the test fit but with screw holes added. It will need
    to reference geometry in the `ChassisOutline` sketch as they are related.
  prefs: []
  type: TYPE_NORMAL
- en: 'Create a new sketch on the same *XY* plane. We will base this sketch on the
    previous one by using external geometry. Look at the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.14 – Importing external geometry ](img/Figure_3.14_B18001.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.14 – Importing external geometry
  prefs: []
  type: TYPE_NORMAL
- en: '*Figure 3**.14* shows the **External geometry** tool, which you need to click,
    and then select all the rectangle sides to see red lines created over them. This
    will link to geometry from another sketch or object.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, we will create sketch elements for the battery box and breadboard:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.15 – Battery box and breadboard sketch elements ](img/Figure_3.15_B18001.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.15 – Battery box and breadboard sketch elements
  prefs: []
  type: TYPE_NORMAL
- en: 'The middle screenshot shows the chassis with battery box and breadboard sketch
    elements on it, with a close-up screenshot on the left showing the **Onto object**
    **constraint** icon. The top-right space shows dimension tools. Proceed as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Draw the battery box outline. By starting a rectangle top left touching the
    chassis rear line, FreeCAD adds an automatic **Onto object** constraint between
    that top-left point and the line. This makes the point stay in contact with the
    line. Use the test fit to set the dimensions.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Make the rectangle’s bottom points symmetrical around the vertical axis line.
    The sketch should go bright green to show that it’s fully constrained.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Next, create the breadboard. This is another rectangle, with the top two points
    symmetrical on the vertical axis. Use the dimensions from the test fit.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We want a gap between the breadboard and the batteries. Select the battery box
    at its bottom-left point and the breadboard at its top-left point. Make a 10 mm
    vertical dimension between them. The sketch should again be fully constrained.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: When adding symmetry, FreeCAD should remove horizontal constraints for lines.
    This removes **redundant constraints**, which can conflict if constraints contradict
    others. Ensure **Auto remove redundants** is enabled to prevent this!
  prefs: []
  type: TYPE_NORMAL
- en: Troubleshooting sketching
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'If you have trouble with the previous sketches, try these steps to solve some
    common issues:'
  prefs: []
  type: TYPE_NORMAL
- en: '**I see conflicting constraint errors**: Ensure you have followed the preceding
    preference steps. **Auto remove redundants** must be enabled.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**I can’t make symmetry work**: You must select two points (dots), and then
    a final center dot or mid-line. Selection order is important for symmetry.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**My dimensions are cluttered**: You can click on any dimension and drag it
    to move it out of the way.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Everything is too close to see**: Use your mouse wheel to zoom in, and then
    zoom out when done.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**I am still drawing a line/circle**: If you have a tool selected, right-click
    anywhere to drop the tool.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**I have items selected I don’t want for constraints**: You can click on an
    item a second time to deselect it or click in an empty space to clear the selection.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: With these parts sketched, we move on to more complicated motor parts.
  prefs: []
  type: TYPE_NORMAL
- en: Sketching the motors
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The other elements on top of the chassis plate are the motors. The motors are
    in our test fit as boxes, but in truth, they are a complex assembly. We are using
    N20 motors with built-in encoders. They need brackets to attach them.
  prefs: []
  type: TYPE_NORMAL
- en: 'N20 motor brackets come in two kinds—with mount holes closer to the motor or
    with them further apart. Since the former type is more common, we’ll use these.
    The next diagram shows a dimensioned drawing of these brackets with motors:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.16 – FreeCAD drawing of N20 motor with encoder and bracket ](img/Figure_3.16_B18001.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.16 – FreeCAD drawing of N20 motor with encoder and bracket
  prefs: []
  type: TYPE_NORMAL
- en: '*Figure 3**.16* is a dimensioned N20 motor sketch with an encoder and bracket.
    We’ll align the bracket front with the gearbox middle divider so that the motor
    won’t slide.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Using this drawing, we can create rectangle outlines for the two motors, as
    shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.17 – Motor outlines ](img/Figure_3.17_B18001.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.17 – Motor outlines
  prefs: []
  type: TYPE_NORMAL
- en: '*Figure 3**.17* shows the symbol for **Equal constraint**, which sets line
    lengths or circle diameters equal. The screenshot shows the motor outline rectangles
    in place.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Draw a rectangle on the left, ensuring that we constrain the top-left point
    onto the left side of the chassis. Make a similar rectangle on the right.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Make the top inner points of the motors symmetrical about the vertical axis
    line.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select inner vertical lines on both motors, and then use the equal constraint.
    A little `=` sign shows next to the items, along with reference numbers. Items
    with the same number are equal.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Dimension the left-hand motor using *Figure 3**.16* for reference.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the bottom-right point of the motor and the bottom left of the breadboard.
    Create a horizontal constraint between them to line them up.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: All our rectangles are green, which shows this is a fully constrained sketch.
    We have sketched out the robot’s top, following our test fit.
  prefs: []
  type: TYPE_NORMAL
- en: We are using more of the sketching toolbox. Now is a good time to get familiar
    with the tools on offer and their shortcuts. These shortcuts change, so the best
    way to get to know them is to hover over the buttons to get a tooltip. **Sketcher**
    becomes much faster when you start using its keyboard shortcuts.
  prefs: []
  type: TYPE_NORMAL
- en: 'A constraint reference will help; see the next table:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Table 3.2 – Sketcher constraints in FreeCAD ](img/Table_3.2_B18001.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Table 3.2 – Sketcher constraints in FreeCAD
  prefs: []
  type: TYPE_NORMAL
- en: The table shows references between symbols, names, and descriptions for each
    constraint type. You will see these symbols in the toolbar, main view, and constraints
    list on the left of the screen.
  prefs: []
  type: TYPE_NORMAL
- en: These will help create motor holes—our next section.
  prefs: []
  type: TYPE_NORMAL
- en: Sketching the motor holes
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We represent holes in sketches with circles; however, the real trick is using
    constraints to place them.
  prefs: []
  type: TYPE_NORMAL
- en: We can start with the motor attachment holes. The breadboard is self-adhesive
    and does not use bolts, and we will use hook-and-loop dots to make batteries easy
    to change.
  prefs: []
  type: TYPE_NORMAL
- en: 'Each motor has two holes. We’ll make them symmetrical between the sides. Refer
    to the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.18 – Motor holes sketched ](img/Figure_3.18_B18001.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.18 – Motor holes sketched
  prefs: []
  type: TYPE_NORMAL
- en: '*Figure 3**.18* is an annotated sketch of motor holes, along with the tools
    used. The next steps show how:'
  prefs: []
  type: TYPE_NORMAL
- en: First, add two circles on each side in the motor rectangles.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Next, add a construction line on the left going across the motor block. Select
    the line and use **Toggle construction** so that it turns blue—constructions hold
    the geometry in place but remain internal to a sketch. Make this vertically symmetrical
    with respect to the motor.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Make left-circle middles symmetrical across this line, and dimension them to
    18 mm apart.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Use a horizontal dimension to put them 12 mm in from the outside edge.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Use the **Constrain diameter** tool to add a 2 mm diameter and an equal constraint
    for all 4 holes.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Finally, make the middle of each circle on the right symmetrical to its left-hand
    counterpart using the vertical axis.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The full sketch should look like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.19 – The full chassis top sketch ](img/Figure_3.19_B18001.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.19 – The full chassis top sketch
  prefs: []
  type: TYPE_NORMAL
- en: '*Figure 3**.19* shows the whole sketch, with all components drawn on top of
    the chassis and their holes drawn and placed. Close this sketch.'
  prefs: []
  type: TYPE_NORMAL
- en: 'The upper parts sketch should be 3 mm above the `ChassisOutline` sketch to
    account for its thickness. The following screenshot shows how:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.20 – Positioning upper parts sketch ](img/Figure_3.20_B18001.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.20 – Positioning upper parts sketch
  prefs: []
  type: TYPE_NORMAL
- en: '*Figure 3**.20* shows how the sketch should be positioned—first, the **Data**
    properties view, and then a 3D view with the sketch hovering above the chassis.'
  prefs: []
  type: TYPE_NORMAL
- en: 'To make this, select the `UpperParts` sketch and do the following:'
  prefs: []
  type: TYPE_NORMAL
- en: In the **Data** tab properties tree, expand **Placement** and then **Position**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Set `z` here to `3` to place the sketch.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We now have modeled all the parts and their holes for the chassis top. There
    is also a caster for the chassis bottom. In the next section, we model this.
  prefs: []
  type: TYPE_NORMAL
- en: Designing the caster placement
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The motors and wheels are near the robot’s front. The caster balances the back,
    making it a three-point design with two wheels to drive. Batteries are heavy,
    so putting the caster under and behind them will help balance the robot. We can
    use the battery box to guide the placement of the caster.
  prefs: []
  type: TYPE_NORMAL
- en: We need to create a `LowerParts` sketch to place the caster and bolt holes.
    I’m using a Pololu ¾ inch caster and will use its datasheet/specs as a guide.
    If you have a different caster, please check its specifications. Pimoroni has
    a dimensional drawing of this part.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following screenshot shows the sketch we will make:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.21 – The caster sketch ](img/Figure_3.21_B18001.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.21 – The caster sketch
  prefs: []
  type: TYPE_NORMAL
- en: 'The annotated sketch shows three new circles for the caster’s holes and outline.
    To sketch this, follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Add the rear line of the chassis as external geometry.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Draw a circle for the caster outline, with its middle on the vertical axis.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Using my caster datasheet, I set the caster outline diameter to 23 mm.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Add a 20 mm vertical dimension between the circle’s middle and rear lines.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: For the holes, draw a circle along this line and another circle opposite.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Make the holes equal and add symmetry across the caster center point.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Add a horizontal constraint between the holes.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The caster information says its holes are 15.5 mm apart, and being a `#2` thread,
    we can use 2.5 mm for the diameter. Use these to create a dimension between the
    hole middles and to create a diameter dimension.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We now have the upper and lower deck parts sketched. With that done and sketching
    skills exercised, it’s time to turn these into 3D objects.
  prefs: []
  type: TYPE_NORMAL
- en: Modeling chassis parts from sketches
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We are going to start making 3D parts. The first part is the chassis plate itself,
    which requires two steps, and then we build other parts around it.
  prefs: []
  type: TYPE_NORMAL
- en: Modeling the chassis plate
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The following screenshot shows how we will make a 3D chassis plate:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.22 – Making the 3D chassis plate ](img/Figure_3.22_B18001.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.22 – Making the 3D chassis plate
  prefs: []
  type: TYPE_NORMAL
- en: 'The top part shows the **Pad** tool, the bottom left shows the **Pad** **Tasks**
    panel, and the right part shows the 3D view with the plate in it. We’ve put our
    sketches in a main sketch, so we’ll need to import these. For importing geometry
    from sketches, FreeCAD has **shape binder** objects. Ensure you’re in the **Part
    Design** workbench, and then follow these steps to make it:'
  prefs: []
  type: TYPE_NORMAL
- en: Create a `ChassisPlate` body and double-click to make it active.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click **Shape binder**, and then the task view shows the names of selected geometry.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the four outer lines of the `ChassisOutline` sketch. Unlike sketching,
    you need to hold *Ctrl* or *Cmd* to do this.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Then, click **Shape binder**, and then the task view shows the names of selected
    geometry. Click **OK** to accept this.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the `ShapeBinder` object it created, and click on the **Pad** tool. You’ll
    see a **Tasks** panel with parameters on the left, and a preview on the right.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the **Tasks** panel, set the length to 3 mm to match the styrene sheet. This
    will update the preview.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now, press **OK** to finish making the part.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'This job is only partial, as we need holes too. Follow these instructions to
    create the upper part holes:'
  prefs: []
  type: TYPE_NORMAL
- en: It can help to select to hide the **Pad** we just made, using space to toggle.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the four motor holes—hover over and highlight the circles, then click
    to select them.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: In workbenches other than **Sketch**, to select multiple items, click the first
    item, then hold *Ctrl* (*Cmd* on Macs) and click to add additional items. If you
    select an item you don’t want, while keeping *Cmd*/*Ctrl* held, click that item
    again to deselect it.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following screenshot shows how this shape selection should look:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.23 – Making a shape binder ](img/Figure_3.23_B18001.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.23 – Making a shape binder
  prefs: []
  type: TYPE_NORMAL
- en: The left of *Figure 3**.23* shows holes from our sketch, all selected. The right
    shows the toolbar **Shape binder** icon, the **Tasks** panel for a shape binder,
    and the **Model** tree with a shape binder created.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can now use this shape binder to make holes in the chassis. See the following
    screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.24 – Holes cut into the chassis ](img/Figure_3.24_B18001.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.24 – Holes cut into the chassis
  prefs: []
  type: TYPE_NORMAL
- en: '*Figure 3**.24* shows how we cut holes using the **Pocket** tool in the top
    left. Below is the **Tasks** panel, with the cutting options. The right-hand screenshot
    shows the 3D output. Follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Ensure you have the shape binder selected and click the **Pocket** tool.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the dialog, select **Through all** and then click **OK**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We’ve made holes to attach upper deck parts. Repeat this process for the lower
    part holes, creating a shape binder around the two caster holes and pocketing
    them through all. Next, we model the parts in 3D.
  prefs: []
  type: TYPE_NORMAL
- en: Modeling the other parts
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We make the other parts as we made the holes, using shape binders and padding
    them into a 3D body in the document.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following screenshot shows how to make the battery box:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.25 – Making the battery box in 3D ](img/Figure_3.25_B18001.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.25 – Making the battery box in 3D
  prefs: []
  type: TYPE_NORMAL
- en: '*Figure 3**.25* shows how we make the battery box, with edges selected in the
    top left, while the top right shows the tools used, the bottom left shows the
    battery box in 3D, and the bottom right shows the **Tasks** panel for the **Pad**
    operation. Follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Create a body named `BatteryBox`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the outside lines of this box, as shown in the top-left panel. You may
    need to hide the `ChassisPlate` body to select all the edges.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click **Shape Binder** to create a shape binder in the new body.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select that shape binder, click the `20` `mm`, reversed.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'You should now see the preceding 3D shape. We can make other parts—motors and
    a breadboard—in the same way. Please see the following screenshot for the whole
    upper deck outline:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.26 – The upper deck modeled in 3D ](img/Figure_3.26_B18001.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.26 – The upper deck modeled in 3D
  prefs: []
  type: TYPE_NORMAL
- en: '*Figure 3**.26* shows the **Model** tree to the left, with bodies for our components.
    The right shows a 3D view with all parts modeled. Now is a good time to save!'
  prefs: []
  type: TYPE_NORMAL
- en: The chassis plate part is now ready, including holes to attach other parts to
    it. In the next section, let’s troubleshoot any issues you may have had.
  prefs: []
  type: TYPE_NORMAL
- en: Troubleshooting the model
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'This list should help get you past common FreeCAD pitfalls with the exercises
    so far:'
  prefs: []
  type: TYPE_NORMAL
- en: '**I can’t find the right buttons in the toolbar**: Remember workbenches—when
    you have **Sketch** enabled, you will have different toolbars than in **Part Design**.
    So, ensure you have **Part Design** selected! Also, watch for offscreen buttons.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**I clicked and missed the automatic constraint**: You can add constraints
    by selecting relevant items and the correct constraint tool.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**I can’t select geometry**: Use the **space** key or **Hide Item** menu to
    hide/unhide geometry until the item you want to select is clear.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Some holes won’t cut**: Ensure holes aren’t construction geometry. Construction
    geometry, colored blue in the sketch, isn’t used in **Cut**/**Pad** operations.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Things aren’t quite lining up**: If items are white, they aren’t constrained.
    Use dimensions and other constraints to tell FreeCAD how they should align.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: Sketches are best when constrained. Dragging things to *look like* they line
    up can lead to problems. Try to use constraints. If they are parallel, use the
    parallel constraint. If they are equal, use the equal constraint. If they are
    10 mm apart, use a dimension.
  prefs: []
  type: TYPE_NORMAL
- en: Hopefully, this covers the issues you’ve had, and you have a 3D chassis with
    parts and holes to bolt parts to. However, we are missing the caster. In the next
    section, we will make it 3D using its sketch.
  prefs: []
  type: TYPE_NORMAL
- en: Modeling the caster in 3D
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The top left of the following screenshot shows pocket operation parameters
    for creating the caster:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.27 – Making the caster holes ](img/Figure_3.27_B18001.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.27 – Making the caster holes
  prefs: []
  type: TYPE_NORMAL
- en: The preceding screenshot shows elements for making the caster holes. The top
    left shows the **Tasks** panel – where the **Reversed** and **Through all** fields
    are checked for the hole. The top right shows the **Model** tree with other sketches
    hidden, a shape binder, and a pocket at the end. The bottom panel shows caster
    holes cut into the chassis.
  prefs: []
  type: TYPE_NORMAL
- en: 'These tips will assist in making this object:'
  prefs: []
  type: TYPE_NORMAL
- en: Look at the bottom of the model.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hide the last `ChassisPlate` so that you can see the sketch circles.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Select the two circles, make a shape binder, and then unhide the chassis again.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Select this shape binder for the holes and make a **pocket**.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Set the pocket to **Through all**. You may need to check **Reversed** to make
    the cut. **Through all** only applies to geometry in the same body, and other
    bodies will require further pocket operations.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'We can use our sketches to make a 3D caster body, using the same process as
    before. Look at the following screenshot to see how we achieve this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.28 – Making a 3D caster ](img/Figure_3.28_B18001.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.28 – Making a 3D caster
  prefs: []
  type: TYPE_NORMAL
- en: 'The preceding screenshot shows the steps in making the caster. The first panel
    shows the selection for the `ShapeBinder` object; the top right shows the caster
    padded. To add the caster, perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Hide the other solid parts. Make a `Caster` body and bring in detail from the
    `LowerParts` sketch into a shape binder.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Pad this to 23 mm, reversed. Unhide the other bodies.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We have now placed the caster and holes for its bolts. With the caster attached,
    we have made a rough 3D model of our robot. It’s missing wheels and detail, but
    enough to show that this will work. We will use this design to make parts, which
    need a drawing—our next section will introduce these.
  prefs: []
  type: TYPE_NORMAL
- en: Making FreeCAD technical drawings
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Our design shows things will work, but we need a way to cut and drill styrene
    plates and rods. FreeCAD can make a **technical drawing** to help us. You’ve seen
    the *motor assembly* and *chassis base* drawings. Now, you will see how to make
    your own.
  prefs: []
  type: TYPE_NORMAL
- en: Setting up the page
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'We’ll start our drawing by setting up the page in the **TechDraw** workbench.
    The following screenshot shows how:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.29 – Preparing a drawing page ](img/Figure_3.29_B18001.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.29 – Preparing a drawing page
  prefs: []
  type: TYPE_NORMAL
- en: '*Figure 3**.28* shows how we create a page for our drawing in **TechDraw**.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Choose the **TechDraw** workbench in the workbench selector, as the top of
    *Figure 3**.28* shows. Then, proceed as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: In the toolbar, click the **Create a drawing from** **template** icon.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: This shows drawing templates in a file selector. Choose `A4_Portrait_blank`
    and open this.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: This will add a new drawing to the `CuttingDimensions`, as shown in *Figure*
    *3**.28*, left.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We now have a blank page ready for you to put your parts on. We will project
    parts onto this sheet—choosing parts and letting **TechDraw** draw them.
  prefs: []
  type: TYPE_NORMAL
- en: Adding parts to the drawing
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'We can start by adding the chassis plate part to our drawing. Let’s see how
    this works in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.30 – Adding the chassis plate to the drawing ](img/Figure_3.30_B18001.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.30 – Adding the chassis plate to the drawing
  prefs: []
  type: TYPE_NORMAL
- en: 'The preceding screenshot shows how we’ll add the chassis plate part. The following
    steps describe this process:'
  prefs: []
  type: TYPE_NORMAL
- en: First, from the `ChassisPlate` as shown in the top left in *Figure 3**.29*.
    This will take you to the 3D view.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the 3D view, use the **Bottom view** toolbar button or navigation cube to
    look at the bottom view of the model.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Use the tabs below the view (middle right) to go back to `CuttingDimensions`.
    `ChassisPlate` should remain selected in the **Model** view.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on `ChassisPlate` appear in the drawing.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Projection frames let you drag them around in the drawing. Click and drag this
    frame to the right so that we can put other parts on the left.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click **OK** in the **Tasks** panel to finish inserting the projection group.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You now have the chassis plate part; however, the frames are untidy, and it
    would be good to add hole centers and dimensions.
  prefs: []
  type: TYPE_NORMAL
- en: Preparing the drawing for print
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Some finishing touches are needed to make this drawing ready to use as a part-cutting
    guide. The following diagram shows how:'
  prefs: []
  type: TYPE_NORMAL
- en: '![ Figure 3.31 – Preparing our drawing for print ](img/Figure_3.31_B18001.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.31 – Preparing our drawing for print
  prefs: []
  type: TYPE_NORMAL
- en: '*Figure 3**.30* has icons we’ll use for this process along the top. These should
    be in the toolbar, but you may need to move toolbars to see them all. The lower
    left shows our part without centerlines, and the right shows the centerline added,
    followed by the diameter added. Perform these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: First, we can turn off frames by clicking **Toggle View Frames** in the toolbar.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: So, we can drill holes, but we need centerlines. Start by selecting a circle.
    Then, use the **Draw circle centerlines** tool to add centerlines.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We also want to add dimensions so that we know how much to drill out. Click
    on a circle, and then click **Insert** **diameter dimension**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Repeat the centerlines for all holes. Dimension the holes, but where they are
    symmetrical, you don’t need to dimension their counterpart.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'You should now have the finished drawing. You can print this off onto A4\.
    Be sure not to scale it when printing. The printed drawing should look like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![ Figure 3.32 – The printable drawing ](img/Figure_3.32_B18001.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.32 – The printable drawing
  prefs: []
  type: TYPE_NORMAL
- en: This printable drawing looks good. You will be able to take that printout and
    use it to fabricate parts, and you have learned how to project parts with **TechDraw**.
    We’ll make those parts in the next chapter!
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You’ve had a brief FreeCAD tour and designed objects in it, from sketches to
    3D objects with pads and pockets. You’ve seen shape binders to reuse geometry
    and used constraints in sketches to specify geometric relationships. You’ve used
    these tools to build a 3D robot design from multiple parts.
  prefs: []
  type: TYPE_NORMAL
- en: Finally, you saw how to make output drawings based on the 3D design, which you
    can take into a workshop with you.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will take these designs into the workshop, make parts
    from them, and then assemble them into a custom robot.
  prefs: []
  type: TYPE_NORMAL
- en: Exercises
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can follow these exercises to improve and practice your FreeCAD skills and
    improve the robot model.
  prefs: []
  type: TYPE_NORMAL
- en: The next screenshot shows a suggestion to add a little embellishment to this
    robot. This exercise is highly recommended.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.33 – Detail on the front of the chassis ](img/Figure_3.33_B18001.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.33 – Detail on the front of the chassis
  prefs: []
  type: TYPE_NORMAL
- en: The previous screenshot shows a drawing to the left with dimensions to cut some
    angled detail into the front chassis. Note that measurements have been used instead
    of angles, which should keep it simple to manufacture later. The right shows a
    3D view of this.
  prefs: []
  type: TYPE_NORMAL
- en: The robot looks quite plain with a rectangular chassis. Adding some cuts on
    the chassis would add detail, and we can build upon it later for sensor positioning.
    Use the preceding screenshot for dimensions. Aim to cut the `ChassisPlate` body
    with a new sketch, as modifying the `ChassisOutline` sketch is not recommended.
  prefs: []
  type: TYPE_NORMAL
- en: 'Some other optional reader exercises are the following:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Consider adding wheels to the motors—they may need an axis. **Hint**: sketch
    on the *YZ* plane.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Could you use your drawing skills to reproduce an assembly drawing like the
    one seen in *Figure 3**.16*?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Further reading
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'This has only scratched the surface of what FreeCAD is capable of and how you
    could use it. I recommend reading further about its use at the following sources:'
  prefs: []
  type: TYPE_NORMAL
- en: '*FreeCAD [How-To]*, by *Daniel Falck* and *Brad Collette*, published by *Packt
    Publishing*—Solid modeling with the power of Python. This tours the workbenches,
    multiple modeling techniques, and using Python to work in FreeCAD.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The FreeCAD forums at [https://forum.freecadweb.org/](https://forum.freecadweb.org/)
    have a *Help on using FreeCAD* topic, which is a great place to ask questions
    when having FreeCAD issues.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: FreeCAD also has a wiki, with an excellent page on the **Sketcher** workbench
    at [https://wiki.freecadweb.org/Sketcher_Workbench](https://wiki.freecadweb.org/Sketcher_Workbench),
    and a *Getting started* topic at [https://wiki.freecadweb.org/Getting_started](https://wiki.freecadweb.org/Getting_started).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
