- en: Chapter 2. R – A Powerful Tool for Developing Machine Learning Algorithms
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第二章. R – 开发机器学习算法的强大工具
- en: Before using the machine learning techniques, we need to choose the proper software.
    There are many programming languages and types of software that provide the user
    with machine learning tools. In fact, the most important part is knowing which
    techniques to use and how to build new ones, and the software is just a tool.
    However, choosing the right software allows you to build faster and more accurate
    solutions.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用机器学习技术之前，我们需要选择合适的软件。有许多编程语言和软件类型为用户提供机器学习工具。实际上，最重要的部分是知道使用哪些技术以及如何构建新的技术，而软件只是工具。然而，选择正确的软件可以使你构建更快、更准确的解决方案。
- en: 'In this chapter, you will learn:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你将学习：
- en: The software requirements for building a machine learning solution
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建机器学习解决方案的软件要求
- en: How R, combined with RStudio, facilitates the development of a machine learning
    solution
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何R，结合RStudio，有助于开发机器学习解决方案
- en: The structure of R
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: R的结构
- en: The tools of R
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: R的工具
- en: Some important R packages
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一些重要的R包
- en: Why R
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为什么选择R
- en: Understanding the challenges in developing machine learning solutions helps
    in choosing the software that allows you to face them in the easiest and most
    effective way. This chapter illustrates the software requirements and explains
    why we will use R.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 理解开发机器学习解决方案的挑战有助于选择能够以最简单和最有效的方式面对这些挑战的软件。本章说明了软件要求并解释了为什么我们将使用R。
- en: An interactive approach to machine learning
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 机器学习的交互式方法
- en: Developing a machine learning solution consists of steps that have different
    requirements. In addition, the result of a step helps in improving the previous,
    so it's often necessary to come back to modify it.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 开发机器学习解决方案包括具有不同要求的步骤。此外，一个步骤的结果有助于改进之前的步骤，因此通常需要返回修改它。
- en: Before facing a problem and building its machine learning solution, we want
    to know as much as possible about the challenge and the available resources. Effectively,
    it's very important to have all the possible information in order to define the
    right path to the solution. For this purpose, starting from the data, we extract
    business insights and patterns from the data using statistical and machine learning
    tools.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在面对问题并构建其机器学习解决方案之前，我们希望尽可能多地了解挑战和可用资源。实际上，为了定义通往解决方案的正确路径，拥有所有可能的信息非常重要。为此，从数据开始，我们使用统计和机器学习工具从数据中提取业务洞察和模式。
- en: A simple example is a big supermarket that launches a new marketing campaign
    that targets some specific customers. The available data is the transactions about
    the past sales. Before building any machine learning technique, we need some basic
    information such as the total number of customers and the total sales volume in
    the previous year. After knowing the total number of customers, we want to identify
    the average customer's annual expenditure. Then, the next step can be to divide
    the customers in groups with homogeneous purchasing habits and compute the average
    customer's annual expenditure for each group.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 一个简单的例子是一个大型超市推出针对一些特定顾客的新营销活动。可用的数据是过去销售的交易记录。在构建任何机器学习技术之前，我们需要一些基本信息，例如前一年的总客户数量和总销售额。在知道总客户数量后，我们希望确定平均客户的年度支出。然后，下一步可以是根据同质购买习惯将客户分组，并计算每个组的平均客户年度支出。
- en: After extracting some basic information, we have a more detailed overview of
    the problem, and there will be new questions coming out very often. Therefore,
    we need to identify new patterns and extract new insights by applying other statistical
    and machine learning models. This procedure will go on until the information allows
    us to identify the final machine learning solution.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在提取一些基本信息之后，我们对问题的概述将更加详细，并且经常会提出新的问题。因此，我们需要通过应用其他统计和机器学习模型来识别新的模式和提取新的洞察。这个过程将持续进行，直到信息使我们能够确定最终的机器学习解决方案。
- en: There are often different options for a solution to a problem. In order to choose
    the most proper one, we can build some of them and compare their results. In addition,
    most of the algorithms can be tuned to improve their performance, and the tuning
    depends on the results.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 对于问题的解决方案，通常有多种选择。为了选择最合适的一个，我们可以构建其中的一些并比较它们的结果。此外，大多数算法都可以调整以提高其性能，而调整取决于结果。
- en: In conclusion, building a machine learning solution consists of different steps
    strongly related with each other. The target of a new step is based on the analysis
    of the previous one, and sometimes, a step is modified on the basis of the following
    results. There isn't a well-defined path that goes from the start to the end,
    and the software should allow that.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 总之，构建机器学习解决方案包括与彼此紧密相关的不同步骤。新步骤的目标基于对前一步的分析，有时，一个步骤会根据后续结果进行修改。没有一条从起点到终点的明确路径，软件应允许这一点。
- en: '![An interactive approach to machine learning](img/7740OS_02_01.jpg)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![机器学习的交互式方法](img/7740OS_02_01.jpg)'
- en: Expectations of machine learning software
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 机器学习软件的期望
- en: There are different options for a machine learning software, and this section
    shows what we are expecting from our choice. The software should, at the same
    time, provide the user with the machine learning tools and allow specific solutions
    to be built.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 对于机器学习软件，有多种选择，本节展示了我们对选择的期望。软件应同时为用户提供机器学习工具，并允许构建特定的解决方案。
- en: The most important machine learning techniques are provided by different types
    of software and packages. However, using cutting-edge techniques improves the
    solution. Most of the machine learning algorithms are developed by the academic
    world and used for research, so it takes time before they come into business.
    In addition, apart from a few exceptions, companies don't have enough resources
    to develop advanced techniques. Therefore, software should allow the user to access
    the tools developed in academia. In the case of free and open source software,
    there is usually an international community that provides the users with many
    packages that contain cutting-edge tools.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 最重要的机器学习技术由不同类型的软件和包提供。然而，使用尖端技术可以改进解决方案。大多数机器学习算法都是由学术界开发的，用于研究，因此它们进入商业领域需要时间。此外，除了少数例外，公司没有足够的资源来开发先进的技术。因此，软件应允许用户访问学术界开发的工具。在免费和开源软件的情况下，通常有一个国际社区为用户提供包含尖端工具的许多包。
- en: Another software requirement is to allow the user to develop quick and effective
    solutions. The approach to the machine learning problems requires a lot of interaction
    in the sense that the user often modifies the solution depending on the result.
    A good user-friendly graphic package is important to explore the results of each
    step and determine what to do. Therefore, the tool should allow the user to quickly
    build reusable components for data exploration, process, and visualization.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个软件需求是允许用户开发快速有效的解决方案。解决机器学习问题需要大量的交互，即用户经常根据结果修改解决方案。一个良好的用户友好的图形包对于探索每一步的结果并确定下一步要做什么非常重要。因此，该工具应允许用户快速构建可重用的组件，用于数据探索、处理和可视化。
- en: 'In conclusion, the software requirements are:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 总之，软件需求包括：
- en: Machine learning tools
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 机器学习工具
- en: Graphic packages
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 图形包
- en: Reusability of components
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 组件的可重用性
- en: R and RStudio
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: R和RStudio
- en: The software that we will use is R and this subsection explains why.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用的软件是R，本小节解释了原因。
- en: '**R** is a programming language designed for data analysis and machine learning.
    It''s an interpreted language in the sense that it executes the commands directly,
    so it is more user friendly than other programming languages. Although its learning
    curve is steeper compared to some commercial software, R is easier to learn compared
    to other programming languages.'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '**R**是一种专为数据分析和学习设计的编程语言。它是一种解释型语言，因为它直接执行命令，所以比其他编程语言更易于使用。尽管与一些商业软件相比，它的学习曲线更陡峭，但与其他编程语言相比，R更容易学习。'
- en: R is the most popular programming language for statistics, and there is a huge
    international community that supports it. Its repository (CRAN) contains more
    than 5,000 packages with statistics and machine learning tools. In this way, we
    can use the most cutting-edge tools provided by its international community.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: R是最受欢迎的统计编程语言，有一个庞大的国际社区支持它。它的存储库（CRAN）包含超过5000个包含统计和机器学习工具的包。这样，我们可以使用其国际社区提供的最尖端工具。
- en: Other useful R tools are its graphic packages that allow the generation of nice
    and professional charts using just a few lines of code. In this way, it's very
    easy to explore data and results during the solution development.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 其他有用的R工具是其图形包，它允许仅使用几行代码就生成漂亮且专业的图表。这样，在解决方案开发过程中探索数据和结果变得非常容易。
- en: Another advantage of R is **RStudio**, which is an IDE projected for R. RStudio
    includes an interactive console and tools that are used to access the R help,
    visualize/save charts, and for debugging. R, combined with RStudio, allows the
    users to develop powerful machine learning solutions relatively quickly.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: R的另一个优点是**RStudio**，这是一个为R项目设计的IDE。RStudio包括交互式控制台和用于访问R帮助、可视化/保存图表以及调试的工具。R与RStudio结合使用，使用户能够相对快速地开发强大的机器学习解决方案。
- en: The R tutorial
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: R教程
- en: I assume that you are already familiar with a programming language, although
    not necessarily R. This section contains a brief R tutorial that shows some tools
    that are useful for building machine learning solutions. Since a proper introduction
    to R would require an entire book, this tutorial focuses on just some relevant
    topics.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 我假设你已经熟悉一种编程语言，尽管不一定是R。本节包含一个简短的R教程，展示了构建机器学习解决方案时有用的工具。由于对R的适当介绍需要整本书，这个教程只关注一些相关主题。
- en: If you're already familiar with R, you can quickly read through this section.
    If you're new to R, I advise you to combine this section with an interactive online
    tutorial to get a more complete overview. In addition, it'll be very useful to
    play with the tools in order to acquire more familiarity.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你已经熟悉R，你可以快速阅读这一部分。如果你是R的新手，我建议你结合这个部分和一个交互式在线教程，以获得更全面的了解。此外，玩转这些工具以获得更多熟悉感将非常有用。
- en: Before starting with the tutorial, we need to install R and RStudio. Both types
    of software are open source, and they support the most relevant operating systems.
    It's also useful to read the RStudio tutorial to understand how to use this powerful
    IDE.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始教程之前，我们需要安装R和RStudio。这两种软件都是开源的，并且支持大多数操作系统。阅读RStudio教程以了解如何使用这个强大的IDE也是很有用的。
- en: My advice is to generate a new R script in the RStudio environment and to copy
    and paste the code into the script. You can run the command by going to the specific
    command line and pressing *Ctrl* + *Enter*.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 我的建议是在RStudio环境中生成一个新的R脚本，并将代码复制粘贴到脚本中。你可以通过转到特定的命令行并按*Ctrl* + *Enter*来运行命令。
- en: The basic tools of R
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: R的基本工具
- en: 'The basic structure of R is very easy. Any kind of variable is stored in an
    object that can be visualized by typing its name. Let''s start defining some numbers:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: R的基本结构非常简单。任何类型的变量都存储在可以通过输入其名称来可视化的对象中。让我们开始定义一些数字：
- en: '[PRE0]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'We can visualize an object by typing its name, as follows:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过输入其名称来可视化一个对象，如下所示：
- en: '[PRE1]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'We can perform some basic operations on the objects:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在对象上执行一些基本操作：
- en: '[PRE2]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The output of any operation can be stored in another object:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 任何操作的输出都可以存储在另一个对象中：
- en: '[PRE3]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The standard syntax used to add comments to the code consists of starting the
    line with a hash, as shown:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 添加注释到代码的标准语法是在行首加上一个井号，如下所示：
- en: '[PRE4]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'We can apply the R functions to the object and the syntax is very easy since
    the arguments are always within the parenthesis: `result <- functionName(argument1,
    argument2, …)`.'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以将R函数应用于对象，并且语法很简单，因为参数始终在括号内：`result <- functionName(argument1, argument2,
    …)`。
- en: 'For instance, we can use `sum` to compute the sum of numeric variables:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，我们可以使用`sum`来计算数值变量的总和：
- en: '[PRE5]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Similarly, for the operators, we can store the output of a function into another
    object, as shown:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，对于运算符，我们可以将函数的输出存储到另一个对象中，如下所示：
- en: '[PRE6]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'There are also functions that print a message on the console. For instance,
    given any object, `print` displays its content in the same way, that is, by just
    typing the object name:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 还有打印控制台消息的函数。例如，对于任何对象，`print`都会以相同的方式显示其内容，即只需输入对象名称：
- en: '[PRE7]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'The syntax used to define new functions is easy. For instance, we can define
    a function, `funProd`, which computes the product of its two arguments:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 定义新函数所使用的语法很简单。例如，我们可以定义一个函数`funProd`，它计算其两个参数的乘积：
- en: '[PRE8]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: The `n1` and `n2` inputs are defined within the parenthesis and the operations
    are contained in the curly brackets. The `return` method terminates the function,
    giving the result as the output. We can visualize the code within any function
    just by typing its name.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '`n1`和`n2`输入在括号内定义，操作包含在大括号内。`return`方法终止函数，并将结果作为输出。我们只需输入其名称即可在任意函数中可视化代码。'
- en: 'In order to keep track of what the function is doing, we can print the variables
    while the function is executing, shown as follows:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 为了跟踪函数的执行情况，我们可以在函数执行时打印变量，如下所示：
- en: '[PRE9]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Tip
  id: totrans-60
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: '**Downloading the example code**'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '**下载示例代码**'
- en: You can download the example code files from your account at [http://www.packtpub.com](http://www.packtpub.com)
    for all the Packt Publishing books you have purchased. If you purchased this book
    elsewhere, you can visit [http://www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files e-mailed directly to you.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从您在[http://www.packtpub.com](http://www.packtpub.com)的账户下载示例代码文件，以获取您购买的所有Packt
    Publishing书籍。如果您在其他地方购买了这本书，您可以访问[http://www.packtpub.com/support](http://www.packtpub.com/support)并注册，以便将文件直接通过电子邮件发送给您。
- en: 'There are different R functions associated with documentation. We can use `help`
    to display their description, as shown:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 与文档相关联的不同R函数。我们可以使用`help`来显示它们的描述，如下所示：
- en: '[PRE10]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Another option is to use `sum`, but personally, I prefer to use `help` in order
    to use the same parenthesis syntax of the other R functions.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个选项是使用`sum`，但就我个人而言，我更喜欢使用`help`，以便使用与其他R函数相同的括号语法。
- en: 'In order to perform basic R operations, we have to store the data in the vectors
    that are objects that contain a sorted collection of values. We can define a new
    vector using `c`, which is a function that concatenates its input, shown as follows:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 为了执行基本的R操作，我们必须将数据存储在向量中，这些向量是包含值排序集合的对象。我们可以使用`c`定义一个新的向量，这是一个将输入连接起来的函数，如下所示：
- en: '[PRE11]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'We can extract an element of the vector using square brackets. The first element
    can be extracted putting `1` inside the square brackets. Please note that R indexes
    differently from other programming languages such as Python, where the first element
    is indexed as `0` instead of `1`, as shown here:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用方括号提取向量的一个元素。将`1`放在方括号内可以提取第一个元素。请注意，R的索引与其他编程语言（如Python）不同，Python中第一个元素的索引为`0`，而不是`1`，如下所示：
- en: '[PRE12]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'We can extract more than one element at the same time by putting a vector inside
    the square brackets, as shown here:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过在方括号内放置一个向量来同时提取多个元素，如下所示：
- en: '[PRE13]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'We can also perform some basic operations on the vectors:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 我们也可以对向量执行一些基本操作：
- en: '[PRE14]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'If we want to define a vector that contains a sequence of integers, we can
    use this notation:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们要定义一个包含整数序列的向量，我们可以使用此表示法：
- en: '[PRE15]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'The vectors can contain undefined values, which are `NA` in R:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 向量可以包含未定义的值，在R中为`NA`：
- en: '[PRE16]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: If we perform an operation on an `NA` value, the output will be `NA`.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们对`NA`值执行操作，输出将是`NA`。
- en: 'Another important data element is Boolean. Boolean variables are defined using
    `TRUE` and `FALSE`, and the basic operators are `&` or `&&` (AND), `|` or `||`
    (OR), as well as `!` (NOT). Boolean elements can be single elements or vectors.
    In the case of vectors, the shorter forms (`&` and `|`) compare each element and
    the long forms (`&&` and `||`) evaluate only the first element of each vector,
    shown as follows:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个重要的数据元素是布尔值。布尔变量使用`TRUE`和`FALSE`定义，基本运算符是`&`或`&&`（AND）、`|`或`||`（OR），以及`!`（NOT）。布尔元素可以是单个元素或向量。在向量的情况下，短形式（`&`和`|`）比较每个元素，而长形式（`&&`和`||`）仅评估每个向量的第一个元素，如下所示：
- en: '[PRE17]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'We can define Boolean variables using relational operators such as `==` (equal
    to), `!=` (not equal to), `<=` (less than or equal to), `>=`, `<`, and `>`:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用关系运算符定义布尔变量，如`==`（等于）、`!=`（不等于）、`<=`（小于或等于）、`>=`、`<`和`>`：
- en: '[PRE18]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Boolean variables can be included in the `if` statements defined by `if` with
    a syntax similar to the functions. We put the condition within the parenthesis
    and the operations are within the curly brackets, shown as follows:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 布尔变量可以包含在由`if`定义的`if`语句中，其语法与函数类似。我们将条件放在括号内，操作放在花括号内，如下所示：
- en: '[PRE19]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'We can define `for` loops using `for` and their syntax is the same as `if`.
    The parenthesis contains the variable name and the vector with the values, and
    the curly brackets contain the operations, shown as follows:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用`for`和它们的语法定义`for`循环，与`if`的语法相同。括号包含变量名和值向量，花括号包含操作，如下所示：
- en: '[PRE20]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'If we want to repeat an operation for a fixed number of times, we can define
    a vector that contains the first *n* integer numbers:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们要对一个操作进行固定次数的重复，我们可以定义一个包含前*n*个整数的向量：
- en: '[PRE21]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: This subsection showed some basic components of R. The next subsection presents
    the R objects that analyze the data.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 本小节展示了R的一些基本组件。下一小节将介绍用于分析数据的R对象。
- en: Understanding the basic R objects
  id: totrans-90
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 理解基本的R对象
- en: 'There are different kinds of objects, and we have seen some of them: `numeric`,
    `function`, `boolean`, and `vector`. We can easily identify the class of the objects
    used in the previous examples.'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 有不同种类的对象，我们已经看到了其中的一些：`numeric`、`function`、`boolean`和`vector`。我们可以轻松地识别前例中使用的对象的类别。
- en: 'Consider the following example:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑以下示例：
- en: '[PRE22]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: The `a1` vector belongs to the `numeric` class because all its elements are
    numeric. In the same way, a vector with logical elements belongs to `logical`.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '`a1`向量属于`numeric`类别，因为它的所有元素都是数值。同样，一个包含逻辑元素的向量属于`logical`。'
- en: 'Strings are defined using single or double quotes, shown as follows:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 字符串使用单引号或双引号定义，如下所示：
- en: '[PRE23]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'There are different string functions such as `paste`, which concatenates two
    strings, and `substring`, which extracts a subset from the string, as shown:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 有不同的字符串函数，如`paste`，它连接两个字符串，以及`substring`，它从字符串中提取子集，如下所示：
- en: '[PRE24]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'It''s possible to define a `string` vector in the same way as `numeric` or
    `logical`:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 可以像定义`numeric`或`logical`一样定义一个`string`向量：
- en: '[PRE25]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: A vector can include any kind of object (even functions potentially). What happens
    if we define a vector that contains strings and numbers?
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 一个向量可以包含任何类型的对象（甚至可能是函数）。如果我们定义一个包含字符串和数字的向量会发生什么？
- en: '[PRE26]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: As shown in the preceding code, R converted the numbers into characters in order
    to have a homogeneous vector. However, there are other data structures that allow
    us to store heterogeneous objects.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 如前述代码所示，R将数字转换为字符，以便有一个同质的向量。然而，还有其他数据结构允许我们存储异质对象。
- en: 'If we have categoric variables, we can use strings to store them, but there
    is another option: `factors`. This R object contains a variable whose value belongs
    to a defined set of values known as `levels`. Each level is associated with an
    integer and the data can be treated as integers or characters that obtain the
    same result. Factors can also help in creating ordinal variables.'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们有分类变量，我们可以使用字符串来存储它们，但还有一个选项：`factors`。这个R对象包含一个变量，其值属于一个已定义的值集合，称为`levels`。每个层级都与一个整数相关联，数据可以被视为整数或字符，以获得相同的结果。因子还可以帮助创建有序变量。
- en: 'Starting from a string, we can generate a factor using `factor`:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 从一个字符串开始，我们可以使用`factor`生成因子：
- en: '[PRE27]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Using levels, we can identify the possible values:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 使用层级，我们可以识别可能的值：
- en: '[PRE28]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Another useful function, although not necessarily related to factors, is `table`,
    and it counts the occurrences of each level:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个有用的函数，尽管不一定与因子相关，是`table`，它计算每个层级的出现次数：
- en: '[PRE29]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Another useful data element is `Date`, and it is one of the R options used
    to store dates. We start building a string such as `''2013-01-01''` and defining
    the position of the year, month, and day in another string, as shown:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个有用的数据元素是`Date`，它是R中用于存储日期的选项之一。我们开始构建一个如`'2013-01-01'`的字符串，并在另一个字符串中定义年、月和日的位置，如下所示：
- en: '[PRE30]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Now, using `as.Date`, we can generate the date object:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，使用`as.Date`，我们可以生成日期对象：
- en: '[PRE31]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'We can apply simple operations on dates, such as adding a definite number of
    days:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在日期上应用简单的操作，例如添加一定数量的天数：
- en: '[PRE32]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'We can also use Boolean operators to match two dates:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以使用布尔运算符来匹配两个日期：
- en: '[PRE33]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Another data type is `list`, and it defines an ordered heterogeneous collection
    of data elements:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种数据类型是`list`，它定义了一个有序的异质数据元素集合：
- en: '[PRE34]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'Each object can be associated with a key that allows us to access it:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 每个对象都可以与一个键相关联，这允许我们访问它：
- en: '[PRE35]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'In both cases, we can extract an element from a list using a double square
    bracket and the position of the element, as shown:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 在这两种情况下，我们可以使用双方括号和元素的索引从列表中提取一个元素，如下所示：
- en: '[PRE36]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'In the case of `l2`, we have defined its key, so we can access its elements
    using the `$` operator:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 在`l2`的情况下，我们已定义其键，因此我们可以使用`$`运算符来访问其元素：
- en: '[PRE37]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'We can visualize all the key names using `names`:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用`names`来可视化所有键名：
- en: '[PRE38]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'It''s also possible to define or change the key names:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 还可以定义或更改键名：
- en: '[PRE39]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'In order to extract a sublist from a list, we can use the single square brackets,
    similar to the vectors:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 为了从一个列表中提取子列表，我们可以使用单方括号，类似于向量：
- en: '[PRE40]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'An R object that allows you to store tabular data is a `matrix`. To generate
    a new matrix, put all the values in a vector and use `matrix`, shown as follows:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 一个允许你存储表格数据的R对象是`matrix`。要生成一个新的矩阵，将所有值放入一个向量中，并使用`matrix`，如下所示：
- en: '[PRE41]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'Using `t`, we can transpose a matrix, which means we can switch the rows with
    the columns:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`t`，我们可以转置矩阵，这意味着我们可以交换行和列：
- en: '[PRE42]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: As shown in the preceding code, `matrix1` and `matrix2` contain only numeric
    data. Using `cbind`, we can add another column. What happens if we add a character
    column?
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 如前述代码所示，`matrix1` 和 `matrix2` 只包含数值数据。使用 `cbind`，我们可以添加另一列。如果我们添加一个字符列会发生什么？
- en: '[PRE43]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: R converts numbers into characters. The reason is that the matrices, like vectors,
    can contain only homogeneous data.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: R 将数字转换为字符。原因是矩阵，就像向量一样，只能包含同质数据。
- en: 'The matrices can have row and column names, and we can display them using `rownames`
    and `colnames`:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 矩阵可以具有行和列名，我们可以使用 `rownames` 和 `colnames` 来显示它们：
- en: '[PRE44]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'We defined `matrix3` by adding a column to `matrix3`. Its columns and R automatically
    set the last column name equal to the vector name, that is, `vector3`. Using the
    same functions, we can set the row and column names manually, as shown:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 我们通过向 `matrix3` 添加一列来定义 `matrix3`。它的列名和 R 自动将最后一列名设置为向量名，即 `vector3`。使用相同的函数，我们可以手动设置行和列名，如下所示：
- en: '[PRE45]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'We can visualize a data frame using `View`:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用 `View` 来可视化数据框：
- en: '[PRE46]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: Tip
  id: totrans-146
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: For the data frames, refer to the scripts of this chapter.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 对于数据框，请参阅本章的脚本。
- en: 'There are some functions that allow the same operation to be performed on each
    element of a vector, matrix, or list. The functions are as follows:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 有一些函数允许对向量、矩阵或列表的每个元素执行相同的操作。这些函数如下：
- en: '`apply`: Apply a function to each row, column, or element of a matrix'
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`apply`：对矩阵的每一行、列或元素应用函数'
- en: '`sapply`: Apply a function to each element of a vector'
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sapply`：对向量的每个元素应用函数'
- en: '`lapply`: Apply a function to each element of a list'
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`lapply`：对列表的每个元素应用函数'
- en: 'The `sapply` function is the easiest, so we can start with it. We can define
    a vector `x1` with the integer numbers between `1` and `10`, and a function, `func1`,
    which returns the square of the input:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: '`sapply` 函数是最简单的，因此我们可以从它开始。我们可以定义一个向量 `x1`，包含介于 `1` 和 `10` 之间的整数，以及一个函数 `func1`，该函数返回输入的平方：'
- en: '[PRE47]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'Now, we can use `sapply` by specifying the arguments: `X`—the array, and `FUN`—the
    function:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以通过指定参数来使用 `sapply`：`X`—数组，`FUN`—函数：
- en: '[PRE48]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'Similarly, we can use `lapply`:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 类似地，我们可以使用 `lapply`：
- en: '[PRE49]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'The function that performs an operation on a matrix is `apply`. It can be used
    to apply the same function to each row. Let''s first define a matrix:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 执行矩阵操作的函数是 `apply`。它可以用来对每一行应用相同的函数。让我们首先定义一个矩阵：
- en: '[PRE50]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'In order to apply the `sum` function to each row, we use `apply`, defining
    the `MARGIN` input equal to `1`, which specifies that we perform the operation
    on each row:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 为了将 `sum` 函数应用于每一行，我们使用 `apply`，定义 `MARGIN` 输入等于 `1`，指定我们在每一行上执行操作：
- en: '[PRE51]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'Defining `MARGIN = 2`, we perform the operation on each column:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 定义 `MARGIN = 2`，我们对每一列执行操作：
- en: '[PRE52]'
  id: totrans-163
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: 'We can apply the function to each element of the matrix using `MARGIN = c(1,
    2)`:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用 `MARGIN = c(1, 2)` 将函数应用于矩阵的每个元素：
- en: '[PRE53]'
  id: totrans-165
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: This section showed some R objects and tools that are relevant to machine learning
    analysis. However, they're still just the basics.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 本节展示了与机器学习分析相关的某些 R 对象和工具。然而，它们仍然只是基础知识。
- en: What are the R standards?
  id: totrans-167
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: R 的标准是什么？
- en: There are some style rules for having a clean and standardized code, and this
    subsection shows some of them.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 有一些风格规则可以使代码干净、标准化，本小节展示了其中的一些。
- en: Unlike other programming languages, R doesn't require any indentation. However,
    indenting the code makes it more readable and clean. The R standard is to use
    two spaces, and RStudio automatically defines this indentation.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 与其他编程语言不同，R 不需要任何缩进。然而，缩进代码可以使代码更易读、更整洁。R 的标准是使用两个空格，RStudio 自动定义这种缩进。
- en: The standard for assigning a variable is to use the `<-` operator even if it's
    possible to use `=` to make R more similar to other programming languages. However,
    the two operators have a different meaning if used within function input.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 分配变量的标准是使用 `<-` 操作符，即使可以使用 `=` 来使 R 更接近其他编程语言。然而，如果在使用函数输入时使用，这两个操作符有不同的含义。
- en: 'There are different options for the identifiers, and personally, I like the
    lower camel case:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 标识符有不同的选项，并且我个人喜欢小驼峰命名法：
- en: '[PRE54]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: However, the R community is very big and there are different conventions.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，R 社区非常大，有不同的惯例。
- en: 'Each operator should be surrounded by spaces, and in a function''s input, there
    should always be a space after a comma:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 每个操作符都应该由空格包围，并且在函数输入中，应该在逗号后始终有一个空格：
- en: '[PRE55]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: There are some other style rules, and you can find them at [https://google-styleguide.googlecode.com/svn/trunk/Rguide.xml](https://google-styleguide.googlecode.com/svn/trunk/Rguide.xml).
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 有一些其他的样式规则，你可以在[https://google-styleguide.googlecode.com/svn/trunk/Rguide.xml](https://google-styleguide.googlecode.com/svn/trunk/Rguide.xml)找到它们。
- en: Some useful R packages
  id: totrans-177
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 一些有用的R包
- en: 'There are different R packages that provide users with general-purpose functions
    and specific techniques. This chapter introduces two powerful general purpose
    packages: `data.table` and `plyr`.'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 有不同的R包为用户提供通用函数和特定技术。本章介绍了两个强大的通用包：`data.table`和`plyr`。
- en: 'Some packages are already installed in the basic version of R. However, in
    order to use `data.table` and `plyr`, we need to download them from the official
    CRAN repository using `install.packages`. Let''s start with `data.table`, which
    is a package that provides additional tools used to deal with data frames:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 一些包已经安装在了R的基本版本中。然而，为了使用`data.table`和`plyr`，我们需要从官方CRAN仓库使用`install.packages`下载它们。让我们从`data.table`开始，这是一个提供用于处理数据框的额外工具的包：
- en: '[PRE56]'
  id: totrans-180
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: 'If the command doesn''t work, you can specify the repository:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 如果命令不起作用，你可以指定仓库：
- en: '[PRE57]'
  id: totrans-182
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: 'After installing the package, we need to load it in order to use its functions.
    Unfortunately, R will import all the functions from the package without using
    a namespace, and sometimes there might be name conflicts across different packages:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 在安装包之后，我们需要加载它才能使用其函数。不幸的是，R会在不使用命名空间的情况下导入包中的所有函数，有时可能会在不同包之间出现名称冲突：
- en: '[PRE58]'
  id: totrans-184
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: The package contains a new class called `data.table`, which inherits from `data.frame`.
    Inheritance means that data tables can use all the data frame tools, if not overrided,
    plus others.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 包含了一个名为`data.table`的新类，它继承自`data.frame`。继承意味着如果未被覆盖，数据表可以使用所有数据框工具，以及其他工具。
- en: 'In order to use the package, the starting point is a dataset that we will analyze.
    R provides the user with some datasets, and we can see their list and description
    using `data`:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使用这个包，起点是我们将要分析的dataset。R为用户提供了一些datasets，我们可以使用`data`查看它们的列表和描述：
- en: '[PRE59]'
  id: totrans-187
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: 'The dataset that we will use is `iris`. Although it''s a very standard dataset
    for the tutorials, I decided to use it since it''s good to use to show the data
    table tools. I promise that I will choose more interesting topics in the following
    chapters. First, let''s read the data description:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将要使用的数据集是`iris`。尽管它是一个非常标准的教程数据集，但我决定使用它，因为它很好地展示了数据表工具。我保证在接下来的章节中我会选择更有趣的主题。首先，让我们读取数据描述：
- en: '[PRE60]'
  id: totrans-189
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: 'The dataset contains the data about three species of iris flowers: `setosa`,
    `versicolor`, and `virginica`. The data displays the length and the width of the
    sepal and the petals of each flower.'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 数据集包含了关于三种鸢尾花物种的数据：`setosa`、`versicolor`和`virginica`。数据显示了每个花朵的萼片和花瓣的长度和宽度。
- en: 'The `iris` dataset is a data frame. First, let''s convert it into a data table
    using `data.table`:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: '`iris`数据集是一个数据框。首先，让我们使用`data.table`将其转换为数据表：'
- en: '[PRE61]'
  id: totrans-192
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: 'The `dtIris` object belongs to the `data.table` and `data.frame` classes because
    of inheritance. Before analyzing the data, we can use `str` to quickly explore
    the structure:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: '`dtIris`对象属于`data.table`和`data.frame`类，因为继承。在分析数据之前，我们可以使用`str`快速探索其结构：'
- en: '[PRE62]'
  id: totrans-194
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: 'As we can see, there are four numerical columns that show the attributes of
    the flower and one factor column that shows the species. Now, using `print`, we
    can display the data contained in `dtIris`:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们所见，有四个显示花朵属性的数值列和一个显示物种的因子列。现在，使用`print`，我们可以显示`dtIris`中包含的数据：
- en: '[PRE63]'
  id: totrans-196
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: 'Now, we can see the first and last five rows. In order to see the whole table,
    we can use `View`:'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以看到前五行和最后五行。为了看到整个表，我们可以使用`View`：
- en: '[PRE64]'
  id: totrans-198
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: 'After viewing the data, let''s see the basic operations. The square brackets
    allow us to perform a wide range of operations. For instance, by putting a number
    in the square brackets, we extract the related row:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 在查看数据之后，让我们看看基本操作。方括号允许我们执行一系列操作。例如，通过在方括号中放入一个数字，我们可以提取相关的行：
- en: '[PRE65]'
  id: totrans-200
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: 'By putting a vector, we can extract more rows:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 通过放入一个向量，我们可以提取更多的行：
- en: '[PRE66]'
  id: totrans-202
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: 'If we want to extract a column, we insert the column name as the second argument:'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们要提取一个列，我们将列名作为第二个参数插入：
- en: '[PRE67]'
  id: totrans-204
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: 'Instead of the column name, we could have used the number of the column position,
    which, is 5 in this case. We can also extract rows and columns at the same time:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 而不是使用列名，我们也可以使用列的位置编号，在这个例子中是5。我们也可以同时提取行和列：
- en: '[PRE68]'
  id: totrans-206
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: 'What if we want to define a data table that has only the first three columns?
    We can use a similar notation, including `Species` as a string and adding `with
    = F` as the third argument:'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们想要定义一个只包含前三个列的数据表，我们可以使用类似的表示法，包括将`Species`作为字符串，并在第三个参数中添加`with = F`：
- en: '[PRE69]'
  id: totrans-208
  prefs: []
  type: TYPE_PRE
  zh: '[PRE69]'
- en: 'We can also extract a data table with two or more columns of `dtIris`:'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 我们也可以从`dtIris`中提取包含两个或更多列的数据表：
- en: '[PRE70]'
  id: totrans-210
  prefs: []
  type: TYPE_PRE
  zh: '[PRE70]'
- en: 'We put a vector in the first argument to select rows. Like data frames and
    matrices, we can select the rows that define a logical vector, for instance `dtIris$Sepal.Length
    > 7`. In the case of data tables, we can directly access the columns without using
    the `$` operator. Then, we just need to include `Sepal.Length > 7` as the first
    argument:'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在第一个参数中放入一个向量以选择行。像数据框和矩阵一样，我们可以选择定义逻辑向量的行，例如`dtIris$Sepal.Length > 7`。在数据表的情况下，我们可以直接访问列而不使用`$`运算符。然后，我们只需要将`Sepal.Length
    > 7`作为第一个参数包含进去：
- en: '[PRE71]'
  id: totrans-212
  prefs: []
  type: TYPE_PRE
  zh: '[PRE71]'
- en: 'To define a new column, we can use the `:=` operator in the second square bracket
    argument. We can access the other columns just by typing their name. For instance,
    we can define `Sepal.Area` as the product of `Sepal.Length * Sepal.Width`:'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 要定义一个新列，我们可以在第二个方括号参数中使用`:=`运算符。我们可以通过直接输入它们的名称来访问其他列。例如，我们可以将`Sepal.Area`定义为`Sepal.Length
    * Sepal.Width`的乘积：
- en: '[PRE72]'
  id: totrans-214
  prefs: []
  type: TYPE_PRE
  zh: '[PRE72]'
- en: 'If we want to compute the average `Sepal.Area`, we can perform the operation
    within the second argument in the square brackets:'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们想要计算平均`Sepal.Area`，我们可以在方括号中的第二个参数内执行操作：
- en: '[PRE73]'
  id: totrans-216
  prefs: []
  type: TYPE_PRE
  zh: '[PRE73]'
- en: 'What if we want to know the average petal area for each species? The syntax
    is the same; we include `by = ''Species''` in the third argument:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们想知道每个物种的平均花瓣面积，语法相同；我们在第三个参数中包含`by = 'Species'`：
- en: '[PRE74]'
  id: totrans-218
  prefs: []
  type: TYPE_PRE
  zh: '[PRE74]'
- en: 'We compute more statistics at the same time. For instance, we can determine
    the maximum and minimum sepal area for each species. In this case, the syntax
    is similar, with the addition of `list` in the second argument:'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 我们同时计算更多的统计数据。例如，我们可以确定每个物种的最大和最小花瓣面积。在这种情况下，语法类似，只是在第二个参数中添加了`list`：
- en: '[PRE75]'
  id: totrans-220
  prefs: []
  type: TYPE_PRE
  zh: '[PRE75]'
- en: 'Another useful package is `plyr`, and it contains some functions similar to
    `apply` and is applicable in different contexts. Let''s first install and load
    the package:'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个有用的包是`plyr`，它包含一些类似于`apply`的函数，并且适用于不同的上下文。让我们首先安装并加载这个包：
- en: '[PRE76]'
  id: totrans-222
  prefs: []
  type: TYPE_PRE
  zh: '[PRE76]'
- en: 'A useful function is `dlply`, and it splits a data frame into chunks, applies
    a function to each chunk, and defines a list that contains the function output.
    The types of input are given as follows:'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 一个有用的函数是`dlply`，它将数据框分割成块，对每个块应用一个函数，并定义一个包含函数输出的列表。输入类型如下所示：
- en: '`.data`: This is the data frame.'
  id: totrans-224
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.data`: 这是一个数据框。'
- en: '`.variables`: This is the variable that defines the split. Each chunk corresponds
    to a possible value of the variable.'
  id: totrans-225
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.variables`: 这是定义分割的变量。每个块对应于变量的一个可能值。'
- en: '`.fun`: This is the function to apply to each chunk.'
  id: totrans-226
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.fun`: 这是应用于每个块的函数。'
- en: 'For instance, starting from the `iris` data frame, we can compute the average
    sepal length for each species. First, we can define `funcDl` by computing the
    average sepal length:'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，从`iris`数据框开始，我们可以计算每个物种的平均花瓣长度。首先，我们可以通过计算平均花瓣长度来定义`funcDl`：
- en: '[PRE77]'
  id: totrans-228
  prefs: []
  type: TYPE_PRE
  zh: '[PRE77]'
- en: 'Now, we can use `dlply` to apply `funcDl` to each species:'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以使用`dlply`将`funcDl`应用于每个物种：
- en: '[PRE78]'
  id: totrans-230
  prefs: []
  type: TYPE_PRE
  zh: '[PRE78]'
- en: 'Let''s explore the data that is contained in the list:'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们探索列表中包含的数据：
- en: '[PRE79]'
  id: totrans-232
  prefs: []
  type: TYPE_PRE
  zh: '[PRE79]'
- en: 'Each element of the list has the name of the corresponding species. Let''s
    take a look at one of the elements:'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 列表中的每个元素都有对应物种的名称。让我们看看其中一个元素：
- en: '[PRE80]'
  id: totrans-234
  prefs: []
  type: TYPE_PRE
  zh: '[PRE80]'
- en: 'The `dlply` function generates a list starting from a data frame, and in the
    name, `d` stands for data frame, and `l` stands for list. There are other `ply`
    functions and the options are:'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: '`dlply`函数从一个数据框生成一个列表，在名称中，`d`代表数据框，`l`代表列表。还有其他`ply`函数，选项如下：'
- en: '`a`: Array'
  id: totrans-236
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`a`: 数组'
- en: '`d`: Data frame'
  id: totrans-237
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`d`: 数据框'
- en: '`l`: List'
  id: totrans-238
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`l`: 列表'
- en: For instance, `adply` defines a data frame starting from an array, and `laply`
    defines an array starting from a list.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，`adply`从一个数组定义数据框，而`laply`从一个列表定义数组。
- en: This section introduced two useful packages. There are more than 5,000 packages
    in the CRAN repository, and we will see a few of them in the following chapters.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 本节介绍了两个有用的包。CRAN存储库中有超过5,000个包，我们将在接下来的章节中看到其中的一些。
- en: Summary
  id: totrans-241
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, you understood the software required to develop a machine learning
    solution. You saw why R, combined with RStudio, is a good tool to use to help
    you overcome machine learning challenges.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您了解了开发机器学习解决方案所需的软件。您看到了为什么R结合RStudio是帮助您克服机器学习挑战的好工具。
- en: You learned about the basics of R and some of the most important data types
    and functions. You have also seen packages such as `data.table` and `plyr`.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 您学习了R的基础知识以及一些最重要的数据类型和函数。您还看到了`data.table`和`plyr`等包。
- en: The next chapter shows you a simple example of a challenge that can be faced
    using exploratory data analysis and machine learning. You will see R tools used
    to build charts and use machine learning algorithms.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 下一章将向您展示一个使用探索性数据分析与机器学习可以面临的挑战的简单示例。您将看到使用R工具构建图表和使用机器学习算法。
