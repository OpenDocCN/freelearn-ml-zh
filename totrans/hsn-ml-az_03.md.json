["```py\n//output omitted\n\"faceAttributes\": {\n      \"hair\": {\n        \"bald\": 0.01,\n        \"invisible\": false,\n        \"hairColor\": [\n          {\n            \"color\": \"blond\",\n            \"confidence\": 1.0\n          },\n          {\n            \"color\": \"brown\",\n            \"confidence\": 0.87\n          },\n        //omitted\n        ]\n      },\n      \"smile\": 0.018,\n      \"headPose\": {\n        \"pitch\": 0.0,\n        \"roll\": 3.2,\n        \"yaw\": -23.3\n      },\n      \"gender\": \"female\",\n      \"age\": 24.4,\n      \"facialHair\": {\n        \"moustache\": 0.0,\n        \"beard\": 0.0,\n        \"sideburns\": 0.0\n      },\n      \"glasses\": \"NoGlasses\",      \"makeup\": {\n        \"eyeMakeup\": true,\n        \"lipMakeup\": true\n      },\n      \"emotion\": {\n        \"anger\": 0.001,\n        \"contempt\": 0.002,\n        \"disgust\": 0.002,\n        \"fear\": 0.0,\n        \"happiness\": 0.018,\n        \"neutral\": 0.969,\n        \"sadness\": 0.006,\n        \"surprise\": 0.002\n      },\n//output omitted\n```", "```py\n{  \"languageDetection\": {    \"documents\": [      {        \"id\": \"fe2529ff-073e-4355-86fa-b927d1b62a23\",        \"detectedLanguages\": [          {            \"name\": \"English\",            \"iso6391Name\": \"en\",            \"score\": 1.0          }        ]      }    ],    \"errors\": []  },  \"keyPhrases\": {    \"documents\": [      {        \"id\": \"fe2529ff-073e-4355-86fa-b927d1b62a23\",        \"keyPhrases\": [          \"Microsoft's offerings\",          \"AI space\"        ]      }    ],    \"errors\": []  },  \"sentiment\": {    \"documents\": [      {        \"id\": \"fe2529ff-073e-4355-86fa-b927d1b62a23\",        \"score\": 0.93527746200561523      }    ],    \"errors\": []  },  \"entities\": {    \"documents\": [      {        \"id\": \"fe2529ff-073e-4355-86fa-b927d1b62a23\",        \"entities\": [          {            \"name\": \"Microsoft\",            \"matches\": [              {                \"text\": \"Microsoft's\",                \"offset\": 25,                \"length\": 11              }            ],            \"wikipediaLanguage\": \"en\",            \"wikipediaId\": \"Microsoft\",            \"wikipediaUrl\": \"https://en.wikipedia.org/wiki/Microsoft\",            \"bingId\": \"a093e9b9-90f5-a3d5-c4b8-5855e1b01f85\"          },          {            \"name\": \"Ai Space\",            \"matches\": [              {                \"text\": \"AI space\",                \"offset\": 50,                \"length\": 8              }            ],            \"wikipediaLanguage\": \"en\",            \"wikipediaId\": \"Ai Space\",            \"wikipediaUrl\": \"https://en.wikipedia.org/wiki/Ai_Space\",            \"bingId\": \"2d055fa3-b3cc-e9f6-776a-77b6ed7f341f\"          }        ]      }    ],    \"errors\": []  }}\n```", "```py\n# Replace <Subscription Key> with your valid subscription's api access key.\nsubscription_key = \"<Access Key>\"\nassert subscription_key\n\n# Replace the base url with what you see as Endpoint in the portalâ€™s Overview section under your api\ntext_analytics_base_url = \"https://westus2.api.cognitive.microsoft.com/text/analytics/v2.0/\"\nsentiment_api_url = text_analytics_base_url + \"sentiment\"\n\n# Send the text you want the api to analyze\n# You can send multiple texts\ndocuments = {'documents' : [\n  {'id': '1', 'text': 'I am excited about using AI offerings by Microsoft.'},\n]}\n\nimport requests\n# Get sentiment of text\nheaders   = {\"Ocp-Apim-Subscription-Key\": subscription_key}\nresponse  = requests.post(sentiment_api_url, headers=headers, json=documents)\nsentiments = response.json()\nprint(sentiments)\n\n# Get the language of text\nlanguage_api_url = text_analytics_base_url + \"languages\"\nresponse  = requests.post(language_api_url, headers=headers, json=documents)\nlanguages = response.json()\nprint(languages)\n\n# Get key phrases from text\nkey_phrase_api_url = text_analytics_base_url + \"keyPhrases\"\nresponse  = requests.post(key_phrase_api_url, headers=headers, json=documents)\nkey_phrases = response.json()\nprint(key_phrases)\n\n# Get well-known entities\nentity_linking_api_url = text_analytics_base_url + \"entities\"\nresponse  = requests.post(entity_linking_api_url, headers=headers, json=documents)\nentities = response.json()\nprint(entities)\n```", "```py\n\n{'documents': [{'id': '1', 'score': 0.9388835430145264}], 'errors': []}{'documents': [{'detectedLanguages': [{'iso6391Name': 'en', 'name': 'English', 'score': 1.0}], 'id': '1'}], 'errors': []}\n{'documents': [{'keyPhrases': ['AI offerings', 'Microsoft'], 'id': '1'}], 'errors': []}\n{'documents': [{'id': '1', 'entities': [{'name': 'Microsoft', 'wikipediaId': 'Microsoft', 'matches': [{'offset': 41, 'length': 9, 'text': 'Microsoft'}], 'bingId': 'a093e9b9-90f5-a3d5-c4b8-5855e1b01f85', 'wikipediaUrl': 'https://en.wikipedia.org/wiki/Microsoft', 'wikipediaLanguage': 'en'}, {'name': 'Artificial intelligence', 'wikipediaId': 'Artificial intelligence', 'matches': [{'offset': 25, 'length': 2, 'text': 'AI'}], 'bingId': '9d99fb44-edac-0e03-1579-19d8d8591a49',\n'wikipediaUrl': 'https://en.wikipedia.org/wiki/Artificial_intelligence', 'wikipediaLanguage': 'en'}]}], 'errors': []}\n```"]