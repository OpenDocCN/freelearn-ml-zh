- en: '*Chapter 1*: Machine Learning and Its Life Cycle in the Cloud'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第一章*: 云中的机器学习及其生命周期'
- en: '**Machine Learning** (**ML**) is a technique that has been around for decades.
    It is hard to believe how ubiquitous ML is now in our daily life. It has also
    been a rocky road for the field of ML to become mainstream, until the recent major
    leap in computer technology. Today''s computer hardware is faster, smaller, and
    smarter. Internet speeds are faster and more convenient. Storage is cheaper and
    smaller. Now, it is rather easy to collect, store, and process massive amounts
    of data with the technology we have now. We are able to create sizeable datasets
    that we were not able to before, train ML models using compute resources that
    were not available before, and make use of ML models in every corner of our lives.'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '**机器学习**（**ML**）是一种存在了几十年的技术。难以相信ML现在在我们的日常生活中如此普遍。ML领域成为主流也经历了一段坎坷的道路，直到最近计算机技术的重大飞跃。今天的计算机硬件更快、更小、更智能。互联网速度更快、更方便。存储更便宜、更小。现在，使用我们现在的技术，收集、存储和处理大量数据变得相当容易。我们能够创建以前无法创建的大量数据集，使用以前不可用的计算资源训练机器学习模型，并在我们生活的每个角落使用机器学习模型。'
- en: For example, media streaming companies can now build ML recommendation engines
    at a global scale using their title collections and customer activity data on
    their websites to provide the most relevant content in real time in order to optimize
    the customer experience. The size of the data for both the titles and customer
    preferences and activity is on a scale that wasn't possible 20 years ago, considering
    how many of us are currently using a streaming service.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，媒体流媒体公司现在可以利用其网站上的标题集合和客户活动数据，在全球范围内构建机器学习推荐引擎，以实时提供最相关的内容，从而优化客户体验。标题和客户偏好及活动数据的大小，在20年前是无法想象的，考虑到我们中有多少人正在使用流媒体服务。
- en: Training an ML model at this scale, using ML algorithms that are becoming increasingly
    more complex, requires a robust and scalable solution. After a model is trained,
    companies are able to serve the model at a global scale where millions of users
    visit the application from web and mobile devices at the same time.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个规模上训练机器学习模型，使用越来越复杂的机器学习算法，需要一个强大且可扩展的解决方案。模型训练完成后，公司能够在全球范围内提供服务，数百万用户同时从网页和移动设备访问应用程序。
- en: Companies are also creating more and more models for each segment of customers
    or even one model for one customer. There is another dimension to this – companies
    are rolling out new models at a pace that would not have been possible to manage
    without a pipeline that trains, evaluates, tests, and deploys a new model automatically.
    Cloud computing has provided a perfect foundation for the streaming service provider
    to perform these ML activities to increase customer satisfaction.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 公司还在为每个客户细分市场或甚至为单个客户创建越来越多的模型。还有一个维度——公司正在以没有自动训练、评估、测试和部署新模型的管道就无法管理的速度推出新模型。云计算为流媒体服务提供商提供了一个完美的基础，以执行这些机器学习活动，提高客户满意度。
- en: If ML is something that interests you, or if you are already working in the
    field of ML in any capacity, this book is the right place for you. You will be
    learning all things ML, and how to build, train, host, and manage ML models in
    the cloud with actual use cases and datasets along with me throughout the book.
    I assume you come to this book with a good understanding of ML and cloud computing.
    The purpose of this first chapter is to set the level of the concepts and terminology
    of the two technologies, to define the ML life cycle that is going to be the core
    of this book, and to provide a crash course on Amazon Web Services and its core
    services, which will be mentioned throughout the book.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 如果机器学习是您感兴趣的事情，或者您已经在任何形式上从事机器学习领域的工作，这本书就是您正确的选择。您将学习所有关于机器学习的内容，以及如何与我一起在书中使用实际案例和数据集构建、训练、托管和管理机器学习模型。我假设您对机器学习和云计算有很好的理解。本章的目的是设定两种技术的概念和术语水平，定义本书的核心——机器学习生命周期，并提供关于亚马逊网络服务和其核心服务的快速课程，这些将在本书中提及。
- en: 'In this chapter, we will cover the following:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下内容：
- en: Understanding ML and its life cycle
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解机器学习及其生命周期
- en: Building ML in the cloud
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在云中构建机器学习
- en: Exploring AWS essentials for ML
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索AWS机器学习基础知识
- en: Setting up AWS environment
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置AWS环境
- en: Technical requirements
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: For this chapter, you will need a computer with an internet connection and a
    browser to perform the basic AWS account setup in order to run Amazon SageMaker
    setup and code samples in the following chapters.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 为了本章，你需要一台连接到互联网的计算机和浏览器来执行以下章节中Amazon SageMaker设置和代码样本的基本AWS账户设置。
- en: Understanding ML and its life cycle
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解机器学习及其生命周期
- en: At its core, ML is a process that uses computer algorithms to automatically
    discover the underlying patterns and trends in a **dataset** (which is a collection
    of **observations** with **features**, also known as **variables**), make a prediction,
    obtain the error measure against a **ground truth** (if provided), and "learn"
    from the error with an **optimization** process in order to make a prediction
    next time. At the end of the process, an **ML model** is fitted or trained so
    that it can be used to apply the knowledge it learned to apply a decision based
    on the features of a new observation. The first part, generating a model, is called
    **training**, while the second part is called **prediction** or **inference**.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在其核心，机器学习是一个使用计算机算法自动发现数据集（这是一个包含具有**特征**的**观察**集合，也称为**变量**）中的潜在模式和趋势的过程，进行预测，获取与真实值（如果提供）的错误度量，并通过**优化**过程从错误中“学习”，以便下次做出预测。在过程的最后，一个**机器学习模型**被拟合或训练，以便它可以被用来应用其学到的知识，根据新观察的特征做出决策。这个过程的第一部分，生成模型，被称为**训练**，而第二部分被称为**预测**或**推理**。
- en: There are three basic types of ML algorithms based on the way the training process
    takes place – supervised learning, unsupervised learning, and reinforcement learning.
    A **supervised learning** algorithm is given a set of observations with a ground
    truth from the past. A ground truth is a key ingredient to train a supervised
    learning algorithm, as it drives how the model learns and makes future predictions
    – hence the "supervised" in the name, as the learning is supervised by the ground
    truth. **Unsupervised learning**, on the other hand, does not require a ground
    truth for the observations to learn how to apply the prediction. It finds patterns
    and relationships solely based on the features of the observations. However, a
    ground truth, if it exists, would still help us validate and understand the accuracy
    of the model in the case of unsupervised learning. **Reinforcement learning**,
    often abbreviated as **RL**, has quite a different learning paradigm compared
    to the previous two. RL consists of an **agent** interacting with an **environment**
    with a set of **actions**, and corresponding **rewards** and **states**. The learning
    is not guided by a ground truth, rather by optimizing cumulative rewards with
    actions. The trained model in the end would be able to perform actions autonomously
    in an environment that would achieve the best rewards.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 基于训练过程的方式，机器学习算法主要有三种基本类型——监督学习、无监督学习和强化学习。**监督学习**算法被提供一组带有过去真实值的观察数据。真实值是训练监督学习算法的关键成分，因为它决定了模型如何学习和做出未来的预测——因此，名称中的“监督”一词，意味着学习是在真实值的监督下进行的。另一方面，**无监督学习**不需要真实值来学习如何应用预测。它仅根据观察的特征来寻找模式和关系。然而，如果存在真实值，它仍然可以帮助我们验证和理解无监督学习情况下模型的准确性。**强化学习**，通常缩写为**RL**，与前面两种相比，具有相当不同的学习范式。强化学习由一个**代理**与一组**动作**、相应的**奖励**和**状态**的**环境**进行交互。学习不是由真实值引导的，而是通过优化累积奖励与动作来进行的。最终训练好的模型将能够在环境中自主执行动作以实现最佳奖励。
- en: An ML life cycle
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 机器学习生命周期
- en: 'Now we have a basic understanding of what ML is, we can go broader to see what
    a typical ML life cycle looks like, as illustrated in the following figure:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们对机器学习有了基本的了解，我们可以更广泛地看看典型的机器学习生命周期是什么样的，如下面的图所示：
- en: '![Figure 1.1 – The ML life cycle'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '![图1.1 – 机器学习生命周期'
- en: '](img/B17447_01_001.jpg)'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片 B17447_01_001.jpg](img/B17447_01_001.jpg)'
- en: Figure 1.1 – The ML life cycle
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.1 – 机器学习生命周期
- en: Problem framing
  id: totrans-21
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 问题界定
- en: 'The first step in a successful ML life cycle is framing the business problem
    into an ML problem. Business problems come in all shapes and forms. For example,
    *"How do we increase sales of a newly released product?"* and *"How do we improve
    the QA Quality Assessment (QA) throughput on the assembly line?"* Business problems
    such as these, usually qualitative, are not something ML can be directly applied
    to. But looking at the business problem statement, we should think about how it
    can be translated into an ML problem. We should ask questions like the following:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 成功的机器学习生命周期中的第一步是将业务问题框架化为机器学习问题。业务问题形形色色。例如，*"我们如何增加新产品的销售额？"* 和 *"我们如何提高装配线上的QA质量评估（QA）吞吐量？"*
    这样的业务问题通常是定性的，不是机器学习可以直接应用的问题。但是，在审视业务问题陈述时，我们应该考虑如何将其转化为机器学习问题。我们应该提出以下问题：
- en: '*"What are the key factors to the success of product sales?"*'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*"产品销售成功的关键因素是什么？"*'
- en: '*"Who are the people that are most likely to purchase the product?"*'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*"哪些人最有可能购买该产品？"*'
- en: '*"What is the bottleneck in throughput in the assembly line?"*'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*"装配线中的吞吐量瓶颈在哪里？"*'
- en: '*"How do we know whether an item is defective? What differentiates a defective
    one from a normal one?"*'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*"我们如何知道一个项目是否有缺陷？一个有缺陷的项目与一个正常的项目有什么区别？"*'
- en: 'By asking questions like these, we start to dig into the realm of **pattern
    recognition**, a process of recognizing patterns from the data at hand. Having
    the right questions that can be formulated into pattern recognition, we are a
    step closer to framing an ML problem. Then, we also need to understand what the
    key metric is to gauge the success of an approach, regardless of whether we use
    ML or other approaches. It is quite straightforward to measure, for example, daily
    product sales. We can also improve sales by targeting advertisements to the people
    that are mostly like to convert. Then, we get questions like the following:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 通过提出这些问题，我们开始深入到**模式识别**的领域，这是一个从现有数据中识别模式的过程。有了可以形成模式识别的正确问题，我们就更接近于框架化机器学习问题。然后，我们还需要了解衡量方法成功的关键指标是什么，无论我们使用机器学习还是其他方法。例如，衡量每日产品销售额是非常直接的。我们还可以通过针对最有可能转化的受众投放广告来提高销售额。然后，我们得到以下问题：
- en: '*"How do we measure the conversion?"*'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*"我们如何衡量转化率？"*'
- en: '*"What are the common characteristics of the consumers who have bought this
    product?"*'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*"购买过该产品的消费者有哪些共同特征？"*'
- en: More importantly, we need to find out whether there is even a target metric
    for us to predict! If there are targets, we can frame the problem as an ML problem,
    such as predicting future sales (supervised learning and regression), predicting
    whether a customer is going to buy a certain product or not (supervised learning
    and classification), or identifying defective items (supervised learning and classification).
    Questions that do not have a clear target to predict would fall into an unsupervised
    learning task in order to apply the pattern discovered in the data to future data
    points. Use cases where the target is dynamic and of high uncertainty, such as
    autonomous driving, robotic control, and stock price prediction, are good candidates
    for RL.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 更重要的是，我们需要弄清楚是否甚至有一个目标指标供我们进行预测！如果有目标，我们可以将问题框架化为一个机器学习问题，例如预测未来的销售额（监督学习和回归）、预测一个客户是否会购买某个产品（监督学习和分类），或者识别有缺陷的项目（监督学习和分类）。没有明确预测目标的问题将落入无监督学习任务中，以便将发现的数据模式应用于未来的数据点。目标动态且高度不确定的用例，如自动驾驶、机器人控制和股价预测，是强化学习的良好候选。
- en: Data exploration and engineering
  id: totrans-31
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 数据探索和工程
- en: Sourcing data is the first step of a successful ML modeling journey. Once we
    have clearly defined both our business problem and ML problem with a basic understanding
    of the scope of the problem – meaning, what are the metrics and what are the factors
    – we can start gathering the data needed for ML. Data scientists explore the data
    sources to find out relevant information that could support the modeling. Sometimes,
    the data being captured and collected within the organization is easily accessible.
    Sometimes, the data is available outside your organization and would require you
    to reach out and ask for data sharing permission.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 获取数据是成功机器学习建模之旅的第一步。一旦我们清楚地定义了业务问题和机器学习问题，并对问题的范围有一个基本了解——即，什么是指标，什么是因素——我们就可以开始收集机器学习所需的数据。数据科学家探索数据源，以找出可能支持建模的相关信息。有时，组织内部捕获和收集的数据很容易获取。有时，数据在组织外部可用，可能需要你伸出援手并请求数据共享许可。
- en: Sometimes, datasets can be sourced from the public internet and institutions
    that focus on creating and sharing standardized datasets for ML purposes, which
    is especially true for computer vision and natural language understanding use
    cases. Furthermore, data can arrive through streaming from websites and applications.
    Connections to a database, data lake, data warehouse, and streaming source need
    to be set up. Data needs to be integrated into the ML platform for processing
    and engineering before an ML model can be trained.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，数据集可以从公共互联网和专注于为机器学习目的创建和共享标准化数据集的机构中获取，这在计算机视觉和自然语言理解用例中尤其如此。此外，数据可以通过网站和应用程序的流式传输到达。需要设置与数据库、数据湖、数据仓库和流源的联系。在训练机器学习模型之前，需要将数据集成到机器学习平台中进行处理和工程。
- en: Managing data irregularity and heterogeneity is the second step in the ML life
    cycle. Data needs to be processed to remove irregularities such as missing values,
    incorrect data entry, and outliers because many ML algorithms have statistical
    assumptions that these irregularities would violate and render the modeling ineffective
    (if not invalid). For example, the linear regression model assumes that an error
    or residual is normally distributed, therefore it is important to check whether
    there are outliers that could contribute to such a violation. If so, we must perform
    the necessary preprocessing tasks to remedy it. Common preprocessing approaches
    include, but are not limited to, removal of invalid entries, removal of extreme
    data points (also known as outliers), and filling in missing values. Data also
    need to be processed to remove heterogeneity across features and normalize them
    into the same scale, as some ML algorithms are sensitive to the scale of the features
    and would develop a bias towards features with a larger scale. Common approaches
    include **min-max scaling** and **z-standardization** (**z-score**).
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 管理数据不规则性和异质性是机器学习生命周期的第二步。需要处理数据以消除不规则性，例如缺失值、错误的数据输入和异常值，因为许多机器学习算法都有统计假设，这些不规则性会违反假设并使建模无效（如果不合法）。例如，线性回归模型假设误差或残差是正态分布的，因此检查是否存在可能导致此类违规的异常值非常重要。如果是这样，我们必须执行必要的预处理任务来纠正它。常见的预处理方法包括但不限于删除无效条目、删除极端数据点（也称为异常值）和填充缺失值。数据还需要进行处理，以消除特征之间的异质性并将它们归一化到相同的尺度，因为某些机器学习算法对特征的尺度敏感，并可能对尺度较大的特征产生偏差。常见的方法包括**最小-最大缩放**和**z标准化**（**z分数**）。
- en: Visualization and data analysis is the third step in the ML life cycle. Data
    visualization allows data scientists to easily understand visually how data is
    distributed and what the trends are in the data. **Exploratory Data Analysis**
    (**EDA**) allows data scientists to understand the statistical behavior of the
    data at hand, figure out the information that has predictive power to be included
    in the modeling process, and eliminate any redundancy in the data, such as duplicated
    entries, multicollinearity, and unimportant features.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 可视化和数据分析是机器学习生命周期的第三步。数据可视化使数据科学家能够轻松地从视觉上理解数据的分布和数据的趋势。**探索性数据分析**（**EDA**）使数据科学家能够理解手头数据的统计行为，找出具有预测力的信息并将其包含在建模过程中，并消除数据中的任何冗余，例如重复条目、多重共线性和不重要的特征。
- en: Feature engineering is the fourth step in the ML life cycle. Even with the various
    sources from which we are collecting data, ML models oftentimes benefit from engineered
    features that are calculated from existing features. For example, **Body Mass
    Index** (**BMI**) is a well-known engineered feature, calculated using the height
    and weight of a person, and is also an established feature (or risk factor, in
    clinical terms) that predicts certain diseases rather than height or weight alone.
    Feature engineering often requires extensive experience in the domain and experimentation
    to find out what recipes are adding predictive power to the modeling.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 特征工程是机器学习生命周期的第四步。即使我们从各种来源收集数据，机器学习模型通常也受益于从现有特征计算出的工程化特征。例如，**体质指数**（**BMI**）是一个众所周知的工程化特征，它是通过计算一个人的身高和体重得出的，并且也是一个已确立的特征（或临床术语中的风险因素），它预测某些疾病而不是仅仅身高或体重。特征工程通常需要在该领域有丰富的经验并进行实验，以找出哪些配方能为建模增加预测能力。
- en: Modeling and evaluation
  id: totrans-37
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 建模和评估
- en: For a data scientist, ML modeling is the most exciting part of the life cycle
    (I think so; I hope you agree with me). You've formulated the problem in the language
    of ML. You've collected, processed the data, and looked at the underlying trends
    that give you enough hints to build an ML model. Now, it's time to build your
    first model for the dataset, but wait – what model, what algorithm, and what metric
    do we use to evaluate the performance? Well, that's the core of modeling and evaluation.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 对于数据科学家来说，机器学习建模是生命周期中最激动人心的部分（我认为是这样；希望你也同意）。你已经用机器学习的语言表述了问题。你已经收集、处理了数据，并观察到了那些能给你足够提示以构建机器学习模型的基本趋势。现在，是时候为数据集构建你的第一个模型了，但是等等——我们使用什么模型、什么算法以及什么指标来评估性能呢？嗯，这就是建模和评估的核心。
- en: The goal is to explore and find out a satisfactory ML model, with an objective
    metric, from all possible algorithms, feature sets, and hyperparameters. This
    is definitely not an easy task and requires extensive experience. Depending on
    the problem type (whether it's classification, regression, or reinforcement learning),
    data type (as in whether it's tabular, text, or image data), data distribution
    (is there a class imbalance or outliers?), and domain (medical, financial, or
    industrial), you can narrow down the choice of algorithms to a handful. With each
    of these algorithms, there are hyperparameters that control the behavior and performance
    of the algorithm on the provided data. What is also needed is a definition of
    an objective metric and a threshold that meets the business requirement, using
    the metric to guide you toward the best model. You may blindly choose one or two
    algorithm-hyperparameter combinations for your project, but you may not reach
    the optimal solution in just one or two trials. It is rather typical for a data
    scientist to try out hundreds if not thousands of combinations. How is that possible?
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 目标是探索并从所有可能的算法、特征集和超参数中找到一个令人满意的机器学习模型，并使用客观指标。这绝对不是一项容易的任务，需要丰富的经验。根据问题类型（无论是分类、回归还是强化学习）、数据类型（如表格、文本或图像数据）、数据分布（是否存在类别不平衡或异常值？）以及领域（医疗、金融或工业），你可以将算法的选择缩小到几个。对于这些算法中的每一个，都有控制算法在提供的数据上的行为和性能的超参数。还需要定义一个符合业务要求的客观指标和阈值，使用该指标来指导你找到最佳模型。你可能会盲目地为你项目选择一两个算法-超参数组合，但你可能无法在仅仅一两次尝试中就达到最优解。数据科学家尝试数百甚至数千种组合是很常见的。这是如何实现的呢？
- en: This is why establishing a streamlined model training and evaluation process
    is such a critical step in the process. Once the model training and evaluation
    is automated, you can simply launch the process that helps you automatically iterate
    through the experimentations among algorithms and hyperparameters, and compare
    the metric performance to find out the optimal solution. This process is called
    **hyperparameter tuning** or **hyperparameter optimization**. If multiple algorithms
    are the subject of tuning, it can also be called **multi-algorithm hyperparameter
    tuning**.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是为什么建立一个简化的模型训练和评估流程在过程中是一个如此关键的步骤。一旦模型训练和评估自动化，你就可以简单地启动一个过程，帮助你自动迭代算法和超参数之间的实验，并比较指标性能以找到最优解。这个过程被称为**超参数调整**或**超参数优化**。如果多个算法是调整的对象，它也可以被称为**多算法超参数调整**。
- en: Production – predicting, monitoring, and retraining
  id: totrans-41
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 生产 - 预测、监控和再训练
- en: An ML model needs to be put in use in order to have an impact on the business.
    However, the production process is different from that of a typical software application.
    Unlike other software applications where business logic can be pre-written and
    tested exhaustively with edge cases before production, there is no guarantee that
    once the model is trained and evaluated, it will be performing at the same level
    in production as in the testing environment. This is because ML models use probabilistic,
    statistical, and fuzzy logic to infer an outcome for each incoming data point,
    and the testing, that is, the model evaluation, is typically done without true
    prior knowledge of production data. The best a data scientist can do prior to
    production is to create training data from a sample that closely represents real-world
    data, and evaluate the model with an out-of-sample strategy in order to get an
    unbiased idea of how the model would perform on unseen data. While in production,
    the incoming data is completely unseen by the model; how to evaluate live model
    performance, and how to take actions on that evaluation, are critical topics for
    productionizing ML models.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 机器学习模型需要投入使用才能对业务产生影响。然而，其生产过程与典型软件应用的生产过程不同。与其他软件应用不同，业务逻辑可以在生产前预先编写并彻底测试边缘情况，而一旦模型被训练和评估，并不能保证其在生产环境中的表现与测试环境中的表现相同。这是因为机器学习模型使用概率、统计和模糊逻辑来推断每个输入数据点的结果，而测试，即模型评估，通常是在对生产数据没有真正先验知识的情况下进行的。数据科学家在生产前能做的最好的事情是从一个紧密代表现实世界数据的样本中创建训练数据，并使用样本外策略评估模型，以获得模型在未见数据上表现的无偏看法。在生产中，模型完全看不到输入数据；如何评估实时模型性能，以及如何根据评估采取行动，是生产化机器学习模型的关键话题。
- en: Model performance can be monitored with two approaches. One that is more straightforward
    is to capture the ground truth for the unseen data and compare the prediction
    against the ground truth. The second approach is to use the drift in data as a
    proxy to determine whether the model is going to behave in an expected way. In
    some use cases, the first approach is not feasible, as the true outcome (the ground
    truth) may lag behind the event for a long time. For example, in a disease prediction
    use case, where the purpose of ML modeling is to help a healthcare provider to
    find a likely outcome in the future, say three months, with current health metrics,
    it is not possible to gather a true ground truth less than three months or even
    later, depending on the onset of the disease. It is, therefore, impractical to
    only fix the model after obtaining it, should it be proven ineffective.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 模型性能可以通过两种方法进行监控。一种更直接的方法是捕获未见数据的真实情况，并将预测与真实情况进行比较。第二种方法是使用数据的漂移作为代理来确定模型是否将以预期的方式表现。在某些用例中，第一种方法不可行，因为真实结果（真实情况）可能落后于事件很长时间。例如，在疾病预测用例中，机器学习建模的目的是帮助医疗保健提供者在当前健康指标下找到未来三个月内可能的结果，在这种情况下，不可能在不到三个月或更晚的时候收集到真实情况，这取决于疾病的发作时间。因此，仅在生产后修复模型是不切实际的，如果证明其无效。
- en: 'The second approach lies in the premise that an ML model learns statistically
    and probabilistically from the training data and would behave differently when
    a new dataset with different statistical characteristics is provided. A model
    would return gibberish when data does not come from the same statistical distribution.
    Therefore, by detecting the drift in data, it gives a more real-time estimate
    of how the model is going to perform. Take the disease prediction use case once
    again as an example: when data about a group of patients in their 30s is sent
    to an ML model that is trained on data with an average age of 65 for prediction,
    it is likely that the model is going to be clueless about these new patients.
    So we need to take action.'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 第二种方法基于这样一个前提：机器学习模型从训练数据中统计和概率性地学习，当提供具有不同统计特征的新数据集时，其行为可能会有所不同。当数据不是来自相同的统计分布时，模型会返回无意义的输出。因此，通过检测数据的漂移，它提供了对模型将如何表现的一个更实时的估计。以疾病预测用例为例：当关于30多岁患者群体的数据被发送到一个在平均年龄为65岁的数据上训练的机器学习模型进行预测时，该模型很可能对这些新患者一无所知。因此，我们需要采取行动。
- en: Retraining and updating the model makes sure that it stays performant for future
    data. Being able to capture the ground truth and detecting the data drift helps
    create a retraining strategy at the right time. The data that has drifted and
    the ground truth are the great input into the retraining process, as they will
    help the model to cover a wider statistical distribution.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 重新训练和更新模型确保它在未来的数据中保持性能。能够捕捉到真实情况和检测数据漂移有助于在正确的时间制定重新训练策略。漂移的数据和真实情况是重新训练过程中的重要输入，因为它们将帮助模型覆盖更广泛的统计分布。
- en: Now that we have a clear idea of the basics of the uses and life cycle of ML
    development, let's take the next step and investigate how it can work with the
    cloud.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经清楚地了解了机器学习开发的基本用途和生命周期，让我们进一步探讨它如何与云协同工作。
- en: Building ML in the cloud
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在云端构建机器学习
- en: 'Cloud computing is a technology that delivers on-demand IT resources that can
    grow and shrink at any time, depending on the need. There is no more buying and
    maintaining computer servers or data centers. It is much like utilities in your
    home, such as water, which is there when you turn on the faucet. If you turn it
    all the way, you get a high-pressure water stream. If you turn it down, you conserve
    water. If you don''t need it anymore, you turn it off completely. With this model,
    developers and teams get the following benefits from on-demand cloud computing:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 云计算是一种技术，它提供按需IT资源，可以根据需要随时增长和缩小。不再需要购买和维护计算机服务器或数据中心。这就像您家里的公用事业一样，比如水，当你打开水龙头时它就在那里。如果你完全打开，你会得到高压水流。如果你调低，你会节约用水。如果你不再需要它，你可以完全关闭。使用这种模式，开发者和团队可以从按需云计算中获得以下好处：
- en: '**Agility**: Quickly spin up resources as you need them. Develop and roll out
    new apps, experiment with new ideas, and fail quickly without risks.'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**敏捷性**：根据需要快速启动资源。快速开发并推出新应用，尝试新想法，快速失败而无需承担风险。'
- en: '**Elasticity**: Scale your resources as you need them. Cloud computing takes
    away "undifferentiated heavy lifting" – racking up additional servers and planning
    capacity for the future. These are things that don''t help address your core business
    problems.'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**弹性**：根据需要扩展您的资源。云计算消除了“无差别的繁重劳动”——堆叠额外的服务器和为未来规划容量。这些都是不能帮助解决您核心业务问题的东西。'
- en: '**Global availability**: With a click of a button, you can spin up resources
    that are closest to your customers/users without relocating your physical compute
    resources.'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**全球可用性**：只需点击一下按钮，您就可以启动位于您客户/用户附近的最接近的资源，而无需重新安置您的物理计算资源。'
- en: '*How does this impact the field of ML?* As compute resources become easier
    to acquire, information exchange becomes much more frequent. As that happens,
    more data is generated and stored. And more data means more opportunities to train
    more accurate ML models. The agility, elasticity, and scale that cloud computing
    provides accelerates the development and application of ML models from weeks or
    months down to a much shorter cycle so that developers can now generate and improve
    ML models faster than ever. Developers are no longer constrained by physical compute
    resources available to them. With better ML models, businesses can make better
    decisions and provide better product experiences to customers.'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '*这对机器学习领域有何影响？* 随着计算资源获取变得更加容易，信息交换变得更加频繁。当这种情况发生时，会产生和存储更多的数据。更多的数据意味着有更多机会训练更准确的机器学习模型。云计算提供的灵活性、弹性和可扩展性加速了机器学习模型从几周到几个月的开发和应用周期，缩短到更短的周期，这样开发者现在可以比以往任何时候都更快地生成和改进机器学习模型。开发者不再受限于他们可用的物理计算资源。有了更好的机器学习模型，企业可以做出更好的决策，并为顾客提供更好的产品体验。'
- en: For cloud computing, we will be using Amazon Web Services, which is the provider
    of Amazon SageMaker Studio, throughout the book.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，我们将使用亚马逊网络服务（Amazon Web Services）作为云计算提供商，它是亚马逊SageMaker Studio的提供者。
- en: Exploring AWS essentials for ML
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索AWS机器学习基础
- en: '**Amazon Web Services** (**AWS**) offers cloud computing resources to developers
    of all kinds to create applications and solutions for their businesses. AWS manages
    the technology and infrastructure in a secure environment and a scalable fashion,
    taking away the undifferentiated heavy lifting of infrastructure management from
    developers. AWS provides a broad range of services, including ML, artificial intelligence,
    the internet of things, analytics, and application development tools. These are
    built on top of the following key areas – **compute**, **storage**, **databases**,
    and **security**. Before we start our journey with Amazon SageMaker Studio, which
    is one of the ML offerings from AWS, it is important to know the core services
    that are commonly used while developing your ML projects on Amazon SageMaker Studio.'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '**亚马逊网络服务**（**AWS**）为各种开发者提供云计算资源，以创建他们业务的应用程序和解决方案。AWS 在一个安全的环境中并以可扩展的方式管理技术和基础设施，从而从开发者手中移除了基础设施管理的繁重工作。AWS
    提供了广泛的服务，包括机器学习、人工智能、物联网、分析和应用程序开发工具。这些服务建立在以下关键领域之上——**计算**、**存储**、**数据库**和**安全**。在我们开始使用亚马逊
    SageMaker Studio 的旅程之前，这是 AWS 提供的机器学习服务之一，了解在亚马逊 SageMaker Studio 开发机器学习项目时常用的核心服务非常重要。'
- en: Compute
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 计算
- en: For ML in the cloud, developers need computational resources in all aspects
    of the life cycle. **Amazon Elastic Compute Cloud** (**Amazon EC2**) is the most
    fundamental cloud computing environment for developers to process, train, and
    host ML models. Amazon EC2 provides a wide range of compute instance types for
    many purposes, such as compute-optimized instances for compute-intensive work,
    memory-optimized instances for applications that have a large memory footprint,
    and **Graphics Processing Unit** (**GPU**)-accelerated instances for deep learning
    training.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 对于云中的机器学习，开发者需要在生命周期的各个方面都需要计算资源。**亚马逊弹性计算云**（**Amazon EC2**）是开发者处理、训练和托管机器学习模型的最基本的云计算环境。Amazon
    EC2 提供了多种计算实例类型，适用于各种目的，如计算密集型工作的计算优化实例、具有大内存占用应用程序的内存优化实例，以及用于深度学习训练的**图形处理单元**（**GPU**）加速实例。
- en: Amazon SageMaker also offers on-demand compute resources for ML developers to
    run processing, training, and model hosting. Amazon SageMaker's ML instances build
    on top of Amazon EC2 instances and equip the instances with a fully managed, optimized
    versions of popular ML frameworks such as TensorFlow, PyTorch, MXNet, and scikit-learn,
    which are optimized for Amazon EC2 compute instances. Developers do not need to
    manage the provisioning and patching of the ML instances, so they can focus on
    the ML life cycle.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 亚马逊 SageMaker 也为机器学习开发者提供按需计算资源，以便运行处理、训练和模型托管。亚马逊 SageMaker 的机器学习实例建立在亚马逊 EC2
    实例之上，并为实例配备了完全管理的、优化的流行机器学习框架版本，如 TensorFlow、PyTorch、MXNet 和 scikit-learn，这些框架针对亚马逊
    EC2 计算实例进行了优化。开发者无需管理机器学习实例的配置和修补，因此可以专注于机器学习生命周期。
- en: Storage
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 存储
- en: While conducting an ML project, developers need to be able to access files,
    store codes, and store artifacts. Reliable storage is crucial to an ML project.
    AWS provides several types of storage options for ML development. **Amazon Simple
    Storage Service** (**Amazon S3**) and **Amazon Elastic File System** (**Amazon
    EFS**) are the two that are most relevant to the development of ML projects in
    Amazon SageMaker Studio.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在进行机器学习项目时，开发者需要能够访问文件、存储代码和存储工件。可靠的存储对于机器学习项目至关重要。AWS 为机器学习开发提供了多种存储选项。**亚马逊简单存储服务**（**Amazon
    S3**）和**亚马逊弹性文件系统**（**Amazon EFS**）是亚马逊 SageMaker Studio 中开发机器学习项目最相关的两种。
- en: Amazon S3 is an object storage service that allows developers to store any amount
    of data with high security, availability, and scalability. ML developers can store
    structured and unstructured data, and ML models with versioning on Amazon S3\.
    Amazon S3 can also be used to build a data lake for analytics and to store backups
    and archives.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon S3 是一种对象存储服务，允许开发者以高安全性、可用性和可扩展性存储任何数量的数据。机器学习开发者可以在 Amazon S3 上存储结构化和非结构化数据，以及带有版本控制的机器学习模型。Amazon
    S3 还可用于构建用于分析的数据库湖和存储备份和归档。
- en: Amazon EFS provides a fully managed, serverless filesystem that allows developers
    to store and share files across users on the filesystem without any storage provisioning,
    as the filesystem increases and decreases its capacity automatically when you
    add or delete files. It is often used in a **High-Performance Cluster** (**HPC**)
    setting and applications where parallel or simultaneous data access across threads,
    processing tasks, compute instances, and users with high throughput are required.
    As Amazon SageMaker Studio embeds an Amazon EFS filesystem, each user on Amazon
    SageMaker Studio gets a home directory for storing and accessing data, codes,
    and notebooks.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon EFS提供了一种完全托管、无服务器的文件系统，允许开发者在文件系统中存储和共享文件，无需进行任何存储配置，因为当您添加或删除文件时，文件系统会自动增加或减少其容量。它通常用于**高性能集群**（**HPC**）设置以及需要跨线程、处理任务、计算实例和用户进行并行或同时数据访问且具有高吞吐量的应用程序。由于Amazon
    SageMaker Studio集成了Amazon EFS文件系统，因此Amazon SageMaker Studio上的每个用户都有一个用于存储和访问数据、代码和笔记本的本地目录。
- en: Database and analytics
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据库和数据分析
- en: Besides storage options, where data is saved as a file or an object, AWS users
    can store and access data at a data point level using database services such as
    **Amazon Relational Database Service** (**Amazon RDS**) and **Amazon DynamoDB**.
    AWS Analytics services such as **AWS Glue** and **Amazon Athena** provide capabilities
    in storing, querying, and data processing that are critical in the early phase
    of the ML life cycle.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 除了存储选项，数据作为文件或对象保存之外，AWS用户可以使用数据库服务如**Amazon关系数据库服务**（**Amazon RDS**）和**Amazon
    DynamoDB**在数据点级别存储和访问数据。AWS分析服务如**AWS Glue**和**Amazon Athena**在机器学习生命周期的早期阶段提供了存储、查询和数据处理的必要功能。
- en: For an ML project, relational databases are a common source of data for modeling.
    Amazon RDS is a cost-efficient and scalable relational database service in the
    cloud. It offers six database engines, including open sourced PostgreSQL, MySQL,
    and MariaDB, and the Oracle and SQL Server commercial databases. Infrastructure
    provisioning and management are made easy with Amazon RDS.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 对于机器学习项目，关系数据库是建模的常见数据来源。Amazon RDS是云中的一种成本效益高且可扩展的关系数据库服务。它提供包括开源的PostgreSQL、MySQL和MariaDB以及Oracle和SQL
    Server商业数据库在内的六种数据库引擎。使用Amazon RDS可以简化基础设施的配置和管理。
- en: Another popular database is NoSQL, which uses key-value pairs as the data structure.
    Unlike relational databases, stringent schema requirements for tables are not
    required in NoSQL databases. Users can input data with a flexible schema for each
    row without needing to change the schema. Amazon DynamoDB is a key-value and document
    database that is fully managed, serverless, and highly scalable.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个流行的数据库是NoSQL，它使用键值对作为数据结构。与关系数据库不同，NoSQL数据库不需要对表有严格的模式要求。用户可以为每一行数据输入具有灵活模式的资料，而无需更改模式。Amazon
    DynamoDB是一个完全托管、无服务器且高度可扩展的键值和文档数据库。
- en: AWS Glue is a data integration service that has several features to help developers
    discover and transform data from sources for analytics and ML. The AWS Glue Data
    Catalog offers a persistent metadata store as a central repository for all your
    data sources, such as tables in Amazon S3, Amazon RDS, and Amazon DynamoDB. Developers
    can view all their tables and metadata such as the schema and time of update in
    one place – AWS Glue Data Catalog. AWS Glue's ETL service helps streamline the
    extract, transform, and load steps right after data is discovered and cataloged
    in the AWS Glue Data Catalog.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: AWS Glue是一种数据集成服务，具有帮助开发者从源数据中发现和转换数据以进行分析和机器学习的几个功能。AWS Glue数据目录提供了一个持久元数据存储，作为所有数据源的中心存储库，例如Amazon
    S3、Amazon RDS和Amazon DynamoDB中的表。开发者可以在一个地方查看所有他们的表和元数据，如模式和时间更新——AWS Glue数据目录。AWS
    Glue的ETL服务有助于在AWS Glue数据目录中发现和编目数据后，立即简化提取、转换和加载步骤。
- en: Amazon Athena is an analytics service that gives developers an interactive and
    serverless query experience. As a serverless service, developers do not need to
    think about the infrastructure underneath but instead focus on their data queries.
    You can easily point Amazon Athena to your data in Amazon S3 with a schema definition
    to start querying. Amazon Athena integrates natively with the AWS Glue Data Catalog
    to allow you to quickly and easily query against your data from all sources and
    services. Amazon Athena is also heavily integrated into several aspects of Amazon
    SageMaker Studio, which we will talk about in more detail throughout this book.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon Athena 是一种分析服务，为开发者提供了一种交互式和无服务器的查询体验。作为一个无服务器服务，开发者不需要考虑底层的基础设施，而是专注于他们的数据查询。您可以通过一个模式定义轻松地将
    Amazon Athena 指向 Amazon S3 中的数据，以开始查询。Amazon Athena 与 AWS Glue 数据目录无缝集成，允许您快速轻松地查询来自所有来源和服务的您的数据。Amazon
    Athena 还与 Amazon SageMaker Studio 的多个方面高度集成，我们将在本书的后续章节中详细介绍。
- en: Security
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安全性
- en: Security is job zero when you develop your applications, access data, and train
    ML models on AWS. The access and identity control aspect of the security is governed
    by the **AWS Identity and Access Management** (**IAM**) service. Any control over
    services, cloud resources, authentication, and authorization can be granularly
    managed by AWS IAM.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 在 AWS 上开发应用程序、访问数据和训练 ML 模型时，安全性是首要任务。安全性的访问和身份控制方面由 **AWS 身份和访问管理**（**IAM**）服务管理。AWS
    IAM 可以对服务、云资源、身份验证和授权进行细粒度管理。
- en: 'Key concepts in IAM are the IAM user, group, role, and policy. Each person
    who logs onto AWS would assume an IAM user. Each IAM user has a list of IAM policies
    attached that governs the resources and actions in AWS that this IAM user can
    command and access. An IAM user can also inherit IAM policies from that of an
    IAM group, a collection of users who have similar responsibilities. An IAM role
    is similar to an IAM user in that it has a set of permissions to access resources
    and to perform actions. An IAM role differs from an IAM user in that a role can
    be assumed by users, applications, or services. For example, you can create and
    assign an AWS service role to an application in the cloud to permit what services
    and resources this application can access. An IAM user who has permission to an
    application can securely execute the application without worrying that the application
    would reach out to unauthorized resources. More information can be found here:
    [https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles.html](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles.html).'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: IAM 的关键概念包括 IAM 用户、组、角色和策略。每个登录 AWS 的人都会假定一个 IAM 用户。每个 IAM 用户都有一系列 IAM 策略附加，这些策略控制着
    AWS 中该 IAM 用户可以命令和访问的资源及操作。IAM 用户还可以从具有相似责任的 IAM 组继承 IAM 策略。IAM 角色与 IAM 用户类似，因为它有一组权限来访问资源和执行操作。IAM
    角色与 IAM 用户的不同之处在于，角色可以被用户、应用程序或服务假定。例如，您可以为云中的应用程序创建并分配一个 AWS 服务角色，以允许应用程序访问哪些服务和资源。拥有访问应用程序权限的
    IAM 用户可以安全地执行应用程序，无需担心应用程序会访问未经授权的资源。更多信息请参阅：[https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles.html](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles.html)。
- en: Setting up an AWS environment
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置 AWS 环境
- en: Let's set up an AWS account to start our cloud computing journey. If you already
    have an AWS account, you can skip this section and move on to the next chapter.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们设置一个 AWS 账户，开始我们的云计算之旅。如果您已经有了 AWS 账户，您可以跳过这一部分，继续下一章。
- en: Please go to [https://portal.aws.amazon.com/billing/signup](https://portal.aws.amazon.com/billing/signup)
    and follow the instructions to sign up for an account. You will receive a phone
    call and will need to enter a verification code on the phone keypad as part of
    the process.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 请访问 [https://portal.aws.amazon.com/billing/signup](https://portal.aws.amazon.com/billing/signup)
    并按照说明进行操作以注册账户。您将接到电话，作为流程的一部分，您需要在电话键盘上输入验证码。
- en: When you first create a new AWS account and log in with your email and password,
    you will be logged in as an account root user. However, it is best practice to
    create a new IAM user for yourself with the `AdministratorAccess` policy while
    logged in as the root user, and then swiftly log out and log in again as the IAM
    user that you just created. The root user credential shall only be used to perform
    limited account and service management tasks and shall not be used to develop
    your cloud applications. You should securely store the root user credential and
    lock it away from any other people accessing it.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 当您首次创建新的AWS账户并使用您的电子邮件和密码登录时，您将以账户root用户登录。然而，在以root用户登录的情况下，最好创建一个具有`AdministratorAccess`策略的新IAM用户，然后迅速注销并再次以您刚刚创建的IAM用户登录。root用户凭据应仅用于执行有限的账户和服务管理任务，不应用于开发您的云应用程序。您应安全地存储root用户凭据，并将其锁起来，防止其他人员访问。
- en: 'Here are the steps to create an IAM user:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是创建IAM用户的步骤：
- en: 'Go to the IAM console, select **Users** on the left panel, and then click on
    the **Add user** button:'
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往IAM控制台，在左侧面板中选择**用户**，然后点击**添加用户**按钮：
- en: '![Figure 1.2 – Adding an IAM user in the IAM console'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '![图1.2 – 在IAM控制台中添加IAM用户'
- en: '](img/B17447_01_002.jpg)'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/B17447_01_002.jpg)'
- en: Figure 1.2 – Adding an IAM user in the IAM console
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.2 – 在IAM控制台中添加IAM用户
- en: 'Next, enter a name in **User name** and check the boxes for **Programmatic
    access** and **AWS Management Console access**. For the password fields, you can
    leave the default options. Hit the **Next: Permissions** button to proceed:'
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，在**用户名**中输入一个名称，并勾选**程序访问**和**AWS管理控制台访问**的复选框。对于密码字段，您可以保留默认选项。点击**下一步：权限**按钮继续：
- en: '![Figure 1.3 – Creating a user name and password for an IAM user'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '![图1.3 – 为IAM用户创建用户名和密码'
- en: '](img/B17447_01_003.jpg)'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/B17447_01_003.jpg)'
- en: Figure 1.3 – Creating a user name and password for an IAM user
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.3 – 为IAM用户创建用户名和密码
- en: On the next page, choose **Add user to group** under **Set permissions**. In
    a new account, you do not have any groups. You should click on **Create group**.
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在下一页，选择**设置权限**下的**将用户添加到组**。在新的账户中，您没有任何组。您应该点击**创建组**。
- en: 'In the pop-up dialog, enter `Administrator` in `AdministratorAccess` in the
    policy list, and hit the **Create group** button:'
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在弹出对话框中，在策略列表中的`AdministratorAccess`下输入`Administrator`，然后点击**创建组**按钮：
- en: '![Figure 1.4 – Creating an IAM group with AdministratorAccess'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '![图1.4 – 使用管理员访问权限创建IAM组'
- en: '](img/B17447_01_004.jpg)'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/B17447_01_004.jpg)'
- en: Figure 1.4 – Creating an IAM group with AdministratorAccess
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.4 – 使用管理员访问权限创建IAM组
- en: 'The dialog will close. Make sure the new administrator is selected and hit
    **Next: Tags**. You can optionally add key-value pair tags to the IAM user. Hit
    **Next: Review** to review the configuration. Hit **Create user** when everything
    is correct.'
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对话框将关闭。确保已选择新的管理员，并点击**下一步：标签**。您可以可选地为IAM用户添加键值对标签。点击**下一步：审查**以审查配置。当一切正确时，点击**创建用户**。
- en: 'You will see the following information. Please note down the sign-in URL for
    easy console access, **Access key ID** and **Secret access key** for programmatic
    access, and the one-time password. You can also download the credential as a CSV
    file by clicking the **Download .csv** button:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 您将看到以下信息。请记下登录URL以便于控制台访问，**访问密钥ID**和**秘密访问密钥**用于程序访问，以及一次性密码。您还可以通过点击**下载.csv**按钮将凭据作为CSV文件下载：
- en: '![Figure 1.5 – A new IAM user is created'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '![图1.5 – 创建一个新的IAM用户'
- en: '](img/B17447_01_005.jpg)'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/B17447_01_005.jpg)'
- en: Figure 1.5 – A new IAM user is created
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.5 – 创建一个新的IAM用户
- en: 'After the IAM user creation, you can sign in to your AWS account with the sign-in
    URL and your IAM user. When you first sign in, you will need to provide the automatically
    generated password and then set up a new one. Now, you should note in the top-right
    corner that you are logged in as your newly created IAM user instead of the root
    user:'
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: IAM用户创建后，您可以使用登录URL和IAM用户登录您的AWS账户。当您首次登录时，您需要提供自动生成的密码，然后设置一个新的密码。现在，您应该在右上角注意到您是以新创建的IAM用户而不是root用户登录的：
- en: '![](img/B17447_01_006.jpg)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B17447_01_006.jpg)'
- en: Figure 1.6 – Confirm your newly created credentials
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.6 – 确认您新创建的凭据
- en: 'If you are new to AWS, don''t worry about the cost of trying out AWS. AWS offers
    a free tier for more than 100 services based on the consumption of the service
    and/or within a 12-month period. The services we are going to use throughout the
    book, such as an S3 bucket and Amazon SageMaker, have a free tier for you to learn
    the skills without breaking the bank. The following table is a summary of the
    free tier for the services that are going to be covered in this book:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你刚开始接触 AWS，不必担心尝试 AWS 的成本。AWS 提供了一个基于服务消耗和/或 12 个月内的免费层，超过 100 个服务。本书中我们将使用的服务，如
    S3 存储桶和 Amazon SageMaker，都提供了免费层，让你学习技能而无需花费大量资金。以下表格是对本书将要涵盖的服务免费层的总结：
- en: '![Figure 1.7 – Notable free trial offers from AWS'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 1.7 – AWS 中的显著免费试用优惠'
- en: '](img/B17447_01_007.jpg)'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17447_01_007.jpg)'
- en: Figure 1.7 – Notable free trial offers from AWS
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.7 – AWS 中的显著免费试用优惠
- en: Let's finish off the chapter with a recap of what we've covered.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过回顾本章所涵盖的内容来结束本章。
- en: Summary
  id: totrans-103
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we've described the concept of ML, the steps in an ML life
    cycle, and how to approach a business problem with an ML mindset. We also talked
    about the basics of cloud computing, the role it plays in ML development, and
    the core services on Amazon Web Services. Lastly, we created an AWS account and
    set up a user for us to use throughout the fun ride in this book.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们描述了机器学习的概念、机器学习生命周期中的步骤，以及如何用机器学习思维来处理商业问题。我们还讨论了云计算的基础知识、它在机器学习开发中的作用以及
    Amazon Web Services 上的核心服务。最后，我们创建了一个 AWS 账户，并设置了一个用户，以便我们在本书的愉快旅程中使用。
- en: In the next chapter, we will learn Amazon SageMaker Studio and its component
    from a high-level point of view. We will see how each component is mapped to the
    ML life cycle that we learned in this chapter and will set up our Amazon SageMaker
    Studio environment together.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将从高层次的角度学习 Amazon SageMaker Studio 及其组件。我们将看到每个组件是如何映射到本章所学的机器学习生命周期，并一起设置我们的
    Amazon SageMaker Studio 环境。
