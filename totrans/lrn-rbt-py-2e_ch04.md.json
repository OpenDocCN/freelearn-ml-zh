["```py\n$ roslaunch gazebo_ros empty_world.launch \n```", "```py\n    $ sudo apt-get install ros-kinetic-turtlebot-gazebo  \n```", "```py\n    $ roslaunch turtlebot_gazebo turtlebot_world.launch  \n```", "```py\n    $ sudo apt-get install ros-kinetic-turtlebot-rviz-launchers  \n```", "```py\n    $ roslaunch turtlebot-rviz-launchers view_robot.launch  \n```", "```py\n    $ sudo apt-get install ros-kinetic-turtlebot-teleop  \n```", "```py\n    $ roslaunch turtlebot_teleop keyboard_teleop.launch \n\n```", "```py\n    $ roslaunch chefbot_description view_robot_gazebo.launch  \n```", "```py\n<launch> \n  <include file=\"$(find chefbot_description)/launch/upload_model.launch\" /> \n\n  <include file=\"$(find gazebo_ros)/launch/empty_world.launch\"> \n    <arg name=\"paused\" value=\"false\"/> \n    <arg name=\"use_sim_time\" value=\"true\"/> \n    <arg name=\"gui\" value=\"true\"/> \n    <arg name=\"recording\" value=\"false\"/> \n    <arg name=\"debug\" value=\"false\"/> \n  </include> \n```", "```py\n  <node name=\"spawn_urdf\" pkg=\"gazebo_ros\" type=\"spawn_model\" args=\"-param robot_description -urdf -z 0.1 -model chefbot\" /> \n```", "```py\n  <node pkg=\"robot_state_publisher\" type=\"robot_state_publisher\" name=\"robot_state_publisher\"> \n    <param name=\"publish_frequency\" type=\"double\" value=\"30.0\" /> \n  </node> \n```", "```py\n  <node pkg=\"nodelet\" type=\"nodelet\" name=\"laserscan_nodelet_manager\" args=\"manager\"/> \n  <node pkg=\"nodelet\" type=\"nodelet\" name=\"depthimage_to_laserscan\" \n        args=\"load depthimage_to_laserscan/DepthImageToLaserScanNodelet laserscan_nodelet_manager\"> \n    <param name=\"scan_height\" value=\"10\"/> \n    <param name=\"output_frame_id\" value=\"/camera_depth_frame\"/> \n    <param name=\"range_min\" value=\"0.45\"/> \n    <remap from=\"image\" to=\"/camera/depth/image_raw\"/> \n    <remap from=\"scan\" to=\"/scan\"/> \n  </node> \n</launch> \n```", "```py\n      <inertial> \n        <mass value=\"0.564\" /> \n        <origin xyz=\"0 0 0\" /> \n        <inertia ixx=\"0.003881243\" ixy=\"0.0\" ixz=\"0.0\" \n                 iyy=\"0.000498940\" iyz=\"0.0\" \n                 izz=\"0.003879257\" /> \n      </inertial> \n```", "```py\n     <gazebo reference=\"chefbot_wheel_left_link\"> \n       <mu1>1.0</mu1> \n       <mu2>1.0</mu2> \n       <kp>1000000.0</kp> \n       <kd>100.0</kd> \n       <minDepth>0.001</minDepth> \n       <maxVel>1.0</maxVel> \n\n     </gazebo>  \n```", "```py\n   <material name=\"blue\"> \n       <color rgba=\"0 0 0.8 1\"/> \n   </material> \n\n   <gazebo reference=\"base_link\"> \n     <material>Gazebo/White</material> \n   </gazebo> \n```", "```py\n     <gazebo reference=\"cliff_sensor_front_link\"> \n       <sensor type=\"ray\" name=\"cliff_sensor_front\"> \n         <always_on>true</always_on> \n         <update_rate>50</update_rate> \n         <visualize>true</visualize> \n         <ray> \n           <scan> \n             <horizontal> \n               <samples>50</samples> \n               <resolution>1.0</resolution> \n               <min_angle>-0.0436</min_angle>  <!-- -2.5 degree --> \n               <max_angle>0.0436</max_angle> <!-- 2.5 degree --> \n             </horizontal> \n\n           </scan> \n           <range> \n             <min>0.01</min> \n             <max>0.15</max> \n             <resolution>1.0</resolution> \n           </range> \n         </ray> \n       </sensor> \n     </gazebo> \n```", "```py\n     <gazebo reference=\"base_link\"> \n       <mu1>0.3</mu1> \n       <mu2>0.3</mu2> \n       <sensor type=\"contact\" name=\"bumpers\"> \n         <always_on>1</always_on> \n         <update_rate>50.0</update_rate> \n         <visualize>true</visualize> \n         <contact> \n           <collision>base_footprint_collision_base_link</collision> \n         </contact> \n       </sensor> \n     </gazebo> \n```", "```py\n     <gazebo reference=\"gyro_link\"> \n      <sensor type=\"imu\" name=\"imu\"> \n        <always_on>true</always_on> \n        <update_rate>50</update_rate> \n        <visualize>false</visualize> \n        <imu> \n          <noise> \n            <type>gaussian</type> \n             <rate> \n               <mean>0.0</mean> \n               <stddev>${0.0014*0.0014}</stddev> <!-- 0.25 x 0.25 (deg/s) --> \n               <bias_mean>0.0</bias_mean> \n               <bias_stddev>0.0</bias_stddev> \n             </rate> \n                  <accel> <!-- not used in the plugin and real robot, hence using tutorial values --> \n                         <mean>0.0</mean> \n                         <stddev>1.7e-2</stddev> \n                         <bias_mean>0.1</bias_mean> \n                         <bias_stddev>0.001</bias_stddev> \n                  </accel> \n          </noise> \n         </imu> \n                 </sensor> \n     </gazebo> \n```", "```py\n  <gazebo> \n       <plugin name=\"kobuki_controller\" filename=\"libgazebo_ros_kobuki.so\"> \n         <publish_tf>1</publish_tf> \n\n         <left_wheel_joint_name>wheel_left_joint</left_wheel_joint_name> \n         <right_wheel_joint_name>wheel_right_joint</right_wheel_joint_name> \n         <wheel_separation>.30</wheel_separation> \n         <wheel_diameter>0.09</wheel_diameter> \n         <torque>18.0</torque> \n         <velocity_command_timeout>0.6</velocity_command_timeout> \n         <cliff_detection_threshold>0.04</cliff_detection_threshold> \n         <cliff_sensor_left_name>cliff_sensor_left</cliff_sensor_left_name> \n         <cliff_sensor_center_name>cliff_sensor_front</cliff_sensor_center_name> \n         <cliff_sensor_right_name>cliff_sensor_right</cliff_sensor_right_name> \n         <cliff_detection_threshold>0.04</cliff_detection_threshold> \n         <bumper_name>bumpers</bumper_name> \n\n          <imu_name>imu</imu_name> \n       </plugin> \n     </gazebo> \n```", "```py\n     <plugin name=\"kinect_camera_controller\" filename=\"libgazebo_ros_openni_kinect.so\"> \n          <cameraName>camera</cameraName> \n          <alwaysOn>true</alwaysOn> \n          <updateRate>10</updateRate> \n          <imageTopicName>rgb/image_raw</imageTopicName> \n          <depthImageTopicName>depth/image_raw</depthImageTopicName> \n          <pointCloudTopicName>depth/points</pointCloudTopicName> \n          <cameraInfoTopicName>rgb/camera_info</cameraInfoTopicName> \n          <depthImageCameraInfoTopicName>depth/camera_info</depthImageCameraInfoTopicName> \n          <frameName>camera_depth_optical_frame</frameName> \n          <baseline>0.1</baseline> \n          <distortion_k1>0.0</distortion_k1> \n          <distortion_k2>0.0</distortion_k2> \n          <distortion_k3>0.0</distortion_k3> \n          <distortion_t1>0.0</distortion_t1> \n          <distortion_t2>0.0</distortion_t2> \n          <pointCloudCutoff>0.4</pointCloudCutoff> \n        </plugin> \n```", "```py\n    $ roslaunch chefbot_gazebo chefbot_hotel_world.launch      \n```", "```py\n    $ roslaunch chefbot_description view_robot.launch  \n```", "```py\n<launch>  \n <arg name=\"scan_topic\" default=\"scan\" /> \n\n  <node pkg=\"gmapping\" type=\"slam_gmapping\" name=\"slam_gmapping\" output=\"screen\"> \n    <param name=\"base_frame\" value=\"base_footprint\"/> \n    <param name=\"odom_frame\" value=\"odom\"/> \n    <param name=\"map_update_interval\" value=\"5.0\"/> \n    <param name=\"maxUrange\" value=\"6.0\"/> \n    <param name=\"maxRange\" value=\"8.0\"/> \n```", "```py\n    $ roslaunch chefbot_gazebo chefbot_hotel_world.launch  \n```", "```py\n    $ roslaunch chefbot_gazebo keyboard_teleop.launch  \n```", "```py\n    $ roslaunch chefbot_gazebo gmapping_demo.launch  \n```", "```py\n    $ roslaunch chefbot_description view_navigation.launch  \n```", "```py\n    $ rosrun map_server map_saver -f ~/Desktop/hotel  \n```", "```py\n<launch> \n  <!-- Map server --> \n  <arg name=\"map_file\" default=\"$(find chefbot_gazebo)/maps/hotel.yaml\"/> \n\n  <node name=\"map_server\" pkg=\"map_server\" type=\"map_server\" args=\"$(arg map_file)\" /> \n```", "```py\n  <!-- Localization --> \n  <arg name=\"initial_pose_x\" default=\"0.0\"/> \n  <arg name=\"initial_pose_y\" default=\"0.0\"/> \n  <arg name=\"initial_pose_a\" default=\"0.0\"/> \n  <include file=\"$(find chefbot_gazebo)/launch/includes/amcl.launch.xml\"> \n    <arg name=\"initial_pose_x\" value=\"$(arg initial_pose_x)\"/> \n    <arg name=\"initial_pose_y\" value=\"$(arg initial_pose_y)\"/> \n    <arg name=\"initial_pose_a\" value=\"$(arg initial_pose_a)\"/> \n  </include> \n\n  <!-- Move base --> \n  <include file=\"$(find chefbot_gazebo)/launch/includes/move_base.launch.xml\"/> \n</launch> \n\n```", "```py\n    $ roslaunch chefbot_gazebo chefbot_hotel_world.launch  \n```", "```py\n    $ roslaunch chefbot_gazebo amcl_demo.launch map_file:=/home/<your_user_name>/Desktop/hotel  \n```", "```py\n    $ roslaunch chefbot_gazebo amcl_demo.launch  \n```"]