- en: Understanding Models
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we're going to look into general model interpretation. We will
    have a look at the different types of predictive models. Then we will interpret
    some machine learning models using various techniques.
  prefs: []
  type: TYPE_NORMAL
- en: 'We will be covering the following topics in this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: Types of models
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using graphs to interpret machine learning models
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using statistics to interpret machine learning models
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using decision trees to interpret machine learning models
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Models
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'There are three different types of predictive models:'
  prefs: []
  type: TYPE_NORMAL
- en: Statistical models
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Decision tree models
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Machine learning models
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Statistical models
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The first thing that the statistical models identify is which predictors are
    most important in a model. The statistical models also create an equation that
    allows you to make predictions. For example, as we can see in the following screenshot,
    the coefficients that are part of the prediction equation have been highlighted:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/3f1b8253-9aa7-4c21-b0b8-c59ab41f712f.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The following screenshot highlights the equation to predict current salaries:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/9fd36505-1a1d-47da-9ab1-e394f5b5dc3e.png)'
  prefs: []
  type: TYPE_IMG
- en: 'In the following screenshot, we can see that we take the coefficient for the
    variable beginning salary and we multiply it by the actual beginning salary:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/2e1d4de4-f734-487f-9a5a-8521fd88436c.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Now, we take the coefficient for education level and we multiply it by a person''s
    number of years of education:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/24d21da0-98c0-4436-845a-f59576ecb026.png)'
  prefs: []
  type: TYPE_IMG
- en: 'We also need the person''s **age**, which is highlighted in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/2601c49e-8ee0-4cf3-aaa0-b331729c1382.png)'
  prefs: []
  type: TYPE_IMG
- en: We multiply all the values with their respective coefficients, and finally,
    we add all the constants, which predicts what the person's salary is going to
    be. Now that's great. But in addition, the statistical models allow us to determine
    the effect of a one-unit increase in each predictor, and you can see the effect
    of this predictor on the different outcome variables.
  prefs: []
  type: TYPE_NORMAL
- en: 'So, for example, with education level, we see that it has a coefficient of
    **298**. That tells us that a person''s current salary is increasing by $298 for
    each additional year of education that the person has:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/a401970e-a6c2-4749-87b5-227b2e65253a.png)'
  prefs: []
  type: TYPE_IMG
- en: So you can really see the impact of each individual independent variable and
    how it ends up impacting the overall prediction.
  prefs: []
  type: TYPE_NORMAL
- en: Decision tree models
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Just like statistical models, decision tree models help you identify which predictors
    are most important in the model. There are no equations, and we can't determine
    a one-unit impact and along with the effect that it has on an outcome variable.
    Instead we are going to create rules that make predictions by segmenting data
    in two mutually-exclusive categories.
  prefs: []
  type: TYPE_NORMAL
- en: 'So, for example, as you can see in the following screenshot, we have anybody
    with a variable **Premier** value of **No**:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/c56a361c-0ea4-41bb-a9ce-371bf0ad65ea.png)'
  prefs: []
  type: TYPE_IMG
- en: 'We have anybody that was a customer for three years or fewer, as shown in the
    following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/d14f3bdc-d889-443c-b9fc-c569babe31d5.png)'
  prefs: []
  type: TYPE_IMG
- en: 'And we have people whose estimated revenue was less than or equal to about
    4,000,000, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/54d74176-6eff-42d4-a2f4-76ced11d50f3.png)'
  prefs: []
  type: TYPE_IMG
- en: 'They happen to be located in another country, and we''re predicting that they''re
    going to churn, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/73406733-ef73-4e08-8115-07e128328366.png)'
  prefs: []
  type: TYPE_IMG
- en: This rule was applied to 25 people, and the accuracy of that rule was 100%, as
    shown in the following screenshot. So, for all the customers who fit those criteria,
    we ended up losing them as customers 100% of the time.
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, there''s a second rule, and it''s exactly the same as the first. The
    only difference is that the location is a **National** customer, and you will
    notice that we''re still predicting the people who will be churned. That rule
    applies to **47** individuals, but the accuracy of that rule is only 66%:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/612b3aa8-6733-4b25-a8ee-3fd829127773.png)'
  prefs: []
  type: TYPE_IMG
- en: Now, at first glance it might seem that these are fairly similar rules, but
    this is where you have to go back and try to identify what's really going on.
  prefs: []
  type: TYPE_NORMAL
- en: Notice that when all the criteria were met and we happen to have an international
    customer, we always lost them, but when we have a **National** customer, we still
    are most likely to lose them, but we didn't lose all of them. You might want to
    ask yourself why? Well, maybe you could go back over to the sales reps. They might
    inform you that they call the **National** customers once a quarter just to see
    how they're doing and that one call manages to keep some of those customers, so
    that you don't end up losing them. So, Decision trees allow you to create these
    different rules that allow you to make predictions, and then you can see the inner
    workings of the model very well.
  prefs: []
  type: TYPE_NORMAL
- en: Machine learning models
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Like both statistical and decision tree models, machine learning models identify
    which predictors are the most important in the model.
  prefs: []
  type: TYPE_NORMAL
- en: 'In the following example of a neural net model, we see that the **Speakers**
    variable was the most important, followed by **Premier**, followed by **TVs**:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/e19a0a48-b294-4f0f-8e9f-1f3c94ef6684.png)'
  prefs: []
  type: TYPE_IMG
- en: So, those are the most important predictors and that's all we get. We don't
    get any equations or a rule. We don't even know the direction of the relationship,
    for example, are we more likely to keep or lose customers that buy more speakers? We
    really don't know; we don't get that kind of information from any machine learning
    model because they're all black boxes.
  prefs: []
  type: TYPE_NORMAL
- en: Hence, in the next section, we're going to see how you would figure out exactly
    how to interpret the results of a machine learning model. Also, we'll see how
    to use graphs to interpret machine learning models.
  prefs: []
  type: TYPE_NORMAL
- en: Using graphs to interpret machine learning models
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this section, we're going to see how to use graphs to interpret the results
    of a machine learning model. Specifically, it's important to know what kind of
    data you have, because the type of data will determine the type of graph that
    you can create. This graph will then help you understand what goes into the predictions
    of a machine learning model. We will also understand how a machine learning model
    uses these different variables for the predictions and eventually use these predictions
    for our final interpretation.
  prefs: []
  type: TYPE_NORMAL
- en: 'For example, when we have an outcome variable that is a categorical variable
    and our predictor is also a categorical variable, we can use a bar chart or a
    web plot. We can use either type of graph to help us understand how the machine
    learning model is making its predictions. The following table represents data
    and graph combinations:'
  prefs: []
  type: TYPE_NORMAL
- en: '|  | Categorical | Continuous |'
  prefs: []
  type: TYPE_TB
- en: '| Categorical | Bar chart/web plot | Histogram |'
  prefs: []
  type: TYPE_TB
- en: '| Continuous | Histogram | Scatter plot |'
  prefs: []
  type: TYPE_TB
- en: As we can see from the preceding table, when we have a categorical outcome variable
    but we have a continuous predictor, we might have to use a histogram. A histogram
    can help us to visually understand what's going on behind those predictions.
  prefs: []
  type: TYPE_NORMAL
- en: Now let's look into some other possibilities. Let's say that our outcome variable
    is actually a continuous variable but we had a categorical predictor, so here
    we could use a histogram. And finally, when we have an outcome variable that's
    a continuous variable and a predictor variable that's also a continuous variable,
    we can end up using a scatter plot. We will see examples related to this in the
    upcoming sections.
  prefs: []
  type: TYPE_NORMAL
- en: 'In the previous section, we built a neural net model. Let''s take a look at
    the model that we built:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s use the model that we created in the previous chapter:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/ace85d6f-43c5-4430-ba79-7edfb2be01dd.png)'
  prefs: []
  type: TYPE_IMG
- en: Set the **Random seed** as `5000` and then run the model
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/d75bd06e-c904-4d49-9d6e-89e232148112.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Click on the newly generated model and in the observations, we can see that
    the **Premier** variable is the most important predictor, followed by **Years_as_customer**,
    and then **Stereos**, **TVs**, and so forth:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/7deb3710-1ec3-4d43-bde2-f7af05214c83.png)'
  prefs: []
  type: TYPE_IMG
- en: Now we know the most important predictors in this model, but we don't know how
    these predictors are being used by the model. Therefore, we will investigate their
    relationships.
  prefs: []
  type: TYPE_NORMAL
- en: 'There are several ways in which we can know about the relationships between
    components of the model. We can use graphs or tables. Let''s go through a few
    examples:'
  prefs: []
  type: TYPE_NORMAL
- en: Select the **Record Ops** palette.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Connect the generated model over to a **Select** node.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Let's look at the data for the training dataset. We will keep the testing dataset
    separate because we will use that data later to confirm the findings.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the **Select** node to edit it.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Click on the **Expression Builder**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/5379eaa3-6a30-4fb9-acca-d1a5366c52e7.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Select any variable. For example, the **Partition** variable, select `=`, and
    the training dataset:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/19d44971-564c-4ede-87d2-3badd083fd91.png)'
  prefs: []
  type: TYPE_IMG
- en: 'This is how a expression will look also, click on **OK**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/74a8d25b-c3b2-476b-b2d8-ecc34b682b4f.png)'
  prefs: []
  type: TYPE_IMG
- en: 'We have selected only the people in the training dataset. Now, let''s take
    a look at the relationships between the actual predictions and the important variables
    in this model to figure out exactly how these variables are used by the model:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Go to the **Graphs** palette and connect the **Select** node to a **Distribution**
    node. The **Distribution** node is basically a bar chart, as shown in the following
    screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/03810d88-a27c-409d-969b-392b685fbc94.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Edit the **Distribution** node. Select the **Premier** field:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/b3f6f409-af05-4844-b683-0e770a96d140.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Notice that only categorical fields are available here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/2fe1d30b-d52b-40d1-84fb-7cb5913fc814.png)'
  prefs: []
  type: TYPE_IMG
- en: 'We are selecting the **Premier** variable because that was the most important
    predictor in the model and we will see how that variable is used in its predictions:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Click on the overlay button:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/f84d9025-c7df-408a-8e71-212f7601c785.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Select the variable **$N-Status**, which is our actual prediction:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/db07a940-746f-4b4d-9e47-ab7aaf53bc64.png)'
  prefs: []
  type: TYPE_IMG
- en: 'To make comparisons a little easier,  click on normalize by **Color**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/05546d69-e6a5-4ccf-9c1a-c697b7895297.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Click on **Run** and you can see what was done here:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/f9fe6071-51fb-491b-bf7b-f6d6b78b9c17.png)'
  prefs: []
  type: TYPE_IMG
- en: Notice that the blue color is associated with those who were predicted as going
    to churn, and the red color is associated with people who were predicted as current
    customers. You can also see that the people that are **Premier** customers we
    are associating them with being a current customer. The people that are not **Premier**
    customers we are associating them with the blue color which means that we're predicting
    that they're going to churn.
  prefs: []
  type: TYPE_NORMAL
- en: 'So that''s how you investigate the relationship between a categorical predictor
    and a categorical outcome variable. We could use something similar to a bar chart,
    in this case, it''s called the **Distribution** node in Modeler; it would be called
    as a **bar chart** in other software packages, but you''re looking at the relationship
    between these two categorical variables and now you can see what''s going on with
    these relationships. Let''s use a **Web** node to look at the relationship between
    the two categorical variables:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Go down to the **Graphs** palette and connect the **Select** node to the **Web**
    node:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/7650b517-b61e-4705-bdb8-d9d6274dc870.png)'
  prefs: []
  type: TYPE_IMG
- en: Edit the **Web** node, you can either build this as a **Web**, which basically
    allows us to take a lot of categorical variables and put them all together, or we can
    create a **Directed web** so that all the categorical variables in those categories
    are all directed towards one specific variable, which is what we are going to
    do here. Choose the **Directed web**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the field box
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Add your prediction, which is the **$N-Status** variable, add all other categorical
    variables:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/05421b68-1d48-4fa0-9860-2fd00d078154.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The following screenshot shows all the selected flag fields:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/4e0ada63-0cca-47b9-a93b-129a61dc6d8e.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Add other categorical fields. Select **Payment_Method**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/7ccd57b6-492d-4893-b9a9-418f6f6e522c.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Hold the *Ctrl* key and scroll down a**n**d select **TV_Categories ** andclick
    on **OK**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/7b65d60b-36dd-475c-96fd-32e743ebe4bc.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Set the **Line values**to **Absolute**, as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/37d7d523-7bdf-4d8d-8b7f-0bb3be31b813.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Set **Line values are** to **Percentages of "From" the field/value**. From
    these **Predictor** fields, we will see how these values are related to the **Outcome**
    field and click on Run:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/e5cdafc9-a707-49d9-9588-19686e6c6aef.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Notice that there are two lines that are a little thicker than the others:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/c2497460-486d-47cb-98db-ac512e537950.png)'
  prefs: []
  type: TYPE_IMG
- en: You can see that one of the line values says **Yes. **The other line value says
    **No** and they're both related to the field current and churned as we can see
    in the following output
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s take a look at the thickest **Yes** line:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/12acc62c-ef3f-4c29-b018-27907bed616d.png)'
  prefs: []
  type: TYPE_IMG
- en: We can see that this line is showing us that these are people that on the **Premier**
    variable had a value of **Yes** and the prediction is associated with being a
    current customer and then we can see that **87%** of the people that are predicted
    to be current customers they had a value of **Yes** on the variable **Premier**.
  prefs: []
  type: TYPE_NORMAL
- en: 'Similarly, the next thickest line would be the one where we''re on the **Premier**
    variable. We  have a value of no and that''s associated with churning and that
    value ended up being **80%**:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is another way we can look at the relationship between a categorical **Predictor**
    and a categorical **Outcome** variable. The strongest relationship is between
    the **Premier** variable and the **Outcome** variable:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/eecf6620-93cc-4056-8b46-fbe0f5dbb005.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Let''s look at the relationship between a continuous **Predictor** and a categorical
    **Outcome** variable. To do that, we are going to go down to the **Graphs** palette
    and connect the **Select** node to a histogram:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/944c65a6-d974-4a69-92d5-2e3a86d3b73c.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Edit the **Histogram, **In the field box, select the **TVs** field . Choose
    the **TVs** field because this is one of the most important predictors in the
    mode:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/3104d599-9931-4d18-b36b-95a74b5761d6.png)'
  prefs: []
  type: TYPE_IMG
- en: 'In the overlay color box, enter the prediction, which is the variable **$N-Status**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/bca016b3-6698-477f-80e1-6d24889ef98f.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Go to the **Options** tab and click on **Normalize by color** to make your
    comparisons a little easier  and click on **Run**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/ce3989bc-8a7f-4e6b-ac13-93860f5646e5.png)'
  prefs: []
  type: TYPE_IMG
- en: 'We will see the following results:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/ebffd7c0-7652-4ca6-bd37-5ff44fb0a4cf.png)'
  prefs: []
  type: TYPE_IMG
- en: We can see that the blue color is associated with those customers that we predicted
    we were going to lose. The red color is associated with those customers that we
    predicted we were going to keep. Notice that the people who bought fewer **TVs**
    we are predicting about 50%; basically that we're going to end up keeping these
    customers. As customers are buying more **TVs**, we're predicting that we're going
    to lose these customers. So that's how this variable is being used by the model,
    the model is depicting that if you're not buying many **TVs** there's about an
    equal chance that we're going to keep or lose you as a customer, but if you're
    buying a lot of **TVs** then we think that we're more likely to lose you as a
    customer.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this example, we''re going to look at the relationship between two continuous
    variables:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s work with a different dataset. Bring in the **Var. File** node:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Edit this node and link it up to a dataset. Navigate to where our dataset,
    `Bank_Data`  is located Select the  file:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Open the dataset. It''s a comma-delimited file, as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/320860bf-32ef-4958-980f-3bd08d314875.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Go to the **Types** tab and click on **Read Values** and then select **OK.
    You will see your variables**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/0cf6fa21-d744-42be-8e50-73c3db52e89b.png)'
  prefs: []
  type: TYPE_IMG
- en: '`salnow` is our dependent variable. Hence make sure that it is a target variable.
    IF it isn''t, then change its role to target. Set the role of **id** to **None**. All
    the other variables are going to be predictors for the current salary variable.
    Click on **OK**'
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s look at the relationship between our outcome variable, which happens
    to be a continuous variable, and another continuous variable, which is a predictor.
    Go to the **Graphs** palette and connect the  source node to the **Plot** node:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/a66cff6a-90f6-420c-b290-7c9afbed4969.png)'
  prefs: []
  type: TYPE_IMG
- en: The **Plot** node will allow us create a scatter plot. So, let's edit the **Plot**
    node.
  prefs: []
  type: TYPE_NORMAL
- en: 'In the **X field** box, we will input our predictor and here we will add the
    education level, which is the number of years of education that a person has and
    in the **Y field** box, we will add our outcome variable which is **salnow**,
    that is, the current salary:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/e26d20d2-6c11-4414-88b7-c6442a65c1ec.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Click on **Run** and we get the following graph as the result:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/a43673c6-9549-4047-ba95-ccc08b0f1d8e.png)'
  prefs: []
  type: TYPE_IMG
- en: You can see that as the number of years of education increases, the current
    salary increases too. We have a positive linear relationship, which means that
    as one variable increases the other variable increases as well, so more education
    ends up leading to higher current salary, and less education is associated with
    a lower current salary.
  prefs: []
  type: TYPE_NORMAL
- en: So, this is a way in which we can represent the relationship between two continuous
    variables. In the next section, we will see how to use statistical tests to interpret
    the results of a machine learning model.
  prefs: []
  type: TYPE_NORMAL
- en: Using statistics to interpret machine learning models
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this section, we will be using statistics to interpret the results of a
    machine learning model. We talked about graphs and how they allow us to see and
    interpret the predictions of a machine learning model, but we can also use those
    graph for statistical tests. Have a look at the following table:'
  prefs: []
  type: TYPE_NORMAL
- en: '|  | Categorical | Continuous |'
  prefs: []
  type: TYPE_TB
- en: '| Categorical  | Chi-square | ANOVA |'
  prefs: []
  type: TYPE_TB
- en: '| Continuous | ANOVA | Correlation |'
  prefs: []
  type: TYPE_TB
- en: Let's say we had a categorical outcome variable and we had a categorical predictor,
    we could use the chi-square test. The chi-square test of Independence will allow
    us to look at the relationship between two categorical variables.
  prefs: []
  type: TYPE_NORMAL
- en: Also, if we have a categorical outcome variable and a continuous predictor,
    we can use ANOVA to analyze the variance. If we have two categories that we're
    comparing, we can have a t-test instead, which will allow us to interpret what's
    going on. On the other hand, if our outcome variable is a continuous variable
    and we have a categorical predictor, we can use ANOVA. We could also use logistic
    regression or discriminant analysis if we wanted. And finally, when both of our
    variables are continuous variables, we can use correlation or linear regression.
    Let's take a look at a few examples. We will outline some of these techniques
    so that we can understand what's going on, in terms of the inner workings of a
    machine learning model.
  prefs: []
  type: TYPE_NORMAL
- en: Let's take a look at how some tables can help clarify relationships between
    our variables and to see how these different predictors are used by a model.
  prefs: []
  type: TYPE_NORMAL
- en: 'Go to the **Output** palette and connect the Select node to a matrix node:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/1462550a-ad25-4cde-a56c-0f1f53e8af9f.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The **Matrix** node will allow us to do the chi-square test, which will help
    us to look at the relationship between two categorical variables. In this case,
    we''re going to look at the relationship between a categorical predictor and a
    categorical outcome variable. Let''s edit the **Matrix** node. In the **Rows**
    field, we will input our prediction, which is the **$N-Status** variable and in
    the **Columns** field, we will select the important predictor in the model, which
    will be the **Premier** variable:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/d809c33d-232d-4524-bd83-023b0fc4f67f.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Go to the **Appearance** tab and select Percentage of columns, which means
    we will get the column percentages and click on Run:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/9060d4d0-c216-4a35-9886-4a7ab4f2c1ff.png)'
  prefs: []
  type: TYPE_IMG
- en: 'We will get the following result:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/6fc16b3d-b158-4a04-a9a0-2adbed0c49ed.png)'
  prefs: []
  type: TYPE_IMG
- en: We actually have a **Chi-square** test that is statistically significant, so
    Premier is an important predictor in the model.
  prefs: []
  type: TYPE_NORMAL
- en: We also get some numerical information that is backing up what we have seen
    in our graphs previously . We can see that about **80%** of those people, the
    non-premier customers that  are associated with being with **Churned** and  about
    **87%** of the **Premier** customers that are associated with being a **Current**
    customer.
  prefs: []
  type: TYPE_NORMAL
- en: This is what the model has been doing. Now, we understand how at least one variable
    is used in the model.
  prefs: []
  type: TYPE_NORMAL
- en: Understanding the relationship between a continuous predictor and a categorical
    outcome variable
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this section, we are going to look at the relationship between a continuous
    predictor and a categorical outcome variable. In order to do that, we can either
    run a t-test or ANOVA and which is also called the **Means** node in Modeler:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Connect the **Select** node to the **Means** node from the output palette:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/c6b40643-c1df-48fa-8bc2-c2a67280f8d7.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Edit the **Me****ans** node. In the **Grouping field** box, input the prediction,
    which is the **$N-Status** variable:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/b9e21c33-b012-456f-a287-3e7b0d272a1c.png)'
  prefs: []
  type: TYPE_IMG
- en: 'In the **Test field(s)** box, select all of the continuous variables. Also,
    deselect the actual confidence:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/b2b12a23-f152-4a5f-9430-2c9229559bdf.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Click on **OK** and then click on **Run**. You will get the following output:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/1e2ca582-9b5e-4e9b-b997-c04fab0ea67b.png)'
  prefs: []
  type: TYPE_IMG
- en: We can see that most of the variables ended up differentiating between the prediction
    for churn and the prediction for being a current customer. There are some predictors
    that weren't important. For example, estimated revenue was not statistically significant
    and neither was the number of employees, but the rest of the predictors were very
    important.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, here we are seeing the **Mean**. But, let''s try to find some more information.
    We''ll change the **View** from **Simple** to Advanced and we will get the following
    results:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/4d6b0afc-35b4-49e6-a4ce-539d038a564d.png)'
  prefs: []
  type: TYPE_IMG
- en: As you can see, we have the same number of cases for each of these variables.
    The most important predictor ended up being the **TVs** variable, as we can see
    in the following screenshot, and that's the one that's able to differentiate these
    groups the most.
  prefs: []
  type: TYPE_NORMAL
- en: For example look at the TVs field, we can see that the current customers are
    the people who we predicted to churn and we thought we're going to lose these customer,
    on average they bought 2.4 **TVs**. This prediction is significantly more than
    the people who were predicted to be going to stay as current customers which bought
    about one TV on average As we can see, we had a statistically significant result. The
    opposite is true when it comes to **Stereos**. You can see that we have a statistically
    significant result, however you can see that the people that we'd predicted to
    lose as customers on average, bought **13.2** stereos, whereas the people that
    we'd predicted were going to stay as customers on average bought **16.2** stereos
  prefs: []
  type: TYPE_NORMAL
- en: 'The last thing we''re going to do is look at the relationship between two continuous
    variables. Earlier, we used the scatter plot to show the relationship between
    two continuous variables. Here, we''re going to quantify that by calculating a
    correlation:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Using the bank dataset, go to the **Output** palette in Modeler and connect
    the **Statistics** node to source node:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/0e29a00d-c352-4886-b28f-e41d82f03f72.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Edit the **Statistics** node, which allows us to get summary statistics in
    the examine box. Click on the fields option and select current salary:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/5ea694a3-58bf-4799-bd66-2f40573711ee.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Click on **OK** and correlate current salary with the other continuous variables.
    Click on the arrow next to the correlate box and select the ruler icon, which
    will select all our continuous variables:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/21cccea1-c7d4-4931-b42a-35e7999b72f2.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Hold down the *Ctrl* key and deselect **id**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/cb0907dd-66b3-4a27-a933-9990dd0daf5e.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Click on **OK** and then click on **Run.** You will see the following result:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/24736c99-0c7a-47e2-a4d4-551023155d51.png)'
  prefs: []
  type: TYPE_IMG
- en: 'As we can see that the current salary correlates very highly with the starting
    salary:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/73d70395-047f-4591-84fe-068e7573196e.png)'
  prefs: []
  type: TYPE_IMG
- en: Remember that correlation values can range anywhere from -1 to +1\. The farther
    away the value is from zero, the stronger the relationship. If the correlation
    coefficients are positive, this means that as the value of one variable increases,
    the value of the other variable increases. If the correlation coefficients are
    negative, this means that as the value of one variable increases, the value of
    the other variable decreases.
  prefs: []
  type: TYPE_NORMAL
- en: Notice that the correlation between beginning salary and current salary is very
    high, almost 0.9\. You can also see that the correlation between education law
    and current salary is also very high, at 0.66.
  prefs: []
  type: TYPE_NORMAL
- en: On the other hand, you can see that the correlation between the amount of time
    that someone has worked at this particular job and also the correlation of the
    number of months that someone has been employed before they have this current
    job, those variables don't really correlate with current salary. Notice that the
    correlation values are actually pretty close to zero.
  prefs: []
  type: TYPE_NORMAL
- en: This gives us an indication of the types of relationships that you have and
    it allows us to quantify those relationships. In the next section, we are going
    to see how to use decision trees to interpret the results of a machine learning
    model.
  prefs: []
  type: TYPE_NORMAL
- en: Using decision trees to interpret machine learning models
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this section, we're going to take the predictions from a machine learning
    model, and use those predictions as our outcome variables. Then we will use the
    original predictors to understand what's going on, that is, the logic behind the
    machine learning model.
  prefs: []
  type: TYPE_NORMAL
- en: Previously, we saw that we could use different graphs and tables to figure out
    how to look at relationships between just one variable, one predictor and how
    it relates to an outcome variable, which is useful and important information to
    have. But generally, a model uses many variables at the same time. Hence looking
    at one predictor is useful, but it doesn't exactly give us a complete picture.
  prefs: []
  type: TYPE_NORMAL
- en: Another technique would be to use a decision tree model to help us understand
    the logic behind a neural net model, or any kind of machine learning model.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here, we will be taking our predictions from the model and use that prediction
    as our outcome variable. Then, we will start with our predictions based on the
    predictors that the model used:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Go to the **Field Ops** palette and connect the generated model to the **Type**
    node:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/6eef4cd8-883f-4b6b-a263-1b193146b35b.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Edit the **Type** node and change the role of the original outcome of the **Status**
    variable. It won''t be **Target** anymore since we are going to change its role
    to **None**. Hence, it won''t be included in the model that we are going to build:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/6b0a7c18-a4c9-4329-a455-f807d3e4522c.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Scroll down a little bit. Here, the **$N-Status** prediction is no longer just
    a prediction or the input; in fact, it will be the **Target** itself. And that''s
    what we are going to predict:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/930c3796-c0fa-4e9f-b38b-9df8388d6046.png)'
  prefs: []
  type: TYPE_IMG
- en: Here, we are trying to get inside the head of a neural net model (or any kind
    of machine learning model). Take a look at the model's predictions, and use the
    variables that it used to try to figure out the logic.
  prefs: []
  type: TYPE_NORMAL
- en: 'Remove the confidence value from that prediction since it''s not needed. Change
    its role to **None** and click on **OK**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/d47ff2d2-b619-47d8-8497-ce0e90cb204d.png)'
  prefs: []
  type: TYPE_IMG
- en: At this point, we have to use another model to understand what happened during
    the predictions of a machine learning model. We could use a statistical model.
    But the statistical models have a lot of requirements and assumptions of the data.
    Also, they can't handle complex interactions and nonlinear relationships very
    well.
  prefs: []
  type: TYPE_NORMAL
- en: 'A decision tree model is probably going to do the best job in terms of trying
    to replicate what the neural net model did:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Go to the **Modeling** palette and choose a decision tree model to understand
    what''s going on behind the **Neural Net** model. Connect the **Type** node to
    **C&R** Tree model:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/61ecb72e-8e4e-4fdc-8651-e206b64b0e9b.png)'
  prefs: []
  type: TYPE_IMG
- en: We will be predicting the prediction from the **Neural Net** model.
  prefs: []
  type: TYPE_NORMAL
- en: 'When you edit that model, you will be using all of the predictors that the
    **Neural Net** model used initially to understand what''s going on behind those
    predictions:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/32156349-b83f-46a0-b99e-6e7245ea3686.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Click on **Run**, and have a look at the generated model:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/fb41c0d9-8175-4917-9f2c-7b24d0b190ca.png)'
  prefs: []
  type: TYPE_IMG
- en: 'We will get the following results:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/995ffe41-ac9d-4a6d-8c2d-93c0ec5a1f49.png)'
  prefs: []
  type: TYPE_IMG
- en: Notice that the **C&R** model also thinks that the **Premier** variable is the
    most important predictor in the model. The **C&R** model has a lot of same predictors
    that the neural net model had as the most important predictors. That is important
    because we want to make sure that we understand the logic of the neural net model
    (or any machine learning model).
  prefs: []
  type: TYPE_NORMAL
- en: Click on the **All** button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Click on the **%** button and we can see some numbers behind these predictions:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/1bb8e074-b27d-41d7-94a7-42d56fd26147.png)'
  prefs: []
  type: TYPE_IMG
- en: We aren't interested in predicting our outcome variable, **Status** here. Instead,
    we're trying to understand the reasoning behind the predictions of the neural
    net model.
  prefs: []
  type: TYPE_NORMAL
- en: Here, you can see that we're using multiple variables. Have a look at the preceding
    screenshot. The first rule says that if the variable is **Premier**, you had a
    value of **NO** and you have been a customer of ours for less than or equal to
    four and a half years, and you bought less than or equal to one and a half TVs,
    and you bought less than or equal to ten point five speakers, we're predicting
    that we're going to lose you as a customer. That rule applied to 41 people and
    the confidence in that rule is about 81%. On the other hand, if all of that same
    criteria is applied, so that you're still a non-premier customer, you haven't
    been with us that long as a customer, you've bought very few TVs but you bought
    more than 10.5 speakers, we're predicting that you're going to be a current customer.
    That rule applied to 127 people, and the confidence in that rule is 88%.
  prefs: []
  type: TYPE_NORMAL
- en: Now we try to understand the logic as to what potentially the neural net model
    was doing. It's not exactly the same as what the neural net model did, because
    the algorithms for a neural net model and a decision tree model are very different.
    We were just trying to understand the logic behind a neural net model. In this
    case, we had a whole set of criteria, and it ended up allowing us to use or view
    the relationship between multiple variables simultaneously and how they end up
    impacting the prediction. This is just another tool you can use to try to understand
    what's going on behind the predictions of a machine learning model.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we started off by looking at different types of prediction
    models. Then we used these models to interpret the machine learning models.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will explore different ways that we can improve individual
    models.
  prefs: []
  type: TYPE_NORMAL
