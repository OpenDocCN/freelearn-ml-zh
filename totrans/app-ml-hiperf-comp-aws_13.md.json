["```py\n%%writefile Dockerfile\nFROM carlasim/carla:0.9.11\nUSER root\n# see https://github.com/NVIDIA/nvidia-docker/issues/1632\nRUN rm /etc/apt/sources.list.d/cuda.list\nRUN rm /etc/apt/sources.list.d/nvidia-ml.list\n# install dependencies\nRUN apt update && \\\n      apt install -y python3-pip \\\n      libjpeg-dev \\\n      libtiff5-dev \\\n      libomp-dev \\\n      fontconfig\n# fix ALSA errors\nRUN echo pcm.!default { type plug slave.pcm \"null\" } >> /etc/asound.conf\n# install NICE DCV (for RoboMaker)\nRUN apt update -y && apt upgrade -y && apt install -y wget pgp\nRUN wget https://d1uj6qtbmh3dt5.cloudfront.net/NICE-GPG-KEY\nRUN gpg --import NICE-GPG-KEY\nRUN wget https://d1uj6qtbmh3dt5.cloudfront.net/2021.1/Servers/nice-dcv-2021.1-10598-ubuntu1804-x86_64.tgz\nRUN tar -xvzf nice-dcv-2021.1-10598-ubuntu1804-x86_64.tgz\nRUN apt update && apt install -y ./nice-dcv-2021.1-10598-ubuntu1804-x86_64/nice-dcv-gl_2021.1.937-1_amd64.ubuntu1804.deb \\\n                                 ./nice-dcv-2021.1-10598-ubuntu1804-x86_64/nice-dcv-gltest_2021.1.275-1_amd64.ubuntu1804.deb\n# install opengl\nRUN apt update && apt install -y libglfw3 libglfw3-dev\n# install xterm\nRUN apt update && apt install -y xterm\n# run as user carla\nUSER carla\n# install example dependencies\nRUN python3 -m pip install -U pip\nRUN cd ~/PythonAPI/examples && python3 -m pip install -r requirements.txt\n# set path to carla python API\nENV PYTHONPATH=/home/carla/PythonAPI/carla/dist/carla-0.9.11-py3.7-linux-x86_64.egg\nENTRYPOINT [\"/bin/bash\", \"-c\"]\n```", "```py\nFROM carlasim/carla:0.9.11\n```", "```py\n%%sh\n# The name of our algorithm\nalgorithm_name=$1\naccount=$(aws sts get-caller-identity --query Account --output text)\n# Get the region defined in the current configuration (default to us-west-2 if none defined)\nregion=$(aws configure get region)\nfullname=\"${account}.dkr.ecr.${region}.amazonaws.com/${algorithm_name}:latest\"\n```", "```py\n# If the repository doesn't exist in ECR, create it.\naws ecr describe-repositories --repository-names \"${algorithm_name}\" > /dev/null 2>&1\nif [ $? -ne 0 ]\nthen\n    aws ecr create-repository --repository-name \"${algorithm_name}\" > /dev/null\nfi\n# Get the login command from ECR and execute it directly\naws ecr get-login-password --region ${region}|docker login --username AWS --password-stdin ${fullname}\n```", "```py\n# Build the docker image locally with the image name and then push it to ECR\n# with the full name.\ndocker build  -t ${algorithm_name} .\ndocker tag ${algorithm_name} ${fullname}\ndocker push ${fullname}\necho ${fullname}\n```", "```py\n./build_and_push.sh carlasim\n```", "```py\n<account_number>.dkr.ecr.<region>.amazonaws.com/carlasim:latest\n```", "```py\n    ./CarlaUE4.sh -opengl\n    ```"]