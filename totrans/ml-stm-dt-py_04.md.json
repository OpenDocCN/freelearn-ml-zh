["```py\nvalues = [10,8,12,11,7,10,8,9,12,11,10]\n```", "```py\nimport numpy as np\n```", "```py\nnp.mean(values)\n```", "```py\nvalues = [10,8,12,11,7,10,8,9,12,11,10]\n```", "```py\nimport numpy as np\n```", "```py\nnp.median(values)\n```", "```py\nvalues = [10,8,12,11,7,10,8,9,12,11,10]\n```", "```py\nimport statistics\n```", "```py\nstatistics.mode(values)\n```", "```py\nvalues = [10,8,12,11,7,10,8,9,12,11,10]\n```", "```py\nimport numpy as np\n```", "```py\nnp.std(values, ddof=1)\n```", "```py\nvalues = [10,8,12,11,7,10,8,9,12,11,10]\n```", "```py\nimport numpy as np\n```", "```py\nnp.var(values, ddof=1)\n```", "```py\nvalues = [10,8,12,11,7,10,8,9,12,11,10]\n```", "```py\nimport scipy.stats\n```", "```py\nscipy.stats.iqr(values)\n```", "```py\nvalues_x = [10,8,12,11,7,10,8,9,12,11,10]\n```", "```py\nvalues_y = [12,9,11,11,8,11,9,10,14,10,9]\n```", "```py\nimport numpy as np\n```", "```py\nnp.corrcoef(values_x,values_y)\n```", "```py\nimport pandas as pd\n```", "```py\ndata_batch = pd.DataFrame({\n```", "```py\n    'temperature': [10, 11, 10, 11, 12, 11, 10, 9, 10, 11, 12, 11, 9, 12, 11],\n```", "```py\n    'pH': [5, 5.5, 6, 5, 4.5, 5, 4.5, 5, 4.5, 5, 4, 4.5, 5, 4.5, 6]\n```", "```py\n})\n```", "```py\ndata_batch\n```", "```py\ndef super_simple_alert(datapoint):\n```", "```py\n  if datapoint['temperature'] < 10:\n```", "```py\n    print('this is a real time alert. Temp too low')\n```", "```py\n  if datapoint['pH'] > 5.5:\n```", "```py\n    print('this is a real time alert. pH too high')\n```", "```py\ndata_iterable = data_batch.iterrows()\n```", "```py\nfor i,new_datapoint in data_iterable:\n```", "```py\n  print(new_datapoint.to_json())\n```", "```py\n  super_simple_alert(new_datapoint)\n```", "```py\nimport numpy as np\n```", "```py\ndef super_simple_alert(hist_datapoints):\n```", "```py\n  print(hist_datapoints)\n```", "```py\n  if np.mean(hist_datapoints['temperature']) < 10:\n```", "```py\n    print('this is a real time alert. temp too low')\n```", "```py\n  if np.mean(hist_datapoints['pH']) > 5.5:\n```", "```py\n    print('this is a real time alert. pH too high')\n```", "```py\ndata_iterable = data_batch.iterrows()\n```", "```py\n# create historization for window\n```", "```py\nhist_temp = []\n```", "```py\nhist_ph = []\n```", "```py\nfor i,new_datapoint in data_iterable:\n```", "```py\n  hist_temp.append([new_datapoint['temperature']])\n```", "```py\n  hist_ph.append([new_datapoint['pH']])\n```", "```py\n  hist_datapoint = {\n```", "```py\n      'temperature': hist_temp[-3:],\n```", "```py\n      'pH': hist_ph[-3:]\n```", "```py\n  }\n```", "```py\n  super_simple_alert(hist_datapoint)\n```", "```py\nimport numpy as np\n```", "```py\ndef super_simple_alert(hist_datapoints):\n```", "```py\n  print(hist_datapoints)\n```", "```py\n  if np.std(hist_datapoints['temperature']) > 1:\n```", "```py\n    print('this is a real time alert. temp variations too high')\n```", "```py\n  if np.std(hist_datapoints['pH']) > 1:\n```", "```py\n    print('this is a real time alert. pH variations too high')\n```", "```py\ndata_iterable = data_batch.iterrows()\n```", "```py\n# create historization for window\n```", "```py\nhist_temp = []\n```", "```py\nhist_ph = []\n```", "```py\nfor i,new_datapoint in data_iterable:\n```", "```py\n  hist_temp.append([new_datapoint['temperature']])\n```", "```py\n  hist_ph.append([new_datapoint['pH']])\n```", "```py\n  hist_datapoint = {\n```", "```py\n      'temperature': hist_temp[-3:],\n```", "```py\n      'pH': hist_ph[-3:]\n```", "```py\n  }\n```", "```py\n  super_simple_alert(hist_datapoint)\n```"]