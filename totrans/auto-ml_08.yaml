- en: '*Chapter 6*: Machine Learning with AWS'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '"Whatever you are studying right now, if you are not getting up to speed on
    deep learning, neural networks, etc., you lose. We are going through the process
    where software will automate software, automation will automate automation."'
  prefs: []
  type: TYPE_NORMAL
- en: – Mark Cuban
  prefs: []
  type: TYPE_NORMAL
- en: In the previous chapter, you were introduced to the Azure **Machine Learning**
    (**ML**) landscape and how to do automated ML in the Azure platform. In this chapter,
    you will learn how to get started with ML using **Amazon Web Services** (**AWS**),
    along with different offerings and a detailed understanding of the ginormous AWS
    cloud stack.
  prefs: []
  type: TYPE_NORMAL
- en: The theme of this chapter is to get started with an introduction to AWS ML capabilities
    to give a wider perspective of this large ecosystem; not only AWS as a hyperscaler
    but also the breadth of the field itself. Many use cases and permutations require
    specialized solutions and there is no one-size-fits-all solution for an enterprise's
    AI and ML needs. That is why this breadth of knowledge about every cloud offering
    is important as you embark on your automated ML journey.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Overview of ML in the AWS landscape
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Getting started with AWS ML
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Working with AWS SageMaker Autopilot
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ML in the AWS landscape
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Gartner is among a few major advisory companies that regularly review the landscape
    of technology and provide a comprehensive overview of their findings in their
    Magic Quadrant reports. In its latest release, the Magic Quadrant contains Anaconda
    and Altair as niche players, Microsoft, DataRobot, KNIME, Google, H2O.ai, RapidMiner,
    and Domino as visionaries, IBM as a challenger, and Alteryx, SAS, Databricks,
    MathWorks, TIBCO, and Dataiku as leaders in the data science and ML space.
  prefs: []
  type: TYPE_NORMAL
- en: It is surprising for us to not see AWS mentioned here. There are six companies
    in the leadership quadrant due to their consistent record of data science and
    AI solution deliveries, and seven are classified as visionaries. However, AWS
    not making it to the visionaries and/or the leaders quadrant is attributed to
    the announcement delay. The AWS flagship AI products SageMaker Studio and SageMaker
    Autopilot were announced after the deadline for Gartner submission; hence they
    didn't make the cut. It is surprising not to see AWS on the list because of the
    breadth of the AWS solution landscape. As a cloud services provider with a headstart,
    AWS dominates the market share greater than the sum of its closest three competitors.
  prefs: []
  type: TYPE_NORMAL
- en: 'AWS provides a comprehensive set of tools to developers, data scientists, ML
    engineers, and enthusiasts to work with AI and ML. These tools range from frameworks
    and infrastructure components, ML services, AI services, **Integrated Development
    Environments** (**IDEs**), and APIs to training and tutorials to get you started
    in the ever-growing world of AWS offerings. The following is a bird''s-eye view
    of the AWS ML stack:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.1 – Amazon ML stack – set of AI and ML services and capabilities
    – courtesy of Amazon re:Invent'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_6.1_B16890.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 6.1 – Amazon ML stack – set of AI and ML services and capabilities –
    courtesy of Amazon re:Invent
  prefs: []
  type: TYPE_NORMAL
- en: Due to both the depth and breadth of these myriad offerings, each of these services
    deserves at least a chapter of its own, but then we would not be able to meet
    those slippery deadlines. Therefore, in the interest of time and brevity, we will
    only focus on the automated ML part, that is, Amazon SageMaker and its Autopilot
    offering. Please see the *Further reading* section for links to read more about
    Amazon's ML stack.
  prefs: []
  type: TYPE_NORMAL
- en: 'SageMaker is a fully managed, cloud-based ML platform that provides AI operationalization
    capabilities by enabling an end-to-end ML workflow, without the metaphorical tears.
    In the following figure, you will see the components for end-to-end ML with AWS
    that are used to prepare, build, train, tune, deploy, and manage models. You will
    also notice how SageMaker Autopilot offers capabilities across the spectrum to
    automatically build and train models, as well as to prepare, build, and maintain
    these models throughout the life cycle:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.2 – End-to-end ML with AWS'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_6.2_B16890.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 6.2 – End-to-end ML with AWS
  prefs: []
  type: TYPE_NORMAL
- en: Even though our focus is on automated ML capabilities, it is worthwhile for
    you to explore the Amazon SageMaker landscape. One of the key offerings is Amazon
    SageMaker Studio, a web-based ML IDE to prepare, build, deploy, and operationalize
    models. When SageMaker is mentioned, this IDE is what most people think of, but
    you will see that it is part of a larger ecosystem.
  prefs: []
  type: TYPE_NORMAL
- en: 'Notebooks are the Swiss Army knives of data scientists. Amazon SageMaker Studio
    notebooks provide the comforting environment that data scientists have come to
    know and love, for the most part. Amazon SageMaker Ground Truth provides training
    datasets, while Amazon **Augmented AI** (**A2I**) enables **Human-in-the-Loop**
    (**HITL**), where a carbon-based lifeform is required to review the ML predictions,
    especially ones with low confidence scores. Amazon SageMaker Experiments is similar
    to what you have explored earlier, in the other hyperscaler offerings. It helps
    to track data, enables reconstruction and sharing of an experiment, and provides
    tracing information for auditing purposes. Amazon SageMaker comes with a wide
    variety of built-in algorithms for classification, regression, text analysis,
    topic modeling, forecasting, clustering, and many more use cases, as seen in the
    following figure:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.3 – Amazon SageMaker built-in algorithms'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_6.3_B16890.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 6.3 – Amazon SageMaker built-in algorithms
  prefs: []
  type: TYPE_NORMAL
- en: 'Amazon SageMaker Debugger helps inspect parameters and data, while Amazon SageMaker
    Model Monitor keeps an eye on model behavior in production. Model monitoring has
    gained loads of attention recently since data drift can significantly impact model
    quality, and therefore predictions. Online learning can be perilous; let Tay serve
    as a lesson learned. Some of the features of Amazon SageMaker for the democratization
    of AI can be seen in the following figure:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.4 – Different types of Amazon SageMaker capabilities – courtesy
    of Amazon re:Invent'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_6.4_B16890.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 6.4 – Different types of Amazon SageMaker capabilities – courtesy of
    Amazon re:Invent
  prefs: []
  type: TYPE_NORMAL
- en: Amazon SageMaker also offers reinforcement learning, batch transformation, and
    elastic inference capabilities. Amazon SageMaker Neo enables the *train once,
    run anywhere* capability and helps separate training and inference infrastructure.
    Neo is powered by the Apache-licensed Neo-AI-DLR common runtime, supports the
    usual suspects (TensorFlow, MXNet, PyTorch, ONNX, and XGBoost), and even claims
    to speed them up. Lastly, we have Amazon SageMaker Autopilot, our focus for this
    book, where citizen data scientists can build, train, and test ML models – bringing
    us one step closer to the democratization of AI.
  prefs: []
  type: TYPE_NORMAL
- en: We will discuss more on SageMaker Autopilot in the second half of this chapter.
    First, let's explore writing some code in AWS SageMaker.
  prefs: []
  type: TYPE_NORMAL
- en: Getting started with AWS ML
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this section, we will do a walkthrough of the AWS Management Console and
    show you how to use AWS SageMaker with step-by-step instructions. Let''s dive
    in. The AWS ML environment is fairly intuitive and easy to work with:'
  prefs: []
  type: TYPE_NORMAL
- en: To start, first open up the AWS Management Console by visiting [aws.amazon.com](http://aws.amazon.com)
    in your browser. Now, click on **Sign in to the Console**, or log back in (if
    you are a returning user):![Figure 6.5 – AWS Management Console
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_6.5_B16890.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 6.5 – AWS Management Console
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Enter your root (account) user's email address in the **Root user email address**
    field to proceed:![Figure 6.6 – AWS Management Console login
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_6.6_B16890.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 6.6 – AWS Management Console login
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Upon successful login, you will be taken to the following screen, the AWS Management
    Console:![Figure 6.7 – AWS Management Console
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_6.7_B16890.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 6.7 – AWS Management Console
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: AWS has a collection of tons of different services. In the AWS Management Console,
    find the services search box, then type `sagemaker` to find the `Amazon SageMaker`
    service, as shown in the following screenshot, and click on it:![Figure 6.8 –
    SageMaker search in the AWS Management Console
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_6.8_B16890.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 6.8 – SageMaker search in the AWS Management Console
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: This will take you to the SageMaker home page shown in the following screenshot.
    Here, you can read up on the different offerings, such as Ground Truth, notebooks,
    jobs processing, and so on:![Figure 6.9 – Amazon SageMaker home page
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_6.9_B16890.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 6.9 – Amazon SageMaker home page
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: The AWS team has put a copious amount of work into building the documentation,
    training videos, and partner training programs to get developers up to speed.
    You can see some of these courses in the *Further reading* section at the end
    of the chapter. For example, here, when you click on the top link in the left-hand
    pane, it will show you information regarding how you can build, train, and deploy
    models using Amazon SageMaker Studio. Contextual documentation, pretty neat eh!
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 6.10 – Amazon SageMaker Studio home page'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/Figure_6.10_B16890.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 6.10 – Amazon SageMaker Studio home page
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Now, let's explore SageMaker Studio, where we will be developing a classification
    model for our favorite dataset. In the **Get started** section, you will create
    a username and define an execution **Identity and Access Management** (**IAM**)
    role. An IAM role gives you granular permissions as to what you can and cannot
    do on the AWS platform. Click on the **Execution role** dropdown to select the
    role you intend to use (or create a new role):![Figure 6.11 – Amazon SageMaker
    Studio Get started screen
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_6.11_B16890.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 6.11 – Amazon SageMaker Studio Get started screen
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: You can create an IAM role if you don't have one already and grant the appropriate
    permissions, as shown in the following screenshot. S3 is one of the AWS storage
    mechanisms and the following screen allows you to create an IAM role to access
    S3 buckets. This is a one-time setup process, unless you plan to make changes:![Figure
    6.12 – Amazon SageMaker Studio IAM role creation screen
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_6.12_B16890.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 6.12 – Amazon SageMaker Studio IAM role creation screen
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Once you are done creating the IAM role, you will see the following success
    message. Press **Submit** to navigate to the next screen:![Figure 6.13 – Amazon
    SageMaker Studio IAM role creation success
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_6.13_B16890.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 6.13 – Amazon SageMaker Studio IAM role creation success
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Once the role is created, you will be taken to the SageMaker dashboard, where
    you will see the available offerings, as shown in the following screenshot:![Figure
    6.14 – Amazon SageMaker Studio dashboard
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_6.14_B16890.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 6.14 – Amazon SageMaker Studio dashboard
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: From this earlier screen, you can now navigate to the **Control Panel** to see
    your associated user and click on **Open Studio**, which will take you (finally)
    to SageMaker Studio:![Figure 6.15 – Amazon SageMaker Studio dashboard
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_6.15_B16890.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 6.15 – Amazon SageMaker Studio dashboard
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'The following screenshot shows what SageMaker Studio looks like. It is similar
    to other online cloud ML IDEs you might have seen in previous, and also in future,
    chapters about hyperscalers. Here, you can create notebooks, build experiments,
    and deploy and monitor your ML services:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 6.16 – Amazon SageMaker Studio dashboard'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/Figure_6.16_B16890.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 6.16 – Amazon SageMaker Studio dashboard
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Click on the **Create a notebook** button and you will see the following screen,
    which will open up the Jupyter Notebook:![Figure 6.17 – Amazon SageMaker Studio
    loading
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_6.17_B16890.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 6.17 – Amazon SageMaker Studio loading
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Once you see the following launcher screen, you will be able to create notebooks.
    In our case, we will clone the AWS SageMaker `examples` repository on GitHub ([https://GitHub.com/awslabs/amazon-sagemaker-examples](https://GitHub.com/awslabs/amazon-sagemaker-examples)):![Figure
    6.18 – Amazon SageMaker notebook activity launcher
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_6.18_B16890.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 6.18 – Amazon SageMaker notebook activity launcher
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Click on **Clone a Repository** and provide the GitHub repository to download
    it locally, and you will see the following window pop up. Click on **CLONE** to
    clone the repo:![Figure 6.19 – Amazon SageMaker Clone a repo dialog
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_6.19_B16890.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 6.19 – Amazon SageMaker Clone a repo dialog
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Once the repository is cloned, you will be able to see the following tree in
    AWS SageMaker:![Figure. 6.20 – Amazon SageMaker cloned repository directory view
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_6.20_B16890.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure. 6.20 – Amazon SageMaker cloned repository directory view
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Navigate to the `/aws_sagemaker_studio/getting_started/` folder and open the
    `xgboost_customer_churn_studio.ipynb` notebook. Upon opening this notebook, you
    will need to choose a preferred Python kernel to run it. Select the **Python 3
    (Data Science)** kernel:![Figure. 6.21 – Amazon SageMaker repository – selecting
    the preferred kernel
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_6.21_B16890.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure. 6.21 – Amazon SageMaker repository – selecting the preferred kernel
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Now that you have selected the kernel, you will notice that you still cannot
    run the notebook. Why? Well, you need a compute resource! Now it''s time to select
    the compute instance you would like to use. In our case, we went with the `ml.t3.medium`
    general-purpose instance (which costs $0.05 per hour at the time of writing) but
    you can choose bigger and better machines to make your experiments run faster.
    The pricing details are found here: [https://aws.amazon.com/sagemaker/pricing/](https://aws.amazon.com/sagemaker/pricing/).
    Click on **Save and continue** to proceed:![Figure. 6.22 – Amazon SageMaker repository
    – select the preferred compute instance'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_6.22_B16890.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure. 6.22 – Amazon SageMaker repository – select the preferred compute instance
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: There might be cases where you need to change the type of compute instance.
    In that case, you would need to delete the previous instances since your account
    may not allow multiple instances to run simultaneously. You can see the link for
    deleting an app in the following screenshot:![Figure. 6.23 – Amazon SageMaker
    repository – select the preferred compute instance
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_6.23_B16890.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure. 6.23 – Amazon SageMaker repository – select the preferred compute instance
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'The compute resource and kernel are identified; now you are all set and ready
    to run this notebook using the control toolbar shown in the following screenshot
    and install Python, and other related SDK. This introductory Amazon SageMaker
    Studio walkthrough is an excellent place to start since it walks you through some
    of the key features of SageMaker Studio. The key use case here is **Using Gradient
    Boosted Trees to Predict Mobile Customer Departure**, which includes preparation
    of the dataset and uploading it to Amazon S3, training with the Amazon SageMaker
    XGBoost algorithm, building an S3 experiment, debugging, hosting, and monitoring.
    We will leave the walkthrough as homework for you:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 6.24 – Amazon SageMaker Studio walkthrough notebook'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_6.24_B16890.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 6.24 – Amazon SageMaker Studio walkthrough notebook
  prefs: []
  type: TYPE_NORMAL
- en: 'In this section, you have learned how to get started with AWS SageMaker and
    did a quick walkthrough. This is not meant to be an exhaustive summary of the
    SageMaker features, which is what the Amazon SageMaker Developer Guide offers.
    You can download it from here: [https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-dg.pdf](https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-dg.pdf).'
  prefs: []
  type: TYPE_NORMAL
- en: In the next section, we will look into the automated ML features of AWS SageMaker.
  prefs: []
  type: TYPE_NORMAL
- en: AWS SageMaker Autopilot
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'SageMaker Autopilot, as the name suggests, is a *fully managed system that
    provides an automatic ML solution*. The goal, as in any automated ML solution,
    is to try to offload most of the redundant and time-consuming, repetitive work
    to the machine while humans can do higher-level cognitive tasks. In the following
    diagram, you can see the parts of the ML life cycle that SageMaker Autopilot covers:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.25 – Lifecycle of Amazon SageMaker'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_6.25_B16890.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 6.25 – Lifecycle of Amazon SageMaker
  prefs: []
  type: TYPE_NORMAL
- en: 'As part of the SageMaker ecosystem, SageMaker Autopilot is tasked with being
    the automated ML engine. A typical automated ML user flow is defined in the following
    figure, where a user analyzes the tabular data, selects the target prediction
    column, and then lets Autopilot do its magic of finding the correct algorithm.
    The secret sauce here is the underlying Bayesian optimizer as defined by *Das
    et al.* in their paper *Amazon SageMaker Autopilot: a white box AutoML solution
    at scale* ([https://www.amazon.science/publications/amazon-sagemaker-autopilot-a-white-box-automl-solution-at-scale](https://www.amazon.science/publications/amazon-sagemaker-autopilot-a-white-box-automl-solution-at-scale)):'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.26 – Amazon SageMaker Autopilot life cycle'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_6.26_B16890.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 6.26 – Amazon SageMaker Autopilot life cycle
  prefs: []
  type: TYPE_NORMAL
- en: 'Once the automatic model creation phase completes, it provides full visibility
    for the model notebooks. The workflow in the following figure shows the job processing
    of a ML pipeline. Providing a structured dataset and the target column, AWS SageMaker
    Autopilot splits the data for training and validation folds, transforms the data
    with pipeline execution, reviews the list of models, and ranks them by the quality
    metric:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.22 – Amazon SageMaker Autopilot – under the hood'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_6.27_B16890.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 6.22 – Amazon SageMaker Autopilot – under the hood
  prefs: []
  type: TYPE_NORMAL
- en: The Bayesian optimizer and multiple trials based on the candidate notebook are
    at the root of this hyperparameter optimization. The following under-the-hood
    diagram shows how one candidate notebook spawns multiple trials, and even more
    model training and tuning instances. This process ends up generating a leaderboard
    of candidate models to be chosen and ranked on measures such as model accuracy,
    latency, and other trade-offs.
  prefs: []
  type: TYPE_NORMAL
- en: 'A trade-off can be seen in the following figure. The accuracy difference between
    model #1 and #2 is 2%; however, the latency, that is, the time the model took
    to respond, is increased by 250 ms, which is quite significant:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.28 – Autopilot job accuracy versus latency trade-off – courtesy
    of Amazon re:Invent'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_6.28_B16890.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 6.28 – Autopilot job accuracy versus latency trade-off – courtesy of
    Amazon re:Invent
  prefs: []
  type: TYPE_NORMAL
- en: SageMaker Autopilot publishes the final models, the training approach, that
    is, the pipeline showing the hyperparameters, the algorithm, and the associated
    measure. This demonstration helps to make these models transparent from an MLOps
    perspective and creates high-quality, editable ML models that scale well. These
    models can be published and monitored within the SageMaker ecosystem for drift,
    and an alternative model can be chosen and deployed at will. These capabilities
    are at the forefront of the AWS ML ecosystem, enabling developers to build and
    deploy valuable solutions for customers.
  prefs: []
  type: TYPE_NORMAL
- en: AWS JumpStart
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In Dec 2020, Amazon announced SageMaker JumpStart as a capability to access
    pre-built model repositories also called model zoos to accelerate model development.
    Integrated as apart of Amazon SageMaker, JumpStart provides pre-built templates
    for predictive maintenance, computer vision, autonomous driving, fraud detection,
    credit risk prediction, OCR for extracting and analyze data from documents, churn
    prediction, and personalized recommendations.
  prefs: []
  type: TYPE_NORMAL
- en: JumpStart provides an excellent starting point for developers to use these pre-existing
    templates to JumpStart (pun intended) their development. These accelerator and
    starter kits are available on GitHub here. [https://github.com/awslabs/](https://github.com/awslabs/)
    and provide recipes and best practices to use Amazon SageMaker model development
    and deployment mechanisms.
  prefs: []
  type: TYPE_NORMAL
- en: Further details on using AWS JumpStart can be found here. [https://docs.aws.amazon.com/sagemaker/latest/dg/studio-jumpstart.html](https://docs.aws.amazon.com/sagemaker/latest/dg/studio-jumpstart.html)
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, you learned about the AWS ML stack and how to get started with
    AWS SageMaker and notebook development. You also became acquainted with SageMaker
    Autopilot and its automated ML workflow capabilities. We provided you with an
    overview of the built-in algorithms, the SageMaker ML life cycle, and what algorithms
    and techniques are used by SageMaker automated ML. This introduction gives you
    the background knowledge needed for further exploration and learning of the AWS
    ML stack and the SageMaker automated ML life cycle.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will use some of the SageMaker Autopilot features practically
    to run classification, regression, and time series analysis.
  prefs: []
  type: TYPE_NORMAL
- en: Further reading
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'For more information on the following topics, you can refer to the given links:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Amazon SageMaker Autopilot: a white box AutoML solution at scale* by Piali
    Das et al.: [https://www.amazon.science/publications/amazon-sagemaker-autopilot-a-white-box-automl-solution-at-scale](https://www.amazon.science/publications/amazon-sagemaker-autopilot-a-white-box-automl-solution-at-scale)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Build, train, and deploy a ML model with Amazon SageMaker*: [https://aws.amazon.com/getting-started/hands-on/build-train-deploy-machine-learning-model-sagemaker/](https://aws.amazon.com/getting-started/hands-on/build-train-deploy-machine-learning-model-sagemaker/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Amazon SageMaker Studio - AutoML with Amazon SageMaker AutoPilot (part 1)*:
    [https://www.youtube.com/watch?v=qMEtqJPhqpA](https://www.youtube.com/watch?v=qMEtqJPhqpA)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Amazon SageMaker Studio - AutoML with Amazon SageMaker AutoPilot (part 2)*:
    [https://www.youtube.com/watch?v=qMEtqJPhqpA&ab_channel=JulienSimon](https://www.youtube.com/watch?v=qMEtqJPhqpA&ab_channel=JulienSimon)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*SageMaker Studio - AutoML with Amazon SageMaker AutoPilot (part 3)*: [https://www.youtube.com/watch?v=KZSTsWrDGXs&ab_channel=JulienSimon](https://www.youtube.com/watch?v=KZSTsWrDGXs&ab_channel=JulienSimon)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*SageMaker Studio - AutoML with Amazon SageMaker AutoPilot (part 4)*: [https://www.youtube.com/watch?v=vRHyX3kDstI&ab_channel=JulienSimon](https://www.youtube.com/watch?v=vRHyX3kDstI&ab_channel=JulienSimon)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
