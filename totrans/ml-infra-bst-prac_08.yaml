- en: '6'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '6'
- en: Processing Data in Machine Learning Systems
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在机器学习系统中处理数据
- en: We talked about data in [*Chapter 3*](B19548_03.xhtml#_idTextAnchor038), where
    we introduced the types of data that are used in machine learning systems. In
    this chapter, we’ll dive deeper into ways in which data and algorithms are entangled.
    We’ll talk about data in generic terms, but in this chapter, we’ll explain what
    kind of data is needed in machine learning systems. I’ll explain the fact that
    all kinds of data are used in numerical form – either as a feature vector or as
    more complex feature matrices. Then, I’ll explain the need to transform unstructured
    data (for example, text) into structured data. This chapter will lay the foundations
    for diving deeper into each type of data, which is the content of the next few
    chapters.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在[*第3章*](B19548_03.xhtml#_idTextAnchor038)中讨论了数据，其中我们介绍了在机器学习系统中使用的数据类型。在本章中，我们将更深入地探讨数据和算法相互交织的方式。我们将以通用术语讨论数据，但在本章中，我们将解释机器学习系统中需要哪种类型的数据。我将解释所有类型的数据都是以数值形式使用的——要么作为特征向量，要么作为更复杂的特征矩阵。然后，我将解释将非结构化数据（例如，文本）转换为结构化数据的必要性。本章将为深入探讨每种类型的数据奠定基础，这是下一章的内容。
- en: 'In this chapter, we will do the following:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将做以下工作：
- en: Discuss the process of measurement (obtaining numerical data) and the measurement
    instruments that are used in that process
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 讨论测量过程（获取数值数据）以及在该过程中使用的测量仪器
- en: Visualize numerical data using the Matplotlib and Seaborn libraries
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Matplotlib和Seaborn库可视化数值数据
- en: Reduce dimensions using **principal component** **analysis** (**PCA**)
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用**主成分分析**（**PCA**）降低维度
- en: Work with Hugging Face’s Dataset module to download and process image and text
    data
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Hugging Face的Dataset模块下载和处理图像和文本数据
- en: Numerical data
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数值数据
- en: Numerical data usually comes in the form of tables of numbers, kind of like
    database tables. One of the most common data in this form is metrics data – for
    example, the standard object-oriented metrics that have been used since the 1980s.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 数值数据通常以数字表的形式出现，类似于数据库表。这种形式中最常见的数据之一是指标数据——例如，自1980年代以来一直使用的标准面向对象指标。
- en: 'Numerical data is often the result of a measurement process. The measurement
    process is a process where we quantify the empirical properties of an entity using
    measurement instruments to a number. The process must guarantee that important
    empirical properties are preserved in the mathematical domain – that is, in the
    numbers. *Figure 6**.1* shows an example of this process:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 数值数据通常是测量过程的成果。测量过程是一个使用测量仪器将实体的经验属性量化为数字的过程。这个过程必须保证重要的经验属性在数学领域中得以保留——也就是说，在数字中。*图6.1*展示了这一过程的例子：
- en: '![Figure 6.1 – The measurement process with an example of quality measurement
    using defects](img/B19548_06_1.jpg)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
  zh: '![图6.1 – 使用缺陷进行质量测量的测量过程示例](img/B19548_06_1.jpg)'
- en: Figure 6.1 – The measurement process with an example of quality measurement
    using defects
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.1 – 使用缺陷进行质量测量的测量过程示例
- en: The important part of this process consists of three elements. First is the
    measurement instrument, which needs to map the empirical properties to numbers
    in a true way. Then, there are the measurement standards, such as the ISO **Vocabulary
    in Metrology** (**VIM**), which is called the measurement’s trueness. Finally,
    we have the result of the measurement process – the process of applying the measurement
    instrument to a specific measured entity – which results in a number, a quantification
    of the measured property. A single number, however, cannot characterize an entire
    software product or even a part of it, regardless of how true it is to the measured
    entity. Therefore, in practice, we use several measurement instruments to create
    a holistic view of the measured entity.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 这个过程的重要部分包括三个要素。首先是测量仪器，它需要将经验属性真实地映射到数字上。然后是测量标准，例如ISO **计量学词汇**（**VIM**），被称为测量的真值。最后，我们有测量过程的成果——将测量仪器应用于特定的测量实体——这会产生一个数字，即测量属性的量化。然而，一个单一的数字并不能表征整个软件产品或其任何部分，无论它对测量实体的真实性如何。因此，在实践中，我们使用多个测量仪器来创建对测量实体的整体视图。
- en: This is where numerical data comes in. Each measurement that characterizes the
    measured entity is stored in a database or a table – each entity becomes one row
    and each metric becomes one column. The more columns we have, the better the characteristics
    of the measured entity. However, at the same time, the more measures we collect,
    the higher the risk that they will be interconnected, correlated (positively and
    negatively), and that they will overlap. So, we need to work a bit with that data
    to get some orientation of it. So, first, we must visualize the data.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是数值数据发挥作用的地方。每个表征测量实体的测量值都存储在数据库或表中——每个实体成为一行，每个度量成为一列。我们拥有的列越多，测量的实体特征就越好。然而，同时，我们收集的度量越多，它们相互关联、相关（正相关性或负相关性）以及重叠的风险就越高。因此，我们需要对数据进行一些处理，以便对其有一个大致的了解。所以，首先，我们必须可视化数据。
- en: 'The data we’ll use in this part of this chapter comes from a paper by Alhustain,
    Sultan (Predicting Relative Thresholds for Object Oriented Metrics." 2021 IEEE/ACM
    International Conference on Technical Debt (TechDebt). IEEE, 2021) and is available
    from Zenodo ([https://zenodo.org/records/4625975](https://zenodo.org/records/4625975)),
    one of the most commonly used open data repositories in software engineering research.
    The data contains the values of measures for typical object-oriented metrics:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的这一部分所使用的数据来自 Alhustain 和 Sultan 的一篇论文（预测面向对象度量的相对阈值。"2021 IEEE/ACM 国际技术债务会议（TechDebt）。IEEE，2021）并可在
    Zenodo 上获得（[https://zenodo.org/records/4625975](https://zenodo.org/records/4625975)），这是软件工程研究中最常用的开放数据存储库之一。数据包含典型面向对象度量度量的值：
- en: '**Coupling between objects** (**CB**): The number of references to other classes
    from the measured entity (class)'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**对象之间的耦合**（**CB**）：从测量实体（类）到其他类的引用数量'
- en: '**Direct class coupling** (**DCC**): The number of connections from this class
    to other classes (for example, associations)'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**直接类耦合**（**DCC**）：从此类到其他类的连接数量（例如，关联）'
- en: '**ExportCoupling**: The number of outgoing connections from the class'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**导出耦合**（**ExportCoupling**）：从类的出去连接数量'
- en: '**ImportCoupling**: The number of incoming connections to the class'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**导入耦合**（**ImportCoupling**）：到类的进入连接数量'
- en: '**Number of methods** (**NOM**): The number of methods in the class'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**方法数量**（**NOM**）：类中的方法数量'
- en: '**Weighted methods per class** (**WMC**): The number of methods in the class,
    weighted by their size'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**按类加权的度量方法**（**WMC**）：类中方法的数量，按其大小加权'
- en: '**Defect count** (**defect**): The number of defects discovered for this class'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**缺陷计数**（**defect**）：为此类发现的缺陷数量'
- en: The dataset describes several software projects from the Apache foundation –
    for example, the Ant tool. For each product, the measured entities are classes
    in the project.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 数据集描述了来自 Apache 基金会的几个软件项目——例如，Ant 工具。对于每个产品，测量的实体是项目中的类。
- en: So, let’s start with the next best practice, which will lead us to the visualization.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，让我们从下一个最佳实践开始，这将引导我们进入可视化阶段。
- en: 'Best practice #34'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '最佳实践 #34'
- en: When working with numerical data, visualize it first, starting with the summary
    views of the data.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在处理数值数据时，首先可视化它，从数据的概览视图开始。
- en: When I work with numerical data, I usually start by visualizing it. I start
    with some overview of the data and then work my way toward the details.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 当我处理数值数据时，我通常从可视化开始。我从数据的概述开始，然后逐步深入到细节。
- en: Summarizing the data
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 总结数据
- en: Summarizing the data can be done using tables and pivots, as well as charts.
    One of the charts that I usually start working with is the correlogram – it’s
    a diagram that shows correlations between each variable/measure in the dataset.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 使用表格、交叉表以及图表可以总结数据。我通常开始工作的图表之一就是相关图——它是一个显示数据集中每个变量/度量之间相关性的图表。
- en: 'So, let’s read our data into the notebook and start visualizing it:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，让我们将数据读入笔记本并开始可视化：
- en: '[PRE0]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Once the dataset is in memory, we can use Python’s Seaborn library to visualize
    it using the correlogram. The following code does just that:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦数据集存储在内存中，我们可以使用 Python 的 Seaborn 库通过相关图来可视化它。以下代码就是这样做：
- en: '[PRE1]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The result of this code fragment is the following correlogram:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 此代码片段的结果是以下相关图：
- en: '![Figure 6.2 – Correlogram for the dataset from the paper of Alhusain](img/B19548_06_2.jpg)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.2 – 来自 Alhusain 论文数据集的相关图](img/B19548_06_2.jpg)'
- en: Figure 6.2 – Correlogram for the dataset from the paper of Alhusain
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.2 – 来自 Alhusain 论文数据集的相关图
- en: 'The interesting part here is the distribution of each of the measures presented
    in the cells on the diagonal. In the case of our data, this distribution is hard
    to interpret for some of the variables, so we can visualize it a bit differently.
    When we replace the last line of the code fragment with `sns.pairplot(dfDataAnt13,
    diag_kind="kde")`, we get a new visualization, with a better view of the distribution.
    This is shown in *Figure 6**.3*:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有趣的部分是展示在对角线单元格中的每个度量值的分布。在我们的数据中，这种分布对于某些变量来说很难解释，因此我们可以以不同的方式可视化它。当我们用`sns.pairplot(dfDataAnt13,
    diag_kind="kde")`替换代码片段的最后一行时，我们得到一个新的可视化，可以更好地查看分布。这显示在*图6.3*：
- en: '![Figure 6.3 – Correlogram with a better visualization of the distribution
    of each measure](img/B19548_06_3.jpg)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![图6.3 – 具有更好分布可视化的自相关图](img/B19548_06_3.jpg)'
- en: Figure 6.3 – Correlogram with a better visualization of the distribution of
    each measure
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.3 – 具有更好分布可视化的自相关图
- en: These correlograms provide us with a quick orientation of which variables can
    be correlated with one another. These correlations are something that we can use
    later in our work.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 这些自相关图为我们提供了快速了解哪些变量可以相互关联的导向。这些相关性是我们可以在以后的工作中使用的。
- en: 'We can also look at the data by visualizing the numbers using heatmaps. Heatmaps
    are tabular visualizations where the intensity of the color indicates the strength
    of the value of each variable. We can use the following code to create a heatmap:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以通过使用热图来可视化数字来查看数据。热图是一种表格可视化，其中颜色的强度表示每个变量值的强度。我们可以使用以下代码创建热图：
- en: '[PRE2]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The resulting diagram is presented in *Figure 6**.4*:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 结果图展示在*图6.4*：
- en: '![Figure 6.4 – Summary heatmap for the measures](img/B19548_06_4.jpg)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![图6.4 – 度量值的总结热图](img/B19548_06_4.jpg)'
- en: Figure 6.4 – Summary heatmap for the measures
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.4 – 度量值的总结热图
- en: Before diving deeper into correlation analysis, I often dive a bit deeper into
    pairwise comparisons. I also recommend my students to do that since working with
    pairs allows us to understand the connections between variables.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在深入进行相关性分析之前，我经常先进行一些成对比较的深入分析。我也建议我的学生这样做，因为处理成对数据可以让我们理解变量之间的联系。
- en: So, here is my next best practice.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，这是我的下一个最佳实践。
- en: 'Best practice #35'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 最佳实践#35
- en: When visualizing data at the aggregate level, focus on the strength of relationships
    and connections between the values.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 在总体层面上可视化数据时，关注值之间关系的强度和连接。
- en: Visualizations at the aggregate level can provide us with many different views,
    but what we should look for is the connections between the variables. Correlograms
    and heatmaps provide us with this kind of visualization and understanding of the
    data.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在总体层面上进行可视化可以为我们提供许多不同的视角，但我们应该寻找变量之间的联系。自相关图和热图为我们提供了这种数据可视化和理解。
- en: Diving deeper into correlations
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 深入了解相关性
- en: 'A good set of diagrams to work with are scatter plots. However, I often use
    diagrams that are called KDE plots, also called *density plots*. They provide
    a nicer overview of the variables. The following code fragment visualizes the
    data in this way:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 一套好的图表用于工作的是散点图。然而，我经常使用被称为KDE图（核密度估计图）的图表，也称为*密度图*。它们提供了变量更好的概述。以下代码片段以这种方式可视化数据：
- en: '[PRE3]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The result of this code fragment is the diagram presented in *Figure 6**.5*:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 此代码片段的结果是*图6.5*中展示的图表：
- en: '![Figure 6.5 – Density plot for two measures – DCC and CBO](img/B19548_06_5.jpg)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![图6.5 – 两个度量值（DCC和CBO）的密度图](img/B19548_06_5.jpg)'
- en: Figure 6.5 – Density plot for two measures – DCC and CBO
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.5 – 两个度量值（DCC和CBO）的密度图
- en: This diagram indicates that two measures – CBO and DCC – are quite strongly
    dependent on one another (or they quantify similar/same measurable concepts).
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 此图表表明，两个度量值 – CBO和DCC – 相互之间有很强的依赖性（或者它们量化了相似/相同的可度量概念）。
- en: 'We can make this diagram a bit nicer if we want to use it in a dashboard by
    using the following code fragment:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们想在仪表板上使用此图，可以使用以下代码片段使其更美观：
- en: '[PRE4]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'This code fragment results in the following diagram:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 此代码片段的结果是以下图表：
- en: '![Figure 6.6 – Density plot with a colormap](img/B19548_06_6.jpg)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![图6.6 – 带有颜色图的密度图](img/B19548_06_6.jpg)'
- en: Figure 6.6 – Density plot with a colormap
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.6 – 带有颜色图的密度图
- en: 'The preceding diagram shows both the correlation and the number of points that
    are in each area – the more intense the color, the more data points are in that
    area. The same diagram for the DCC and CBO measures is shown in *Figure 6**.7*:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的图表显示了每个区域的相关性和点数——颜色越深，该区域的数据点就越多。对于DCC和CBO测量的相同图表显示在*图6.7*中：
- en: '![Figure 6.7 – Density plot with a colormap for the DCC and CBO measures](img/B19548_06_7.jpg)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![图6.7 – DCC和CBO测量的密度图，带有颜色图](img/B19548_06_7.jpg)'
- en: Figure 6.7 – Density plot with a colormap for the DCC and CBO measures
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.7 – DCC和CBO测量的密度图，带有颜色图
- en: 'Finally, we can use bubble diagrams to visualize the correlations and the number
    of data points per group. The following code creates the bubble diagram:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们可以使用气泡图来可视化相关性和每个组的数据点数。以下代码创建了气泡图：
- en: '[PRE5]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'This code results in the diagram presented in *Figure 6**.8*:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 这段代码产生了*图6.8*中展示的图表：
- en: '![Figure 6.8 – Scatter plot – a variant called a bubble plot](img/B19548_06_8.jpg)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![图6.8 – 散点图 – 一种称为气泡图的变体](img/B19548_06_8.jpg)'
- en: Figure 6.8 – Scatter plot – a variant called a bubble plot
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.8 – 散点图 – 一种称为气泡图的变体
- en: This plot lets us see the number of points in each area of the scatterplot,
    which helps us track the correlations visually.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 这个图让我们可以看到散点图中每个区域的点数，这有助于我们直观地追踪相关性。
- en: Summarizing individual measures
  id: totrans-72
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 总结单个测量值
- en: 'Scatterplots and density plots are good for tracking dependencies between variables.
    However, we often need to summarize individual measures. For that, we can use
    boxplots. The following code creates a boxplot for the data in our example:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 散点图和密度图适合追踪变量之间的依赖关系。然而，我们经常需要总结单个测量值。为此，我们可以使用箱线图。以下代码为我们示例中的数据创建了一个箱线图：
- en: '[PRE6]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The result is the boxplot presented in *Figure 6**.9*:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 结果是*图6.9*中展示的箱线图：
- en: '![Figure 6.9 – Boxplot summarizing the CBO measure for classes with and without
    defects](img/B19548_06_9.jpg)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![图6.9 – 描述有缺陷和无缺陷类别的CBO测量的箱线图](img/B19548_06_9.jpg)'
- en: Figure 6.9 – Boxplot summarizing the CBO measure for classes with and without
    defects
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.9 – 描述有缺陷和无缺陷类别的CBO测量的箱线图
- en: The summary provides us with a quick visual indication that the classes with
    defects are often more connected to other classes than the classes without defects.
    This is not that surprising because usually, the classes are connected and the
    ones that are *not* connected are often very simple and therefore not error-prone.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 总结提供了快速视觉指示，表明有缺陷的类别通常比无缺陷的类别与其他类别更紧密地连接。这并不令人惊讶，因为通常类别是相互连接的，而那些不连接的类别通常非常简单，因此不太可能出错。
- en: 'A variation of the boxplot is the violin plot, which we get if we change the
    last line of the last code fragment to `sns.violinplot( x=''Defect'', y=''CBO'',
    data=dfDataAnt13)`. *Figure 6**.10* presents such a violin diagram:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 箱线图的一种变体是提琴图，如果我们把最后一个代码片段的最后一行改为`sns.violinplot( x='Defect', y='CBO', data=dfDataAnt13)`，就会得到这样的提琴图：*图6.10*展示了这样的提琴图：
- en: '![Figure 6.10 – A violin diagram, which is a variation of a boxplot](img/B19548_06_10.jpg)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![图6.10 – 一种箱线图的变体，称为提琴图](img/B19548_06_10.jpg)'
- en: Figure 6.10 – A violin diagram, which is a variation of a boxplot
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.10 – 一种箱线图的变体，称为提琴图
- en: Visualization is a good way to understand the numerical data that we have at
    our disposal. We can go even further and start working with it by using methods
    such as dimensionality reduction.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 可视化是理解我们拥有的数值数据的好方法。我们可以更进一步，通过使用降维等方法开始与之工作。
- en: So, here is the next best practice.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，这里是下一个最佳实践。
- en: 'Best practice #36'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 最佳实践#36
- en: Diving deeper into individual analyses should be guided by the machine learning
    task at hand.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 深入分析单个分析应该由当前的机器学习任务指导。
- en: Although we have not discussed the tasks for our numerical data explicitly,
    it is always there. In the case of defect-related data, the most common task is
    predicting the number of defects per module or class. This means that charts such
    as the violin plot are very useful, providing us with a visual understanding of
    whether there is some sort of difference – a difference that a machine learning
    model can capture.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然我们没有明确讨论我们的数值数据的任务，但它始终存在。在涉及缺陷相关的数据的情况下，最常见的任务是预测每个模块或类别的缺陷数量。这意味着像提琴图这样的图表非常有用，它为我们提供了对是否存在某种差异的视觉理解——这种差异可以被机器学习模型捕捉。
- en: Reducing the number of measures – PCA
  id: totrans-87
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 减少测量数量 – 主成分分析（PCA）
- en: 'The final analysis that we’ll do regarding numerical data in this chapter is
    about reducing the number of variables. It comes from the field of statistics
    and has been used for reducing the number of variables in the experiment: PCA
    (Wold, 1987 #104). In short, PCA is a technique that finds the best possible fit
    of a pre-defined number of vectors to the data at hand. It does not remove any
    variables; instead, it recalculates them in such a way that the correlation among
    the new set of variables – called principal components – is minimalized.'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '本章关于数值数据的最终分析是关于减少变量数量。它来自统计学领域，并且已被用于减少实验中的变量数量：PCA（Wold，1987 #104）。简而言之，PCA是一种找到最佳拟合预定义数量向量的技术，以适应手头的数据。它不会删除任何变量；相反，它会以这种方式重新计算它们，使得新变量集（称为主成分）之间的相关性最小化。'
- en: 'Let’s apply this to our dataset using the following code fragment:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用以下代码片段将此应用于我们的数据集：
- en: '[PRE7]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Now, we can visualize the data:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以可视化数据：
- en: '[PRE8]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'This code fragment results in the diagram presented in *Figure 6**.11*:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 这个代码片段产生了*图6.11*中展示的图表：
- en: '![Figure 6.11 – PCA results for reducing the dimensionality of the defect dataset
    to two. The red data points are the classes that have defects and the green data
    points are the classes without defects](img/B19548_06_11.jpg)'
  id: totrans-94
  prefs: []
  type: TYPE_IMG
  zh: '![图6.11 – 缩减缺陷数据集维度的PCA结果。红色数据点是具有缺陷的类别，绿色数据点是无缺陷的类别](img/B19548_06_11.jpg)'
- en: Figure 6.11 – PCA results for reducing the dimensionality of the defect dataset
    to two. The red data points are the classes that have defects and the green data
    points are the classes without defects
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.11 – 缩减缺陷数据集维度的PCA结果。红色数据点是具有缺陷的类别，绿色数据点是无缺陷的类别
- en: What is typical about a PCA transformation is its linearity. We can see that
    this diagram contains trails of that – it looks like a triangle with one horizontal
    dimension along the *x axis*, one vertical dimension along the *y axis*, and a
    0-point on the left-hand side.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: PCA变换的典型特征是其线性。我们可以看到这个图表包含了一些这样的痕迹 - 它看起来像一个三角形，有一个水平维度沿着*x轴*，一个垂直维度沿着*y轴*，以及左侧的0点。
- en: For this dataset, the diagram shows that the red-marked data points are grouped
    toward the left, and the green-marked points are spread a bit more to the right.
    This means that there is some difference between the classes that have defects
    and the classes that do not have defects. However, there is no clear-cut distinction.
    That would indicate that the machine learning model can’t find a pattern – at
    least, not a pattern that would be robust.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个数据集，图表显示红色标记的数据点聚集在左侧，而绿色标记的点稍微向右分散。这意味着有缺陷和无缺陷的类别之间存在一些差异。然而，这种差异并不明显。这表明机器学习模型找不到模式
    - 至少，找不到一个稳健的模式。
- en: Other types of data – images
  id: totrans-98
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 其他类型的数据 - 图片
- en: In [*Chapter 3*](B19548_03.xhtml#_idTextAnchor038), we looked at image data,
    mostly from the perspective of what kind of image data exists. Now, we will take
    a more pragmatic approach and introduce a better way of working with images than
    just using files.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 在[*第3章*](B19548_03.xhtml#_idTextAnchor038)中，我们研究了图像数据，主要从存在什么类型的图像数据的视角。现在，我们将采取更实际的方法，介绍一种比仅使用文件更好的图像处理方式。
- en: 'Let’s look at how image data is stored in a popular repository – Hugging Face.
    The library has a specific module for working with datasets – conveniently called
    *Dataset*. It can be installed using the `pip install -q datasets` command. So,
    let’s load a dataset and visualize one of the images from there using the following
    code fragment:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看图像数据在流行的存储库Hugging Face中是如何存储的。这个库有一个专门用于处理数据集的模块 - 便于称为*Dataset*。它可以通过`pip
    install -q datasets`命令安装。因此，让我们加载一个数据集，并使用以下代码片段可视化其中一张图片：
- en: '[PRE9]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Now, the variable dataset contains all the images. Well, not all of them –
    just the part that the designer of the dataset specified as the training set (see
    the last line of the code fragment). We can visualize one of the images using
    the following code:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，变量数据集包含了所有图片。嗯，不是全部 - 只包含数据集设计者指定的训练集部分（见代码片段的最后一行）。我们可以使用以下代码来可视化其中一张图片：
- en: '[PRE10]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Since the images are under unknown copyright, we won’t visualize them in this
    book. However, the preceding line will show the first image in the dataset. We
    can also take a look at what else is in that dataset by simply typing `dataset`.
    We will see the following output:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 由于图像的版权未知，我们不会在这本书中可视化它们。然而，上一行将显示数据集中的第一张图像。我们还可以通过简单地输入 `dataset` 来查看该数据集中还有什么其他内容。我们将看到以下输出：
- en: '[PRE11]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'This means that the dataset contains two columns – images and their labels.
    It contains 75,750 of them. Let’s see what the distribution of labels looks like
    in this dataset using the following code:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着数据集包含两列——图像及其标签。它包含75,750个。让我们使用以下代码来看看这个数据集中标签的分布情况：
- en: '[PRE12]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'This gives us a nice histogram, as shown in *Figure 6**.12*:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 这为我们提供了一个漂亮的直方图，如图 *图6.12* 所示：
- en: '![Figure 6.12 – Histogram with the distributions of labels. Each column is
    the number of images labeled with the appropriate label – 0 to 100](img/B19548_06_12.jpg)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![图6.12 – 标签分布的直方图。每列是带有适当标签的图像数量——0到100](img/B19548_06_12.jpg)'
- en: Figure 6.12 – Histogram with the distributions of labels. Each column is the
    number of images labeled with the appropriate label – 0 to 100
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.12 – 标签分布的直方图。每列是带有适当标签的图像数量——0到100
- en: This diagram shows classes of images that are larger than others – the ones
    that contain over 2,000 images in them. However, it is difficult to check what
    these labels mean without understanding the dataset. We can do that by manually
    visualizing the images. So, here is my next best practice.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 此图表显示了图像类别，其中包含的图像数量大于其他类别——包含超过2,000个图像的类别。然而，如果不理解数据集，很难检查这些标签的含义。我们可以通过手动可视化图像来做到这一点。所以，这是我的下一个最佳实践。
- en: 'Best practice #37'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '最佳实践 #37'
- en: When visualizing the metadata for images, make sure you visualize the images
    themselves.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 在可视化图像的元数据时，确保可视化图像本身。
- en: We mustn’t forget to visualize the image data by plotting the images. We need
    to ensure that we know what the labels mean and what we use them for.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 我们必须记住通过绘制图像来可视化图像数据。我们需要确保我们知道标签的含义以及我们如何使用它们。
- en: Text data
  id: totrans-115
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 文本数据
- en: 'For the text data, we’ll use the same Hugging Face hub to obtain two kinds
    of data – unstructured text, as we did in [*Chapter 3*](B19548_03.xhtml#_idTextAnchor038),
    and structured data – programming language code:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 对于文本数据，我们将使用相同的Hugging Face hub获取两种类型的数据——非结构化文本，正如我们在 [*第3章*](B19548_03.xhtml#_idTextAnchor038)
    中所做的那样，以及结构化数据——编程语言代码：
- en: '[PRE13]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'The preceding code fragment loads the dataset of movie reviews from the **Internet
    Movie Database** (**IMDb**). We can get an example of the data by using an interface
    that’s similar to what we used for images:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 上述代码片段从 **互联网电影数据库**（**IMDb**）加载电影评论数据集。我们可以通过使用与图像类似的接口来获取数据的示例：
- en: '[PRE14]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'We can visualize it using a similar one too:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用类似的图表来可视化它：
- en: '[PRE15]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'The preceding code fragment creates the following diagram, showing that both
    positive and negative comments are perfectly balanced:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 上述代码片段创建以下图表，显示正面和负面评论完全平衡：
- en: '![Figure 6.13 – Balanced classes in the IMDb movie database reviews](img/B19548_06_13.jpg)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
  zh: '![图6.13 – IMDb电影数据库评论中的平衡类别](img/B19548_06_13.jpg)'
- en: Figure 6.13 – Balanced classes in the IMDb movie database reviews
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.13 – IMDb电影数据库评论中的平衡类别
- en: We can do all kinds of processing on the text data in the next steps. However,
    this processing is related to feature extraction, so we’ll talk about it in the
    next few chapters.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在下一步对文本数据进行各种处理。然而，这种处理与特征提取相关，所以我们将在接下来的几章中讨论它。
- en: 'Before we do that, though, let’s look at datasets that are closer to the domain
    of software engineering – programming language code. We used similar data in [*Chapter
    3*](B19548_03.xhtml#_idTextAnchor038), so let’s focus on how we could obtain a
    larger corpus of programming language code from Hugging Face. We could use the
    following code to obtain the data and check the first program:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们这样做之前，让我们先看看更接近软件工程领域的数据集——编程语言代码。我们在 [*第3章*](B19548_03.xhtml#_idTextAnchor038)
    中使用了类似的数据，所以让我们关注一下我们如何从Hugging Face获取更大的编程语言代码语料库。我们可以使用以下代码来获取数据并检查第一个程序：
- en: '[PRE16]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'This code fragment shows us the first program, which is already tokenized and
    prepared for further analysis. So, let’s take a peek at the frequency of tokens
    in this dataset. We can use the following code for that:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 此代码片段显示第一个程序，它已经分词并准备好进行进一步分析。所以，让我们看看这个数据集中标记的频率。我们可以使用以下代码来做这件事：
- en: '[PRE17]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'The preceding code extracts the tokens, counts them, and creates a diagram
    of the frequency of the top 20 tokens. The result is presented in *Figure 6**.14*:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码提取标记，计算它们，并创建前20个标记频率的图表。结果在*图 6.14*中展示：
- en: '![Figure 6.14 – Token frequencies for the top 20 most common tokens in the
    code dataset](img/B19548_06_14.jpg)'
  id: totrans-131
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.14 – 代码数据集中前20个最常见标记的频率](img/B19548_06_14.jpg)'
- en: Figure 6.14 – Token frequencies for the top 20 most common tokens in the code
    dataset
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.14 – 代码数据集中前20个最常见标记的频率
- en: Interestingly, we can observe that brackets, commas, semicolons, and curly brackets
    are the most commonly used tokens in the dataset. This isn’t surprising as these
    kinds of characters have special meaning in Java.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 有趣的是，我们可以观察到括号、逗号、分号和大括号是数据集中最常用的标记。这并不令人惊讶，因为这些字符在Java中具有特殊含义。
- en: The other tokens in the top 20 list are, unsurprisingly, keywords in Java or
    have special meanings (such as `==`).
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 在前20个标记列表中的其他标记，不出所料，是Java中的关键字或具有特殊含义（如`==`）。
- en: So, my last best practice in this chapter is about understanding the text data.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我在本章的最后一条最佳实践是关于理解文本数据。
- en: 'Best practice #38'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '最佳实践 #38'
- en: Summary statistics for text data help us perform a sanity check of the data.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 文本数据的汇总统计有助于我们对数据进行合理性检查。
- en: Even though textual data is quite unstructured by nature, we can visualize some
    of the properties of the data. For example, token frequency analysis can reveal
    whether our empirical understanding of the data makes sense and whether we can
    trust it.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管文本数据在本质上相当无结构，但我们仍然可以可视化数据的一些属性。例如，标记频率分析可以揭示我们对数据的经验理解是否合理，以及我们是否可以信任它。
- en: Toward feature engineering
  id: totrans-139
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 向特征工程迈进
- en: In this chapter, we explored methods for visualizing data. We learned how to
    create diagrams and identify dependencies in the data. We also learned how we
    can use dimensionality reduction techniques to plot multidimensional data on a
    two dimensional diagram.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们探讨了可视化数据的方法。我们学习了如何创建图表并识别数据中的依赖关系。我们还学习了如何使用降维技术将多维数据绘制在二维图表上。
- en: In the next few chapters, we’ll dive into feature engineering different types
    of data. Sometimes, it is easy to mix feature engineering with data extraction.
    In practice, it is not that difficult to tell one from the other.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的几章中，我们将深入研究不同类型数据的特征工程。有时，将特征工程与数据提取混淆是很常见的。在实践中，区分这两者并不那么困难。
- en: Extracted data is data that has been collected by applying some sort of measurement
    instrument. Raw text or images are good examples of this kind of data. Extracted
    data is close to the domain where the data comes from – or how it is measured.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 提取的数据是通过应用某种测量仪器收集的数据。原始文本或图像是这类数据的良好例子。提取的数据接近数据来源的领域——或者它是如何被测量的。
- en: Features describe the data based on the analysis that we want to perform – they
    are closer to what we want to do with the data. It is closer to what we want to
    achieve and which form of machine learning analysis we want to do.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 特征基于我们想要执行的分析来描述数据——它们更接近我们想要对数据进行什么操作。它们更接近我们想要实现的目标以及我们想要进行的机器学习分析形式。
- en: References
  id: totrans-144
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考文献
- en: '*International Standardization Organization, International vocabulary of basic
    and general terms in metrology (VIM). In International Organization. 2004\.* *p.
    09-14.*'
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*国际标准化组织，国际计量学基本和通用术语词汇（VIM）。在国际组织。2004* *年第 09-14 页。*'
- en: '*Alhusain, S. Predicting Relative Thresholds for Object Oriented Metrics. In
    2021 IEEE/ACM International Conference on Technical Debt (TechDebt).* *2021\.
    IEEE.*'
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*Alhusain, S. 预测面向对象度量指标的相对阈值。在 2021 IEEE/ACM 国际技术债务会议（TechDebt）。* *2021* *年
    IEEE 出版。*'
- en: '*Feldt, R., et al. Supporting software decision meetings: Heatmaps for visualising
    test and code measurements. In 2013 39th Euromicro Conference on Software Engineering
    and Advanced Applications.* *2013\. IEEE.*'
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*Feldt, R. 等。支持软件决策会议：用于可视化测试和代码度量的热图。在 2013 年第 39 届 Euromicro 软件工程和高级应用会议。*
    *2013* *年 IEEE 出版。*'
- en: '*Staron, M., et al. Measuring and visualizing code stability – a case study
    at three companies. In 2013 Joint Conference of the 23rd International Workshop
    on Software Measurement and the 8th International Conference on Software Process
    and Product Measurement.* *2013\. IEEE.*'
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*Staron, M. 等。在三家公司的案例研究中测量和可视化代码稳定性。在 2013 年第 23 届国际软件度量研讨会和第 8 届国际软件过程和产品度量会议联合会议。*
    *2013* *年 IEEE 出版。*'
- en: '*Wen, S., C. Nilsson, and M. Staron. Assessing the release readiness of engine
    control software. In Proceedings of the 1st International Workshop on Software
    Qualities and Their* *Dependencies. 2018.*'
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*文，S.，C. 尼尔森，和 M. 斯塔隆。评估引擎控制软件的发布准备情况。载于《第1届国际软件质量及其* *依赖性研讨会论文集》。2018年。*'
