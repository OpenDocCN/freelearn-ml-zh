- en: R on the Cloud
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '"If someone asks me what cloud computing is, I try not to get bogged down with
    definitions. I tell them that, simply put, cloud computing is a better way to
    run your business."'
  prefs: []
  type: TYPE_NORMAL
- en: '- Marc Benioff, CEO, Salesforce.com'
  prefs: []
  type: TYPE_NORMAL
- en: Since I'm not a CEO of a company trying to profit from the cloud, let's get
    bogged down with a definition. I like the one put forward by Microsoft^(TM) here--[https://azure.microsoft.com/en-us/overview/what-is-cloud-computing/](https://azure.microsoft.com/en-us/overview/what-is-cloud-computing/).
  prefs: []
  type: TYPE_NORMAL
- en: Simply put, cloud computing is the delivery of computing services--servers,
    storage, databases, networking, software, analytics, and more--over the Internet
    ("the cloud"). Companies offering these computing services are called cloud providers
    and typically charge for cloud computing services based on usage, similar to how
    you're billed for water or electricity at home.
  prefs: []
  type: TYPE_NORMAL
- en: If you are not using the cloud for machine learning, well I guarantee that at
    some point in the not-too-distant future, you will. I still know some people who
    fear the idea of losing control of their data, security issues, and so on. However,
    as one start-up CEO put it to me, I like to ask them if they access their supposedly
    secure data on a laptop via WiFi, and when they reply sure, they are telling me
    they are on the cloud and it is just a matter of where the hardware is stored.
  prefs: []
  type: TYPE_NORMAL
- en: There you have it. Do you want your office dungeon to have rows of servers or
    do you want to let someone else handle that problem with their secure, redundant,
    and discrete global infrastructure?
  prefs: []
  type: TYPE_NORMAL
- en: Using cloud-based computing with R can facilitate the seamless work across multiple
    locations and also provide you with tremendous computing power, which can be quickly
    scaled up or down as needed. This can be a significant cost saving.
  prefs: []
  type: TYPE_NORMAL
- en: There are many ways to get R on the cloud, but I am going to use **Amazon Web
    Services** (**AWS**) and their **Elastic Compute Cloud** (**EC2**) for this demonstration
    because it is what I first learned and it is what I'm familiar using. That is
    not to say I endorse it over other products. I don't and won't, unless Jeff Bezos
    selects me for a manned space mission, then my attitude shall change.
  prefs: []
  type: TYPE_NORMAL
- en: At any rate, the goal here is to get you up and running with R and RStudio on
    the cloud quickly and without having to write a line of Linux code. Now, to maximize
    the power of AWS and its bewildering array of tools, you can learn how to apply
    Linux code through a **Secure Shell** (**SSH**). To do this, we will create and
    launch a virtual computer known as an **instance**. We will then login to RStudio
    via a web browser and cover some of the functionality. There are many tutorials
    out on the web about how to do this, but my goal is to get you started in the
    simplest and quickest manner possible, and to get you using R on the cloud **TODAY**.
  prefs: []
  type: TYPE_NORMAL
- en: Creating an Amazon Web Services account
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The first thing to do is to sign up for an AWS account:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://aws.amazon.com/](https://aws.amazon.com/)'
  prefs: []
  type: TYPE_NORMAL
- en: This is the only prerequisite for this exercise. The process requires a credit
    card, but what we will be doing here will not cost a cent as it is done on a free
    instance. Going forward, you can quickly launch a new instance with greater computing
    power as needed, then stop or terminate the instance when finished. As you create
    your account and login, you can choose to create security groups or not. I will
    demonstrate it by creating a new security group during instance creation. A security
    group allows you to control who can and how they can access the instance. Also,
    don't worry about creating a **Pair Key** at this point unless you so desire.
    We will create that as well.
  prefs: []
  type: TYPE_NORMAL
- en: 'Once that is completed, log in to your AWS console, which should give you a
    webpage looking like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/image_14_01.png)'
  prefs: []
  type: TYPE_IMG
- en: If you are here, it is now time to create and launch a virtual machine with
    a simple click on the cleverly named hyperlink Launch a virtual machine.
  prefs: []
  type: TYPE_NORMAL
- en: Launch a virtual machine
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The hyperlink to launch a virtual machine will take you to this page:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/image_14_02.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Avoid the Get Started button and click on advanced EC2 Launch Instance Wizard,
    which takes you to this page:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/image_14_03.png)'
  prefs: []
  type: TYPE_IMG
- en: 'As you gain experience, you can use the various **Amazon Machine Images** (**AMI**)
    and customize how you use R on AWS. However, our goals here are quick and simple.
    With that in mind, there are several community AMIs created by AWS users that
    incorporate R and RStudio already. So, under Quick Start, click Community AMIs.
    A search box will pop up and I recommend to start using the AMI maintained by
    Louis Aslett, [http://www.louisaslett.com/RStudio_AMI/](http://www.louisaslett.com/RStudio_AMI/).
    This AMI will be displayed by searching for rstudio aslett.  That will bring the
    page up, so click on the Select button, as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/image_14_04.png)'
  prefs: []
  type: TYPE_IMG
- en: 'This takes you to Step 2, where you select the instance type. I''ve picked
    the `t2.micro` free tier:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/image_14_05.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Once you''ve picked the instance type you desire, hit Review and Launch. Since
    this is an existing AMI, you can jump to Step 7, the Review tab. You can launch
    from here, but let''s click on Step 6, Configure Security Group:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/image_14_06.png)'
  prefs: []
  type: TYPE_IMG
- en: 'This will bring you to the step in the process where you can either create
    a security group or use an existing one. Here is an example of creating a new
    security group:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/image_14_07.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Once you are satisfied with that step in the process (you don''t have to change
    a thing), click Review and Launch. That takes you back to Step 7, where you can
    simply click on Launch. This brings you to the point where you select a new or
    existing key pair:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/image_14_08.png)'
  prefs: []
  type: TYPE_IMG
- en: Once completed, click Launch Instances and proceed back to your AWS console.
  prefs: []
  type: TYPE_NORMAL
- en: Start RStudio
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'With your instance running, when you return to the AWS console and select that
    instance you will see something like the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/image_14_09.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Take note of the Public DNS on the selected instance. This will be all that
    you need to start RStudio on your web browser of choice. When you launch that
    in your browser, you will come to the RStudio login page. The username and password
    are both `rstudio`:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/image_14_10.png)'
  prefs: []
  type: TYPE_IMG
- en: 'That''s it! You are now running RStudio on a virtual machine. It should look
    like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/image_14_11.png)'
  prefs: []
  type: TYPE_IMG
- en: In the upper-left panel, the Source Panel, are instructions on how to change
    the password as well as functions to link to Dropbox.
  prefs: []
  type: TYPE_NORMAL
- en: 'To show how to load data from the web, I will load one of the `.csv` files
    from github that we''ve used in prior chapters. Let''s try `climate.csv` shall
    we? The first thing is to install and load the `RCurl` package:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'We now need to get the link to the data on github:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Then, pull the file into RStudio:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'And, be sure it worked:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: There you have it. You are now a cloud-based machine learning warrior, able
    to operate on the virtual machine almost exactly like you would on your own machine.
  prefs: []
  type: TYPE_NORMAL
- en: Please remember that once you are done and quit RStudio, be sure to go back
    to your console and stop the instance.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this final chapter, we went through the process of quickly and simply getting
    R and RStudio running on the cloud. Utilizing AWS in this exercise, we covered
    step by step how to create a virtual machine (an instance) on the cloud, configure
    it, launch it and bring up RStudio on a web browser. Finally, we went over how
    easy it is to load data, by bringing in the climate `.csv` file from GitHub. With
    this introduction to cloud computing, you can now perform work anywhere you have
    an Internet connection, and can quickly scale the power of your instance to meet
    your needs. That concludes the primary chapters of the book. I hope you've enjoyed
    it and can implement the methods in here as well as other methods you learn over
    time. Thank You!
  prefs: []
  type: TYPE_NORMAL
