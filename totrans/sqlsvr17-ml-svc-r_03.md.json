["```py\nEXEC sp_configure 'show advanced options',1;\nGO\nRECONFIGURE;\nGO\nEXEC sp_configure 'external scripts enabled';\nGO  \n```", "```py\nEXEC sp_configure 'external scripts enabled', 1;\nGO\nRECONFIGURE WITH OVERRIDE;\nGO  \n```", "```py\nUSE [master]\nGO\nCREATE LOGIN [RR1] WITH PASSWORD=N'Read!2$17', DEFAULT_DATABASE=[SQLR], CHECK_EXPIRATION=ON, CHECK_POLICY=ON\nGO\nALTER SERVER ROLE [sysadmin] ADD MEMBER [RR1]\nGO\nCREATE DATABASE SQLR;\nGO\n\nUSE [SQLR]\nGO\nCREATE USER [RR1] FOR LOGIN [RR1]\nGO\nUSE [SQLR]\nGO\nALTER USER [RR1] WITH DEFAULT_SCHEMA=[dbo]\nGO\n```", "```py\n\nEXECUTE AS USER = 'RR1';\nGO\n\nEXEC sp_execute_external_script\n @language = N'R'\n ,@script = N'OutputDataSet<- InputDataSet'\n      ,@input_data_1 = N'SELECT 1 AS Numb UNION ALL SELECT 2;'\nWITH RESULT SETS\n((\n Res INT\n))\n\nREVERT;\nGO\n```", "```py\nMsg 297, Level 16, State 101, Procedure sp_execute_external_script, Line 1 [Batch Start Line 34]\nThe user does not have permission to perform this action.\n```", "```py\nUSE [SQLR]\nGO\nALTER ROLE [db_datareader] ADD MEMBER [RR1]\nGO \n```", "```py\nGRANT EXECUTE ANY EXTERNAL SCRIPT TO [RR1];\nGO  \n```", "```py\nDROP USER RR1; \nGO \nUSE [master]; \nGO \nDROP LOGIN RR1; \nGO \n--DROP TABLE IF EXISTS SQLR; \nGO\n```", "```py\nUSE [master]\nRESTORE DATABASE [RevoTestDB] FROM  DISK = N'C:\\SQLServer2017MLServicesR\\CH03\\RevoTestDB.bak';\nGO  \n```", "```py\nUSE RevoTestDB;\nGO\n\n-- TEST query\nEXECUTE  sp_execute_external_script\n                 @language = N'R'\n                 ,@script = N'\n            library(RevoScaleR)\nf <- formula(as.numeric(ArrDelay) ~ as.numeric(DayOfWeek) + CRSDepTime)\ns <- system.time(mod <- rxLinMod(formula = f, data = AirLine))\n            OutputDataSet <-  data.frame(system_time = s[3]);'\n                ,@input_data_1 = N'SELECT * FROM AirlineDemoSmall'\n                ,@input_data_1_name = N'AirLine'\nWITH RESULT SETS ((Elapsed_time FLOAT));\n```", "```py\n-- Default value\nALTER EXTERNAL RESOURCE POOL [default] \nWITH (AFFINITY CPU = AUTO)\nGO\n\nCREATE EXTERNAL RESOURCE POOL RService_Resource_Pool\nWITH (  \n      MAX_CPU_PERCENT = 10  \n      ,MAX_MEMORY_PERCENT = 5\n);  \n\nALTER RESOURCE POOL [default] WITH (max_memory_percent = 60, max_cpu_percent=90);  \nALTER EXTERNAL RESOURCE POOL [default] WITH (max_memory_percent = 40, max_cpu_percent=10);  \nALTER RESOURCE GOVERNOR reconfigure;\n\nALTER RESOURCE GOVERNOR RECONFIGURE;  \nGO \n```", "```py\nCREATE FUNCTION RG_Class_function()\nRETURNS sysname\nWITH schemabinding\nAS  \nBEGIN  \n    IF program_name() in ('Microsoft R Host', 'RStudio') RETURN 'R_workgroup';  \n    RETURN 'default'\n    END;  \nGO  \n\nALTER RESOURCE GOVERNOR WITH  (classifier_function = dbo.RG_Class_function);  \nALTER RESOURCE GOVERNOR reconfigure;  \nGO \n```", "```py\n-- TEST 2 - performance normal; with governor enabled\nEXECUTE  sp_execute_external_script\n @language = N'R'\n,@script = N'\nlibrary(RevoScaleR)\nf <- formula(as.numeric(ArrDelay) ~ as.numeric(DayOfWeek) + CRSDepTime)\ns <- system.time(mod <- rxLinMod(formula = f, data = AirLine))\nOutputDataSet<-  data.frame(system_time = s[3]);'\n,@input_data_1 = N'SELECT * FROM AirlineDemoSmall'\n,@input_data_1_name = N'AirLine'\nWITH RESULT SETS ((Elapsed_time FLOAT));  \n```", "```py\ninstall.packages(\"Package_Name\")  \n```", "```py\n--Install Package using sp_execute_external_script\nEXECUTE sp_execute_external_script\n @language = N'R'\n,@script = N'install.packages(\"AUC\")'  \n```", "```py\nEXECUTE sp_execute_external_script\n        @language = N'R'\n,@script = N'   library(Hmisc)\n               u <- unlist(rcorr(Customers_by_invoices$InvoiceV, Customers_by_invoices$CustCat, type=\"spearman\"))\nstatistical_significance<-as.character(u[10])\nOutputDataSet <- data.frame(statistical_significance)'\n\n,@input_data_1 = N'SELECT\nSUM(il.Quantity) AS InvoiceQ\n,SUM(il.ExtendedPrice) AS InvoiceV\n,c.CustomerID AS Customer\n,c.CustomerCategoryID AS CustCat\n\n                                         FROM sales.InvoiceLines AS il\n                                         INNER JOIN sales.Invoices AS i\n                                         ON il.InvoiceID = i.InvoiceID\n                                         INNER JOIN sales.Customers AS c\n                                         ON c.CustomerID = i.CustomerID\n                                         GROUP BY\nc.CustomerID\n,c.CustomerCategoryID'\n\n,@input_data_1_name = N'Customers_by_invoices'\n\nWITH RESULT SETS (( statistical_significance FLOAT(20) ));\nGO \n```", "```py\n-- part of R script with reference to call method library\n,@script = N'   library(Hmisc)\n u <- unlist(rcorr(Customers_by_invoices$InvoiceV, Customers_by_invoices$CustCat, type=\"spearman\"))\nstatistical_significance <-as.character(u[10])\nOutputDataSet <- data.frame(statistical_significance)'  \n```", "```py\n-- Path to libraries on your computer/server\nEXECUTE sp_execute_external_script\n @language = N'R'\n,@script = N'OutputDataSet <- data.frame(.libPaths());'\nWITH RESULT SETS (([DefaultLibraryName] VARCHAR(MAX) NOT NULL));\nGO  \n```", "```py\n-- You can create a table for libraries and populate all the necessary information\nCREATE TABLE dbo.Libraries\n       (\n               ID INT IDENTITY NOT NULL CONSTRAINT PK_RLibraries PRIMARY KEY CLUSTERED\n,Package NVARCHAR(50)\n,LibPath NVARCHAR(200)\n,[Version] NVARCHAR(20)\n,Depends NVARCHAR(200)\n,Imports NVARCHAR(200)\n,Suggests NVARCHAR(200)\n,Built NVARCHAR(20)\n       )\n\nINSERT INTO dbo.Libraries\nEXECUTE sp_execute_external_script\n              @language = N'R'\n,@script=N'x <- data.frame(installed.packages())\nOutputDataSet <- x[,c(1:3,5,6,8,16)]'\n\nSELECT * FROM dbo.Libraries\nDROP TABLE dbo.Libraries \n```", "```py\nsessionInfo()\n.libPaths()  \n```", "```py\ninstall.packages(\"AUC\", dependencies = TRUE, lib = \"C:/Program Files/Microsoft SQL Server/MSSQL14.MSSQLSERVER/R_SERVICES/library\")  \n```", "```py\ninstall.packages(\"AUC\")  \n```", "```py\nR cmd -e install.packages(\"Hmisc\")  \n```", "```py\n-- enable xp_cmdshell\nEXECUTE SP_CONFIGURE 'xp_cmdshell','1';\nGO\n\nRECONFIGURE;\nGO \nEXEC xp_cmdshell '\"C:\\Program Files\\Microsoft SQL Server\\MSSQL14.MSSQLSERVER\\R_SERVICES\\bin\\R.EXE\"cmd -e\n```", "```py\ninstall.packages(''Hmisc'')'; \nGO  \n```", "```py\nRSQLServicesCC <- RxInSqlServer(connectionString = \"Driver=SQL Server;Server=myServer;Database=TestDB;Trusted_Connection=True;\")\n\nrxInstallPackages(\"AUC\", verbose = TRUE, scope = \"private\", computeContext = RSQLServicesCC)  \n```", "```py\nEXECUTE sp_execute_external_script \n @language = N'R' \n ,@script = N'\n\n packagesToInstall <- c(\"caret\",\"tree\",\"party\") library(MicrosoftML) \n RSqlServerCC <- RxInSqlServer(connectionString = \"Driver=SQL Server; +Server=SICN-KASTRUN\\\\SQLSERVER2017C2;Database=SQLR; +Trusted_Connection=True;\") \n rxInstallPackages(pkgs = packagesToInstall, owner = '', +scope = \"shared\", computeContext = \"SqlServerCC\");'; \nGO\n```", "```py\nsp_execute_external_script\n @language = N''\n,@script = N'', \n,@input_data_1 =  'input_data_1'\n,@input_data_1_name =  N'input_data_1_name'\n,@output_data_1_name = 'output_data_1_name'\n,@parallel = 0 | 1 \n,@params =  N''\n,@parameter1 = ''  \n```"]