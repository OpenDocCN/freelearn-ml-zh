["```py\n    SELECT min(date), max(date) FROM `bigquery-public-data.iowa_liquor_sales.sales`; \n    ```", "```py\n    SELECT COUNT(DISTINCT date)\n    FROM\n            `bigquery-public-data.iowa_liquor_sales.sales`\n    WHERE\n            EXTRACT (year from date) = 2019         OR  EXTRACT (year from date) = 2018;\n    ```", "```py\n    CREATE OR REPLACE TABLE `08_sales_forecasting.iowa_liquor_sales` AS\n    SELECT \n            date,\n            SUM(volume_sold_liters) total_sold_liters\n    FROM\n            `bigquery-public-data.iowa_liquor_sales.sales`\n    WHERE\n            EXTRACT (year from date) = 2019 OR  EXTRACT (year from date) = 2018\n    GROUP BY\n            date;\n    ```", "```py\nCREATE OR REPLACE MODEL `08_sales_forecasting.liquor_forecasting`\nOPTIONS\n (model_type = 'ARIMA',\n  time_series_timestamp_col = 'date',\n  time_series_data_col = 'total_sold_liters',\n  auto_arima = TRUE,\n  data_frequency = 'AUTO_FREQUENCY'\n) AS\nSELECT *\nFROM\n `08_sales_forecasting.iowa_liquor_sales`; \n```", "```py\nSELECT *\nFROM\n ML.EVALUATE(MODEL `08_sales_forecasting.liquor_forecasting`);\n```", "```py\n    SELECT\n      *\n    FROM\n      ML.FORECAST(MODEL `08_sales_forecasting.liquor_forecasting`,\n                  STRUCT(30 AS horizon, 0.8 AS confidence_level)); \n    ```", "```py\nCREATE OR REPLACE TABLE `08_sales_forecasting.iowa_liquor_sales_forecast` AS\nSELECT\n  history_date AS date,\n  history_value,\n  NULL AS forecast_value,\n  NULL AS prediction_interval_lower_bound,\n  NULL AS prediction_interval_upper_bound\nFROM\n  (\n    SELECT\n      date AS history_date,\n      total_sold_liters AS history_value\n    FROM\n      `08_sales_forecasting.iowa_liquor_sales`\n  )\nUNION ALL\nSELECT\n  CAST(forecast_timestamp AS DATE) AS date,\n  NULL AS history_value,\n  forecast_value,\n  prediction_interval_lower_bound,\n  prediction_interval_upper_bound\nFROM\n  ML.FORECAST(MODEL `08_sales_forecasting.liquor_forecasting`,\n              STRUCT(30 AS horizon, 0.8 AS confidence_level));\n```"]