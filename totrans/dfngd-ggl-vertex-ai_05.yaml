- en: '5'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '5'
- en: No-Code Options for Building ML Models
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 无代码构建机器学习模型选项
- en: In recent years, the world of machine learning has undergone a profound transformation,
    breaking free from the realm of expert data scientists and engineers to empower
    a broader audience. The rise of no-code machine learning platforms has ushered
    in a new era, where individuals with diverse skill sets and backgrounds can harness
    the power of artificial intelligence to solve complex challenges, without writing
    a single line of code. This democratization of machine learning has not only expedited
    the development process but has also opened up a myriad of opportunities for businesses
    and individuals alike.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 近年来，机器学习领域经历了深刻的变革，摆脱了专家数据科学家和工程师的领域，赋予更广泛的受众以力量。无代码机器学习平台的兴起引领了一个新时代，不同技能和背景的个人可以借助人工智能的力量解决复杂挑战，而无需编写任何代码。这种机器学习的民主化不仅加速了开发过程，还为企业和个人
    alike 开辟了无数机会。
- en: In this chapter, we will dive into the foundations of no-code machine learning,
    shedding light on the remarkable tools and services Google Cloud Vertex AI offers.
    We will explore how users can leverage prebuilt machine learning models, AutoML
    capabilities, and visual interfaces to construct sophisticated and highly accurate
    models with ease. From computer vision to natural language processing and tabular
    data analysis, Google Cloud Vertex AI covers a vast array of use cases, democratizing
    AI application development for everyone.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将深入探讨无代码机器学习的基础，揭示 Google Cloud Vertex AI 提供的卓越工具和服务。我们将探讨用户如何利用预构建的机器学习模型、AutoML
    功能和可视化界面轻松构建复杂且高度精确的模型。从计算机视觉到自然语言处理和表格数据分析，Google Cloud Vertex AI 覆盖了广泛的用例，使人工智能应用开发对每个人来说都变得民主化。
- en: 'The key topics we will cover in this chapter include the following:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本章我们将涵盖的关键主题包括以下内容：
- en: What is AutoML?
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 什么是 AutoML？
- en: What is Vertex AI AutoML?
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 什么是 Vertex AI AutoML？
- en: Creating and deploying a model using Vertex AI AutoML
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Vertex AI AutoML 创建和部署模型
- en: Getting predictions from a deployed Vertex AI model
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从部署的 Vertex AI 模型获取预测
- en: Let’s first start by looking at the different solutions offered by Google Cloud
    to facilitate model creation without using code.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们先看看 Google Cloud 提供的不同解决方案，以促进无需代码的模型创建。
- en: ML modeling options in Google Cloud
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Google Cloud 中的机器学习建模选项
- en: 'Google Cloud offers several solutions within Vertex AI and the broader **Google
    Cloud Platform** (**GCP**) to build and consume machine learning models. These
    solutions vary widely in terms of required data science and coding skills, catering
    to both advanced ML engineers, relatively less technical business analysts, and
    everyone in between these two personas. The three main GCP solutions for model
    creation are as follows:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: Google Cloud 在 Vertex AI 和更广泛的 **Google Cloud Platform** (**GCP**) 内提供多种解决方案，用于构建和消费机器学习模型。这些解决方案在所需的数据科学和编码技能方面差异很大，满足高级
    ML 工程师、相对不太技术化的商业分析师以及介于这两者之间的人员。以下三个主要的 GCP 模型创建解决方案如下：
- en: '**Big Query ML (BQML)**: This is part of the BigQuery platform and requires
    only the knowledge of SQL for someone to train and use a model to generate predictions
    on structured data. More details about BQML will be covered in [*Chapter 6*](B17792_06.xhtml#_idTextAnchor079),
    *Low-Code Options for Building* *ML Models*.'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Big Query ML (BQML)**：这是 BigQuery 平台的一部分，只需了解 SQL，用户就可以训练和使用模型在结构化数据上生成预测。关于
    BQML 的更多细节将在 [*第 6 章*](B17792_06.xhtml#_idTextAnchor079) 中介绍，*低代码构建机器学习模型*。'
- en: '**Vertex AI AutoML**: This allows users to build models with no coding or even
    SQL knowledge, and it is primarily GUI-based. However, it has APIs that can be
    accessed programmatically if required.'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Vertex AI AutoML**：这允许用户在无需编码甚至 SQL 知识的情况下构建模型，并且主要基于 GUI。然而，如果需要，它有可编程访问的
    API。'
- en: '**Vertex AI custom training**: This option provides users complete flexibility
    on their model training and deployment but also requires basic coding ability.'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Vertex AI 定制训练**：此选项为用户提供在模型训练和部署方面的完全灵活性，但也要求具备基本的编码能力。'
- en: 'The following table shows a comparison of the different options available in
    Google Cloud to create machine learning models:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 下表显示了 Google Cloud 中创建机器学习模型的不同选项的比较：
- en: '|  | **BQML** | **Vertex** **AI AutoML** | **Vertex** **AI custom** |'
  id: totrans-16
  prefs: []
  type: TYPE_TB
  zh: '|  | **BQML** | **Vertex AI AutoML** | **Vertex AI 定制** |'
- en: '| --- | --- | --- | --- |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- |'
- en: '| Coding requirements | Very Low | None | High |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
  zh: '| 编码要求 | 非常低 | 无 | 高 |'
- en: '| Required ML engineering expertise | Low | Low | Medium to high, depending
    on the type of model |'
  id: totrans-19
  prefs: []
  type: TYPE_TB
  zh: '| 需要的机器学习工程专业知识 | 低 | 低 | 中等到高，取决于模型类型 |'
- en: '| Limits on data size | Yes. Standard BigQuery quotas and limits apply. | Yes.
    Dataset limitations vary by the type of dataset being used (see the GCP documentation
    for current limits). | No limit is imposed by GCP for datasets that are not managed.
    |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
  zh: '| 数据大小限制 | 是。适用标准BigQuery配额和限制。 | 是。数据集限制因所使用的数据集类型而异（请参阅GCP文档了解当前限制）。 | 对于未管理的数据集，GCP不设置限制。
    |'
- en: '| Types of models supported |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '| 支持的模型类型 |'
- en: LINEAR REG
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 线性回归
- en: LOGISTIC REG
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 逻辑回归
- en: KMEANS
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: KMEANS
- en: MATRIX FACTORIZATION
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 矩阵分解
- en: PCA
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 主成分分析
- en: AUTOENCODER
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动编码器
- en: AUTOML CLASSIFIER
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动ML分类器
- en: AUTOML REGRESSOR
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动ML回归器
- en: BOOSTED TREE CLASSIFIER
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提升树分类器
- en: BOOSTED TREE REGRESSOR
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提升树回归器
- en: RANDOM FOREST CLASSIFIER
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 随机森林分类器
- en: RANDOM FOREST REGRESSOR
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 随机森林回归器
- en: DNN CLASSIFIER
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DNN分类器
- en: DNN REGRESSOR
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DNN回归器
- en: DNN LINEAR COMBINED CLASSIFIER
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DNN线性组合分类器
- en: DNN LINEAR COMBINED REGRESSOR
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DNN线性组合回归器
- en: ARIMA PLUS
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ARIMA PLUS
- en: ARIMA PLUS XREG
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ARIMA PLUS XREG
- en: TENSORFLOW
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: TENSORFLOW
- en: TENSORFLOW LITE
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: TENSORFLOW LITE
- en: ONNX
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ONNX
- en: XGBOOST
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: XGBOOST
- en: '| Image:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '| 图像：'
- en: Classification
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分类
- en: Object detection
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目标检测
- en: 'Text:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 文本：
- en: Classification
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分类
- en: Entity extraction
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实体提取
- en: Sentiment analysis
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 情感分析
- en: 'Video:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 视频：
- en: Action recognition
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 行为识别
- en: Classification
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分类
- en: Object tracking
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目标跟踪
- en: 'Tabular:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 表格：
- en: Regression
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 回归
- en: Classification
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分类
- en: Time series forecasting
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 时间序列预测
- en: '| Full flexibility to build any type of ML model |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '| 构建任何类型机器学习的完全灵活性 |'
- en: '| Model development speed | Fast. Some data preparation is required, but training
    can be mostly automated. | Fast. Minimal data preparation and fully automated
    model training. | Slower. More data preparation is required. Significant model
    design and training management. |'
  id: totrans-60
  prefs: []
  type: TYPE_TB
  zh: '| 模型开发速度 | 快速。需要一些数据准备，但训练可以大部分自动化。 | 快速。最小化数据准备和完全自动化的模型训练。 | 较慢。需要更多的数据准备。需要显著的设计和训练管理。
    |'
- en: '| Flexibility/control over model generation | Medium | Low | High |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '| 对模型生成的灵活性/控制 | 中等 | 低 | 高 |'
- en: '| Does the tool support feature engineering? | Yes | No | Yes |'
  id: totrans-62
  prefs: []
  type: TYPE_TB
  zh: '| 工具是否支持特征工程？ | 是 | 否 | 是 |'
- en: Table 5.1 – ML model creation options in Google Cloud
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 表5.1 – Google Cloud中机器学习模型创建选项
- en: As shown in the preceding table, Vertex AI AutoML is the key code-less model
    creation option available as part of Google Cloud. When AutoML was initially launched
    as part of GCP, it used to be a standalone product. Now, it is part of the overall
    Vertex AI platform, and the legacy AutoML product is on the roadmap to be sunset.
    Now, let’s understand what AutoML is and how you can use AutoML features available
    in GCP.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 如前表所示，Vertex AI AutoML是作为Google Cloud的一部分提供的无代码模型创建选项的关键。当AutoML最初作为GCP的一部分推出时，它曾经是一个独立的产品。现在，它是Vertex
    AI平台整体的一部分，并且遗留的AutoML产品正在计划中，将逐步淘汰。现在，让我们了解什么是AutoML以及您如何使用GCP中可用的AutoML功能。
- en: What is AutoML?
  id: totrans-65
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是AutoML？
- en: AutoML refers to the methodology of automating the process of building machine
    learning models, including data preprocessing, feature engineering, model selection,
    hyperparameter tuning, and model deployment. AutoML aims to make machine learning
    accessible and more efficient for non-experts, saving time and resources for experts
    by reducing the amount of manual work involved in building a model. Different
    types of AutoML products on the market offer different levels of automation. Some
    just automate the training and hyperparameter portion of it, while some do end-to-end
    automation by also automating the steps of data preprocessing and feature generation.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: AutoML指的是自动化构建机器学习模型的过程的方法，包括数据预处理、特征工程、模型选择、超参数调整和模型部署。AutoML旨在使机器学习对非专业人士更加易于访问和高效，通过减少构建模型中涉及的手动工作，为专家节省时间和资源。市场上不同类型的AutoML产品提供不同级别的自动化。有些只是自动化了训练和超参数部分，而有些则通过自动化数据预处理和特征生成的步骤实现了端到端的自动化。
- en: AutoML tools allow users to specify their requirements, such as accuracy, interpretability,
    or training time, and then automatically select and train the best model based
    on these criteria. It can be used for various types of machine learning tasks,
    including classification, regression, and time series forecasting on structured
    and unstructured datasets. AutoML technologies have seen rapid development in
    recent years and are extremely capable of handling many complex ML use cases now,
    with minimal human intervention. However, you need to be careful about being overly
    dependent on AutoML. It is not a substitute for a deep understanding of machine
    learning and data science but, rather, a tool that can help make these processes
    more efficient and accessible. AutoML tools can be risky when used by someone
    who does not understand the fundamentals of machine learning because they can
    generate seemingly high-performing models, while still suffering from common issues
    such as data leakages and overfitting. So, now that we have a basic understanding
    of the concept of AutoML as it relates to model development, let’s look at the
    AutoML features available in Vertex AI.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: AutoML 工具允许用户指定他们的要求，例如准确性、可解释性或训练时间，然后根据这些标准自动选择和训练最佳模型。它可以用于各种类型的机器学习任务，包括在结构化和非结构化数据集上的分类、回归和时间序列预测。近年来，AutoML
    技术得到了快速发展，现在能够以最小的人为干预处理许多复杂的机器学习用例。然而，您需要小心过度依赖 AutoML。它不是机器学习和数据科学深入理解的替代品，而是一种可以帮助使这些过程更高效和易于访问的工具。当由不了解机器学习基础的人使用时，AutoML
    工具可能存在风险，因为它们可以生成看似高性能的模型，同时仍然存在数据泄露和过拟合等常见问题。因此，现在我们已经对 AutoML 的概念有了基本的了解，它是与模型开发相关的，让我们来看看
    Vertex AI 中可用的 AutoML 功能。
- en: Vertex AI AutoML
  id: totrans-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Vertex AI AutoML
- en: 'AutoML tools in Google Cloud have existed a lot longer than Vertex AI, which
    was launched to primarily unify most of the separate ML offerings existing in
    GCP. GCP AutoML makes use of models such as NASNet and constantly benefits from
    the AI research happening in other divisions of the Alphabet teams, such as Google
    DeepMind. Few of the interesting papers on the topic are listed below:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: Google Cloud 中的 AutoML 工具比 Vertex AI 存在的时间要长得多，Vertex AI 的推出主要是为了统一 GCP 中存在的多数独立的机器学习产品。GCP
    AutoML 利用 NASNet 等模型，并不断从 Alphabet 团队其他部门（如 Google DeepMind）的 AI 研究中受益。以下列出了该主题的一些有趣论文：
- en: '*Learning Transferable Architectures for Scalable Image* *Recognition*. [https://arxiv.org/pdf/1707.07012.pdf](https://arxiv.org/pdf/1707.07012.pdf)'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*可扩展图像识别的可迁移架构学习*。[https://arxiv.org/pdf/1707.07012.pdf](https://arxiv.org/pdf/1707.07012.pdf)'
- en: '*Regularized Evolution for Image Classifier Architecture* *Search*. [https://arxiv.org/pdf/1802.01548.pdf](https://arxiv.org/pdf/1802.01548.pdf)'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*图像分类器架构正则化进化搜索*。[https://arxiv.org/pdf/1802.01548.pdf](https://arxiv.org/pdf/1802.01548.pdf)'
- en: '*Large-Scale Evolution of Image* *Classifiers*. [https://arxiv.org/pdf/1703.01041.pdf](https://arxiv.org/pdf/1703.01041.pdf)'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*大规模图像分类器进化*。[https://arxiv.org/pdf/1703.01041.pdf](https://arxiv.org/pdf/1703.01041.pdf)'
- en: 'The use cases supported by Vertex AI AutoML are as follows:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: Vertex AI AutoML 支持的使用案例如下：
- en: 'Tabular data:'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 表格数据：
- en: Classification (an example is covered in this chapter)
  id: totrans-75
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分类（本章节有介绍示例）
- en: Regression
  id: totrans-76
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 回归
- en: Time series forecasting
  id: totrans-77
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 时间序列预测
- en: 'Image data:'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 图像数据：
- en: Image classification (an example is covered in [*Chapter 8*](B17792_08.xhtml#_idTextAnchor102))
  id: totrans-79
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 图像分类（例如，在第 [*第8章*](B17792_08.xhtml#_idTextAnchor102) 中有介绍）
- en: Object detection
  id: totrans-80
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目标检测
- en: 'Natural language:'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自然语言：
- en: Text classification
  id: totrans-82
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文本分类
- en: Entity extraction
  id: totrans-83
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实体提取
- en: Sentiment analysis
  id: totrans-84
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 情感分析
- en: How to create a Vertex AI AutoML model using tabular data
  id: totrans-85
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何使用表格数据创建 Vertex AI AutoML 模型
- en: 'In the following use case, we will walk you through the steps of building a
    classification model, using a public dataset containing hotel reservation data.
    The model’s objective will be to predict the probability of a particular hotel
    reservation being canceled by the customer, helping the hotel to better plan around
    future room occupancy and possibly allow for overbooking in the hotel on dates
    where they expect a high number of cancellations:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下使用案例中，我们将向您展示如何使用包含酒店预订数据的公共数据集构建分类模型的步骤。该模型的目标将是预测特定酒店预订被客户取消的概率，帮助酒店更好地规划未来客房的入住情况，并在他们预计有大量取消的日期可能允许超预订：
- en: 'The hotel reservation dataset can be accessed here: [https://www.kaggle.com/datasets/jessemostipak/hotel-booking-demand](https://www.kaggle.com/datasets/jessemostipak/hotel-booking-demand)'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您可以在此处访问酒店预订数据集：[https://www.kaggle.com/datasets/jessemostipak/hotel-booking-demand](https://www.kaggle.com/datasets/jessemostipak/hotel-booking-demand)
- en: 'You can download the data from the GitHub repository accompanying this book:
    [https://github.com/PacktPublishing/The-Definitive-Guide-to-Google-Vertex-AI](https://github.com/PacktPublishing/The-Definitive-Guide-to-Google-Vertex-AI)'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您可以从本书附带的 GitHub 仓库下载数据：[https://github.com/PacktPublishing/The-Definitive-Guide-to-Google-Vertex-AI](https://github.com/PacktPublishing/The-Definitive-Guide-to-Google-Vertex-AI)
- en: Importing data to use with Vertex AI AutoML
  id: totrans-89
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将数据导入到 Vertex AI AutoML 中使用
- en: 'The first step when planning to use the Vertex AI AutoML feature is to import
    the data you plan to use to train as Vertex AI datasets:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 在计划使用 Vertex AI AutoML 功能时，第一步是导入您打算用于训练的 Vertex AI 数据集：
- en: Navigate to **Vertex AI** | **Datasets** within the Google Cloud console, and
    click **Create** to start creating a new Vertex AI dataset.
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Google Cloud 控制台中导航到 **Vertex AI** | **数据集**，然后点击 **创建** 以开始创建新的 Vertex AI
    数据集。
- en: '![Figure 5.1 – Creating a Vertex AI dataset](img/B17792_05_1.jpg)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![Figure 5.1 – 创建 Vertex AI 数据集](img/B17792_05_1.jpg)'
- en: Figure 5.1 – Creating a Vertex AI dataset
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.1 – 创建 Vertex AI 数据集
- en: Type in the name of the dataset, select **Tabular** as the data type, choose
    **Regression/classification**, and then click **CREATE**.
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入数据集的名称，选择 **表格** 作为数据类型，选择 **回归/分类**，然后点击 **创建**。
- en: '![Figure 5.2 – Selecting a dataset type and model objective](img/B17792_05_2.jpg)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![Figure 5.2 – 选择数据集类型和模型目标](img/B17792_05_2.jpg)'
- en: Figure 5.2 – Selecting a dataset type and model objective
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.2 – 选择数据集类型和模型目标
- en: Upload the file named `hotel_reservation_data.csv` that you previously downloaded
    from the GitHub repository.
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 上传您之前从 GitHub 仓库下载的名为 `hotel_reservation_data.csv` 的文件。
- en: '![](img/B17792_05_3.jpg)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![img/B17792_05_3.jpg]'
- en: Figure 5.3 – Specifying a data source
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.3 – 指定数据源
- en: Enter a path to the GCS location where you would like to store the imported
    file. If you have not created a GCS bucket before, click on `us-central1`. For
    all other prompts, you can leave the default options already selected (*Figure
    5**.4*).
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入您希望存储导入文件的 GCS 位置的路径。如果您之前还没有创建 GCS 存储桶，请点击 `us-central1`。对于所有其他提示，您可以选择默认选项（*图
    5.4*.4*）。
- en: Note
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: It’s important to have consistency in the location of the resources you create
    on GCP, so throughout this book, we will try to use `us-central1` as the location.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 在 GCP 上创建的资源位置一致性很重要，因此在这本书中，我们将尽量使用 `us-central1` 作为位置。
- en: '![Figure 5.4 – Selecting cloud storage location](img/B17792_05_4.jpg)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![Figure 5.4 – 选择云存储位置](img/B17792_05_4.jpg)'
- en: Figure 5.4 – Selecting cloud storage location
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.4 – 选择云存储位置
- en: Next, create a folder within the bucket where you want the imported file to
    be stored. Click the **Folder+** sign at the top right and then provide a name
    for the folder. Then, click **CREATE**. Finally, highlight the folder that was
    just created and click **Select**.![Figure 5.5 – Creating a folder to store the
    dataset](img/B17792_05_5.jpg)
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，在您希望存储导入文件的存储桶中创建一个文件夹。点击右上角的 **Folder+** 符号，然后为文件夹提供一个名称。然后，点击 **创建**。最后，突出显示刚刚创建的文件夹并点击
    **选择**。![Figure 5.5 – 创建存储数据集的文件夹](img/B17792_05_5.jpg)
- en: Figure 5.5 – Creating a folder to store the dataset
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.5 – 创建存储数据集的文件夹
- en: Once the bucket and folder path have been selected, click **Continue** at the
    bottom of the screen, which will start the import of the CSV file into the Vertex
    AI dataset.
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦选择了存储桶和文件夹路径，请点击屏幕底部的 **继续**，这将开始将 CSV 文件导入到 Vertex AI 数据集中。
- en: Once the data import is completed, you will be taken to the `hotel_cancellation_prediction`
    or <*whatever name you specified for your dataset*> path. Here, all the feature
    statistics will be blank. To generate these, you can click **Generate Statistics**,
    which will start the process of analyzing the feature data and calculating detailed
    statistics.
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 数据导入完成后，您将被带到 `hotel_cancellation_prediction` 或 <*您为数据集指定的名称*> 路径。在这里，所有特征统计信息都将为空。要生成这些统计信息，您可以点击
    **生成统计信息**，这将启动分析特征数据并计算详细统计信息的过程。
- en: '![](img/B17792_05_6.jpg)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![img/B17792_05_6.jpg]'
- en: Figure 5.6 – Generating statistics for the dataset
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.6 – 为数据集生成统计信息
- en: 'Once this process is completed, you can click on a specific feature to see
    further details, such as the following:'
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此过程完成后，您可以通过点击特定的特征来查看更多详细信息，例如以下内容：
- en: The distinct value count
  id: totrans-112
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 独特值计数
- en: The missing percentage of data in the field
  id: totrans-113
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 字段中数据缺失的百分比
- en: The feature value distribution
  id: totrans-114
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 特征值分布
- en: '![Figure 5.7 – Analyzing key statistics for the dataset](img/B17792_05_7.jpg)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.7 – 分析数据集的关键统计数据](img/B17792_05_7.jpg)'
- en: Figure 5.7 – Analyzing key statistics for the dataset
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.7 – 分析数据集的关键统计数据
- en: The above screenshot shows the graphs explaining the distribution of feature/field
    titled ‘`market_segment`’.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 上述截图显示了解释特征/字段“`market_segment`”分布的图表。
- en: Now let’s look at how we will train an **AutoML Classification** model using
    the dataset discussed above.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们看看如何使用上面讨论的数据集来训练一个 **AutoML 分类** 模型。
- en: Training the AutoML model for tabular/structured data
  id: totrans-119
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 训练用于表格/结构化数据的 AutoML 模型
- en: 'Now, let’s look at how you can use Vertex AI AutoML to train ML models on tabular
    data:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们看看如何使用 Vertex AI AutoML 在表格数据上训练机器学习模型：
- en: Within the **ANALYZE** tab of the dataset that you want to use to train a model,
    click **TRAIN NEW MODEL** | **Other**.
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您想要用于训练模型的数据集的 **ANALYZE** 选项卡中，点击 **TRAIN NEW MODEL** | **其他**。
- en: '![Figure 5.8 – Training a new model](img/B17792_05_8.jpg)'
  id: totrans-122
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.8 – 训练新模型](img/B17792_05_8.jpg)'
- en: Figure 5.8 – Training a new model
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.8 – 训练新模型
- en: Since we are trying to classify the reservations based on their cancellation
    likelihood, pick the model objective as **Classification**. Pick **AutoML** as
    the training method, which uses the codeless automated training option. Then,
    click **CONTINUE**.
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 由于我们正在尝试根据预订的取消可能性对预订进行分类，因此选择模型目标为 **分类**。选择 **AutoML** 作为训练方法，它使用无代码的自动化训练选项。然后，点击
    **继续**。
- en: '![Figure 5.9 – Specifying the model type](img/B17792_05_9.jpg)'
  id: totrans-125
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.9 – 指定模型类型](img/B17792_05_9.jpg)'
- en: Figure 5.9 – Specifying the model type
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.9 – 指定模型类型
- en: On the following `is_canceled`.
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在接下来的 `is_canceled`。
- en: If you want the **Test** results to be exported to BigQuery for further analysis,
    select the **Export test dataset to big query** option, and provide a BigQuery
    table path where these results need to be stored. Vertex AI will create the table
    after the training run.
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您希望将 **测试** 结果导出到 BigQuery 以进行进一步分析，请选择 **导出测试数据集到 BigQuery** 选项，并提供一个 BigQuery
    表路径，以便存储这些结果。Vertex AI 将在训练运行后创建该表。
- en: If you want Vertex AI to randomly split data into **Training**, **Validation**,
    and **Test** datasets, leave the default option, **Random**, selected. If you
    want to control the assignments of samples to the **Training**, **Validation**,
    and **Test** datasets, select the **Manual** option. In this case, you will need
    to provide a column where **Train**/**Validation**/**Test** assignments are provided.
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您希望 Vertex AI 随机将数据分割成 **训练**、**验证** 和 **测试** 数据集，请保留默认选项 **随机**。如果您想要控制样本分配到
    **训练**、**验证** 和 **测试** 数据集，请选择 **手动** 选项。在这种情况下，您需要提供一个列，其中提供 **训练**/**验证**/**测试**
    分配。
- en: '![Figure 5.10 – Configuring the model training options](img/B17792_05_10.jpg)'
  id: totrans-130
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.10 – 配置模型训练选项](img/B17792_05_10.jpg)'
- en: Figure 5.10 – Configuring the model training options
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.10 – 配置模型训练选项
- en: On the following `reservation_status`
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在接下来的 `reservation_status`
- en: '`reservation_status_date`'
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`reservation_status_date`'
- en: '![Figure 5.11 – Selecting the features to be removed](img/B17792_05_11.jpg)'
  id: totrans-134
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.11 – 选择要删除的特征](img/B17792_05_11.jpg)'
- en: Figure 5.11 – Selecting the features to be removed
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.11 – 选择要删除的特征
- en: 'Also, check that the Vertex AI has defaulted to the correct transformation
    types for each field. To be used for model training, tabular data must undergo
    a transformation process that is specific to each data feature. This transformation
    process indicates the function of a particular data feature. The supported types
    of transformations are as follows:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，请确保 Vertex AI 默认为每个字段正确设置了转换类型。为了用于模型训练，表格数据必须经过针对每个数据特征的特定转换过程。这个过程表明了特定数据特征的功能。支持的转换类型如下：
- en: '**Categorical**: When training a model with a categorical feature in Vertex
    AI, the feature undergoes data transformations that help with the model training
    process. Vertex AI applies the following transformations to the feature and uses
    any that provide useful information:'
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分类**: 当在 Vertex AI 中使用分类特征训练模型时，该特征会经过数据转换，有助于模型训练过程。Vertex AI 对该特征应用以下转换，并使用任何提供有用信息的转换：'
- en: The categorical string remains unchanged, with no modifications made to case,
    punctuation, spelling, tense, and other attributes.
  id: totrans-138
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分类字符串保持不变，没有对大小写、标点、拼写、时态和其他属性进行修改。
- en: The category name is converted into a dictionary lookup index, and an embedding
    is generated for each index.
  id: totrans-139
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 类别名称被转换为字典查找索引，并为每个索引生成一个嵌入。
- en: Categories that appear less than five times in the training dataset are considered
    the **unknown** category. The **unknown** category is assigned a unique lookup
    index, and an embedding is generated for this category as well.
  id: totrans-140
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在训练数据集中出现次数少于五次的类别被认为是**未知**类别。**未知**类别被分配一个唯一的查找索引，并为该类别生成嵌入。
- en: '**Text**: A feature that has undergone a text transformation is treated as
    freeform text and is usually made up of text tokens. The text is tokenized into
    words, and 1-grams and 2-grams are generated from those words. Each *n*-gram is
    then converted into a dictionary lookup index, and an embedding is generated for
    each index. Finally, the embeddings of all the elements are combined into a single
    embedding using the mean.'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**文本**：经过文本转换的特征被视为自由文本，通常由文本标记组成。文本被分词成单词，并从这些单词中生成1-gram和2-gram。然后，每个*n*-gram被转换为字典查找索引，并为每个索引生成嵌入。最后，使用平均值将所有元素的嵌入组合成一个单一的嵌入。'
- en: '`float32`, are not included in the training and prediction process.'
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`float32`类型的数据不包括在训练和预测过程中。'
- en: The value is converted to `float32`.
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 值被转换为`float32`。
- en: The *z*-score of the value is calculated.
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 计算值的*z*-分数。
- en: The value is bucketed based on quantiles, with a bucket size of 100.
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 值基于分位数进行分桶，桶大小为100。
- en: The log of (`value+1`) is calculated when the value is greater than or equal
    to 0\. If the value is less than 0, this transformation is not applied, and the
    value is considered a missing value.
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当值大于或等于0时，计算(`value+1`)的对数。如果值小于0，则不应用此转换，该值被视为缺失值。
- en: The *z*-score of the log of (`value+1`) is calculated when the value is greater
    than or equal to 0\. If the value is less than 0, this transformation is not applied,
    and the value is considered a missing value.
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当值大于或等于0时，计算(`value+1`)的对数的*z*-分数。如果值小于0，则不应用此转换，该值被视为缺失值。
- en: A Boolean value is assigned to indicate whether the value is `null`.
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 被分配一个布尔值来指示该值是否为`null`。
- en: '**Timestamp**: The following data transformations are applied to the feature,
    and any that provide useful information are used for training:'
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**时间戳**：以下数据转换应用于特征，任何提供有用信息的都会用于训练：'
- en: The year, month, day, and weekday of the timestamp are determined and treated
    as categorical columns
  id: totrans-150
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确定时间戳的年、月、日和星期几，并将它们视为分类列
- en: Invalid numerical values, such as values outside the typical timestamp range
    or extreme values, are not removed or treated differently
  id: totrans-151
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无效的数值，例如超出典型时间戳范围或极端值，不会被移除或特殊处理
- en: The transformations for numerical columns are applied to the feature
  id: totrans-152
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对数值列的转换应用于特征
- en: Rows with invalid timestamp inputs, such as an invalid timestamp string, are
    not included in the training and prediction process
  id: totrans-153
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 包含无效时间戳输入的行，例如无效的时间戳字符串，不包括在训练和预测过程中
- en: If you want to feed the model additional weights to rebalance the dataset, you
    can provide an additional column that contains weights assigned to each data sample.
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您想向模型提供额外的权重以重新平衡数据集，您可以提供一个包含分配给每个数据样本的权重的额外列。
- en: As shown in the following screenshot, by default, the optimization objective
    is set to maximize the AUC ROC curve.
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如以下截图所示，默认情况下，优化目标是设置为最大化AUC ROC曲线。
- en: '![Figure 5.12 – Selecting the optimization objective](img/B17792_05_12.jpg)'
  id: totrans-156
  prefs: []
  type: TYPE_IMG
  zh: '![图5.12 – 选择优化目标](img/B17792_05_12.jpg)'
- en: Figure 5.12 – Selecting the optimization objective
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.12 – 选择优化目标
- en: Although not required, you have the option to change the optimization objective.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然不是必需的，但您有选项更改优化目标。
- en: 'For classification problems, there are five different objectives:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 对于分类问题，有五种不同的目标：
- en: '**AUC ROC**: This objective in AutoML maximizes the area under the receiver
    operating characteristic curve. This is the default selection for binary classification
    and can be selected to distinguish between classes.'
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**AUC ROC**：在AutoML中，此目标最大化接收者操作特征曲线下的面积。这是二分类的默认选择，也可以选择以区分类别。'
- en: '**Log loss**: This aims to minimize the log loss for the model. It is used
    when the goal is to predict probabilities as accurately as possible, and it is
    the only supported objective in AutoML for multi-class classification models.'
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**对数损失**：此目标旨在最小化模型的对数损失。当目标是尽可能准确地预测概率时使用，并且是AutoML中多类分类模型唯一支持的目标。'
- en: '**AUC PR**: This objective aims to maximize the area under the precision-recall
    curve. It optimizes results for predictions for the less common class.'
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**AUC PR**：此目标旨在最大化精度-召回曲线下的面积。它优化了对较少见类别的预测结果。'
- en: '**Precision at recall**: This aims to maximize precision at a specific recall
    value.'
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**在特定召回率下的精度**：此目标旨在在特定召回率值下最大化精度。'
- en: '**Recall at precision**: This aims to maximize recall at a specific precision
    value.'
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**在特定精度下的召回率**：此目标旨在在特定精度值下最大化召回率。'
- en: 'For regression problems, there are three different objectives:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 对于回归问题，有三个不同的目标：
- en: '**RMSE**: This objective aims to minimize the root mean squared error. It captures
    more extreme values accurately.'
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**RMSE**：此目标旨在最小化均方根误差。它能够更准确地捕捉极端值。'
- en: '**MAE**: This objective aims to minimize the mean absolute error. It views
    extreme values as outliers with less impact on the model.'
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**MAE**：此目标旨在最小化平均绝对误差。它将极端值视为对模型影响较小的异常值。'
- en: '**RMSLE**: This objective aims to minimize the root mean squared log error.
    It penalizes errors in relative size rather than absolute value and is especially
    helpful when both predicted and actual values are quite large.'
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**RMSLE**：此目标旨在最小化均方根对数误差。它对相对大小而不是绝对值的误差进行惩罚，并且在预测值和实际值都相当大时特别有用。'
- en: Provide the maximum time you want the training to run. The minimum needs to
    be one hour. During the first run, it’s hard to know how long the model will take
    to reach the highest possible accuracy, and you might have to experiment with
    this setting a little for new datasets and model types.
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 提供您希望训练运行的最大时间。最小需要为一小时。在第一次运行期间，很难知道模型需要多长时间才能达到最高可能的准确度，并且您可能需要对新数据集和模型类型进行一些实验设置。
- en: Best practice
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 最佳实践
- en: For most small datasets (< 1 million data samples and < 20 features), two to
    four hours is a good starting point. If the **Enable early stopping** option is
    on, regardless of the number of hours you have budgeted for, the training will
    stop once AutoML determines that no further improvement in the model objective
    is being achieved with further rounds of training.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 对于大多数小型数据集（< 1百万个数据样本和< 20个特征），两到四小时是一个良好的起点。如果**启用早期停止**选项开启，无论您为训练预留了多少小时，一旦
    AutoML 确定进一步训练的轮次无法在模型目标上实现进一步改进，训练将停止。
- en: Lastly, as shown in the following screenshot, click **START TRAINING** to kick
    off the training process. In a few hours, you will have a shiny new model ready
    to evaluate.
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，如图下截图所示，点击**开始训练**以启动训练过程。几小时后，您将有一个崭新的模型可供评估。
- en: '![Figure 5.13 – Kicking off model training](img/B17792_05_13.jpg)'
  id: totrans-173
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.13 – 开始模型训练](img/B17792_05_13.jpg)'
- en: Figure 5.13 – Kicking off model training
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.13 – 开始模型训练
- en: Once the model training is completed, let’s see how you can evaluate the model
    created by AutoML.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦模型训练完成，让我们看看您如何评估 AutoML 创建的模型。
- en: Evaluating the trained model
  id: totrans-176
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 评估训练后的模型
- en: 'Every time you train a machine learning model, it’s crucial to evaluate its
    performance to determine whether it’s reliable for real-world applications. Model
    evaluation metrics are calculated based on the model’s performance against a portion
    of the dataset that was not used during training, referred to as the test dataset.
    This evaluation provides insight into how the model generalizes to new, unseen
    data and helps identify any issues or areas for improvement:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 每次训练机器学习模型时，评估其性能以确定其是否适用于现实世界应用至关重要。模型评估指标是基于模型对在训练期间未使用的部分数据集（称为测试数据集）的性能计算的。这种评估提供了模型如何泛化到新、未见数据的信息，并有助于识别任何问题或改进领域：
- en: Go to **Model Registry** in the Vertex AI, and as shown in the following screenshot,
    locate the model you just trained. Click on the model, and then on the next screen,
    click the version of the model you just trained.
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往 Vertex AI 中的**模型注册**，如图下截图所示，找到您刚刚训练的模型。点击该模型，然后在下一屏幕上，点击您刚刚训练的模型版本。
- en: '![Figure 5.14 – Model Registry](img/B17792_05_14.jpg)'
  id: totrans-179
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.14 – 模型注册](img/B17792_05_14.jpg)'
- en: Figure 5.14 – Model Registry
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.14 – 模型注册
- en: On the **EVALUATE** tab, you will see the details of the test results generated
    by AutoML, by using the test dataset provided during training.
  id: totrans-181
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**评估**选项卡上，您将看到 AutoML 使用在训练期间提供的测试数据集生成的测试结果详情。
- en: '![Figure 5.15 – The model evaluation metrics](img/B17792_05_15.jpg)'
  id: totrans-182
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.15 – 模型评估指标](img/B17792_05_15.jpg)'
- en: Figure 5.15 – The model evaluation metrics
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.15 – 模型评估指标
- en: 'Here is the key information typically shown in the Vertex AI **Evaluate** tab
    depending on the model type:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是根据模型类型在Vertex AI **评估**标签页中通常显示的关键信息：
- en: 'Confidence threshold: When working with classification models, predictions
    are given a confidence score to indicate the level of certainty that the predicted
    class is correct. The score is a numeric assessment that determines how sure the
    model is that the prediction is accurate. For instance, consider a machine learning
    model that predicts whether a customer will cancel their hotel reservation:'
  id: totrans-185
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 置信度阈值：当与分类模型一起工作时，预测会被赋予一个置信度分数来表示预测类别正确的确定性水平。这个分数是一个数值评估，决定了模型对预测准确性的确信程度。例如，考虑一个预测客户是否会取消酒店预订的机器学习模型：
- en: To convert the score into a binary decision, a score threshold is used. The
    score threshold is the value at which the model says, “*Yes, the confidence score
    is high enough to conclude that the customer will cancel their reservation*” or
    “*No, the confidence score is not high enough to predict that the customer will
    cancel their reservation.*” The score threshold should be based on a specific
    use case, and a low score threshold increases the risk of misclassification.
  id: totrans-186
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为了将分数转换为二元决策，使用了一个分数阈值。分数阈值是模型说“*是的，置信度分数足够高，可以得出结论，客户将取消他们的预订*”或“*不，置信度分数不足以预测客户将取消预订*”的值。分数阈值应根据特定用例确定，低分数阈值会增加误分类的风险。
- en: 'Precision and recall: In classification models, precision and recall are essential
    metrics to assess and summarize how well the model captures information and avoid
    errors:'
  id: totrans-187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 精确度和召回率：在分类模型中，精确度和召回率是评估和总结模型如何捕捉信息以及避免错误的重要指标：
- en: 'Precision: Precision answers the question, “*Of all the predicted hotel reservation
    cancellations, how many were actually canceled?*” It measures the accuracy of
    the model’s positive predictions – that is, the percentage of true positives out
    of all predicted positives.'
  id: totrans-188
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 精确度：精确度回答了问题，“*在所有预测的酒店预订取消中，实际取消了多少？*”它衡量模型正预测的准确性——即所有预测正例中真实正例的百分比。
- en: 'Recall: Recall answers the question, “*Of all the canceled hotel reservations,
    how many did the model correctly predict?*” It measures the model’s ability to
    identify true positive cases – that is, the percentage of true positives out of
    all actual positives.'
  id: totrans-189
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 召回率：召回率回答了问题，“*在所有取消的酒店预订中，模型正确预测了多少？*”它衡量模型识别真实正例的能力——即所有实际正例中真实正例的百分比。
- en: Depending on the use case, you may need to optimize for either precision or
    recall. For instance, if you want to minimize the number of false negatives (i.e.,
    hotel reservations that were canceled but were not identified by the model), then
    you should aim for a high recall. If you want to reduce the number of false positives
    (i.e., hotel reservations that were not canceled but were predicted to be), then
    you should aim for high precision.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 根据具体用例，你可能需要优化精确度或召回率。例如，如果你想最小化错误负例的数量（即被取消但模型未识别的酒店预订），那么你应该追求高召回率。如果你想减少错误正例的数量（即未被取消但被预测为取消的酒店预订），那么你应该追求高精确度。
- en: 'Apart from precision and recall, there are several other classification metrics
    that are useful to evaluate the performance of a machine learning model. Here
    are some of the most commonly used metrics:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 除了精确度和召回率之外，还有其他几个分类指标可以用来评估机器学习模型的性能。以下是一些最常用的指标：
- en: '**AUC PR**: The area under the **precision-recall** (**PR**) curve measures
    the trade-off between precision and recalls across various score thresholds. The
    **AUC PR** ranges from zero to one, where a higher value indicates a higher-quality
    model.'
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**AUC PR**：PR曲线下的面积衡量了在不同分数阈值下精确度和召回率之间的权衡。AUC PR的范围从零到一，其中更高的值表示质量更高的模型。'
- en: '**AUC ROC**: The area under the **receiver operating characteristic** (**ROC**)
    curve measures the model’s performance across all possible score thresholds. The
    AUC ROC also ranges from zero to one, where a higher value indicates a higher-quality
    model.'
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**AUC ROC**：ROC曲线下的面积衡量了模型在所有可能的分数阈值下的性能。AUC ROC的范围从零到一，其中更高的值表示质量更高的模型。'
- en: '**Accuracy**: The fraction of classification predictions produced by the model
    that was correct. This is a simple and intuitive metric that provides an overall
    measure of the model’s performance.'
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**准确率**：模型产生的分类预测中正确的比例。这是一个简单直观的指标，提供了对模型性能的整体衡量。'
- en: '**Log loss**: Log loss, also known as cross-entropy, serves as a crucial metric
    in assessing the alignment between a model’s predictions and the actual target
    values. This metric quantifies the efficacy of the model’s performance by measuring
    how closely its predictions match the real-world outcomes. With a scale spanning
    from zero to infinity, a lower log loss signifies a higher-quality model, showcasing
    its ability to make more accurate and confident predictions.'
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**对数损失**：对数损失，也称为交叉熵，是评估模型预测与实际目标值之间一致性的关键指标。该指标通过衡量模型的预测与实际世界结果之间的接近程度来量化模型性能的有效性。该指标的范围从零到无穷大，较低的日志损失表示质量更高的模型，展示了其做出更准确和自信预测的能力。'
- en: '**F1 score**: When seeking a balance between precision and recall, particularly
    in scenarios with imbalanced class distributions, the F1 score emerges as a valuable
    metric. This score represents the harmonic mean of precision and recall, operating
    on a scale ranging from zero to one. A higher F1 score denotes a model of superior
    quality, signifying its capability to achieve both precision and recall effectively,
    even in challenging class distribution scenarios.'
  id: totrans-196
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**F1 分数**：在寻求精确度和召回率之间的平衡，尤其是在类别分布不平衡的场景中，F1 分数成为一个有价值的指标。这个分数代表精确度和召回率的调和平均值，其范围从零到一。更高的
    F1 分数表示质量更高的模型，表明它在具有挑战性的类别分布场景中能够有效地实现精确度和召回率。'
- en: By using these metrics, you can gain a more comprehensive understanding of your
    model’s performance and make more informed decisions about how to improve it.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用这些指标，您可以更全面地了解模型的表现，并做出更明智的决策来改进它。
- en: 'The **Evaluate** tab also showcases two additional useful pieces of information:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: '**评估**标签页还展示了两个额外的有用信息：'
- en: '**Confusion matrix**: A confusion matrix is a visualization tool that shows
    the frequency with which a model correctly predicts a result, and for the instances
    when it incorrectly predicts a result, the matrix shows what the model predicted
    instead. The confusion matrix is a helpful way to understand where the model may
    be “confusing” two results, and to diagnose the accuracy and performance of the
    model.'
  id: totrans-199
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**混淆矩阵**：混淆矩阵是一种可视化工具，它显示了模型正确预测结果的频率，以及当模型错误预测结果时，矩阵显示了模型预测的内容。混淆矩阵是一种有助于理解模型可能在哪些方面“混淆”两个结果，以及诊断模型准确性和性能的有用方法。'
- en: '![Figure 5.16 – The confusion matrix](img/B17792_05_16.jpg)'
  id: totrans-200
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.16 – 混淆矩阵](img/B17792_05_16.jpg)'
- en: Figure 5.16 – The confusion matrix
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.16 – 混淆矩阵
- en: '**Feature importance**: Model feature importance is expressed as a percentage
    for each feature, with a higher percentage indicating a stronger impact on model
    training. By looking at the feature importance values, we can gain a better understanding
    of the relative importance of different features in the model and how they contribute
    to the accuracy of predictions. The following screenshot shows the feature importance
    graph for the model we just trained.'
  id: totrans-202
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**特征重要性**：模型特征重要性以每个特征的百分比表示，百分比越高表示对模型训练的影响越强。通过查看特征重要性值，我们可以更好地理解模型中不同特征的相对重要性以及它们如何有助于预测的准确性。以下截图显示了我们所训练的模型的特征重要性图。'
- en: '![Figure 5.17 – Feature importance](img/B17792_05_17.jpg)'
  id: totrans-203
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.17 – 特征重要性](img/B17792_05_17.jpg)'
- en: Figure 5.17 – Feature importance
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.17 – 特征重要性
- en: So, we have trained a model and evaluated its key performance indicators. Now,
    let’s look at how to deploy it and use it to generate predictions.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们已经训练了一个模型并评估了其关键性能指标。现在，让我们看看如何部署它以及如何使用它来生成预测。
- en: Generating predictions using the recently trained model
  id: totrans-206
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用最近训练的模型生成预测
- en: 'Once the AutoML model is trained, you can generate predictions using one of
    the following two methods:'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦 AutoML 模型训练完成，您可以使用以下两种方法之一生成预测：
- en: '**Batch predictions**: As the name suggests, batch predictions are asynchronous
    predictions generated for a batch of inputs. This is used when a real-time response
    is unnecessary and you want to submit a single request to process many data instances.
    In Vertex AI, a request for batch predictions can be submitted directly to a model
    residing in the Vertex AI Model registry, without the need to deploy it on an
    endpoint.'
  id: totrans-208
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**批量预测**：如名称所示，批量预测是为一批输入生成的异步预测。当不需要实时响应且您想提交单个请求处理多个数据实例时，会使用此功能。在 Vertex
    AI 中，可以直接向 Vertex AI 模型注册表中的模型提交批量预测请求，而无需将其部署到端点。'
- en: '**Online predictions**: If you need real-time inference – for example, when
    responding to application input – you need to use the Vertex AI online prediction
    option. To use online prediction, you must first deploy the model to an endpoint.
    This step provisions infrastructure resources and deploys prediction serving mechanism
    using the specified model, enabling it to serve predictions with low latency.
    The steps to deploy the model are shown in the following section.'
  id: totrans-209
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**在线预测**：如果您需要实时推理 – 例如，在响应应用程序输入时 – 您需要使用 Vertex AI 在线预测选项。要使用在线预测，您必须首先将模型部署到端点。此步骤配置基础设施资源，并使用指定的模型部署预测服务机制，使其能够以低延迟提供预测。部署模型的步骤将在下一节中展示。'
- en: Important note
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: Models deployed on Vertex AI endpoints continuously incur costs, regardless
    of their usage. This could add up quickly, depending on the type of underlying
    VM types, especially if you are using GPUs.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Vertex AI 端点上部署的模型将持续产生费用，无论其使用情况如何。这可能会根据底层 VM 类型快速增加，尤其是如果您正在使用 GPU。
- en: In the next section, we will deploy the ML model we trained on Vertex AI to
    generate online predictions.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将部署我们在 Vertex AI 上训练的 ML 模型以生成在线预测。
- en: Deploying a model in Vertex AI
  id: totrans-213
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Vertex AI 中部署模型
- en: 'Now, let us walk you through the steps of deploying the trained model on Vertex
    AI to enable real-time predictions:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们带您了解在 Vertex AI 上部署训练模型以启用实时预测的步骤：
- en: Go to **Model Registry**, click on the model and then the model version you
    want to deploy, and on the **DEPLOY & TEST** tab, click **DEPLOY** **TO ENDPOINT**.
  id: totrans-215
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往 **模型注册表**，点击模型，然后点击您想要部署的模型版本，在 **部署 & 测试** 选项卡上，点击 **部署** **到端点**。
- en: '![Figure 5.18 – Initiating model deployment](img/B17792_05_18.jpg)'
  id: totrans-216
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.18 – 启动模型部署](img/B17792_05_18.jpg)'
- en: Figure 5.18 – Initiating model deployment
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.18 – 启动模型部署
- en: Type in the desired name of the API endpoint being created and click **CONTINUE**.
  id: totrans-218
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入要创建的 API 端点的期望名称，然后点击 **继续**。
- en: '![Figure 5.19 – Creating a model endpoint](img/B17792_05_19.jpg)'
  id: totrans-219
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.19 – 创建模型端点](img/B17792_05_19.jpg)'
- en: Figure 5.19 – Creating a model endpoint
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 5.19 – 创建模型端点](img/B17792_05_19.jpg)'
- en: 'You can leave all default options unchanged for quick test deployment, but
    these are the settings you need to understand:'
  id: totrans-221
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以保留所有默认选项不变以进行快速测试部署，但这些都是您需要了解的设置：
- en: '**Traffic split**: If multiple versions of the model are deployed on the same
    API endpoint, this option allows users to define what percentage of total traffic
    is allocated to a specific version. For example, when deploying a new model, you
    might want only 2% of the overall incoming data to be routed to the new model
    so that it can be tested, while continuing to send the rest of the 98% of data
    to the existing version of the model. When deploying a model to a new endpoint,
    you need to leave this value at 100%, since there is no other model to split the
    workload.'
  id: totrans-222
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**流量分配**：如果同一 API 端点部署了多个模型版本，此选项允许用户定义分配给特定版本的流量百分比。例如，在部署新模型时，您可能只想将 2% 的整体传入数据路由到新模型以进行测试，同时继续将剩余的
    98% 数据发送到现有模型的版本。在将模型部署到新端点时，您需要将此值保留为 100%，因为没有其他模型来分担工作负载。'
- en: '**Minimum number of compute nodes**: This is the bare minimum number of compute
    nodes always available to handle the inference requests. Even if there are no
    requests being handled, these nodes will constantly be deployed and incur charges.'
  id: totrans-223
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**最小计算节点数**：这是始终可用的最小计算节点数，用于处理推理请求。即使没有正在处理的请求，这些节点也将持续部署并产生费用。'
- en: '**Maximum number of compute nodes**: During autoscaling, as the number of incoming
    requests increases, Vertex AI will automatically increase the number of deployed
    nodes up to this number.'
  id: totrans-224
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**最大计算节点数**：在自动扩展过程中，随着 incoming 请求数量的增加，Vertex AI 将自动增加已部署节点的数量，直到达到这个数量。'
- en: '**Machine type**: This relates to the configuration of the node supporting
    the online inference in terms of CPUs and memory.'
  id: totrans-225
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**机器类型**：这涉及到支持在线推理的节点配置，包括CPU和内存。'
- en: '**Explainability options**: If you want the **Feature importance** value to
    be generated with every inference, select this option.'
  id: totrans-226
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可解释性选项**：如果你希望每次推理都生成**特征重要性**值，请选择此选项。'
- en: Click **CONTINUE** once you have made the desired changes.
  id: totrans-227
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在做出所需更改后，点击**继续**。
- en: '![Figure 5.20 – Specifying the model deployment configurations](img/B17792_05_20.jpg)'
  id: totrans-228
  prefs: []
  type: TYPE_IMG
  zh: '![图5.20 – 指定模型部署配置](img/B17792_05_20.jpg)'
- en: Figure 5.20 – Specifying the model deployment configurations
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.20 – 指定模型部署配置
- en: On the **Model monitoring** page, turn off monitoring for now. We will cover
    model monitoring in detail in [*Chapter 11*](B17792_11.xhtml#_idTextAnchor153)*,
    MLOps Governance with Vertex AI*. Click **DEPLOY**. This will start the endpoint
    creation process for new endpoints, followed by the model deployment process.
  id: totrans-230
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**模型监控**页面上，暂时关闭监控。我们将在[*第11章*](B17792_11.xhtml#_idTextAnchor153)*，Vertex AI的MLOps治理中详细讲解模型监控。点击**部署**。这将启动新端点的端点创建过程，然后是模型部署过程。
- en: Once the model deployment is complete we can use the model to generate real
    time predictions as shown below.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 模型部署完成后，我们可以使用模型生成以下所示的实时预测。
- en: Generating predictions
  id: totrans-232
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 生成预测
- en: Once the model deployment is complete, you will see the endpoint listed in the
    **DEPLOY & TEST** tab. Underneath that, there will be a **Test your model** table,
    listing all feature values required to generate predictions. Fields will already
    have starting values based on the data used for AutoML training, but you can type
    in different values and click **Predict** to generate predictions.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 模型部署完成后，你将在**部署 & 测试**标签页中看到列出的端点。下面将有一个**测试你的模型**表格，列出生成预测所需的所有特征值。字段将基于用于AutoML训练的数据自动填充起始值，但你可以输入不同的值并点击**预测**来生成预测。
- en: '![Figure 5.21 – Testing a deployed model](img/B17792_05_21.jpg)'
  id: totrans-234
  prefs: []
  type: TYPE_IMG
  zh: '![图5.21 – 测试已部署的模型](img/B17792_05_21.jpg)'
- en: Figure 5.21 – Testing a deployed model
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.21 – 测试已部署的模型
- en: Once the model churns through the provided feature values, it will return the
    confidence score associated with each label. The one with the highest confidence
    score is the predicted label.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦模型处理完提供的特征值，它将返回与每个标签相关的置信度分数。置信度分数最高的就是预测的标签。
- en: '![Figure 5.22 – The prediction result](img/B17792_05_22.jpg)'
  id: totrans-237
  prefs: []
  type: TYPE_IMG
  zh: '![图5.22 – 预测结果](img/B17792_05_22.jpg)'
- en: Figure 5.22 – The prediction result
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.22 – 预测结果
- en: Now let’s look at the options available to developers to use the Vertex AI models
    programmatically.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们看看开发者可以使用Vertex AI模型进行编程的选项。
- en: Generating predictions programmatically
  id: totrans-240
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 以编程方式生成预测
- en: To access the Vertex AI prediction service, you can work with the Vertex AI
    SDK for Python, or client libraries available for Python, Java, and Node.js. Check
    out *Install the Vertex AI client libraries* at [https://cloud.google.com/vertex-ai/docs/start/client-libraries](https://cloud.google.com/vertex-ai/docs/start/client-libraries)
    to learn how to install the client library for Java or Node.js. You can find a
    large number of Vertex AI sample notebooks, both community generate and those
    published by Google Cloud team at [https://github.com/GoogleCloudPlatform/vertex-ai-samples](https://github.com/GoogleCloudPlatform/vertex-ai-samples).
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 要访问Vertex AI预测服务，你可以使用Python的Vertex AI SDK，或者Python、Java和Node.js的可用客户端库。查看[https://cloud.google.com/vertex-ai/docs/start/client-libraries](https://cloud.google.com/vertex-ai/docs/start/client-libraries)中的*安装Vertex
    AI客户端库*，了解如何安装Java或Node.js的客户端库。你可以在[https://github.com/GoogleCloudPlatform/vertex-ai-samples](https://github.com/GoogleCloudPlatform/vertex-ai-samples)找到大量Vertex
    AI样本笔记本，包括社区生成和由Google Cloud团队发布的。
- en: If your preferred programming language doesn’t have a client library, you can
    make use of the Vertex AI REST API instead.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的首选编程语言没有客户端库，你可以使用Vertex AI REST API。
- en: Submitting prediction requests using the REST API
  id: totrans-243
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用REST API提交预测请求
- en: Although the **DEPLOY & TEST** tab within Vertex AI makes it easy to test a
    model with a few samples, in most typical use cases, the model’s API endpoint
    will be accessed programmatically by sending the input samples to the API and
    receiving a JSON response from it. Vertex AI makes it easier to get started by
    generating sample code, as shown in the following screenshot.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管Vertex AI中的**部署与测试**标签使通过少量样本测试模型变得容易，但在大多数典型用例中，模型的API端点将通过将输入样本发送到API并从其接收JSON响应来程序化访问。Vertex
    AI通过生成示例代码来简化开始过程，如下面的截图所示。
- en: '![Figure 5.23 – A sample REST request](img/B17792_05_23.jpg)'
  id: totrans-245
  prefs: []
  type: TYPE_IMG
  zh: '![图5.23 – 一个样本REST请求](img/B17792_05_23.jpg)'
- en: Figure 5.23 – A sample REST request
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.23 – 一个样本REST请求
- en: We will use GCP’s native Cloud Shell to submit a sample prediction request to
    the model deployed in Vertex AI. The first step is to open the cloud shell, as
    shown in the following screenshot.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用GCP的本地Cloud Shell向Vertex AI中部署的模型提交一个样本预测请求。第一步是打开云壳，如下面的截图所示。
- en: '![Figure 5.24 – Opening the cloud shell](img/B17792_05_24.jpg)'
  id: totrans-248
  prefs: []
  type: TYPE_IMG
  zh: '![图5.24 – 打开云壳](img/B17792_05_24.jpg)'
- en: Figure 5.24 – Opening the cloud shell
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.24 – 打开云壳
- en: Once Cloud Shell is open, upload the JSON file containing the input data samples
    to the Cloud Shell environment. We will submit this JSON payload as part of the
    request to the API.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦Cloud Shell打开，将包含输入数据样本的JSON文件上传到Cloud Shell环境。我们将作为对API的请求的一部分提交此JSON有效负载。
- en: '![Figure 5.25 – Uploading the JSON payload](img/B17792_05_25.jpg)'
  id: totrans-251
  prefs: []
  type: TYPE_IMG
  zh: '![图5.25 – 上传JSON有效负载](img/B17792_05_25.jpg)'
- en: Figure 5.25 – Uploading the JSON payload
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.25 – 上传JSON有效负载
- en: In Cloud Shell, copy and paste the following lines to set the environment variables
    after replacing `enpoint_id`, `project_id`, and the path to the input JSON file
    you uploaded.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 在Cloud Shell中，复制并粘贴以下行以设置环境变量，在替换`endpoint_id`、`project_id`以及您上传的输入JSON文件的路径后。
- en: 'Note that you need to replace `endpoint-id`, `project-id`, and the local path
    of the JSON file you just uploaded from your respective GCP environment:'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，您需要替换`endpoint-id`、`project-id`以及您刚刚从各自的GCP环境中上传的JSON文件的本地路径：
- en: '[PRE0]'
  id: totrans-255
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Now, run the following command in Cloud Shell (you can copy and paste the command
    from the **Sample Request** screen we discussed previously:'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，在Cloud Shell中运行以下命令（您可以从我们之前讨论的**示例请求**屏幕中复制并粘贴该命令）：
- en: '[PRE1]'
  id: totrans-257
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Once the prediction request is sent to Vertex AI, it will run the data through
    the model hosted on the endpoint, and if everything goes well, you will receive
    a JSON response from the API.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦预测请求发送到Vertex AI，它将通过端点托管的数据模型运行数据，如果一切顺利，您将收到API的JSON响应。
- en: 'Here’s the response received from the Vertex AI endpoint:'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 这是从Vertex AI端点收到的响应：
- en: '[PRE2]'
  id: totrans-260
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The response contains three main parts – `predictions`, `deployedModelId`, and
    `model`.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 响应包含三个主要部分 – `predictions`、`deployedModelId`和`model`。
- en: The `predictions` section contains the actual predictions made by the model.
    In this case, since we submitted two samples for prediction, two predictions have
    been made, each with a set of scores and predicted classes. The scores represent
    the model’s confidence in each class, and the classes represent the label or category
    that the model has predicted for each prediction.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: '`predictions`部分包含模型实际做出的预测。在这种情况下，因为我们提交了两个样本进行预测，所以做出了两个预测，每个预测都有一个分数集和预测类别。分数代表模型对每个类别的信心，而类别代表模型对每个预测预测的标签或类别。'
- en: The first prediction has scores of 0.8947 for class `"0"` and 0.1053 for class
    `"1"`, which suggests that the model is highly confident that the first prediction
    belongs to class `"0"`
  id: totrans-263
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第一次预测的得分为类别`"0"`的0.8947和类别`"1"`的0.1053，这表明模型高度确信第一次预测属于类别`"0"`。
- en: The second prediction has scores of 0.8826 for class `"0"` and 0.1174 for class
    `"1"`, which also suggests that the model is confident that the second prediction
    belongs to class `"0"` but is less certain than it was about the first prediction
  id: totrans-264
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第二次预测的得分为类别`"0"`的0.8826和类别`"1"`的0.1174，这也表明模型确信第二次预测属于类别`"0"`，但比第一次预测的确定性要低。
- en: '`deployedModelId` is a unique identifier for the deployed model. This is useful
    to keep track of different versions of the same model that may be deployed at
    different times, or in different locations.'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: '`deployedModelId`是已部署模型的唯一标识符。这对于跟踪在不同时间或不同位置部署的同一模型的多个版本非常有用。'
- en: The `model` section provides information about the model that was used to make
    the predictions. It includes the model’s ID, location, and display name, as well
    as the version of the model that was used for these predictions (in this case,
    version 1). This information can help debug and troubleshoot if there are issues
    with the model or its predictions.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: '`模型`部分提供了有关用于做出预测的模型的信息。它包括模型的ID、位置和显示名称，以及用于这些预测的模型版本（在本例中为版本1）。这些信息有助于调试和排除模型或其预测中存在的问题。'
- en: In the preceding end-to-end example, we walked you through building an AutoML
    classification model for tabular/structured data. In the subsequent chapters,
    we will also provide examples of how to build AutoML Vision models using image
    data ([*Chapter 16*](B17792_16.xhtml#_idTextAnchor233)) and examples of AutoML
    NLP models with text data ([*Chapter 17*](B17792_17.xhtml#_idTextAnchor282)).
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的端到端示例中，我们向您展示了如何构建用于表格/结构化数据的AutoML分类模型。在随后的章节中，我们还将提供如何使用图像数据构建AutoML Vision模型（[*第16章*](B17792_16.xhtml#_idTextAnchor233)）和文本数据构建AutoML
    NLP模型（[*第17章*](B17792_17.xhtml#_idTextAnchor282)）的示例。
- en: Summary
  id: totrans-268
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we discussed the transformative influence of no-code platforms
    in democratizing AI and machine learning, allowing individuals without specialized
    coding knowledge to develop sophisticated models. You also learned about the no-code
    machine learning options available through Google Cloud’s Vertex AI toolset, and
    we explored the steps to build, evaluate, deploy, and generate predictions with
    an AutoML model. The chapter serves as a practical guide for users interested
    in leveraging Google Cloud’s machine learning capabilities without writing code.
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们讨论了无代码平台在民主化人工智能和机器学习方面的变革性影响，使得没有专业编码知识的个人也能开发复杂的模型。您还了解了通过Google Cloud的Vertex
    AI工具集可用的无代码机器学习选项，以及我们探讨了使用AutoML模型构建、评估、部署和生成预测的步骤。本章为对利用Google Cloud的机器学习能力感兴趣但不想编写代码的用户提供了实用指南。
- en: In the next chapter, we will explore some low-code options to build a machine
    learning model. Although that would require some additional technical skills compared
    to the no-code options discussed in this book, it would also give you more fine-grained
    control over how your model is built.
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将探讨一些低代码选项来构建机器学习模型。虽然与本书中讨论的无代码选项相比，这需要一些额外的技术技能，但它也会让您对模型构建有更多的精细控制。
