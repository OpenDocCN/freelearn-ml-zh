- en: '2'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '2'
- en: Working with Data in MATLAB
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在MATLAB中处理数据
- en: 'Today, the amount of data generated is enormous; computers, smart TVs, smartphones,
    home appliances, credit cards, sensors, public and private transport, and automation
    systems: these devices effortlessly produce a plethora of data, and here are just
    a handful of examples. Various purposes are served by storing and utilizing such
    data. One notable application is the utilization of **machine learning** (**ML**)
    algorithms for data analysis. This chapter delves into the process of importing
    and organizing data in MATLAB. To achieve this, it is crucial to acquaint yourself
    with the MATLAB workspace to streamline operations. The chapter then proceeds
    to examine the different data formats available for collected data and goes on
    to explore various data formats for the gathered data, providing guidance on importing
    and exporting data to and from MATLAB. Moreover, it delves into data types suitable
    for managing grouping variables and categorical data. The section wraps up by
    detailing the process of exporting data from the workspace, encompassing cell
    arrays, structure arrays, and tabular data, and storing them in file formats supported
    by MATLAB.'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 今天，生成数据的数量是巨大的；计算机、智能电视、智能手机、家用电器、信用卡、传感器、公共交通和自动化系统：这些设备轻松地产生大量数据，这里只是其中的一小部分。存储和使用此类数据服务于各种目的。一个值得注意的应用是利用**机器学习**（**ML**）算法进行数据分析。本章深入探讨了在MATLAB中导入和组织数据的过程。为了实现这一点，熟悉MATLAB工作空间以简化操作至关重要。然后，章节继续检查收集到的数据的各种数据格式，并进一步探索收集数据的各种格式，提供导入和导出数据到MATLAB的指导。此外，它还深入探讨了适合管理分组变量和分类数据的数据类型。该部分通过详细说明从工作空间导出数据的过程结束，包括单元数组、结构数组和表格数据，并将它们存储在MATLAB支持的文件格式中。
- en: Finally, it offers insights on organizing data in the appropriate format for
    the subsequent stages of data analysis.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，它提供了关于为数据分析后续阶段组织数据的见解。
- en: 'In this chapter, we’re going to cover the following main topics:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主要主题：
- en: Importing data into MATLAB
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将数据导入MATLAB
- en: Reading ASCII-delimited files
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 读取ASCII分隔的文件
- en: Exporting data from MATLAB
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从MATLAB导出数据
- en: Working with different types of data
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 处理不同类型的数据
- en: Exploring data wrangling
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索数据整理
- en: Discovering exploratory statistics
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索探索性统计学
- en: Introducing exploratory visualization
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 介绍探索性可视化
- en: Understanding advanced data preprocessing techniques in MATLAB
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解MATLAB中高级数据预处理技术
- en: Technical requirements
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: In this chapter, we will introduce ML basic concepts. To understand these topics,
    a basic knowledge of algebra and mathematical modeling is needed, and a working
    knowledge of the MATLAB environment is also required.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将介绍机器学习的基本概念。要理解这些主题，需要具备代数和数学建模的基本知识，并且还需要熟悉MATLAB环境。
- en: 'To work with the MATLAB code in this chapter, you need the following files
    (available on GitHub at [https://github.com/PacktPublishing/MATLAB-for-Machine-Learning-second-edition](https://github.com/PacktPublishing/MATLAB-for-Machine-Learning-second-edition)):'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用本章中的MATLAB代码，你需要以下文件（可在GitHub上找到：[https://github.com/PacktPublishing/MATLAB-for-Machine-Learning-second-edition](https://github.com/PacktPublishing/MATLAB-for-Machine-Learning-second-edition))：
- en: '`IrisData.csv`'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`IrisData.csv`'
- en: '`matrix.mat`'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`matrix.mat`'
- en: '`matrix.txt`'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`matrix.txt`'
- en: '`NumMatrix.txt`'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`NumMatrix.txt`'
- en: '`ItalianMuseum.xlsx`'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ItalianMuseum.xlsx`'
- en: '`DataItalianCities.txt`'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DataItalianCities.txt`'
- en: '`coliseum.jpg`'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`coliseum.jpg`'
- en: '`Apollo13.wav`'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Apollo13.wav`'
- en: '`CleaningData.xlsx`'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`CleaningData.xlsx`'
- en: '`GlassIdentificationDataSet.xlsx`'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`GlassIdentificationDataSet.xlsx`'
- en: Importing data into MATLAB
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将数据导入MATLAB
- en: 'The exchange of data between the analysis environment and external devices
    plays a pivotal role in data analysis. Importing data refers to the process of
    bringing external data into a software or platform for further analysis, processing,
    or storage. This flow of operation can be developed in MATLAB through the following
    steps:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 分析环境与外部设备之间的数据交换在数据分析中起着关键作用。导入数据是指将外部数据带入软件或平台进行进一步分析、处理或存储的过程。此操作流程可以通过以下步骤在MATLAB中开发：
- en: '**Prepare your data**: Ensure that your data is in a compatible format such
    as a text file, spreadsheet (CSV or Excel), or a supported file format (MAT or
    HDF). Make sure the data is organized and structured properly.'
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**准备你的数据**：确保你的数据处于兼容的格式，如文本文件、电子表格（CSV或Excel）或支持的文件格式（MAT或HDF）。确保数据组织得当，结构正确。'
- en: '`importdata()` function in the MATLAB command window and press *Enter*. This
    function loads data from a file:'
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在MATLAB命令窗口中输入`importdata()`函数并按*Enter*。此函数从文件加载数据：
- en: '![Figure 2.1 – Import Data procedure](img/B21156_02_01.jpg)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![图2.1 – 导入数据过程](img/B21156_02_01.jpg)'
- en: Figure 2.1 – Import Data procedure
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.1 – 导入数据过程
- en: '**Select your data file**: In the Import Tool, browse and select the file you
    want to import. MATLAB supports various file formats, and you can choose the appropriate
    file type from the drop-down menu in the tool.'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**选择您的数据文件**：在导入工具中，浏览并选择您想要导入的文件。MATLAB支持多种文件格式，您可以从工具的下拉菜单中选择合适的文件类型。'
- en: '**Set import options**: Depending on the file format, the Import Tool will
    display different import options. You can specify how to import data, such as
    choosing the range of data to import, handling headers, specifying column formats,
    or indicating how missing values should be handled. Adjust these options according
    to your data.'
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**设置导入选项**：根据文件格式，导入工具将显示不同的导入选项。您可以指定如何导入数据，例如选择要导入的数据范围，处理标题，指定列格式，或指示如何处理缺失值。根据您的数据调整这些选项。'
- en: '**Preview and import the data**: Once you’ve configured the import options,
    click on the **Import Selection** button in the Import Tool (*Figure 2**.2*).
    MATLAB will then load and preview the data. You can review the imported data in
    the tool to ensure it appears as expected:'
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**预览和导入数据**：一旦您已配置导入选项，请点击导入工具中的**导入选择**按钮（*图2.2*）。然后，MATLAB将加载并预览数据。您可以在工具中查看导入的数据，以确保其显示如预期：'
- en: '![Figure 2.2 – Import window](img/B21156_02_02.jpg)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![图2.2 – 导入窗口](img/B21156_02_02.jpg)'
- en: Figure 2.2 – Import window
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.2 – 导入窗口
- en: '**Store the imported data**: MATLAB will typically import the data into a variable
    of the appropriate data type. You can choose to save the imported data to a variable
    in the MATLAB workspace or assign it to a specific variable name for further analysis
    and manipulation.'
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**存储导入的数据**：MATLAB通常会将数据导入适当数据类型的变量中。您可以选择将导入的数据保存到MATLAB工作空间中的变量，或者将其分配给特定的变量名称以进行进一步的分析和处理。'
- en: '**Perform data analysis**: With the data successfully imported into MATLAB,
    you can now utilize its extensive range of built-in functions and tools for data
    analysis, visualization, and modeling. Apply the appropriate MATLAB commands and
    functions to process and analyze the imported data as needed.'
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**执行数据分析**：数据成功导入MATLAB后，您现在可以利用其广泛的内置函数和工具进行数据分析、可视化和建模。应用适当的MATLAB命令和函数，按需处理和分析导入的数据。'
- en: In addition to the Import Tool, MATLAB also provides various other functions
    for importing data, such as the `readtable()` function for reading tabular data,
    the `readmatrix()` function for importing Excel files, `load()` for loading MAT-files,
    and more.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 除了导入工具外，MATLAB还提供了各种其他导入数据的功能，例如`readtable()`函数用于读取表格数据，`readmatrix()`函数用于导入Excel文件，`load()`用于加载MAT文件，等等。
- en: Exploring the Import Tool
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 探索导入工具
- en: 'The Import Tool is the simplest and most user-friendly method for importing
    data into MATLAB. It eliminates the need for you to have prior knowledge about
    the data format. With the Import Tool, you can easily specify the file that contains
    the data, and the tool automatically processes the file contents, making the import
    process hassle-free. To achieve this, we can utilize the import wizard as outlined
    next:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 导入工具是将数据导入MATLAB的最简单、最用户友好的方法。它消除了您需要了解数据格式的先验知识的需求。使用导入工具，您可以轻松指定包含数据的文件，并且工具会自动处理文件内容，使导入过程无烦恼。为此，我们可以利用以下概述的导入向导：
- en: Launch the import wizard using the **Import Data** button (*Figure 2**.1*),
    which opens the import data dialog box.
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用**导入数据**按钮（*图2.1*）启动导入向导，该按钮打开导入数据对话框。
- en: Important note
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: It’s also possible to use the command line to open the Import Tool, using the
    `uiimport` command.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 还可以使用命令行通过`uiimport`命令打开导入工具。
- en: Select the desired file; in this case, let’s choose `IrisData.csv`.
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择所需的文件；在这种情况下，让我们选择`IrisData.csv`。
- en: The Import Tool window will open, as shown in *Figure 2**.3*.
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入工具窗口将打开，如图2.3所示。
- en: The Import Tool window displays a preview of the selected file’s data. You can
    choose to select specific data or import the entire content.
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入工具窗口显示所选文件数据的预览。您可以选择选择特定数据或导入整个内容。
- en: 'In the **Import Data** section (*Figure 2**.3*), use the drop-down menu below
    the **Output Type** label to specify how you want the data to be imported. The
    available options are the following:'
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **导入数据** 部分 (*图 2**.3*) 中，使用 **输出类型** 标签下方的下拉菜单指定您想要如何导入数据。可用选项如下：
- en: '**Table**: Import selected data as a table.'
  id: totrans-49
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**表格**：将选定的数据导入为表格。'
- en: '**Column vectors**: Import each column as an individual *m*-by-1 vector.'
  id: totrans-50
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**列向量**：将每个列作为单独的 *m*-by-1 向量导入。'
- en: '**Numeric Matrix**: Import selected data as an *m*-by-*n* numeric array.'
  id: totrans-51
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**数值矩阵**：将选定的数据导入为 *m*-by-*n* 数值数组。'
- en: '**String Array**: Import selected data as a string array with 1-by-*N* character
    vectors.'
  id: totrans-52
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**字符串数组**：将选定的数据导入为具有 1-by-*N* 字符向量的字符串数组。'
- en: '**Cell Array**: Import selected data as a cell array capable of storing multiple
    data types, including numeric and text data.'
  id: totrans-53
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**单元数组**：将选定的数据导入为能够存储多种数据类型（包括数值和文本数据）的单元数组。'
- en: In the **Import Data** window (*Figure 2**.3*), in the drop-down menu below
    the **Output Type** label, select the **Column** **vectors** option.
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **导入数据** 窗口 (*图 2**.3*) 中，在 **输出类型** 标签下方的下拉菜单中，选择 **列向量** 选项。
- en: Click the **Import Selection** button (*Figure 2**.3*). This action creates
    variables in your MATLAB workspace.
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **导入选择** 按钮 (*图 2**.3*)。此操作将在 MATLAB 工作区中创建变量。
- en: 'To verify the successful import, check the workspace browser. If new variables
    appear, it indicates that the import was successful. In this case, there should
    be five new variables: `PetalLength`, `PetalWidth`, `SepalLength`, `SepalWidth`,
    and `Species`. These variables represent the five columns from the selected file.'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 要验证导入是否成功，请检查工作区浏览器。如果出现新变量，则表示导入成功。在这种情况下，应该有五个新变量：`PetalLength`、`PetalWidth`、`SepalLength`、`SepalWidth`
    和 `Species`。这些变量代表从所选文件中的五个列。
- en: 'To examine the contents of each variable, you can either call them from the
    MATLAB prompt or double-click on the variable name in the workspace browser. This
    action opens a variable window displaying the values:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 要检查每个变量的内容，您可以从 MATLAB 提示符中调用它们或在工作区浏览器中双击变量名称。此操作将打开一个变量窗口，显示值：
- en: '![Figure 2.3 – Import Data window](img/B21156_02_03.jpg)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.3 – 导入数据窗口](img/B21156_02_03.jpg)'
- en: Figure 2.3 – Import Data window
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.3 – 导入数据窗口
- en: The Import Tool is not the only way to import data into MATLAB, even if it is
    the simplest way to do this. As already mentioned, it is possible to import files
    into MATLAB programmatically.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 导入工具并非导入数据到 MATLAB 的唯一方式，尽管它是完成此任务最简单的方法。如前所述，可以通过编程方式将文件导入 MATLAB。
- en: Using the load() function to import files
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 load() 函数导入文件
- en: 'The `load()` function is a way to import data programmatically: using this
    function, it is possible to import into MATLAB variables from a file already present
    in the workspace.'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '`load()` 函数是一种以编程方式导入数据的方法：使用此函数，可以将工作区中已存在的文件中的变量导入到 MATLAB 中。'
- en: The `load()` function works on MAT-files; MAT-files are a binary file format
    used by MATLAB to store variables, data, and other MATLAB objects. These files
    have the `.mat` extension and can contain a wide range of data types, including
    numeric arrays, structures, cell arrays, and more. Using only the `load` command
    without any information, we retrieve all variables from the MAT-file named `matlab.mat`,
    assuming it exists. In case the file does not exist, an error will be returned.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '`load()` 函数适用于 MAT 文件；MAT 文件是 MATLAB 使用的二进制文件格式，用于存储变量、数据和 MATLAB 的其他对象。这些文件具有
    `.mat` 扩展名，可以包含多种数据类型，包括数值数组、结构、单元数组等。在不提供任何信息的情况下仅使用 `load` 命令，我们将从名为 `matlab.mat`
    的 MAT 文件中检索所有变量，假设该文件存在。如果文件不存在，将返回错误。'
- en: 'When the `load()` function is used in MATLAB specifying a filename, it behaves
    differently depending on the type of file specified by the filename parameter:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 当在 MATLAB 中使用 `load()` 函数并指定文件名时，其行为取决于文件名参数指定的文件类型：
- en: If the filename refers to a MAT-file, the `load`(*filename*) function imports
    the variables stored within the MAT-file and adds them to the MATLAB workspace.
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果文件名指的是 MAT 文件，则 `load`(*filename*) 函数将导入存储在 MAT 文件中的变量并将它们添加到 MATLAB 工作区。
- en: On the other hand, if the filename corresponds to an ASCII file, executing `load`(`'filename'`)
    creates a double-precision array that holds the data extracted from the file.
    This array can be accessed and manipulated within the MATLAB environment.
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 另一方面，如果文件名对应于 ASCII 文件，则执行 `load`(`'filename'`) 将创建一个双精度数组，该数组包含从文件中提取的数据。此数组可以在
    MATLAB 环境中访问和处理。
- en: 'Let’s suppose that the `.mat` file contains a single variable named `matrix.mat`
    that is a 3x3 matrix of integers, using the following command:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 假设`.mat`文件包含一个名为`matrix.mat`的单个变量，它是一个3x3的整数矩阵，使用以下命令：
- en: '[PRE0]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'We can find a new variable in the MATLAB workspace named `matrix` that contains
    the following 3x3 matrix:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在MATLAB工作空间中找到一个名为`matrix`的新变量，它包含以下3x3矩阵：
- en: '[PRE1]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Using the `load` command is a very effective way to recall data from previous
    MATLAB sessions.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`load`命令是从之前的MATLAB会话中回忆数据的一种非常有效的方法。
- en: Important note
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: 'Remember to enclose the filename in single quotes; otherwise, MATLAB returns
    a message such as this: `Unable to resolve the` `name matrix.mat`.'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 记得用单引号括起文件名；否则，MATLAB会返回如下消息：“无法解析名称matrix.mat”。
- en: In addition to loading MAT-files to save workspace contents, let’s explore how
    to load ASCII text files. These files contain plain-text data and can be loaded
    using different functions based on the delimiter used to separate values within
    the text.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 除了加载MAT文件以保存工作空间内容外，让我们探讨如何加载ASCII文本文件。这些文件包含纯文本数据，可以根据用于分隔文本中值的分隔符使用不同的函数来加载。
- en: If numeric entries in the text file are separated by a blank space, comma, semicolon,
    or tab, the `load()` function can be utilized. Let’s proceed with an example to
    demonstrate its usage. Let’s suppose we have the 3x3 matrix already used in the
    previous example in an ASCII file (`matrix.txt`).
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 如果文本文件中的数值条目由空格、逗号、分号或制表符分隔，可以使用`load()`函数。让我们通过一个示例来演示其用法。假设我们有一个3x3矩阵，如前一个示例中使用的ASCII文件（`matrix.txt`）。
- en: 'Consider the following code snippet:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑以下代码片段：
- en: '[PRE2]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: In this example, the `load()` function is used to load the contents of the text
    file named `matrix.txt`. The function assumes that numeric entries within the
    file are separated by one of the supported delimiters. The loaded data is then
    stored in the `data` variable for further processing in MATLAB. Make sure to replace
    `matrix.txt` with the actual filename, and ensure that the file is located in
    the current MATLAB folder or provide the full path to the file if it is in a different
    directory.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 在此示例中，使用`load()`函数加载名为`matrix.txt`的文本文件的内容。该函数假定文件中的数值条目由支持的分隔符之一分隔。然后，加载的数据存储在`data`变量中，以便在MATLAB中进行进一步处理。请确保将`matrix.txt`替换为实际文件名，并确保文件位于当前MATLAB文件夹中，或者如果文件位于不同目录中，请提供文件的完整路径。
- en: 'The following results are shown:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 以下结果显示：
- en: '[PRE3]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: It is important to exercise caution when using the `load` command, especially
    when dealing with MAT-files from untrusted sources. The reason is that the `load`
    command can potentially execute code contained within the MAT-file during the
    process of initializing variables.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用`load`命令时，尤其是在处理来自不受信任来源的MAT文件时，必须谨慎行事。原因是`load`命令在初始化变量的过程中可能会执行MAT文件中包含的代码。
- en: Reading ASCII-delimited files
  id: totrans-82
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 读取ASCII分隔文件
- en: 'The `readmatrix()` function in MATLAB allows you to read the contents of a
    text file into a matrix. It is a convenient way to load numerical data from a
    delimited or fixed-width text file. The basic syntax for using `readmatrix` is
    as follows:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: MATLAB中的`readmatrix()`函数允许您将文本文件的内容读取到矩阵中。这是从分隔或固定宽度的文本文件中加载数值数据的一种便捷方式。使用`readmatrix`的基本语法如下：
- en: '[PRE4]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The function will attempt to infer the delimiter used in the file automatically.
    You can also specify additional options to customize the behavior of `readmatrix`,
    such as specifying the range of rows or columns to read, handling missing data,
    specifying the delimiter explicitly, and more. Here’s an example:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 函数将尝试自动推断文件中使用的分隔符。您还可以指定其他选项来定制`readmatrix`的行为，例如指定要读取的行或列的范围、处理缺失数据、显式指定分隔符等。以下是一个示例：
- en: '[PRE5]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'In this example, the `Range` option is used to specify that only the data in
    the range `A1` to `C3` should be read, and the `Delimiter` option specifies that
    the data is comma-separated. The following results are returned:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 在此示例中，使用`Range`选项指定只读取范围`A1`到`C3`中的数据，而`Delimiter`选项指定数据是以逗号分隔的。以下结果显示：
- en: '[PRE6]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '`readmatrix` returns the data from the file as a matrix, where each row corresponds
    to a line in the file, and each column represents a separate value.'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '`readmatrix`将文件中的数据作为矩阵返回，其中每一行对应文件中的一行，每一列代表一个单独的值。'
- en: 'The `readmatrix()` function in MATLAB provides automatic detection of import
    parameters for your file based on its file extension:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: MATLAB中的`readmatrix()`函数根据文件的文件扩展名自动检测文件导入参数：
- en: If the file extension is `.txt`, `.dat`, or `.csv`, `readmatrix` recognizes
    it as a delimited text file
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果文件扩展名是 `.txt`、`.dat` 或 `.csv`，`readmatrix` 会将其识别为分隔文本文件。
- en: If the file extension is `.xls`, `.xlsb`, `.xlsm`, `.xlsx`, `.xltm`, `.xltx`,
    or `.ods`, `readmatrix` identifies it as a spreadsheet file
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果文件扩展名是 `.xls`、`.xlsb`、`.xlsm`、`.xlsx`、`.xltm`、`.xltx` 或 `.ods`，`readmatrix`
    会将其识别为电子表格文件。
- en: 'Another way to import data into MATLAB is by using the `readtable()` function:
    this function is used to read the contents of a tabular data file into a MATLAB
    table. It is a convenient way to handle structured data in various formats such
    as CSV, delimited text, Excel spreadsheets, and more.'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 将数据导入 MATLAB 的另一种方法是使用 `readtable()` 函数：此函数用于将表格数据文件的正文内容读取到 MATLAB 表格中。这是一种方便处理各种格式（如
    CSV、分隔文本、Excel 电子表格等）的结构化数据的方法。
- en: 'The basic syntax for using `readtable()` function is as follows:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `readtable()` 函数的基本语法如下：
- en: '[PRE7]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '`readtable` automatically detects the file format based on its extension and
    imports the data into a table. You can also specify additional options to customize
    the behavior of `readtable`, such as specifying the range of rows or columns to
    read, handling missing data, specifying the variable names and types, and more.
    Take a look at this example:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '`readtable` 会根据文件扩展名自动检测文件格式并将数据导入到表格中。您还可以指定额外的选项来自定义 `readtable` 的行为，例如指定要读取的行或列的范围，处理缺失数据，指定变量名称和类型等。请看以下示例：'
- en: '[PRE8]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: In this example, the `Range` option is used to specify that only the data in
    the range `A1` to `C10` should be read (only 3 columns and only 10 rows). The
    `MissingRule` option is set to fill to handle missing data.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例中，使用 `Range` 选项指定只读取范围 `A1` 到 `C10` 的数据（只有3列和10行）。`MissingRule` 选项设置为填充以处理缺失数据。
- en: '`readtable` returns the data from the file as a MATLAB table, which is a versatile
    data structure that allows for the easy manipulation, analysis, and visualization
    of tabular data.'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '`readtable` 将文件中的数据作为 MATLAB 表格返回，这是一个灵活的数据结构，允许轻松地操作、分析和可视化表格数据。'
- en: 'Let me highlight a last way to import data. I’m referring to the `readcell()`
    function: this is used to read the contents of a cell-based file, such as a CSV
    or delimited text file, into a cell array. It is specifically designed to handle
    files where each element is represented as a separate cell. In MATLAB, a cell
    array is a data structure that can hold elements of different types, such as numbers,
    strings, or other MATLAB objects. Unlike regular arrays where elements must be
    of the same type, a cell array allows for flexibility in storing and manipulating
    heterogeneous data.'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 让我强调最后一种导入数据的方法。我指的是 `readcell()` 函数：这是用于读取基于单元的文件内容，例如 CSV 或分隔文本文件，到单元数组中。它专门设计用于处理每个元素都表示为单独单元的文件。在
    MATLAB 中，单元数组是一种可以存储不同类型元素（如数字、字符串或其他 MATLAB 对象）的数据结构。与必须具有相同类型的元素的常规数组不同，单元数组允许在存储和处理异构数据时具有灵活性。
- en: 'The basic syntax for using `readcell` is as follows:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `readcell` 的基本语法如下：
- en: '[PRE9]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: The `readcell()` function automatically detects the file format based on its
    extension and imports the data into a cell array. As for the previous function
    (`readtable`), we can also specify additional options to customize the behavior
    of `readcell`, such as specifying the range of rows or columns to read, handling
    missing data, specifying the delimiter explicitly, and more. `readcell` returns
    the data from the file as a cell array, where each cell represents an element
    in the file. The size and structure of the resulting cell array depend on the
    contents of the file.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '`readcell()` 函数会根据文件扩展名自动检测文件格式，并将数据导入到单元数组中。至于之前的函数 (`readtable`)，我们还可以指定额外的选项来自定义
    `readcell` 的行为，例如指定要读取的行或列的范围，处理缺失数据，显式指定分隔符等。`readcell` 将文件中的数据作为单元数组返回，其中每个单元代表文件中的一个元素。结果单元数组的大小和结构取决于文件的内容。'
- en: 'Let’s see another function very useful for reading formatted data: the `textscan()`
    function is capable of reading both strings and numbers from a single dataset.
    It operates by extracting data from an open text file and storing the contents
    in a cell array. To specify the text file, a file identifier (such as `fileID`)
    is used. In order to work with the file, it is necessary to employ the `fopen()`
    function, which opens the file and retrieves the file identifier. It is not possible
    to directly open the file and begin working with it. After reading data from the
    file, it is important to close the file by using the `fclose()` function and specifying
    a `fileID` variable. When using the `textscan()` function, it is necessary to
    provide a format specification that defines how the data should be interpreted.
    The format specification consists of conversion specifiers that represent different
    data types.'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看另一个非常有用的读取格式化数据的函数：`textscan()`函数能够从单个数据集中读取字符串和数字。它通过从打开的文本文件中提取数据并将内容存储在单元数组中来实现。为了指定文本文件，使用文件标识符（例如`fileID`）。为了与文件一起工作，必须使用`fopen()`函数打开文件并检索文件标识符。不能直接打开文件并开始工作。从文件中读取数据后，使用`fclose()`函数并指定`fileID`变量来关闭文件非常重要。当使用`textscan()`函数时，需要提供一个格式说明，以定义数据应该如何解释。格式说明由表示不同数据类型的转换说明符组成。
- en: 'To specify the data format for reading the `DataItalianCities.txt` file, you
    need to define the format specification based on the structure of the data in
    the file. Let’s assume that each line in the file represents a list of records;
    based on this assumption, you can specify the data format as follows:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 要指定读取`DataItalianCities.txt`文件的格式，需要根据文件中数据的结构定义格式说明。假设文件中的每一行代表一个记录列表；基于这个假设，可以指定数据格式如下：
- en: '[PRE10]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'In this format specification, the following applies:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种格式说明中，以下适用：
- en: '`%s` corresponds to the city name (a string)'
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`%s` 对应城市名称（一个字符串）'
- en: '`%d` corresponds to the population (an integer)'
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`%d` 对应人口（一个整数）'
- en: '`%f` corresponds to the surface area (floating-point numbers)'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`%f` 对应表面积（浮点数）'
- en: '`%d` corresponds to the population density (an integer)'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`%d` 对应人口密度（一个整数）'
- en: '`%d` corresponds to the altitude (an integer)'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`%d` 对应海拔（一个整数）'
- en: With this format specification, the `textscan()` function will read the data
    from the file, considering each line to have a string, an integer, and two floating-point
    numbers in the specified order.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这种格式说明，`textscan()`函数将按指定顺序从文件中读取数据，考虑每一行包含一个字符串、一个整数和两个浮点数。
- en: 'To open the `DataItalianCities.txt` file in read-only mode and assign it to
    the `fileID` variable, you can use the `fopen()` function as follows:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 要以只读模式打开`DataItalianCities.txt`文件并将其分配给`fileID`变量，可以使用以下`fopen()`函数：
- en: '[PRE11]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: The `fopen()` function in MATLAB is used to open files with a specified mode.
    The `fopen()` function returns a file identifier, represented by the `fileID`
    variable, which can be used to perform file operations such as reading, writing,
    or closing a file. Remember to close the file using the `fclose()` function after
    you have finished working with it.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: MATLAB中的`fopen()`函数用于以指定模式打开文件。`fopen()`函数返回一个文件标识符，由`fileID`变量表示，可以用来执行文件操作，如读取、写入或关闭文件。记住，在完成工作后，使用`fclose()`函数关闭文件。
- en: The first argument, `DataItalianCities.txt`, is the name of the file you want
    to open. Make sure that the file is located in the same directory as your code
    or provide the full path if it’s located elsewhere. The second argument, `'r'`,
    indicates that you want to open the file in read-only mode. This allows you to
    read the contents of the file without modifying it. After executing this line,
    the `fileID` variable will contain the identifier or handle to the opened file,
    which you can use to perform read operations on the file.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个参数，`DataItalianCities.txt`，是你想要打开的文件名。确保该文件位于你的代码所在目录中，或者如果它位于其他位置，请提供完整的路径。第二个参数，`'r'`，表示你想要以只读模式打开文件。这允许你读取文件内容而不对其进行修改。执行此行后，`fileID`变量将包含打开文件的标识符或句柄，你可以使用它来对文件执行读取操作。
- en: 'To read the data from the `DataItalianCities.txt` open file using the `textscan()`
    function in MATLAB and assign the result to the `DataItalianCities` variable,
    you can use the following code:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用MATLAB中的`textscan()`函数从打开的`DataItalianCities.txt`文件中读取数据并将其分配给`DataItalianCities`变量，可以使用以下代码：
- en: '[PRE12]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: After executing this line of code, the `DataItalianCities` variable will store
    the extracted data from the file. It will be a cell array where each element corresponds
    to a column of data based on the specified format.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 执行此行代码后，`DataItalianCities` 变量将存储从文件中提取的数据。它将是一个单元数组，其中每个元素对应于基于指定格式的数据列。
- en: 'Finally, we must close the file:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们必须关闭文件：
- en: '[PRE13]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: After importing the data from the file and assigning it to the `DataItalianCities`
    variable, you can check if everything works as intended by performing various
    operations on the data. After seeing several ways to import data into the MATLAB
    environment, we must now learn how to export data processed using MATLAB tools.
    In this way, it will be possible to exchange data with different platforms and
    use the data obtained to elaborate reports and technical notes.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 在将数据从文件导入并分配给 `DataItalianCities` 变量后，您可以通过对数据进行各种操作来检查一切是否按预期工作。在了解了将数据导入 MATLAB
    环境的几种方法之后，我们现在必须学习如何导出使用 MATLAB 工具处理的数据。这样，就可以与不同的平台交换数据，并使用获得的数据编制报告和技术笔记。
- en: Exporting data from MATLAB
  id: totrans-124
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从 MATLAB 导出数据
- en: 'Exporting data represents a crucial activity for a data scientist: it allows
    you to perform advanced data analysis using specialized tools and libraries commonly
    used in data science. By exporting data from MATLAB to formats compatible with
    these tools, you can leverage their extensive functionality for **exploratory
    data analysis** (**EDA**), statistical modeling, ML, and visualization. Exporting
    data from MATLAB serves several purposes and can be beneficial in various scenarios:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 导出数据对于数据科学家来说是一项关键活动：它允许您使用在数据科学中常用的高级工具和库进行高级数据分析。通过将 MATLAB 数据导出为与这些工具兼容的格式，您可以利用它们在**数据探索分析**（**EDA**）、统计建模、机器学习和可视化方面的广泛功能。从
    MATLAB 导出数据具有多种用途，并在各种场景中可能有益：
- en: '**Data sharing**: Exporting data allows you to share your results, findings,
    or processed data with others who may not have direct access to MATLAB'
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据共享**：导出数据允许您与可能没有直接访问 MATLAB 的人共享您的结果、发现或处理后的数据'
- en: '**External analysis**: Exporting data enables you to analyze your MATLAB data
    using external software tools or programming languages'
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**外部分析**：导出数据使您能够使用外部软件工具或编程语言分析 MATLAB 数据'
- en: '**Documentation and reporting**: Exported data can be used for documentation
    and reporting purposes'
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**文档和报告**：导出的数据可用于文档和报告目的'
- en: '**Data backup**: Exporting data serves as a form of data backup'
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据备份**：导出数据作为数据备份的一种形式'
- en: '**Integration with other systems**: Exporting data allows you to integrate
    MATLAB with other systems or workflows'
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**与其他系统集成**：导出数据允许您将 MATLAB 与其他系统或工作流程集成'
- en: 'In MATLAB, you can export data to various file formats or external systems
    using different functions and techniques, depending on the desired output format.
    Here are some commonly used methods to export data from MATLAB:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 在 MATLAB 中，您可以使用不同的函数和技术将数据导出到各种文件格式或外部系统，具体取决于所需的输出格式。以下是导出 MATLAB 数据的一些常用方法：
- en: 'Exporting to a text file:'
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 导出到文本文件：
- en: Use the `fprintf` function to write data in a formatted manner to a text file
  id: totrans-133
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `fprintf` 函数以格式化的方式将数据写入文本文件
- en: Use the `writematrix` or `writetable` functions to export data to a text file
  id: totrans-134
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `writematrix` 或 `writetable` 函数将数据导出到文本文件
- en: 'Exporting to a spreadsheet file:'
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 导出到电子表格文件：
- en: Use the `writematrix` function to export numerical data to an Excel file (XLSX
    format)
  id: totrans-136
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `writematrix` 函数将数值数据导出到 Excel 文件（XLSX 格式）
- en: Use the `writetable` function to export tabular data to an Excel file or CSV
    file
  id: totrans-137
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `writetable` 函数将表格数据导出到 Excel 文件或 CSV 文件
- en: 'Exporting to a specific file format:'
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 导出为特定文件格式：
- en: Use functions specific to the desired file format, such as `save as` for saving
    plots as image files (PNG, JPEG, and so on) or the `audiowrite` function for exporting
    audio data
  id: totrans-139
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用针对所需文件格式的特定函数，例如使用 `另存为` 将图表保存为图像文件（PNG、JPEG 等）或使用 `audiowrite` 函数导出音频数据
- en: 'Exporting to a database or an external system:'
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 导出到数据库或外部系统：
- en: Use database-specific functions or libraries, such as Database Toolbox or third-party
    libraries, to export data to databases such as MySQL, SQLite, and so on
  id: totrans-141
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用特定于数据库的函数或库，例如数据库工具箱或第三方库，将数据导出到 MySQL、SQLite 等数据库
- en: 'Exporting to workspace variables:'
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 导出到工作空间变量：
- en: Use the `save` function to save specific MATLAB workspace variables to a MAT-file
    for later use
  id: totrans-143
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `save` 函数将特定的 MATLAB 工作空间变量保存到 MAT 文件中，以供以后使用
- en: 'Let’s take a look at several examples of how to use MATLAB functions to export
    data processed into that environment. Correspondingly, many of the functions we
    have used to import data into MATLAB also have corresponding functions that enable
    us to export data:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看如何使用 MATLAB 函数导出处理后的数据的几个示例。相应地，我们用于将数据导入 MATLAB 的许多函数也有相应的函数，使我们能够导出数据：
- en: 'We can start using the `save` command to export data in `.``mat` format:'
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以开始使用 `save` 命令导出 `.mat` 格式的数据：
- en: '[PRE14]'
  id: totrans-146
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: The `save` command allows you to save all the contents of the workspace in a
    compressed file with a `.mat` extension, commonly referred to as a MAT-file. This
    MAT-file preserves the variables, data, and any other workspace information, enabling
    you to easily load and retrieve the saved workspace state at a later time.
  id: totrans-147
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`save` 命令允许你将工作空间中的所有内容保存为具有 `.mat` 扩展名的压缩文件，通常称为 MAT 文件。这个 MAT 文件保留了变量、数据和任何其他工作空间信息，使你能够轻松地在以后的时间加载和检索保存的工作空间状态。'
- en: 'Now, we will create a sample matrix to explain the usage of the `writematrix`
    function: let me start creating a 5x5 matrix using the `rand()` function. The
    `rand` function in MATLAB generates uniformly distributed random numbers between
    `0` and `1`. It is commonly used for generating random numbers or creating random
    matrices and arrays of a specified size. For example, we can write the following
    command:'
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将创建一个示例矩阵来解释 `writematrix` 函数的用法：让我开始使用 `rand()` 函数创建一个 5x5 的矩阵。MATLAB
    中的 `rand` 函数生成介于 `0` 和 `1` 之间的均匀分布的随机数。它通常用于生成随机数或创建指定大小的随机矩阵和数组。例如，我们可以编写以下命令：
- en: '[PRE15]'
  id: totrans-149
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'In this case, `MyMatrix1` will be a 5-by-5 matrix of random numbers between
    0 and 1\. The following matrix has been generated:'
  id: totrans-150
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在这个情况下，`MyMatrix1` 将是一个 5x5 的随机数矩阵，这些随机数介于 0 和 1 之间。以下是一个生成的矩阵：
- en: '[PRE16]'
  id: totrans-151
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Additionally, you can use other functions such as `randi` to generate random
    integers within a specific range or `randn` to generate random numbers from a
    standard normal distribution. Remember to set the random number generator’s seed
    using `rng` to ensure reproducibility if you need to generate the same set of
    random numbers in different runs of the program.
  id: totrans-152
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此外，你还可以使用其他函数，如 `randi` 来生成特定范围内的随机整数或 `randn` 来生成标准正态分布的随机数。记住，如果你需要在程序的多次运行中生成相同的随机数集，请使用
    `rng` 设置随机数生成器的种子以确保可重复性。
- en: 'Now, we can export the matrix generated simply by using the `writematrix()`
    function as follows:'
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们可以通过以下命令简单地使用 `writematrix()` 函数导出生成的矩阵：
- en: '[PRE17]'
  id: totrans-154
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'We can add a specific delimiter to the file using a parameter in the command,
    as follows:'
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以在命令中使用一个参数添加特定的分隔符，如下所示：
- en: '[PRE18]'
  id: totrans-156
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Now, we can use the same matrix to write the data to a spreadsheet file. To
    export the matrix in a spreadsheet file, we can use the `writematrix(9)` function
    as follows:'
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们可以使用相同的矩阵将数据写入电子表格文件。要导出矩阵到电子表格文件，我们可以使用 `writematrix(9)` 函数如下所示：
- en: '[PRE19]'
  id: totrans-158
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'We can specify the sheet and the range also. An interesting task is to append
    data to a spreadsheet. To do that, we can create a new matrix:'
  id: totrans-159
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们还可以指定工作表和范围。一个有趣的任务是将数据追加到电子表格中。为此，我们可以创建一个新的矩阵：
- en: '[PRE20]'
  id: totrans-160
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Then, we append the data to the `MyMatrix2.xlsx` file as follows:'
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，我们将数据追加到 `MyMatrix2.xlsx` 文件中，如下所示：
- en: '[PRE21]'
  id: totrans-162
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'In this way, the second matrix was appended to the first in the same file;
    this is a good solution to add some information to a single file. Another function
    for writing data is `writetable()`. This function is used to write data from a
    table or dataset array to a file. Here’s an example of how you can use `writetable()`
    to write a table named `MyTable` to a CSV file named `MyTable.csv`:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 这样，第二个矩阵被追加到第一个矩阵中，同一个文件中；这是一个向单个文件添加一些信息的良好解决方案。另一个用于写入数据的函数是 `writetable()`。此函数用于将表或数据集数组中的数据写入文件。以下是如何使用
    `writetable()` 将名为 `MyTable` 的表写入名为 `MyTable.csv` 的 CSV 文件的示例：
- en: 'To start, we have to generate a table:'
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们必须生成一个表格：
- en: '[PRE22]'
  id: totrans-165
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'The following table is generated:'
  id: totrans-166
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 以下是一个生成的表格：
- en: '[PRE23]'
  id: totrans-167
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Now, we can export the table simply by using the following command:'
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们可以通过以下命令简单地导出表格：
- en: '[PRE24]'
  id: totrans-169
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: After having seen how to import and export files in the MATLAB environment,
    we will now see how to manipulate specific types of data.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 在了解了如何在 MATLAB 环境中导入和导出文件之后，我们现在将了解如何操作特定类型的数据。
- en: Working with different types of data
  id: totrans-171
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 处理不同类型的数据
- en: Working with different types of data involves understanding their specific formats
    and applying appropriate techniques for manipulation and analysis. Here are some
    common types of data and general considerations for working with them.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 处理不同类型的数据需要了解它们的特定格式，并应用适当的技巧进行操作和分析。以下是常见的数据类型以及处理它们的一般注意事项。
- en: Working with images
  id: totrans-173
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 处理图像
- en: 'In MATLAB, working with images involves loading, displaying, and performing
    various operations on image data. Here’s a brief overview of how to work with
    images in MATLAB:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 在MATLAB中，处理图像涉及加载、显示以及在图像数据上执行各种操作。以下是MATLAB中处理图像的简要概述：
- en: '`imread()` function. It reads the image file and returns a numeric array representing
    the image data. Here’s an example:'
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`imread()` 函数。它读取图像文件并返回一个表示图像数据的数值数组。以下是一个示例：'
- en: '[PRE25]'
  id: totrans-176
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: '`imshow()` function to display an image. It opens a separate window and shows
    the image. Here’s an example:'
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`imshow()` 函数用于显示图像。它打开一个单独的窗口并显示图像。以下是一个示例：'
- en: '[PRE26]'
  id: totrans-178
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '`imresize()`, convert it to grayscale using `rgb2gray()`, apply filters using
    functions such as `imfilter()`, and perform various other operations.'
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `imresize()` 将其转换为灰度图，使用 `rgb2gray()`，应用 `imfilter()` 等函数的过滤器，并执行各种其他操作。
- en: '`imwrite()` function. It takes the modified image array and writes it to a
    file. Here’s an example:'
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`imwrite()` 函数。它接受修改后的图像数组并将其写入文件。以下是一个示例：'
- en: '[PRE27]'
  id: totrans-181
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: To export the data from a variable to a user-specified file in MATLAB, we used
    the `imwrite()` function. This function writes the data from the variable into
    a file, with the format of the exported file determined by the specified extension.
    A new file will be created in the current folder by default. The bit depth of
    the output image depends on the data type of the variable and the chosen file
    format.
  id: totrans-182
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要将数据从变量导出到MATLAB中用户指定的文件，我们使用了 `imwrite()` 函数。此函数将变量的数据写入文件，导出文件的格式由指定的扩展名确定。默认情况下，将在当前文件夹中创建一个新文件。输出图像的位深度取决于变量的数据类型和选择的文件格式。
- en: These are just some basic operations for working with images in MATLAB. There
    are many advanced techniques and functions available for image processing and
    analysis, such as edge detection, image segmentation, and object recognition.
    MATLAB’s Image Processing Toolbox provides a comprehensive set of tools for these
    tasks.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 这些只是MATLAB中处理图像的一些基本操作。对于图像处理和分析，有许多高级技术和函数可用，例如边缘检测、图像分割和目标识别。MATLAB的图像处理工具箱为这些任务提供了一套全面的工具。
- en: By leveraging MATLAB’s capabilities, you can effectively manipulate and analyze
    image data for various applications, including **computer vision** (**CV**), image
    recognition, and ML.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 通过利用MATLAB的功能，您可以有效地操纵和分析图像数据，用于各种应用，包括**计算机视觉**（**CV**）、图像识别和机器学习（ML）。
- en: Audio data handling
  id: totrans-185
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 音频数据处理
- en: Sound signals are commonly stored digitally in various file formats, with the
    differences usually stemming from the level of compression applied and the resulting
    impact on sound quality. MATLAB offers several functions for handling audio files,
    facilitating tasks such as writing data to an audio file, retrieving information
    about the file, reading data from an audio file, recording data from an audio
    input device, and playing audio files.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 声音信号通常以数字形式存储在各种文件格式中，差异通常源于应用的压缩级别和对音质的影响。MATLAB提供了一些处理音频文件的功能，便于执行将数据写入音频文件、检索文件信息、从音频文件中读取数据、从音频输入设备录制数据以及播放音频文件等任务。
- en: To import audio files in MATLAB, you can utilize the `audioread()` function.
    This function supports various file formats, including WAV, OGG, FLAC, AU, MP3,
    and MPEG-4 AAC. As an example, let’s import a short audio file containing the
    original NASA recording of Apollo 13, featuring the famous message, “*Houston,
    we have* *a problem.*”
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 要在MATLAB中导入音频文件，您可以使用 `audioread()` 函数。此函数支持多种文件格式，包括WAV、OGG、FLAC、AU、MP3和MPEG-4
    AAC。以下是一个示例，导入包含阿波罗13号原始NASA录音的短音频文件，其中包含著名的消息，“*休斯顿，我们遇到* *问题。*”
- en: 'Here’s an example of how you can use `audioread()` to import the audio file:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是如何使用 `audioread()` 导入音频文件的示例：
- en: '[PRE28]'
  id: totrans-189
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'In this code, the following applies:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 在此代码中，以下适用：
- en: '`apollo13.wav` represents the filename of the audio file you want to import.
    Make sure the file is located in the current working directory or provide the
    full file path.'
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`apollo13.wav` 代表您要导入的音频文件的文件名。请确保文件位于当前工作目录中，或者提供完整的文件路径。'
- en: '`audio` is a variable that will store the audio data from the file.'
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`audio` 是一个变量，将存储来自文件的音频数据。'
- en: '`sampleRate` is the sample rate of the audio file, which indicates the number
    of samples per second.'
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sampleRate` 是音频文件的采样率，表示每秒的样本数。'
- en: By executing this line of code, MATLAB will import the audio data from the specified
    file, storing it in the `audio` variable. The sample rate of the audio file will
    be stored in the `sampleRate` variable. You can then further process or analyze
    the audio data using MATLAB’s signal-processing capabilities. In MATLAB, an alternative
    method to read audio files is through an interactive approach. You can accomplish
    this by selecting the **Import Data** button from the **Home**tab or by double-clicking
    the filename in the **Current Folder** browser. This allows you to read and import
    audio files directly into your MATLAB environment.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 执行这一行代码后，MATLAB 将从指定的文件导入音频数据，并将其存储在 `audio` 变量中。音频文件的采样率将存储在 `sampleRate` 变量中。然后，您可以使用
    MATLAB 的信号处理功能进一步处理或分析音频数据。在 MATLAB 中，读取音频文件的另一种方法是交互式方法。您可以通过从 **Home** 选项卡中选择
    **导入数据** 按钮，或者通过在 **当前文件夹** 浏览器中双击文件名来实现。这允许您直接将音频文件读入 MATLAB 环境中。
- en: 'By leveraging the interactive functionality in MATLAB, you can seamlessly read
    and listen to audio files, enabling a convenient workflow for working with sound
    signals and performing subsequent analysis or processing tasks, as in this example:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 通过利用 MATLAB 的交互功能，您可以无缝地读取和收听音频文件，从而为处理声音信号和执行后续分析或处理任务提供便捷的工作流程，例如在这个示例中：
- en: '[PRE29]'
  id: totrans-196
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: To have more control over audio playback in MATLAB, you can utilize the `audioplayer()`
    function. This function allows you to pause, resume, and define callbacks for
    audio playback. By creating an `audioplayer` object, you can call its methods
    to play the audio and access additional playback functionalities.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 要在 MATLAB 中对音频播放有更多控制，您可以使用 `audioplayer()` 函数。这个函数允许您暂停、恢复并定义音频播放的回调。通过创建一个
    `audioplayer` 对象，您可以调用其方法来播放音频并访问额外的播放功能。
- en: 'Here’s an example of how you can use the `audioplayer()` function:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是一个如何使用 `audioplayer()` 函数的示例：
- en: '[PRE30]'
  id: totrans-199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Now that we have an audio file in the MATLAB workspace, as a matrix (audio),
    we can export it through the use of the `audiowrite()` function:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经有一个音频文件在 MATLAB 工作空间中，作为一个矩阵（audio），我们可以通过使用 `audiowrite()` 函数将其导出：
- en: '[PRE31]'
  id: totrans-201
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'The following command saves the data to a WAV file named `apollo13.wav` in
    the current folder. It is important to note that this function, `audiowrite()`,
    is versatile and can also write data to other audio file formats such as OGG,
    FLAC, and MPEG-4 AAC. Lastly, we utilize the `audioinfo()` function to retrieve
    information about the WAV file, `apollo13.wav`, that was just created:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 以下命令将数据保存到当前文件夹中名为 `apollo13.wav` 的 WAV 文件中。需要注意的是，这个函数 `audiowrite()` 是多功能的，也可以将数据写入其他音频文件格式，如
    OGG、FLAC 和 MPEG-4 AAC。最后，我们使用 `audioinfo()` 函数来检索刚刚创建的 WAV 文件 `apollo13.wav` 的信息：
- en: '[PRE32]'
  id: totrans-203
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: The `audioinfo()` function is then used to obtain details about the newly created
    WAV file, such as the audio format, duration, number of channels, and sample rate.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，使用 `audioinfo()` 函数来获取新创建的 WAV 文件 `apollo13.wav` 的详细信息，例如音频格式、持续时间、通道数和采样率。
- en: Exploring data wrangling
  id: totrans-205
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索数据整理
- en: 'Data wrangling, also known as data munging or data preprocessing, refers to
    the process of cleaning, transforming, and preparing raw data for analysis. It
    involves several tasks, such as handling missing or inconsistent data, removing
    duplicates, reshaping data formats, and merging multiple datasets. Common techniques
    used in data wrangling include the following:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 数据整理，也称为数据修补或数据预处理，是指清理、转换和准备原始数据以供分析的过程。它包括几个任务，如处理缺失或不一致的数据、删除重复项、重塑数据格式以及合并多个数据集。在数据整理中常用的技术包括以下内容：
- en: '**Data cleaning**: Identifying and handling missing values, outliers, and errors
    in the dataset. This may involve imputing missing values, removing outliers, or
    correcting errors.'
  id: totrans-207
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据清洗**：识别和处理数据集中的缺失值、异常值和错误。这可能包括填充缺失值、删除异常值或纠正错误。'
- en: '**Data transformation**: Modifying the structure or format of the data to make
    it compatible with the desired analysis or modeling techniques. This can include
    tasks such as changing variable types, scaling numerical values, or encoding categorical
    variables.'
  id: totrans-208
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据转换**：修改数据的结构或格式，使其与所需的分析或建模技术兼容。这可能包括更改变量类型、缩放数值或编码分类变量。'
- en: '**Data integration**: Combining multiple datasets or data sources into a single
    unified dataset. This may involve joining datasets based on common variables or
    merging datasets with different structures.'
  id: totrans-209
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据集成**：将多个数据集或数据源合并为一个单一统一的数据集。这可能涉及根据共同变量连接数据集或合并具有不同结构的数据集。'
- en: '**Data reshaping**: Transforming the layout or structure of the data to meet
    specific requirements. This can include tasks such as pivoting, melting, or transposing
    the data.'
  id: totrans-210
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据重塑**：将数据的布局或结构转换为满足特定要求。这可能包括旋转、熔合或转置数据等任务。'
- en: '**Data aggregation**: Summarizing or grouping data to obtain higher-level insights.
    Aggregation may involve calculating summary statistics, creating aggregate variables,
    or grouping data based on specific criteria.'
  id: totrans-211
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据聚合**：总结或分组数据以获得更高级别的洞察。聚合可能涉及计算汇总统计量、创建聚合变量或根据特定标准分组数据。'
- en: '**Data reduction**: Reducing the size or dimensionality of the dataset without
    significant loss of information. This can include techniques such as feature selection
    or dimensionality reduction.'
  id: totrans-212
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据降维**：在不显著损失信息的情况下减少数据集的大小或维度。这可能包括特征选择或降维等技术。'
- en: The first operation on the data refers to identifying, correcting, and removing
    inconsistencies, errors, and redundancies within a dataset, transforming it into
    a valuable resource for effective decision-making. Let’s take a closer look at
    it.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 数据的第一个操作是指识别、纠正和删除数据集中的一致性、错误和冗余，将其转化为有效的决策资源。让我们更深入地了解一下。
- en: Introducing data cleaning
  id: totrans-214
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 介绍数据清洗
- en: 'Data cleaning in MATLAB involves performing various operations to handle missing
    values, outliers, and inconsistencies in the dataset. Here are some common techniques
    for data cleaning in MATLAB:'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: MATLAB中的数据清洗涉及执行各种操作以处理数据集中的缺失值、异常值和不一致性。以下是MATLAB中数据清洗的一些常见技术：
- en: '`isnan()` or `ismissing()`. Replace missing values with appropriate values
    using techniques such as mean imputation (using `mean()`), median imputation (using
    `median()`), or interpolation (using `interp1()` or `interp2()`). Remove rows
    or columns with missing values using functions such as `rmmissing()`.'
  id: totrans-216
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`isnan()`或`ismissing()`。使用均值插补（使用`mean()`）、中位数插补（使用`median()`）或插值（使用`interp1()`或`interp2()`）等技术用适当的值替换缺失值。使用`rmmissing()`等函数删除包含缺失值的行或列。'
- en: '`isoutlier()` and `rmoutliers()`.'
  id: totrans-217
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`isoutlier()`和`rmoutliers()`。'
- en: '`datetime()`.'
  id: totrans-218
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`datetime()`。'
- en: '`str2double()`, `cell2mat()`, or `datetime()`. Validate and ensure the correctness
    of data values using range checks, logical checks, or custom validation functions.'
  id: totrans-219
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`str2double()`、`cell2mat()`或`datetime()`。使用范围检查、逻辑检查或自定义验证函数验证并确保数据值的正确性。'
- en: '**Data validation and error checking**: Validate data against predefined rules
    or constraints to identify any potential errors or inconsistencies. Perform data
    integrity checks to ensure consistency and correctness of relationships between
    variables.'
  id: totrans-220
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据验证和错误检查**：将数据与预定义的规则或约束进行验证，以识别任何潜在的错误或不一致性。执行数据完整性检查，以确保变量之间关系的一致性和正确性。'
- en: '`unique()` or `duplicated()`.'
  id: totrans-221
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`unique()`或`duplicated()`。'
- en: 'Now, let’s proceed with a practical illustration. We will utilize a custom-designed
    file that holds data for a small sample of observations, specifically the results
    of a test. We will acquire a file called `CleaningData.xlsx`, which is a spreadsheet
    encompassing some of the problems we previously mentioned:'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们通过一个实际示例来继续。我们将使用一个自定义设计的文件，该文件包含一小部分观察结果的数据，特别是测试结果。我们将获取一个名为`CleaningData.xlsx`的文件，这是一个包含我们之前提到的一些问题的电子表格：
- en: '[PRE33]'
  id: totrans-223
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'In this file, there are many problems: empty cells, cells containing a period
    (`.`), cells containing `NA` strings, cells containing `NaN` strings, and cells
    containing negative numbers (`-19`). The `NaN` code (`0`.'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个文件中，存在许多问题：空单元格、包含句点（`.`）的单元格、包含`NA`字符串的单元格、包含`NaN`字符串的单元格以及包含负数（`-19`）的单元格。`NaN`代码（`0`）。
- en: 'For a faster approach to identifying observations with missing values, we can
    utilize the `ismissing()` function. This function enables us to retrieve a subset
    of observations that contain at least one missing value. The `ismissing()` function
    recognizes, by default, only the following missing value indicators; all the others
    must be specified in the following way:'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更快地识别具有缺失值的观察结果，我们可以利用`ismissing()`函数。此函数使我们能够检索至少包含一个缺失值的观察结果子集。默认情况下，`ismissing()`函数仅识别以下缺失值指示符；所有其他指示符必须按以下方式指定：
- en: '[PRE34]'
  id: totrans-226
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: The first line of code specifies the types of data we want to locate in the
    table, the second identifies the location of missing data, and finally, we print
    only records with missing data.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 第一行代码指定了我们在表中想要定位的数据类型，第二行标识了缺失数据的位置，最后我们只打印具有缺失数据的记录。
- en: 'In the following step, we will replace the indicators with missing values.
    We will proceed to clean the data by replacing the missing values indicated by
    `-19` with the standard missing value matrix in MATLAB, which is `NaN`. To accomplish
    this, we can employ the `standardizeMissing()` function, which replaces specified
    values within parentheses with standard missing values in an array or table:'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一步中，我们将用缺失值替换指标。我们将通过将指示为缺失值的`-19`替换为MATLAB中的标准缺失值矩阵`NaN`来清理数据。为此，我们可以使用`standardizeMissing()`函数，该函数在数组或表中用标准缺失值替换括号内的指定值：
- en: '[PRE35]'
  id: totrans-229
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'Now, let’s proceed to create a new table called `SampleDataNew` where we will
    replace missing values with appropriate values using the `fillmissing()` function.
    This function allows us to fill in missing entries of an array or table with a
    specified value and offers several methods to handle missing values. In this scenario,
    we will fill the missing values with values from the preceding rows of the table:'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们继续创建一个新的表，称为`SampleDataNew`，我们将使用`fillmissing()`函数用适当的值替换缺失值。此函数允许我们用指定的值填充数组或表中的缺失条目，并提供几种处理缺失值的方法。在这种情况下，我们将用表的前几行中的值填充缺失值：
- en: '[PRE36]'
  id: totrans-231
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: After that, there are no missing values; in fact, the missing data has been
    replaced with those in the previous cell.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，没有缺失值；实际上，缺失数据已经被替换为前一个单元格中的数据。
- en: 'To eliminate rows with missing values, we will generate a new table called
    `SampleDataMinor` that exclusively includes rows without any missing values. We
    can achieve this by utilizing the `rmmissing()` function, which removes missing
    entries from an array or table. By applying the `rmmissing()` function to the
    table containing the raw data, we can obtain the desired result of a new table,
    `SampleDataMinor`, which excludes any rows with missing values:'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 为了消除包含缺失值的行，我们将生成一个新的表，称为`SampleDataMinor`，它仅包含没有任何缺失值的行。我们可以通过使用`rmmissing()`函数实现这一点，该函数从数组或表中删除缺失条目。通过将`rmmissing()`函数应用于包含原始数据的表，我们可以获得所需的新表`SampleDataMinor`的结果，该表排除了任何包含缺失值的行：
- en: '[PRE37]'
  id: totrans-234
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: Thus, the 12-row table has only 7 rows, which are the only rows that have all
    the correct data.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，12行的表只剩下7行，这些是唯一包含所有正确数据的行。
- en: 'Another issue that a data scientist has to address regards outliers, which
    are values that deviate significantly from the rest of the data. They can cause
    issues in data analysis, particularly in descriptive statistics and correlations,
    as they have the potential to distort the results. Identifying outliers is an
    important step in data cleaning, and they can also be addressed in subsequent
    stages of data analysis. Outliers can be classified as univariate if they exhibit
    extreme values in a single variable or multivariate if they demonstrate an unusual
    combination of values across multiple variables. In MATLAB, the process of identifying
    outliers is straightforward and effective. You can utilize the `isoutlier()` function,
    which is specifically designed to detect outliers in data. We can apply this function
    to the previous example, specifically to the `SampleDataNew` table that contains
    the cleaned data:'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 数据科学家必须解决的另一个问题是异常值，这些值与数据中的其他值显著不同。它们可能会在数据分析中引起问题，尤其是在描述性统计和相关性分析中，因为它们有可能扭曲结果。识别异常值是数据清洗的重要步骤，它们也可以在数据分析的后续阶段得到解决。异常值可以根据它们在单个变量中显示的极端值被归类为单变量异常值，或者根据它们在多个变量中显示的不寻常值组合被归类为多变量异常值。在MATLAB中，识别异常值的过程简单而有效。你可以使用`isoutlier()`函数，该函数专门用于检测数据中的异常值。我们可以将此函数应用于前面的示例，特别是应用于包含清洗数据的`SampleDataNew`表：
- en: '[PRE38]'
  id: totrans-237
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: The `isoutlier()` function returns a logical array where the elements are `true`
    if an outlier is detected in the corresponding item within the table. By default,
    MATLAB identifies an outlier as a value that is more than three `SampleDataOutlier`
    table with the `SampleDataNew` table, it becomes evident that we have identified
    an outlier only in the `age` variable, specifically the value of `100`.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: '`isoutlier()`函数返回一个逻辑数组，其中元素为`true`，如果表中相应项检测到异常值。默认情况下，MATLAB将异常值识别为比`SampleDataOutlier`表中的`SampleDataNew`表超过三个标准差的值。'
- en: Data wrangling represents a very useful data preprocessing technique, but these
    methods need to be accompanied by adequate exploratory analysis to identify trends
    and choose appropriate techniques for subsequent data analysis.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 数据整理代表了一种非常有用的数据预处理技术，但这些方法需要伴随适当的探索性分析来识别趋势并选择后续数据分析中适当的技术。
- en: Discovering exploratory statistics
  id: totrans-240
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 发现探索性统计
- en: Exploratory statistics refers to the initial phase of data analysis where various
    statistical techniques are employed to understand the main characteristics of
    a dataset. There are many techniques available, but the most used one is the following.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 探索性统计是指数据分析的初始阶段，在这一阶段，采用各种统计技术来理解数据集的主要特征。有许多技术可用，但最常用的一种如下。
- en: EDA
  id: totrans-242
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: EDA
- en: 'EDA is an approach to analyzing data that focuses on understanding the main
    characteristics, patterns, and relationships within a dataset. It involves using
    statistical techniques and visualizations to summarize and explore the data to
    gain insights and formulate hypotheses. Here are some key steps and techniques
    involved in EDA:'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: EDA 是一种分析数据的方法，它侧重于理解数据集中主要特征、模式和关系。它涉及使用统计技术和可视化来总结和探索数据，以获得见解并形成假设。以下是 EDA
    中涉及的一些关键步骤和技术：
- en: '**Data summary**: Start by examining the basic summary statistics of the dataset,
    such as the mean, median, standard deviation, minimum, maximum, and so on. This
    gives an initial understanding of the central tendency, spread, and distribution
    of the data.'
  id: totrans-244
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据摘要**：首先检查数据集的基本摘要统计量，如均值、中位数、标准差、最小值、最大值等。这提供了对数据的中心趋势、分布和分散的初步理解。'
- en: '**Data distribution**: Examine the distribution of individual variables to
    identify any skewness or non-normality. Transformations such as logarithmic, exponential,
    or power transformations can be applied to normalize the data if needed.'
  id: totrans-245
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据分布**：检查单个变量的分布情况，以识别任何偏斜或非正态性。如果需要，可以应用对数、指数或幂变换等转换来规范化数据。'
- en: '**Correlation analysis**: Calculate correlation coefficients between pairs
    of variables to understand the strength and direction of their relationships.
    Scatter plots or correlation matrices can help visualize these relationships.'
  id: totrans-246
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**相关性分析**：计算成对变量的相关系数，以了解它们关系的强度和方向。散点图或相关矩阵可以帮助可视化这些关系。'
- en: '**Outlier detection**: Identify outliers, which are data points that deviate
    significantly from the rest of the data. Outliers can be detected using statistical
    methods such as z-scores, box plots, or Mahalanobis distance.'
  id: totrans-247
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**异常值检测**：识别异常值，这些数据点与数据中的其他部分显著偏离。可以使用 z 分数、箱线图或 Mahalanobis 距离等统计方法检测异常值。'
- en: '**Multivariate analysis**: Analyze the relationships and interactions between
    multiple variables simultaneously. Techniques such as **principal component**
    **analysis** (**PCA**) or cluster analysis can help uncover underlying structures
    in the data.'
  id: totrans-248
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**多元分析**：同时分析多个变量之间的关系和相互作用。主成分分析（PCA）或聚类分析等技术可以帮助揭示数据中的潜在结构。'
- en: '**Hypothesis testing**: Formulate and test hypotheses based on the observed
    patterns and relationships in the data. Statistical tests, such as t-tests or
    chi-square tests, can be used to assess the significance of these findings.'
  id: totrans-249
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**假设检验**：根据数据中观察到的模式和关系制定和检验假设。可以使用 t 检验或卡方检验等统计测试来评估这些发现的显著性。'
- en: After introducing EDA concepts, let’s see some practical cases.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 在介绍 EDA 概念之后，让我们看看一些实际案例。
- en: EDA in practice
  id: totrans-251
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 实践中的 EDA
- en: 'Let’s look at some useful EDA examples. The initial phase of our analysis involves
    estimating a measure of central tendency for the distribution, which entails determining
    a representative or central value that effectively describes the data. We will
    begin by importing the file named `GlassIdentificationDataSet.xlsx` into MATLAB:'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看一些有用的 EDA 案例。我们分析的第一阶段涉及估计分布的中心趋势度量，这包括确定一个代表性或中心值，该值能够有效地描述数据。我们将首先将名为
    `GlassIdentificationDataSet.xlsx` 的文件导入 MATLAB：
- en: '[PRE39]'
  id: totrans-253
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: This is a dataset with 214 records and 11 variables (`id`, `refractive index`,
    `Na`, `Mg`, `Al`, `Si`, `K`, `Ca`, `Ba`, `Fe`, `type of glass`). The unit of measure
    of oxide content is the weight percentage in the corresponding oxide.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个包含 214 条记录和 11 个变量（`id`、折射率、Na、Mg、Al、Si、K、Ca、Ba、Fe、玻璃类型）的数据集。氧化物含量的度量单位是对应氧化物的重量百分比。
- en: 'To initiate our exploratory analysis, we can compute the maximum, mean, and
    minimum values of the imported table. MATLAB calculates these statistics independently
    for each column within the table. To accomplish this, we can employ three useful
    functions – `max()`, `mean()`, and `min()`:'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 为了启动我们的探索性分析，我们可以计算导入表格的最大值、平均值和最小值。MATLAB会独立地对表格中的每一列计算这些统计数据。为了完成这项任务，我们可以使用三个有用的函数——`max()`、`mean()`和`min()`：
- en: '[PRE40]'
  id: totrans-256
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'It may be useful to identify records in which `minimum` and `maximum` are found;
    to get this information, just specify a second output parameter to return the
    row index, as in the following example:'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 可能会有用，识别出`最小值`和`最大值`出现的记录；要获取此信息，只需指定第二个输出参数以返回行索引，如下例所示：
- en: '[PRE41]'
  id: totrans-258
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'Additionally, using MATLAB built-in functions, we can calculate the median
    and mode:'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，使用MATLAB内置函数，我们可以计算中位数和众数：
- en: '[PRE42]'
  id: totrans-260
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'Let’s now take a look at quantiles and percentiles. Quantiles are values that
    divide the total frequency of a sample or population into a specified number of
    equal proportions. One specific type of quantile is quartiles, which divide a
    dataset into four equal groups, with each group containing a quarter of the data.
    When the data is arranged in ascending order, the first quartile marks the boundary
    below which one-quarter of the values lie. The second quartile, also known as
    the median, is located at the center of the distribution, with half of the data
    above and half below it. The third quartile represents the boundary between the
    top quarter and the remaining data. The concept of percentiles is much more widespread.
    A percentile is the percentage of cases occurring at or below a value. The relationship
    between quartiles and percentiles is represented as follows:'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们来看看分位数和百分位数。分位数是将样本或总体的总频率划分为指定数量的相等比例的值。一种特定的分位数类型是四分位数，它将数据集划分为四个相等的组，每组包含四分之一的数据。当数据按升序排列时，第一四分位数标记了位于其下四分之一值的边界。第二四分位数，也称为中位数，位于分布的中心，一半的数据在其上方，一半在其下方。第三四分位数代表顶部四分之一和剩余数据之间的边界。百分位数的概念更为广泛。百分位数是指达到或低于某个值的案例的百分比。四分位数和百分位数之间的关系如下所示：
- en: 1st quartile = 25th percentile
  id: totrans-262
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第一四分位数 = 25百分位数
- en: 2nd quartile = 50th percentile = median
  id: totrans-263
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第二四分位数 = 50百分位数 = 中位数
- en: 3rd quartile = 75th percentile
  id: totrans-264
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第三四分位数 = 75百分位数
- en: 4th quartile = 100th percentile
  id: totrans-265
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第四四分位数 = 100百分位数
- en: 'Let’s calculate the first three quartiles of our sample distribution. For space
    reasons, we will limit the calculation to some columns. We will use the `quantile()`
    and `prctile()` functions in the following way:'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们计算样本分布的前三个四分位数。由于空间原因，我们将计算限制在一些列上。我们将以下列方式使用`quantile()`和`prctile()`函数：
- en: '[PRE43]'
  id: totrans-267
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'Let’s move on to how to measure the dispersion of the data. Central tendency
    measures alone are not enough to fully characterize a distribution. It is essential
    to complement this information with measures that account for the degree of data
    dispersion or variability. The `range()` function provides a simple way to calculate
    the spread or the difference between the maximum and minimum values within a sample.
    It offers an effortless means to estimate the range of a sample:'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们继续探讨如何衡量数据的离散程度。仅仅使用集中趋势的度量是不够的，以完全表征一个分布。必须用考虑数据离散程度或变异程度的度量来补充这些信息。`range()`函数提供了一种简单的方法来计算样本中最大值和最小值之间的范围或差异。它提供了一种轻松估计样本范围的方法：
- en: '[PRE44]'
  id: totrans-269
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'Let us now calculate the IQR with the `iqr()` function: The IQR is defined
    as the difference between the **third quartile** (**Q3**) and the **first** **quartile**
    (**Q1**). It represents the range of values that encompass the middle half of
    the observed data. The IQR serves as a dispersion index, providing a measure of
    how much the values deviate from a central value within the dataset. It offers
    valuable insights into the spread or variability of the data while being less
    sensitive to outliers compared to other dispersion measures such as the range
    or standard deviation:'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们使用`iqr()`函数来计算四分位距：四分位距定义为**第三四分位数**（**Q3**）和**第一****四分位数**（**Q1**）之间的差异。它代表了包含观察数据中间一半值的值域。四分位距作为一种离散度指数，提供了衡量数据值偏离数据集中中心值的程度的度量。它提供了关于数据分布或变异性的宝贵见解，同时与其他离散度度量（如范围或标准差）相比，对异常值不太敏感：
- en: '[PRE45]'
  id: totrans-271
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'The variance is a widely recognized measure of variability that quantifies
    the extent to which a set of numbers deviates from its mean. It is determined
    by calculating the average of the squared deviations of individual values from
    their arithmetic mean. In MATLAB, you can compute the variance for each column
    using the `var()` function:'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 方差是一种广泛认可的变异度量，它量化了一组数字偏离其均值程度。它是通过计算每个值与其算术平均值的平方偏差的平均值来确定的。在MATLAB中，您可以使用`var()`函数计算每列的方差：
- en: '[PRE46]'
  id: totrans-273
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'The standard deviation is the square root of the variance and possesses the
    advantageous characteristic of being expressed in the same units as the data.
    To compute the standard deviation for each column, you can use the following code
    in MATLAB:'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 标准差是方差的平方根，并且具有与数据相同的单位的优点。要计算每列的标准差，您可以在MATLAB中使用以下代码：
- en: '[PRE47]'
  id: totrans-275
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'Both the variance and standard deviation, as previously discussed, are susceptible
    to the influence of outliers. A single outlier can significantly impact the values
    of these statistics. Even the MAD, although less sensitive to outliers compared
    to the standard deviation and variance, can still be affected by erroneous data.
    In MATLAB, you can compute the mean or median absolute deviation using the `mad()`
    function. This function allows you to calculate the absolute deviation from the
    mean or median for each data point and then obtain the average or median of these
    deviations:'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，方差和标准差都容易受到异常值的影响。单个异常值可以显著影响这些统计量的值。即使MAD（与标准差和方差相比对异常值不太敏感），也可能受到错误数据的影响。在MATLAB中，您可以使用`mad()`函数计算均值或中值绝对偏差。此函数允许您计算每个数据点的绝对偏差（与均值或中值相比），然后获得这些偏差的平均值或中值：
- en: '[PRE48]'
  id: totrans-277
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: There are multiple statistical measures available to assess the relationship
    between two sets of data over time. Two frequently used measures are correlation
    and covariance. Covariance offers a non-normalized measure of how the two sets
    of data tend to move together. It is estimated by summing the product of deviations
    from the mean for each variable in each period. In MATLAB, you can compute the
    covariance using the `cov()` function.
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 有多种统计度量可用于评估两组数据随时间变化的关系。两个常用的度量是相关性和协方差。协方差提供了一个非标准化的度量，表明两组数据倾向于如何一起移动。它是通过计算每个变量在每个期间的均值偏差的乘积之和来估计的。在MATLAB中，您可以使用`cov()`函数计算协方差。
- en: 'Let’s consider an example where we create a 4x4 matrix of random data:'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们考虑一个例子，其中我们创建一个4x4的随机数据矩阵：
- en: '[PRE49]'
  id: totrans-280
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: In this example, we generate a 4x4 matrix called `DataA` with random values.
    We then calculate the covariance matrix using the `cov()` function and store the
    result in the `CovarianceMatrix` variable.
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我们生成一个名为`DataA`的4x4矩阵，其中包含随机值。然后我们使用`cov()`函数计算协方差矩阵，并将结果存储在`CovarianceMatrix`变量中。
- en: The covariance matrix represents the pairwise calculation of covariance between
    each combination of columns in a data matrix. The sign of the covariance indicates
    the type of relationship between the two variables. A positive sign suggests that
    they move in the same direction, while a negative sign suggests they move in opposite
    directions. Moreover, the magnitude of the covariance reflects the strength of
    the relationship between the variables. However, interpreting the intensity of
    the relationship solely based on covariance can be challenging, as it is not a
    standardized measure.
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 协方差矩阵表示数据矩阵中每一列组合之间的协方差计算。协方差符号表示两个变量之间的关系类型。正号表示它们朝同一方向移动，而负号表示它们朝相反方向移动。此外，协方差的大小反映了变量之间关系的强度。然而，仅基于协方差来解释关系的强度可能具有挑战性，因为它不是一个标准化度量。
- en: 'To obtain a standardized measure of the relationship between two variables,
    correlation is commonly used. Correlation can be calculated from covariance. In
    MATLAB, you can compute correlation coefficients using the `corrcoef()` function.
    This function generates a matrix of sample correlation coefficients for a data
    matrix, where each column represents a separate quantity:'
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 要获得两个变量之间关系的标准化度量，通常使用相关系数。相关系数可以从协方差计算得出。在MATLAB中，您可以使用`corrcoef()`函数计算相关系数。此函数为数据矩阵生成一个样本相关系数矩阵，其中每一列代表一个单独的数量：
- en: '[PRE50]'
  id: totrans-284
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'It’s important to note that the correlation coefficient of two random variables
    is a measure of their linear dependence. Correlation coefficients range from -1
    to 1, and their interpretations are as follows: values close to 1 indicate a strong
    positive linear relationship between the data columns. Values close to -1 indicate
    a strong negative linear relationship (anticorrelation) between one column of
    data and another. Values close to or equal to 0 suggest there is little to no
    linear relationship between the data columns.'
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 需要注意的是，两个随机变量的相关系数是衡量它们线性依赖程度的指标。相关系数的范围从 -1 到 1，其解释如下：接近 1 的值表示数据列之间存在强烈的正相关线性关系。接近
    -1 的值表示一个数据列与另一个数据列之间存在强烈的负相关线性关系（负相关）。接近或等于 0 的值表示数据列之间几乎没有线性关系。
- en: However, the EDA must be accompanied by an adequate exploratory visualization
    analysis, as visualization of the data makes it possible to understand any trends.
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，探索性数据分析必须伴随着充分的探索性可视化分析，因为数据的可视化使得理解任何趋势成为可能。
- en: Introducing exploratory visualization
  id: totrans-287
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍探索性可视化
- en: 'Exploratory visualization is a crucial step in the data analysis process, allowing
    us to gain insights and understand underlying patterns, relationships, and trends
    within our data. It involves creating visual representations of the data to explore
    its various attributes and uncover potential patterns or anomalies. The primary
    goal of exploratory visualization is to visually inspect the data, identify any
    interesting features, and generate hypotheses for further investigation. By leveraging
    the power of visual perception, we can better understand complex datasets and
    make informed decisions. MATLAB provides a variety of functions and tools for
    exploratory data visualization. Here are some commonly used functions for exploratory
    visualization:'
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 探索性可视化是数据分析过程中的关键步骤，使我们能够深入了解数据，理解数据中的潜在模式、关系和趋势。它涉及创建数据的视觉表示，以探索其各种属性并揭示潜在的图案或异常。探索性可视化的主要目标是直观地检查数据，识别任何有趣的特征，并为进一步的调查生成假设。通过利用视觉感知的力量，我们可以更好地理解复杂的数据集并做出明智的决策。MATLAB提供了各种用于探索性数据可视化的函数和工具。以下是探索性可视化中常用的函数：
- en: '`plot()`: This function is used to create line plots, scatter plots, or any
    custom plot by specifying *x* and *y* coordinates.'
  id: totrans-289
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`plot()`: 这个函数用于通过指定 *x* 和 *y* 坐标来创建线图、散点图或任何自定义图表。'
- en: '`histogram()`: This function creates histograms to visualize the distribution
    of a continuous variable. You can customize the number of bins, appearance, and
    other properties of the histogram.'
  id: totrans-290
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`histogram()`: 这个函数创建直方图，用于可视化连续变量的分布。您可以自定义直方图的柱子数量、外观和其他属性。'
- en: '`bar()`: This function creates bar charts to compare categorical or grouped
    data. It allows customization of bar colors, widths, and labels.'
  id: totrans-291
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`bar()`: 这个函数创建条形图，用于比较分类或分组数据。它允许自定义条形颜色、宽度和标签。'
- en: '`scatter()`: This function creates scatter plots to visualize the relationship
    between two continuous variables. You can customize the marker style, color, and
    size based on additional variables.'
  id: totrans-292
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`scatter()`: 这个函数创建散点图，用于可视化两个连续变量之间的关系。您可以根据其他变量自定义标记样式、颜色和大小。'
- en: '`boxplot()`: This function creates box plots to display the distribution of
    a continuous variable across different categories or groups. It shows the median,
    quartiles, and any outliers.'
  id: totrans-293
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`boxplot()`: 这个函数创建箱线图，用于显示不同类别或组中连续变量的分布。它显示了中位数、四分位数和任何异常值。'
- en: '`heatmap()`: This function creates heatmaps to visualize a matrix of data as
    a grid of colored cells. Heatmaps are useful for exploring patterns or correlations
    in multivariate datasets.'
  id: totrans-294
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`heatmap()`: 这个函数创建热图，将数据矩阵可视化为彩色单元格的网格。热图在探索多元数据集中的模式或相关性时非常有用。'
- en: '`pairplot()`: This function creates a matrix of scatter plots for multiple
    variables, showing pairwise relationships. It helps visualize the correlations
    between variables.'
  id: totrans-295
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pairplot()`: 这个函数创建多个变量的散点图矩阵，显示成对关系。它有助于可视化变量之间的相关性。'
- en: '`line()`: This function creates line plots to visualize the trend or progression
    of a variable over time or any continuous scale. It is useful for time-series
    analysis or plotting continuous data.'
  id: totrans-296
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`line()`: 这个函数创建线图，用于可视化变量随时间或任何连续尺度变化的趋势或进展。它在时间序列分析或绘制连续数据时非常有用。'
- en: '`imagesc()`: This function creates a color-coded image representation of a
    matrix or 2D data. It is useful for visualizing matrices, such as heatmaps or
    images.'
  id: totrans-297
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`imagesc()`：这个函数创建矩阵或2D数据的彩色编码图像表示。它用于可视化矩阵，如热图或图像。'
- en: '`contour()`: This function creates contour plots to display the contours of
    a 3D surface or the boundaries of regions in a 2D space. Contour plots are useful
    for visualizing continuous functions or spatial data.'
  id: totrans-298
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`contour()`：这个函数创建等高线图来显示3D表面的等高线或2D空间中区域的边界。等高线图用于可视化连续函数或空间数据。'
- en: To better understand the topic, it is also possible to show some graphs for
    univariate and bivariate analysis, such as `pairplot()` to show the correlation
    effects between characteristics and `boxplot()` to show the level of dispersion
    in the data.
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更好地理解这个主题，也可以展示一些单变量和多变量分析的图表，例如使用`pairplot()`来展示特征之间的相关性效应，以及使用`boxplot()`来展示数据中的分散程度。
- en: EDA and exploratory visualization analysis are essential tools for data analysis.
    In the next section, we will see a practical case of the application of these
    exploratory analysis methodologies.
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: EDA和探索性可视化分析是数据分析的必要工具。在下一节中，我们将看到一个这些探索性分析方法应用的实例。
- en: Understanding advanced data preprocessing techniques in MATLAB
  id: totrans-301
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解MATLAB中的高级数据预处理技术
- en: After introducing data preprocessing techniques, in this section, we will analyze
    some data preprocessing techniques in MATLAB with practical examples. We will
    talk about min-max scaling and z-score standardization, which are two common techniques
    used to normalize data in ML. Both techniques aim to rescale numerical data to
    a common scale, making it easier for ML algorithms to learn from the data.
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 在介绍了数据预处理技术之后，在本节中，我们将通过实际例子分析MATLAB中的某些数据预处理技术。我们将讨论min-max缩放和z分数标准化，这两种是机器学习中常用的数据归一化技术。这两种技术都旨在将数值数据缩放到一个共同的范围，使得机器学习算法更容易从数据中学习。
- en: Data normalization for feature scaling
  id: totrans-303
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 特征缩放的数据归一化
- en: 'Data normalization is a preprocessing step used to scale and standardize data
    to a common range or distribution. It aims to bring different features or variables
    to a comparable scale, ensuring that no single feature dominates the analysis
    due to its larger magnitude. Normalizing data can also help improve the performance
    of certain ML algorithms. There are various techniques for data normalization,
    including the following:'
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 数据归一化是预处理步骤，用于缩放和标准化数据到公共范围或分布。其目的是将不同的特征或变量带到可比较的尺度，确保没有单个特征由于其较大的幅度而主导分析。归一化数据还可以帮助提高某些机器学习算法的性能。数据归一化有多种技术，包括以下内容：
- en: '**Min-Max scaling**: This method scales the data to a specific range, typically
    between 0 and 1\. The formula for min-max scaling is this:'
  id: totrans-305
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Min-Max缩放**：这种方法将数据缩放到特定的范围，通常是0到1之间。min-max缩放的公式如下：'
- en: XNorm = (X − X _ min) / (X _ max − X _ min)
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: XNorm = (X − X_min) / (X_max − X_min)
- en: 'Here, *X* is the original data, *X_min* is the minimum value of the data, and
    *X_max* is the maximum value of the data. In MATLAB, we can use the `rescale()`
    function as follows:'
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，*X* 是原始数据，*X_min* 是数据的最小值，*X_max* 是数据的最大值。在MATLAB中，我们可以使用`rescale()`函数如下：
- en: '[PRE51]'
  id: totrans-308
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: The `rescale()` function rescales the values in array `X` to the range [`0,
    1`]. The resulting array, `Xnorm`, has the same size as `X`.
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: '`rescale()`函数将数组`X`中的值缩放到范围`[0, 1]`。结果数组`Xnorm`与`X`具有相同的大小。'
- en: '`0` and a standard deviation of `1`. The formula for z-score standardization
    is this:'
  id: totrans-310
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`0` 和标准差为 `1`。z分数标准化的公式如下：'
- en: Xnorm = (X − mean) / standard _ deviation
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: Xnorm = (X − mean) / standard_deviation
- en: Here, *X* is the original data, *mean* is the mean of the data, and *standard_deviation*
    is the standard deviation of the data.
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，*X* 是原始数据，*mean* 是数据的平均值，*standard_deviation* 是数据的标准差。
- en: 'We can use the same function specifying the range as follows:'
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用相同的函数指定范围如下：
- en: '[PRE52]'
  id: totrans-314
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: The choice of normalization technique depends on the nature of the data and
    the requirements of the analysis or ML task. It’s important to consider the characteristics
    of the data and select an appropriate normalization method that preserves the
    meaningfulness of the data.
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 归一化技术的选择取决于数据的性质和分析或机器学习任务的要求。考虑数据的特征并选择一个合适的归一化方法，以保留数据的含义是很重要的。
- en: Introducing correlation analysis in MATLAB
  id: totrans-316
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在MATLAB中引入相关性分析
- en: Correlation analysis is a statistical technique used to quantify the strength
    and direction of the relationship between two or more variables. It helps us understand
    how changes in one variable are associated with changes in another variable. This
    analysis allows us to quantify the strength of the relationship between two quantitative
    variables that are often influenced by other factors and not directly linked in
    a cause-and-effect manner, but still tend to vary together.
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 相关性分析是一种统计技术，用于量化两个或更多变量之间关系的强度和方向。它帮助我们了解一个变量的变化如何与另一个变量的变化相关联。这种分析使我们能够量化两个定量变量之间的关系强度，这些变量通常受其他因素的影响，并且不是以因果关系直接相连，但仍然倾向于一起变化。
- en: 'Correlations play a valuable role in describing straightforward associations
    between data. For instance, consider the wind turbine dataset, where you want
    to explore whether there is a correlation between the altitude of the turbines
    and the average wind speed. Each turbine has two corresponding values: altitude
    and wind speed. Analyzing these variables with a sample correlation reveals a
    linear relationship, indicating that as altitude rises, wind speed also increases.
    Consequently, in this scenario, a positive correlation is observed.'
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 相关性在描述数据之间的直接关联中发挥着重要作用。例如，考虑风力涡轮机数据集，其中你想要探索涡轮机的高度与平均风速之间是否存在相关性。每个涡轮机都有两个相应的值：高度和风速。通过样本相关性分析这些变量，可以发现线性关系，表明随着海拔的升高，风速也增加。因此，在这种情况下，观察到的是正相关。
- en: 'The correlation is quantified by a dimensionless value known as the correlation
    coefficient, denoted by *r*, which ranges from -1 to +1\. Its statistical significance
    is indicated by a p-value. Therefore, correlations are typically represented using
    two essential numbers: *r* and *p*. Let me explain the major features of correlation
    and p-values:'
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 相关系数通过一个称为相关系数的无量纲值来量化，用*r*表示，其范围从-1到+1。其统计显著性由p值表示。因此，相关性通常用两个基本数字来表示：*r*和*p*。让我解释一下相关性和p值的主要特征：
- en: When the value of *r* approaches zero, the linear correlation becomes weaker.
  id: totrans-320
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当*r*的值接近零时，线性相关性变得较弱。
- en: A positive r-value signifies a positive correlation, indicating that the two
    variables tend to increase in parallel.
  id: totrans-321
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 正的*r*值表示正相关，表明两个变量倾向于平行增加。
- en: A negative r-value signifies a negative correlation, implying that one variable
    tends to increase as the other decreases.
  id: totrans-322
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 负的*r*值表示负相关，这意味着一个变量倾向于随着另一个变量的减少而增加。
- en: The p-value provides evidence that, based on the observed sample, we can confidently
    conclude that the correlation coefficient of the population differs from zero.
  id: totrans-323
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: p值提供了证据，基于观察到的样本，我们可以有信心地得出结论，总体中的相关系数与零不同。
- en: The absence of a unit means that the correlation is measured on its own scale.
    In our example, the r-value does not correspond to the altitude or temperature
    scales. Consequently, it differs from other summary statistics such as the mean
    of altitudes, which falls on the same scale as the corresponding variable.
  id: totrans-324
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 缺乏单位意味着相关性是在其自身的尺度上测量的。在我们的例子中，r值不对应于海拔或温度尺度。因此，它与其他汇总统计量（如海拔的平均值）不同，这些统计量与相应的变量处于相同的尺度上。
- en: Once a significant correlation is identified, its strength can be measured.
    A perfect positive correlation has a value of 1, while a perfect negative correlation
    is -1\. However, in the real world, it is uncommon to obtain a perfect correlation
    unless one variable is a direct proxy for the other. Conversely, if a perfectly
    correlated value is obtained, it may indicate an error in the data. For instance,
    if the recorded data represented the height above sea level instead of temperature,
    it would exhibit a perfect relationship with elevation.
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦确定了显著的相关性，其强度可以测量。完美的正相关具有1的值，而完美的负相关是-1。然而，在现实世界中，除非一个变量是另一个变量的直接代理，否则很难获得完美的相关性。相反，如果获得了完全相关值，这可能会表明数据中存在错误。例如，如果记录的数据代表的是海平面以上的高度而不是温度，那么它将与海拔高度表现出完美的关系。
- en: Another crucial piece of information is the sample size, denoted as N, which
    represents the number of observations. In most statistical tests, understanding
    the sample size helps assess its validity and how well it represents the larger
    population. For example, if altitude and temperature were measured for only 5
    campsites, but the relevant area included 2,000, it would be appropriate to increase
    the sample size for a more representative analysis.
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个关键信息是样本大小，用 N 表示，它代表观察的数量。在大多数统计测试中，理解样本大小有助于评估其有效性以及它如何代表更大的总体。例如，如果只对5个营地进行了海拔和温度的测量，但相关区域包括2,000个，那么为了进行更具代表性的分析，适当增加样本大小是合适的。
- en: 'In MATLAB, you can perform correlation analysis using the built-in functions
    available in Statistics and Machine Learning Toolbox. Here are the steps to conduct
    correlation analysis in MATLAB:'
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 在 MATLAB 中，您可以使用 Statistics 和 Machine Learning Toolbox 中的内置函数执行相关性分析。以下是 MATLAB
    中进行相关性分析的步骤：
- en: '`IrisData.csv` file. The `Iris` dataset is a widely used dataset in ML and
    statistics. It is commonly used for classification tasks and exploration of data
    analysis techniques. The dataset contains measurements of four features (sepal
    length, sepal width, petal length, and petal width) from three different species
    of Iris flowers (Setosa, Versicolor, and Virginica). Each sample in the dataset
    consists of four feature measurements and the corresponding species label. The
    goal is to predict the species of an Iris flower based on its feature measurements.
    The Iris dataset is often used to demonstrate various data analysis and ML algorithms,
    such as clustering, classification, and dimensionality reduction. It serves as
    a popular benchmark for evaluating the performance of different models and techniques.
    Overall, the Iris dataset provides a convenient and well-known example for exploring
    and practicing data analysis and ML concepts. To load the dataset in MATLAB, we
    will use the `readmatrix()` function as follows:'
  id: totrans-328
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`IrisData.csv` 文件。`Iris` 数据集是机器学习和统计学中广泛使用的数据集。它通常用于分类任务和数据分析技术的探索。该数据集包含来自三种不同的
    Iris 花种（Setosa、Versicolor 和 Virginica）的四个特征（花瓣长度、花瓣宽度、花瓣长度和花瓣宽度）的测量值。数据集中的每个样本都包含四个特征测量值和相应的物种标签。目标是根据其特征测量值预测
    Iris 花的物种。Iris 数据集常用于演示各种数据分析和机器学习算法，如聚类、分类和降维。它作为评估不同模型和技术性能的流行基准。总的来说，Iris 数据集提供了一个方便且广为人知的示例，用于探索和实践数据分析与机器学习概念。要在
    MATLAB 中加载数据集，我们将使用 `readmatrix()` 函数，如下所示：'
- en: '[PRE53]'
  id: totrans-329
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'The following results are returned:'
  id: totrans-330
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 返回以下结果：
- en: '[PRE54]'
  id: totrans-331
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE54]'
- en: Now, we can verify if there are some correlations between the four numeric variables
    (`SepalLength`, `SepalWidth`, `PetalLength`, and `PetalWidth`).
  id: totrans-332
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在，我们可以验证四个数值变量（`SepalLength`、`SepalWidth`、`PetalLength` 和 `PetalWidth`）之间是否存在某些相关性。
- en: '`corrcoef()` function to calculate correlation coefficients between variables.
    This function returns a correlation matrix that shows pairwise correlations between
    variables, as in this example:'
  id: totrans-333
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `corrcoef()` 函数计算变量之间的相关系数。此函数返回一个相关矩阵，显示变量之间的成对相关性，如下例所示：
- en: '[PRE55]'
  id: totrans-334
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE55]'
- en: 'The following matrix is returned:'
  id: totrans-335
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 返回以下矩阵：
- en: '[PRE56]'
  id: totrans-336
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE56]'
- en: From the analysis of the correlation matrix, we can see that there are several
    numbers close to `1`. Such numbers indicate a strong correlation. Reading the
    first column of the correlation matrix, we notice that the first variable (sepal
    length) is weakly correlated with the second variable (sepal width) while it is
    strongly correlated with the third variable (petal length) and with the fourth
    (petal width).
  id: totrans-337
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从相关矩阵的分析中，我们可以看到有几个接近 `1` 的数字。这样的数字表示强相关性。阅读相关矩阵的第一列，我们注意到第一个变量（花瓣长度）与第二个变量（花瓣宽度）呈弱相关性，而与第三个变量（花瓣长度）和第四个（花瓣宽度）呈强相关性。
- en: Important note
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: I leave the analysis of the other columns to you as an exercise. I just want
    to point out that the main diagonal contains all ones because they represent the
    correlation of each variable with itself.
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: 我将其他列的分析留给您作为练习。我只是想指出，主对角线包含所有1，因为它们代表每个变量与其自身的相关性。
- en: '`imagesc()` function in MATLAB. This function creates a color-coded image representation
    of the correlation matrix, making it easier to identify the strength and direction
    of correlations. Here’s an example:'
  id: totrans-340
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: MATLAB 中的 `imagesc()` 函数。此函数创建一个颜色编码的相关矩阵图像表示，使其更容易识别相关性的强度和方向。以下是一个示例：
- en: '[PRE57]'
  id: totrans-341
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE57]'
- en: The result is shown in *Figure 2**.4*.
  id: totrans-342
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 结果显示在*图2**.4*中。
- en: The shadow of blue color indicates a low correlation, while the shadow of yellow
    indicates a strong correlation.
  id: totrans-343
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 蓝色的阴影表示低相关性，而黄色的阴影表示强相关性。
- en: '`corrcoef()` function with an additional output argument to obtain p-values.
    Here’s an example:'
  id: totrans-344
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`corrcoef()`函数带有一个额外的输出参数以获取p值。以下是一个示例：'
- en: '[PRE58]'
  id: totrans-345
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE58]'
- en: 'Now, we can analyze the `PValues` matrix:'
  id: totrans-346
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在，我们可以分析`PValues`矩阵：
- en: '[PRE59]'
  id: totrans-347
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE59]'
- en: 'You can filter the correlation matrix based on p-values to focus on statistically
    significant correlations:'
  id: totrans-348
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你可以根据p值过滤相关矩阵，以关注统计上显著的相关性：
- en: '![Figure 2.4 – Visualization of a correlation matrix](img/B21156_02_04.jpg)'
  id: totrans-349
  prefs: []
  type: TYPE_IMG
  zh: '![图2.4 – 相关矩阵的可视化](img/B21156_02_04.jpg)'
- en: Figure 2.4 – Visualization of a correlation matrix
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.4 – 相关矩阵的可视化
- en: For example, you can set a threshold (*P-value < 0.05*) and consider correlations
    below the threshold as significant.
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，你可以设置一个阈值（*P值 < 0.05*）并将低于阈值的关联视为显著的。
- en: '`scatter()` function in MATLAB. This can help you visualize the nature and
    strength of the correlations between two variables. For example, we can analyze
    the relationship between sepal length and sepal width, which shows a weak correlation:'
  id: totrans-352
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: MATLAB中的`scatter()`函数。这可以帮助你可视化两个变量之间相关性的性质和强度。例如，我们可以分析花瓣长度和花瓣宽度之间的关系，这显示出较弱的相关性：
- en: '[PRE60]'
  id: totrans-353
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE60]'
- en: '*Figure 2**.5* shows a scatter plot comparison of the features and shows a
    positive correlation. In fact, we can see that as the abscissa increases, the
    ordinate also increases. In *Figure 2**.4*, we cannot see any appreciable correlation:'
  id: totrans-354
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*图2.5*显示了特征散点图的比较，显示出正相关。实际上，我们可以看到随着横坐标的增加，纵坐标也增加。在*图2.4*中，我们看不到任何明显的相关性：'
- en: '![Figure 2.5 – Scatter plot of the features](img/B21156_02_05.jpg)'
  id: totrans-355
  prefs: []
  type: TYPE_IMG
  zh: '![图2.5 – 特征散点图](img/B21156_02_05.jpg)'
- en: Figure 2.5 – Scatter plot of the features
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.5 – 特征散点图
- en: MATLAB also provides other correlation-related functions, such as `corr()` for
    calculating the correlation coefficient matrix and `corrplot()` for creating correlation
    plots with customizable visualizations. These functions offer additional options
    and flexibility for correlation analysis in MATLAB.
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: MATLAB还提供了其他与相关性相关的函数，例如`corr()`用于计算相关系数矩阵，`corrplot()`用于创建具有自定义可视化的相关图。这些函数为MATLAB中的相关性分析提供了额外的选项和灵活性。
- en: Summary
  id: totrans-358
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we began our exploration of the MATLAB desktop and its convenient
    interaction features. We familiarized ourselves with the MATLAB Toolstrip, which
    is organized into various tabs. Subsequently, we delved into the importing capabilities
    of MATLAB, enabling us to read diverse types of data resources. We acquired knowledge
    on how to import data into MATLAB interactively and programmatically. Moreover,
    we comprehended the process of exporting data from the workspace and working with
    media files.
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们开始探索MATLAB桌面及其便利的交互功能。我们熟悉了MATLAB工具栏，它组织成各种标签。随后，我们深入了解了MATLAB的导入功能，使我们能够读取不同类型的数据资源。我们获得了如何将数据交互式和程序化地导入MATLAB的知识。此外，我们还理解了从工作区导出数据以及处理媒体文件的过程。
- en: Next, we embarked on the challenging task of data preparation. We learned various
    techniques, including identifying missing values, modifying data types, replacing
    missing values, removing incomplete entries, organizing tables, identifying outliers,
    and consolidating multiple data sources. Following that, we explored exploratory
    statistics techniques, which enabled us to derive insightful features guiding
    us in selecting appropriate tools for extracting knowledge from the data. We examined
    measures of location such as mean, median, mode, quantiles, and percentiles. Additionally,
    we explored measures of dispersion such as range, IQR, variance, standard deviation,
    correlation, and covariance.
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们开始了数据准备这一具有挑战性的任务。我们学习了各种技术，包括识别缺失值、修改数据类型、替换缺失值、删除不完整条目、组织表格、识别异常值以及整合多个数据源。在此之后，我们探索了探索性统计技术，这使我们能够推导出有洞察力的特征，引导我们在从数据中提取知识时选择合适的工具。我们考察了诸如均值、中位数、众数、分位数和百分位数等位置度量。此外，我们还探索了诸如范围、四分位数范围、方差、标准差、相关性和协方差等离散度度量。
- en: We delved into the realm of exploratory visualization, allowing us to identify
    specific trends through visual examination of the data. We acquired the knowledge
    to create histograms, box plots, and scatter plots. Moreover, we delved into measures
    of shape, including skewness and kurtosis. Finally, we analyzed two practical
    cases of preprocessing techniques, data scaling and correlation analysis.
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: 我们深入到探索性可视化的领域，通过数据的视觉检查来识别特定的趋势。我们获得了创建直方图、箱线图和散点图的知识。此外，我们还深入研究了形状度量，包括偏度和峰度。最后，我们分析了两个预处理技术的实际案例，数据缩放和相关性分析。
- en: The next chapter will comprehensively cover various classification and regression
    techniques, emphasizing a foundational understanding and practical implementation
    within the MATLAB environment. The focus will be on preparing data for accurate
    results in classification analysis and delving into the specifics of **K-nearest
    neighbors** (**KNN**) analysis. Additionally, the chapter will provide insights
    into applying regression methods to user data, exploring the core concepts and
    algorithms involved. The material will guide you through the preparation of data
    for regression analysis, ensuring precision and meaningful outcomes.
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: 下一章将全面介绍各种分类和回归技术，强调在MATLAB环境中对基础知识的理解和实际应用。重点将放在为分类分析准备数据以确保准确结果，并深入探讨**K最近邻**（**KNN**）分析的具体细节。此外，本章还将提供将回归方法应用于用户数据的见解，探讨涉及的核心概念和算法。材料将指导你准备回归分析的数据，确保精确和有意义的成果。
- en: 'Part 2: Understanding Machine Learning Algorithms in MATLAB'
  id: totrans-363
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第2部分：理解MATLAB中的机器学习算法
- en: This part introduces the dynamic world of predictive modeling and advanced machine
    learning techniques. In this exploration, we will delve into prediction using
    classification and regression, unraveling the art of foreseeing outcomes and trends
    through meticulous analysis. Then, we will navigate through the intricate landscape
    of clustering analysis and dimensionality reduction, where patterns emerge and
    complexities are distilled, offering insights into data structure. Venturing further,
    we will introduce the fascinating realm of artificial neural network modeling,
    a paradigm inspired by the human brain, enhancing our ability to comprehend intricate
    relationships within data. The journey culminates in the domain of deep learning
    and convolutional neural networks, where complex features are discerned, allowing
    us to unravel the hidden nuances of information embedded in vast datasets. Join
    us as we unravel the threads of these cutting-edge techniques, unlocking the potential
    to extract valuable knowledge from the intricacies of data.
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: 本部分介绍了预测建模和高级机器学习技术的动态世界。在这个探索过程中，我们将深入探讨使用分类和回归进行预测，通过细致的分析揭示预测结果和趋势的艺术。然后，我们将穿越聚类分析和降维的复杂领域，在这里模式出现，复杂性被提炼，从而对数据结构提供洞见。进一步探索，我们将介绍人工神经网络建模的迷人领域，这一范式受到人类大脑的启发，增强了我们理解数据内部复杂关系的能力。这次旅程以深度学习和卷积神经网络领域告终，在这里，复杂的特征被识别，使我们能够揭示大量数据集中嵌入的信息的隐藏细微之处。加入我们，一起揭开这些尖端技术的线索，解锁从数据复杂性中提取宝贵知识的能力。
- en: 'This part has the following chapters:'
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: 本部分包含以下章节：
- en: '[*Chapter 3*](B21156_03.xhtml#_idTextAnchor063), *Prediction Using Classification
    and Regression*'
  id: totrans-366
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第3章*](B21156_03.xhtml#_idTextAnchor063)，*使用分类和回归进行预测*'
- en: '[*Chapter 4*](B21156_04.xhtml#_idTextAnchor084), *Clustering Analysis and Dimensionality
    Reduction*'
  id: totrans-367
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第4章*](B21156_04.xhtml#_idTextAnchor084)，*聚类分析和降维*'
- en: '[*Chapter 5*](B21156_05.xhtml#_idTextAnchor105), *Introducing Artificial Neural
    Network Modeling*'
  id: totrans-368
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第5章*](B21156_05.xhtml#_idTextAnchor105)，*介绍人工神经网络建模*'
- en: '[*Chapter 6*](B21156_06.xhtml#_idTextAnchor124), *Deep Learning and Convolutional
    Neural Networks*'
  id: totrans-369
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第6章*](B21156_06.xhtml#_idTextAnchor124)，*深度学习和卷积神经网络*'
