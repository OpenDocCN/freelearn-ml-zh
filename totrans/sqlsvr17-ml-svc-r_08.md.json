["```py\nC:\\VSTS\\SQL Server R Services Book\\SQL Server R Services Book\\Ch08\\dbo\\Stored Procedures\\uspTrainTipPredictionModelWithRealTimeScoring.sql(27,8): Warning:  SQL71502: Procedure: [dbo].[uspTrainTipPredictionModelWithRealTimeScoring] has an unresolved reference to object [dbo].[sp_execute_external_script].\n```", "```py\nCREATE PROCEDURE [dbo].[uspTrainTipPredictionModelWithRealTimeScoringDTree] \nAS \nBEGIN \n   DECLARE @auc FLOAT; \n   DECLARE @model VARBINARY(MAX); \n\n   -- The data to be used for training \n   DECLARE @inquery NVARCHAR(MAX)= N' \n         SELECT  \n               tipped,  \n               fare_amount,  \n               passenger_count, \n               trip_time_in_secs, \n               trip_distance, \n               pickup_datetime,  \n               dropoff_datetime, \n               dbo.fnCalculateDistance(pickup_latitude,  \n                     pickup_longitude,   \n                     dropoff_latitude,  \n                     dropoff_longitude) as direct_distance \n         FROM dbo.nyctaxi_sample \n         TABLESAMPLE (10 PERCENT) REPEATABLE (98052)' \n\n-- Calculate the model based on the trained data and the AUC. \nEXEC sys.sp_execute_external_script @language = N'R', \n                                  @script = N' \n         ## Create model \n         dTreeObj<- rxDTree(tipped ~ passenger_count + \ntrip_distance + \ntrip_time_in_secs + \ndirect_distance, \n                    data = InputDataSet); \n\ntreeCp <- rxDTreeBestCp(dTreeObj); \n         dTreeObjChosen<- prune.rxDTree(dTreeObj, cp = treeCp); \n\n         ## Serialize model             \n         model <- serialize(dTreeObjChosen, NULL); \n\n         predictTree <- rxPredict(dTreeObjChosen, data = InputDataSet, overwrite = TRUE)               \n\n        library('ROCR'); \npredOutput <- cbind(InputDataSet, predictTree); \n\nauc <- rxAuc(rxRoc(\"tipped\", \"tipped_Pred\", predOutput)); \nprint(paste0(\"AUC of Classification Model:\", auc)); \n         ', \n     @input_data_1 = @inquery,    \n     @output_data_1_name = N'trained_model', \n     @params= N'@auc FLOAT OUTPUT, @model VARBINARY(MAX) OUTPUT', \n     @auc= @auc OUTPUT, \n     @model = @model OUTPUT; \n\n-- Store the train model output and its AUC  \nINSERT INTO [dbo].[NYCTaxiModel] (Model, AUC,IsRealTimeScoring) \nSELECT @model, @auc, 1; \n\nEND \n```", "```py\n-- database unit test for dbo.uspTrainTipPredictionModel\nDECLARE @RC AS INT;\nDECLARE @RowCountBefore AS INT;\nDECLARE @RowCountAfter AS INT;\nDECLARE @AUC FLOAT;\nSELECT @RC = 0;\n```", "```py\nSELECT @RowCountBefore = IS NULL((SELECT COUNT(1) ROWCOUNT\nFROM [dbo].[NYCTaxiModel]\nWHERE [AUC] ISNOTNULL), 0);\nEXECUTE @RC = [dbo].[uspTrainTipPredictionModel];\n-- Expected value: there should be a new record added to NYCTaxiModel\n-- where AUC is known.\nSELECT @RowCountAfter = ISNULL((SELECTCOUNT(1)ROWCOUNT\nFROM [dbo].[NYCTaxiModel]\nWHERE [AUC] ISNOTNULL), 0);\nSELECT @AUC = (SELECTTOP 1 [AUC]\nFROM [dbo].[NYCTaxiModel]\nORDER BY [CreatedOn] DESC);\nSELECT\n@RowCountAfter - @RowCountBeforeRowCountAdded,\nIIF(@AUC > 0.5, 1, 0) AUCOfModel;\n```"]