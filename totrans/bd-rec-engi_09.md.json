["```py\n    package com.packtpub.mahout.recommenders; \n\n    import java.io.File; \n    import java.io.IOException; \n    import java.util.List; \n\n    import org.apache.mahout.cf.taste.common.TasteException; \n    import org.apache.mahout.cf.taste.impl.model.file.FileDataModel; \n    import org.apache.mahout.cf.taste.impl.neighborhood.ThresholdUserNeighborhood; \n    import org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender; \n    import org.apache.mahout.cf.taste.impl.similarity.PearsonCorrelationSimilarity; \n    import org.apache.mahout.cf.taste.model.DataModel; \n    import org.apache.mahout.cf.taste.neighborhood.UserNeighborhood; \n    import org.apache.mahout.cf.taste.recommender.RecommendedItem; \n    import org.apache.mahout.cf.taste.recommender.UserBasedRecommender; \n    import org.apache.mahout.cf.taste.similarity.UserSimilarity; \n\n    //class for generating User Based Recommendation \n    public class UserbasedRecommender  \n    { \n        public static void main( String[] args ) throws TasteException, IOException \n        { \n        //creating data model \n             DataModel model = new FileDataModel(new File(\"data/dataset.csv\"));     \n        // creating pearson similarity between users  \n        UserSimilarity similarity = new PearsonCorrelationSimilarity(model); \n\n             //creating user neighborhood \n               UserNeighborhood neighborhood = new ThresholdUserNeighborhood(0.1,                                             similarity, model); \n\n          // creating recommender model \n                UserBasedRecommender recommender = new       GenericUserBasedRecommender(model, neighborhood, similarity); \n\n            //generating 3 recommendations for user 2 \n        List<RecommendedItem> recommendations = recommender.recommend(2, 3); \n        for (RecommendedItem recommendation : recommendations) { \n          System.out.println(recommendation); \n        } \n        } \n    } \n\n    ```", "```py\nExport JAVA_HOME = path/to/java7 or more \nexport MAHOUT_HOME = /home/softwares/ apache-mahout-distribution-0.12.2 \nexport MAHOUT_LOCAL = true #for standalone mode \nexport PATH = $MAHOUT_HOME/bin \nexport CLASSPATH = $MAHOUT_HOME/lib:$CLASSPATH \n\n```", "```py\nmahout recommenditembased -s SIMILARITY_LOGLIKELIHOOD -i mahout/data.txt -o mahout/output1 --numRecommendations 25 \n\n[cloudera@quickstart ~]$ mahout recommenditembased -s SIMILARITY_LOGLIKELIHOOD -i mahout/data.txt -o mahout/output1 --numRecommendations 25 \nMAHOUT_LOCAL is not set; adding HADOOP_CONF_DIR to classpath. \nRunning on hadoop, using /usr/lib/hadoop/bin/hadoop and HADOOP_CONF_DIR=/etc/hadoop/conf \nMAHOUT-JOB: /usr/lib/mahout/mahout-examples-0.9-cdh5.4.0-job.jar \n16/11/10 11:05:09 INFO common.AbstractJob: Command line arguments: {--booleanData=[false], --endPhase=[2147483647], --input=[mahout/data.txt], --maxPrefsInItemSimilarity=[500], --maxPrefsPerUser=[10], --maxSimilaritiesPerItem=[100], --minPrefsPerUser=[1], --numRecommendations=[25], --output=[mahout/output1], --similarityClassname=[SIMILARITY_LOGLIKELIHOOD], --startPhase=[0], --tempDir=[temp]} \n16/11/10 11:05:09 INFO common.AbstractJob: Command line arguments: {--booleanData=[false], --endPhase=[2147483647], --input=[mahout/data.txt], --minPrefsPerUser=[1], --output=[temp/preparePreferenceMatrix], --ratingShift=[0.0], --startPhase=[0], --tempDir=[temp]} \n16/11/10 11:05:10 INFO Configuration.deprecation: mapred.input.dir is deprecated. Instead, use mapreduce.input.fileinputformat.inputdir \n16/11/10 11:05:10 INFO Configuration.deprecation: mapred.compress.map.output is deprecated. Instead, use mapreduce.map.output.compress \n16/11/10 11:05:10 INFO Configuration.deprecation: mapred.output.dir is deprecated. Instead, use mapreduce.output.fileoutputformat.outputdir \n16/11/10 11:05:11 INFO client.RMProxy: Connecting to ResourceManager at /0.0.0.0:8032 \n16/11/10 11:05:20 INFO input.FileInputFormat: Total input paths to process : 1 \n16/11/10 11:05:22 INFO mapreduce.JobSubmitter: number of splits:1 \n16/11/10 11:05:24 INFO mapreduce.JobSubmitter: Submitting tokens for job: job_1478802142793_0003 \n16/11/10 11:05:42 INFO impl.YarnClientImpl: Submitted application application_1478802142793_0003 \n16/11/10 11:05:52 INFO mapreduce.Job: The url to track the job: http://quickstart.cloudera:8088/proxy/application_1478802142793_0003/ \n16/11/10 11:05:52 INFO mapreduce.Job: Running job: job_1478802142793_0003 \n16/11/10 11:16:45 INFO mapreduce.Job: Job job_1478802142793_0011 running in uber mode : false \n16/11/10 11:16:45 INFO mapreduce.Job:  map 0% reduce 0% \n16/11/10 11:16:58 INFO mapreduce.Job:  map 100% reduce 0% \n16/11/10 11:17:19 INFO mapreduce.Job:  map 100% reduce 100% \n16/11/10 11:17:20 INFO mapreduce.Job: Job job_1478802142793_0011 completed successfully \n16/11/10 11:17:21 INFO mapreduce.Job: Counters: 49 \nFile System Counters \n------------------------------- \n------------------------------- \nBytes Written=28 \n16/11/10 11:17:21 INFO driver.MahoutDriver: Program took 732329 ms (Minutes: 12.205483333333333) \n\n```", "```py\npackage com.packtpub.mahout.recommenders; \n\nimport java.io.FileReader; \nimport java.io.FileWriter; \nimport java.io.IOException; \nimport java.util.ArrayList; \nimport java.util.List; \n\nimport au.com.bytecode.opencsv.CSVReader; \nimport au.com.bytecode.opencsv.CSVWriter; \n\npublic class Preprocessdata  { \n\npublic static void main(String[] args) throws IOException { \nString fileName = \"data/rating_final.csv\"; \nString csv = \"data/recoDataset.csv\";          \nCSVReader csvReader = new CSVReader(new FileReader(fileName)); \nString[] row = null; \nList<String[]> data = new ArrayList<String[]>(); \nCSVWriter writer = new CSVWriter(new FileWriter(csv), \nCSVWriter.DEFAULT_SEPARATOR, \nCSVWriter.NO_QUOTE_CHARACTER); \nwhile((row = csvReader.readNext()) != null) { \nif(!row[0].contains(\"userID\")){ \ndata.add(new String[] {row[0].substring(1), row[1],row[2]}); \n} \n} \nwriter.writeAll(data); \nwriter.close(); \ncsvReader.close(); \n} \n\n} \n\n```", "```py\npackage com.packtpub.mahout.recommenders; \n\nimport java.io.File; \nimport java.io.IOException; \nimport java.util.List; \n\nimport org.apache.mahout.cf.taste.common.TasteException; \nimport org.apache.mahout.cf.taste.impl.model.file.FileDataModel; \nimport org.apache.mahout.cf.taste.impl.neighborhood.NearestNUserNeighborhood; \nimport org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender; \nimport org.apache.mahout.cf.taste.impl.similarity.EuclideanDistanceSimilarity; \nimport org.apache.mahout.cf.taste.model.DataModel; \nimport org.apache.mahout.cf.taste.neighborhood.UserNeighborhood; \nimport org.apache.mahout.cf.taste.recommender.RecommendedItem; \nimport org.apache.mahout.cf.taste.recommender.UserBasedRecommender; \nimport org.apache.mahout.cf.taste.similarity.UserSimilarity; \n\n//class for generating User Based Recommendation \npublic class UserbasedRecommendations \n{ \n    public static void main( String[] args ) throws TasteException, IOException \n    { \n    //creating data model \n    DataModel model = new FileDataModel(new File(\"data/recoDataset.csv\"));      \n    // creating Euclidean distance similarity between users  \n    UserSimilarity similarity = new EuclideanDistanceSimilarity(model); \n    //creating user neighborhood \n    UserNeighborhood neighborhood = new NearestNUserNeighborhood(10, similarity, model); \n    // creating recommender model \n    UserBasedRecommender recommender = new GenericUserBasedRecommender(model, neighborhood, similarity); \n    //generating 3 recommendations for user 1068 \n    List<RecommendedItem> recommendations = recommender.recommend(1068, 3); \n    for (RecommendedItem recommendation : recommendations) { \n      System.out.println(recommendation); \n    } \n    } \n} \n\n```", "```py\n            //creating data model \n            DataModel model = new FileDataModel(new \n              File(\"data/recoDataset.csv\")); \n\n    ```", "```py\n            // creating Euclidean distance similarity between users  \n            UserSimilarity similarity = new \n              EuclideanDistanceSimilarity(model); \n\n    ```", "```py\n            //creating user neighborhood \n            UserNeighborhood neighborhood = new \n              NearestNUserNeighborhood(10, similarity, model); \n\n    ```", "```py\n            // creating recommender model \n            UserBasedRecommender recommender = new   \n              GenericUserBasedRecommender(model, neighborhood, similarity); \n\n    ```", "```py\n            //generating 3 recommendations for user 1068 \n            List<RecommendedItem> recommendations = \n              recommender.recommend(1068, 3); \n\n    ```", "```py\nitem:132613, value:1.2205102 \nitem:132667, value:1.0 \nitem:132584, value:0.98069793 \n\n```", "```py\npackage com.packpub.mahout.recommendationengines; \n\nimport java.io.File; \nimport java.io.IOException; \nimport java.util.List; \n\nimport org.apache.mahout.cf.taste.common.TasteException; \nimport org.apache.mahout.cf.taste.impl.model.file.FileDataModel; \nimport org.apache.mahout.cf.taste.impl.recommender.GenericItemBasedRecommender; \nimport org.apache.mahout.cf.taste.impl.similarity.LogLikelihoodSimilarity; \nimport org.apache.mahout.cf.taste.model.DataModel; \nimport org.apache.mahout.cf.taste.recommender.RecommendedItem; \nimport org.apache.mahout.cf.taste.similarity.ItemSimilarity; \n\npublic class ItembasedRecommendations { \n\npublic static void main(String[] args) throws TasteException, IOException { \nDataModel model = new FileDataModel(new File(\"data/recoDataset.csv\")); \n    ItemSimilarity similarity = new LogLikelihoodSimilarity(model); \n    GenericItemBasedRecommender recommender = new GenericItemBasedRecommender(model, similarity); \n    System.out.println(\"*********Recommend Items to Users********\"); \n    List<RecommendedItem> recommendations = recommender.recommend(1068, 3); \n    for (RecommendedItem recommendation : recommendations) { \n      System.out.println(recommendation); \n    } \n     System.out.println(\"*********Most Similar Items********\"); \n    List<RecommendedItem> similarItems = recommender.mostSimilarItems(135104, 3); \n    for (RecommendedItem similarItem : similarItems) { \n      System.out.println(similarItem); \n    } \n} \n\n} \n\n```", "```py\n            //we create DataModel instance - model  \n            DataModel model = new FileDataModel(new \n              File(\"data/recoDataset.csv\")); \n\n    ```", "```py\n            // creating LogLikelihood distance similarity between users  \n            ItemSimilarity similarity = new LogLikelihoodSimilarity \n              (model);  \n\n    ```", "```py\n            // creating recommender model \n            GenericItemBasedRecommender recommender = new    \n              GenericItemBasedRecommender(model, similarity); \n\n    ```", "```py\n            //generating 3 recommendations for user 1068 \n            List<RecommendedItem> recommendations = \n              recommender.recommend(1068, 3); \n\n    ```", "```py\n            item:132613, value:1.2205102 \n            item:132667, value:1.0 \n            item:132584, value:0.98069793 \n\n    ```", "```py\n        List<RecommendedItem> similarItems =    \n          recommender.mostSimilarItems(135104, 3); \n\n```", "```py\nitem:132667, value:0.96383345 \nitem:132732, value:0.9602005 \nitem:132733, value:0.9543598 \n\n```", "```py\npackage com.packtpub.mahout.recommenders; \n\nimport java.io.File; \nimport java.io.IOException; \n\nimport org.apache.mahout.cf.taste.common.TasteException; \nimport org.apache.mahout.cf.taste.eval.RecommenderBuilder; \nimport org.apache.mahout.cf.taste.eval.RecommenderEvaluator; \nimport org.apache.mahout.cf.taste.impl.eval.RMSRecommenderEvaluator; \nimport org.apache.mahout.cf.taste.impl.model.file.FileDataModel; \nimport org.apache.mahout.cf.taste.impl.neighborhood.NearestNUserNeighborhood; \nimport org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender; \nimport org.apache.mahout.cf.taste.impl.similarity.EuclideanDistanceSimilarity; \nimport org.apache.mahout.cf.taste.model.DataModel; \nimport org.apache.mahout.cf.taste.neighborhood.UserNeighborhood; \nimport org.apache.mahout.cf.taste.recommender.Recommender; \nimport org.apache.mahout.cf.taste.similarity.UserSimilarity; \n\npublic class EvaluateUBCFRecommender { \n\npublic static void main(String[] args) throws IOException, TasteException { \n\nDataModel model = new FileDataModel(new File(\"data/recoDataset.csv\")); \nRecommenderEvaluator evaluator = new RMSRecommenderEvaluator(); \nRecommenderBuilder builder = new RecommenderBuilder() { \npublic Recommender buildRecommender(DataModel model) \nthrows TasteException { \nUserSimilarity similarity = new EuclideanDistanceSimilarity(model); \nUserNeighborhood neighborhood = \nnew NearestNUserNeighborhood (10, similarity, model); \nreturn \nnew GenericUserBasedRecommender (model, neighborhood, similarity); \n} \n}; \ndouble score = evaluator.evaluate( \nbuilder, null, model, 0.8, 1.0); \nSystem.out.println(score); \n} \n\n} \n\n```", "```py\npackage com.packtpub.mahout.recommenders; \n\nimport java.io.File; \nimport java.io.IOException; \n\nimport org.apache.mahout.cf.taste.common.TasteException; \nimport org.apache.mahout.cf.taste.eval.RecommenderBuilder; \nimport org.apache.mahout.cf.taste.eval.RecommenderEvaluator; \nimport org.apache.mahout.cf.taste.impl.eval.RMSRecommenderEvaluator; \nimport org.apache.mahout.cf.taste.impl.model.file.FileDataModel; \nimport org.apache.mahout.cf.taste.impl.recommender.GenericItemBasedRecommender; \nimport org.apache.mahout.cf.taste.impl.similarity.LogLikelihoodSimilarity; \nimport org.apache.mahout.cf.taste.model.DataModel; \nimport org.apache.mahout.cf.taste.recommender.Recommender; \nimport org.apache.mahout.cf.taste.similarity.ItemSimilarity; \n\npublic class EvaluateIBCFRecommender { \n\npublic static void main(String[] args) throws IOException, TasteException { \n\nDataModel model = new FileDataModel(new File(\"data/recoDataset.csv\")); \n//RMS Recommender Evaluator \nRecommenderEvaluator evaluator = new RMSRecommenderEvaluator(); \nRecommenderBuilder builder = new RecommenderBuilder() { \npublic Recommender buildRecommender(DataModel model) \nthrows TasteException { \nItemSimilarity similarity = new LogLikelihoodSimilarity(model); \nreturn \nnew GenericItemBasedRecommender(model, similarity); \n} \n}; \ndouble score = evaluator.evaluate(builder, null, model, 0.7, 1.0); \nSystem.out.println(score); \n\n} \n\n} \n\n```", "```py\n            DataModel model = new FileDataModel(new \n              File(\"data/recoDataset.csv\")); \n\n    ```", "```py\n            // Recommendation engine model evaluator engine  \n            RecommenderEvaluator evaluator = new RMSRecommenderEvaluator();     \n\n    ```", "```py\n            // User based recommenders \n            public Recommender buildRecommender(DataModel model) \n            throws TasteException { \n            UserSimilarity similarity = new  \n              EuclideanDistanceSimilarity(model); \n            UserNeighborhood neighborhood = \n            new NearestNUserNeighborhood (2, similarity, model); \n            return \n            new GenericUserBasedRecommender (model, neighborhood, \n              similarity); \n            } \n            }; \n\n            //Item based recommenders \n            public Recommender buildRecommender(DataModel model) \n            throws TasteException { \n            ItemSimilarity similarity = new LogLikelihoodSimilarity(model); \n            return \n            new GenericItemBasedRecommender(model, similarity); \n            } \n            }; \n\n    ```", "```py\n            //generating 3 recommendations for user 1068 \n            double score = evaluator.evaluate(builder, null, model, 0.7, \n              1.0);   \n\n    ```", "```py\npackage com.packpub.mahout.recommendationengines; \n\nimport java.io.File; \nimport java.io.IOException; \nimport java.util.List; \n\nimport org.apache.mahout.cf.taste.common.TasteException; \nimport org.apache.mahout.cf.taste.impl.model.file.FileDataModel; \nimport org.apache.mahout.cf.taste.impl.recommender.svd.ALSWRFactorizer; \nimport org.apache.mahout.cf.taste.impl.recommender.svd.SVDRecommender; \nimport org.apache.mahout.cf.taste.model.DataModel; \nimport org.apache.mahout.cf.taste.recommender.RecommendedItem; \n\npublic class UserBasedSVDRecommender { \n\npublic static void main(String[] args) throws TasteException, IOException { \n//MF recommender model \n    DataModel model = new FileDataModel(new File(\"data/dataset.csv\"));    \n    ALSWRFactorizer factorizer = new ALSWRFactorizer(model, 50, 0.065, 15); \n    SVDRecommender recommender = new SVDRecommender(model, factorizer);     \n    List<RecommendedItem> recommendations = recommender.recommend(2, 3); \n    for (RecommendedItem recommendation : recommendations) { \n      System.out.println(recommendation); \n    } \n\n} \n\n} \n\n```", "```py\n    #create a directory to store the input data using mkdir command\n    [cloudera@quickstart ~]$ hadoop fs -mkdir mahout\n\n    ```", "```py\n    [cloudera@quickstart ~]$ hadoop fs -ls\n    Found 1 items\n    drwxr-xr-x   - cloudera cloudera          0 2016-11-14 18:31 mahout\n\n    ```", "```py\n    hadoop fs -copyFromLocal /home/cloudera/datasets/u.data mahout\n\n    ```", "```py\n    [cloudera@quickstart ~]$ hadoop fs -ls mahout\n    Found 1 items\n    -rw-r--r--   1 cloudera cloudera    1979173 2016-11-14 18:32 mahout/u.data\n\n    ```", "```py\n    $MAHOUT_HOME\\bin\\mahout parallelALS \\\n     --input mahout \\\n     --output output \\\n     --lambda 0.1 \\\n     --implicitFeedback false \\\n     --numFeatures 10 \\\n     --numIterations 1  \\\n     --tempDir tmp\n\n    ```", "```py\n    $MAHOUT_HOME\\bin\\mahout recommendfactorized \\\n     --input output/userRatings/  \\\n     --userFeatures output/U/ \\\n     --itemFeatures output/M/ \\\n     --numRecommendations 15 \\\n     --output recommendations/topNrecommendations \\\n     --maxRating 5\n\n    ```"]