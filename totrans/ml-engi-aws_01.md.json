["```py\n    wget -O resize_and_reboot.py https://bit.ly/3ea96tW\n    ```", "```py\n    python3 -m pip install --user --upgrade boto3\n    ```", "```py\n    TARGET_METADATA_URL=http://169.254.169.254/latest/meta-data/instance-id\n    ```", "```py\n    export EC2_INSTANCE_ID=$(curl -s $TARGET_METADATA_URL)\n    ```", "```py\n    echo $EC2_INSTANCE_ID\n    ```", "```py\n    python3 resize_and_reboot.py\n    ```", "```py\n    python3 -m pip install -U pip\n    ```", "```py\n    python3 -m pip install -U setuptools wheel\n    ```", "```py\n    python3 -m pip install ipython\n    ```", "```py\n    python3 -m pip install ctgan==0.5.0\n    ```", "```py\n    python3 -m pip install pandas_profiling\n    ```", "```py\n    mkdir -p tmp\n    ```", "```py\n    wget -O utils.py https://bit.ly/3CN4owx\n    ```", "```py\n    wget -O hotel_bookings.gan.pkl https://bit.ly/3CHNQFT\n    ```", "```py\n    touch data_generator.py\n    ```", "```py\n    from ctgan import CTGANSynthesizer\n    ```", "```py\n    from pandas_profiling import ProfileReport\n    ```", "```py\n    from utils import block, debug\n    ```", "```py\n    with block('LOAD CTGAN'):\n    ```", "```py\n        pkl = './hotel_bookings.gan.pkl'\n    ```", "```py\n        gan = CTGANSynthesizer.load(pkl)\n    ```", "```py\n        print(gan.__dict__)\n    ```", "```py\n    python3 data_generator.py\n    ```", "```py\n    with block('GENERATE SYNTHETIC DATA'):\n    ```", "```py\n        synthetic_data = gan.sample(10000)\n    ```", "```py\n        print(synthetic_data)\n    ```", "```py\n    with block('SAVE TO CSV'):\n    ```", "```py\n        target_location = \"tmp/bookings.all.csv\"\n    ```", "```py\n        print(target_location)\n    ```", "```py\n        synthetic_data.to_csv(\n    ```", "```py\n            target_location, \n    ```", "```py\n            index=False\n    ```", "```py\n        )\n    ```", "```py\n    with block('GENERATE PROFILE REPORT'):\n    ```", "```py\n        profile = ProfileReport(synthetic_data)\n    ```", "```py\n        target_location = \"tmp/profile-report.xhtml\"\n    ```", "```py\n        profile.to_file(target_location)\n    ```", "```py\n    python3 data_generator.py\n    ```", "```py\n    touch train_test_split.py\n    ```", "```py\n    import pandas as pd\n    ```", "```py\n    from utils import block, debug\n    ```", "```py\n    from sklearn.model_selection import train_test_split\n    ```", "```py\n    with block('LOAD CSV'):\n    ```", "```py\n        generated_df = pd.read_csv('tmp/bookings.all.csv')\n    ```", "```py\n    with block('TRAIN-TEST SPLIT'):\n    ```", "```py\n        train_df, test_df = train_test_split(\n    ```", "```py\n            generated_df, \n    ```", "```py\n            test_size=0.3, \n    ```", "```py\n            random_state=0\n    ```", "```py\n        )\n    ```", "```py\n        print(train_df)\n    ```", "```py\n        print(test_df)\n    ```", "```py\n    with block('SAVE TO CSVs'):\n    ```", "```py\n        train_df.to_csv('tmp/bookings.train.csv', \n    ```", "```py\n                        index=False)\n    ```", "```py\n        test_df.to_csv('tmp/bookings.test.csv', \n    ```", "```py\n                       index=False)\n    ```", "```py\n    python3 train_test_split.py\n    ```", "```py\n    BUCKET_NAME=\"<INSERT BUCKET NAME HERE>\"\n    ```", "```py\n    aws s3 mb s3://$BUCKET_NAME\n    ```", "```py\n    S3=s3://$BUCKET_NAME/datasets/bookings\n    ```", "```py\n    TRAIN=bookings.train.csv\n    ```", "```py\n    TEST=bookings.test.csv\n    ```", "```py\n    aws s3 cp tmp/bookings.train.csv $S3/$TRAIN\n    ```", "```py\n    aws s3 cp tmp/bookings.test.csv $S3/$TEST\n    ```", "```py\n    python3 -m pip install -U \"mxnet<2.0.0\"\n    ```", "```py\n    python3 -m pip install numpy\n    ```", "```py\n    python3 -m pip install cython\n    ```", "```py\n    python3 -m pip install pyOpenSSL --upgrade\n    ```", "```py\n    python3 -m pip install autogluon\n    ```", "```py\n    ipython\n    ```", "```py\n    from autogluon.tabular import (\n    ```", "```py\n        TabularDataset,\n    ```", "```py\n        TabularPredictor\n    ```", "```py\n    )\n    ```", "```py\n    train_loc = 'tmp/bookings.train.csv'\n    ```", "```py\n    test_loc = 'tmp/bookings.test.csv'\n    ```", "```py\n    train_data = TabularDataset(train_loc)\n    ```", "```py\n    test_data = TabularDataset(test_loc)\n    ```", "```py\n    label = 'is_cancelled'\n    ```", "```py\n    save_path = 'tmp'\n    ```", "```py\n    tp = TabularPredictor(label=label, path=save_path)\n    ```", "```py\n    predictor = tp.fit(train_data)\n    ```", "```py\n    y_test = test_data[label]\n    ```", "```py\n    test_data_no_label = test_data.drop(columns=[label])\n    ```", "```py\n    y_pred = predictor.predict(test_data_no_label)\n    ```", "```py\n    predictor.evaluate_predictions(\n    ```", "```py\n        y_true=y_test, \n    ```", "```py\n        y_pred=y_pred, \n    ```", "```py\n        auxiliary_metrics=True\n    ```", "```py\n    )\n    ```", "```py\n{'accuracy': 0.691...,\n 'balanced_accuracy': 0.502...,\n 'mcc': 0.0158...,\n 'f1': 0.0512...,\n 'precision': 0.347...,\n 'recall': 0.0276...}\n```", "```py\n    exit()\n    ```"]