- en: DevOps with vRealize Code Stream
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用vRealize Code Stream进行DevOps
- en: The DevOps operating model and its supporting CI/CD toolsets implementation
    approach to managing IT is changing the roles and responsibilities of IT resources,
    as well as the traditional design, delivery, and operation processes. This chapter
    will enable you to make the process changes that are required for the adoption
    of DevOps. We will look into the highest priority processes to transform and apply
    techniques to compare and contrast the key differences between legacy operating
    models, processes, and team structures with the strategic operating model that's
    required for DevOps. We will also go through **VMware vRealize Code Stream** (**vRCS**)
    and its orchestration for DevOps release processes and continuous application
    delivery.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: DevOps运营模型及其支持CI/CD工具集的实施方法正在改变IT资源的角色和责任，以及传统的设计、交付和运营流程。本章将使您能够进行必要的流程变更，以采用DevOps。我们将探讨最高优先级的流程，以转换并应用技术，比较和对比传统运营模型、流程和团队结构与DevOps所需的战略运营模型之间的关键差异。我们还将介绍**VMware
    vRealize Code Stream**（**vRCS**）及其在DevOps发布流程和持续应用交付中的编排。
- en: You will learn about the DevOps Cloud operational model for the private cloud.
    which enables developers to seamlessly deploy, configure, and manage production-ready
    applications by leveraging VMware Cloud Automation services, along with configuration
    management tools such as Puppet to accelerate DevOps operations. You will also
    learn about CI/CD with **VMware Kubernetes Engine** (**VKE**).
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 您将了解私有云的DevOps云运营模型，该模型通过利用VMware云自动化服务以及如Puppet之类的配置管理工具，使开发者能够无缝地部署、配置和管理生产就绪的应用程序，从而加速DevOps操作。您还将了解与**VMware
    Kubernetes Engine**（**VKE**）的CI/CD。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Application development life cycles
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用开发生命周期
- en: Automation with vRealize
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用vRealize进行自动化
- en: vRCS
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: vRCS
- en: Technical requirements
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: You can download VMware vRealize Code Stream from [https://my.vmware.com/web/vmware/info/slug/infrastructure_operations_management/vmware_vrealize_code_stream/2_x](https://my.vmware.com/web/vmware/info/slug/infrastructure_operations_management/vmware_vrealize_code_stream/2_x) and
    VMware Wavefront from [https://www.vmware.com/download/eula/wavefront-terms-of-service.html](https://www.vmware.com/download/eula/wavefront-terms-of-service.html).
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从[https://my.vmware.com/web/vmware/info/slug/infrastructure_operations_management/vmware_vrealize_code_stream/2_x](https://my.vmware.com/web/vmware/info/slug/infrastructure_operations_management/vmware_vrealize_code_stream/2_x)下载VMware
    vRealize Code Stream，以及从[https://www.vmware.com/download/eula/wavefront-terms-of-service.html](https://www.vmware.com/download/eula/wavefront-terms-of-service.html)下载VMware
    Wavefront。
- en: Application development life cycles
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 应用开发生命周期
- en: It is important to understand the change that has taken place in terms of application
    development life cycles in order to understand application transformation. When
    the pace of change was slow, application development always had a pre-determined
    plan with a finite end goal. The design of the application was thought through
    and agreed up-front, including capturing all of the user's requirements. Then,
    a series of steps followed that involved developing the plan, testing the functionality
    of the application, testing whether the application would run efficiently and
    to the right scale (non-functional testing), user acceptance testing to agree
    that the application had been built the way it was supposed to be, before finally
    going live in its final format.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 为了理解应用转型，了解应用开发生命周期中发生的变化是很重要的。当变化的速度较慢时，应用开发总是有一个预先确定的计划，并有一个有限的目标。应用的设计是在事先经过深思熟虑并达成一致，包括捕捉所有用户的需求。然后，一系列步骤随之而来，包括制定计划、测试应用的功能、测试应用是否能够高效且正确地运行到适当的规模（非功能性测试），以及用户验收测试，以确保应用按照预期的方式构建，最终以最终格式上线。
- en: The pace of change in some modern applications, coupled with the fact that they
    can be very experimental in nature, means that the waterfall approach (where the
    final application design is fully understood upfront) just doesn't work. Instead,
    application development, application design, user, and even customer testing occurs
    in rapid iterations, meaning that the application develops with a continuous feedback
    loop. Development teams are also typically assigned to individual components,
    so there is no concept of a controlled state that everyone has to comply with.
    Development occurs in simultaneous streams with frequent code check-ins to confirm
    overall functionality.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 一些现代应用的变化速度很快，加上它们在本质上可能非常实验性，这意味着瀑布式方法（在前期完全理解最终应用设计）根本不起作用。相反，应用开发、应用设计、用户甚至客户测试都在快速迭代中进行，这意味着应用是在持续的反馈循环中发展的。开发团队通常被分配到单个组件，因此没有每个人都必须遵守的受控状态的概念。开发是在同时进行的流中进行的，频繁的代码检查以确认整体功能。
- en: We can apply these results in terms such as CD, DevOps, and Agile. While these
    principles can be applied to traditional application architectures, they tend
    to be best suited to cloud-based application tools, platforms, and architectures.
    It should be noted that this area has several models and is still maturing, despite
    being widely practiced.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以将这些结果应用于CD、DevOps和敏捷等术语。虽然这些原则可以应用于传统应用架构，但它们最适合云基础的应用工具、平台和架构。需要注意的是，这个领域有几种模型，尽管广泛实践，但仍在不断发展。
- en: One very important thing to realize is that Agile and DevOps is not a replacement
    for waterfall. Customers will use both disciplines, which are dependent on the
    application development requirements. Applying Agile principles of development
    to a mission-critical traditional application could have terrible consequences,
    and conversely you could use as many cloud technologies as you want, but using
    a waterfall approach for application development that is exploratory in nature
    would fundamentally cripple the ability to deliver effectively.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 一个非常重要的事情是要意识到敏捷和DevOps不是瀑布方法的替代品。客户将使用这两个学科，它们取决于应用开发需求。将敏捷开发原则应用于关键任务的传统应用可能会产生严重的后果，反之亦然，你可以使用尽可能多的云技术，但如果应用开发采用本质上是探索性的瀑布方法，将从根本上削弱有效交付的能力。
- en: CD pipeline
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: CD管道
- en: 'DevOps helps with the CD pipeline process by going through the following procedure:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: DevOps通过以下程序帮助CD管道流程：
- en: '**Plan**: We have to first plan and define software release cycles; user-defined
    use cases; Agile planned actions; and a proper plan for backlogs and problems
    with a follow-up plan.'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**计划**：我们首先需要规划和定义软件发布周期；用户定义的使用案例；敏捷计划行动；以及一个适当的待办事项和问题的跟进计划。'
- en: '**Code**: This is defined with a set of processes with related tools that allows
    us to write scripts, along with its assessment and testing. It also helps with
    following defined security and compliance metrics.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**代码**：这是通过一系列相关工具和流程来定义的，使我们能够编写脚本，并对其进行评估和测试。它还有助于遵循定义的安全和合规性指标。'
- en: '**Commit**: This can help us define procedures and its related tools for code
    assessment, consolidation, and executing it with the main source code repository.
    This stack also assists in maintaining source control with daily testing, executing
    on-demand, and the proactive scanning of code.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**提交**：这可以帮助我们定义与代码评估、合并和执行相关的程序及其相关工具，并与其主源代码仓库一起执行。这个堆栈还帮助维护源控制，进行日常测试，按需执行，以及主动扫描代码。'
- en: CI pipeline
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 持续集成（CI）管道
- en: The CI pipeline provides processes, practices, and tooling to help with the
    automated building and testing of every code commit in the source code repository.
    This includes automated security and compliance testing and logging.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 持续集成（CI）管道提供流程、实践和工具，以帮助自动化源代码仓库中每个代码提交的构建和测试。这包括自动化的安全和合规性测试以及日志记录。
- en: Test processes, practices, and tooling for automated unit, functional, security,
    and compliance testing, logging results, and gaining approval to promote artifacts
    to the next stage in the flow.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 自动化单元、功能、安全和合规性测试的过程、实践和工具，记录结果，并获得批准将工件提升到流程的下一阶段。
- en: The artifact repository consists of services and activities that are necessary
    to achieve the desired end state in terms of maintaining version, promotion, governance,
    and policy controls that are related deliverable artifacts. Generally stated,
    such artifacts are those that are converted from sources into binary packages,
    though other transformations may exist.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
- en: We develop and update software continuously so that the software can be released
    to production on-demand via CD.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
- en: The configuration consists of services and activities that are necessary to
    achieve the desired end state in terms of automating idempotent and expedient
    deployment of applications to static and on-demand hybrid cloud infrastructures.
    The design and implementation will be consistent with predefined SDLC process,
    including proper source artifact management (for example, Puppet modules, Chef
    cookbooks, deployment blueprints, and so on).
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
- en: The control stack consists of services that are necessary to achieve the desired
    end state in terms of managing the tool chains that are recommended to operate
    the applications that are deployed by this infrastructure. This will also incorporate
    the SDLC processes, tools, integrations, and actions that are needed to maintain
    defined service-level agreements for a specific customer.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
- en: The feedback stack allows you to get automated feedback such as alerts, audit
    reports, test reports, and deployment process reports delivered when required.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
- en: Planning
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To achieve consistently successful business outcomes, VMware collaborates with
    customers in assessing, recommending, and documenting changes that are necessary
    to achieve optimal delivery processes. This collaborative effort is based on industry
    best practices in the following service foundation areas:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
- en: '**Software Development Life Cycle** (**SDLC**)'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Source code management** (**SCM**)'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Continuous integration** (**CI**)'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Artifact repository** (**AR**)'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Continuous delivery** (**CD**)'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Hybrid cloud provisioning** (**HCP**)'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Configuration management** (**CM**)'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Continuous operational management** (**COM**)'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: SDLC
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The SDLC foundation consists of services and activities that are necessary to
    achieve optimally aligned personnel roles, tool chains, and processes to achieve
    the desired end state of the software delivery life cycle management by the customer.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
- en: SCM
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The SCM foundation consists of services and activities that are necessary to
    achieve the desired end state in terms of managing and version-controlling software
    source artifacts. Source artifacts include, among other sources, application source
    code, documentation, configuration information, and process control flow configurations.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
- en: CI
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The CI consists of services and activities that are necessary to achieve the
    desired end state in terms of automated build, test, and deliverable (that is,
    binary) artifact creation. The CI process assists in application builds and its
    verification tests with rapid feedback while developers build software by using
    tools such as Jenkins, Gerrit Triggers, and vRA.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 持续集成（CI）包括实现自动化构建、测试和可交付（即二进制）工件创建所需的服务和活动。CI流程通过使用Jenkins、Gerrit Triggers和vRA等工具，在开发者使用这些工具构建软件的同时，提供快速反馈，以辅助应用程序的构建和验证测试。
- en: AR
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: AR
- en: VMware and customers collaborate to define and refine processes and activities
    that transform sources into customer deliverable artifacts. This includes assessing
    and realigning activities and related key accountability roles, responsibilities,
    and required skillsets, key interactions, and hand-offs related to supporting
    the service definition process with agreed upon use cases and business outcomes.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: VMware和客户合作定义和细化将源代码转换为客户可交付工件的过程和活动。这包括评估和重新调整活动以及相关的关键责任角色、职责和所需技能集，关键交互和交接，这些都与支持服务定义过程有关，包括商定的用例和业务成果。
- en: The AR foundation consists of services and activities that are necessary to
    achieve the desired end state in terms of maintaining version, promotion, governance,
    and policy controls related to deliverable artifacts. Generally stated, such artifacts
    are those that are converted from sources into binary packages, though other transformations
    may exist.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: AR基础包括实现维护版本、提升、治理和政策控制相关可交付工件所需的服务和活动。一般而言，这些工件是从源代码转换为二进制包的，尽管可能存在其他转换。
- en: Release pipeline automation (CD)
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 发布管道自动化（CD）
- en: The CD consists of services and activities that are necessary to achieve the
    desired end state in terms of automating governance and release policies regarding
    deliverable artifacts. This involves providing the tools and integrations that
    are necessary to orchestrate manually-gated organizational decision processing
    and automated delivery processes.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: CD包括实现自动化治理和发布政策所需的服务和活动，涉及可交付工件。这包括提供必要的工具和集成，以编排手动门控的组织决策处理和自动化交付流程。
- en: CM
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: CM
- en: The CM foundation consists of services and activities that are necessary to
    achieve the desired end state in terms of automated, idempotent, and expedient
    deployment of applications to a static and on-demand hybrid cloud infrastructure.
    The design and implementation will be consistent with the agreed upon SDLC process,
    including proper source artifact management (for example, Puppet modules, Chef
    cookbooks, deployment blueprints, and so on).
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: CM基础包括实现自动化、幂等和便捷地将应用程序部署到静态和按需混合云基础设施所需的服务和活动。设计和实现将与商定的SDLC流程保持一致，包括适当的源工件管理（例如，Puppet模块、Chef食谱、部署蓝图等）。
- en: HC
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: HC
- en: 'The HC foundation consists of services and activities that are necessary to
    achieve the desired end state in terms of automating resource provisioning to
    achieve application deployments to the hybrid cloud. In this context, the hybrid
    cloud may include the following:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: HC基础包括实现自动化资源分配以实现应用程序部署到混合云所需的服务和活动。在此背景下，混合云可能包括以下内容：
- en: VMware vCloud Air, Linux containers, AWS, and other heterogeneous cloud platforms
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: VMware vCloud Air、Linux容器、AWS和其他异构云平台
- en: On-premise virtualized/cloud and physical infrastructures
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 原地虚拟化/云和物理基础设施
- en: This foundation service involves providing the tools and integrations that are
    necessary to automate the provisioning of infrastructure services (that is, compute,
    network, and storage) for all deliverable artifact deployments. The design and
    implementation will be consistent with the agreed upon SDLC process, including
    proper source artifact management (for example, provisioning blueprints, workflow
    scripts, and so on).
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 此基础服务涉及提供自动化基础设施服务（即计算、网络和存储）配置所需的所有可交付工件部署的工具和集成。设计和实现将与商定的SDLC流程保持一致，包括适当的源工件管理（例如，配置蓝图、工作流脚本等）。
- en: COM
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: COM
- en: The COM foundation consists of services and activities that are necessary to
    achieve the desired end state in terms of managing the tool chains that operate
    the service foundations, as well as the applications that are deployed by that
    infrastructure. This consists of incorporating processes, tools, integrations,
    and activities that are necessary to maintain any **service-level agreements**
    (**SLA**) that the customer is either bound to or reasonably desires.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: COM 基础设施包括实现服务基础设施操作所需工具链以及该基础设施部署的应用程序所需的服务和活动，以实现预期的最终状态。这包括整合必要的流程、工具、集成和活动，以维护客户所承担或合理期望的任何**服务级别协议**（**SLA**）。
- en: Feedback
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 反馈
- en: Feedback into the planning stack is necessary as errors occur. This consists
    of bug reporting and deficiencies in software features, including any change that's
    required by the operating software and its underlying infrastructure, all of which
    should be tracked for handling by the coding stack. Then, the cycle continues.
    This feedback then goes into the planning stack and we start the iteration again.
    We always want to be ensuring that all of our stacks are working well together
    and providing us with the desired outcomes. Our various processes can be continually
    updated an improved to keep pace with changes and updates in the tool chain, in
    the types of code that the stacks are dealing with, and the infrastructure that
    the resulting applications are hosted on.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 当发生错误时，需要对规划堆栈进行反馈。这包括错误报告和软件功能缺陷，包括操作系统及其底层基础设施所需的任何更改，所有这些都应该被跟踪以供编码堆栈处理。然后，周期继续。然后，这种反馈进入规划堆栈，我们再次开始迭代。我们始终希望确保所有堆栈都能良好地协同工作，并为我们提供预期的结果。我们的各种流程可以持续更新和改进，以跟上工具链、堆栈处理的代码类型以及结果应用程序托管的基础设施的变化和更新。
- en: Request fulfillment
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 请求满足
- en: vRealize Automation assists users in requesting and managing different kinds
    of IT services through a unified IT service catalog that spans across the hybrid
    cloud.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: vRealize Automation 通过统一的 IT 服务目录帮助用户请求和管理各种 IT 服务，该目录跨越混合云。
- en: 'The following is a screenshot of the catalog for software provisioning:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是为软件部署的目录截图：
- en: '![](img/54cea82e-e0eb-462b-8f06-8a2bb59c4732.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![截图](img/54cea82e-e0eb-462b-8f06-8a2bb59c4732.png)'
- en: It can provide programmatic access to support the on-demand delivery of software
    based on the DevOps model.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 它可以提供程序性访问，以支持基于 DevOps 模型的软件按需交付。
- en: Change management
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 变更管理
- en: vRO has an internal versioning system that automatically keeps track of changes.
    It has API interfaces to integrate with third-party tools such as Jenkins and
    also has an audit log that help users to review changes and access. vRA can provide
    automation for approval processes by integrating with Active Directory and can
    also be configuring for alternate approvers to ensure that change management and
    business requirements are met.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: vRO 具有内部版本控制系统，可以自动跟踪更改。它具有 API 接口，可以与 Jenkins 等第三方工具集成，并且还有一个审计日志，帮助用户审查更改和访问。vRA
    可以通过集成 Active Directory 为审批流程提供自动化，还可以配置为备用审批人，以确保满足变更管理和业务需求。
- en: Release management
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 发布管理
- en: There have been fundamental changes in the application's release process which
    demands new tooling that can keep up with it. The first change is in the rise
    of containers and microservices. They enable faster code pushes, but this is at
    the expense of increased complexity. Instead of the 100 metrics you had for your
    virtualization environments, now you need to track thousands and at high speed.
    The old-style tooling cannot keep up with these scale and changes, and they fail
    over. CD and DevOps are being adopted in larger enterprises, so engineering teams
    are now pushing code to production many times per day, thus driving the need for
    continuous monitoring. DevOps is mainstream, even though the tools that the operations
    teams use are still fragmented and consequentially slowing down troubleshooting
    services.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 应用程序的发布流程已经发生了根本性的变化，这要求新的工具能够跟上其步伐。第一个变化是容器和微服务的兴起。它们使代码推送更快，但这是以增加复杂性为代价的。与您虚拟化环境中的100个指标相比，现在您需要以高速跟踪数千个指标。旧式工具无法跟上这些规模和变化，并且会失败。CD
    和 DevOps 正在被大型企业采用，因此工程团队现在每天多次将代码推送到生产环境中，从而推动了持续监控的需求。DevOps 已成为主流，尽管操作团队使用的工具仍然碎片化，从而减缓了故障排除服务的速度。
- en: Compliance management
  id: totrans-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 合规管理
- en: Customers expect data centers to be compliant because it is an extension of
    their IT. Heavily regulated verticals such as the public sector, finance, and
    healthcare cannot use this infrastructure without compliance certifications. Customers
    running a hybrid or public cloud infrastructure rely on compliance certifications
    instead of independent audits to ensure that proper security controls are in place.
    A number of high profile security breaches, court cases, and global legislative
    changes have raised awareness of the complexity and risks of running in the cloud.
    Open a browser and go to [https://marketplace.vmware.com](https://marketplace.vmware.com.).
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 客户期望数据中心符合规范，因为这是其IT的延伸。公共部门、金融和医疗保健等高度监管的行业在未获得合规认证的情况下不能使用该基础设施。运行混合云或公共云基础设施的客户依赖合规认证而非独立审计来确保适当的安全控制措施到位。一系列高调的安全漏洞、法庭案件和全球立法变化提高了人们对在云中运行的复杂性和风险的意识。打开浏览器，访问[https://marketplace.vmware.com](https://marketplace.vmware.com.).
- en: '**VMware Cloud** (**VMC**) on AWS is working on implementing the compliance
    certifications and frameworks by targeting **Cloud Security Alliance** (**CSA**)
    and **General Data Protection Regulation** (**GDPR**) first, followed by **International
    Organization for Standardization** (**ISO**), **Security Operations Center** (**SOC**),
    **Health Insurance Portability and Accountability Act** (**HIPPA**), **Payment
    Card Industry** (**PCI**), the **Federal Risk Authorization and Management Program** (**FedRAMP**),
    and **Criminal Justice ****Information Services** (**CJIS**). Security certifications that
    exist today are applicable to cloud computing and should be strongly considered.
    Cloud services will apply the mandated principles of policy, security, strategy,
    and compliance, which must be followed even by the lightest requirement use cases.'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '**VMware Cloud**（**VMC**）在AWS上正在实施合规认证和框架，首先针对**云安全联盟**（**CSA**）和**通用数据保护条例**（**GDPR**），然后是**国际标准化组织**（**ISO**）、**安全运营中心**（**SOC**）、**健康保险可携带性和问责法案**（**HIPPA**）、**支付卡行业**（**PCI**）、**联邦风险授权和管理工作计划**（**FedRAMP**）和**刑事司法信息服务**（**CJIS**）。现有的安全认证适用于云计算，应予以强烈考虑。云服务将应用强制性的政策、安全、战略和合规原则，即使是最低要求的使用案例也必须遵循。'
- en: Incident management
  id: totrans-71
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 事件管理
- en: An incident is essentially any issue that, if left unattended, could result
    in customer escalation. We can avoid many escalations by implementing a customer
    incident management process. We do not define customer escalation processes in
    any geographies. Our customer relationship management approach must evolve to
    emphasize the importance of escalation prevention. In response, we can plan to
    identify incidents, track them, and resolve them to avoid escalations. Management
    oversight and guidance during this process should help managers resolve these
    kinds of situations before they become escalations. Communication is the major
    focus. Communications protocols must define who, what, and when. The response
    to the customer must provide a balance between the cost of gained customer satisfaction
    and the cost of investment. We can do a better job at managing customer expectations
    and issues before they result in an escalation. The purpose of this process is
    to highlight issues that could escalate early on so that management and executive
    oversights can be applied in a timely manner to either prevent escalations from
    occurring or reduce the severity of an escalation if one does occur. The DevOps
    team now acts as level 2 support while before they came into action as level 3
    support.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 事件本质上是指任何如果未得到妥善处理，可能导致客户升级的问题。我们可以通过实施客户事件管理流程来避免许多升级。我们在任何地理区域都没有定义客户升级流程。我们的客户关系管理方法必须演变，强调预防升级的重要性。作为回应，我们可以计划识别事件、跟踪它们并解决它们以避免升级。在此过程中，管理层监督和指导应有助于管理者在这些问题成为升级之前解决它们。沟通是主要焦点。通信协议必须定义谁、什么和何时。对客户的响应必须在获得客户满意度的成本和投资成本之间取得平衡。我们可以在升级发生之前更好地管理客户期望和问题。此流程的目的是突出那些可能早期升级的问题，以便管理层和执行层能够及时采取行动，要么防止升级发生，要么在升级发生时减轻其严重性。DevOps团队现在作为二级支持，而在此之前，他们作为三级支持介入。
- en: Event management
  id: totrans-73
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 事件管理
- en: The DevOps team have to monitor and manage all of the applications, as per the
    customer's requirements, for compute, storage, network, VMs, containers, and so
    on, by using vRealize tools and get critical alerts for the events related to
    applications.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: DevOps 团队必须根据客户的要求，使用 vRealize 工具监控和管理所有应用程序，包括计算、存储、网络、虚拟机 (VMs)、容器等，并获得与应用程序相关事件的临界警报。
- en: Capacity management
  id: totrans-75
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 容量管理
- en: Custom profiles allow you to expand the capabilities of capacity planning by
    automating capacity calculations based on specifications that you create. Choosing
    a committed project will alter our capacity numbers as it assumes the resource
    is committed. If we don't want these numbers to change, then we can go back and
    select a plan from the Capacity and Utilization dashboard. Maintenance mode allows
    us to prevent planned downtime from affecting capacity planning.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 自定义配置文件允许您通过根据您创建的规范自动进行容量计算来扩展容量规划的功能。选择一个已承诺的项目将改变我们的容量数字，因为它假定资源已被承诺。如果我们不希望这些数字改变，那么我们可以返回并从“容量和利用率仪表板”中选择一个计划。维护模式允许我们防止计划中的停机时间影响容量规划。
- en: 'The solution must provide the ability to proactively determine capacity issues
    and risks for the virtual environment. It must provide capacity trending, demand
    forecasting, and a what-if impact analysis of future projects:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 解决方案必须提供主动确定虚拟环境容量问题和风险的能力。它必须提供容量趋势、需求预测以及未来项目的假设影响分析：
- en: '![](img/de0fb929-c7a3-4377-b4af-e8f0a8357108.png)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/de0fb929-c7a3-4377-b4af-e8f0a8357108.png)'
- en: 'A custom dashboard will be created for use by the test and development team.
    The intention is to give a specific view of test and dev VMs in the vSphere infrastructure,
    focusing on workload, capacity remaining, and reclaimable capacity. The following
    components will make up the test and dev dashboard:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 将为测试和开发团队创建一个自定义仪表板。目的是在 vSphere 基础设施中提供对测试和开发虚拟机的特定视图，重点关注工作负载、剩余容量和可回收容量。以下组件将构成测试和开发仪表板：
- en: Dev VMs overview, displaying health, risk, and efficiency for the server and
    workstation VMs
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开发虚拟机概述，显示服务器和工作站虚拟机的健康、风险和效率
- en: VM workload heat map, color-coded to display the selected type VMs
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 虚拟机工作负载热图，以颜色编码显示所选类型的虚拟机
- en: 'VMs with the lowest disk space Capacity Remaining (%) over the past week:'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 过去一周中磁盘空间容量剩余百分比最低的虚拟机：
- en: '![](img/ea5c4395-2301-4813-87be-3fd45792936f.png)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/ea5c4395-2301-4813-87be-3fd45792936f.png)'
- en: Idle VMs and VMs with the lowest utilization, flagged as idle if the utilization
    index becomes 1
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 空闲虚拟机和利用率最低的虚拟机，如果利用率指数变为 1，则标记为空闲
- en: Reclaimable capacity displays the percentage of resources that can be reclaimed
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可回收容量显示可以回收的资源百分比
- en: Powered off VMs and VMs are flagged as powered on
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 关闭电源的虚拟机和标记为已开启电源的虚拟机
- en: Wavefront dashboard
  id: totrans-87
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Wavefront 仪表板
- en: Wavefront is a metric-driven monitoring and analytics platform. DevOps and developers
    teams at enterprises that run cloud-native apps such as Box, Lyft, Intuit, and
    Workday use Wavefront to monitor the performance of cloud applications that reach
    amazing scale. The Wavefront platform collects and analyzes metrics from distributed
    applications running on VMware Cloud on AWS, AWS containers, microservices, cloud
    infrastructure, and even business data. Once metric data is in a Wavefront time-series
    database, Wavefront customers can apply powerful and flexible analytics in the
    form of the Wavefront Query Language. Developer teams use this to monitor the
    performance of their cloud services and distributed applications at unprecedented
    scale. They can troubleshoot faster and proactively alert and detect the leading
    indicators of anomalies with instant access, and unified visibility drives accelerate
    code releases by enabling the same visibility across all cloud services, infrastructures,
    and tools. Developer teams get instant visibility across all cloud services. Wavefront
    spreads across hundreds of engineers, enabling a self-service approach and empowering
    teams to innovate because Wavefront provides visibility in digital environments
    (digital service is the business). Business decisions are aligned with application
    code delivery, which helps everyone move faster with unified visibility.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: Wavefront是一个以指标驱动的监控和分析平台。运行云原生应用的企业的DevOps和开发团队，如Box、Lyft、Intuit和Workday，使用Wavefront来监控达到惊人规模的云应用性能。Wavefront平台收集和分析在VMware
    Cloud on AWS、AWS容器、微服务、云基础设施以及甚至业务数据上运行的分布式应用的指标。一旦指标数据进入Wavefront时间序列数据库，Wavefront客户就可以应用强大的灵活分析，形式为Wavefront查询语言。开发团队使用它以前所未有的规模监控他们的云服务和分布式应用性能。他们可以更快地解决问题，并使用即时访问和统一可见性来主动警报和检测异常的领先指标，统一可见性通过使所有云服务、基础设施和工具具有相同的可见性来加速代码发布。开发团队可以即时看到所有云服务的可见性。Wavefront覆盖数百名工程师，实现自助服务方法，并赋予团队创新的能力，因为Wavefront在数字环境中提供可见性（数字服务是业务）。业务决策与应用代码交付同步，这有助于每个人在统一可见性的帮助下更快地移动。
- en: Wavefront offers many ways to ingest data. We can retrieve data from AWS (APIs,
    CloudWatch, and CloudTrail) directly and can create metrics from logs.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: Wavefront提供多种数据摄取方式。我们可以直接从AWS（APIs、CloudWatch和CloudTrail）检索数据，并可以从日志中创建指标。
- en: 'Wavefront''s key differentiators from DevOps and developer teams are as follows:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: Wavefront与DevOps和开发团队的关键区别如下：
- en: Wavefront allows you to apply advanced metrics and query-driven analytics. There
    are over 100 mathematical transformations available for you to work with metrics
    data. We can troubleshoot issues faster using analytics. Wavefront, as a SaaS
    analytics platform, offers massive scale and high availability.
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Wavefront允许您应用高级指标和查询驱动的分析。有超过100种数学变换可供您与指标数据一起使用。我们可以通过分析更快地解决问题。作为SaaS分析平台，Wavefront提供大规模和高可用性。
- en: It offers customizable dashboards that help DevOps teams take ownership of code
    in production. Dashboards can be shared and exported with one click.
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它提供可定制的仪表板，帮助DevOps团队在生产中拥有代码的所有权。仪表板可以一键共享和导出。
- en: Intelligent alerting and proactive monitoring help detect leading indicators
    (quickly) or quickly zero-in on an anomaly where we can isolate problems by their
    desired shape or time, or by any condition we define.
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 智能警报和主动监控有助于快速检测领先指标或迅速聚焦于异常情况，我们可以通过它们期望的形状或时间，或通过我们定义的任何条件来隔离问题。
- en: Once Wavefront enters an organization, its adoption spreads across hundreds
    of developers, enabling a self-service approach and empowering them to innovate
    in a collaborative fashion. Synchronized business decisions aligned with code
    releases helps SaaS businesses move faster. Because Wavefront is typically adopted
    at leading SaaS enterprises, and since their cloud service is their lifeline,
    it helps business leaders make analytics-driven business decisions. These decisions
    are synchronized with cloud services code delivery, helping everyone move faster.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦Wavefront进入一个组织，其采用范围将扩展到数百名开发者，实现自助服务方法，并赋予他们以协作方式创新的能力。与代码发布同步的业务决策有助于SaaS业务加速发展。由于Wavefront通常在领先的SaaS企业中采用，并且由于他们的云服务是他们的生命线，这有助于业务领导者做出基于分析的商务决策。这些决策与云服务代码交付同步，帮助每个人更快地移动。
- en: Wavefront integrations allow you to collect, analyze, and harness data from
    any data source, and tier important things to remember. Wavefront integrations
    help to accelerate this process with full RESTful APIs and user interfaces. Data
    from individual tools can be correlated with other tiers. Wavefront is unique
    at a very high scale with these features. Powerful correlations across tiers help
    us win across point tools and metrics platforms. The Wavefront platform offers
    RESTful APIs for extensibility. The Wavefront API integrates with any tool of
    choice for developers or DevOps tooling, and makes integration easy. For example,
    Lyft wanted to keep their Grafana dashboards and use Wavefront as the most scalable
    backend time-series database.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
- en: Getting insights by monitoring how people work
  id: totrans-96
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We have to monitor how people are working and get better insights in to whether
    the business and operations are going well or not. It is always hard to collect
    metrics and monitor people, and we can't compel people to generate metrics on
    their own. So, with the collaborative solutions such as slack and SaaS metrics
    monitoring solutions such as Wavefront, it becomes easier to track and monitor
    people's interests and activities, and gain insights from this. Wavefront allows
    you to apply advanced metrics and query-driven analytics. There are over 100 mathematical
    transformations available to work with metrics data. We can troubleshoot issues
    faster with Wavefront, which is a SaaS analytics platform with massive scale and
    high availability. It offers customizable dashboards, which help DevOps teams
    to take ownership for code in production. Their dashboards have one-click intelligent
    alerting and proactive monitoring where we can isolate a problem by its desired
    shape or time, or any condition that's been defined.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
- en: Automation with vRealize
  id: totrans-98
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'vRA can be designed in a distributed and highly available architecture to provide
    multi-role services. This highly available architecture with load balancing can
    be configured from the vRA installation wizard by integrating it with VMware Identity
    Manager with high availability mode for **Single Sign-On** (**SSO**). It will
    be clustered with embedded vRA appliance PostgreSQL internal databases as the
    external PostgreSQL option is no longer available. It also has clustered embedded
    vRO services and high availability for workflows and extensibility. It accesses
    Microsoft Active Directory servers to perform the authentication of users and
    Active Directory group membership enumeration. This provides a prescribed reference
    architecture design that allows for an SDDC content life cycle solution. The solution
    addresses the following three main objectives:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
- en: Automation of the transfer of vRO and vRA content between different environments
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: vRO/vRA content storage and version control, including rollbacks
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reduction of the time and effort required to test the compliance of the vRO/vRA
    content using automation
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'This has been designed to allow authenticated users to achieve the synchronization
    of content between vRA environments. The services that are defined in the project
    are as follows:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
- en: Creation of content packages
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Testing packages on a test/validation environment
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deployment of packages to the deployment's target environment
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Management of endpoints (adding/deleting)
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The following diagram shows the **SDDC Content** **Life cycle**:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/2f3d75f7-1ad5-47bd-91bb-98373b51b4b3.png)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
- en: 'Following are the components:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
- en: The **Production Tenant** is the production vRA tenant endpoint. vRA and vRO
    content is deployed to this endpoint so that it can be consumed by end users.
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**vRO** provides orchestration capabilities using workflows for capture, test,
    and release content.'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Workflows** are organized into a vRCS pipeline that represents the content
    life cycle, allowing content to flow through development, test, and into production.'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Xenon** provides the content storage capability. The SDDC content is stored
    in the repository after it is captured and version controlled throughout its life
    cycle.'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Configuration** of the VMs that are used to host the services of the solution
    is based on the recommendation to deploy an infrastructure that supports up to
    100 pipelines and up to 30 simultaneous pipeline executions.'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deploying Infrastructure as Code
  id: totrans-116
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We need to configure vRA and NSX, which will allow for an isolated network of
    VMs to be used from the dev environment.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
- en: 'The network layout of the desired solution is as follows:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/14548237-9354-4a06-ad88-681c6a02b5fe.png)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
- en: 'NSX Edge will provide **Source Network Address Translation** (**SNAT**) routing
    so that isolated VMs can have access to external dev network resources in this
    layout. It will also provide **destination NAT** (**DNAT**) port forwarding so
    that dev machines are able to access specific services on a target isolated VM
    by addressing the NSX Edge in this layout. This design will also make use of the
    vSphere linked clones technology to minimize storage requirements. vRA provisioning
    will be implemented with the following blueprint structure:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
- en: '**Base Windows image**: This will provision a blank Windows image that will
    become accessible through vRA.'
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Base Linux image**: This will provision a blank Linux image that will be
    become accessible through vRA.'
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Windows linked clone component**: This will be the linked clone blueprint
    on top of the VM that was instantiated from the base Windows image and a specific
    snapshot. This represents the actual isolated VM to be provisioned.'
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Linux linked clone component**: This will be the linked cone blueprint on
    top of the VM that was instantiated from the base Linux image and a specific snapshot.
    This represents the actual isolated VM to be provisioned.'
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Multi-machine blueprint**: This will be a collection of the component blueprints
    that will be provisioned at once:'
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'To provision the machine properly, the following components should be included:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
- en: '**External network profile**: This is a definition of the subnet from the external
    dev network, along with details for routing and DNS resolution:'
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Cluster reservation**: A dedicated reservation is needed to limit resource
    usage to only a single datastore (so that the linked clone works), as well as
    to map the network port group to the External network profile.'
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**NAT network profile**: This is a definition of the subnet that isolated VMs
    will use behind NSX Edge. This is only a template that will later be copied into
    the multi-machine blueprint components assignment:'
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/3359a955-98d0-4fb5-9e05-76826c1bb0e6.png)'
  id: totrans-130
  prefs: []
  type: TYPE_IMG
- en: '**Reservation policy**: This will be a dedicated reservation policy that ensures
    that all blueprints will only address the designated cluster reservation that''s
    created.'
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Machine prefix**: This is only used to distinguish the machines that have
    been provisioned by the multi-machine blueprint.'
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: vRealize Code Stream
  id: totrans-133
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'vRealize Application Services is about modeling an application and automating
    its provisioning. vRCS is about modeling an application release process. The two
    are complementary: Code Stream relies on integrations with **virtual reality as
    a service** (**vRAAS**), scripts, Puppet, and so on to deploy code. Code Stream
    allows us to codify or model the entire release process and promotion of builds
    across stages and/or environments (functional testing, load testing, systems integration
    testing, staging, and finally production). This includes not just triggering application
    deployment (via scripts or other tools) but triggering tests and looking at test
    results before deciding to promote a build to the next stage.'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
- en: It also supports creating manual tasks in a stage for operations that are not
    automated today. It's really a process orchestration tool rather than an app deployment
    or provisioning solution. Code Stream allows us to trigger the deployment of individual
    artifacts (`.jar`, `.war`, config files, and so on) as opposed to vRAAS, which
    forces us to redeploy the entire stack, including the underlying machine. One
    Code Stream appliance can handle about 100 concurrent pipeline executions. Puppet,
    Chef, and other configuration management tools are not direct competitors to Code
    Stream. These tools are often used to configure and deploy software, but Code
    Stream is all about modeling a release process. The core value of Code Stream
    is really to tie configuration management and infrastructure provisioning, as
    well as continuous integration and testing and approval systems together to automate
    the entire release process.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
- en: 'There are a number of technical advantages of this:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
- en: Code Stream can automate and accelerate the life cycle of any type of software.
    This includes applications (traditional and cloud-native), as well as infrastructure
    and IT content (blueprints, workflows, scripts, templates, and so on).
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Code Stream does not prescribe a certain type of release model or toolset. It
    can model the release process for companies who are just starting out and put
    a majority of manual tasks to a 100% automated release model. Therefore, it adapts
    to an organization's maturity level and allows them to gradually move toward a
    more automated model.
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Code Stream allows teams to provision and deploy code to private as well as
    public clouds. Code Stream can take advantage of vRA's converged blueprint or
    work with other provisioning solutions such as Cloud Foundry.
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: VMware offers the best full-stack and completely integrated solution from the
    foundational SDDC to the management/provisioning layer with vRA, and finally release
    automation capabilities with Code Stream. So, while all products can be used independently
    (no vendor lock-in), when used together, customers have an unmatched platform
    to help them become more agile.
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'We can install Code Stream without vRA as there is definitely value in deploying
    both products to get benefits from a fully integrated solution for provisioning
    automation and release automation. Code Stream supports two deployment models:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
- en: Standalone, where only the Code Stream functionality is enabled on the virtual
    appliance. Admins can then optionally configure Code Stream to provision machines
    via an external vRA appliance.
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Unified, where both the Code Stream and vRA functionality is enabled on the
    same appliance. vRA also requires a separate Windows server for IaaS functionality.
    This configuration is not a supported configuration for production.
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jenkins is a build automation tool that promotes CI, a development practice
    that requires developers to integrate code into a shared source code repository
    such as Git several times a day. Each check-in is then verified by an automated
    build, allowing teams to detect problems early. At the heart of any CI tool is
    the job that automates a build and build-related activities such as a test that
    is run pre or post-build.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
- en: Release Automation tools such as Code Stream focus on modeling and automating
    the broader release process, all the way to production, which typically integrates
    CI and additional categories of tools such as provisioning, change management,
    and monitoring, and often, people do this for some manual tasks and/or approvals.
    Companies often use release automation tools to work toward CD, a practice where
    every good build is potentially pushed to production. CD is a superset of CI,
    involving more tools and more teams—not just development but operations and release
    teams as well. At the heart of a release automation or CD tool is the pipeline
    that models a process, including business constructs such as approvals.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
- en: 'Jenkins is an extensible tool and can be customized to go beyond doing basic
    builds and testing to orchestrate other activities toward the release process.
    We can customize vRO workflows to do some of what vRA does, but at some point
    we end up writing so much logic that the workflow-based solution becomes hard
    to maintain over time. The same can happen with custom solutions on top of Jenkins:
    they may work initially but get harder to manage over time, especially as you
    try to manage more applications. That''s the typical drawback of a build versus
    buy approach. Jenkins Enterprise has a pipeline component to achieve release automation.
    It''s still lacking key capabilities such as manual tasks and approvals and easy
    passing of variables from one step to the next in the pipeline, which are typically
    offered by top release automation vendors.'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
- en: 'Code Stream is only available as a standalone product because of the following
    reasons:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
- en: It does not comply with all the requirements and expected capabilities of suites
    such as vCloud or vRealize. For instance, it does not support localization, HA,
    or unattended installation.
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It needs to evolve rapidly and follow a more frequent release cadence than existing
    suites.
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It shares some common services with vRA, but it can be deployed without vRA
    so that release engineers or DevOps teams who don't use vRA can still have a lightweight
    continuous delivery solution.
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pipeline automation model – the release process for any kind of software
  id: totrans-151
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'vRealize Code Stream is used by customers who want to automate their release
    or CD process. vRealize Code Stream allows developers and operations teams to
    release software more frequently by reducing operational risk. It is designed
    based on the principle to integrate and extend rather than rip and replace so
    that that we can use existing tools alongside the SDLC. This will help developers
    to use their existing investment in tools and skills. At the time of writing this
    book, vRealize Code Stream has three main capabilities:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
- en: Pipeline automation
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Artifact management
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Release dashboard
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'It will provide RESTful APIs and capabilities based on a comprehensive integration
    framework. Some examples of manual tasks are as follows:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
- en: '**Approvals**:Code Stream has its own native approval workflow capability,
    which is shared with other vRealize products. Approvals can be used to add manual
    oversight at any stage in the pipeline''s execution. In addition, Code Stream
    can also leverage vRO plugins to call work order ticketing systems to coordinate
    the approval workflows.'
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Modeling manual tasks**: Tasks that require manual execution usually require
    some type of notification to the task owner via a work order ticketing system.
    Code Stream leverages vRO workflows and plugins to integrate with existing systems
    such as BMC Remedy **IT Service Management** (**ITSM**), HP Service Manager, ServiceNow,
    and so on.'
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: vRCS deployment architecture
  id: totrans-159
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'This chapter describes the recommended deployment topologies for vRCS. vRCS
    can leverage vRA for VM provisioning. There are a couple of possible deployments:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
- en: vRCS and vRA on the same single appliance (recommended for small POCs where
    vRCS and vRA are both lab/evaluation systems)
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: vRCS and vRA on two separate appliances (recommended for large POCs or production)
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: vRCS and vRA on two separate appliances where vRA is HA enabled (recommended
    for large POCs or production)
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Artifactory deployed as an external entity
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'vRCS does not support connecting to an external vRO and does not support its
    own HA setup, but it can integrate with an external HA setup of vRA for VM provisioning:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
- en: vRCS and vRA (vRA) on the same single appliance
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: vRCS and vRA on two separate appliances
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: vRCS and vRA on two separate appliances where vRA is HA enabled
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Artifactory deployed as an external entity
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Please be aware of the following when configuring the deployment:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
- en: If the deployment of vRCS and vRA is in same appliance, it can lock up the whole
    appliance. Since the HA setup of vRA has its own SSO server, and there is no identity
    federation support, vRCS must use a shared user account to access vRA.
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Please configure the vRA endpoint as a shared account and not per user session. vRCS
    integrates with **Advanced Service Designer** (**ASD**) forms, and there is a
    new plugin named ASD that is shipped with vRCS 1.2\. This plugin only works with
    an internal vRA.
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: System architecture
  id: totrans-173
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The vRCS architecture describes the various components that are involved with
    the system architecture. Both vRCS and vRA can be on the same appliance with the
    appropriate license. vRCS requires the endpoint to be configured so that it can
    be integrated with any external product or service deployment. It requires an
    endpoint from vRA, even though vRA and vRCS are in same appliance for vRCS to
    communicate with vRA for VM provisioning.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
- en: 'vRCS can interact with vRA in two ways:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
- en: Shared account (using single common user)
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Per user session (SSO):'
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/3eb3c018-862e-43c5-956d-781dc3a09565.png)'
  id: totrans-178
  prefs: []
  type: TYPE_IMG
- en: 'Users have access to the following ports:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
- en: '| **Server role** | **Port** |'
  id: totrans-180
  prefs: []
  type: TYPE_TB
- en: '| vRCS/vRA appliance | `443` |'
  id: totrans-181
  prefs: []
  type: TYPE_TB
- en: '| vRA identity appliance | `7444` |'
  id: totrans-182
  prefs: []
  type: TYPE_TB
- en: 'The following diagram represents the vRCS communication workflow:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/55d6b76a-0aa4-40bc-800e-7bd54e544f84.png)'
  id: totrans-184
  prefs: []
  type: TYPE_IMG
- en: 'Administrators need access to the following ports, other than the ports that
    are required by users:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
- en: '| **Server role** | **Port**  |'
  id: totrans-186
  prefs: []
  type: TYPE_TB
- en: '| vRA identity appliance | `5480` |'
  id: totrans-187
  prefs: []
  type: TYPE_TB
- en: '| vRCS/vRA appliance | `5480` |'
  id: totrans-188
  prefs: []
  type: TYPE_TB
- en: '| **Server role** | **Inbound ports** | ** Service/system outbound ports**
    |'
  id: totrans-189
  prefs: []
  type: TYPE_TB
- en: '| vRCS/vRA appliance | `443`SSH: `22`VAMI: `5480` | Identity VA: `7444` |'
  id: totrans-190
  prefs: []
  type: TYPE_TB
- en: '| vRA identity appliance | `7444`SSH: `22`VAMI: `5480` | LDAP: `389`LDAPS:
    `636` |'
  id: totrans-191
  prefs: []
  type: TYPE_TB
- en: Integrating vRCS with an external, standalone vRA
  id: totrans-192
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: vRCS can integrate with an existing vRA for VM provisioning. Therefore, an endpoint needs
    to be created where external vRA endpoint-related details can be specified. This
    endpoint will be listed under the provisioning category while adding a task in
    a stage. This endpoint can support both shared account and per user session options.
    If an external vRA and vRCS links to the same SSO server, both options per user
    session and shared account are supported. However, if an external vRA has its
    own SSO server, only the shared account option is supported. This is because the
    identity federation between two SSO servers is not supported.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
- en: 'The user needs access to the following ports:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
- en: '| **Server role** | **Port** |'
  id: totrans-195
  prefs: []
  type: TYPE_TB
- en: '| vRCS | `443` |'
  id: totrans-196
  prefs: []
  type: TYPE_TB
- en: '| vRA appliance | `443` |'
  id: totrans-197
  prefs: []
  type: TYPE_TB
- en: '| vRA identity appliance (Code Stream) | `7444` |'
  id: totrans-198
  prefs: []
  type: TYPE_TB
- en: 'Administrators need access to the following ports, in addition to the ports
    that are required by users:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
- en: '| **Server role** | **Port** |'
  id: totrans-200
  prefs: []
  type: TYPE_TB
- en: '| vRCS | `5480` |'
  id: totrans-201
  prefs: []
  type: TYPE_TB
- en: '| vRA appliance | `5480` |'
  id: totrans-202
  prefs: []
  type: TYPE_TB
- en: '| **Server role** | **Inbound ports** | **Service/system outbound ports** |'
  id: totrans-203
  prefs: []
  type: TYPE_TB
- en: '| vRCS | `443`SSH: `22`VAMI: `5480` | Identity CS VA: `7444`vRA VA: `443` |'
  id: totrans-204
  prefs: []
  type: TYPE_TB
- en: '| vRA appliance | `443`SSH: `22`VAMI: `5480` | Identity vRA VA: `7444` |'
  id: totrans-205
  prefs: []
  type: TYPE_TB
- en: '| vRA identity appliance (Code Stream) | `7444`SSH: `22`VAMI: `5480` | LDAP:
    `389`LDAPS: `636` |'
  id: totrans-206
  prefs: []
  type: TYPE_TB
- en: Summary
  id: totrans-207
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Code Stream provides the ability to model and visualize the release process
    of any type of software (applications, blueprints, workflows, configuration files,
    Puppet manifests, Chef recipes, and so on). All stakeholders (devs, operations
    teams, release engineers, and so on) can go to a central place to track the state
    of application and software releases. Users can view not just the history but
    exactly where builds and releases have failed. Code Stream and vRA use the same
    delivery platform (the same virtual appliance) and share many common services,
    including capturing release processes that IT is struggling with or spending a
    lot of time on, and automating those via vRCS and vRA.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
- en: 'As opposed to acquiring, integrating, and managing different solutions for
    provisioning and release automation, customers can benefit from a single solution.
    By integrating with artifact repositories such as JFrog Artifactory, Code Stream
    can manage and track the multiple artifact versions that are generated with new
    releases, and track their deployment across various environments. As companies
    release new app versions more often, the risk of deploying the wrong artifact
    version and breaking production increases significantly. To help customers have
    visibility into and tie all of their different repositories (Yum, NuGet, Nexus,
    and so on) into one place for troubleshooting and security auditing, it is important
    to track which artifacts have been deployed where. Code Stream can work for both
    Java/Linux and .NET/Windows shops and their respective toolsets. Certain release
    management tools (for example, Octopus, Microsoft Release Manager, and Chef Delivery)
    support only one technology or are optimized for one technology or certain toolsets.
    Code Stream does not prescribe any particular toolset, meaning it can support
    different teams using different technologies across the enterprise. In fact, it
    can be even be used for the life cycle of software that is not an application:
    scripts, workflows, blueprints, and so on.'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, [Chapter 10](5cce66c5-1e67-470e-a3f8-1ba791438615.xhtml), *Transforming
    VMware IT Operations Using ML* we will learn about how to manage different cloud
    models from a single console and about the phase-wise transformation of data center
    operations methodologies. We will also learn how to design scalable infrastructure
    to host both legacy and new cloud native apps on unified platforms using ML-based
    solutions.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
- en: Further reading
  id: totrans-211
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*DevOps and Agile development—VMware*, at [https://www.vmware.com/content/dam/digitalmarketing/vmware/en/pdf/solutionoverview/vmware-devops-agile-development-white-paper.pdf](https://www.vmware.com/content/dam/digitalmarketing/vmware/en/pdf/solutionoverview/vmware-devops-agile-development-white-paper.pdf)'
  id: totrans-212
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*vRealize Code Stream Management Pack for IT DevOps—VMware*, at [https://www.vmware.com/files/pdf/products/vrealize/vmware-vrealize-code-stream-management-solution-brief.pdf](https://www.vmware.com/files/pdf/products/vrealize/vmware-vrealize-code-stream-management-solution-brief.pdf)'
  id: totrans-213
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*DevOps-Ready IT: Continuous Delivery of vRealize Automation Blueprints*, at [https://blogs.vmware.com/management/2016/05/devops-ready-it-continuous-delivery-of-vrealize-automation-blueprints.html](https://blogs.vmware.com/management/2016/05/devops-ready-it-continuous-delivery-of-vrealize-automation-blueprints.html)'
  id: totrans-214
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*vRealize Code Stream | Application Release Automation*, at [https://www.vmware.com/in/products/vrealize-code-stream.html](https://www.vmware.com/in/products/vrealize-code-stream.html)'
  id: totrans-215
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*vRealize Code Stream Documentation—VMware Docs*, at [https://docs.vmware.com/en/vRealize-Code-Stream/index.html](https://docs.vmware.com/en/vRealize-Code-Stream/index.html)'
  id: totrans-216
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*From Zero to DevOps Hero using Cloud Automation*, at [https://blogs.vmware.com/management/2018/10/devops-hero-with-cloud-automation.html](https://blogs.vmware.com/management/2018/10/devops-hero-with-cloud-automation.html)'
  id: totrans-217
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*vRealize Code Stream—VMware*, at [https://code.vmware.com/web/sdk/2.2.0/vrealize-code-stream](https://code.vmware.com/web/sdk/2.2.0/vrealize-code-stream)'
  id: totrans-218
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Overview of vSphere Integrated Containers For DevOps Administrators—VMware
    vSphere*, at [https://vmware.github.io/vic-product/assets/files/html/1.1/vic_dev_ops/overview_of_vic_devops.html](https://vmware.github.io/vic-product/assets/files/html/1.1/vic_dev_ops/overview_of_vic_devops.html)'
  id: totrans-219
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
