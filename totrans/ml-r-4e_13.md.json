["```py\n> library(tidyverse)\n> titanic_train <- read_csv(\"titanic_train.csv\") |>\n    mutate(\n      Age_MVI = if_else(is.na(Age), 1, 0),\n      Age = if_else(is.na(Age), mean(Age, na.rm = TRUE), Age),\n      Cabin = if_else(is.na(Cabin), \"X\", Cabin),\n      Embarked = factor(if_else(is.na(Embarked), \"X\", Embarked)),\n      Sex = factor(Sex)\n    ) \n```", "```py\n> simple_model <- glm(Survived ~ 1, family = binomial,\n                       data = titanic_train) \n```", "```py\n> full_model <- glm(Survived ~ Age + Age_MVI + Embarked +\n                               Sex + Pclass + SibSp + Fare,\n                    family = binomial, data = titanic_train) \n```", "```py\n> sw_forward <- stats::step(simple_model,\n                            scope = formula(full_model),\n                            direction = \"forward\") \n```", "```py\nStart:  AIC=1188.66\nSurvived ~ 1\n           Df Deviance    AIC\n+ Sex       1    917.8  921.8\n+ Pclass    1   1084.4 1088.4\n+ Fare      1   1117.6 1121.6\n+ Embarked  3   1157.0 1165.0\n+ Age_MVI   1   1178.9 1182.9\n+ Age       1   1182.3 1186.3\n<none>          1186.7 1188.7\n+ SibSp     1   1185.5 1189.5 \n```", "```py\nStep:  AIC=800.84\nSurvived ~ Sex + Pclass + Age + SibSp\n           Df Deviance    AIC\n<none>          790.84 800.84\n+ Embarked  3   785.27 801.27\n+ Fare      1   789.65 801.65\n+ Age_MVI   1   790.59 802.59 \n```", "```py\n> formula(sw_forward) \n```", "```py\nSurvived ~ Sex + Pclass + Age + SibSp \n```", "```py\n> sw_forward$coefficients \n```", "```py\n(Intercept)     Sexmale      Pclass         Age       SibSp \n 5.19197585 -2.73980616 -1.17239094 -0.03979317 -0.35778841 \n```", "```py\n> sw_backward <- stats::step(full_model, direction = \"backward\") \n```", "```py\nStart:  AIC=803.49\nSurvived ~ Age + Age_MVI + Embarked + Sex + Pclass + SibSp + \n    Fare\n           Df Deviance     AIC\n- Fare      1   783.88  801.88\n- Age_MVI   1   784.81  802.81\n- Embarked  3   789.42  803.42\n<none>          783.49  803.49\n- SibSp     1   796.34  814.34\n- Age       1   810.97  828.97\n- Pclass    1   844.74  862.74\n- Sex       1  1016.36 1034.36 \n```", "```py\nStep:  AIC=800.84\nSurvived ~ Age + Sex + Pclass + SibSp\n         Df Deviance     AIC\n<none>        790.84  800.84\n- SibSp   1   805.33  813.33\n- Age     1   819.32  827.32\n- Pclass  1   901.80  909.80\n- Sex     1  1044.10 1052.10 \n```", "```py\n> set.seed(12345)\n> titanic_train$rand_vals <- runif(n = 891, min = 1, max = 100) \n```", "```py\n> library(Boruta)\n> titanic_boruta <- Boruta(Survived ~ PassengerId + Age +\n                            Sex + Pclass + SibSp + random_vals,\n                           data = titanic_train, doTrace = 1) \n```", "```py\nAfter 10 iterations, +0.51 secs: \n confirmed 4 attributes: Age, Pclass, Sex, SibSp;\n rejected 1 attribute: rand_vals;\n still have 1 attribute left. \n```", "```py\n> titanic_boruta \n```", "```py\nBoruta performed 99 iterations in 4.555043 secs.\n 4 attributes confirmed important: Age, Pclass, Sex, SibSp;\n 1 attributes confirmed unimportant: rand_vals;\n 1 tentative attributes left: PassengerId; \n```", "```py\n> plot(titanic_boruta) \n```", "```py\n> library(tidyverse)\n> sns_data <- read_csv(\"snsdata.csv\") \n```", "```py\n> sns_terms <- sns_data |> select(basketball:drugs) \n```", "```py\n> set.seed(2023)\n> library(irlba)\n> sns_pca <- sns_terms |> \n    prcomp_irlba(n = 10, center = TRUE, scale = TRUE) \n```", "```py\n> screeplot(sns_pca, npcs = 10, type = \"lines\",\n            main = \"Scree Plot of SNS Data Principal Components\") \n```", "```py\n> summary(sns_pca) \n```", "```py\nImportance of components:\n                           PC1     PC2     PC3     PC4     PC5\nStandard deviation     1.82375 1.30885 1.27008 1.22642 1.20854\nProportion of Variance 0.09239 0.04759 0.04481 0.04178 0.04057\nCumulative Proportion  0.09239 0.13998 0.18478 0.22657 0.26714\n                           PC6     PC7     PC8     PC9    PC10\nStandard deviation     1.11506 1.04948 1.03828 1.02163 1.01638\nProportion of Variance 0.03454 0.03059 0.02995 0.02899 0.02869\nCumulative Proportion  0.30167 0.33227 0.36221 0.39121 0.41990 \n```", "```py\n> str(sns_pca$x) \n```", "```py\n num [1:30000, 1:10] 1.448 -3.492 0.646 1.041 -4.322 ...\n - attr(*, \"dimnames\")=List of 2\n  ..$ : NULL\n  ..$ : chr [1:10] \"PC1\" \"PC2\" \"PC3\" \"PC4\" ... \n```", "```py\n> head(sns_pca$x) \n```", "```py\n PC1         PC2       PC3        PC4         PC5\n[1,] -1.4477620  0.07976310 0.3357330 -0.3636082  0.03833596\n[2,]  3.4922144  0.36554520 0.7966735 -0.1871626  0.57126163\n[3,] -0.6459385 -0.67798166 0.8000251  0.6243070  0.25122261\n[4,] -1.0405145  0.08118501 0.4099638 -0.2555128 -0.02620989\n[5,]  4.3216304 -1.01754361 3.4112730 -1.9209916 -0.43409869\n[6,]  0.2131225 -0.65882053 1.6215828  0.9372545  1.47217369\n             PC6          PC7          PC8         PC9        PC10\n[1,] -0.01559079  0.007278589 -0.004582346  0.19226144  0.08086065\n[2,]  3.02758235 -0.306304037 -1.142422251  0.72992534  0.11203923\n[3,] -0.40751994  0.454614417  0.704544996 -0.43734980 -0.07735574\n[4,]  0.27837411  0.462898314 -0.175251793 -0.08843005  0.26784326\n[5,] -1.11734548 -2.122420077 -2.287638056  2.19992650 -0.26536161\n[6,]  0.04614790 -0.654207687  0.285263646  0.69439745 -0.89649127 \n```", "```py\n> sns_pca_long <- tibble(SNS_Term = colnames(sns_terms),\n                           as_tibble(sns_pca$rotation)) |> \n  pivot_longer(PC1:PC10, names_to = \"PC\", values_to = \"Contribution\") \n```", "```py\n> sns_pca_long |>\n    filter(PC == \"PC3\") |>\n    top_n(15, abs(Contribution)) |>\n    mutate(SNS_Term = reorder(SNS_Term, Contribution)) |>\n    ggplot(aes(SNS_Term, Contribution, fill = SNS_Term)) +\n      geom_col(show.legend = FALSE, alpha = 0.8) +\n      theme(axis.text.x = element_text(angle = 90, hjust = 1,\n           vjust = 0.5),  axis.ticks.x = element_blank()) + \n      labs(x = \"Social Media Term\",\n           y = \"Relative Importance to Principal Component\",\n           title = \"Top 15 Contributors to PC3\") \n```", "```py\n> sns_data_pca <- cbind(sns_data[1:4], sns_pca$x) \n```", "```py\n> m <- lm(friends ~ PC1 + PC2 + PC3 + PC4 + PC5, data = sns_data_pca)\n> m \n```", "```py\nCall:\nlm(formula = friends ~ PC1 + PC2 + PC3 + PC4 + PC5, data = sns_data_pca)\nCoefficients:\n(Intercept)          PC1          PC2          PC3          PC4  \n    30.1795       1.9857       0.9748      -2.5230       1.1160  \n        PC5  \n     0.8780 \n```", "```py\n> library(tidyverse)\n> titanic_train <- read_csv(\"titanic_train.csv\") |>\n    mutate(Title = str_extract(Name, \", [A-z]+\\\\.\")) |>\n    mutate(Title = str_replace_all(Title, \"[, \\\\.]\", \"\"))\n> table(titanic_train$Title, useNA = \"ifany\") \n```", "```py\n Capt      Col      Don       Dr Jonkheer     Lady    Major \n       1        2        1        7        1        1        2\n\n  Master     Miss     Mlle      Mme       Mr      Mrs       Ms \n      40      182        2        1      517      125        1 \n     Rev      Sir     <NA>\n       6        1        1 \n```", "```py\n> titanic_train <- titanic_train |>\n    mutate(TitleGroup = fct_collapse(Title, \n      Mr = \"Mr\",\n      Mrs = \"Mrs\",\n      Master = \"Master\",\n      Miss = c(\"Miss\", \"Mlle\", \"Mme\", \"Ms\"),\n      Noble = c(\"Don\", \"Sir\", \"Jonkheer\", \"Lady\"),\n      Military = c(\"Capt\", \"Col\", \"Major\"),\n      Doctor = \"Dr\",\n      Clergy = \"Rev\",\n      other_level = \"Other\")\n    ) |>\n    mutate(TitleGroup = fct_na_value_to_level(TitleGroup,\n                                              level = \"Unknown\")) \n```", "```py\n> table(titanic_train$TitleGroup) \n```", "```py\nMilitary    Noble   Doctor   Master     Miss       Mr      Mrs \n       5        4        7       40      186      517      125 \n  Clergy  Unknown \n       6        1 \n```", "```py\n> fct_count(titanic_train$Title, sort = TRUE, prop = TRUE) \n```", "```py\n# A tibble: 17 Ã— 3\n   f            n       p\n   <fct>    <int>   <dbl>\n 1 Mr         517 0.580  \n 2 Miss       182 0.204  \n 3 Mrs        125 0.140  \n 4 Master      40 0.0449 \n 5 Dr           7 0.00786\n 6 Rev          6 0.00673\n 7 Col          2 0.00224\n 8 Major        2 0.00224\n 9 Mlle         2 0.00224\n10 Capt         1 0.00112\n11 Don          1 0.00112\n12 Jonkheer     1 0.00112\n13 Lady         1 0.00112\n14 Mme          1 0.00112\n15 Ms           1 0.00112\n16 Sir          1 0.00112\n17 NA           1 0.00112 \n```", "```py\n> table(fct_lump_n(titanic_train$Title, n = 3)) \n```", "```py\n Miss    Mr   Mrs Other \n  182   517   125    66 \n```", "```py\n> table(fct_lump_prop(titanic_train$Title, prop = 0.01)) \n```", "```py\nMaster   Miss     Mr    Mrs  Other \n    40    182    517    125     26 \n```", "```py\n> table(fct_lump_min(titanic_train$Title, min = 5)) \n```", "```py\n Dr Master   Miss     Mr    Mrs    Rev  Other \n     7     40    182    517    125      6     13 \n```", "```py\n> head(titanic_train$Fare) \n```", "```py\n[1]  7.2500 71.2833  7.9250 53.1000  8.0500  8.4583\n> summary(titanic_train$Fare)\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   0.00    7.91   14.45   32.20   31.00  512.33 \n```", "```py\n> titanic_train <- titanic_train |> mutate(\n    fare_firstclass = if_else(Fare >= 31, 1, 0, missing = 0)\n  ) \n```", "```py\n> table(titanic_train$fare_firstclass) \n```", "```py\n 0   1 \n666 225 \n```", "```py\n> titanic_train <- titanic_train |>\n    mutate(\n      fare_class = case_when(\n        Fare >= 31 ~ \"1st Class\",\n        Fare >= 15 ~ \"2nd Class\",\n        TRUE ~ \"3rd Class\"\n      )\n    ) \n```", "```py\n> table(titanic_train$fare_class) \n```", "```py\n1st Class 2nd Class 3rd Class \n      225       209       457 \n```", "```py\n> table(cut(titanic_train$Fare, breaks = c(0, 15, 31, Inf),\n            right = FALSE)) \n```", "```py\n [0,15)  [15,31) [31,Inf) \n     457      209      225 \n```", "```py\n> table(cut(titanic_train$Fare, right = FALSE,\n            breaks = seq(from = 0, to = 550, by = 50))) \n```", "```py\n [0,50)  [50,100) [100,150) [150,200) [200,250) [250,300) \n      730       108        24         9        11         6 \n[300,350) [350,400) [400,450) [450,500) [500,550) \n        0         0         0         0         3 \n```", "```py\n> table(cut(titanic_train$Fare, right = FALSE,\n            breaks = quantile(titanic_train$Fare,\n                              probs = seq(0, 1, 0.20)))) \n```", "```py\n [0,7.85) [7.85,10.5) [10.5,21.7) [21.7,39.7)  [39.7,512) \n        166         173         196         174         179 \n```", "```py\n> table(ntile(titanic_train$Fare, n = 5)) \n```", "```py\n 1   2   3   4   5 \n179 178 178 178 178 \n```", "```py\n> titanic_train <- titanic_train |>\n    mutate(fare_level = factor(ntile(Fare, n = 11))) \n```", "```py\n> table(titanic_train$fare_level) \n```", "```py\n1  2  3  4  5  6  7  8  9 10 11 \n81 81 81 81 81 81 81 81 81 81 81 \n```", "```py\n> titanic_train <- titanic_train |>\n    mutate(\n      Cabin = if_else(is.na(Cabin), \"X\", Cabin),\n      Embarked = if_else(is.na(Embarked), \"Unknown\", Embarked)\n    ) \n```", "```py\n> titanic_train <- titanic_train |>\n    mutate(\n      Age_MVI = if_else(is.na(Age), 1, 0),\n      Age = if_else(is.na(Age), mean(Age, na.rm = TRUE), Age)\n    ) \n```", "```py\n> snsdata <- read_csv(\"snsdata.csv\") |>\n    mutate(\n      gender = fct_recode(gender, Female = \"F\", Male = \"M\"),\n      gender = fct_na_value_to_level(gender, level = \"Unknown\"),\n      age = ifelse(age < 13 | age > 20, NA, age) \n    ) |>\n    group_by(gradyear) |>\n    mutate(age_imp = if_else(is.na(age),\n           median(age, na.rm = TRUE), age)) |>\n    ungroup() |>\n    select(gender, friends, gradyear, age_imp, basketball:drugs) \n```", "```py\n> fct_count(snsdata$gender, prop = TRUE) \n```", "```py\n# A tibble: 3 Ã— 3\n  f           n      p\n  <fct>   <int>  <dbl>\n1 Female  22054 0.735 \n2 Male     5222 0.174 \n3 Unknown  2724 0.0908 \n```", "```py\n> library(caret)\n> sns_undersample <- downSample(x = snsdata[2:40],\n                                y = snsdata$gender,\n                                yname = \"gender\") \n```", "```py\n> fct_count(sns_undersample$gender, prop = TRUE) \n```", "```py\n# A tibble: 3 Ã— 3\n  f           n     p\n  <fct>   <int> <dbl>\n1 Female   2724 0.333\n2 Male     2724 0.333\n3 Unknown  2724 0.333 \n```", "```py\n> library(caret)\n> sns_oversample <- upSample(x = snsdata[2:40],\n                             y = snsdata$gender,\n                             yname = \"gender\") \n```", "```py\n> fct_count(sns_oversample$gender, prop = TRUE) \n```", "```py\n# A tibble: 3 Ã— 3\n  f           n     p\n  <fct>   <int> <dbl>\n1 Female  22054 0.333\n2 Male    22054 0.333\n3 Unknown 22054 0.333 \n```", "```py\n> library(themis)\n> sns_balanced <- snsdata |> smote(\"gender\") \n```", "```py\n> table(sns_balanced$gender) \n```", "```py\n Female    Male Unknown \n  22054   22054   22054 \n```", "```py\n> normalize <- function(x) {\n    return ((x - min(x)) / (max(x) - min(x)))\n  } \n```", "```py\n> unnormalize <- function(norm_vals, col_name) {\n    old_vals <- snsdata[col_name]\n    unnormalized_vals <- norm_vals *\n      (max(old_vals) - min(old_vals)) + min(old_vals)\n    rounded_vals <- if(col_name != \"age_imp\")\n      { round(unnormalized_vals) }\n      else {unnormalized_vals}  \n    return (rounded_vals)\n  } \n```", "```py\n> snsdata_balanced <- snsdata |>\n    mutate(across(where(is.numeric), normalize)) |>\n    smote(\"gender\") |>\n    mutate(across(where(is.numeric), ~unnormalize(.x, cur_column()))) \n```", "```py\n> table(snsdata$gender) \n```", "```py\nFemale    Male Unknown \n  22054    5222    2724 \n```", "```py\n> table(snsdata_balanced$gender) \n```", "```py\nFemale    Male Unknown \n  22054   22054   22054 \n```"]