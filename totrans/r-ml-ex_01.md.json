["```py\n> 5 + 6\n[1] 11\n> 3 * 2\n[1] 6\n> 1 / 0\n[1] Inf\n\n```", "```py\n1.\n```", "```py\n> num <- 6\n> num ^ 2\n[1] 36\n> num\n[1] 6     # a variable changes value only on re-assignment\n> num <- num ^ 2 * 5 + 10 / 3\n> num\n[1] 183.3333\n\n```", "```py\n> x <- 1:5\n> x\n[1] 1 2 3 4 5\n> y <- c(6, 7, 8 ,9, 10)\n> y\n[1]  6  7  8  9 10\n> z <- x + y\n> z\n[1]  7  9 11 13 15\n\n```", "```py\n+ operator. This is known as vectorization and we will be discussing more about this later on. Some more operations on vectors are shown next:\n```", "```py\n> c(1,3,5,7,9) * 2\n[1]  2  6 10 14 18\n> c(1,3,5,7,9) * c(2, 4)\n[1]  2 12 10 28 18 # here the second vector gets recycled\n\n```", "```py\n> factorial(1:5)\n[1]   1   2   6  24 120\n> exp(2:10)   # exponential function\n[1]     7.389056    20.085537    54.598150   148.413159   403.428793  1096.633158\n[7]  2980.957987  8103.083928 22026.465795\n> cos(c(0, pi/4))   # cosine function\n[1] 1.0000000 0.7071068\n> sqrt(c(1, 4, 9, 16))\n[1] 1 2 3 4\n> sum(1:10)\n[1] 55\n\n```", "```py\n> 1 / 0\n[1] Inf\n> 0 / 0\n[1] NaN\n> Inf / NaN\n[1] NaN\n> Inf / Inf\n[1] NaN\n> log(Inf)\n[1] Inf\n> Inf + NA\n[1] NA\n\n```", "```py\nTRUE and FALSE are logical data type values, similar to other programming languages.\n```", "```py\n> vec <- c(0, Inf, NaN, NA)\n> is.finite(vec)\n[1]  TRUE FALSE FALSE FALSE\n> is.nan(vec)\n[1] FALSE FALSE  TRUE FALSE\n> is.na(vec)\n[1] FALSE FALSE  TRUE  TRUE\n> is.infinite(vec)\n[1] FALSE  TRUE FALSE FALSE\n\n```"]