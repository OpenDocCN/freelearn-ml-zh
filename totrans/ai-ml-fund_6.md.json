["```py\n    import numpy as np\n    data_points = np.array([\n        [1, 1],\n        [1, 1.5],\n        [2, 2],\n        [8, 1],\n        [8, 0],\n        [8.5, 1],\n        [6, 1],\n        [1, 10],\n        [1.5, 10],\n        [1.5, 9.5],\n        [10, 10],\n        [1.5, 8.5]\n    ])\n    ```", "```py\n    import matplotlib.pyplot as plot\n    plot.scatter(data_points.transpose()[0], data_points.transpose()[1])\n    ```", "```py\n    from sklearn.cluster import KMeans\n    k_means_model = KMeans(n_clusters=3)\n    k_means_model.fit(data_points)\n    ```", "```py\n    k_means_model.cluster_centers_\n    ```", "```py\n     array([[1.33333333, 1.5     ],\n            [3.1     , 9.6     ],\n            [7.625     , 0.75     ]])\n    ```", "```py\n    k_means_model.labels_\n    ```", "```py\n    array([0, 0, 0, 2, 2, 2, 2, 1, 1, 1, 1, 1])\n    ```", "```py\n    plot.scatter(\n        k_means_model.cluster_centers_[:,0],\n        k_means_model.cluster_centers_[:,1]\n    )\n    for i in range(len(data_points)):\n        plot.plot(\n            data_points[i][0],\n            data_points[i][1],\n            ['ro','go','yo'][k_means_model.labels_[i]]\n        )\n    plot.show()\n    ```", "```py\n    k_means_model = KMeans(n_clusters=2)\n    k_means_model.fit(data_points)\n    plot.scatter(\n        k_means_model.cluster_centers_[:,0],\n        k_means_model.cluster_centers_[:,1]\n    )\n    for i in range(len(data_points)):\n        plot.plot(\n            data_points[i][0],\n            data_points[i][1],\n            ['ro','go'][k_means_model.labels_[i]]\n        )\n    plot.show()\n    ```", "```py\n    k_means_model.predict([[5,5],[0,10]])\n    ```", "```py\n     array([1, 0])\n    ```", "```py\n    data_points = np.array([\n        [1, 1],\n        [1, 1.5],\n        [2, 2],\n        [8, 1],\n        [8, 0],\n        [8.5, 1],\n        [6, 1],\n        [1, 10],\n        [1.5, 10],\n        [1.5, 9.5],\n        [10, 10],\n        [1.5, 8.5]\n    ])\n    k_means_model.cluster_centers_\n    ```", "```py\n     array([[1.33333333, 1.5     ],\n          [3.1     , 9.6     ],\n           [7.625     , 0.75     ]])\n    ```", "```py\n    k_means_model.labels_\n    ```", "```py\n     array([0, 0, 0, 2, 2, 2, 2, 1, 1, 1, 1, 1])\n    ```", "```py\n    data_points = np.array([\n        [1, 1],\n        [1, 1.5],\n        [2, 2],\n        [8, 1],\n        [8, 0],\n        [8.5, 1],\n        [6, 1],\n        [1, 10],\n        [1.5, 10],\n        [1.5, 9.5],\n        [10, 10],\n        [1.5, 8.5]\n    ])\n    r = 2;\n    ```", "```py\n    P = [1, 1]\n    ```", "```py\n    from scipy.spatial import distance\n    points = np.array([\n        p0 for p0 in data_points if distance.euclidean(p0, P) <= r\n    ])\n    points\n    ```", "```py\n     array([[1\\. , 1\\. ],\n       [1\\. , 1.5],\n       [2\\. , 2\\. ]])\n    ```", "```py\n    import numpy as np\n    P = [\n        np.mean( points.transpose()[0] ),\n        np.mean(points.transpose()[1] )\n    ]\n    P\n    ```", "```py\n     [1.3333333333333333, 1.5]\n    ```", "```py\n    points = np.array([\n        p0 for p0 in data_points if distance.euclidean( p0, P) <= r\n    ])\n    points\n    ```", "```py\n     array([[1\\. , 1\\. ],\n       [1\\. , 1.5],\n       [2\\. , 2\\. ]])\n    ```", "```py\n    P = [8, 1]\n    points = np.array( [\n        p0 for p0 in data_points if distance.euclidean(p0, P) <= r\n    ])\n    points\n    ```", "```py\n     array([[8\\. , 1\\. ],\n            [8\\. , 0\\. ],\n            [8.5, 1\\. ],\n            [6\\. , 1\\. ]])\n    ```", "```py\n    P = [\n        np.mean(points.transpose()[0]),\n        np.mean(points.transpose()[1])\n    ]\n    ```", "```py\n     [7.625, 0.75]\n    ```", "```py\n    P = [8, 0]\n    points = np.array([\n        p0 for p0 in data_points if distance.euclidean(p0, P) <= r\n    ])\n    points\n    ```", "```py\n     array([[8\\. , 1\\. ],\n       [8\\. , 0\\. ],\n       [8.5, 1\\. ]])\n    ```", "```py\n    P = [\n        np.mean(points.transpose()[0]),\n        np.mean(points.transpose()[1])\n    ]\n    P\n    ```", "```py\n     [8.166666666666666, 0.6666666666666666]\n    ```", "```py\n     array([[8\\. , 1\\. ],\n       [8\\. , 0\\. ],\n       [8.5, 1\\. ]])\n    ```", "```py\n    P = [6, 1]\n    points = np.array([\n        p0 for p0 in data_points if distance.euclidean(p0, P) <= r\n    ])\n    points\n    ```", "```py\n     array([[8., 1.],\n      [6., 1.]])\n    ```", "```py\n    P = [\n        np.mean(points.transpose()[0]),\n        np.mean(points.transpose()[1])\n    ]\n    P\n    ```", "```py\n     [7.0, 1.0]\n    ```", "```py\n    points = np.array([\n        p0 for p0 in data_points if distance.euclidean(p0, P) <= r\n    ])\n    points\n    ```", "```py\n     array([[8\\. , 1\\. ],\n       [8\\. , 0\\. ],\n       [8.5, 1\\. ],\n       [6\\. , 1\\. ]])\n    ```", "```py\nimport numpy as np\ndata_points = np.array([\n    [1, 1],\n    [1, 1.5],\n    [2, 2],\n    [8, 1],\n    [8, 0],\n    [8.5, 1],\n    [6, 1],\n    [1, 10],\n    [1.5, 10],\n    [1.5, 9.5],\n    [10, 10],\n    [1.5, 8.5]\n])\n```", "```py\nfrom sklearn.cluster import MeanShift\nmean_shift_model = MeanShift()\nmean_shift_model.fit(data_points)\n```", "```py\nmean_shift_model.cluster_centers_\n```", "```py\narray([[ 1.375     , 9.5     ],\n       [ 1.33333333, 1.5     ],\n       [ 8.16666667, 0.66666667],\n       [ 6\\.        , 1\\.        ],\n       [10\\.        , 10\\.        ]])\n```", "```py\nmean_shift_model.labels_\n```", "```py\n array([1, 1, 1, 2, 2, 2, 3, 0, 0, 0, 4, 0], dtype=int64)\n```", "```py\nplot.scatter(\n    mean_shift_model.cluster_centers_[:,0],\n    mean_shift_model.cluster_centers_[:,1]\n)\nfor i in range(len(data_points)):\n    plot.plot(\n        data_points[i][0],\n        data_points[i][1],\n        ['ro','go','yo', 'ko', 'mo'][mean_shift_model.labels_[i]]\n    )\nplot.show()\n```", "```py\nfrom PIL import Image\nimage = Image.open('file.jpg')\n```", "```py\nimage.size\n```", "```py\n (750, 422)\n```", "```py\nimport numpy as np\npixel_array = np.array(image)\n```", "```py\npixel_array[411][740]\n```", "```py\n array([29, 33, 32], dtype=uint8)\n```", "```py\npixels = image.load()\npixels[740, 411]\n```", "```py\n (29, 33, 32)\n```", "```py\npixels[740, 411] = (255, 0, 0)\n```", "```py\nimage.save('test.jpg')\n```", "```py\nimport pandas\ndata_frame = pandas.DataFrame(\n    [[x,y,pixels[x,y][0], pixels[x,y][1], pixels[x,y][2]]\n        for x in range(image.size[0])\n        for y in range(image.size[1])\n    ],\n    columns=['x', 'y', 'r', 'g', 'b' ]\n)\ndata_frame.head()\n```", "```py\n   x y r g b\n0 0 0 6 29 71\n1 0 1 7 32 73\n2 0 2 8 37 77\n3 0 3 8 41 82\n4 0 4 7 45 84\n```"]