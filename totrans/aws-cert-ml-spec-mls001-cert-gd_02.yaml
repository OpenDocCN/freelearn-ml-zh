- en: '*Chapter 1*: Machine Learning Fundamentals'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第一章*：机器学习基础'
- en: For many decades, researchers have been trying to simulate human brain activity
    through the field known as **artificial intelligence**, **AI** for short. In 1956,
    a group of people met at the Dartmouth Summer Research Project on Artificial Intelligence,
    an event that is widely accepted as the first group discussion about AI as we
    know it today. Researchers were trying to prove that many aspects of the learning
    process could be precisely described and, therefore, automated and replicated
    by a machine. Today, we know they were right!
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 几十年来，研究人员一直在通过被称为**人工智能**（简称AI）的领域尝试模拟人类大脑活动。1956年，一群人在达特茅斯夏季人工智能研究项目上会面，这一事件被广泛认为是关于今天我们所知的AI的第一次集体讨论。研究人员试图证明学习过程的许多方面可以被精确描述，因此可以被机器自动化和复制。今天，我们知道他们是正确的！
- en: Many other terms appeared in this field, such as **machine learning** (**ML**)
    and **deep learning** (**DL**). These sub-areas of AI have also been evolving
    for many decades (granted, nothing here is new to the science). However, with
    the natural advance of the information society and, more recently, the advent
    of **big data** platforms, AI applications have been reborn with much more power
    and applicability. Power, because now we have more computational resources to
    simulate and implement them; applicability, because now information is everywhere.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 该领域还出现了许多其他术语，如**机器学习**（简称ML）和**深度学习**（简称DL）。这些人工智能的子领域也已经发展了几十年（当然，这里没有什么是对科学来说是新的）。然而，随着信息社会的自然进步，以及最近**大数据**平台的兴起，人工智能应用以更强大的力量和适用性重新焕发生机。力量在于我们现在有更多的计算资源来模拟和实现它们；适用性在于现在信息无处不在。
- en: Even more recently, cloud services providers have put AI in the cloud. This
    is helping all sizes of companies to either reduce their operational costs or
    even letting them sample AI applications (considering that it could be too costly
    for a small company to maintain its own data center).
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 更近一些，云服务提供商已经将AI引入云端。这正在帮助各种规模的公司降低运营成本，甚至让它们能够尝试AI应用（考虑到对于一家小公司来说，维护自己的数据中心可能成本过高）。
- en: 'That brings us to the goal of this chapter: being able to describe what the
    terms AI, ML, and DL mean, as well as understanding all the nuances of an ML pipeline.
    Avoiding confusion on these terms and knowing what exactly an ML pipeline is will
    allow you to properly select your services, develop your applications, and master
    the AWS Machine Learning Specialty exam.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 这就带我们来到了本章的目标：能够描述AI、ML和DL的含义，以及理解ML管道的所有细微差别。避免对这些术语的混淆，并确切了解ML管道是什么，将使您能够正确选择服务、开发应用程序并掌握AWS机器学习专业考试。
- en: 'The main topics of this chapter are as follows:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的主要内容包括：
- en: Comparing AI, ML, and DL
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 比较人工智能、机器学习和深度学习
- en: Classifying supervised, unsupervised, and reinforcement learning
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分类监督学习、无监督学习和强化学习
- en: The CRISP-DM modeling life cycle
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CRISP-DM建模生命周期
- en: Data splitting
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据拆分
- en: Modeling expectations
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 建模期望
- en: Introducing ML frameworks
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 介绍ML框架
- en: ML in the cloud
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 云端机器学习
- en: Comparing AI, ML, and DL
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 比较人工智能、机器学习和深度学习
- en: 'AI is a broad field that studies different ways to create systems and machines
    that will solve problems by simulating human intelligence. There are different
    levels of sophistication to create these programs and machines, which go from
    simple, rule-based engines to complex, self-learning systems. AI covers, but is
    not limited to, the following sub-areas:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 人工智能是一个广泛的领域，研究不同的方法来创建系统和机器，通过模拟人类智能来解决各种问题。创建这些程序和机器的复杂程度不同，从简单的基于规则的引擎到复杂的自我学习系统。人工智能涵盖了但不限于以下子领域：
- en: Robotics
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 机器人技术
- en: Natural language processing
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自然语言处理
- en: Rule-based systems
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基于规则的系统
- en: ML
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 机器学习（ML）
- en: The area we are particularly interested in now is ML.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在特别感兴趣的区域是机器学习。
- en: Examining ML
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 检验机器学习
- en: 'ML is a sub-area of AI that aims to create systems and machines that are able
    to learn from experience, without being explicitly programmed. As the name suggests,
    the system is able to observe its running environment, learn, and adapt itself
    without human intervention. Algorithms behind ML systems usually extract and improve
    knowledge from the data that is available to them, as well as conditions (such
    as **hyperparameters**), and feed back after trying different approaches to solve
    a particular problem:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: ML是人工智能的一个子领域，旨在创建能够从经验中学习，而不需要明确编程的系统。正如其名称所暗示的，系统能够观察其运行环境，学习，并在没有人为干预的情况下适应自己。ML系统背后的算法通常从它们可用的数据中提取和改进知识，以及条件（如**超参数**），并在尝试不同的方法来解决特定问题后进行反馈：
- en: '![Figure 1.1 – Heirarchy of AI, ML, DL'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 1.1 – 人工智能、机器学习、深度学习的层次结构'
- en: '](img/B16735_01_001.jpg)'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/B16735_01_001.jpg]'
- en: Figure 1.1 – Heirarchy of AI, ML, DL
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.1 – 人工智能、机器学习、深度学习的层次结构
- en: There are different types of ML algorithms; for instance, we can list decision
    tree-based, probabilistic-based, and neural networks. Each of these classes might
    have dozens of specific algorithms. Most of them will be covered in later sections
    of this book.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 有不同类型的ML算法；例如，我们可以列出基于决策树、基于概率和神经网络。每个类别可能都有数十种特定的算法。大多数算法将在本书的后续章节中介绍。
- en: 'As you might have noticed in *Figure 1.1*, we can be even more specific and
    break the ML field down into another very important topic for the Machine Learning
    Specialty exam: DL.'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你在*图1.1*中可能已经注意到的，我们可以更加具体，将机器学习领域细分为机器学习专业考试中另一个非常重要的主题：深度学习。
- en: Examining DL
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 检查深度学习
- en: DL is a subset of ML that aims to propose algorithms that connect multiple layers
    to solve a particular problem. The knowledge is then passed through layer by layer
    until the optimal solution is found. The most common type of DL algorithm is deep
    neural networks.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: DL（深度学习）是ML（机器学习）的一个子集，旨在提出将多个层次连接起来以解决特定问题的算法。知识随后通过一层层传递，直到找到最佳解决方案。最常见类型的DL算法是深度神经网络。
- en: At the time of writing this book, DL is a very hot topic in the field of ML.
    Most of the current state-of-the-art algorithms for machine translation, image
    captioning, and computer vision were proposed in the past few years and are a
    part of DL.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 在撰写本书时，DL是机器学习领域的一个非常热门的话题。目前大多数最先进的机器翻译、图像标题和计算机视觉算法都是在过去几年提出的，并且是深度学习的一部分。
- en: Now that we have an overview of types of AI, let's look at some of the ways
    we can classify ML.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们对人工智能的类型有了概述，让我们来看看我们可以如何对机器学习进行分类。
- en: Classifying supervised, unsupervised, and reinforcement learning
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 对监督学习、无监督学习和强化学习进行分类
- en: 'ML is a very extensive field of study; that''s why it is very important to
    have a clear definition of its sub-divisions. From a very broad perspective, we
    can split ML algorithms into two main classes: **supervised learning** and **unsupervised
    learning**.'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: ML是一个非常广泛的研究领域；这就是为什么对其子领域有一个清晰的定义非常重要。从非常广泛的角度来看，我们可以将ML算法分为两大类：**监督学习**和**无监督学习**。
- en: Introducing supervised learning
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 介绍监督学习
- en: 'Supervised algorithms use a class or label (from the input data) as support
    to find and validate the optimal solution. In *Figure 1.2*, there is a dataset
    that aims to classify fraudulent transactions from a bank:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 监督算法使用一个类别或标签（来自输入数据）作为支持来找到和验证最佳解决方案。在*图1.2*中，有一个旨在从银行中分类欺诈交易的数据库：
- en: '![Figure 1.2 – Sample dataset for supervised learning'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 1.2 – 监督学习样本数据集'
- en: '](img/B16735_01_002.jpg)'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/B16735_01_002.jpg]'
- en: Figure 1.2 – Sample dataset for supervised learning
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.2 – 监督学习样本数据集
- en: The first four columns are known as **features**, or **independent variables**,
    and they can be used by a supervised algorithm to find fraudulent patterns. For
    example, by combining those four features (day of the week, EST hour, transaction
    amount, and merchant type) and six observations (each row is technically one observation),
    you can infer that e-commerce transactions with a value greater than $5,000 and
    processed at night are potentially fraudulent cases.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 前四列被称为**特征**或**独立变量**，它们可以被监督算法用来找到欺诈模式。例如，通过结合这四个特征（星期几、EST小时、交易金额和商家类型）以及六个观察值（每一行实际上是观察值之一），你可以推断出价值超过5,000美元且在夜间处理的电子商务交易可能是欺诈案例。
- en: Important note
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: In a real scenario, we should have more observations in order to have statistical
    support to make this type of inference.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在实际场景中，我们应该有更多的观察值，以便为这种类型的推断提供统计支持。
- en: The key point is that we were able to infer a potential fraudulent pattern just
    because we knew, *a priori*, what is fraud and what is not fraud. This information
    is present in the last column of *Figure 1.2* and is commonly referred to as a
    target variable, label, response variable, or dependent variable. If the input
    dataset has a target variable, you should be able to apply supervised learning.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 关键点在于，我们能够推断出一个潜在的欺诈模式，仅仅因为我们事先知道什么是欺诈，什么不是欺诈。这种信息存在于*图1.2*的最后列，通常被称为目标变量、标签、响应变量或因变量。如果输入数据集有一个目标变量，你应该能够应用监督学习。
- en: 'In supervised learning, the target variable might store different types of
    data. For instance, it could be a binary column (yes or no), a multi-class column
    (class A, B, or C), or even a numerical column (any real number, such as a transaction
    amount). According to the data type of the target variable, you will find which
    type of supervised learning your problem refers to. *Figure 1.3* shows how to
    classify supervised learning into two main groups: **classification** and **regression**
    algorithms:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在监督学习中，目标变量可能存储不同类型的数据。例如，它可能是一个二元列（是或否），一个多类列（A类、B类或C类），甚至是一个数值列（任何实数，例如交易金额）。根据目标变量的数据类型，你可以找到你的问题属于哪种类型的监督学习。*图1.3*展示了如何将监督学习分为两大类：**分类**和**回归**算法：
- en: '![Figure 1.3 – Choosing the right type of supervised learning given the target
    variable'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '![图1.3 – 根据目标变量选择合适的监督学习类型'
- en: '](img/B16735_01_003.jpg)'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16735_01_003.jpg)'
- en: Figure 1.3 – Choosing the right type of supervised learning given the target
    variable
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.3 – 根据目标变量选择合适的监督学习类型
- en: While classification algorithms predict a class (either binary or multiple classes),
    regression algorithms predict a real number (either continuous or discrete).
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 而分类算法预测一个类别（要么是二元的，要么是多类的），回归算法预测一个实数（要么是连续的，要么是离散的）。
- en: 'Understanding data types is important to make the right decisions on ML projects.
    We can split data types into two main categories: numerical and categorical data.
    Numerical data can then be split into continuous or discrete subclasses, while
    categorical data might refer to ordinal or nominal data:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 理解数据类型对于在机器学习项目中做出正确的决策非常重要。我们可以将数据类型分为两大类：数值数据和分类数据。数值数据可以进一步分为连续或离散子类，而分类数据可能指的是有序或名义数据：
- en: '*Numerical/discrete data* refers to individual and countable items (for example,
    the number of students in a classroom or the number of items in an online shopping
    cart).'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*数值/离散数据*指的是单个和可数的项目（例如，教室里的学生数量或在线购物车中的商品数量）。'
- en: '*Numerical/continuous data* refers to an infinite number of possible measurements
    and they often carry decimal points (for example, temperature).'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*数值/连续数据*指的是无限多的可能测量值，它们通常带有小数点（例如，温度）。'
- en: '*Categorical/nominal data* refers to labeled variables with no quantitative
    value (for example, name or gender).'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*分类/名义数据*指的是没有定量值的标记变量（例如，姓名或性别）。'
- en: '*Categorical/ordinal data* adds the sense of order to a labeled variable (for
    example, education level or employee title level).'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*分类/有序数据*为标记变量增加了顺序感（例如，教育水平或员工职称等级）。'
- en: 'In other words, when choosing an algorithm for your project, you should ask
    yourself: do I have a target variable? Does it store categorical or numerical
    data? Answering these questions will put you in a better position to choose a
    potential algorithm that will solve your problem.'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 换句话说，在选择项目算法时，你应该问自己：我有一个目标变量吗？它存储的是分类数据还是数值数据？回答这些问题将使你处于更好的位置来选择一个可能解决问题的潜在算法。
- en: However, what if you don't have a target variable? In that case, we are facing
    unsupervised learning. Unsupervised problems do not provide labeled data; instead,
    they provide all the independent variables (or features) that will allow unsupervised
    algorithms to find patterns in the data. The most common type of unsupervised
    learning is **clustering**, which aims to group the observations of the dataset
    into different clusters, purely based on their features. Observations from the
    same cluster are expected to be similar to each other, but very different from
    observations from other clusters. Clustering will be covered in more detail in
    future chapters of this book.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，如果你没有目标变量怎么办？在这种情况下，我们面临的是无监督学习。无监督问题不提供标记数据；相反，它们提供所有独立的变量（或特征），这将允许无监督算法在数据中找到模式。最常见的一种无监督学习是**聚类**，其目的是将数据集的观测值分组到不同的簇中，纯粹基于它们的特征。来自同一簇的观测值预计将彼此相似，但与其他簇的观测值非常不同。聚类将在本书的后续章节中更详细地介绍。
- en: '**Semi-supervised learning** is also present in the ML literature. This type
    of algorithm is able to learn from partially labeled data (some observations contain
    a label and others do not).'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '**半监督学习**在机器学习文献中也有所提及。这类算法能够从部分标记的数据（一些观测值包含标签，而另一些则没有）中学习。'
- en: Finally, another learning approach that has been taken by another class of ML
    algorithms is **reinforcement learning**. This approach rewards the system based
    on the good decisions that it has made autonomously; in other words, the system
    learns by experience.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，另一种被另一类机器学习算法采用的学习方法是**强化学习**。这种方法根据系统自主做出的良好决策进行奖励；换句话说，系统通过经验学习。
- en: We have been discussing learning approaches and classes of algorithms at a very
    broad level. However, it is time to get specific and introduce the term **model**.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 我们一直在非常广泛地讨论学习方法和算法类别。然而，现在是时候具体化并引入**模型**这个术语了。
- en: The CRISP-DM modeling life cycle
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: CRISP-DM建模生命周期
- en: '**Modeling** is a very common term used in ML when we want to specify the steps
    taken to solve a particular problem. For example, we could create a binary classification
    model to predict whether those transactions from *Figure 1.2* are fraudulent or
    not.'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '**建模**是机器学习中一个非常常见的术语，当我们想要指定解决特定问题的步骤时使用。例如，我们可以创建一个二元分类模型来预测*图1.2*中的交易是否为欺诈。'
- en: 'A model, in this context, represents all the steps to create a solution as
    a whole, which includes (but is not limited to) the algorithm. The **Cross-Industry
    Standard Process for Data Mining**, more commonly referred to as **CRISP-DM**,
    is one of the methodologies that provides guidance on the common steps we should
    follow to create models. This methodology is widely used by the market and is
    covered in the AWS Machine Learning Specialty exam:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个背景下，一个模型代表创建解决方案的所有步骤，作为一个整体，包括（但不限于）算法。**跨行业数据挖掘标准流程**，更常被称为**CRISP-DM**，是提供指导我们应遵循的常见步骤以创建模型的方法之一。这种方法在市场上被广泛使用，并在AWS机器学习专业考试中有所涉及：
- en: '![Figure 1.4 – CRISP-DM methodology'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '![图1.4 – CRISP-DM方法论'
- en: '](img/B16735_01_004.jpg)'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片 B16735_01_004.jpg](img/B16735_01_004.jpg)'
- en: Figure 1.4 – CRISP-DM methodology
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.4 – CRISP-DM方法论
- en: Everything starts with business understanding, which will produce the business
    objectives (including success criteria), situation assessment, data mining goals,
    and project plan (with an initial assessment of tools and techniques). During
    the situation assessment, we should also look into an inventory of resources,
    requirements, assumptions and constraints, risks, terminology, costs, and benefits.
    Every single assumption and success criterion matters when we are modeling.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 一切始于业务理解，这将产生业务目标（包括成功标准），情况评估，数据挖掘目标，以及项目计划（包括对工具和技术的初步评估）。在情况评估期间，我们还应该考虑资源清单、需求、假设和约束、风险、术语、成本和收益。当我们建模时，每一个假设和成功标准都很重要。
- en: Then we pass on to data understanding, where we will collect raw data, describe
    it, explore it, and check its quality. This is an initial assessment of the data
    that will be used to create the model. Again, data scientists must be skeptical.
    You must be sure you understand all the nuances of the data and its source.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们进入数据理解阶段，在这个阶段我们将收集原始数据，描述它，探索它，并检查其质量。这是对将要用于创建模型的数据的初步评估。再次强调，数据科学家必须保持怀疑态度。你必须确保你理解数据的所有细微差别及其来源。
- en: The data preparation phase is actually the one that usually consumes most of
    the time during modeling. In this phase, we need to select and filter the data,
    clean it according to the task that needs to be performed, come up with new attributes,
    integrate the data with other data sources, and format it as expected by the algorithm
    that will be applied. These tasks are often called **feature engineering**.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 数据准备阶段实际上是建模过程中通常耗时最多的一个阶段。在这个阶段，我们需要选择和过滤数据，根据需要执行的任务对其进行清理，提出新的属性，将数据与其他数据源集成，并按照将要应用的算法的预期格式化。这些任务通常被称为**特征工程**。
- en: 'Once the data is prepared, we can finally start the modeling phase. Here is
    where the algorithms come in. We should start by ensuring the selection of the
    right technique. Remember: according to the presence or absence of a target variable
    (and its data type), we will have different algorithms to choose from. Each modeling
    technique might carry some implicit assumptions of which we have to be aware.
    For example, if you choose a multiple linear regression algorithm to predict house
    prices, you should be aware that this type of model expects a linear relationship
    between the variables of your data.'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦数据准备就绪，我们就可以最终开始建模阶段。这是算法发挥作用的地方。我们应该首先确保选择正确的技术。记住：根据是否存在目标变量（及其数据类型），我们将有不同的算法可供选择。每种建模技术可能都包含一些隐含的假设，我们必须意识到。例如，如果你选择多重线性回归算法来预测房价，你应该意识到这种类型的模型期望你的数据变量之间存在线性关系。
- en: There are hundreds of algorithms out there and each of them might have its own
    assumptions. After choosing the ones that you want to test in your project, you
    should spend some time checking their specifics. In later chapters of this book,
    we will cover some of them.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 现在有许多算法，每个算法可能都有自己的假设。在选择你想要在项目中测试的算法之后，你应该花一些时间检查它们的细节。本书的后续章节中，我们将介绍其中的一些。
- en: Important note
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: Some algorithms incorporate in their logic what we call **feature selection**.
    This is a step where the most important features will be selected to build your
    best model. Decision trees are examples of algorithms that perform feature selection
    automatically. We will cover feature selection in more detail later on, since
    there are different ways to select the best variables for your model.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 一些算法在其逻辑中包含了我们所说的**特征选择**。这是一个选择最重要的特征以构建最佳模型的过程。决策树是自动执行特征选择的算法的例子。我们将在稍后更详细地介绍特征选择，因为有不同的方法来选择最适合你模型的变量。
- en: During the modeling phase, you should also design a testing approach for the
    model, defining which evaluation metrics will be used and how the data will be
    split. With that in place, you can finally build the model by setting the hyperparameters
    of the algorithm and feeding the model with data. This process of feeding the
    algorithm with data to find a good estimator is known as the **training process**.
    The data used to feed the model is known as **training data**. There are different
    ways to organize the training and **testing data**, which we will cover in this
    chapter.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 在建模阶段，你还应该为模型设计一个测试方法，定义将使用哪些评估指标以及数据如何分割。有了这些，你就可以通过设置算法的超参数并给模型提供数据来最终构建模型。这个过程被称为**训练过程**。用于给模型提供数据的数据被称为**训练数据**。有不同方式来组织训练和**测试数据**，我们将在本章中介绍。
- en: Important note
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: ML algorithms are built by parameters and hyperparameters. These are learned
    from the data. For example, a decision-tree-based algorithm might learn from the
    training data that a particular feature should compose its root level based on
    information gain assessments. Hyperparameters, on the other hand, are used to
    control the learning process. Taking the same example about decision trees, we
    could specify the maximum allowed depth of the tree by specifying a pre-defined
    hyperparameter of any decision tree algorithm (regardless of the underlining training
    data). Hyperparameter tuning is a very important topic in the exam and will be
    covered in fine-grained detail later on.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 机器学习算法是由参数和超参数构建的。这些是从数据中学习得到的。例如，基于决策树的算法可能从训练数据中学习到，某个特征应该根据信息增益评估来组成其根级别。另一方面，超参数用于控制学习过程。以相同的决策树示例，我们可以通过指定任何决策树算法（无论其底层训练数据如何）的预定义超参数来指定树的最大允许深度。超参数调整是考试中的一个非常重要的话题，我们将在稍后详细讨论。
- en: Once the model is trained, we can evaluate and review results in order to propose
    the next steps. If results are not acceptable (based on our business success criteria),
    we should come back to earlier steps to check what else can be done to improve
    the model results. It can either be a small tuning in the hyperparameters of the
    algorithm, a new data preparation step, or even a redefinition of business drivers.
    On the other hand, if the model quality is acceptable, we can move to the deployment
    phase.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦模型训练完成，我们可以评估和审查结果，以便提出下一步的行动计划。如果结果不符合我们的业务成功标准，我们应该回到早期步骤，检查还能做些什么来改善模型结果。这可能包括对算法的超参数进行微调，增加新的数据处理步骤，甚至重新定义业务驱动因素。另一方面，如果模型质量可以接受，我们可以进入部署阶段。
- en: 'In this last phase of the CRISP-DM methodology, we have to think about the
    deployment plan, monitoring, and maintenance of the model. We usually look at
    this step from two perspectives: training and inference. The **training pipeline**
    consists of those steps needed to train the model, which includes data preparation,
    hyperparameter definition, data splitting, and model training itself. Somehow,
    we must store all the model artifacts somewhere, since they will be used by the
    next pipeline that needs to be developed: the **inference pipeline**.'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 在CRISP-DM方法的最后一个阶段，我们必须考虑模型的部署计划、监控和维护。我们通常从两个角度来考虑这一步：训练和推理。**训练流程**包括训练模型所需的步骤，这包括数据准备、超参数定义、数据拆分和模型训练本身。我们必须在某处存储所有模型工件，因为它们将被下一个需要开发的流程使用：**推理流程**。
- en: The inference pipeline just uses model artifacts to execute the model against
    brand-new observations (data that has never been seen by the model during the
    training phase). For example, if the model was trained to identify fraudulent
    transactions, this is the time where new transactions will pass through the model
    to be classified.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 推理流程仅使用模型工件来对全新的观测（在训练阶段从未被模型见过的数据）执行模型。例如，如果模型被训练来识别欺诈交易，那么这就是新交易将通过模型进行分类的时候。
- en: In general, models are trained once (through the training pipeline) and executed
    many times (through the inference pipeline). However, after some time, it is expected
    that there will be some model degradation, also known as **model drift**. This
    phenomenon happens because the model is usually trained in a static training set
    that aims to represent the business scenario at a given point in time; however,
    businesses evolve, and it might be necessary to retrain the model on more recent
    data to capture new business aspects. That's why it is important to keep tracking
    model performance even after model deployment.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，模型只通过训练流程进行一次训练，并通过推理流程多次执行。然而，经过一段时间后，预期会出现一些模型退化，也称为**模型漂移**。这种现象发生是因为模型通常在静态的训练集上训练，旨在代表某一时间点的业务场景；然而，业务是不断发展的，可能需要使用更近期的数据重新训练模型以捕捉新的业务方面。这就是为什么在模型部署后，跟踪模型性能同样重要的原因。
- en: 'The CRISP-DM methodology is so important to the context of the AWS Machine
    Learning Specialty exam that, if you look at the four domains covered by AWS,
    you will realize that they were generalized from the CRISP-DM stages: data engineering,
    exploratory data analysis, modeling, and ML implementation and operations.'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: CRISP-DM方法对于AWS机器学习专业考试的内容至关重要，如果你查看AWS涵盖的四个领域，你会意识到它们是从CRISP-DM阶段概括出来的：数据工程、探索性数据分析、建模和机器学习实施与运营。
- en: We now understand all the key stages of a modeling pipeline and we know that
    the algorithm itself is just part of a broad process! Next, let's see how we can
    split our data to create and validate ML models.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在已经理解了建模流程的所有关键阶段，并且我们知道算法本身只是广泛过程的一部分！接下来，让我们看看我们如何拆分数据以创建和验证机器学习模型。
- en: Data splitting
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据拆分
- en: Training and evaluating ML models are key tasks of the modeling pipeline. ML
    algorithms need data to find relationships among features in order to make inferences,
    but those inferences need to be validated before they are moved to production
    environments.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 训练和评估机器学习模型是建模流程中的关键任务。机器学习算法需要数据来发现特征之间的关系，以便进行推断，但这些推断在移至生产环境之前需要得到验证。
- en: The dataset used to train ML models is commonly called the training set. This
    training data must be able to represent the real environment where the model will
    be used; it will be useless if that requirement is not met.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 用于训练机器学习模型的集合通常被称为训练集。这些训练数据必须能够代表模型将使用的真实环境；如果不符合这一要求，将毫无用处。
- en: Coming back to our fraud example presented in *Figure 1.2*, based on the training
    data, we found that e-commerce transactions with a value greater than $5,000 and
    processed at night are potentially fraudulent cases. With that in mind, after
    applying the model in a production environment, the model is supposed to flag
    similar cases, as learned during the training process.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 回到我们在*图1.2*中提出的欺诈示例，根据训练数据，我们发现价值超过5,000美元且在夜间处理的电子商务交易可能是欺诈案例。考虑到这一点，在将模型应用于生产环境后，模型应该标记出在训练过程中学习到的类似案例。
- en: 'Therefore, if those cases only exist in the training set, the model will flag
    **false positive** cases in production environments. The opposite scenario is
    also valid: if there is a particular fraud case in production data, not reflected
    in the training data, the model will flag a lot of **false negative** cases. False
    positives and false negatives ratios are just two of many quality metrics that
    we can use for model validation. These metrics will be covered in much more detail
    later on.'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，如果这些情况仅存在于训练集中，模型将在生产环境中标记**假阳性**案例。相反的情况也是有效的：如果生产数据中存在某个未反映在训练数据中的欺诈案例，模型将标记大量的**假阴性**案例。假阳性和假阴性比率只是我们可以用于模型验证的许多质量指标中的两个。这些指标将在稍后的内容中详细讨论。
- en: 'By this point, you should have a clear understanding of the importance of having
    a good training set. Now, supposing we do have a valid training set, how could
    we have some level of confidence that this model will perform well in production
    environments? The answer is: using testing and validation sets:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，您应该已经清楚地理解了拥有一个好的训练集的重要性。现在，假设我们确实有一个有效的训练集，我们如何能够有一定程度的信心认为这个模型将在生产环境中表现良好？答案是：使用测试集和验证集：
- en: '![Figure 1.5 – Data splitting'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '![图1.5 – 数据拆分]'
- en: '](img/B16735_01_005.jpg)'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片B16735_01_005.jpg]'
- en: Figure 1.5 – Data splitting
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.5 – 数据拆分
- en: '*Figure 1.5* shows the different types of data splitting that we can have during
    training and inference pipelines. The training data is the one used to create
    the model and the testing data is the one used to extract final model quality
    metrics. The testing data *cannot* be used during the training process for any
    reason other than to extract model metrics.'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '*图1.5*展示了在训练和推理管道中我们可以有的不同数据拆分方式。训练数据是用于创建模型的数据，而测试数据是用于提取最终模型质量指标的数据。出于任何原因，除了提取模型指标之外，测试数据都不能在训练过程中使用。'
- en: 'The reason to avoid using the testing data during training is simple: we *cannot*
    let the model learn on top of the data that will be used to validate it. This
    technique of holding one piece of the data for testing is often called **hold-out
    validation**.'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 避免在训练过程中使用测试数据的原因很简单：我们**不能**让模型在用于验证的数据之上进行学习。这种保留一部分数据用于测试的技术通常被称为**保留法验证**。
- en: The box on the right side of *Figure 1.5* represents the production data. Production
    data usually comes in continuously and we have to execute the inference pipeline
    in order to extract model results from it. No training, nor any other type of
    recalculation, is performed on top of production data; we just have to pass it
    through the inference pipeline as it is.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '*图1.5*右侧的框代表生产数据。生产数据通常连续不断地到来，我们必须执行推理管道以从中提取模型结果。在生产数据上不进行任何训练，也不进行任何其他类型的重新计算；我们只需将其作为它本身通过推理管道即可。'
- en: From a technical perspective, most of the ML libraries implement training steps
    with the `.fit` method, while inference steps are implemented by the `.transform`
    *or* `.predict` method. Again, this is just a common pattern used by most ML libraries,
    but be aware that you might find different name conventions across ML libraries.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 从技术角度来看，大多数机器学习库使用`.fit`方法实现训练步骤，而推理步骤则通过`.transform`或`.predict`方法实现。再次强调，这只是一个大多数机器学习库使用的常见模式，但请注意，您可能会在不同的机器学习库中找到不同的命名约定。
- en: Still looking at *Figure 1.5*, there is another box, close to the training data,
    named **validation data**. This is a subset of the training set often used to
    support the creation of the best model, before moving to the testing phase. We
    will talk about that box in much more detail, but first, let's explain why we
    need them.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 仍然查看*图1.5*，还有一个靠近训练数据的框，称为**验证数据**。这是训练集的一个子集，通常用于在进入测试阶段之前支持最佳模型创建。我们将更详细地讨论这个框，但首先，让我们解释为什么我们需要它们。
- en: Overfitting and underfitting
  id: totrans-93
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 过拟合和欠拟合
- en: 'ML models might suffer from two types of fitting issues: **overfitting** and
    **underfitting**. Overfitting means that your model performs very well in the
    training data, but cannot be generalized to other datasets, such as testing and,
    even worse, production data. In other words, if you have an overfitted model,
    it only works on your training data.'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 机器学习模型可能会遭受两种类型的拟合问题：**过拟合**和**欠拟合**。过拟合意味着你的模型在训练数据上表现非常好，但不能推广到其他数据集，如测试数据，甚至更糟糕的是，生产数据。换句话说，如果你有一个过拟合的模型，它只能在你的训练数据上工作。
- en: When we are building ML models, we want to create solutions that are able to
    generalize what they have learned and infer decisions on other datasets that follow
    the same data distribution. A model that only works on the data that it was trained
    on is useless. Overfitting usually happens due to the large number of features
    or the lack of configuration of the hyperparameters of the algorithm.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们在构建机器学习模型时，我们希望创建能够推广他们所学的知识，并在遵循相同数据分布的其他数据集上推断决策的解决方案。一个仅在训练数据上工作的模型是无用的。过拟合通常是由于特征数量过多或算法超参数配置不当造成的。
- en: On the other hand, underfitted models cannot fit the data during the training
    phase. As a result, they are so generic that they can't perform well with the
    training, testing, or production data. Underfitting usually happens due to the
    lack of good features/observations or due to the lack of time to train the model
    (some algorithms need more iterations to properly fit the model).
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，欠拟合模型在训练阶段无法拟合数据。结果，它们过于通用，无法在训练、测试或生产数据上表现良好。欠拟合通常是由于缺乏良好的特征/观测值或由于缺乏训练模型的时间（某些算法需要更多的迭代来正确拟合模型）。
- en: Both overfitting and underfitting need to be avoided. There are many modeling
    techniques to work around that. For instance, let's focus on the commonly used
    **cross-validation** technique and its relationship with the validation box showed
    in *Figure 1.5*.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 需要避免过拟合和欠拟合。有许多建模技术可以解决这个问题。例如，让我们关注常用的**交叉验证**技术及其与*图1.5*中显示的验证框的关系。
- en: Applying cross-validation and measuring overfitting
  id: totrans-98
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 应用交叉验证和测量过拟合
- en: Cross-validation is a technique where we split the training set into training
    and validation sets. The model is then trained on the training set and tested
    on the validation set. The most common cross-validation strategy is known as **k-fold
    cross validation**, where *k* is the number of splits of the training set.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 交叉验证是一种技术，我们将训练集分成训练集和验证集。然后，模型在训练集上训练并在验证集上测试。最常用的交叉验证策略被称为**k折交叉验证**，其中*k*是训练集分割的数量。
- en: 'Using k-fold cross-validation and assuming the value of *k* equals 10, we are
    splitting the train set into 10 folds. The model will be trained and tested 10
    times. On each iteration, it uses nine splits for training and leaves one split
    for testing. After 10 executions, the evaluation metrics extracted from each iteration
    are averaged and will represent the final model performance during the training
    phase, as shown in *Figure 1.6*:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 使用k折交叉验证并假设*k*的值为10，我们将训练集分成10个部分。模型将被训练和测试10次。在每个迭代中，它使用九个部分进行训练，留下一个部分进行测试。经过10次执行后，从每个迭代中提取的评估指标将被平均，并将代表训练阶段最终的模型性能，如图*图1.6*所示：
- en: '![Figure 1.6 – Cross-validation in action'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 1.6 – 交叉验证的实际应用'
- en: '](img/B16735_01_006.jpg)'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/B16735_01_006.jpg]'
- en: Figure 1.6 – Cross-validation in action
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.6 – 交叉验证的实际应用
- en: Another common cross-validation technique is known as **leave one out cross-validation**
    (**LOOCV**). In this approach, the model is executed many times and, with each
    iteration, one observation is separated for testing and all the others are used
    for training.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种常见的交叉验证技术被称为**留一法交叉验证**（**LOOCV**）。在这种方法中，模型被多次执行，并且每次迭代中，一个观测值被分离出来用于测试，其余的用于训练。
- en: 'There are many advantages of using cross-validation during training:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 在训练过程中使用交叉验证有许多优点：
- en: We mitigate overfitting in the training data, since the model is always trained
    on a particular chunk of data and tested on another chunk that hasn't been used
    for training.
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们在训练数据中减轻过拟合，因为模型总是训练在特定数据块上，并在另一个未用于训练的数据块上进行测试。
- en: We avoid overfitting in the test data, since there is no need to keep using
    the testing data to optimize the model.
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们避免在测试数据中过拟合，因为不需要继续使用测试数据来优化模型。
- en: We expose the presence of overfitting or underfitting. If the model performance
    in the training/validation data is very different from the performance observed
    in the testing data, something is wrong.
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们揭示了过拟合或欠拟合的存在。如果模型在训练/验证数据中的性能与在测试数据中观察到的性能非常不同，那么就有问题。
- en: Let's elaborate a little more on the third item on that list, since this is
    covered in the AWS Machine Learning Specialty exam. Let's assume we are creating
    a binary classification model, using cross-validation during training and using
    a testing set to extract final metrics (hold-out validation). If we get 80% accuracy
    in the cross-validation results and 50% accuracy in the testing set, it means
    that the model was overfitted to the train set, and cannot be generalized to the
    test set.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们更详细地阐述列表上的第三项，因为这是AWS机器学习专业考试中涵盖的内容。假设我们正在创建一个二元分类模型，在训练期间使用交叉验证，并使用测试集来提取最终指标（保留验证）。如果我们得到交叉验证结果的80%准确率和测试集的50%准确率，这意味着模型过度拟合了训练集，不能推广到测试集。
- en: On the other hand, if we get 50% accuracy in the training set and 80% accuracy
    in the test set, there is a systemic issue in the data. It is very likely that
    the training and testing sets do not follow the same distribution.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，如果我们训练集的准确率为50%，而测试集的准确率为80%，那么数据中存在系统问题。很可能训练集和测试集没有遵循相同的分布。
- en: Important note
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: Accuracy is a model evaluation metric commonly used on classification models.
    It measures how often the model made a correct decision during its inference process.
    We have selected this metric just for the sake of example, but be aware that there
    are many other evaluation metrics applicable for each type of model (which will
    be covered at the appropriate time).
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 准确率是分类模型中常用的模型评估指标。它衡量模型在推理过程中做出正确决策的频率。我们选择这个指标只是为了举例，但请注意，还有许多其他适用于每种类型模型的评估指标（将在适当的时候介绍）。
- en: Bootstrapping methods
  id: totrans-113
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Bootstrapping方法
- en: Cross-validation is a good strategy to validate ML models, and you should try
    it in your daily activities as a data scientist. However, you should also know
    about other resampling techniques available out there. **Bootstrapping** is one
    of them.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 交叉验证是验证机器学习模型的好策略，你应该尝试将其作为数据科学家日常活动的一部分。然而，你也应该了解其他可用的重采样技术。**Bootstrapping**就是其中之一。
- en: While cross-validation works **with no replacement**, a bootstrapping approach
    works **with replacement**. With replacement means that, while you are drawing
    multiple random samples from a population dataset, the same observation might
    be duplicated across samples.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然交叉验证**不替换**，但bootstrapping方法**替换**。替换意味着，当你从总体数据集中抽取多个随机样本时，相同的观测值可能会在样本中重复。
- en: 'Usually, bootstrapping is not used to validate models as we do in the traditional
    cross-validation approach. The reason is simple: since it works with replacement,
    the same observation used for training could potentially be used for testing,
    too. This would result in inflated model performance metrics, since the estimator
    is likely to be correct when predicting an observation that was already seen in
    the training set.'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，bootstrapping不会像我们在传统的交叉验证方法中做的那样用来验证模型。原因很简单：因为它使用替换，用于训练的相同观测值可能会被用于测试。这会导致模型性能指标膨胀，因为估计器在预测训练集中已经看到的观测值时很可能是正确的。
- en: Bootstrapping is often used by ML algorithms in an embedded way that requires
    resampling capabilities to process the data. In this context, bootstrapping is
    not being used to *validate* the model, but to *create* the model. **Random forest**,
    which will be covered in the algorithms chapter, is one of those algorithms that
    uses bootstrapping internally for model building.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrapping通常被机器学习算法以嵌入式方式使用，这需要重采样能力来处理数据。在这种情况下，bootstrapping不是用来*验证*模型，而是用来*创建*模型。将在算法章节中介绍的**随机森林**就是那些在模型构建内部使用bootstrapping的算法之一。
- en: Designing a good data splitting/sampling strategy is crucial to the success
    of the model or the algorithm. You should come up with different approaches to
    split your data, check how the model is performing on each split, and make sure
    those splits represent the real scenario where the model will be used.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 设计一个好的数据分割/采样策略对于模型或算法的成功至关重要。你应该想出不同的方法来分割你的数据，检查模型在每个分割上的表现，并确保这些分割代表了模型将被使用的真实场景。
- en: The variance versus bias trade-off
  id: totrans-119
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 偏差与方差权衡
- en: 'Any ML model is supposed to contain errors. There are three types of errors
    that we can find on models: **bias** error, **variance** error, and **unexplained**
    error. The last one, as expected, cannot be explained. It is often related to
    the context of the problem and the relationships between the variables, and we
    can''t control it.'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 任何机器学习模型都应包含错误。我们可以在模型上找到三种类型的错误：**偏差**错误、**方差**错误和**未解释**错误。最后一个，正如预期的那样，无法解释。它通常与问题的上下文和变量之间的关系有关，我们无法控制它。
- en: The other two errors can be controlled during modeling. We usually say that
    there is a trade-off between bias and variance errors because one will influence
    the other. In this case, increasing bias will decrease variance and vice versa.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 其他两个错误可以在建模过程中得到控制。我们通常说偏差和方差错误之间存在权衡，因为一个会影响到另一个。在这种情况下，增加偏差会减少方差，反之亦然。
- en: Bias error relates to assumptions taken by the model to learn the target function,
    the one that we want to solve. Some types of algorithms, such as linear algorithms,
    usually carry over that type of error because they make a lot of assumptions during
    model training. For example, linear models assume that the relationship present
    in the data is linear. Linear regression and logistic regression are types of
    algorithms that, in general, contain high bias. Decision trees, on the other hand,
    are types of algorithms that make fewer assumptions about the data and contain
    less bias.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 偏差错误与模型为了学习目标函数（我们想要解决的问题）所做出的假设相关。某些类型的算法，如线性算法，通常会在模型训练期间携带这种类型的错误，因为它们在模型训练期间做出了很多假设。例如，线性模型假设数据中存在线性关系。线性回归和逻辑回归是通常包含高偏差的算法类型。另一方面，决策树是那些对数据做出较少假设的算法类型，包含较少的偏差。
- en: Variance relates to the difference of estimations that the model performs on
    different training data. Models with high variance usually overfit to the training
    set. Decision trees are examples of algorithms with high variance (they usually
    rely a lot on specifics of the training set, failing to generalize), and linear/logistic
    regression are examples of algorithms with low variance. It does not mean that
    decision trees are bad estimators; it just means that we need to prune (optimize)
    them during training.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 方差与模型在不同训练数据上执行的估计差异相关。具有高方差的模型通常会对训练集过度拟合。决策树是具有高方差的算法示例（它们通常非常依赖于训练集的特定情况，无法进行泛化），而线性/逻辑回归是具有低方差的算法示例。这并不意味着决策树是差的估计器；这仅仅意味着我们需要在训练过程中对其进行修剪（优化）。
- en: That said, the goal of any model is to minimize both bias and variance. However,
    as already mentioned, each one will impact the other in the opposite direction.
    For the sake of demonstration, let's use a decision tree to understand how this
    trade-off works.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 话虽如此，任何模型的目标都是最小化偏差和方差。然而，如前所述，每个都会以相反的方向影响另一个。为了演示起见，让我们使用决策树来了解这种权衡是如何工作的。
- en: Decision trees are nonlinear algorithms and often contain low bias and high
    variance. In order to decrease variance, we can prune the tree and set the `max_depth`
    hyperparameter (the maximum allowed depth of the tree) to 10\. That will force
    a more generic model, reducing variance. However, that change will also force
    the model to make more assumptions (since it is now more generic) and increase
    bias.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 决策树是非线性算法，通常具有低偏差和高方差。为了减少方差，我们可以修剪树并设置`max_depth`超参数（树的最大允许深度）为10。这将迫使模型更加通用，从而减少方差。然而，这种变化也将迫使模型做出更多假设（因为它现在更加通用）并增加偏差。
- en: Shuffling your training set
  id: totrans-126
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 打乱训练集
- en: Now that you know what variance and data splitting are, let's dive a little
    deeper into the training dataset requirements. You are very likely to find questions
    around data shuffling in the exam. This process consists of randomizing your training
    dataset before you start using it to fit an algorithm.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经了解了方差和数据分割，让我们更深入地探讨训练数据集的要求。你很可能在考试中遇到关于数据打乱的问题。这个过程包括在开始使用训练数据集来拟合算法之前对其进行随机化。
- en: Data shuffling will help the algorithm to reduce variance by creating a more
    generalizable model. For example, let's say your training represents a binary
    classification problem and it is sorted by the target variable (all cases belonging
    to class "0" appear first, then all the cases belonging to class "1").
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 数据洗牌将帮助算法通过创建更具泛化能力的模型来减少方差。例如，假设你的训练数据代表一个二元分类问题，并且它按目标变量排序（所有属于类别“0”的案例首先出现，然后是所有属于类别“1”的案例）。
- en: When you fit an algorithm on this sorted data (especially some algorithms that
    rely on **batch processing**), it will take strong assumptions on the pattern
    of one of the classes, since it is very likely that it won't be able to create
    random batches of data with a good representation of both classes. Once the algorithm
    builds strong assumptions about the training data, it might be difficult for it
    to change them.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 当你在排序数据上拟合算法（尤其是依赖于**批处理**的一些算法）时，它将对其中一个类别的模式做出强烈的假设，因为它很可能无法创建包含两个类别良好代表性的随机批次数据。一旦算法对训练数据建立了强烈的假设，它可能很难改变这些假设。
- en: Important note
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: Some algorithms are able to execute the training process by fitting the data
    in chunks, also known as batches. This approach lets the model learn more frequently,
    since it will make partial assumptions after processing each batch of data (instead
    of making decisions only after processing the entire dataset).
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 一些算法能够通过将数据分成块（也称为批次）来执行训练过程。这种方法使得模型能够更频繁地学习，因为它会在处理完每一批数据后做出部分假设（而不是在处理完整个数据集后做出决策）。
- en: On the other hand, there is no need to shuffle the test set, since it will be
    used only by the inference process to check model performance.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，没有必要洗牌测试集，因为它将仅用于推理过程以检查模型性能。
- en: Modeling expectations
  id: totrans-133
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 建模期望
- en: So far, we have talked about model building, validation, and management. Let's
    complete the foundations of ML by talking about a couple of other expectations
    while modeling.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经讨论了模型构建、验证和管理。让我们通过在建模时讨论一些其他期望来完成机器学习的基础。
- en: 'The first one is **parsimony**. Parsimony describes models that offer the simplest
    explanation and fits the best results when compared with other models. Here''s
    an example: while creating a linear regression model, you realize that adding
    10 more features will improve your model performance by 0.001%. In this scenario,
    you should consider whether this performance improvement is worth the cost of
    parsimony (since your model will become more complex). Sometimes it is worth it,
    but most of the time it is not. You need to be skeptical and think according to
    your business case.'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个原则是**简约性**。简约性描述的是提供最简单解释且与其他模型相比拟合最佳结果的模型。以下是一个例子：在创建线性回归模型时，你发现添加10个更多特征只能将你的模型性能提高0.001%。在这种情况下，你应该考虑这种性能提升是否值得简约性的成本（因为你的模型将变得更加复杂）。有时这是值得的，但大多数时候并不值得。你需要保持怀疑态度，并根据你的业务案例进行思考。
- en: 'Parsimony directly supports **interpretability**. The simpler your model is,
    the easier it is to explain it. However, there is a battle between interpretability
    and **predictivity**: if you focus on predictive power, you are likely to lose
    some interpretability. Again, be a proper data scientist and select what is better
    for your use case.'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 简约性直接支持**可解释性**。你的模型越简单，解释它就越容易。然而，在可解释性和**预测性**之间存在着一场斗争：如果你专注于预测能力，你很可能会失去一些可解释性。再次强调，要成为一名合格的数据科学家，选择对你用例更好的方案。
- en: Introducing ML frameworks
  id: totrans-137
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍机器学习框架
- en: Being aware of some ML frameworks will put you in a much better position to
    pass the AWS Machine Learning Specialty exam. There is no need to master these
    frameworks, since this is not a framework-specific certification; however, knowing
    some common terms and solutions will help you to understand the context of the
    problems/questions.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 了解一些机器学习框架将使你在通过AWS机器学习专业考试时处于更有利的地位。没有必要掌握这些框架，因为这不是针对特定框架的认证；然而，了解一些常见术语和解决方案将有助于你理解问题/问题的背景。
- en: '**scikit-learn** is probably the most important ML framework that you should
    be aware of. This is an open source Python package that provides implementations
    of ML algorithms such as decision trees, support vector machines, linear regression,
    and many others. It also implements classes for data preprocessing, for example,
    one-hot encoding, a label encoder, principal component analysis, and so on. All
    these preprocessing methods (and many others) will be covered in later sections
    of this book.'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '**scikit-learn**可能是你应该了解的最重要的机器学习框架。这是一个开源的Python包，提供了诸如决策树、支持向量机、线性回归等机器学习算法的实现。它还实现了数据预处理类，例如，独热编码、标签编码、主成分分析等。本书后面的章节将涵盖所有这些预处理方法（以及许多其他方法）。'
- en: 'The downside of scikit-learn is the fact that it needs customization to scale
    up through multiple machines. There is another ML library that is very popular
    because of the fact that it can handle multiprocessing straight away: **Spark''s
    ML library**.'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: scikit-learn的缺点是需要对多台机器进行定制以进行扩展。还有一个机器学习库因其能够直接处理多进程而非常受欢迎：**Spark的机器学习库**。
- en: As the name suggests, this is an ML library that runs on top of **Apache Spark**,
    which is a unified analytical multi-processing framework used to process data
    on multiple machines. AWS offers a specific service that allows developers to
    create Spark clusters with a few clicks, known as **EMR**.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 如其名所示，这是一个在**Apache Spark**之上运行的机器学习库，Apache Spark是一个用于在多台机器上处理数据的统一分析多处理框架。AWS提供了一种特定的服务，允许开发者通过几点击就能创建Spark集群，称为**EMR**。
- en: The Spark ML library is in constant development. As of the time of writing,
    it offers support to many ML classes of algorithms, such as classification and
    regression, clustering, and collaborative filtering. It also offers support for
    basic statistics computation, such as correlations and some hypothesis tests,
    as well as many data transformations, such as one-hot encoding, principal component
    analysis, min-max scaling, and others.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: Spark机器学习库正在不断发展。截至写作时，它支持许多机器学习算法类别，如分类和回归、聚类和协同过滤。它还提供了对基本统计计算的支持，如相关性和一些假设检验，以及许多数据转换，如独热编码、主成分分析、最小-最大缩放等。
- en: Another very popular ML framework is known as **TensorFlow**. This ML framework
    was created by the Google team and it is used for numerical computation and large-scale
    ML model development. TensorFlow implements not only traditional ML algorithms,
    but also DL models.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个非常受欢迎的机器学习框架被称为**TensorFlow**。这个机器学习框架是由谷歌团队创建的，用于数值计算和大规模机器学习模型开发。TensorFlow不仅实现了传统的机器学习算法，还实现了深度学习模型。
- en: TensorFlow is considered a low-level API for model development, which means
    that it can be very complex to develop more sophisticated models, such as **transformers**,
    for text mining. As an attempt to facilitate model development, other ML frameworks
    were built on top of TensorFlow to make it easier. One of these high-level frameworks
    is **Keras**. With Keras, developers can create complex DL models with just a
    few lines of code. More recently, Keras was incorporated into TensorFlow and it
    can be now called inside the TensorFlow library.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: TensorFlow被视为模型开发的低级API，这意味着开发更复杂的模型，如**转换器**，用于文本挖掘可能会非常复杂。为了便于模型开发，其他机器学习框架被构建在TensorFlow之上，使其更容易使用。其中一个是**Keras**。使用Keras，开发者只需几行代码就能创建复杂的深度学习模型。最近，Keras被纳入TensorFlow，现在可以在TensorFlow库中调用。
- en: '**MXNet** is another open source DL library. Using MXNet, we can scale up neural
    network-based models using multiple GPUs running on multiples machines. It also
    supports different programming languages, such as Python, R, Scala, and Java.'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: '**MXNet**是另一个开源的深度学习库。使用MXNet，我们可以通过在多台机器上运行多个GPU来扩展基于神经网络的模型。它还支持不同的编程语言，如Python、R、Scala和Java。'
- en: '**Graphical processing unit** (**GPU**) support is particularly important in
    DL libraries such as TensorFlow and MXNet. These libraries allow developers to
    create and deploy neural network-based models with multiple layers. The training
    process of neural networks relies a lot on matrix operations, which perform much
    better on GPUs than on CPUs. That''s why these DL libraries offer GPU support.
    AWS also offers EC2 instances with GPU enabled.'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: '**图形处理单元**（**GPU**）在深度学习库如TensorFlow和MXNet中支持尤为重要。这些库允许开发者创建和部署具有多层神经网络的模型。神经网络的训练过程很大程度上依赖于矩阵运算，而这些运算在GPU上比在CPU上执行得更好。这就是为什么这些深度学习库提供GPU支持。AWS还提供了带有GPU功能的EC2实例。'
- en: These ML frameworks need a special channel to communicate with GPU units. NVIDIA,
    the most common supplier of GPUs nowadays, has created an API called the **Compute
    Unified Device Architecture** (**CUDA**). CUDA is used to configure GPU units
    on NVIDIA devices, for example, setting up caching memory and the number of threads
    needed to train a neural network model. There is no need to master CUDA or GPU
    architecture for the AWS Machine Learning Specialty exam, but you definitely need
    to know what they are and how DL models take advantage of them.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 这些机器学习框架需要一个特殊的通道来与 GPU 单元通信。NVIDIA，如今最常用的 GPU 供应商，已经创建了一个名为 **Compute Unified
    Device Architecture** （**CUDA**） 的 API。CUDA 用于配置 NVIDIA 设备上的 GPU 单元，例如，设置缓存内存和训练神经网络模型所需的线程数量。对于
    AWS 机器学习专业考试，你不需要掌握 CUDA 或 GPU 架构，但你确实需要了解它们是什么以及深度学习模型如何利用它们。
- en: Last, but not least, you should also be aware of some development frameworks
    widely used by the data science community, but not necessarily to do ML. These
    frameworks interoperate with ML libraries to facilitate data manipulation and
    calculations. For example, **pandas** is a Python library that provides data processing
    capabilities, and **NumPy** is an open source Python library that provides numerical
    computing.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 最后但同样重要的是，你还应该了解一些数据科学社区广泛使用的开发框架，但并不一定用于机器学习。这些框架与机器学习库交互，以促进数据处理和计算。例如，**pandas**
    是一个提供数据处理能力的 Python 库，而 **NumPy** 是一个提供数值计算的开放源代码 Python 库。
- en: These terms and libraries are so incorporated into data scientists' daily routines
    that they might come up during the exam to explain some problem domain for you.
    Being aware of what they are will help you to quickly understand the context of
    the question.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 这些术语和库已经如此融入数据科学家的日常工作中，以至于在考试中可能会用到它们来为你解释某些问题领域。了解它们是什么将帮助你快速理解问题的上下文。
- en: ML in the cloud
  id: totrans-150
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 云端机器学习
- en: ML has gone to the cloud and developers can now use it as a service. AWS has
    implemented ML services in different levels of abstraction. ML application services,
    for example, aim to offer out-of-the-box solutions for specific problem domains.
    **AWS Lex** is a very clear example of an ML application as a service, where people
    can implement chatbots with minimum development.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 机器学习已经走向云端，开发者现在可以将其作为一项服务来使用。AWS 在不同抽象级别实现了机器学习服务。例如，机器学习应用服务旨在为特定问题领域提供即插即用的解决方案。**AWS
    Lex** 是一个机器学习作为服务的清晰示例，人们可以以最小的开发量实现聊天机器人。
- en: '**AWS Rekognition** is another example, which aims to identify objects, people,
    text, scenes, and activities in images and videos. AWS provides many other ML
    application services that will be covered in the next chapter of this book.'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: '**AWS Rekognition** 是另一个例子，旨在识别图像和视频中的物体、人物、文本、场景和活动。AWS 提供了许多其他机器学习应用服务，这些服务将在本书的下一章中介绍。'
- en: Apart from application services, AWS also provides ML development platforms,
    which is the case with **SageMaker**. Unlike out-of-the-box services such as AWS
    Lex and Rekognition, SageMaker is a development platform that will let you build,
    train, and deploy your own models with much more flexibility.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 除了应用服务之外，AWS 还提供了机器学习开发平台，**SageMaker** 就是这种情况。与 AWS Lex 和 Rekognition 这样的即插即用服务不同，SageMaker
    是一个开发平台，它将允许你以更大的灵活性构建、训练和部署自己的模型。
- en: SageMaker speeds up the development and deployment process by automatically
    handling the necessary infrastructure for the training and inference pipelines
    of your models. Behind the scenes, SageMaker orchestrates other AWS services (such
    as EC2 instances, load balancers, auto-scaling, and so on) to create a scalable
    environment for ML projects. SageMaker is probably the most important service
    that you should master for the AWS Machine Learning Specialty exam, and it will
    be covered in detail in a separate section. For now, you should focus on understanding
    the different approaches that AWS uses to offers ML-related services.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: SageMaker 通过自动处理模型训练和推理管道所需的基础设施来加速开发和部署过程。在幕后，SageMaker 协调其他 AWS 服务（如 EC2 实例、负载均衡器、自动扩展等）以创建可扩展的机器学习项目环境。SageMaker
    可能是你在 AWS 机器学习专业考试中应该掌握的最重要服务，它将在单独的部分中详细介绍。现在，你应该专注于理解 AWS 提供的与机器学习相关的服务的不同方法。
- en: 'The third option that AWS offers for deploying ML models is the most generic
    and flexible one: you can deploy ML models by combining different AWS services
    and managing them individually. This is essentially doing what SageMaker does
    for you, building your applications from scratch. For example, you could use EC2
    instances, load balancers, auto-scaling, and an API gateway to create an inference
    pipeline to a particular model. If you prefer, you can also use AWS serverless
    architecture to deploy your solution, for example, using **AWS Lambda functions**.'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: AWS提供的用于部署机器学习模型的第三种选项是最通用和灵活的：你可以通过结合不同的AWS服务并单独管理它们来部署机器学习模型。这本质上就是SageMaker为你做的事情，从头开始构建你的应用程序。例如，你可以使用EC2实例、负载均衡器、自动扩展和API网关来创建一个针对特定模型的推理管道。如果你愿意，你也可以使用AWS无服务器架构来部署你的解决方案，例如，使用**AWS
    Lambda函数**。
- en: Summary
  id: totrans-156
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: We are now heading to the end of this chapter, where we have covered several
    important topics about the foundations of ML. We started the chapter with a theoretical
    discussion about AI, ML, and DL and how this entire field has grown over the past
    few years due to the advent of big data platforms and cloud providers.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在正走向本章的结尾，我们已经讨论了关于机器学习基础的一些重要主题。我们以关于人工智能、机器学习和深度学习的理论讨论开始本章，并讨论了由于大数据平台和云服务提供商的出现，这个整个领域在过去几年中是如何发展的。
- en: We then moved on to the differences between supervised, unsupervised, and reinforcement
    learning, highlighting some use cases related to each of them. This is likely
    to be a topic in the AWS Machine Learning Specialty exam.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们转向监督学习、无监督学习和强化学习之间的区别，强调了与每个相关的用例。这可能是AWS机器学习专业考试中的一个主题。
- en: We discussed that an ML model is built in many different stages and the algorithm
    itself is just one part of the modeling process. We also covered the expected
    behaviors of a good model.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 我们讨论了机器学习模型是在许多不同的阶段构建的，算法本身只是建模过程的一部分。我们还讨论了良好模型预期的行为。
- en: We did a deep dive into data splitting, where we talked about different approaches
    to train and validate models, and we covered the mythic battle between variance
    and bias. We completed the chapter by talking about ML frameworks and services.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 我们深入探讨了数据拆分，讨论了训练和验证模型的不同方法，并覆盖了方差和偏差之间的神话之战。我们通过讨论机器学习框架和服务来结束本章。
- en: Coming up next, you will learn about AWS application services for ML, such as
    Amazon Polly, Amazon Rekognition, Amazon Transcribe, and many other AI-related
    AWS services. But first, let's look into some sample questions to give you an
    idea of what you could expect in the exam.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，你将学习AWS机器学习应用服务，例如Amazon Polly、Amazon Rekognition、Amazon Transcribe以及许多其他与AI相关的AWS服务。但在那之前，让我们看看一些样题，以给你一个关于考试中可能遇到的内容的印象。
- en: Questions
  id: totrans-162
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: You have been hired to automate an audible response unit from a call center
    company. Every time a new customer's call comes in, the system must be able to
    understand the current load of the service as well as the goal of the call and
    recommend the right path in the audible response unit. The company does not have
    labeled data to supervise the model; it must take an approach to learn by experience
    (trial and error) and every time the algorithm makes a good recommendation of
    path, it will be rewarded. Which type of machine learning approach would best
    fit this project?
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你被雇佣来自动化一家呼叫中心公司的有声响应单元。每当有新客户的电话进来时，系统必须能够理解当前服务的负载以及电话的目标，并在有声响应单元中推荐正确的路径。公司没有标记数据来监督模型；它必须采取一种通过经验（试错）来学习的方法；每次算法做出良好的路径推荐时，它都会得到奖励。哪种机器学习方法最适合这个项目？
- en: a) Unsupervised learning
  id: totrans-164
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a) 无监督学习
- en: b) Reinforcement learning
  id: totrans-165
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b) 强化学习
- en: c) Supervised learning
  id: totrans-166
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: c) 监督学习
- en: d) DL
  id: totrans-167
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: d) 深度学习
- en: Answer
  id: totrans-168
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 答案
- en: b, Since there is no labeled data and the agent needs to learn by experience,
    reinforcement learning is more appropriate for this use case. Another important
    fact in the question is that the agent is rewarded for good decisions.
  id: totrans-169
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b, 由于没有标记数据，并且智能体需要通过经验来学习，因此强化学习更适合这个用例。问题中的另一个重要事实是智能体因良好的决策而获得奖励。
- en: You are working in a marketing department of a big company and you need to segment
    your customers based on their buying behavior. Which type of ML approach would
    best fit this project?
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你在一个大型公司的市场营销部门工作，你需要根据客户的购买行为对客户进行细分。哪种机器学习方法最适合这个项目？
- en: a) Unsupervised learning
  id: totrans-171
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a) 无监督学习
- en: b) Reinforcement learning
  id: totrans-172
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b) 强化学习
- en: c) Supervised learning
  id: totrans-173
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: c) 监督学习
- en: d) DL
  id: totrans-174
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: d) 深度学习
- en: Answer
  id: totrans-175
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 答案
- en: a, Clustering (which is an unsupervised learning approach) is the most common
    type of algorithm to work with data segmentation/clusters.
  id: totrans-176
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a, 聚类（这是一种无监督学习方法）是处理数据分割/聚类的最常见算法类型。
- en: You are working in a retail company that needs to forecast sales for the next
    few months. Which type of ML approach would best fit this project?
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你在一家零售公司工作，该公司需要预测未来几个月的销售情况。哪种机器学习方法最适合这个项目？
- en: a) Unsupervised learning
  id: totrans-178
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a) 无监督学习
- en: b) Reinforcement learning
  id: totrans-179
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b) 强化学习
- en: c) Supervised learning
  id: totrans-180
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: c) 监督学习
- en: d) DL
  id: totrans-181
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: d) 深度学习
- en: Answer
  id: totrans-182
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 答案
- en: c, Forecasting is a type of supervised learning that aims to predict a numerical
    value; hence, it might be framed as a regression problem and supervised learning.
  id: totrans-183
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: c, 预测是一种监督学习方法，旨在预测数值；因此，它可能被构建为回归问题并作为监督学习。
- en: A manufacturing company needs to understand how much money they are spending
    on each stage of their production chain. Which type of ML approach would best
    fit this project?
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一家制造公司需要了解他们在生产链的每个阶段花费了多少钱。哪种机器学习方法最适合这个项目？
- en: a) Unsupervised learning.
  id: totrans-185
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a) 无监督学习。
- en: b) Reinforcement learning.
  id: totrans-186
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b) 强化学习。
- en: c) Supervised learning.
  id: totrans-187
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: c) 监督学习。
- en: d) ML is not required.
  id: totrans-188
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: d) 机器学习不是必需的。
- en: Answer
  id: totrans-189
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 答案
- en: d, ML is everywhere, but not everything needs ML. In this case, there is no
    need to use ML since the company should be able to collect their costs from each
    stage of the production chain and sum it up.
  id: totrans-190
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: d, 机器学习无处不在，但并非所有事情都需要机器学习。在这种情况下，公司应该能够从生产链的每个阶段收集成本并汇总，因此没有必要使用机器学习。
- en: Which one of the following learning approaches gives us state-of-the-art algorithms
    to implement chatbots?
  id: totrans-191
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下哪种学习方法为我们提供了实现聊天机器人的最先进算法？
- en: a) Unsupervised learning
  id: totrans-192
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a) 无监督学习
- en: b) Reinforcement learning
  id: totrans-193
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b) 强化学习
- en: c) Supervised learning
  id: totrans-194
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: c) 监督学习
- en: d) DL
  id: totrans-195
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: d) 深度学习
- en: Answer
  id: totrans-196
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 答案
- en: d, DL has provided state-of-the-art algorithms in the field of natural language
    processing.
  id: totrans-197
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: d, 深度学习为自然语言处理领域提供了最先进的算法。
- en: You receive a training set from another team to create a binary classification
    model. They have told you that the dataset was already shuffled and ready for
    modeling. You have decided to take a quick look at how a particular algorithm,
    based on a neural network, would perform on it. You then split the data into train
    and test sets and run your algorithm. However, the results look very odd. It seems
    that the algorithm could not converge to an optimal solution. What would be your
    first line of investigation on this issue?
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你从另一个团队那里收到了一个训练集来创建一个二元分类模型。他们告诉你数据集已经被洗牌并准备好建模。你决定快速查看基于神经网络的特定算法在这个数据集上的表现。然后你将数据分为训练集和测试集，并运行你的算法。然而，结果看起来非常奇怪。似乎算法无法收敛到最优解。对于这个问题，你会首先进行哪方面的调查？
- en: a) Make sure the algorithm used is able to handle binary classification models.
  id: totrans-199
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a) 确保使用的算法能够处理二元分类模型。
- en: b) Take a look at the proportion of data of each class and make sure they are
    balanced.
  id: totrans-200
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b) 查看每个类别的数据比例，并确保它们是平衡的。
- en: c) Shuffle the dataset before starting working on it.
  id: totrans-201
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: c) 在开始工作之前对数据集进行洗牌。
- en: d) Make sure you are using the right hyperparameters of the chosen algorithm.
  id: totrans-202
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: d) 确保你正在使用所选算法的正确超参数。
- en: Answer
  id: totrans-203
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 答案
- en: c, Data scientists must be skeptical about their work. Do not make assumptions
    about the data without prior validation. At this point in the book, you might
    not be aware of the specifics of neural networks, but you know that ML models
    are very sensitive to the data they are training on. You should double-check the
    assumptions that were passed to you before taking other decisions. By the way,
    shuffling your training data is the first thing you should do. This is likely
    to be present in the exam.
  id: totrans-204
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: c, 数据科学家必须对其工作持怀疑态度。在没有事先验证的情况下不要对数据进行假设。在本书的这一部分，你可能还不了解神经网络的具体细节，但你知道机器学习模型对它们训练的数据非常敏感。在做出其他决定之前，你应该仔细检查传递给你的假设。顺便说一句，洗牌你的训练数据是你应该做的第一件事。这很可能会出现在考试中。
- en: You have created a classification model to predict whether a banking transaction
    is fraud or not. During the modeling phase, your model was performing very well
    on both the training and testing sets. When you executed the model in a production
    environment, people started to complain about the low accuracy of the model. Assuming
    that there was no overfitting/underfitting problem during the training phase,
    what would be your first line of investigation?
  id: totrans-205
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你创建了一个分类模型来预测银行交易是否为欺诈。在建模阶段，你的模型在训练集和测试集上都表现良好。当你将模型在生产环境中执行时，人们开始抱怨模型的准确率低。假设在训练阶段没有过度拟合/欠拟合问题，你的第一项调查是什么？
- en: a) The training and testing sets do not follow the same distribution.
  id: totrans-206
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a) 训练集和测试集不遵循相同的分布。
- en: b) The training set used to create this model does not represent the real environment
    where the model was deployed.
  id: totrans-207
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b) 创建此模型所使用的训练集不代表模型部署的实际环境。
- en: c) The algorithm used in the final solution could not generalize enough to identify
    fraud cases in production.
  id: totrans-208
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: c) 最终解决方案中使用的算法无法充分泛化以识别生产系统中的欺诈案例。
- en: d) Since all ML models contain errors, we can't infer their performance in production
    systems.
  id: totrans-209
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: d) 由于所有ML模型都包含错误，我们无法推断它们在生产系统中的性能。
- en: Answer
  id: totrans-210
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 答案
- en: b, Data sampling is very challenging, and you should always make sure your training
    data can represent the production data as precisely as possible. In this case,
    there was no evidence that the training and testing sets were invalid, since the
    model was able to perform well and consistently on both sets of data. Since the
    problem happens to appear only in production systems, there might have been a
    systematic issue in the training that is causing the issue.
  id: totrans-211
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b, 数据采样非常具有挑战性，你应该始终确保你的训练数据尽可能精确地代表生产数据。在这种情况下，没有证据表明训练集和测试集无效，因为模型能够在两组数据上表现良好且一致。由于问题恰好出现在生产系统中，训练过程中可能存在系统性问题，导致出现此问题。
- en: You are training a classification model with 500 features that achieves 90%
    accuracy in the training set. However, when you run it in the test set, you get
    only 70% accuracy. Which of the following options are valid approaches to solve
    this problem (select all that apply)?
  id: totrans-212
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你正在训练一个具有500个特征的分类模型，在训练集中达到了90%的准确率。然而，当你将其运行在测试集中时，你只得到了70%的准确率。以下哪些选项是解决此问题的有效方法（选择所有适用的选项）？
- en: a) Reduce the number of features.
  id: totrans-213
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a) 减少特征数量。
- en: b) Add extra features.
  id: totrans-214
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b) 添加额外特征。
- en: c) Implement cross-validation during the training process.
  id: totrans-215
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: c) 在训练过程中实现交叉验证。
- en: d) Select another algorithm.
  id: totrans-216
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: d) 选择另一个算法。
- en: Answer
  id: totrans-217
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 答案
- en: a, c, This is clearly an overfitting issue. In order to solve this type of problem,
    you could reduce the excessive number of features (which will reduce the complexity
    of the model and make it less dependent on the training set). Additionally, you
    could also implement cross-validation during the training process.
  id: totrans-218
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a, c, 这显然是一个过度拟合问题。为了解决这个问题，你可以减少过多的特征数量（这将减少模型的复杂性并使其对训练集的依赖性降低）。此外，你还可以在训练过程中实现交叉验证。
- en: You are training a neural network model and want to execute the training process
    as quickly as possible. Which of the following hardware architectures would be
    most helpful to you to speed up the training process of neural networks?
  id: totrans-219
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你正在训练一个神经网络模型，并希望尽可能快地执行训练过程。以下哪种硬件架构对你加速神经网络训练过程最有帮助？
- en: a) Use a machine with a CPU that implements multi-thread processing.
  id: totrans-220
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a) 使用实现多线程处理的CPU的机器。
- en: b) Use a machine with GPU processing.
  id: totrans-221
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b) 使用具有GPU处理的机器。
- en: c) Increase the amount of RAM of the machine.
  id: totrans-222
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: c) 增加机器的RAM容量。
- en: d) Use a machine with SSD storage.
  id: totrans-223
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: d) 使用具有SSD存储的机器。
- en: Answer
  id: totrans-224
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 答案
- en: b, Although you might take some benefits from multi-thread processing and large
    amounts of RAM, using a GPU to train a neural network will give you the best performance.
    You will learn much more about neural networks in later chapters of this book,
    but you already know that they perform a lot of matrix calculations during training,
    which is better supported by the GPU rather than the CPU.
  id: totrans-225
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b, 虽然你可能会从多线程处理和大量RAM中获得一些好处，但使用GPU训练神经网络将给你带来最佳性能。你将在本书的后续章节中了解更多关于神经网络的知识，但你已经知道它们在训练期间执行大量的矩阵计算，这比CPU支持得更好。
- en: Which of the following statements is *not* true about data resampling?
  id: totrans-226
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下哪个关于数据重采样的说法是不正确的？
- en: a) Cross-validation is a data resampling technique that helps to avoid overfitting
    during model training.
  id: totrans-227
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a) 交叉验证是一种数据重采样技术，有助于在模型训练过程中避免过拟合。
- en: b) Bootstrapping is a data resampling technique often embedded in ML models
    that needs resampling capabilities to estimate the target function.
  id: totrans-228
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b) 引导式采样是一种数据重采样技术，通常嵌入在机器学习模型中，需要重采样能力来估计目标函数。
- en: c) The parameter *k* in k-fold cross-validation specifies how many samples will
    be created.
  id: totrans-229
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: c) k-折交叉验证中的参数 *k* 指定了将创建多少个样本。
- en: d) Bootstrapping works without replacement.
  id: totrans-230
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: d) 引导式采样在不放回的情况下工作。
- en: Answer
  id: totrans-231
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 答案
- en: d, All the statements about cross-validation and bootstrapping are correct except
    option *d*, since bootstrapping works with replacement (the same observations
    might appear on different splits).
  id: totrans-232
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: d, 关于交叉验证和引导式采样的所有陈述都是正确的，除了选项 *d*，因为引导式采样是放回的（相同的观测值可能会出现在不同的分割中）。
