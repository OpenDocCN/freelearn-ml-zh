["```py\n> install.packages(\"kohonen\")\n> library(kohonen)\n\n```", "```py\n    > training_frame <- data[, c(2,4,5,8)]\n\n```", "```py\n    > training_matrix <- as.matrix(scale(training_frame))\n\n```", "```py\n    > training_matrix\n\n```", "```py\n    > som_grid <- somgrid(xdim = 20, ydim=20, topo=\"hexagonal\")\n\n```", "```py\n> som_model <- som(training_matrix,\n+ grid=som_grid,\n+ rlen=1000,\n+ alpha=c(0.05,0.01),\n+ keep.data = TRUE,\n+ n.hood=\"circular\")\n\n```", "```py\n    > plot(som_model, main =\"Training Progress\", type=\"changes\", col = \"red\")\n\n```", "```py\n    > plot(som_model, main =\"Node Count\", type=\"count\")\n\n```", "```py\n    > plot(som_model, main =\"Neighbour Distances\", type=\"dist.neighbours\")\n\n```", "```py\n    > plot(som_model, type=\"codes\")\n\n```", "```py\n    > plot(som_model, type = \"property\", property = som_model$codes[,4], main=names(som_model$data)[4])\n\n```", "```py\n> install.packages(\"jpeg\")\n> install.packages(\"ggplot2\")\n> library(jpeg)\n> library(ggplot2)\n\n```", "```py\n    > img <- readJPEG(\"d:/Image.jpg\")\n\n```", "```py\n    > img_Dim <- dim(img)\n\n```", "```py\n    > img_Dim\n\n```", "```py\n> img_RGB_channels <- data.frame(\n+ x = rep(1:img_Dim[2], each = img_Dim[1]),\n+ y = rep(img_Dim[1]:1, img_Dim[2]),\n+ R = as.vector(img[,,1]),\n+ G = as.vector(img[,,2]),\n+ B = as.vector(img[,,3])\n+ )\n\n```", "```py\n> plotTheme <- function() {\ntheme(\npanel.background = element_rect(\nsize = 3,\ncolour = \"black\",\nfill = \"white\"),\naxis.ticks = element_line(\nsize = 2),\npanel.grid.major = element_line(\ncolour = \"gray80\",\nlinetype = \"dotted\"),\npanel.grid.minor = element_line(\ncolour = \"gray90\",\nlinetype = \"dashed\"),\naxis.title.x = element_text(\nsize = rel(1.2),\nface = \"bold\"),\naxis.title.y = element_text(\nsize = rel(1.2),\nface = \"bold\"),\nplot.title = element_text(\nsize = 20,\nface = \"bold\",\nUnsupervised Learning\n[ 327 ]\nvjust = 1.5)\n)\n}\n> ggplot(data = img_RGB_channels, aes(x = x, y = y)) +\n+ geom_point(colour = rgb(img_RGB_channels[c(\"R\", \"G\", \"B\")])) +\n+ labs(title = \"Original Image: Colorful Bird\") +\n+ xlab(\"x\") +\n+ ylab(\"y\") +\n+ plotTheme()\n\n```", "```py\n    > kClusters <- 3\n\n```", "```py\n    > kMeans_clst <- kmeans(img_RGB_channels[, c(\"R\", \"G\", \"B\")], centers = kClusters)\n\n```", "```py\n    > kColours <- rgb(kMeans_clst$centers[kMeans_clst$cluster,])\n\n```", "```py\n> ggplot(data = img_RGB_channels, aes(x = x, y = y)) +\n+ geom_point(colour = kColours) +\n+ labs(title = paste(\"k-Means Clustering of\", kClusters, \"Colours\"))\n+\n+ xlab(\"x\") +\n+ ylab(\"y\") +\n+ plotTheme()\n\n```", "```py\n    > kClusters <- 5\n\n```", "```py\n    > kMeans_clst <- kmeans(img_RGB_channels[, c(\"R\", \"G\", \"B\")], centers = kClusters)\n\n```", "```py\n    > kColours <- rgb(kMeans_clst$centers[kMeans_clst$cluster,])\n\n```", "```py\n> ggplot(data = img_RGB_channels, aes(x = x, y = y)) +\n+ geom_point(colour = kColours) +\n+ labs(title = paste(\"k-Means Clustering of\", kClusters, \"Colours\"))\n+\n+ xlab(\"x\") +\n+ ylab(\"y\") +\n+ plotTheme()\n\n```"]