["```py\n    > library(MASS)\n\n```", "```py\n> brine <- read.table(\"d:/brine.txt\", header=TRUE, sep=\",\", row.names=1)\n\n```", "```py\n    > head(brine)\n\n```", "```py\n HCO3    SO4      Cl      Ca      Mg       Na   GROUP\n1   10.4   30.0    967.1    95.9    53.7    857.7     1\n2    6.2   29.6   1174.9   111.7    43.9   1054.7     1\n3    2.1   11.4   2387.1   348.3   119.3   1932.4     1\n4    8.5   22.5   2186.1   339.6    73.6   1803.4     1\n5    6.7   32.8   2015.5   287.6    75.1   1691.8     1\n6    3.8   18.9   2175.8   340.4    63.8   1793.9     1\n\n```", "```py\n> pairs(brine[ ,1:6])\n\n```", "```py\n > brine.log <- brine\n > brine.log[ ,1:6] <- log(brine[ ,1:6]+1)\n > pairs(brine.log[ ,1:6])\n\n```", "```py\n    > pairs(brine.log[ ,1:6])\n\n```", "```py\n> brine.log.lda <- lda(GROUP ~ HCO3 + SO4 + Cl + Ca + Mg + Na, data=brine.log)\n\n```", "```py\n    > brine.log.lda\n\n```", "```py\nCall:\nlda(GROUP ~ HCO3 + SO4 + Cl + Ca + Mg + Na, data = brine.log)\nPrior probabilities of groups:\n 1             2             3 \n0.3684211     0.3157895     0.3157895 \nGroup means:\n HCO3        SO4         Cl         Ca         Mg         Na\n1   1.759502   3.129009   7.496891   5.500942   4.283490   7.320686\n2   2.736481   3.815399   6.829565   4.302573   4.007725   6.765017\n3   1.374438   2.378965   6.510211   4.641049   3.923851   6.289692\nCoefficients of linear discriminants:\n LD1             LD2\nHCO3      -1.67799521      0.64415802\nSO4        0.07983656      0.02903096\nCl         22.27520614     -0.31427770\nCa        -1.26859368      2.54458682\nMg        -1.88732009     -2.89413332\nNa       -20.86566883      1.29368129\nProportion of trace:\n LD1        LD2 \n 0.7435     0.2565\n\n```", "```py\n    > brine.log.hat <- predict(brine.log.lda)\n\n```", "```py\n> brine.log.hat\n\n```", "```py\n$class\n [1] 2 1 1 1 1 1 1 2 2 2 2 2 2 3 3 3 3 3 3\nLevels: 1 2 3\n$posterior\n 1                2                3\n1    2.312733e-01     7.627845e-01     5.942270e-03\n2    9.488842e-01     3.257237e-02     1.854347e-02\n3    8.453057e-01     9.482540e-04     1.537461e-01\n4    9.990242e-01     8.794725e-04     9.632578e-05\n5    9.965920e-01     2.849903e-03     5.581176e-04\n6    9.984987e-01     1.845534e-05     1.482872e-03\n7    8.676660e-01     7.666611e-06     1.323263e-01\n8    4.938019e-03     9.949035e-01     1.584755e-04\n9    4.356152e-03     9.956351e-01     8.770078e-06\n10   2.545287e-05     9.999439e-01     3.066264e-05\n11   2.081510e-02     9.791728e-01     1.210748e-05\n12   1.097540e-03     9.989023e-01     1.455693e-07\n13   1.440307e-02     9.854613e-01     1.356671e-04\n14   4.359641e-01     2.367602e-03     5.616683e-01\n15   6.169265e-02     1.540353e-04     9.381533e-01\n16   7.500357e-04     4.706701e-09     9.992500e-01\n17   1.430433e-03     1.095281e-06     9.985685e-01\n18   2.549733e-04     3.225658e-07     9.997447e-01\n19   6.433759e-02     8.576694e-03     9.270857e-01\n$x\n LD1            LD2\n1      -1.1576284     -0.1998499\n2     -0.1846803      0.6655823\n3       1.0179998      0.6827867\n4      -0.3939366      2.6798084\n5      -0.3167164      2.0188002\n6       1.0061340      2.6434491\n7       2.0725443      1.5714400\n8      -2.0387449     -0.9731745\n9      -2.6054261     -0.2774844\n10     -2.5191350     -2.8304663\n11     -2.4915044      0.3194247\n12     -3.4448401      0.1869864\n13     -2.0343204     -0.4674925\n14      1.0441237     -0.0991014\n15      1.6987023     -0.6036252\n16      3.9138884     -0.7211078\n17      2.7083649     -1.3896956\n18      2.9310268     -1.9243611\n19      0.7941483     -1.2819190\n\n```", "```py\n> apply(brine.log.hat$posterior, MARGIN=1, FUN=max)\n 1           2             3  4             5         6             7         8 \n0.7627845 0.9488842 0.8453057 0.9990242 0.9965920 0.9984987 0.8676660 0.9949035 \n 9          10          11        12          13        14          15        16 \n0.9956351 0.9999439 0.9791728 0.9989023 0.9854613 0.5616683 0.9381533 0.9992500 \n 17          18          19 \n0.9985685 0.9997447 0.9270857\n\n```", "```py\n> plot(brine.log.lda)\n\n```", "```py\n> plot(brine.log.lda, dimen=1, type=\"both\")\n\n```", "```py\n> tab <- table(brine.log$GROUP, brine.log.hat$class)\n\n```", "```py\n > tab\n\n```", "```py\n 1   2   3\n 1   6   1   0\n 2   0   6   0\n 3   0   0   6\n\n```", "```py\n> sum(tab[row(tab) == col(tab)]) / sum(tab)\n\n```", "```py\n[1] 0.9473684\n\n```", "```py\n> brine.log.lda <- lda(GROUP ~ HCO3 + SO4 + Cl + Ca + Mg + Na, data=brine.log, CV=TRUE) \n\n```", "```py\n> tab <- table(brine.log$GROUP, brine.log.lda$class)\n\n```", "```py\n> tab\n\n```", "```py\n 1   2   3\n 1  6   1   0\n 2   1   4   1\n 3   1   0   5\n> sum(tab[row(tab) == col(tab)]) / sum(tab)\n\n```", "```py\n[1] 0.7894737\n\n```", "```py\n > library(foreign)\n > library (nnet)\n > library (ggplot2)\n > library (reshape2)\n\n```", "```py\n> ml <- read.table(\"d:/hsbdemo.csv\", header=TRUE, sep=\",\", row.names=\"id\")\n\n```", "```py\n> with(ml, table(ses, prog))\n\n```", "```py\n prog\n ses         academic         general    vocation\n high           42                9           7\n low            19               16          12\n middle         44               20          31\n\n```", "```py\n> with(ml, do.call(rbind, tapply(write, prog, function(x) c(M = mean(x), SD = sd(x)))))\n\n```", "```py\n M           SD\nacademic     56.25714     7.943343\ngeneral      51.33333     9.397775\nvocation     46.76000     9.318754\n\n```", "```py\n > ml$prog2 <- relevel(ml$prog, ref = \"academic\") \n > test <- multinom(prog2 ~ ses + write, data = ml)\n\n```", "```py\n# weights:  15 (8 variable)\ninitial  value          219.722458 \niter     10 value     179.983731\nfinal    value         179.981726 \nconverged\n\n```", "```py\n > summary(test)\n\n```", "```py\n Call:\nmultinom(formula = prog2 ~ ses + write, data = ml)\nCoefficients:\n (Intercept)       seslow   sesmiddle         write\ngeneral     1.689478       1.1628411   0.6295638   -0.05793086\nvocation    4.235574       0.9827182   1.2740985   -0.11360389\n\n```", "```py\n Std. Errors:\n (Intercept)       seslow   sesmiddle        write\ngeneral     1.226939       0.5142211   0.4650289   0.02141101\nvocation    1.204690       0.5955688   0.5111119   0.02222000\nResidual Deviance: 359.9635 \nAIC: 375.9635 \n\n```", "```py\n> z <- summary(test)$coefficients/summary(test)$standard.errors\n\n```", "```py\n> z\n\n```", "```py\n (Intercept)     seslow     sesmiddle       write\ngeneral       1.376987   2.261364      1.353816   -2.705658\nvocation      3.515904   1.650050      2.492798   -5.112687\n\n```", "```py\n> p <- (1 - pnorm(abs(z), 0, 1))*2\n\n```", "```py\n> p\n\n```", "```py\n (Intercept)       seslow     sesmiddle          write\ngeneral    0.1685163893   0.02373673     0.1757949   6.816914e-03\nvocation   0.0004382601   0.09893276     0.0126741   3.176088e-07\n\n```", "```py\n> exp(coef(test))\n\n```", "```py\n (Intercept)   seslow         sesmiddle       write\ngeneral         5.416653   3.199009    1.876792   0.9437152\nvocation       69.101326   2.671709    3.575477   0.8926115\n\n```", "```py\n> head(pp <- fitted(test))\n\n```", "```py\n academic     general    vocation\n45     .1482721   0.3382509   0.5134769\n108   0.1201988   0.1806335   0.6991678\n15    0.4186768   0.2368137   0.3445095\n67    0.1726839   0.3508433   0.4764728\n153   0.1001206   0.1689428   0.7309367\n51    0.3533583   0.2378047   0.4088370\n\n```", "```py\n > dses <- data.frame(ses = c(\"low\", \"middle\", \"high\"),write = mean(ml$write))\n > predict(test, newdata = dses, \"probs\")\n\n```", "```py\n academic     general      vocation\n1   0.4396813   0.3581915   0.2021272\n2   0.4777451   0.2283359   0.2939190\n3   0.7009046   0.1784928   0.1206026\n\n```", "```py\n> dwrite <- data.frame(ses = rep(c(\"low\", \"middle\", \"high\"), each = 41), write = rep(c(30:70), 3))\n\n```", "```py\n> pp.write <- cbind(dwrite, predict(test, newdata = dwrite, type = \"probs\", se = TRUE))\n\n```", "```py\n> by(pp.write[, 3:5], pp.write$ses, colMeans)\n\n```", "```py\npp.write$ses: high\n academic     general      vocation \n 0.6164348   0.1808049   0.2027603 \n-------------------------------------------------------------------------- \npp.write$ses: low\n academic     general      vocation \n 0.3972955   0.3278180   0.2748864 \n-------------------------------------------------------------------------- \npp.write$ses: middle \n academic     general      vocation \n 0.4256172   0.2010877   0.3732951 \n\n```", "```py\n> lpp <- melt(pp.write, id.vars = c(\"ses\", \"write\"), value.name = \"probability\")\n\n```", "```py\n> head(lpp)\n\n```", "```py\n ses   write   variable     probability\n1  low      30   academic    0.09843258\n2   low      31   academic    0.10716517\n3   low      32   academic    0.11650018\n4   low      33   academic    0.12645441\n5   low      34   academic    0.13704163\n6   low      35   academic    0.14827211\n\n```", "```py\n> ggplot(lpp, aes(x = write, y = probability, colour = ses)) +\n+     geom_line() +\n+     facet_grid(variable ~ ., scales=\"free\")\n\n```", "```py\n    > require(ggplot2)\n    > require(GGally)\n    > require(VGAM)\n\n```", "```py\n> dat <- read.table(\"d:/tobit.csv\", header=TRUE, sep=\",\", row.names=\"id\")\n\n```", "```py\n> summary(dat)\n\n```", "```py\nId         read         math      prog           apt \nMin.   :  1.0   Min.   :28.0   Min.   :33.0   academic  : 45 Min.   :352\n1st Qu.: 50.8   1st Qu.:44.0   1st Qu.:45.0   general   :105 1st Qu.:576\nMedian :100.5   Median :50.0   Median :52.0   vocational: 50 Median :633\nMean   :100.5   Mean   :52.2   Mean   :52.6      Mean   :640\n3rd Qu.:150.2   3rd Qu.:60.0   3rd Qu.:59.0      3rd Qu.:705\nMax.   :200.0   Max.   :76.0   Max.   :75.0       Max.   :800\n\n```", "```py\n    > f <- function(x, var, bw = 15) {\n    dnorm(x, mean = mean(var), sd(var)) * length(var) * bw\n    }\n\n```", "```py\n> p <- ggplot(dat, aes(x = apt, fill=prog))\n\n```", "```py\n> p + stat_bin(binwidth=15) +\n stat_function(fun = f, size = 1,\n args = list(var = dat$apt))\n\n```", "```py\n> p + stat_bin(binwidth = 1) + stat_function(fun = f, size = 1, args = list(var = dat$apt, \n bw = 1))\n\n```", "```py\n> cor(dat[, c(\"read\", \"math\", \"apt\")])\n\n```", "```py\n read        math             apt\nread     1.0000000   0.6622801   0.6451215\nmath     0.6622801   1.0000000   0.7332702\napt      0.6451215   0.7332702   1.0000000\n\n```", "```py\n> ggpairs(dat[, c(\"read\", \"math\", \"apt\")])\n\n```", "```py\n    > summary(m <- vglm(apt ~ read + math + prog, tobit(Upper = 800), data = dat))\n\n```", "```py\nCall:\nvglm(formula = apt ~ read + math + prog, family = tobit(Upper = 800), \n data = dat)\n\n```", "```py\nPearson residuals:\n Min        1Q           Median        3Q       Max\nmu           -2.5684    -0.7311        -0.03976    0.7531     2.802\nloge(sd)     -0.9689    -0.6359        -0.33365    0.2364     4.845\n\n```", "```py\nCoefficients:\n Estimate Std.       Error     z value     Pr(>|z|) \n(Intercept):1     209.55956     32.54590     6.439     1.20e-10 ***\n(Intercept):2       4.18476      0.05235    79.944      < 2e-16 ***\nread                2.69796      0.61928     4.357     1.32e-05 ***\nmath                5.91460      0.70539     8.385      < 2e-16 ***\nproggeneral       -12.71458     12.40857    -1.025     0.305523 \nprogvocational   -46.14327     13.70667    -3.366     0.000761 ***\n---\nSignif. codes:    0 '***'   0.001 '**'   0.01 '*'   0.05 '.' 0.1 ' ' 1\nNumber of linear predictors:  2 \nNames of linear predictors: mu, loge(sd)\nDispersion Parameter for tobit family:   1\nLog-likelihood: -1041.063 on 394 degrees of freedom\nNumber of iterations: 5 \n\n```", "```py\n    > ctable <- coef(summary(m))\n> pvals <- 2 * pt(abs(ctable[, \"z value\"]), df.residual(m), lower.tail = FALSE) \n    > cbind(ctable, pvals)\n\n```", "```py\n Estimate    Std. Error      z value       Pr(>|z|)       pvals\n(Intercept):1    209.559557   32.54589921    6.438893   1.203481e-10  3.505839e-10\n(Intercept):2      4.184759    0.05234618   79.943922   0.000000e+00 1.299833e-245\nread               2.697959    0.61927743    4.356625   1.320835e-05  1.686815e-05\nmath               5.914596    0.70538721    8.384892   5.077232e-17  9.122434e-16\nproggeneral      -12.714581   12.40856959   -1.024661   3.055230e-01  3.061517e-01\nprogvocational   -46.143271   13.70667208   -3.366482   7.613343e-04  8.361912e-04\n\n```", "```py\n> m2 <- vglm(apt ~ read + math, tobit(Upper = 800), data = dat) \n    > (p <- pchisq(2 * (logLik(m) - logLik(m2)), df = 2, lower.tail = FALSE))\n\n```", "```py\n [1] 0.003155176\n\n```", "```py\n    > b <- coef(m)\n    > se <- sqrt(diag(vcov(m)))\n    > cbind(LL = b - qnorm(0.975) * se, UL = b + qnorm(0.975) * se)\n\n```", "```py\n LL             UL\n(Intercept):1      145.770767   273.348348\n(Intercept):2        4.082163     4.287356\nread                 1.484198     3.911721\nmath                 4.532062     7.297129\nproggeneral        -37.034931    11.605768\nprogvocational     -73.007854   -19.278687\n\n```", "```py\n    > dat$yhat <- fitted(m)[,1]\n    > dat$rr <- resid(m, type = \"response\")\n    > dat$rp <- resid(m, type = \"pearson\")[,1]\n    > par(mfcol = c(2, 3))\n    > with(dat, {\n plot(yhat, rr, main = \"Fitted vs Residuals\")\n      qqnorm(rr)\n      plot(yhat, rp, main = \"Fitted vs Pearson Residuals\")\n      qqnorm(rp)\n      plot(apt, rp, main = \"Actual vs Pearson Residuals\")\n      plot(apt, yhat, main = \"Actual vs Fitted\")\n    })\n\n```", "```py\n> (r <- with(dat, cor(yhat, apt)))\n\n```", "```py\n[1] 0.7825\n\n```", "```py\n> r^2\n\n```", "```py\n[1] 0.6123\n\n```", "```py\n> gala <- read.table(\"d:/gala.txt\")\n\n```", "```py\n> regpois <- glm( Species ~ Area + Elevation + Nearest, family=poisson, data=gala)\n\n```", "```py\n> summary(regpois)\n\n```", "```py\nDeviance residuals:\n Min          1Q      Median          3Q         Max\n-17.1900     -6.1715     -2.7125      0.7063     21.4237\n\n```", "```py\nCoefficients:\n Estimate      Std. Error     z value      Pr(>|z|) \n(Intercept)    3.548e+00       3.933e-02      90.211       < 2e-16 *** \nArea          -5.529e-05        1.890e-05      -2.925       0.00344 ** \nElevation      1.588e-03        5.040e-05      31.502        < 2e-16 ***\nNearest        5.921e-03       1.466e-03      4.039          5.38e-05 ***\n---\n\n```", "```py\nSignif. codes:\n 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n```", "```py\nNull deviance:\n3510.7  on 29  degrees of freedom\n\n```", "```py\nResidual deviance:\n1797.8  on 26  degrees of freedom\n\n```", "```py\nAIC:\n1966.7\n\n```", "```py\n5\n> plot(regpois$fit,gala$Species)\n\n```", "```py\n> p <- ppois(gala$Species,regpois$fit)\n\n```", "```py\n> hist(p,breaks=10)\n\n```", "```py\n> ks.test(p,\"punif\")\n\n```", "```py\nOne-sample Kolmogorov-Smirnov test\ndata:  p\nD = 0.57731, p-value = 4.134e-09\nalternative hypothesis: two-sided \n\n```", "```py\n p = 1/2*(F(Y)+F(Y-1)) \n ; where Y are the data, \n ; and F are the distribution functions coming from Poisson\n\n```", "```py\n> p <- 0.5*(ppois(gala$Species,regpois$fit) + ppois(gala$Species-1,regpois$fit))\n\n```", "```py\n> hist(p,breaks=10)\n\n```", "```py\n> ks.test(p,\"punif\")\n\n```", "```py\n One-sample Kolmogorov-Smirnov test\ndata:  p\nD = 0.58571, p-value = 2.3e-09\nalternative hypothesis: two-sided\n\n```", "```py\n> regpois2 <- glm( Species ~ Area + Elevation + Nearest, family=poisson(link=sqrt), data=gala)\n\n```", "```py\n> summary(regpois2)\n\n```", "```py\nCall:\nglm(formula = Species ~ Area + Elevation + Nearest, family = poisson(link = sqrt), \n data = gala)\nDeviance Residuals: \n Min         1Q       Median         3Q          Max \n-19.108     -5.129     -1.335      1.846       16.918 \nCoefficients:\n Estimate   Std. Error   z value     Pr(>|z|) \n(Intercept)    4.1764222    0.1446592    28.871    < 2e-16 ***\nArea          -0.0004844    0.0001655    -2.926      0.00343 ** \nElevation      0.0110143    0.0003372    32.664    < 2e-16 ***\nNearest        0.0083908    0.0065858     1.274      0.20264 \n---\nSignif. codes:    0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n(Dispersion parameter for poisson family taken to be 1)\nNull deviance:   3510.7 on 29 degrees of freedom\nResidual deviance:   1377.5 on 26 degrees of freedom\nAIC: 1546.3\nNumber of Fisher Scoring iterations: 5\n\n```", "```py\n> p2 <- 0.5*(ppois(gala$Species,regpois2$fit) + ppois(gala$Species-1,regpois2$fit)) \n\n```", "```py\n> hist(p,breaks=10)\n\n```", "```py\n> ks.test(p2,\"punif\")\n\n```", "```py\ndata:  p2\nD = 0.47262, p-value = 3.023e-06\nalternative hypothesis: two-sided\n\n```", "```py\n> reg <- lm(Species ~ Area+Elevation+Nearest, data=gala)\n\n```", "```py\n> summary(reg)\n\n```", "```py\nCall:\nlm(formula = Species ~ Area + Elevation + Nearest, data = gala)\nResiduals:\n Min         1Q       Median         3Q          Max \n-191.856    -33.111    -18.626      5.673      262.209 \nCoefficients:\n Estimate   Std. Error   t value     Pr(>|t|) \n(Intercept)   16.46471     23.38884     0.704      0.48772 \nArea           0.01908      0.02676     0.713      0.48216 \nElevation      0.17134      0.05452     3.143      0.00415 **\nNearest        0.07123      1.06481     0.067      0.94718 \n---\nSignif. codes:    0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\nResidual standard error:   80.84 on 26 degrees of freedom\nMultiple R-squared:      0.5541,  Adjusted R-squared:  0.5027 \nF-statistic:       10.77 on 3 and 26 DF,  p-value: 8.817e-05\n\n```", "```py\n> plot(reg)\n\n```", "```py\n> reg2 <- lm(sqrt(Species) ~ Area+Elevation+Nearest, data=gala)\n\n```", "```py\n> summary(reg2)\n\n```", "```py\nCall:\nlm(formula = sqrt(Species) ~ Area + Elevation + Nearest, data = gala)\nResiduals:\n Min          1Q      Median        3Q         Max \n-8.8057   -2.1775   -0.2086    1.3943    8.8730 \nCoefficients:\n Estimate   Std. Error   t value     Pr(>|t|) \n(Intercept)    3.744e+00    1.072e+00     3.492     0.001729 ** \nArea          -2.253e-05    1.227e-03    -0.018     0.985485 \nElevation      9.795e-03    2.499e-03     3.920 0\\.  000576 ***\nNearest        2.002e-02    4.880e-02     0.410     0.685062 \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\nResidual standard error:   3.705 on 26 degrees of freedom\nMultiple R-squared:    0.5799,  Adjusted R-squared:  0.5315 \nF-statistic:     11.96 on 3 and 26 DF,  p-value: 4.144e-05\n\n```", "```py\n> plot(reg2)\n\n```", "```py\n> shapiro.test(reg2$res)\n\n```", "```py\nShapiro-Wilk normality test\ndata:  reg2$res\nW = 0.9633, p-value = 0.375\n\n```", "```py\n> reg3 <- lm(log(Species) ~ Area+Elevation+Nearest, data=gala)\n\n```", "```py\n> summary(reg3)\n\n```", "```py\nCall:\nlm(formula = log(Species) ~ Area + Elevation + Nearest, data = gala)\nResiduals: \n Min        1Q      Median        3Q         Max \n-2.0739   -0.5161    0.3307    0.7472    1.6271 \nCoefficients:\n Estimate   Std. Error   t value     Pr(>|t|) \n(Intercept)    2.3724325    0.3448586     6.879     2.65e-07 ***\nArea          -0.0002687    0.0003946    -0.681    0.50197 \nElevation      0.0029096    0.0008039     3.620      0.00125 ** \nNearest        0.0133869    0.0157001     0.853      0.40163 \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\nResidual standard error:   1.192 on 26 degrees of freedom\nMultiple R-squared:      0.4789,  Adjusted R-squared:  0.4187 \nF-statistic:       7.964 on 3 and 26 DF,  p-value: 0.0006281\n\n```", "```py\n> plot(reg3)\n\n```", "```py\n> shapiro.test(reg3$res)\n\n```", "```py\nShapiro-Wilk normality test\ndata:  reg3$res\nW = 0.91925, p-value = 0.02565\n\n```"]