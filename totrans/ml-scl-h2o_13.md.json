["```py\ncurl -X POST -H \"Content-Type: application/json\" -d @- https://model.prod.xyz.com/9c5c3042-1f9a-42b5-ac1a-9dca19414fbb/model/score << EOF\n{\"fields\":[\"loan_amnt\",\"term\",\"int_rate\",\"emp_length\",\"home_ownership\",\"annual_inc\",\"purpose\",\"addr_state\",\"dti\",\"delinq_2yrs\",\"revol_util\",\"total_acc\",\"longest_credit_length\",\"verification_status\"rows\":[[\"5000\",\"36months\",\"10.65\",\"10\",24000.0\",\"RENT\",\"AZ\",\"27.650\",\"0\",\"83.7\",\"9\",\"26\",\"verified\"]]}EOF\n```", "```py\n{\"fields\":[\"bad_loan.0\",\"bad_loan.1\"],\"id\":\"45d0677a-9327-11ec-b656-2e37808d3384\",\"score\":[[\"0.7730158252427003\",\"0.2269841747572997\"]]} \n```", "```py\nhttp://192.1.1.1:8080/model?name=riskmodel.mojo &row=5000,36months,10.65,162.87,10,RENT,24000,VERIFIED-income,AZ,27.65,0,1,0,13648,83.7,0\"\n```", "```py\njava -cp /PostgresData/postgresql-42.2.5.jar:H2OBatchDB.jar \\ ai.h2o.H2OBatchDB\n```", "```py\njava -Xms10g -Xmx10g -Dskipheader=true -Dautocolumns=true -classpath mojo2-runtime.jar:DAIMojoRunner_TQ.jar daimojorunner_tq.DAIMojoRunner_TQ pipeline.mojo LoanStats4.csv\n```", "```py\nfrom pysparkling.ml import *\n```", "```py\nsettings = H2OMOJOSettings(convertUnknownCategoricalLevelsToNa = True, convertInvalidNumbersToNa = True)\n```", "```py\nmodel_location=\"hdfs:///models/risk/v2/riskmodel.zip\"\n```", "```py\nmodel = H2OMOJOModel.createFromMojo(model_location, settings\")\n```", "```py\npredictions = model.transform(dataset)\n```", "```py\n// do something with predictions, e.g. write to hdfs\n```", "```py\n./bin/spark-submit \\\n    --py-files py/h2o_pysparkling_scoring.zip \\\n    myRiskScoring.py\n```", "```py\nselect ID, H2OScore_Java('Modelname=riskmodel.zip', ARRAY_CONSTRUCT(loan_amnt, term, int_rate, installment, emp_length, annual_inc, verification_status, addr_state, dti, inq_last_6mths, revol_bal, revol_util, total_acc)) as H2OPrediction from RiskTable;\n```", "```py\n    select ID, H2OPredict('Modelname=riskmodel.zip', loan_amnt, term, int_rate, installment, emp_length, annual_inc, verification_status, addr_state, dti, inq_last_6mths, revol_bal, revol_util, total_acc) as H2OPrediction from RiskTable;\n    ```", "```py\nselect * from H2OPredict(\n```", "```py\non risk_table\n```", "```py\non (select * from mojo_models where model_id=riskmodel) dimension\n```", "```py\nusing Accumulate('id')\n```", "```py\n) as td_alias;\n```", "```py\n=WEBSERVICE(CONCAT(\"http://192.1.1.1:8080/modeltext?name=riskmodel.mojo&row=\",TEXTJOIN(\",\"FALSE, $A4:$M4))))\n```", "```py\nSCRIPT_STR(\n```", "```py\n'name'='riskmodel.mojo',\n```", "```py\nATTR([./riskmodel.mojo]),\n```", "```py\nATTR([0a4bbd12-dcad-11ea-ab05-024200eg007]),\n```", "```py\nATTR([loan_amnt]),\n```", "```py\nATTR([term]),\n```", "```py\nATTR([int_rate]),\n```", "```py\nATTR([installment]),\n```", "```py\nATTR([emp_length]),\n```", "```py\nATTR([annual_inc]),\n```", "```py\nATTR([verification_status]),\n```", "```py\nATTR([addr_state]),\n```", "```py\nATTR([dti]),\n```", "```py\nATTR([inq_last_6mths]),\n```", "```py\nATTR([revol_bal]),\n```", "```py\nATTR([revol_util]),\n```", "```py\nATTR([total_acc]))\n```", "```py\nWeb.Contents(\n```", "```py\n    \"http://192.1.1.1:8080\",\n```", "```py\n    [\n```", "```py\n        RelativePath=\"modeltext\",\n```", "```py\n        Query=\n```", "```py\n        [\n```", "```py\n            name=\"riskmodel.mojo\",\n```", "```py\n            loan_amnt=Loan_Ammt,\n```", "```py\n            term=Term,\n```", "```py\n            int_rate=Int_Rate,\n```", "```py\n            installment=Installments,\n```", "```py\n            emp_length=Emp_Length,\n```", "```py\n            annual_inc=Annual_Inc,\n```", "```py\n            verification_status=Verification_Status,\n```", "```py\n            addr_state=Addr_State,\n```", "```py\n            dti=DTI,\n```", "```py\n            inq_last_6mths= Inq_Last_6mths,\n```", "```py\n            revol_bal=Revol_Bal,\n```", "```py\n            revol_util=Revol_Util,\n```", "```py\n            total_acc=Total_Acc\n```", "```py\n        ]\n```", "```py\n    ]\n```", "```py\n)\n```"]