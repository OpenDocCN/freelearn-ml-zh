["```py\n// Declare the input and output directory flags.\ninDirPtr := flag.String(\"inDir\", \"\", \"The directory containing the training data\")\noutDirPtr := flag.String(\"outDir\", \"\", \"The output directory\")\n\n// Parse the command line flags.\nflag.Parse()\n```", "```py\n// ModelInfo includes the information about the\n// model that is output from the training.\ntype ModelInfo struct {\n    Intercept float64 `json:\"intercept\"`\n    Coefficients []CoefficientInfo `json:\"coefficients\"`\n}\n\n// CoefficientInfo include information about a\n// particular model coefficient.\ntype CoefficientInfo struct {\n    Name string `json:\"name\"`\n    Coefficient float64 `json:\"coefficient\"`\n}\n```", "```py\n// Train/fit the single regression model\n// with github.com/sajari/regression\n// like in Chapter 5, Regression.\n\n// Fill in the model information.\nmodelInfo := ModelInfo{\n    Intercept: r.Coeff(0),\n    Coefficients: []CoefficientInfo{\n        CoefficientInfo{\n            Name: \"bmi\",\n            Coefficient: r.Coeff(1),\n        },\n    },\n}\n\n// Marshal the model information.\noutputData, err := json.MarshalIndent(modelInfo, \"\", \" \")\nif err != nil {\n    log.Fatal(err)\n}\n\n// Save the marshalled output to a file, with\n// certain permissions (http://permissions-calculator.org/decode/0644/).\nif err := ioutil.WriteFile(filepath.Join(*outDirPtr, \"model.json\"), outputData, 0644); err != nil {e model to the JSON fil\n    log.Fatal(err)\n}\n```", "```py\n// Train/fit the multiple regression model\n// with github.com/sajari/regression\n// like in Chapter 5, Regression.\n\n// Fill in the model information.\nmodelInfo := ModelInfo{\n    Intercept: r.Coeff(0),\n    Coefficients: []CoefficientInfo{\n        CoefficientInfo{\n            Name:        \"bmi\",\n            Coefficient: r.Coeff(1),\n        },\n        CoefficientInfo{\n            Name:        \"ltg\",\n            Coefficient: r.Coeff(2),\n        },\n    },\n}\n\n// Marshal the model information.\noutputData, err := json.MarshalIndent(modelInfo, \"\", \"    \")\nif err != nil {\n    log.Fatal(err)\n}\n\n// Save the marshalled output to a file.\nif err := ioutil.WriteFile(filepath.Join(*outDirPtr, \"model.json\"), outputData, 0644); err != nil {\n    log.Fatal(err)\n}\n```", "```py\nFROM alpine\nADD goregtrain / \n```", "```py\nall: compile docker push clean\n\ncompile:\n        GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -o goregtrain\n\ndocker:\n        sudo docker build --force-rm=true -t dwhitena/goregtrain:single .\n\npush:\n        sudo docker push dwhitena/goregtrain:single\n\nclean:\n        rm goregtrain\n```", "```py\n$ make\nGOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -o goregtrain\nsudo docker build --force-rm=true -t dwhitena/goregtrain:multi .\n[sudo] password for dwhitena: \nSending build context to Docker daemon 2.449MB\nStep 1/2 : FROM alpine\n ---> 7328f6f8b418\nStep 2/2 : ADD goregtrain /\n ---> 9c13594ad7de\nRemoving intermediate container 6e717232c6d1\nSuccessfully built 9c13594ad7de\nSuccessfully tagged dwhitena/goregtrain:multi\nsudo docker push dwhitena/goregtrain:multi\nThe push refers to a repository [docker.io/dwhitena/goregtrain]\n375642156c06: Pushed \n5bef08742407: Layer already exists \nmulti: digest: sha256:f35277a46ed840922a0d7e94c3c57632fc947f6ab004deed66d3eb80a331e40f size: 738\nrm goregtrain\n```", "```py\n$ sudo docker images | grep \"goregtrain\"\ndwhitena/goregtrain multi 9c13594ad7de About a minute ago 6.41MB\n```", "```py\n{\n  \"independent_variables\": [\n    {\n      \"name\": \"bmi\",\n      \"value\": 0.0616962065187\n    },\n    {\n      \"name\": \"ltg\",\n      \"value\": 0.0199084208763\n    }\n  ]\n}\n```", "```py\n// PredictionData includes the data necessary to make\n// a prediction and encodes the output prediction.\ntype PredictionData struct {\n    Prediction float64 `json:\"predicted_diabetes_progression\"`\n    IndependentVars []IndependentVar `json:\"independent_variables\"`\n}\n\n// IndependentVar include information about and a\n// value for an independent variable.\ntype IndependentVar struct {\n    Name string `json:\"name\"`\n    Value float64 `json:\"value\"`\n}\n```", "```py\n// Predict makes a prediction based on input JSON.\nfunc Predict(modelInfo *ModelInfo, predictionData *PredictionData) error {\n\n    // Initialize the prediction value\n    // to the intercept.\n    prediction := modelInfo.Intercept\n\n    // Create a map of independent variable coefficients.\n    coeffs := make(map[string]float64)\n    varNames := make([]string, len(modelInfo.Coefficients))\n    for idx, coeff := range modelInfo.Coefficients {\n        coeffs[coeff.Name] = coeff.Coefficient\n        varNames[idx] = coeff.Name\n    }\n\n    // Create a map of the independent variable values.\n    varVals := make(map[string]float64)\n    for _, indVar := range predictionData.IndependentVars {\n        varVals[indVar.Name] = indVar.Value\n    }\n\n    // Loop over the independent variables.\n    for _, varName := range varNames {\n\n        // Get the coefficient.\n        coeff, ok := coeffs[varName]\n        if !ok {\n            return fmt.Errorf(\"Could not find model coefficient %s\", varName)\n        }\n\n        // Get the variable value.\n        val, ok := varVals[varName]\n        if !ok {\n            return fmt.Errorf(\"Expected a value for variable %s\", varName)\n        }\n\n        // Add to the prediction.\n        prediction = prediction + coeff*val\n    }\n\n    // Add the prediction to the prediction data.\n    predictionData.Prediction = prediction\n\n    return nil\n}\n```", "```py\n// Declare the input and output directory flags.\ninModelDirPtr := flag.String(\"inModelDir\", \"\", \"The directory containing the model.\")        \ninVarDirPtr := flag.String(\"inVarDir\", \"\", \"The directory containing the input attributes.\")\noutDirPtr := flag.String(\"outDir\", \"\", \"The output directory\")\n\n// Parse the command line flags.\nflag.Parse()\n\n// Load the model file.\nf, err := ioutil.ReadFile(filepath.Join(*inModelDirPtr, \"model.json\"))\nif err != nil {\n    log.Fatal(err)\n}\n\n// Unmarshal the model information.\nvar modelInfo ModelInfo\nif err := json.Unmarshal(f, &modelInfo); err != nil {\n    log.Fatal(err)\n}\n\n// Walk over files in the input.\nif err := filepath.Walk(*inVarDirPtr, func(path string, info os.FileInfo, err error) error {\n\n    // Skip any directories.\n    if info.IsDir() {\n        return nil\n    }\n\n    // Open any files.\n    f, err := ioutil.ReadFile(filepath.Join(*inVarDirPtr, info.Name()))\n    if err != nil {\n        return err\n    }\n\n    // Unmarshal the independent variables.\n    var predictionData PredictionData\n    if err := json.Unmarshal(f, &predictionData); err != nil {\n        return err\n    }\n\n    // Make the prediction.\n    if err := Predict(&modelInfo, &predictionData); err != nil {\n        return err\n    }\n\n    // Marshal the prediction data.\n    outputData, err := json.MarshalIndent(predictionData, \"\", \"    \")\n    if err != nil {\n        log.Fatal(err)\n    }\n\n    // Save the marshalled output to a file.\n    if err := ioutil.WriteFile(filepath.Join(*outDirPtr, info.Name()), outputData, 0644); err != nil {\n        log.Fatal(err)\n    }\n\n    return nil\n}); err != nil {\n    log.Fatal(err)\n}\n```", "```py\n$ cat Makefile \nall: compile docker push clean\n\ncompile:\n GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -o goregpredict\n\ndocker:\n sudo docker build --force-rm=true -t dwhitena/goregpredict .\n\npush:\n sudo docker push dwhitena/goregpredict\n\nclean:\n rm goregpredict\n$ cat Dockerfile \nFROM alpine\nADD goregpredict /\n$ make\nGOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -o goregpredict\nsudo docker build --force-rm=true -t dwhitena/goregpredict .\n[sudo] password for dwhitena: \nSending build context to Docker daemon 2.38MB\nStep 1/2 : FROM alpine\n ---> 7328f6f8b418\nStep 2/2 : ADD goregpredict /\n ---> a2d9a63f4926\nRemoving intermediate container c1610b425835\nSuccessfully built a2d9a63f4926\nSuccessfully tagged dwhitena/goregpredict:latest\nsudo docker push dwhitena/goregpredict\nThe push refers to a repository [docker.io/dwhitena/goregpredict]\n77f12cb6c6d4: Pushed \n5bef08742407: Layer already exists \nlatest: digest: sha256:9a8a754c434bf2250b2f6102bb72d56fdf723f305aebcbf5bff7e5de707dd384 size: 738\n3a05f65b1d1d: Layer already exists \n5bef08742407: Layer already exists \nult: digest: sha256:153adaa9b4b9a1f2bf02466201163c60230ae85164d9d22261f455979a94aed4 size: 738\nrm goregpredict\n```", "```py\n$ ls\nattributes model training\n$ ls model\n$ ls attributes \n1.json 2.json 3.json\n$ ls training \ndiabetes.csv\n```", "```py\n$ sudo docker run -v $PWD/training:/tmp/training -v $PWD/model:/tmp/model dwhitena/goregtrain:single /goregtrain -inDir=/tmp/training -outDir=/tmp/model \n\nRegression Formula:\nPredicted = 152.13 + bmi*949.44\n```", "```py\n$ ls model \nmodel.json\n$ cat model/model.json \n{\n    \"intercept\": 152.13348416289818,\n    \"coefficients\": [\n        {\n            \"name\": \"bmi\",\n            \"coefficient\": 949.4352603839862\n        }\n    ]\n}\n```", "```py\n$ cat attributes/1.json\n{\n    \"independent_variables\": [\n        {\n            \"name\": \"bmi\",\n            \"value\": 0.0616962065187\n        },\n        {\n            \"name\": \"ltg\",\n            \"value\": 0.0199084208763\n        }\n    ]\n}\n$ sudo docker run -v $PWD/attributes:/tmp/attributes -v $PWD/model:/tmp/model dwhitena/goregpredict /goregpredict -inModelDir=/tmp/model -inVarDir=/tmp/attributes -outDir=/tmp/attributes\n$ cat attributes/1.json \n{\n    \"predicted_diabetes_progression\": 210.7100380636843,\n    \"independent_variables\": [\n        {\n            \"name\": \"bmi\",\n            \"value\": 0.0616962065187\n        },\n        {\n            \"name\": \"ltg\",\n            \"value\": 0.0199084208763\n        }\n    ]\n}\n```", "```py\n$ kubectl get all\nNAME READY STATUS RESTARTS AGE\npo/etcd-2142892294-38ptw 1/1 Running 0 2m\npo/pachd-776177201-04l6w 1/1 Running 0 2m\n\nNAME CLUSTER-IP EXTERNAL-IP PORT(S) AGE\nsvc/etcd 10.0.0.141 <nodes> 2379:32379/TCP 2m\nsvc/kubernetes 10.0.0.1 <none> 443/TCP 3m\nsvc/pachd 10.0.0.178 <nodes> 650:30650/TCP,651:30651/TCP,652:30652/TCP 2m\n\nNAME DESIRED CURRENT UP-TO-DATE AVAILABLE AGE\ndeploy/etcd 1 1 1 1 2m\ndeploy/pachd 1 1 1 1 2m\n\nNAME DESIRED CURRENT READY AGE\nrs/etcd-2142892294 1 1 1 2m\nrs/pachd-776177201 1 1 1 2m\n```", "```py\n$ pachctl version\nCOMPONENT           VERSION             \npachctl             1.6.0           \npachd               1.6.0\n```", "```py\n// Connect to Pachyderm using the IP of our\n// Kubernetes cluster. Here we will use localhost\n// to mimic the scenario when you have k8s running\n// locally and/or you are forwarding the Pachyderm\n// port to your localhost.. By default\n// Pachyderm will be exposed on port 30650.\nc, err := client.NewFromAddress(\"0.0.0.0:30650\")\nif err != nil {\n    log.Fatal(err)\n}\ndefer c.Close()\n\n// Create a data repository called \"training.\"\nif err := c.CreateRepo(\"training\"); err != nil {\n    log.Fatal(err)\n}\n\n// Create a data repository called \"attributes.\"\nif err := c.CreateRepo(\"attributes\"); err != nil {\n    log.Fatal(err)\n}\n\n// Now, we will list all the current data repositories\n// on the Pachyderm cluster as a sanity check. We\n// should now have two data repositories.\nrepos, err := c.ListRepo(nil)\nif err != nil {\n    log.Fatal(err)\n}\n\n// Check that the number of repos is what we expect.\nif len(repos) != 2 {\n    log.Fatal(\"Unexpected number of data repositories\")\n}\n\n// Check that the name of the repo is what we expect.\nif repos[0].Repo.Name != \"attributes\" || repos[1].Repo.Name != \"training\" {\n    log.Fatal(\"Unexpected data repository name\")\n}\n```", "```py\n$ go build\n$ ./myprogram\n$ pachctl list-repo\nNAME CREATED SIZE \nattributes 3 seconds ago 0B \ntraining 3 seconds ago 0B \n```", "```py\n// Connect to Pachyderm.\nc, err := client.NewFromAddress(\"0.0.0.0:30650\")\nif err != nil {\n    log.Fatal(err)\n}\ndefer c.Close()\n\n// Start a commit in our \"attributes\" data repo on the \"master\" branch.\ncommit, err := c.StartCommit(\"attributes\", \"master\")\nif err != nil {\n    log.Fatal(err)\n}\n\n// Open one of the attributes JSON files.\nf, err := os.Open(\"1.json\")\nif err != nil {\n    log.Fatal(err)\n}\n\n// Put a file containing the attributes into the data repository.\nif _, err := c.PutFile(\"attributes\", commit.ID, \"1.json\", f); err != nil {\n    log.Fatal(err)\n}\n\n// Finish the commit.\nif err := c.FinishCommit(\"attributes\", commit.ID); err != nil {\n    log.Fatal(err)\n}\n\n// Start a commit in our \"training\" data repo on the \"master\" branch.\ncommit, err = c.StartCommit(\"training\", \"master\")\nif err != nil {\n    log.Fatal(err)\n}\n\n// Open up the training data set.\nf, err = os.Open(\"diabetes.csv\")\nif err != nil {\n    log.Fatal(err)\n}\n\n// Put a file containing the training data set into the data repository.\nif _, err := c.PutFile(\"training\", commit.ID, \"diabetes.csv\", f); err != nil {\n    log.Fatal(err)\n}\n\n// Finish the commit.\nif err := c.FinishCommit(\"training\", commit.ID); err != nil {\n    log.Fatal(err)\n}\n```", "```py\n$ go build\n$ ./myprogram \n$ pachctl list-repo\nNAME CREATED SIZE \ntraining 13 minutes ago 73.74KiB \nattributes 13 minutes ago 210B \n$ pachctl list-file training master\nNAME TYPE SIZE \ndiabetes.csv file 73.74KiB \n$ pachctl list-file attributes master\nNAME TYPE SIZE \n1.json file 210B\n```", "```py\n{\n  \"pipeline\": {\n    \"name\": \"model\"\n  },\n  \"transform\": {\n    \"image\": \"dwhitena/goregtrain:single\",\n    \"cmd\": [ \n      \"/goregtrain\",\n      \"-inDir=/pfs/training\",\n      \"-outDir=/pfs/out\"\n    ] \n  },\n  \"parallelism_spec\": {\n    \"constant\": \"1\"\n  },\n  \"input\": {\n    \"atom\": {\n      \"repo\": \"training\",\n      \"glob\": \"/\"\n    }\n  }\n}\n```", "```py\n$ pachctl create-pipeline -f model.json\n```", "```py\n$ kubectl get pods\nNAME READY STATUS RESTARTS AGE\netcd-2142892294-38ptw 1/1 Running 0 2h\npachd-776177201-04l6w 1/1 Running 0 2h\npipeline-model-v1-p0lnf 2/2 Running 0 1m\n```", "```py\n$ pachctl list-job\nID OUTPUT COMMIT STARTED DURATION RESTART PROGRESS DL UL STATE \n14f052ae-878d-44c9-a1f9-ab0cf6d45227 model/a2c7b7dfb44a40e79318c2de30c7a0c8 3 minutes ago Less than a second 0 1 + 0 / 1 73.74KiB 160B success \n$ pachctl list-repo\nNAME CREATED SIZE \nmodel 3 minutes ago 160B \ntraining About an hour ago 73.74KiB \nattributes About an hour ago 210B \n$ pachctl list-file model master\nNAME TYPE SIZE k8s\nmodel.json file 160B \n$ pachctl get-file model master model.json\n{\n    \"intercept\": 152.13348416289818,\n    \"coefficients\": [\n        {\n            \"name\": \"bmi\",\n            \"coefficient\": 949.4352603839862\n        }\n    ]\n}\n```", "```py\n{\n  \"pipeline\": {\n    \"name\": \"prediction\"\n  },\n  \"transform\": {\n    \"image\": \"dwhitena/goregpredict\",\n    \"cmd\": [ \n      \"/goregpredict\", \n      \"-inModelDir=/pfs/model\", \n      \"-inVarDir=/pfs/attributes\", \n      \"-outDir=/pfs/out\" \n    ]\n  },\n  \"parallelism_spec\": {\n    \"constant\": \"1\"\n  },\n  \"input\": {\n    \"cross\": [\n      {\n        \"atom\": {\n          \"repo\": \"attributes\",\n          \"glob\": \"/*\"\n        }\n      },\n      {\n        \"atom\": {\n          \"repo\": \"model\",\n          \"glob\": \"/\"\n        }\n      }\n    ]\n  }\n}\n```", "```py\n$ pachctl create-pipeline -f prediction.json \n$ pachctl list-job\nID OUTPUT COMMIT STARTED DURATION RESTART PROGRESS DL UL STATE \n03f36398-89db-4de4-ad3d-7346d56883c0 prediction/5ce47c9e788d4893ae00c7ee6b1e8431 About a minute ago Less than a second 0 1 + 0 / 1 370B 266B success \n14f052ae-878d-44c9-a1f9-ab0cf6d45227 model/a2c7b7dfb44a40e79318c2de30c7a0c8 19 minutes ago Less than a second 0 1 + 0 / 1 73.74KiB 160B success \n$ pachctl list-repo\nNAME CREATED SIZE \nprediction About a minute ago 266B \nmodel 19 minutes ago 160B \ntraining About an hour ago 73.74KiB \nattributes About an hour ago 210B \n$ pachctl list-file prediction master\nNAME TYPE SIZE \n1.json file 266B \n$ pachctl get-file prediction master 1.json\n{\n    \"predicted_diabetes_progression\": 210.7100380636843,\n    \"independent_variables\": [\n        {\n            \"name\": \"bmi\",\n            \"value\": 0.0616962065187\n        },\n        {\n            \"name\": \"ltg\",\n            \"value\": 0.0199084208763\n        }\n    ]\n}\n```", "```py\n$ ls\n2.json 3.json\n$ pachctl put-file attributes master -c -r -f .\n$ pachctl list-file attributes master\nNAME TYPE SIZE \n1.json file 210B \n2.json file 211B \n3.json file 211B\n```", "```py\n$ pachctl list-job\nID OUTPUT COMMIT STARTED DURATION RESTART PROGRESS DL UL STATE \nbe71b034-9333-4f75-b443-98d7bc5b48ab prediction/bb2fd223df664e70ad14b14491109c0f About a minute ago Less than a second 0 2 + 1 / 3 742B 536B success \n03f36398-89db-4de4-ad3d-7346d56883c0 prediction/5ce47c9e788d4893ae00c7ee6b1e8431 8 minutes ago Less than a second 0 1 + 0 / 1 370B 266B success \n14f052ae-878d-44c9-a1f9-ab0cf6d45227 model/a2c7b7dfb44a40e79318c2de30c7a0c8 26 minutes ago Less than a second 0 1 + 0 / 1 73.74KiB 160B success\n```", "```py\n$ pachctl list-file prediction master\nNAME TYPE SIZE \n1.json file 266B \n2.json file 268B \n3.json file 268B\n```", "```py\n$ pachctl update-pipeline -f model.json --reprocess\n```", "```py\n$ pachctl list-job\nID OUTPUT COMMIT STARTED DURATION RESTART PROGRESS DL UL STATE \n03667301-980b-484b-afbe-7ea30da695f5 prediction/ef32a74b04ee4edda7bc2a2b469f3e03 2 minutes ago Less than a second 0 3 + 0 / 3 1.355KiB 803B success \n5587e13c-4854-4f3a-bc4c-ae88c65c007f model/f54ca1a0142542579c1543e41f5e9403 2 minutes ago Less than a second 0 1 + 0 / 1 73.74KiB 252B success \nbe71b034-9333-4f75-b443-98d7bc5b48ab prediction/bb2fd223df664e70ad14b14491109c0f 16 minutes ago Less than a second 0 2 + 1 / 3 742B 536B success \n03f36398-89db-4de4-ad3d-7346d56883c0 prediction/5ce47c9e788d4893ae00c7ee6b1e8431 23 minutes ago Less than a second 0 1 + 0 / 1 370B 266B success \n14f052ae-878d-44c9-a1f9-ab0cf6d45227 model/a2c7b7dfb44a40e79318c2de30c7a0c8 41 minutes ago Less than a second 0 1 + 0 / 1 73.74KiB 160B success\n```", "```py\n$ pachctl inspect-commit prediction ef32a74b04ee4edda7bc2a2b469f3e03\nCommit: prediction/ef32a74b04ee4edda7bc2a2b469f3e03\nParent: bb2fd223df664e70ad14b14491109c0f \nStarted: 8 minutes ago\nFinished: 8 minutes ago \nSize: 803B\nProvenance: training/e0f9357455234d8bb68540af1e8dde81 attributes/2e5fef211f14498ab34c0520727296bb model/f54ca1a0142542579c1543e41f5e9403\n```", "```py\n$ pachctl get-file model f54ca1a0142542579c1543e41f5e9403 model.json\n{\n    \"intercept\": 152.13348416289583,\n    \"coefficients\": [\n        {\n            \"name\": \"bmi\",\n            \"coefficient\": 675.069774431606\n        },\n        {\n            \"name\": \"ltg\",\n            \"coefficient\": 614.9505047824742\n        }\n    ]\n}\n```", "```py\n$ pachctl inspect-commit prediction bb2fd223df664e70ad14b14491109c0f\nCommit: prediction/bb2fd223df664e70ad14b14491109c0f\nParent: 5ce47c9e788d4893ae00c7ee6b1e8431 \nStarted: 25 minutes ago\nFinished: 25 minutes ago \nSize: 802B\nProvenance: model/a2c7b7dfb44a40e79318c2de30c7a0c8 training/e0f9357455234d8bb68540af1e8dde81 attributes/2e5fef211f14498ab34c0520727296bb \n$ pachctl get-file model a2c7b7dfb44a40e79318c2de30c7a0c8 model.json\n{\n    \"intercept\": 152.13348416289818,\n    \"coefficients\": [\n        {\n            \"name\": \"bmi\",\n            \"coefficient\": 949.4352603839862\n        }\n    ]\n}\n```", "```py\n  \"parallelism_spec\": {\n    \"constant\": \"10\"\n  },\n```", "```py\n$ pachctl update-pipeline -f prediction.json\n $ kubectl get pods\n NAME READY STATUS RESTARTS AGE\n etcd-2142892294-38ptw 1/1 Running 0 3h\n pachd-776177201-04l6w 1/1 Running 0 3h\n pipeline-model-v2-168k5 2/2 Running 0 29m\n pipeline-prediction-v2-0p6zs 0/2 Init:0/1 0 6s\n pipeline-prediction-v2-3fbsc 0/2 Init:0/1 0 6s\n pipeline-prediction-v2-c3m4f 0/2 Init:0/1 0 6s\n pipeline-prediction-v2-d11b9 0/2 Init:0/1 0 6s\n pipeline-prediction-v2-hjdll 0/2 Init:0/1 0 6s\n pipeline-prediction-v2-hnk64 0/2 Init:0/1 0 6s\n pipeline-prediction-v2-q29f1 0/2 Init:0/1 0 6s\n pipeline-prediction-v2-qlhm4 0/2 Init:0/1 0 6s\n pipeline-prediction-v2-qrnf9 0/2 Init:0/1 0 6s\n pipeline-prediction-v2-rdt81 0/2 Init:0/1 0 6s\n $ kubectl get pods\n NAME READY STATUS RESTARTS AGE\n etcd-2142892294-38ptw 1/1 Running 0 3h\n pachd-776177201-04l6w 1/1 Running 0 3h\n pipeline-model-v2-168k5 2/2 Running 0 30m\n pipeline-prediction-v2-0p6zs 2/2 Running 0 26s\n pipeline-prediction-v2-3fbsc 2/2 Running 0 26s\n pipeline-prediction-v2-c3m4f 2/2 Running 0 26s\n pipeline-prediction-v2-d11b9 2/2 Running 0 26s\n pipeline-prediction-v2-hjdll 2/2 Running 0 26s\n pipeline-prediction-v2-hnk64 2/2 Running 0 26s\n pipeline-prediction-v2-q29f1 2/2 Running 0 26s\n pipeline-prediction-v2-qlhm4 2/2 Running 0 26s\n pipeline-prediction-v2-qrnf9 2/2 Running 0 26s\n pipeline-prediction-v2-rdt81 2/2 Running 0 26s\n```"]