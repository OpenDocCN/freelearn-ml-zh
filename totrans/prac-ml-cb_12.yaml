- en: Chapter 12. Case Study - Exploring World Bank Data
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**World Bank Indicators** (**WDI**) is the World Bank''s compilation of internationally
    comparable and measurable statistics about the growth of global development and
    its impact on the quality of people''s lives measuring the state of development
    in countries, regions and income groups by looking into data collected from over
    200 economies and more than 50 partner organizations to present more than 1400
    indicators. On September 25, 2015, the United Nations General Assembly formally
    adopted the 2030 agenda for sustainable development, to guide global action over
    the next 15 years. The five main focus themes of SDG''s are people, planet, prosperity,
    peace, and partnership. Countries have resolved to end poverty and hunger and
    ensure that all people can fulfill their potential in dignity and equality and
    in a healthy environment; to protect the planet from degradation and take urgent
    action on climate change; to ensure that all people can enjoy prosperous and fulfilling
    lives and that progress takes place in harmony with nature; to foster peaceful,
    just, and inclusive societies free from fear and violence; and to mobilize the
    means to implement agenda 2030, focused on the poorest and most vulnerable, through
    strong global partnership. A World Bank group perspective, for each of the 17
    goals, experts from the World Bank''s Development Data Group, global practices
    and cross-cutting solution areas have selected indicators to identify and analyze
    important trends and challenges, and to elicit discussion on measurement issues.
    World Development Indicators is the result of a collaboration of numerous international
    agencies, over 200 national statistical offices and many others.'
  prefs: []
  type: TYPE_NORMAL
- en: Exploring World Bank data
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In 2012, 13 percent of the world's population lived below the international
    poverty line of $1.90 a day, down from 37 percent in 1990\. Declines in all regions
    contributed to the early success of meeting the Millennium Development Goal target
    of halving extreme poverty globally. The aim is to eliminate poverty in all forms
    by 2030 and to achieve social protection for poor, increase access to basic services,
    and to support people harmed by conflict and climate-related disaster.
  prefs: []
  type: TYPE_NORMAL
- en: More than half the deaths recorded in low income countries is due to communicable
    diseases or maternal, prenatal, or nutrition conditions. While, in the middle
    and high-income countries more than two-thirds of the recorded deaths are due
    to non communicable diseases. Energy use increased about 54 percent between 1990
    and 2013 worldwide. Access to energy is fundamental to development, but as economies
    evolve, rising incomes and growing populations demand more energy. Energy, especially
    electricity, is crucial to improving the standard of living for people in low
    and middle income countries.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In order to carry out the pricing of reinsurance contracts we shall be using
    a dataset collected from the Hurricane dataset.
  prefs: []
  type: TYPE_NORMAL
- en: 'In order to carry out the data pattern analysis of the World Bank we shall
    be using a dataset collected from the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Total world population (1960-2015)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Life expectancy at birth for all the countries and regions (1960-2014)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fertility rate (births per woman) for all the countries and regions (1960-2014)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: GDP as measured in US$ for all the countries and regions (1960-2015)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Poverty head count ratio for all the countries and regions (1960-2016)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Access to sanitation for all the countries and regions (1960-2016)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Percentage of population with access to electricity for all countries and regions
    (1960-2016)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: CO[2] emissions for all countries and regions (1960-2016)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Step 1 - collecting and describing data
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The World Bank's dataset for the analysis is available from the World Bank data
    bank and can be downloaded freely.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Let's get into the details.
  prefs: []
  type: TYPE_NORMAL
- en: Step 2 - downloading the data
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Load the following packages:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Version info: Code for this page was tested in R version 3.3.0 (2016-05-03)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Each of the following libraries needs to be installed:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Let's download the data and understand the relationships among the variables.
    We will begin by downloading data from the World Bank website. `data.table()`
    as a function allows fast aggregation of large datasets, ordering joins, adding/modifying/deleting
    of columns by group using no copies, listing of columns, a friendly file reader,
    and a parallel file writer. The `wb()` function uses the World Bank API to download
    the requested information. indicator represents the character vector of indicator
    codes.
  prefs: []
  type: TYPE_NORMAL
- en: 'The indicator codes are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '`SP.POP.TOTL`: Total world population (1960-2015)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`SP.DYN.LE00.IN`: Life expectancy at birth for all the countries and regions
    (1960-2014)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`SP.DYN.TFRT.IN`: Fertility rate (births per woman) for all the countries and
    regions (1960-2014)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The result is stored in the `Pop_LifeExp_FertRt` data frame. Use the following
    command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'The indicator codes are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '`SP.POP.TOTL`: Total world population (1960-2015)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`NY.GDP.MKTP.CD-GDP`: GDP as measured in US$ for all the countries and regions
    (1960-2015)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`SI.POV.2DAY`: Poverty head count ratio for all the countries and regions (1960-2016)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The result is stored in the `Pop_GDPUSD_HeadCnt` data frame. Use the following
    command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'The indicator codes are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '`SP.POP.TOTL`: Total world population (1960-2015)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`NY.GDP.MKTP.CD`: GDP as measured in US$ for all the countries and regions
    (1960-2015)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`SH.STA.ACSN`: Access to sanitation for all the countries and regions (1960-2016)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The result is stored in the `Pop_GDPUSD_Sanitation` data frame. Use the following
    command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'The indicator codes are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '`NY.GDP.MKTP.CD`: GDP as measured in US$ for all the countries and regions
    (1960-2015)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`EG.ELC.ACCS.ZS`: Percentage of population with access to electricity for all
    countries and regions (1960-2016)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`EN.ATM.CO2E.KT`: Electricity consumption KWh per capita for all countries
    and regions (1960-2016)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The result is stored in the `GDPUSD_Electricity_CO2` data frame. Use the following
    command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Step 3 - exploring data
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Exploring the dimension of the `Pop_LifeExp_FertRt` data frame: The `dim()`
    function returns the dimension of the `Pop_LifeExp_FertRt` data frame. The `Pop_LifeExp_FertRt`
    data frame is passed as an input parameter. The result clearly states that there
    are 41150 rows of data and six columns:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'The result is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Step 3 - exploring data](img/image_12_001.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Exploring the dimension of the `Pop_LifeExp_FertRt` data frame: The result
    clearly states that there are 27023 rows of data and six columns:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'The result is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Step 3 - exploring data](img/image_12_002.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Exploring the dimension of the `Pop_GDPUSD_Sanitation` data frame: The result
    clearly states that there are 31884 rows of data and six columns:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'The result is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Step 3 - exploring data](img/image_12_003.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Exploring the dimension of the `GDPUSD_Electricity_CO2` data frame: The result
    clearly states that there are 23994 rows of data and six columns:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'The result is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Step 3 - exploring data](img/image_12_004.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Exploring the internal structure of the `Pop_LifeExp_FertRt` data frame: The
    `str()` function displays the internal structure of the data frame. The `Pop_LifeExp_FertRt`
    is passed as an R object to the `str()` function:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 'The result is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Step 3 - exploring data](img/image_12_005.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Exploring the internal structure of the `Pop_GDPUSD_HeadCnt` data frame:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'The result is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Step 3 - exploring data](img/image_12_006.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Explore the internal structure of the `Pop_GDPUSD_Sanitation` data frame:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'The result is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Step 3 - exploring data](img/image_12_007.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Exploring the internal structure of the `GDPUSD_Electricity_CO2` data frame:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: 'The result is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Step 3 - exploring data](img/image_12_008.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Exploring the internal structure of the `GDPUSD_Electricity_CO2` data frame:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: 'The result is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Step 3 - exploring data](img/image_12_009.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Printing the `Pop_LifeExp_FertRt` data frame: The `head()` function returns
    the first part of the `Pop_LifeExp_FertRt` data frame. The `Pop_LifeExp_FertRt`
    data frame is passed as an input parameter:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: 'The result is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Step 3 - exploring data](img/image_12_010.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Printing the `Pop_GDPUSD_HeadCnt` data frame:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: 'The result is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Step 3 - exploring data](img/image_12_011.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Printing the `Pop_GDPUSD_Sanitation` data frame:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: 'The result is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Step 3 - exploring data](img/image_12_012.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Printing the `GDPUSD_Electricity_CO2` data frame:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: 'The result is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Step 3 - exploring data](img/image_12_013.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Exploring the dimension of the `SP.POP.TOTL` data frame: The `dim()` function
    returns the dimension of the `SP.POP.TOTL` data frame. The `SP.POP.TOTL` data
    frame is passed as an input parameter. The result clearly states that there are
    14623 rows of data and six columns:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: 'The result is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Step 3 - exploring data](img/image_12_014.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Exploring the dimension of the `SP.DYN.LE00.IN` data frame:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: 'The result is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Step 3 - exploring data](img/image_12_015.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Exploring the dimension of the `SP.DYN.TFRT.IN` data frame:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: 'The result is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Step 3 - exploring data](img/image_12_016.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Exploring the dimension of the `NY.GDP.MKTP.CD` data frame:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: 'The result is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Step 3 - exploring data](img/image_12_017.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Exploring the dimension of the `SI.POV.2DAY` data frame:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: 'The result is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Step 3 - exploring data](img/image_12_018.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Exploring the dimension of the `SH.STA.ACSN` data frame:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: 'The result is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Step 3 - exploring data](img/image_12_019.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Exploring the dimension of the `EG.ELC.ACCS.ZS` data frame:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: 'The result is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Step 3 - exploring data](img/image_12_020.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Exploring the dimension of the `EN.ATM.CO2E.KT` data frame:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: 'The result is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Step 3 - exploring data](img/image_12_021.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Downloading the updated country and region information from the World Bank
    API using `wbcountries()` as a function:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: 'Printing the `Countries` data frame: The `head()` function returns the first
    part of the `Countries` data frame:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: 'The result is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Step 3 - exploring data](img/image_12_022.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Step 4 - building the models
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Sorting the `Pop_LifeExp_FertRt` data table: The `setkey()` function sorts
    a `Pop_LifeExp_FertRt` data table and marks it as sorted. The sorted columns are
    the key. The key is in column `iso2c`; the column `iso2c` is always sorted in
    ascending order. The table is changed by reference and is therefore very memory
    efficient:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: 'Sorting the `Pop_GDPUSD_HeadCnt` data table:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: 'Sorting the `Pop_GDPUSD_Sanitation` data table:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
- en: 'Sorting the `GDPUSD_Electricity_CO2` data table:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE32]'
  prefs: []
  type: TYPE_PRE
- en: 'Sorting the `Countries` data table:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE33]'
  prefs: []
  type: TYPE_PRE
- en: 'Printing the `Countries` data table:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE34]'
  prefs: []
  type: TYPE_PRE
- en: 'The result is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Step 4 - building the models](img/image_12_023.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Removing aggregates from the `Pop_LifeExp_FertRt` dataset while adding regions
    to the dataset:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE35]'
  prefs: []
  type: TYPE_PRE
- en: 'Printing the `Pop_LifeExp_FertRt` data table:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE36]'
  prefs: []
  type: TYPE_PRE
- en: 'The result is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Step 4 - building the models](img/image_12_024.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Removing aggregates from the `Pop_GDPUSD_HeadCnt` dataset while adding regions
    to the dataset:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE37]'
  prefs: []
  type: TYPE_PRE
- en: 'Removing aggregates from the `Pop_GDPUSD_Sanitation` dataset while adding regions
    to the dataset:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE38]'
  prefs: []
  type: TYPE_PRE
- en: 'Removing aggregates from the `GDPUSD_Electricity_CO2` dataset while adding
    regions to the dataset:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE39]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE40]'
  prefs: []
  type: TYPE_PRE
- en: 'Printing the contents of the data frame `wPop_LifeExp_FertRt`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE41]'
  prefs: []
  type: TYPE_PRE
- en: 'The result is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Step 4 - building the models](img/image_12_025.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Printing the contents of the data frame `wGDPUSD_Electricity_CO2`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE42]'
  prefs: []
  type: TYPE_PRE
- en: 'The result is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Step 4 - building the models](img/image_12_026.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Converting the `wPop_LifeExp_FertRt`, `wPop_GDPUSD_HeadCnt`, `wPop_GDPUSD_Sanitation`,
    and `wGDPUSD_Electricity_CO2` datasets from character format to integer format:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE43]'
  prefs: []
  type: TYPE_PRE
- en: 'Setting names: The `setnames()` function sets the names of the `wPop_LifeExp_FertRt`,
    `wPop_GDPUSD_HeadCnt`, `wPop_GDPUSD_Sanitation`, and `wGDPUSD_Electricity_CO2`
    objects:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE44]'
  prefs: []
  type: TYPE_PRE
- en: Step 5 - plotting the models
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Plotting the `wPop_LifeExp_FertRt` data frame models  with the following steps.
    The `gvisMotionChart()` function reads the `wPop_LifeExp_FertRt` data frame. It
    uses the Google Visualization API to create text output which is included in a
    web page. The chart is rendered by the web browser in Flash. A motion chart which
    is dynamic in nature explores indicators. `wPop_LifeExp_FertRt` is the data frame.
    `idvar = "Country"` represents the column name of data which is to be analyzed.
    `timevar = "Year"` is the column name of data which represents the time dimension.
    `xvar = "LifeExpectancy"` is the numerical vector of the data to be plotted on
    the *x* axis. `yvar = "Fertility"` is the numerical vector of the data to be plotted
    on the y axis. `sizevar = "Population"` represents the values of the column which
    are to be mapped to actual pixel values. `colorvar = "Region"` identifies the
    bubbles. Use the following commands:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE45]'
  prefs: []
  type: TYPE_PRE
- en: 'Plotting the `wPop_GDPUSD_HeadCnt` data frame models:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE46]'
  prefs: []
  type: TYPE_PRE
- en: 'Plotting the `wPop_GDPUSD_Sanitation` data frame models:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE47]'
  prefs: []
  type: TYPE_PRE
- en: 'Plotting the `pltGDPUSD_Electricity_CO2` data frame models:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE48]'
  prefs: []
  type: TYPE_PRE
- en: 'The results are as follows, Fertility vs life expectancy:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Step 5 - plotting the models](img/image_12_027.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Population growth:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Step 5 - plotting the models](img/image_12_028.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Growth of GDP as measured in US$:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Step 5 - plotting the models](img/image_12_029.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Poverty head count ratio vs population growth:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Step 5 - plotting the models](img/image_12_030.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Growth in access of population to sanitation:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Step 5 - plotting the models](img/image_12_031.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Sanitation access:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Step 5 - plotting the models](img/image_12_032.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Improvement in sanitation access vs population growth:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Step 5 - plotting the models](img/image_12_033.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Population with access to electricity for all countries and regions:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Step 5 - plotting the models](img/image_12_034.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'CO[2] emissions (log scale):'
  prefs: []
  type: TYPE_NORMAL
- en: '![Step 5 - plotting the models](img/image_12_035.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'CO[2] emission vs electricity consumption:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Step 5 - plotting the models](img/image_12_036.jpg)![Step 5 - plotting the
    models](img/image_12_037.jpg)'
  prefs: []
  type: TYPE_IMG
