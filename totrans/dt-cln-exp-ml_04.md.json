["```py\n    import pandas as pd\n    import numpy as np\n    nls97 = pd.read_csv(\"data/nls97b.csv\")\n    nls97.set_index(\"personid\", inplace=True)\n    covidtotals = pd.read_csv(\"data/covidtotals.csv\")\n    covidtotals.set_index(\"iso_code\", inplace=True)\n    ```", "```py\n    covidtotals.shape\n    (221, 16)\n    demovars = ['population_density','aged_65_older',\n      'gdp_per_capita', 'life_expectancy', \n      'diabetes_prevalence']\n    covidtotals[demovars].isnull().sum(axis=0)\n    population_density        15\n    aged_65_older             33\n    gdp_per_capita            28\n    life_expectancy            4\n    diabetes_prevalence       21\n    ```", "```py\n    demovarsmisscnt = covidtotals[demovars].isnull().sum(axis=1)\n    demovarsmisscnt.value_counts().sort_index()\n    0        181\n    1        15\n    2         6\n    3         5\n    4        11\n    5         3\n    dtype: int64\n    ```", "```py\n    covidtotals.loc[demovarsmisscnt > = 4, ['location'] +\n      demovars].sample(6, random_state=1).T\n    iso_code                         FLK   NIU        MSR\\\n    location            Falkland Islands  Niue  Montserrat\n    population_density               NaN   NaN         NaN\n    aged_65_older                    NaN   NaN         NaN\n    gdp_per_capita                   NaN   NaN         NaN\n    life_expectancy                   81    74          74\n    diabetes_prevalence              NaN   NaN         NaN\n    iso_code                         COK    SYR        GGY\n    location                Cook Islands  Syria   Guernsey\n    population_density               NaN    NaN        NaN\n    aged_65_older                    NaN    NaN        NaN\n    gdp_per_capita                   NaN    NaN        NaN\n    life_expectancy                   76      7        NaN\n    diabetes_prevalence              NaN    NaN        NaN\n    ```", "```py\n    totvars = \n      ['location','total_cases_mill','total_deaths_mill']\n    covidtotals[totvars].isnull().sum(axis=0)\n    location                0\n    total_cases_mill       29\n    total_deaths_mill      36\n    dtype: int64\n    ```", "```py\n    totvarsmisscnt = \n      covidtotals[totvars].isnull().sum(axis=1)\n    totvarsmisscnt.value_counts().sort_index()\n    0        185\n    1        7\n    2        29\n    dtype: int64\n    ```", "```py\n    nlsparents = nls97.iloc[:,-4:]\n    nlsparents.shape\n    (8984, 4)\n    nlsparents.loc[nlsparents.motherhighgrade.between(-5, \n      -1), 'motherhighgrade'].value_counts()\n    -3        523\n    -4        165\n    Name: motherhighgrade, dtype: int64\n    ```", "```py\n    nlsparents.loc[nlsparents.apply(lambda x: x.between(\n      -5,-1)).any(axis=1)]\n            motherage  parentincome  fatherhighgrade  motherhighgrade\n    personid  \n    100284    22            50000            12         -3\n    100931    23            60200            -3         13\n    101122    25               -4            -3         -3\n    101414    27            24656            10         -3\n    101526    -3            79500            -4         -4\n             ...              ...            ...       ...\n    999087    -3           121000            -4         16\n    999103    -3            73180            12         -4\n    999406    19               -4            17         15\n    999698    -3            13000            -4         -4\n    999963    29               -4            12         13\n    [3831 rows x 4 columns]\n    ```", "```py\n    nlsparents.apply(lambda x: x.between(-5,-1).sum())\n    motherage              608\n    parentincome          2396\n    fatherhighgrade       1856\n    motherhighgrade        688\n    dtype: int64\n    ```", "```py\n    nlsparents.replace(list(range(-5,0)), \n      np.nan, inplace=True)\n    nlsparents.isnull().sum()\n    motherage            608\n    parentincome        2396\n    fatherhighgrade     1856\n    motherhighgrade      688\n    dtype: int64\n    ```", "```py\n    import pandas as pd\n    nls97 = pd.read_csv(\"data/nls97b.csv\")\n    nls97.set_index(\"personid\", inplace=True)\n    schoolrecordlist = \n      ['satverbal','satmath','gpaoverall','gpaenglish',\n      'gpamath','gpascience','highestdegree',\n      'highestgradecompleted']\n    schoolrecord = nls97[schoolrecordlist]\n    schoolrecord.shape\n    (8984, 8)\n    ```", "```py\n    schoolrecord.isnull().sum(axis=0)\n    satverbal                        7578\n    satmath                          7577\n    gpaoverall                       2980\n    gpaenglish                       3186\n    gpamath                          3218\n    gpascience                       3300\n    highestdegree                      31\n    highestgradecompleted            2321\n    dtype: int64\n    ```", "```py\n    misscnt = schoolrecord.isnull().sum(axis=1)\n    misscnt.value_counts().sort_index()\n    0         1087\n    1          312\n    2         3210\n    3         1102\n    4          176\n    5          101\n    6         2039\n    7          946\n    8           11\n    dtype: int64\n    ```", "```py\n    schoolrecord.loc[misscnt>=7].head(4).T\n    personid              101705  102061  102648  104627\n    satverbal                NaN     NaN     NaN     NaN\n    satmath                  NaN     NaN     NaN     NaN\n    gpaoverall               NaN     NaN     NaN     NaN\n    gpaenglish               NaN     NaN     NaN     NaN\n    gpamath                  NaN     NaN     NaN     NaN\n    gpascience               NaN     NaN     NaN     NaN\n    highestdegree          1.GED  0.None   1.GED  0.None\n    highestgradecompleted    NaN     NaN     NaN     NaN\n    ```", "```py\n    schoolrecord = schoolrecord.dropna(thresh=2)\n    schoolrecord.shape\n    (8027, 8)\n    schoolrecord.isnull().sum(axis=1).value_counts().sort_index()\n    0      1087\n    1       312\n    2      3210\n    3      1102\n    4       176\n    5       101\n    6      2039\n    dtype: int64\n    ```", "```py\n    schoolrecord.gpaoverall.agg(['mean','std','count'])\n    mean         281.84\n    std           61.64\n    count      6,004.00\n    Name: gpaoverall, dtype: float64\n    schoolrecord.gpaoverall.fillna(\n      schoolrecord.gpaoverall.mean(), inplace=True)\n    schoolrecord.gpaoverall.isnull().sum()\n    0\n    schoolrecord.gpaoverall.agg(['mean','std','count'])\n    mean      281.84\n    std        53.30\n    count   8,027.00\n    Name: gpaoverall, dtype: float64\n    ```", "```py\n    wageincome = nls97.wageincome.copy(deep=True)\n    wageincome.isnull().sum()\n    copy method, setting deep to True. We wouldn't normally do this but, in this case, we don't want to change the values of wageincome in the underlying DataFrame. We have avoided this here because we will demonstrate a different method of imputing values in the next couple of code blocks.\n    ```", "```py\n    wageincome.fillna(method='ffill', inplace=True)\n    wageincome.head().T\n    personid\n    100061       12,500\n    100139      120,000\n    100284       58,000\n    100292       58,000\n    100583       30,000\n    Name: wageincome, dtype: float64\n    wageincome.isnull().sum()\n    0\n    wageincome.agg(['mean','std','count'])\n    mean      49,549.33\n    std       40,014.34\n    count      8,984.00\n    Name: wageincome, dtype: float64\n    ```", "```py\n    wageincome = nls97.wageincome.copy(deep=True)\n    wageincome.std()\n    40677.69679818673\n    wageincome.fillna(method='bfill', inplace=True)\n    wageincome.head().T\n    personid\n    100061       12,500\n    100139      120,000\n    100284       58,000\n    100292       30,000\n    100583       30,000\n    Name: wageincome, dtype: float64\n    wageincome.agg(['mean','std','count'])\n    mean    49,419.05\n    std     41,111.54\n    count    8,984.00\n    Name: wageincome, dtype: float64\n    ```", "```py\n    nls97.weeksworked17.mean()\n    39.01664167916042\n    nls97.groupby(['highestdegree'])['weeksworked17'\n      ].mean()\n    highestdegree\n    0\\. None                  28.72\n    1\\. GED                   34.59\n    2\\. High School           38.15\n    3\\. Associates            40.44\n    4\\. Bachelors             43.57\n    5\\. Masters               45.14\n    6\\. PhD                   44.31\n    7\\. Professional          47.20\n    Name: weeksworked17, dtype: float64\n    ```", "```py\n    nls97.loc[~nls97.highestdegree.isnull(),\n      'weeksworked17imp'] = \n      nls97.loc[ ~nls97.highestdegree.isnull() ].\n      groupby(['highestdegree'])['weeksworked17'].\n      apply(lambda group: group.fillna(np.mean(group)))\n    nls97[['weeksworked17imp','weeksworked17',\n      'highestdegree']].head(10)\n           weeksworked17imp  weeksworked17   highestdegree\n    personid                                              \n    100061            48.00         48.00   2\\. High School\n    100139            52.00         52.00   2\\. High School\n    100284             0.00          0.00          0\\. None\n    100292            43.57           NaN     4\\. Bachelors\n    100583            52.00         52.00   2\\. High School\n    100833            47.00         47.00   2\\. High School\n    100931            52.00         52.00    3\\. Associates\n    101089            52.00         52.00   2\\. High School\n    101122            38.15           NaN   2\\. High School\n    101132            44.00         44.00          0\\. None\n    nls97[['weeksworked17imp','weeksworked17']].\\\n      agg(['mean','count'])\n           weeksworked17imp  weeksworked17\n    mean          38.52         39.02\n    count      8,953.00      6,670.00\n    ```", "```py\nimport pandas as pd\nimport numpy as np\nimport statsmodels.api as sm\nnls97 = pd.read_csv(\"data/nls97b.csv\")\nnls97.set_index(\"personid\", inplace=True)\nnls97[['wageincome','highestdegree','weeksworked16',\n  'parentincome']].info()\n<class 'pandas.core.frame.DataFrame'>\nInt64Index: 8984 entries, 100061 to 999963\nData columns (total 4 columns):\n #  Column               Non-Null Count       Dtype\n--  -------               --------------      -----  \n 0wageincome            5091 non-null       float64\n 1  highestdegree         8953 non-null       object \n 2  weeksworked16         7068 non-null       float64\n 3  parentincome8984 non-null       int64\ndtypes: float64(2), int64(1), object(1)\nmemory usage: 350.9+ KB\n```", "```py\n    nls97['hdegnum'] =\n      nls97.highestdegree.str[0:1].astype('float')\n    nls97.groupby(['highestdegree','hdegnum']).size() \n    highestdegree    hdegnum\n    0\\. None                0            953\n    1\\. GED                 1           1146\n    2\\. High School         2           3667\n    3\\. Associates          3            737\n    4\\. Bachelors           4           1673\n    5\\. Masters             5            603\n    6\\. PhD                 6             54\n    7\\. Professional        7            120\n    ```", "```py\n    nls97.parentincome.replace(list(range(-5,0)), np.nan,\n      inplace=True)\n    nls97[['wageincome','hdegnum','weeksworked16', \n      'parentincome']].corr()\n                wageincome  hdegnum  weeksworked16  parentincome\n    wageincome     1.00      0.40         0.18        0.27\n    hdegnum        0.40      1.00         0.24        0.33\n    weeksworked16  0.18      0.24         1.00        0.10\n    parentincome   0.27      0.33         0.10        1.00\n    ```", "```py\n    nls97['missingwageincome'] =\n      np.where(nls97.wageincome.isnull(),1,0)\n    nls97.groupby(['missingwageincome'])[['hdegnum', \n      'parentincome', 'weeksworked16']].agg(['mean', \n      'count'])\n                     hdegnum    parentincome weeksworked16\n                     mean count mean   count  mean   count\n    missingwageincome                                    \n    0                2.76 5072  48,409.13 3803 48.21  5052\n    1                1.95 3881  43,565.87 2785 16.36  2016\n    ```", "```py\n    nls97.weeksworked16.fillna(nls97.weeksworked16.mean(),\n      inplace=True)\n    nls97.parentincome.fillna(nls97.parentincome.mean(),\n      inplace=True)\n    nls97['degltcol'] = np.where(nls97.hdegnum<=2,1,0)\n    nls97['degcol'] = np.where(nls97.hdegnum.between(3,4),\n      1,0)\n    nls97['degadv'] = np.where(nls97.hdegnum>4,1,0)\n    ```", "```py\n    def getlm(df, ycolname, xcolnames):\n      df = df[[ycolname] + xcolnames].dropna()\n      y = df[ycolname]\n      X = df[xcolnames]\n      X = sm.add_constant(X)\n      lm = sm.OLS(y, X).fit()\n      coefficients = pd.DataFrame(zip(['constant'] +\n        xcolnames,lm.params, lm.pvalues), columns = [\n        'features' , 'params','pvalues'])\n      return coefficients, lm\n    ```", "```py\n    xvars = ['weeksworked16', 'parentincome', 'degcol', \n      'degadv']\n    coefficients, lm = getlm(nls97, 'wageincome', xvars)\n    coefficients\n         features           params           pvalues\n    0    constant           7,389.37         0.00\n    1    weeksworked16      494.07           0.00\n    2    parentincome       0.18             0.00\n    3    degcol             15,770.07        0.00\n    4    degadv             36,737.84        0.00\n    ```", "```py\n    pred = lm.predict(sm.add_constant(nls97[xvars])).\n      to_frame().rename(columns= {0: 'pred'})\n    nls97 = nls97.join(pred)\n    nls97['wageincomeimp'] = \n      np.where(nls97.wageincome.isnull(),\n      nls97.pred, nls97.wageincome)\n    pd.options.display.float_format = '{:,.0f}'.format\n    nls97[['wageincomeimp','wageincome'] + xvars].head(10)\n    wageincomeimp  wageincome  weeksworked16  parentincome  degcol  degadv\n    personid                                          \n    100061     12,500     12,500    48     7,400    0    0\n    100139    120,000    120,000    53    57,000    0    0\n    100284     58,000     58,000    47    50,000    0    0\n    100292     36,547        NaN     4    62,760    1    0\n    100583     30,000     30,000    53    18,500    0    0\n    100833     39,000     39,000    45    37,000    0    0\n    100931     56,000     56,000    53    60,200    1    0\n    101089     36,000     36,000    53    32,307    0    0\n    101122     35,151        NaN    39    46,362    0    0\n    101132          0          0    22     2,470    0    0\n    ```", "```py\n    nls97[['wageincomeimp','wageincome']].\n      agg(['count','mean','std'])\n           wageincomeimp  wageincome\n    count        8,984        5,091\n    mean        42,559       49,477\n    std         33,406       40,678\n    ```", "```py\nrandomadd = np.random.normal(0, lm.resid.std(),\n  nls97.shape[0])\nrandomadddf = pd.DataFrame(randomadd, \n  columns=['randomadd'], index=nls97.index)\nnls97 = nls97.join(randomadddf)\nnls97['stochasticpred'] = nls97.pred + nls97.randomadd\nnls97['wageincomeimpstoc'] =\n  np.where(nls97.wageincome.isnull(),\n  nls97.stochasticpred, nls97.wageincome)\n```", "```py\n    nls97[['wageincomeimpstoc','wageincome']].agg([\n      'count','mean','std'])\n\n           wageincomeimpstoc  wageincome\n    count        8,984           5,091\n    mean        42,517          49,477\n    std         41,381          40,678\n    ```", "```py\n    import pandas as pd\n    import numpy as np\n    from sklearn.impute import KNNImputer\n    nls97 = pd.read_csv(\"data/nls97b.csv\")\n    nls97.set_index(\"personid\", inplace=True)\n    ```", "```py\n    nls97['hdegnum'] =\n      nls97.highestdegree.str[0:1].astype('float')\n    nls97['degltcol'] = np.where(nls97.hdegnum<=2,1,0)\n    nls97['degcol'] = \n      np.where(nls97.hdegnum.between(3,4),1,0)\n    nls97['degadv'] = np.where(nls97.hdegnum>4,1,0)\n    nls97.parentincome.replace(list(range(-5,0)), np.nan, \n      inplace=True)\n    ```", "```py\n    wagedatalist = ['wageincome','weeksworked16', \n      'parentincome','degltcol','degcol','degadv']\n    wagedata = nls97[wagedatalist]\n    ```", "```py\nimpKNN = KNNImputer(n_neighbors=47)\nnewvalues = impKNN.fit_transform(wagedata)\nwagedatalistimp = ['wageincomeimp','weeksworked16imp',\n  'parentincomeimp','degltcol','degcol','degadv']\nwagedataimp = pd.DataFrame(newvalues,\n  columns=wagedatalistimp, index=wagedata.index)\n```", "```py\n    wagedata = wagedata.join(wagedataimp[['wageincomeimp', \n      'weeksworked16imp']])\n    wagedata[['wageincome','weeksworked16','parentincome',\n      'degcol','degadv','wageincomeimp']].head(10)\n    wageincome  weeksworked16  parentincome degcol  degadv wageincomeimp\n    personid         \n    100061     12,500    48     7,400    0    0     12,500\n    100139    120,000    53    57,000    0    0    120,000\n    100284     58,000    47    50,000    0    0     58,000\n    100292        NaN     4    62,760    1    0     28,029\n    100583     30,000    53    18,500    0    0     30,000\n    100833     39,000    45    37,000    0    0     39,000\n    100931     56,000    53    60,200    1    0     56,000\n    101089     36,000    53    32,307    0    0     36,000\n    101122        NaN   NaN       NaN    0    0     33,977\n    101132          0     22    2,470    0    0          0\n    ```", "```py\n    wagedata[['wageincome','wageincomeimp']].agg(['count',\n      'mean','std'])\n    wageincome  wageincomeimp \n    count          5,091        8,984\n    mean          49,477        44,781\n    std           40,678        32,034\n    ```", "```py\n    import pandas as pd\n    import numpy as np\n    import sys\n    import sklearn.neighbors._base\n    sys.modules['sklearn.neighbors.base'] =\n      sklearn.neighbors._base\n    from missingpy import MissForest\n    nls97 = pd.read_csv(\"data/nls97b.csv\")\n    nls97.set_index(\"personid\", inplace=True)\n    ```", "```py\n    nls97['hdegnum'] = \n      nls97.highestdegree.str[0:1].astype('float')\n    nls97.parentincome.replace(list(range(-5,0)), np.nan,\n      inplace=True)\n    nls97['degltcol'] = np.where(nls97.hdegnum<=2,1,0)\n    nls97['degcol'] = np.where(nls97.hdegnum.between(3,4), \n      1,0)\n    nls97['degadv'] = np.where(nls97.hdegnum>4,1,0)\n    wagedatalist = ['wageincome','weeksworked16',\n      'parentincome','degltcol','degcol','degadv']\n    wagedata = nls97[wagedatalist]\n    ```", "```py\n    imputer = MissForest()\n    newvalues = imputer.fit_transform(wagedata)\n    wagedatalistimp = ['wageincomeimp','weeksworked16imp', \n      'parentincomeimp','degltcol','degcol','degadv']\n    wagedataimp = pd.DataFrame(newvalues, \n      columns=wagedatalistimp , index=wagedata.index)\n    Iteration: 0\n    Iteration: 1\n    Iteration: 2\n    Iteration: 3\n    ```", "```py\n    wagedata = wagedata.join(wagedataimp[['wageincomeimp', \n      'weeksworked16imp']])\n    wagedata[['wageincome','weeksworked16','parentincome',\n      'degcol','degadv','wageincomeimp']].head(10)\n         wageincome  weeksworked16  parentincome  degcol  degadv  wageincomeimp\n    personid                                         \n    100061     12,500    48     7,400    0    0     12,500\n    100139    120,000    53    57,000    0    0    120,000\n    100284     58,000    47    50,000    0    0     58,000\n    100292        NaN     4    62,760    1    0     42,065\n    100583     30,000    53    18,500    0    0     30,000\n    100833     39,000    45    37,000    0    0     39,000\n    100931     56,000    53    60,200    1    0     56,000\n    101089     36,000     5    32,307    0    0     36,000\n    101122        NaN   NaN       NaN    0    0     32,384\n    101132          0    22     2,470    0    0          0\n    wagedata[['wageincome','wageincomeimp', \n      'weeksworked16','weeksworked16imp']].agg(['count', \n      'mean','std'])\n        wageincome  wageincomeimp  weeksworked16  weeksworked16imp\n    count    5,091        8,984        7,068         8,984\n    mean    49,477       43,140           39            37\n    std     40,678       34,725           21            21\n    ```"]