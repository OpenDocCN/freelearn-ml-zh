- en: Learning More about Feature Detection in OpenCV
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 学习更多关于 OpenCV 中特征检测的知识
- en: In [Chapter 4](61bdd7aa-b605-4061-8bfe-71084c7c7104.xhtml)*, Controlling a Phone
    App with Your Suave Ges**tures*, we used the Good Features to Track algorithm
    to detect trackable features in images. OpenCV offers implementations of several
    more feature-detection algorithms. Two of the other algorithms, called minimum
    eigenvalue corners and Harris Corners, are precursors to Good Features to Track,
    which improves upon them. An official tutorial illustrates the use of eigenvalue
    corners and Harris Corners in a code sample at [https://docs.opencv.org/master/d9/dbc/tutorial_generic_corner_detector.h](https://docs.opencv.org/master/d9/dbc/tutorial_generic_corner_detector.html)[tml](https://docs.opencv.org/master/d9/dbc/tutorial_generic_corner_detector.html).
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在 [第 4 章](61bdd7aa-b605-4061-8bfe-71084c7c7104.xhtml)*，使用优雅的手势控制手机应用* 中，我们使用了
    Good Features to Track 算法来检测图像中的可追踪特征。OpenCV 提供了几个其他特征检测算法的实现。其中另外两种算法，称为最小特征值角和
    Harris 角，是 Good Features to Track 的前身，它们在原有基础上进行了改进。一个官方教程在代码示例中展示了如何使用特征值角和 Harris
    角，请参阅 [https://docs.opencv.org/master/d9/dbc/tutorial_generic_corner_detector.h](https://docs.opencv.org/master/d9/dbc/tutorial_generic_corner_detector.html)[tml](https://docs.opencv.org/master/d9/dbc/tutorial_generic_corner_detector.html)。
- en: Some of the other, more-advanced feature-detection algorithms in OpenCV are
    named FAST, ORB, SIFT, SURF, and FREAK. Compared to Good Features to Track, these
    more-advanced alternatives evaluate a much larger set of potential features, at
    a much greater computational cost. They are overkill for a basic optical flow
    task such as ours. Once we have detected a face, we do not need many features
    in this region in order to distinguish between vertical motions (nodding) and
    horizontal motions (shaking). For our gesture-recognition task, running at a fast
    frame rate is far more important than running with a large number of features. On
    the other hand, some computer vision tasks require a large number of features.
    Image recognition is a good example. If we put red lipstick on a poster of the *Mona
    Lisa*, the resulting image is not the Mona Lisa (or at least not Leonardo's version
    of her). An image's details may be considered fundamental to its identity. However,
    a change in lighting or perspective does not change an image's identity, so the
    feature-detection and matching system still needs to be robust with respect to
    some changes.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: OpenCV 中一些更高级的特征检测算法被称为 FAST、ORB、SIFT、SURF 和 FREAK。与 Good Features to Track
    相比，这些更高级的替代方案评估了更大范围的可能特征，计算成本也更高。对于我们这样的基本光流任务来说，这有点过度。一旦我们检测到人脸，我们在这个区域不需要很多特征来区分垂直运动（点头）和水平运动（摇晃）。对于我们的手势识别任务，以快速帧率运行远比运行大量特征更重要。另一方面，一些计算机视觉任务需要大量特征。图像识别就是一个很好的例子。如果我们在一幅《蒙娜丽莎》的海报上涂上红色口红，得到的图像就不是《蒙娜丽莎》（至少不是达芬奇的版本）。图像的细节可能被认为是其身份的基本要素。然而，光线或视角的变化并不会改变图像的身份，因此特征检测和匹配系统仍然需要对这些变化具有一定的鲁棒性。
- en: For a project that covers image recognition and tracking, refer to *Chapters
    4*, *Chapter 5*, and *Chapter 6* of *Android Application Programming with OpenCV
    3*, by Packt Publishing.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 对于涵盖图像识别和跟踪的项目，请参阅 Packt Publishing 出版的《Android Application Programming with
    OpenCV 3》的第 4 章、第 5 章和第 6 章。
- en: For benchmarks of several feature detectors and matchers in OpenCV, refer to
    the series of articles on Ievgen Khvedchenia's blog, including [http://computer-vision-talks.com/2011-07-13-comparison-of-the-opencv-feature-detection-algorithms/](http://computer-vision-talks.com/2011-07-13-comparison-of-the-opencv-feature-detection-algorithms/).
    Also, you can find more up-to-date benchmarks in the *Example comparative performance
    tests of algorithms* section in *Chapter 9, **Finding the Best OpenCV Algorithm
    for the Job* in *Mastering OpenCV 4*, by Roy Shilkrot and David Millán Escrivá
    (Packt Publishing, 2018).
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 OpenCV 中几个特征检测器和匹配器的基准测试，请参阅 Ievgen Khvedchenia 博客上的系列文章，包括 [http://computer-vision-talks.com/2011-07-13-comparison-of-the-opencv-feature-detection-algorithms/](http://computer-vision-talks.com/2011-07-13-comparison-of-the-opencv-feature-detection-algorithms/)。你还可以在
    Roy Shilkrot 和 David Millán Escrivá（Packt Publishing，2018 年）所著的《Mastering OpenCV
    4》的第 9 章“**为任务找到最佳的 OpenCV 算法*”中的“*算法示例比较性能测试*”部分找到更多最新的基准测试。
- en: For tutorials on several algorithms and their OpenCV implementations, see the *Feature
    Detection and Description* section of the official OpenCV-Python Tutorials at [http://docs.opencv.org/master/db/d27/tutorial_py_table_of_contents_feature2d.html](http://docs.opencv.org/master/db/d27/tutorial_py_table_of_contents_feature2d.html).
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 关于多个算法及其OpenCV实现的教程，请参阅官方OpenCV-Python教程中的*特征检测与描述*部分，链接为[http://docs.opencv.org/master/db/d27/tutorial_py_table_of_contents_feature2d.html](http://docs.opencv.org/master/db/d27/tutorial_py_table_of_contents_feature2d.html).
