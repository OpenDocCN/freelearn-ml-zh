["```py\n<uses-feature android:name=\"android.hardware.camera2.full\" /<\n<uses-permission android:name=\"android.permission.CAMERA\" /<\n<uses-permission android:name=\"android.permission.INTERNET\" /<\n<uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" /<\n<uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\" /<\n```", "```py\n<meta-data\n   android:name=\"com.google.firebase.ml.vision.DEPENDENCIES\"\n    android:value=\"ocr\" /<\n```", "```py\n<?xml version=\"1.0\" encoding=\"utf-8\"?<\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    package=\"com.packt.mlkit.testrecognizationondevice\"<\n\n    <uses-feature android:name=\"android.hardware.camera2.full\" /<\n    <uses-permission android:name=\"android.permission.CAMERA\" /<\n    <uses-permission android:name=\"android.permission.INTERNET\" /<\n    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" /<\n    <uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\" /<\n    <application\n        android:allowBackup=\"true\"\n        android:icon=\"@mipmap/ic_launcher\"\n        android:label=\"@string/app_name\"\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\n        android:supportsRtl=\"true\"\n        android:theme=\"@style/AppTheme\"<\n\n        <meta-data\n            android:name=\"com.google.firebase.ml.vision.DEPENDENCIES\"\n            android:value=\"ocr\" /<\n\n        <activity android:name=\".MainActivity\"<\n            <intent-filter<\n                <action android:name=\"android.intent.action.MAIN\" /<\n\n                <category android:name=\"android.intent.category.LAUNCHER\" /<\n            </intent-filter<\n        </activity<\n    </application<\n\n</manifest<\n```", "```py\nbuildscript {\n\n    repositories {\n        google()\n        jcenter()\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle:3.1.4' //this version will defer dependeds on your environment.\n        classpath 'com.google.gms:google-services:4.0.1'\n\n        // NOTE: Do not place your application dependencies here; they belong\n        // in the individual module build.gradle files\n    }\n}\n```", "```py\nimplementation 'com.google.firebase:firebase-ml-vision:17.0.0'\nimplementation 'com.google.firebase:firebase-core:16.0.3'\n```", "```py\napply plugin: 'com.google.gms.google-services'\n```", "```py\n<?xml version=\"1.0\" encoding=\"utf-8\"?<\n<RelativeLayout \n\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    tools:context=\"(main activity)\"< <!-- Here your fully qualified main activity class name will come. --<\n\n    <TextureView\n        android:id=\"@+id/preview\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:layout_above=\"@id/btn_takepic\"\n        android:layout_alignParentTop=\"true\"/<\n\n    <Button\n        android:id=\"@+id/btn_takepic\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_alignParentBottom=\"true\"\n        android:layout_centerHorizontal=\"true\"\n        android:layout_marginBottom=\"16dp\"\n        android:layout_marginTop=\"16dp\"\n        android:text=\"Start Labeling\"\n        /<\n</RelativeLayout<\n```", "```py\nimport com.google.firebase.FirebaseApp;\nimport com.google.firebase.ml.vision.FirebaseVision;\nimport com.google.firebase.ml.vision.common.FirebaseVisionImage;\nimport com.google.firebase.ml.vision.text.FirebaseVisionTextRecognizer;\nimport com.google.firebase.ml.vision.text.*;\n```", "```py\nprivate FirebaseVisionTextRecognizer textRecognizer;\n```", "```py\nFirebaseApp fapp= FirebaseApp.initializeApp(getBaseContext());\n```", "```py\n        textRecognizer = FirebaseVision.getInstance().getOnDeviceTextRecognizer();\n```", "```py\n       takePictureButton.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                takePicture();\n                //In this function we are having the code to decode the characters in the picture\n            }\n        });\n    }\n```", "```py\nBitmap bmp = BitmapFactory.decodeByteArray(bytes,0,bytes.length);\n```", "```py\nFirebaseVisionImage firebase_image = FirebaseVisionImage.fromBitmap(bmp);\n```", "```py\n textRecognizer.processImage(firebase_image)\n```", "```py\n.addOnSuccessListener(new OnSuccessListener<FirebaseVisionText<() {\n                                    @Override\n                                    public void onSuccess(FirebaseVisionText result) {\n//On receiving the results displaying to the user.                                       Toast.makeText(getApplicationContext(),result.getText(),Toast.LENGTH_LONG).show();\n                                    }\n                                })\n```", "```py\n.addOnFailureListener(\n            new OnFailureListener() {\n                @Override\n                public void onFailure(@NonNull Exception e) \n                    {\n                        Toast.makeText(getApplicationContext(),\"Unable to read the text\",Toast.LENGTH_LONG).show();\n                    }\n                  });\n```", "```py\nimport com.google.firebase.FirebaseApp;\nimport com.google.firebase.ml.vision.FirebaseVision;\nimport com.google.firebase.ml.vision.common.FirebaseVisionImage;\nimport com.google.firebase.ml.vision.document.FirebaseVisionDocumentText;\nimport com.google.firebase.ml.vision.document.FirebaseVisionDocumentTextRecognizer; \n```", "```py\n private FirebaseVisionDocumentTextRecognizer textRecognizer;\n```", "```py\ntextRecognizer = FirebaseVision.getInstance().getCloudDocumentTextRecognizer();\n```", "```py\n       takePictureButton.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                takePicture();\n                //In this function we are having the code to decode the characters in the picture\n            }\n        });\n    }\n```", "```py\nBitmap bmp = BitmapFactory.decodeByteArray(bytes,0,bytes.length);\n```", "```py\nFirebaseVisionImage firebase_image = FirebaseVisionImage.fromBitmap(bmp);\n```", "```py\n textRecognizer.processImage(firebase_image)\n```", "```py\n.addOnSuccessListener(new OnSuccessListener<FirebaseVisionDocumentText<() {\n                                    @Override\n                                    public void onSuccess(FirebaseVisionDocumentText result) {\n                                        Toast.makeText(getApplicationContext(),result.getText(),Toast.LENGTH_LONG).show();\n                                    }\n                                })\n```", "```py\n.addOnFailureListener(\n            new OnFailureListener() {\n                @Override\n                public void onFailure(@NonNull Exception e) \n                    {\n                        Toast.makeText(getApplicationContext(),\"Unable to read the text\",Toast.LENGTH_LONG).show();\n                    }\n                  });\n```", "```py\nOnce you run the code with the internet-connected device , you will get the same output as before, but from the cloud.\n```", "```py\nimplementation 'com.google.android.gms:play-services-vision:11.4.0'\nimplementation 'com.android.support.constraint:constraint-layout:1.0.2'\n```", "```py\nimport com.google.android.gms.vision.Frame;\nimport com.google.android.gms.vision.face.Face;\nimport com.google.android.gms.vision.face.FaceDetector;\n```", "```py\nprivate FaceDetector detector;\n```", "```py\ndetector = new FaceDetector.Builder(getApplicationContext())\n .setTrackingEnabled(false)\n .setLandmarkType(FaceDetector.ALL_LANDMARKS)\n .setClassificationType(FaceDetector.ALL_CLASSIFICATIONS)\n .build();\n```", "```py\nString scanResults = \"\";\n```", "```py\nif (detector.isOperational() && bmp != null) {\n```", "```py\nFrame frame = new Frame.Builder().setBitmap(bmp).build();SparseArray<Face> faces = detector.detect(frame);\n```", "```py\nfor (int index = 0; index < faces.size(); ++index) {\n    Face face = faces.valueAt(index);\n    scanResults += \"Face \" + (index + 1) + \"\\n\";\n    scanResults += \"Smile probability:\" + \"\\n\" ;\n    scanResults += String.valueOf(face.getIsSmilingProbability()) + \"\\n\";          scanResults += \"Left Eye Open Probability: \" + \"\\n\";\n    scanResults += String.valueOf(face.getIsLeftEyeOpenProbability()) + \"\\n\";\n    scanResults += \"Right Eye Open Probability: \" + \"\\n\";\n    scanResults += String.valueOf(face.getIsRightEyeOpenProbability()) + \"\\n\";\n}\n```", "```py\nif (faces.size() == 0) {\n    scanResults += \"Scan Failed: Found nothing to scan\";\n } \n```", "```py\nelse {\n    scanResults += \"No of Faces Detected: \" + \"\\n\";\n    scanResults += String.valueOf(faces.size()) + \n   \\n\";\n    scanResults += \"---------\" + \"\\n\";\n}\n```", "```py\nelse {\n    scanResults += \"Could not set up the detector!\";\n}\n```", "```py\nToast.makeText(getApplicationContext(),scanResults,Toast.LENGTH_LONG).show();\n```"]