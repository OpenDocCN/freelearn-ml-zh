- en: '10'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Setting a Security Baseline for Your Azure Machine Learning Workloads
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we will summarize all the best practices outlined in this book
    for creating a security baseline for your machine learning workloads from start
    to finish to help you create a security strategy. We will mostly focus on Azure
    services, as we have in the rest of the book. Of course, there are always more
    things to consider, such as code or application security, but these are not the
    focus of this book.
  prefs: []
  type: TYPE_NORMAL
- en: We will review a couple of other services that, although not directly related
    to Azure Machine Learning, are useful to consider so that we can increase security
    in our Azure services overall. When it comes to security, we can use threat modeling
    to ensure that any practices we have identified and mitigated are continuously
    maintained and updated with any past and new security recommendations for as long
    as those services are up and running. Finally, we will review the cloud responsibility
    model so that we always remember that certain tasks are our responsibility to
    implement correctly. Although Azure has many tools and security controls available,
    it is up to us to configure them correctly.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we’re going to cover the following main topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Setting a baseline for Azure Machine Learning
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Theat modeling for Azure Machine Learning
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reviewing the share responsibility model for cloud security
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: By the end of this chapter, we will have learned how to create a baseline for
    our ML project and develop a threat modeling strategy based on popular frameworks.
  prefs: []
  type: TYPE_NORMAL
- en: Setting a baseline for Azure Machine Learning
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Throughout this book, we have seen multiple services and explored several ways
    to secure the Azure Machine Learning workspace and its associated services in
    Azure. All those best practices are part of the suggested best practices. As we
    focus on securing our workloads, it’s essential to establish a security foundation
    to guide our efforts. A security baseline is a set of the minimum security controls
    we need to implement for a system. Let us again review what the minimum requirements
    are to protect workloads running in Azure Machine Learning, which we have already
    outlined previously in this book, and learn how to extend this functionality further
    by using other services.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let us review the baseline Azure Machine Learning best practices organized
    by the Zero Trust model we reviewed in this book:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Securing identity ([*Chapter 6*](B21076_06.xhtml#_idTextAnchor141)):'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Use Microsoft Entra ID best practices:'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Enable **multi-factor authentication** (**MFA**) in user accounts
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Use more than one admin on services
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Plan for **role-based access control** (**RBAC**) and use the least privilege
    principle
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Work with application identities and managed identities when possible
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Enable conditional access
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Enable privilege identity management for RBAC
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Prevent the exposure of keys and secrets by utilizing Azure Key Vault
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Securing data (*Chapters 3, 4,* *and 5*):'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Discover, classify, and label sensitive data
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Create a company-wide data governance strategy
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Encrypt data at rest
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Encrypt data in transit
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: User customer-managed keys for encryption when available
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Secure key management in Azure Key Vault
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Use certificates when possible
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Use only approved and secure datasets from reputable sources
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Stay compliant by using policies
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Securing infrastructure and endpoints ([*Chapter 7*](B21076_07.xhtml#_idTextAnchor160)):'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Keep up to date and disable public access in compute instances
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Disable public access in compute clusters
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Disable public/anonymous access in container registries and containers
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Follow best security practices for external compute (AKS, ACI)
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Securing network ([*Chapter 7*](B21076_07.xhtml#_idTextAnchor160)):'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disable public network access
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Use Service or Private Endpoints
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Outside the Zero Trust categories, we also talked about the following best
    practices:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Planning for backup and recovery ([*Chapter 4*](B21076_04.xhtml#_idTextAnchor096)):'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ensure regular backups for each service
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Test the restore process
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Utilize resource locks to avoid accidental deletions
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Enable soft-delete and point-in-time restore where applicable
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Improving the security posture and vulnerability management ([*Chapter 9*](B21076_09.xhtml#_idTextAnchor189)):'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enable Azure Defender and implement recommendations
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Enable Microsoft Sentinel
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Logging and monitoring ([*Chapter 9*](B21076_09.xhtml#_idTextAnchor189)):'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enable logging and alerts
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Use log analytics workspaces to get insights
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Azure Machine Learning security baseline mapping file
  prefs: []
  type: TYPE_NORMAL
- en: To develop our strategy, we applied guidance from the Microsoft cloud security
    benchmark at [https://learn.microsoft.com/en-us/security/benchmark/azure/overview](https://learn.microsoft.com/en-us/security/benchmark/azure/overview)
    to the services associated with Azure Machine Learning.
  prefs: []
  type: TYPE_NORMAL
- en: 'To see the complete mapping of the Machine Learning service to the Microsoft
    cloud security benchmark, see the following document:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://github.com/MicrosoftDocs/SecurityBenchmarks/tree/master/Azure%20Offer%20Security%20Baselines/3.0/machine-learning-service-azure-security-benchmark-v3-latest-security-baseline.xlsx](https://github.com/MicrosoftDocs/SecurityBenchmarks/tree/master/Azure%20Offer%20Security%20Baselines/3.0/machine-learning-service-azure-security-benchmark-v3-latest-security-baseline.xlsx)'
  prefs: []
  type: TYPE_NORMAL
- en: Setting a baseline is organization-specific, and although the preceding recommendations
    might read as a checklist, they are only recommendations. You can pick and choose
    which ones to implement according to your scenario and way of working. How should
    you decide which ones to apply to your ML project? Let us review in the next sections
    how to develop your own threat modeling strategy and what else you need to consider
    when working with security in the cloud.
  prefs: []
  type: TYPE_NORMAL
- en: We will start by exploring some services that although not directly connected
    to Azure Machine Learning, are important to consider when it comes to cloud security.
    We will then move on to an example of the solution architecture.
  prefs: []
  type: TYPE_NORMAL
- en: Discovering services for added security
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In this book, we focused more on securing services directly associated with
    Azure Machine Learning. However, all the services we discussed have their own
    best practices and connected services. When we are working with big data there
    are a lot of things that we can further consider, such as the network or the application.
    Here are some services to consider when further exploring how to secure our Azure
    Services. Some we might have mentioned, others not, so let us review them all
    together here:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Network security groups** (**NSGs**): NSGs are a vital component of network
    security in cloud computing environments. NSGs are used to control and secure
    network traffic to and from resources deployed within a **virtual network** (**VNet**)
    or subnet. They act like a stateless firewall, allowing you to define and enforce
    rules for controlling inbound and outbound traffic at the network level.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**VPN gateways**: A **virtual private network** (**VPN**) gateway is a network
    device or service that provides secure and encrypted communication between two
    or more separate networks or devices over an untrusted network, such as the internet.
    VPN gateways play a crucial role in ensuring the privacy, integrity, and security
    of data transmitted over public or untrusted networks. It is a way to connect
    our on-premises data center to the cloud.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**ExpressRoute**: ExpressRoute is a service that provides a dedicated, private,
    and highly reliable network connection between an organization’s on-premises data
    center or network and Microsoft Azure’s cloud services. It is designed to enable
    secure, high-throughput, low-latency connections that offer a superior alternative
    to using the public internet for accessing Azure resources.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Azure Firewall**: Azure Firewall is a cloud-based network security service
    that acts as a protective barrier for resources and applications deployed within
    the Azure VNet by filtering and inspecting incoming and outgoing network traffic.
    Azure Firewall provides features for network security, threat protection, and
    traffic monitoring.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Azure Virtual wide area network** (**VWAN**): Azure VWAN is a networking
    service provided by Microsoft Azure that simplifies and optimizes connectivity
    between various Azure regions, on-premises locations, and branch offices. It’s
    designed to streamline the management of **wide area networking** (**WAN**) infrastructure
    and improve the performance and security of network connections.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Web application firewall** (**WAF**): Azure WAF is a cloud-based web application
    firewall service. It offers advanced security and protection for web applications
    and websites hosted on the Azure platform. Azure WAF is designed to defend against
    a wide range of web application threats and vulnerabilities. You can enable it
    on the Front Door and Application Gateway services.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Distributed Denial of Service (DDoS) Protection**: Azure provides DDoSprotection
    services to safeguard your applications and resources from DDoS attacks. DDoS
    attacks can overwhelm your network and services, making them unavailable to users.
    Azure DDoS Protection helps detect and mitigate these attacks, ensuring the availability
    and performance of your applications.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Azure Front Door**: Azure Front Door is a global, scalable, and highly available
    content delivery and application acceleration service. It is designed to improve
    the availability, security, and performance of web applications and content by
    optimizing and routing traffic through a global network of Microsoft-managed **points
    of presence** (**PoPs**). It can be used with the WAF and NSGs for better security.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Azure Application Gateway**: The Azure Application Gateway is a Layer 7 (application
    layer) load balancer and web traffic manager service. It is designed to improve
    the availability, scalability, and security of web applications by distributing
    incoming traffic, performing SSL termination, and providing advanced application-level
    routing and security features.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Microsoft Defender for Cloud**: Enable the Defender for Cloud advanced features.
    These are **cloud security posture management** (**CSPM**) and **cloud workload
    protections** (**CWP**), and they will help to improve Azure threat and vulnerability
    management.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Azure Site Recovery**: Azure Site Recovery is designed to ensure business
    continuity by providing a comprehensive disaster recovery solution. It helps organizations
    replicate and recover their virtualized workloads and data from one location to
    another, whether it’s from on-premises to Azure, Azure to Azure, or between on-premises
    data centers.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: End-to-end security in Azure
  prefs: []
  type: TYPE_NORMAL
- en: 'This article outlines all security services and the security capabilities of
    each of the available tools:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://learn.microsoft.com/en-us/azure/security/fundamentals/end-to-end](https://learn.microsoft.com/en-us/azure/security/fundamentals/end-to-end)'
  prefs: []
  type: TYPE_NORMAL
- en: Exploring an example solution architecture
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'If we were to use some of the previously mentioned services together with the
    best practices outlined in the book to create a secure Azure Machine Learning
    solution architecture, the next figure demonstrates what it might look like:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 10.1 – Azure solution architecture](img/B21076_10_1.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 10.1 – Azure solution architecture
  prefs: []
  type: TYPE_NORMAL
- en: In this example, we have secured and isolated all resources associated with
    Azure Machine Learning within a VNet by using private links. Public access is
    disabled at this point. This VNet is paired to another VNet, which has several
    services that can be shared across multiple peered VNets. This networking architecture
    is called a **hub-spoke topology** where the hub is a central virtual network
    in Azure that hosts services that are shared by multiple spokes, such as Azure
    Firewall and VPN Gateway. The spokes are virtual networks that peer with the hub.
    Each spoke can be used to isolate workloads, environments, applications, or departments.
    Spokes allow for dedicated resources per workload or application, improving security
    and organization. In this architecture, the spoke is used to isolate the Azure
    Machine Learning resources. This can also be used to isolate different environments
    such as development and production. We can even take it a step further and host
    these VNets through different subscriptions. We can then have private connectivity
    with the on-premises systems by using Express Route or VPN Gateway. The Azure
    Firewall can be used to protect the cloud and on-premises resources in this example
    scenario and allow access from specific IPs or external networks.
  prefs: []
  type: TYPE_NORMAL
- en: On top of those services, we can leverage the Microsoft Entra ID management
    features depicted, Defender for Cloud and Sentinel for security and incident management,
    GitHub or Azure DevOps for MLOps, and other services such as Policy and management
    groups for governance. Each subscription also comes with cost management, the
    Azure Monitor service, and more.
  prefs: []
  type: TYPE_NORMAL
- en: This is just one example of course. Depending on different organizations and
    needs, we might utilize more or fewer services. To browse different solution architectures
    about ML, AI, and more, you can browse through the Azure Architecture Center shown
    in the next callout.
  prefs: []
  type: TYPE_NORMAL
- en: Browse Azure architectures
  prefs: []
  type: TYPE_NORMAL
- en: 'If you want to get inspired on how to organize your Azure resources, you can
    find multiple solution architectures similar to the one presented here in the
    Azure Architecture Center:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://learn.microsoft.com/en-us/azure/architecture/](https://learn.microsoft.com/en-us/azure/architecture/)'
  prefs: []
  type: TYPE_NORMAL
- en: This is not enough though. Depending on the programming language used, we will
    need to leverage secure coding practices to ensure that the code cannot be compromised
    and provide access to the underlying secure infrastructure, especially for public-facing
    services.
  prefs: []
  type: TYPE_NORMAL
- en: Secure code best practices with Azure Machine Learning
  prefs: []
  type: TYPE_NORMAL
- en: 'In this documentation, you will find some coding security best practices when
    working with Azure Machine Learning and notebooks:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://learn.microsoft.com/en-us/azure/machine-learning/concept-secure-code-best-practice?view=azureml-api-2#next-steps](https://learn.microsoft.com/en-us/azure/machine-learning/concept-secure-code-best-practice?view=azureml-api-2#next-steps)'
  prefs: []
  type: TYPE_NORMAL
- en: Now that we have a good grasp of the available services and possible architectures,
    let us review how to decide and prioritize which services we need by developing
    our own threat modeling strategy.
  prefs: []
  type: TYPE_NORMAL
- en: Threat modeling for Azure Machine Learning
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Threat modeling is a structured methodology for detecting and ranking potential
    threats to a system and evaluating the impact that potential mitigations might
    have in decreasing or eliminating those threats. It is commonly used in the field
    of information security and cybersecurity, and we can apply this process to Azure
    Machine Learning as well to proactively protect our systems. What we are trying
    to determine when working with threat modeling are answers to the following questions:'
  prefs: []
  type: TYPE_NORMAL
- en: What are we working on?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What can go wrong with the system?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How are we going to deal with the issue?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Is that enough? Did we miss anything else?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The process often follows these general steps, and it is an iterative process:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 10.2 – The threat modeling process](img/B21076_10_2.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 10.2 – The threat modeling process
  prefs: []
  type: TYPE_NORMAL
- en: 'Let us review each one:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Define objectives and review the architecture**: Here, we need to clarify
    what we are trying to protect by understanding the value of our data and the system’s
    components. This sets the stage for the threat modeling exercise by focusing on
    what is important. As soon as we have the components, we should understand the
    system’s architecture. This can include data flow diagrams to show how data moves
    through the system and trust boundaries to indicate where data changes trust levels,
    such as crossing a network or moving between processes. The following is a simple
    Azure Machine Learning architecture:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 10.3 – Azure Machine Learning architecture](img/B21076_10_3.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 10.3 – Azure Machine Learning architecture
  prefs: []
  type: TYPE_NORMAL
- en: '**Decompose the architecture**: Break down the system into its core components
    and functionalities. This can include understanding the technologies being used,
    the entry points into the system, and the assets that you are trying to protect.
    For Azure Machine Learning, this includes workspaces, compute, data storage, pipelines,
    models, and all associated services.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Identify threats and vulnerabilities**: Utilize frameworks such as MITRE
    ATLAS, as we discussed in [*Chapter 2*](B21076_02.xhtml#_idTextAnchor040), to
    identify specific threats or vulnerabilities for each component of our ML workflow.
    Prioritize the threats based on their potential impact and the likelihood of occurrence.
    This will help focus efforts on the most critical security issues.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Define mitigation strategies**: For each threat, we need to determine the
    most appropriate way to mitigate the risk. This could involve changes in the architecture,
    adopting new security controls, applying patches, or changing operational practices.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Validate and review**: After mitigation strategies have been implemented,
    they should be tested to ensure they are effective. This can involve code review,
    tests, and compliance checks. Keep thorough documentation of the threat model
    and mitigation strategies. Azure Policy and Azure Blueprints can help enforce
    and track compliance with your security requirements.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Threat modeling is not a one-time process but should be an ongoing activity
    throughout the system’s lifecycle. As new features are added or changes are made
    to the system, the threat model should be updated to reflect the new state of
    the system. Accordingly, we need to continuously review and update the threat
    model for our Azure Machine Learning workloads. New features, data, or integration
    with other Azure services can introduce new threats or vulnerabilities. By applying
    these principles, you can create a robust threat model for your Azure Machine
    Learning workloads, helping to ensure that our ML solutions are secure and reliable.
  prefs: []
  type: TYPE_NORMAL
- en: Various tools and resources are available to assist with threat modeling, from
    Microsoft’s Threat Modeling Tool to OWASP’s resources, such as the Application
    Threat Modeling framework. It is also important to stay up to date with the latest
    threat intelligence and industry best practices to keep the threat models relevant
    and effective by using the MITRE framework, for example, which we highlighted
    in [*Chapter 2*](B21076_02.xhtml#_idTextAnchor040). No matter where we base our
    strategy, we must ensure that it enables us to periodically validate and review
    the results.
  prefs: []
  type: TYPE_NORMAL
- en: The Application Threat Modeling framework
  prefs: []
  type: TYPE_NORMAL
- en: 'Learn more about the OWASP’s Application Threat Modeling framework here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://owasp.org/www-community/Threat_Modeling](https://owasp.org/www-community/Threat_Modeling)'
  prefs: []
  type: TYPE_NORMAL
- en: We have already seen the MITRE ATLAS framework, which is a great knowledge base
    to get started with and base our strategy on, and the OWASP framework we mentioned
    is more geared towards applications. Of course, we don’t have to use all those
    frameworks and methodologies at once. We can choose which one suits our needs
    best and can be used in the long term. Let us briefly explore the STRIDE methodology
    as well because the Microsoft Threat Modeling Tool we will use later on in this
    chapter is based on it.
  prefs: []
  type: TYPE_NORMAL
- en: Exploring the STRIDE methodology
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The **STRIDE** methodology is a security framework used to analyze and categorize
    security threats and risks in computer systems, software, and applications. STRIDE
    was primarily created as part of the procedure of threat modeling. STRIDE is an
    acronym that stands for the six categories of security threats: *spoofing*, *tampering*,
    *repudiation*, *information disclosure*, *denial of service (DoS)*, and *elevation*
    *of privilege*.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Let us review each category:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Spoofing**: Spoofing threats involve impersonating someone or something to
    gain unauthorized access or deceive a user. This can include identity spoofing,
    where an attacker pretends to be a legitimate user or system, or website spoofing,
    where a fake website is created to deceive users.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Tampering**: Tampering threats refer to the unauthorized modification of
    data or code. This can include data tampering, where an attacker changes data
    to disrupt operations or steal information, or code tampering, where an attacker
    modifies the code to introduce vulnerabilities or malicious functionality.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Repudiation**: Repudiation threats involve the denial of actions or events.
    For example, a user may claim that they did not perform a particular action or
    a system may not log actions in a way that can be used to prove what happened.
    Non-repudiation mechanisms are used to prevent and detect these threats.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Information disclosure**: Information disclosure threats involve the unauthorized
    exposure of sensitive data. This can include data leaks, where sensitive information
    is exposed to unauthorized users, or data theft, where attackers steal sensitive
    data for malicious purposes.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**DoS**: DoS attacks aim to disrupt the availability of a system or service.
    Attackers may overload a system with traffic, crash it, or use other means to
    make it unavailable to legitimate users. DDoS attacks are a common example.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Elevation of privilege**: Elevation of privilege threats involve attackers
    gaining higher levels of access or privileges than they are supposed to have.
    This can lead to unauthorized access, control, or manipulation of a system or
    data.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: To address security threats using the STRIDE methodology, we typically perform
    the steps outlined in the previous sections to identify the assets of the systems
    that are at risk, find the corresponding threats and their mitigations, and then
    validate and review the processes after implementation.
  prefs: []
  type: TYPE_NORMAL
- en: This methodology is often used together with Microsoft’s Threat Modeling Tool
    and is designed to help identify and address security vulnerabilities early in
    the software development process. We can also use it independently.
  prefs: []
  type: TYPE_NORMAL
- en: Let us review how to work with the Microsoft Threat Modeling Tool.
  prefs: []
  type: TYPE_NORMAL
- en: Getting started with the Microsoft Threat Modeling Tool
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The Microsoft Threat Modeling Tool helps us identify threats and plan mitigations.
    This tool uses the STRIDE methodology and provides us with basic reporting.
  prefs: []
  type: TYPE_NORMAL
- en: 'To get started with the tool, you can download it here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://aka.ms/threatmodelingtool](https://aka.ms/threatmodelingtool)'
  prefs: []
  type: TYPE_NORMAL
- en: 'After downloading and installing the tool, this is the main screen that opens
    up:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 10.4 – Microsoft Threat Modeling Tool](img/B21076_10_4.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 10.4 – Microsoft Threat Modeling Tool
  prefs: []
  type: TYPE_NORMAL
- en: In this screenshot, we can see several options, from using templates to starting
    from scratch. We will begin by clicking the **Create A** **Model** button.
  prefs: []
  type: TYPE_NORMAL
- en: The tool provides a graphical interface for creating threat models called the
    **Design View**. Users can diagram the components and data flows of their application
    or system to visualize potential attack vectors and security boundaries.
  prefs: []
  type: TYPE_NORMAL
- en: 'In our example, we will simply drag and drop from the **Stencils** toolbar
    to the right of the **Azure AD** component (currently rebranded as Microsoft Entra
    ID), as this is where our users are managed and the **Azure ML** component that
    represents our workspace is. By right-clicking on the canvas, we can create connections
    between components. For this example, you can click on **Bi-Directional Connect**
    as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 10.5 – Making a connection](img/B21076_10_5.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 10.5 – Making a connection
  prefs: []
  type: TYPE_NORMAL
- en: 'By clicking on each component, we can also change or define properties. For
    example, in the Azure Storage component, you can specify if it is a blob or a
    file, and so on. For the components we have here, it is not necessary. The final
    result is depicted in the next screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 10.6 – Creating a diagram](img/B21076_10_6.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 10.6 – Creating a diagram
  prefs: []
  type: TYPE_NORMAL
- en: 'As soon as we are done, we can click on the **Analysis View** button on the
    top bar to get the analysis. We can switch between the **Analysis View** and the
    **Design View** by using those two side-by-side buttons as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 10.7 – Opening the Analysis View](img/B21076_10_7.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 10.7 – Opening the Analysis View
  prefs: []
  type: TYPE_NORMAL
- en: 'In the Analysis View, we can see **Threat List**, and by clicking on each threat,
    we can see **Threat Properties**:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 10.8 – Getting the analysis result](img/B21076_10_8.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 10.8 – Getting the analysis result
  prefs: []
  type: TYPE_NORMAL
- en: 'The fields in **Threat Properties** are editable, and we can change the **Status**
    to **Not Started**, **Needs investigation**, **Not applicable** or **Mitigated**,
    the **Severity** to **Low**, **Medium**, or **High**, and **SDL phase** to **Design**
    or **Implementation** along with the descriptions. An example is shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 10.9 – Editing properties](img/B21076_10_9.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 10.9 – Editing properties
  prefs: []
  type: TYPE_NORMAL
- en: At any point in this process, we can save the document, share it, or generate
    reports summarizing the identified threats, their associated risks, and recommended
    mitigation strategies. These reports can be shared with stakeholders and development
    teams to prioritize and address security concerns.
  prefs: []
  type: TYPE_NORMAL
- en: 'To extract a report, click **Reports** and then **Create Full Report…** as
    shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 10.10 – Generating the report](img/B21076_10_10.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 10.10 – Generating the report
  prefs: []
  type: TYPE_NORMAL
- en: 'Choose which additional properties to include in the report and click **Generate
    Report**; this is what we get:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 10.11 – Choosing the report items](img/B21076_10_11.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 10.11 – Choosing the report items
  prefs: []
  type: TYPE_NORMAL
- en: 'The report gets saved into an HTML file that contains the diagram and all recorded
    information within the tool. The report from the previous example is depicted
    in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 10.12 – Saving the report as HTML](img/B21076_10_12.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 10.12 – Saving the report as HTML
  prefs: []
  type: TYPE_NORMAL
- en: Microsoft Threat Modeling Tool documentation
  prefs: []
  type: TYPE_NORMAL
- en: 'Find the complete documentation for this tool here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://learn.microsoft.com/en-us/azure/security/develop/threat-modeling-tool](https://learn.microsoft.com/en-us/azure/security/develop/threat-modeling-tool)'
  prefs: []
  type: TYPE_NORMAL
- en: Overall, the Microsoft Threat Modeling Tool is a valuable resource for organizations
    and software development teams looking to enhance the security of their applications
    and systems. By using this tool, we can systematically identify and address security
    threats and vulnerabilities, leading to more robust and secure software products.
    It’s important to keep in mind that while the tool provides valuable assistance,
    it does not replace the need for security expertise and best practices throughout
    the development process and it is not the only one we can use.
  prefs: []
  type: TYPE_NORMAL
- en: Threat modeling AI/ML systems and dependencies
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is a documented example of threat modeling for AI/ML systems:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://learn.microsoft.com/en-us/security/engineering/threat-modeling-aiml](https://learn.microsoft.com/en-us/security/engineering/threat-modeling-aiml)'
  prefs: []
  type: TYPE_NORMAL
- en: However, although this tool provides us with suggestions, if we have a specific
    suspicion that is not conceptual or is not part of the baseline, we can create
    a hypothesis and use threat hunts in Sentinel to dive into the data and confirm
    before we come up with any mitigations. A quick demonstration of how to work with
    threat hunts in Sentinel is in [*Chapter 9*](B21076_09.xhtml#_idTextAnchor189).
  prefs: []
  type: TYPE_NORMAL
- en: Let us wrap up this book by reviewing our responsibilities when it comes to
    securing our services.
  prefs: []
  type: TYPE_NORMAL
- en: Reviewing the shared responsibility model for cloud security
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: When it comes to migrating to the cloud, some of our responsibilities transfer
    to the cloud provider, such as the responsibility to purchase and maintain hardware.
    This concept is vital for understanding who is responsible for what when it comes
    to securing data, applications, and infrastructure in the cloud. The exact division
    of responsibilities can vary depending on the type of cloud service model being
    used, including **infrastructure as a service** (**IaaS**), **platform as a service**
    (**PaaS**), **software as a service** (**SaaS**), and the specific cloud service
    provider.
  prefs: []
  type: TYPE_NORMAL
- en: 'The responsibility model according to Microsoft is as follows for each category
    of services:'
  prefs: []
  type: TYPE_NORMAL
- en: '![ Table 10.1 – Shared responsibility model](img/B21076_Table_10.1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Table 10.1 – Shared responsibility model
  prefs: []
  type: TYPE_NORMAL
- en: The same division of responsibilities applies to security. It’s essential to
    clearly understand the shared responsibility model with Azure and take the necessary
    steps to fulfill our part of the responsibility. Failure to do so can result in
    security vulnerabilities and compliance issues.
  prefs: []
  type: TYPE_NORMAL
- en: Let us review a general breakdown of the shared responsibility model for cloud
    security.
  prefs: []
  type: TYPE_NORMAL
- en: Exploring the cloud provider responsibilities
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'We will start with the cloud service provider responsibilities:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Physical security**: Cloud providers are responsible for securing the physical
    infrastructure, including data centers, servers, networking equipment, and physical
    access controls'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Network infrastructure**: The cloud provider manages and secures the underlying
    network infrastructure, including firewalls, load balancers, and the virtualization
    layer'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Hypervisor security**: In IaaS environments, cloud providers are responsible
    for securing the hypervisor layer that manages virtual machines'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Data center security**: The physical security of data centers, including
    surveillance, access control, and environmental controls, falls under the cloud
    provider’s responsibility'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Core cloud services**: The core cloud services themselves, such as compute,
    storage, and networking, are maintained and secured by the cloud provider'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It is also worth noting that this division of responsibilities can vary between
    different providers, and as services change or as changes are added, those responsibilities
    may change over time. Therefore, we must stay up to date with the latest security
    updates and practices to bridge any gaps and prevent future issues.
  prefs: []
  type: TYPE_NORMAL
- en: Let us review our own responsibilities.
  prefs: []
  type: TYPE_NORMAL
- en: Reviewing customers’ responsibilities
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Everything else is the customer’s responsibility, which means us! More specifically,
    let us review the categories we need to keep in mind when securing our workloads:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Data**: Customers are responsible for securing their data and ensuring appropriate
    encryption, access controls, and data management practices. If data applies to
    a specific industry or local law, the customer is responsible for tracking all
    those regulations and taking appropriate action if necessary.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Operating systems**: For IaaS environments, customers are responsible for
    securing and patching the operating systems of virtual machines they deploy. That
    includes complete machine management, including licensing.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Applications**: Customers are responsible for securing and maintaining the
    security of the applications they build and deploy on cloud platforms at the code
    level. Although we might enable all security controls for the service hosting
    the application, any security vulnerabilities in the code might still provide
    unintended access to other services.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Identity and access management** (**IAM**): Customers are responsible for
    managing user access, permissions, and authentication mechanisms, typically through
    identity and access management tools provided by the cloud provider.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Configuration management**: Configuring and maintaining security settings
    and configurations for cloud resources, such as firewall rules and security groups,
    is the customer’s responsibility.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Compliance and data governance**: Ensuring compliance with industry regulations
    and data governance policies is the responsibility of the customer.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Security monitoring and incident response**: Customers are responsible for
    monitoring their cloud environments for security incidents and responding to any
    security breaches.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Backup and disaster recovery**: While cloud providers often provide some
    level of redundancy and availability, customers are responsible for their specific
    backup and disaster recovery plans.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It is important to remember that Azure and any cloud provider give us all the
    tools necessary to protect our resources, but we must do our part in securing
    and monitoring them. This is why we must always keep in mind the shared responsibility
    model. Each system is as strong as its weakest user, so let us make sure that
    we have done our best to prevent or at least detect and mitigate any issues as
    soon as possible.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Securing our resources is an iterative process. Although we may have completed
    all necessary steps to protect our resources, every update or new addition to
    our project might affect the overall security of the system. The first step is
    to maintain a security baseline for the resources we are using and the second
    is to develop a strategy to stay up to date using threat modeling frameworks to
    be proactive in mitigating possible threats. We saw the STRIDE methodology and
    the Microsoft Threat Modeling Tool, but there are more frameworks available. For
    example, we can base the strategy on the MITRE framework and tailor the steps
    for our organization.
  prefs: []
  type: TYPE_NORMAL
- en: Remember, security in the cloud is a shared responsibility. While Azure provides
    the tools and infrastructure to secure the cloud environment, it’s up to us to
    secure our configurations and data.
  prefs: []
  type: TYPE_NORMAL
- en: Cybersecurity has a multi-faceted nature and adversaries are becoming more creative
    every day. As our cloud ecosystem evolves, attacks evolve with it, and we need
    to be vigilant to stay secure. I hope this book and the tools and services outlined
    here have equipped you with the knowledge to secure your existing Azure Machine
    Learning services and provided you with the insight to develop a strategy and
    stay one step ahead of any possible ML and non-ML attacks in the future.
  prefs: []
  type: TYPE_NORMAL
