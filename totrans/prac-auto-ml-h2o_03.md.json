["```py\npip install jupyterlab\n```", "```py\njupyter notebook\n```", "```py\n    import h2o\n    ```", "```py\n    import numpy as np\n    ```", "```py\n    h2o.init()\n    ```", "```py\n    np.random.seed(123)\n    important_dataframe_1 = h2o.H2OFrame.from_python(np.random.randn(15,5).tolist(), column_names=list([\" important_column_1\" , \" important_column_2\" , \" important_column_3\" , \" important_column_4\" , \" important_column_5\" ]))\n    ```", "```py\n    important_dataframe_1.describe\n    ```", "```py\n    important_dataframe_2 = h2o.H2OFrame.from_python(np.random.randn(15,2).tolist(), column_names=list([\" important_column_6\" , \" important_column_7\" ]))\n    ```", "```py\n    final_dataframe = important_dataframe_1.cbind(important_dataframe_2)\n    ```", "```py\n    final_dataframe.describe\n    ```", "```py\n    import h2o\n    ```", "```py\n    import numpy as np\n    ```", "```py\n    h2o.init()\n    ```", "```py\n    np.random.seed(123)\n    important_dataframe_1 = h2o.H2OFrame.from_python(np.random.randn(15,5).tolist(), column_names=list([\" important_column_1\" , \" important_column_2\" ,\" important_column_3\" ,\" important_column_4\" ,\" important_column_5\" ]))\n    ```", "```py\n    important_dataframe_1.nrows\n    ```", "```py\n    important_dataframe_2 = h2o.H2OFrame.from_python(np.random.randn(10,5).tolist(), column_names=list([\" important_column_1\" , \" important_column_2\" ,\" important_column_3\" ,\" important_column_4\" ,\" important_column_5\" ]))\n    ```", "```py\n    important_dataframe_2.nrows\n    ```", "```py\n    final_dataframe = important_dataframe_1.rbind(important_dataframe_2)\n    ```", "```py\n    final_dataframe.describe\n    ```", "```py\n    final_dataframe.nrows\n    ```", "```py\n    import h2o\n    ```", "```py\n    import numpy as np\n    ```", "```py\n    h2o.init()\n    ```", "```py\n    dataframe_1 = h2o.H2OFrame.from_python({'words':['Hello', 'World', 'Welcome', 'To', 'Machine', 'Learning'], 'numerical_representation': [0,1,2,3,4,5],'letters':['a','b','c','d']})\n    ```", "```py\n    dataframe_1.describe\n    ```", "```py\n    dataframe_2 = h2o.H2OFrame.from_python({'other_words':['How', 'Are', 'You', 'Doing', 'Today', 'My', 'Friend', 'Learning', 'H2O', 'Artificial', 'Intelligence'], 'numerical_representation': [0,1,2,3,4,5,6,7,8,9],'letters':['a','b','c','d','e']})\n    ```", "```py\n    dataframe_2.head(11)\n    ```", "```py\n    final_dataframe = dataframe_2.merge(dataframe_1)\n    ```", "```py\n    final_dataframe.describe\n    ```", "```py\n    final_dataframe = dataframe_2.merge(dataframe_1, all_x = True)\n    ```", "```py\n    import h2o\n    ```", "```py\n    import numpy as np\n    ```", "```py\n    h2o.init()\n    ```", "```py\n    dataframe = h2o.create_frame(rows=1000, cols=3, integer_fraction=1.0, integer_range=100, missing_fraction=0.2, seed=123)\n    ```", "```py\n    dataframe.describe\n    ```", "```py\n    filled_dataframe = dataframe.fillna(method=\" forward\" , axis=0, maxlen=1)\n    ```", "```py\n    filled_dataframe.describe\n    ```", "```py\nimport h2o\nh2o.init()\ndataframe = h2o.create_frame(rows=10, cols=3, real_range=100, integer_fraction=1, missing_fraction=0.1, seed=5)\ndataframe.describe\n```", "```py\ndataframe[3,1] = 99\n```", "```py\ndataframe.describe\n```", "```py\ndataframe[2] = 3*dataframe[2]\n```", "```py\ndataframe.describe\n```", "```py\ndataframe[dataframe['C1'] < 0, \" C1\" ] = 0\ndataframe[dataframe['C2'] < 0, \" C2\" ] = 0\ndataframe[dataframe['C2'] < 0, \" C3\" ] = 0\n```", "```py\ndataframe.describe\n```", "```py\ndataframe[\" C1\" ] = (dataframe[\" C1\" ] < 0).ifelse(-1*dataframe[\" C1\" ], dataframe[\" C1\" ])\ndataframe[\" C2\" ] = (dataframe[\" C2\" ] < 0).ifelse(-1*dataframe[\" C2\" ], dataframe[\" C2\" ])\ndataframe[\" C3\" ] = (dataframe[\" C3\" ] < 0).ifelse(-1*dataframe[\" C3\" ], dataframe[\" C3\" ])\n```", "```py\ndataframe[dataframe[\" C1\" ].isna(), \" C1\" ] = 0\ndataframe[dataframe[\" C2\" ].isna(), \" C2\" ] = 0\ndataframe[dataframe[\" C3\" ].isna(), \" C3\" ] = 0\n```", "```py\ndataframe.describe\n```", "```py\n    import h2o\n    h2o.init()\n    ```", "```py\n    dataframe = h2o.import_file(\" Dataset/high_school_student_sprint.csv\" )\n    ```", "```py\n    dataframe.impute(\" 100_meter_time\" , method = \" mean\" )\n    dataframe.describe\n    ```", "```py\ndataframe.impute(\" 100_meter_time\" , method = \" median\" )\ndataframe.impute(\" 100_meter_time\" , method = \" mode\" )\n```", "```py\n    dataframe = h2o.import_file(\" Dataset/high_school_student_sprint.csv\" )\n    dataframe.impute(\" 100_meter_time\" , method = \" mean\" , by=[\" age\" ])\n    dataframe.describe\n    ```", "```py\n    import h2o\n    h2o.init()\n    ```", "```py\n    dataframe = h2o.H2OFrame.from_python({'C1': [3,3,3,0,12,13,1,8,8,14,15,2,3,8,8],'C2':[1,5,3,6,8,6,8,7,6,5,1,2,3,6,6],'C3':[15,14,13,12,11,10,9,8,7,6,5,4,3,2,1]})\n    dataframe.describe\n    ```", "```py\n    sorted_dataframe_1 = dataframe.sort(0)\n    sorted_dataframe_1.describe\n    ```", "```py\n    sorted_dataframe_2 = dataframe.sort(['C1','C2']) sorted_dataframe_2.describe\n    ```", "```py\n    sorted_dataframe_3 = dataframe.sort(by=['C1','C2'], ascending=[True,False])\n    sorted_dataframe_3.describe\n    ```", "```py\n    import h2o\n    h2o.init()\n    ```", "```py\n    dataframe = h2o.H2OFrame.from_python({'C1': [3,3,3,0,12,13,1,8,8,14,15,2,3,8,8],'C2':[1,5,3,6,8,6,8,7,6,5,1,2,3,6,6],'C3':[15,14,13,12,11,10,9,8,7,6,5,4,3,2,1]})\n    dataframe.describe\n    ```", "```py\n    dataframe['C1'].isnumeric()\n    ```", "```py\n    dataframe['C1'].isfactor()\n    ```", "```py\n    dataframe['C1'] = dataframe['C1'].asfactor()\n    dataframe['C1'].isfactor()\n    ```", "```py\n    dataframe['C1'] = dataframe['C1'].asnumeric()\n    dataframe['C1'].isnumeric()\n    ```", "```py\n    import h2o\n    h2o.init()\n    ```", "```py\n    dataframe1 = h2o.H2OFrame.from_python({'C1':['Today we learn AI', 'Tomorrow AI learns us', 'Today and Tomorrow are same', 'Us and AI are same']})\n    dataframe1 = dataframe1.ascharacter()\n    dataframe1.describe\n    ```", "```py\n    tokenized_dataframe = dataframe1.tokenize(\"  \" )\n    tokenized_dataframe\n    ```", "```py\n    import h2o\n    from h2o.estimators import H2OTargetEncoderEstimator\n    h2o.init()\n    ```", "```py\n    automobile_dataframe = h2o.import_file(\" Dataset\\Automobile_data.csv\" )\n    automobile_dataframe\n    ```", "```py\nautomobile_dataframe = automobile_dataframe[:,[\" make\" , \" fuel-type\" , \" body-style\" , \" price\" ]]\nautomobile_dataframe\n```", "```py\n    automobile_dataframe_for_training, automobile_dataframe_for_test = automobile_dataframe.split_frame(ratios = [.8], seed = 123)\n    ```", "```py\n    automobile_te = H2OTargetEncoderEstimator()\n    automobile_te.train(x= [\" make\" , \" fuel-type\" , \" body-style\" ], y=\" price\" , training_frame=automobile_dataframe_for_training)\n    ```", "```py\n    te_automobile_dataframe_for_training = automobile_te.transform(frame=automobile_dataframe_for_training, as_training=True)\n    te_automobile_dataframe_for_training\n    ```", "```py\n    te_automobile_dataframe_for_test = automobile_te.transform(frame=automobile_dataframe_for_test, noise=0)\n    te_automobile_dataframe_for_test\n    ```"]