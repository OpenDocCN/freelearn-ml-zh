- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Scala is considered to be a successor to Java in the area of Big Data by many.
    It is particularly good at analyzing large sets of data without any significant
    impact on performance and thus Scala is being adopted by many developers and data
    scientists
  prefs: []
  type: TYPE_NORMAL
- en: This Learning Path aims to put the entire world of machine learning with Scala
    in front of you. We will begin by introducing you to the libraries for ingesting,
    storing, manipulating, processing, and visualizing data in Scala. Moving on, we'll
    introduce machine learning in Scala and take a very deep dive into leveraging
    Scala to construct and study systems that can learn from data. Finally, we will
    master Scala machine learning in breadth and impart expertise for you to be able
    to build complex machine learning projects using Scala.
  prefs: []
  type: TYPE_NORMAL
- en: What this learning path covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Module 1](part0011.xhtml#aid-AFM61 "Part I. Module 1"), *Scala for Data Science*,
    provides you an introduction to the Raspberry Pi .It helps in building games with
    PyGame and creation of real-life applications with the Raspberry Pi. It further
    demonstrates the GPIO and cameras with advanced concepts in OpenCV. This module
    further delves with setting up a web server and creating network utilities.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Module 2](part0154.xhtml#aid-4IRMK1 "Part II. Module 2"), *Scala for Machine
    Learning*, guides you through the process of building AI applications with diagrams,
    formal mathematical notation, source code snippets, and useful tips. A review
    of the Akka framework and Apache Spark clusters concludes the tutorial.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Module 3](part0234.xhtml#aid-6V53K1 "Part III. Module 3"), *Mastering Scala
    Machine Learning*, is the final step in this course. It will take your knowledge
    to next level and help you use the knowledge to build advanced applications such
    as social media mining, intelligent news portals, and more. After a quick refresher
    on functional programming concepts using REPL, you will see some practical examples
    of setting up the development environment and tinkering with data. We will then
    explore working with Spark and MLlib using k-means and decision trees.'
  prefs: []
  type: TYPE_NORMAL
- en: What you need for this learning path
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'You''ll need the following set up for all the three modules:'
  prefs: []
  type: TYPE_NORMAL
- en: Module 1
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The examples provided in this course require that you have a working Scala installation
    and SBT, the *Simple Build Tool*, a command line utility for compiling and running
    Scala code. We will walk you through how to install these in the next sections.
  prefs: []
  type: TYPE_NORMAL
- en: We do not require a specific IDE. The code examples can be written in your favorite
    text editor or IDE.
  prefs: []
  type: TYPE_NORMAL
- en: Installing the JDK
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Scala code is compiled to Java byte code. To run the byte code, you must have
    the Java Virtual Machine (JVM) installed, which comes as part of a Java Development
    Kit (JDK). There are several JDK implementations and, for the purpose of this
    course, it does not matter which one you choose. You may already have a JDK installed
    on your computer. To check this, enter the following in a terminal:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: If you do not have a JDK installed, you will get an error stating that the `java`
    command does not exist.
  prefs: []
  type: TYPE_NORMAL
- en: 'If you do have a JDK installed, you should still verify that you are running
    a sufficiently recent version. The number that matters is the minor version number:
    the `8` in `1.8.0_66`. Versions `1.8.xx` of Java are commonly referred to as Java
    8\. For the first twelve chapters of this course, Java 7 will be sufficient (your
    version number should be something like `1.7.xx` or newer). However, you will
    need Java 8 for the last two chapters, since the Play framework requires it. We
    therefore recommend that you install Java 8.'
  prefs: []
  type: TYPE_NORMAL
- en: 'On Mac, the easiest way to install a JDK is using Homebrew:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: This will install Java 8, specifically the Java Standard Edition Development
    Kit, from Oracle.
  prefs: []
  type: TYPE_NORMAL
- en: 'Homebrew is a package manager for Mac OS X. If you are not familiar with Homebrew,
    I highly recommend using it to install development tools. You can find installation
    instructions for Homebrew on: [http://brew.sh](http://brew.sh).'
  prefs: []
  type: TYPE_NORMAL
- en: To install a JDK on Windows, go to [http://www.oracle.com/technetwork/java/javase/downloads/index.html](http://www.oracle.com/technetwork/java/javase/downloads/index.html)
    (or, if this URL does not exist, to the Oracle website, then click on Downloads
    and download **Java Platform, Standard Edition**). Select Windows x86 for 32-bit
    Windows, or Windows x64 for 64 bit. This will download an installer, which you
    can run to install the JDK.
  prefs: []
  type: TYPE_NORMAL
- en: 'To install a JDK on Ubuntu, install OpenJDK with the package manager for your
    distribution:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'If you are running a sufficiently old version of Ubuntu (14.04 or earlier),
    this package will not be available. In this case, either fall back to `openjdk-7-jdk`,
    which will let you run examples in the first twelve chapters, or install the Java
    Standard Edition Development Kit from Oracle through a PPA (a non-standard package
    archive):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'You then need to tell Ubuntu to prefer Java 8 with:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Installing and using SBT
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The Simple Build Tool (SBT) is a command line tool for managing dependencies
    and building and running Scala code. It is the de facto build tool for Scala.
    To install SBT, follow the instructions on the SBT website ([http://www.scala-sbt.org/0.13/tutorial/Setup.html](http://www.scala-sbt.org/0.13/tutorial/Setup.html)).
  prefs: []
  type: TYPE_NORMAL
- en: 'When you start a new SBT project, SBT downloads a specific version of Scala
    for you. You, therefore, do not need to install Scala directly on your computer.
    Managing the entire dependency suite from SBT, including Scala itself, is powerful:
    you do not have to worry about developers working on the same project having different
    versions of Scala or of the libraries used.'
  prefs: []
  type: TYPE_NORMAL
- en: Since we will use SBT extensively in this course, let's create a simple test
    project. If you have used SBT previously, do skip this section.
  prefs: []
  type: TYPE_NORMAL
- en: 'Create a new directory called `sbt-example` and navigate to it. Inside this
    directory, create a file called `build.sbt`. This file encodes all the dependencies
    for the project. Write the following in `build.sbt`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'This specifies which version of Scala we want to use for the project. Open
    a terminal in the `sbt-example` directory and type:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'This starts an interactive shell. Let''s open a Scala console:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'This gives you access to a Scala console in the context of your project:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'Besides running code in the console, we will also write Scala programs. Open
    an editor in the `sbt-example` directory and enter a basic "hello, world" program.
    Name the file `HelloWorld.scala`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'Return to SBT and type:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: This will compile the source files and run the executable, printing `"Hello,
    world!"`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Besides compiling and running your Scala code, SBT also manages Scala dependencies.
    Let''s specify a dependency on Breeze, a library for numerical algorithms. Modify
    the `build.sbt` file as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: SBT requires that statements be separated by empty lines, so make sure that
    you leave an empty line between `scalaVersion` and `libraryDependencies`. In this
    example, we have specified a dependency on Breeze version `"0.11.2"`. How did
    we know to use these coordinates for Breeze? Most Scala packages will quote the
    exact SBT string to get the latest version in their documentation.
  prefs: []
  type: TYPE_NORMAL
- en: 'If this is not the case, or you are specifying a dependency on a Java library,
    head to the Maven Central website ([http://mvnrepository.com](http://mvnrepository.com))
    and search for the package of interest, for example "Breeze". The website provides
    a list of packages, including several named `breeze_2.xx` packages. The number
    after the underscore indicates the version of Scala the package was compiled for.
    Click on `"breeze_2.11"` to get a list of the different Breeze versions available.
    Choose `"0.11.2"`. You will be presented with a list of package managers to choose
    from (Maven, Ivy, Leiningen, and so on). Choose SBT. This will print a line like:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: These are the coordinates that you will want to copy to the `build.sbt` file.
    Note that we just specified `"breeze"`, rather than `"breeze_2.11"`. By preceding
    the package name with two percentage signs, `%%`, SBT automatically resolves to
    the correct Scala version. Thus, specifying `%% "breeze"` is identical to `% "breeze_2.11"`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now return to your SBT console and run:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: 'This will fetch the Breeze jars from Maven Central. You can now import Breeze
    in either the console or your scripts (within the context of this Scala project).
    Let''s test this in the console:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: You should now be able to compile, run and specify dependencies for your Scala
    scripts.
  prefs: []
  type: TYPE_NORMAL
- en: Module 2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A decent command of the Scala programming language is a prerequisite. Reading
    through a mathematical formulation, conveniently defined in an information box,
    is optional. However, some basic knowledge of mathematics and statistics might
    be helpful to understand the inner workings of some algorithms.
  prefs: []
  type: TYPE_NORMAL
- en: 'The course uses the following libraries:'
  prefs: []
  type: TYPE_NORMAL
- en: Scala 2.10.3 or higher
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Java JDK 1.7.0_45 or 1.8.0_25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: SBT 0.13 or higher
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: JFreeChart 1.0.1
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Apache Commons Math library 3.5 ([Chapter 3](part0027.xhtml#aid-PNV61 "Chapter 3. Plotting
    with breeze-viz"), *Data Preprocessing*, [Chapter 4](part0036.xhtml#aid-12AK82
    "Chapter 4. Parallel Collections and Futures"), *Unsupervised Learning*, and [Chapter
    6](part0051.xhtml#aid-1GKCM2 "Chapter 6. Slick – A Functional Interface for SQL"),
    *Regression and Regularization*)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Indian Institute of Technology Bombay CRF 0.2 ([Chapter 7](part0059.xhtml#aid-1O8H61
    "Chapter 7. Web APIs"), *Sequential Data Models*)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: LIBSVM 0.1.6 ([Chapter 8](part0067.xhtml#aid-1VSLM1 "Chapter 8. Scala and MongoDB"),
    *Kernel Models and Support Vector Machines*)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Akka 2.2.4 or higher (or Typesafe activator 1.2.10 or higher) ([Chapter 12](part0117.xhtml#aid-3FIHQ2
    "Chapter 12. Distributed Machine Learning with MLlib"), *Scalable Frameworks*)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Apache Spark 1.3.0 or higher ([Chapter 12](part0117.xhtml#aid-3FIHQ2 "Chapter 12. Distributed
    Machine Learning with MLlib"), *Scalable Frameworks*)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Module 3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This course is based on open source software. First, it's Java. One can download
    Java from Oracle's Java Download page. You have to accept the license and choose
    an appropriate image for your platform. Don't use OpenJDK—it has a few problems
    with Hadoop/Spark.
  prefs: []
  type: TYPE_NORMAL
- en: 'Second, Scala. If you are using Mac, I recommend installing Homebrew:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: Multiple open source packages will also be available to you. To install Scala,
    run `brew install scala`. Installation on a Linux platform requires downloading
    an appropriate Debian or RPM package from the [http://www.scala-lang.org/download/](http://www.scala-lang.org/download/)
    site. We will use the latest version at the time, that is, 2.11.7.
  prefs: []
  type: TYPE_NORMAL
- en: Spark distributions can be downloaded from [http://spark.apache.org/downloads.html](http://spark.apache.org/downloads.html).
    We use pre-build for Hadoop 2.6 and later image. As it's Java, you need to just
    unzip the package and start using the scripts from the `bin` subdirectory.
  prefs: []
  type: TYPE_NORMAL
- en: R and Python packages are available at [http://cran.r-project.org/bin](http://cran.r-project.org/bin)
    and [http://python.org/ftp/python/$PYTHON_VERSION/Python-$PYTHON_VERSION.tar.xz](http://python.org/ftp/python/%24PYTHON_VERSION/Python-%24PYTHON_VERSION.tar.xz)
    sites respectively. The text has specific instruction on how to configure them.
    Although our use of the packages should be version agnostic, I used R version
    3.2.3 and Python version 2.7.11 in this book.
  prefs: []
  type: TYPE_NORMAL
- en: Who this learning path is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This Learning Path is for engineers and scientists who are familiar with Scala
    and want to learn how to create, validate, and apply machine learning algorithms.
    It will also benefit software developers with a background in Scala programming
    who want to apply machine learning.
  prefs: []
  type: TYPE_NORMAL
- en: Reader feedback
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Feedback from our readers is always welcome. Let us know what you think about
    this course—what you liked or disliked. Reader feedback is important for us as
    it helps us develop titles that you will really get the most out of.
  prefs: []
  type: TYPE_NORMAL
- en: To send us general feedback, simply e-mail `<[feedback@packtpub.com](mailto:feedback@packtpub.com)>`,
    and mention the course's title in the subject of your message.
  prefs: []
  type: TYPE_NORMAL
- en: If there is a topic that you have expertise in and you are interested in either
    writing or contributing to a course, see our author guide at [www.packtpub.com/authors](http://www.packtpub.com/authors).
  prefs: []
  type: TYPE_NORMAL
- en: Customer support
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now that you are the proud owner of a course book, we have a number of things
    to help you to get the most from your purchase.
  prefs: []
  type: TYPE_NORMAL
- en: Downloading the example code
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You can download the example code files for this course from your account at
    [http://www.packtpub.com](http://www.packtpub.com). If you purchased this course
    elsewhere, you can visit [http://www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files e-mailed directly to you.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can download the code files by following these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in or register to our website using your e-mail address and password.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Hover the mouse pointer on the **SUPPORT** tab at the top.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on **Code Downloads & Errata**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the name of the course in the **Search** box.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the course for which you're looking to download the code files.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Choose from the drop-down menu where you purchased this course from.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on **Code Download**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You can also download the code files by clicking on the **Code Files** button
    on the course's webpage at the Packt Publishing website. This page can be accessed
    by entering the course's name in the **Search** box. Please note that you need
    to be logged in to your Packt account.
  prefs: []
  type: TYPE_NORMAL
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  prefs: []
  type: TYPE_NORMAL
- en: WinRAR / 7-Zip for Windows
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zipeg / iZip / UnRarX for Mac
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 7-Zip / PeaZip for Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The code bundle for the course is also hosted on GitHub at [https://github.com/PacktPublishing/Scala-Applied-Machine-Learning-Code](https://github.com/PacktPublishing/Scala-Applied-Machine-Learning-Code).
  prefs: []
  type: TYPE_NORMAL
- en: Errata
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Although we have taken every care to ensure the accuracy of our content, mistakes
    do happen. If you find a mistake in one of our course—maybe a mistake in the text
    or the code—we would be grateful if you could report this to us. By doing so,
    you can save other readers from frustration and help us improve subsequent versions
    of this course. If you find any errata, please report them by visiting [http://www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata),
    selecting your course, clicking on the **Errata Submission Form** link, and entering
    the details of your errata. Once your errata are verified, your submission will
    be accepted and the errata will be uploaded to our website or added to any list
    of existing errata under the Errata section of that title.
  prefs: []
  type: TYPE_NORMAL
- en: To view the previously submitted errata, go to [https://www.packtpub.com/books/content/support](https://www.packtpub.com/books/content/support)
    and enter the name of the course in the search field. The required information
    will appear under the **Errata** section.
  prefs: []
  type: TYPE_NORMAL
- en: Piracy
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Piracy of copyrighted material on the Internet is an ongoing problem across
    all media. At Packt, we take the protection of our copyright and licenses very
    seriously. If you come across any illegal copies of our works in any form on the
    Internet, please provide us with the location address or website name immediately
    so that we can pursue a remedy.
  prefs: []
  type: TYPE_NORMAL
- en: Please contact us at `<[copyright@packtpub.com](mailto:copyright@packtpub.com)>`
    with a link to the suspected pirated material.
  prefs: []
  type: TYPE_NORMAL
- en: We appreciate your help in protecting our authors and our ability to bring you
    valuable content.
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If you have a problem with any aspect of this course, you can contact us at
    `<[questions@packtpub.com](mailto:questions@packtpub.com)>`, and we will do our
    best to address the problem.
  prefs: []
  type: TYPE_NORMAL
