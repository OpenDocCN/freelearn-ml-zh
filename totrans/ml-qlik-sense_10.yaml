- en: '10'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '10'
- en: Examples and Case Studies
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 例子和案例研究
- en: 'This chapter embarks on a journey into the realm of machine learning, exploring
    practical applications and real-world examples that demonstrate its power and
    potential. In the previous chapters, we have learned all the essential skills
    required to build a good machine learning solution. In this chapter, we will utilize
    all the knowledge gained and build the following examples from scratch:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章开始了一段探索机器学习领域的旅程，探讨了其实际应用和现实世界的例子，展示了其力量和潜力。在前几章中，我们已经学习了构建良好的机器学习解决方案所需的所有基本技能。在本章中，我们将利用所获得的所有知识，从头开始构建以下示例：
- en: Linear regression example
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 线性回归示例
- en: Customer churn example
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户流失示例
- en: Linear regression example
  id: totrans-5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 线性回归示例
- en: In this example, we will create a linear regression model to predict the value
    of a house in the California area. Let’s begin by getting familiar with the dataset.
    We will use a common California house values dataset. This is a collection of
    data related to residential real estate properties in various regions of California,
    USA. It is commonly used in machine learning and data analysis tasks for predicting
    house prices based on various features.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在本例中，我们将创建一个线性回归模型来预测加利福尼亚地区房屋的价值。让我们首先熟悉数据集。我们将使用一个常见的加利福尼亚房屋价值数据集。这是一个关于美国加利福尼亚州各个地区住宅房地产数据的集合，常用于机器学习和数据分析任务中，基于各种特征预测房价。
- en: 'The dataset we will use contains the following fields:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用的数据集包含以下字段：
- en: '`medianIncome`: The median income of households in a specific block.'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`medianIncome`: 特定区域家庭的中位数收入。'
- en: '`housingMedianAge`: The median age of houses in a block.'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`housingMedianAge`: 该区域内房屋的中位数年龄。'
- en: '`totalRooms`: The total number of rooms in the houses in a block.'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`totalRooms`: 该区域内房屋的总房间数。'
- en: '`totalBedrooms`: The total number of bedrooms in the houses in a block.'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`totalBedrooms`: 该区域内房屋的总卧室数。'
- en: '`population`: The total population of the block.'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`population`: 该区域的总人口。'
- en: '`households`: The total number of households (a group of people residing within
    a home unit) within a block.'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`households`: 该区域内家庭的总数（居住在家庭单元内的一群人）。'
- en: '`latitude`: The latitude of the geographical location of the house.'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`latitude`: 房屋地理位置的纬度。'
- en: '`longitude`: The longitude of the geographical location of the house.'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`longitude`: 房屋地理位置的经度。'
- en: '`medianHouseValue`: The median value of houses in the block.'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`medianHouseValue`: 该区域内房屋的中位数价值。'
- en: '`oceanProximity`: Categorical description of the distance to the ocean'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`oceanProximity`: 海洋距离的类别描述'
- en: 'Here is a sample of the data:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是数据的一个样本：
- en: '![Figure 10.1: Sample data from a California housing dataset](img/B19863_10_01.jpg)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![图10.1：加利福尼亚住房数据集的样本数据](img/B19863_10_01.jpg)'
- en: 'Figure 10.1: Sample data from a California housing dataset'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.1：加利福尼亚住房数据集的样本数据
- en: Note
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The example dataset can be found in the GitHub repository of this book. A good
    place to find other datasets is, for example, [https://www.kaggle.com/datasets](https://www.kaggle.com/datasets).
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 示例数据集可以在本书的GitHub仓库中找到。其他数据集的一个好地方是，例如，[https://www.kaggle.com/datasets](https://www.kaggle.com/datasets)。
- en: 'The first step in our machine learning project is to define a question we want
    to answer using our model. In this case, we are using a rather simple historical
    dataset and therefore the framework used is modified a bit. Let’s determine the
    following characteristics to start:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 我们机器学习项目的第一步是定义我们想用我们的模型回答的问题。在这种情况下，我们使用的是一个相对简单的历史数据集，因此所使用的框架略有修改。让我们确定以下特征以开始：
- en: '**Trigger**: A new house data is inserted into the dataset'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**触发器**: 数据集中插入新的房屋数据'
- en: '**Target**: The value of the house in US dollars'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**目标**: 美元计价的房屋价值'
- en: '**Features**: Latitude, longitude, median age, total rooms, total bedrooms,
    population, households, median income, ocean proximity'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**特征**: 纬度，经度，中位数年龄，总房间数，总卧室数，人口，家庭数，中位数收入，海洋接近度'
- en: '**Machine learning question**: Predicting what will the house value be in the
    California area?'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**机器学习问题**: 预测加利福尼亚地区的房屋价值会是多少？'
- en: To begin our actual work, let’s first upload `housing_test.csv` and `housing_train.csv`
    into our Qlik cloud tenant. These files can be found in the GitHub repository
    of this book. As you can see, the dataset is already split into train and test
    datasets.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 为了开始我们的实际工作，让我们首先将`housing_test.csv`和`housing_train.csv`上传到我们的Qlik云租户。这些文件可以在本书的GitHub仓库中找到。如您所见，数据集已经被分割成训练集和测试集。
- en: In a normal machine learning project, we would need to take care of encoding
    the categorical fields, handling null values, scaling and so on, but in our case,
    Qlik AutoML takes care of all these steps. Our next task is to create a new machine
    learning experiment (**Add New** 🡪 **New** **ML Experiment**).
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 在一个正常的机器学习项目中，我们需要注意对分类字段进行编码、处理空值、缩放等，但在这个案例中，Qlik AutoML负责所有这些步骤。我们的下一个任务是创建一个新的机器学习实验（**添加新**
    🡪 **新** **ML实验**）。
- en: 'Give a name to your experiment, define a space you want to use, and press `housing_train.csv`,
    which we uploaded earlier. You should see the following:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 给您的实验起一个名字，定义您想要使用的空间，然后按`housing_train.csv`，这是我们之前上传的。你应该会看到以下内容：
- en: '![Figure 10.2: Housing prices experiment – target selection](img/B19863_10_02.jpg)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![图10.2：房价实验 – 目标选择](img/B19863_10_02.jpg)'
- en: 'Figure 10.2: Housing prices experiment – target selection'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.2：房价实验 – 目标选择
- en: 'Next, we will select our target variable. We can also select the features to
    be used in our experiment. Select `median_house_value` as the target and all other
    fields should be automatically selected to be included in our experiment. You
    should see something like the following:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将选择我们的目标变量。我们还可以选择用于实验的特征。选择`median_house_value`作为目标，所有其他字段应自动选择以包含在我们的实验中。你应该会看到以下内容：
- en: '![Figure 10.3: Target and features selected](img/B19863_10_03.jpg)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![图10.3：选定的目标和特征](img/B19863_10_03.jpg)'
- en: 'Figure 10.3: Target and features selected'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.3：选定的目标和特征
- en: 'In the previous image, we have also marked the feature type of `total_bedrooms`
    with a red square. Qlik has recognized this field as a string and forms a categorical
    feature by default. Change that to `total_bedrooms`, we can select **Run Experiment**
    from the bottom right corner. After a while, you should see the following:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 在之前的图像中，我们还用红色方块标记了`total_bedrooms`的特征类型。Qlik已经识别这个字段为字符串，并默认将其形成一个分类特征。将其更改为`total_bedrooms`，我们可以从右下角选择**运行实验**。过了一会儿，你应该会看到以下内容：
- en: '![Figure 10.4: Housing prices experiment – first results](img/B19863_10_04.jpg)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![图10.4：房价实验 – 第一次结果](img/B19863_10_04.jpg)'
- en: 'Figure 10.4: Housing prices experiment – first results'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.4：房价实验 – 第一次结果
- en: When looking at the SHAP diagrams for our first version of the experiment, we
    can see that the `median_income` field has a rather high correlation with the
    predicted house values. Let’s try to configure a second version of our experiment
    without that field.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 当查看我们实验的第一个版本的SHAP图时，我们可以看到`median_income`字段与预测的房价有相当高的相关性。让我们尝试配置一个没有该字段的第二个版本的实验。
- en: 'Select `median_income` as in the following figure:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 如下图中选择`median_income`：
- en: '![Figure 10.5: Features reconfiguration](img/B19863_10_05.jpg)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![图10.5：特征重新配置](img/B19863_10_05.jpg)'
- en: 'Figure 10.5: Features reconfiguration'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.5：特征重新配置
- en: Select `total_rooms` is the most determining feature, but our R2 score has also
    dropped. In this case, we will go with the first version of our experiment since
    it gave us better accuracy. You can try to configure multiple versions and experiment
    with the models to get a better model.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 选择`total_rooms`是最决定性的特征，但我们的R2分数也有所下降。在这种情况下，我们将选择实验的第一个版本，因为它给了我们更好的准确度。您可以尝试配置多个版本并实验模型以获得更好的模型。
- en: 'In the list at the top part of the screen, scroll down until you see the top-performing
    model of the first run and select it. Your screen should look like the following:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在屏幕顶部部分的列表中，向下滚动直到您看到第一次运行的最佳模型并选择它。您的屏幕应该如下所示：
- en: '![Figure 10.6: The model selected for deployment.](img/B19863_10_06.jpg)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![图10.6：部署所选模型](img/B19863_10_06.jpg)'
- en: 'Figure 10.6: The model selected for deployment.'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.6：部署所选模型。
- en: Select **Deploy** from the bottom right corner. Enter a name and define the
    space for your newly deployed model. Make sure that **Enable real-time API access**
    is selected and press **Deploy**. Our model is now deployed and ready for use.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 从右下角选择**部署**。输入一个名称并定义您新部署的模型的空间。确保**启用实时API访问**被选中，然后按**部署**。我们的模型现在已部署并准备好使用。
- en: As we have learned in previous chapters, the deployed model itself provides
    information about the required schema, algorithm deployed, and some metadata from
    the experiment. You can open the deployed model and have a closer look at this
    information at this point.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在前面的章节中学到的，部署的模型本身提供了有关所需模式、部署的算法和实验的一些元数据的信息。您现在可以打开部署的模型并更详细地查看这些信息。
- en: Our next task to get the predicted results into a finalized application is to
    create a new Qlik analytics application.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 我们下一个任务是将预测结果放入最终的应用程序中，需要创建一个新的Qlik分析应用程序。
- en: For the data in our application, we will import `housing_test.csv`. After that,
    we will create a new data connection for the Qlik AutoML model that we deployed
    in the earlier step.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我们应用程序中的数据，我们将导入`housing_test.csv`。之后，我们将为我们在早期步骤中部署的Qlik AutoML模型创建一个新的数据连接。
- en: 'Create a new Qlik AutoML connection under `Id`. The connector settings should
    look similar to the following:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在`Id`下创建一个新的Qlik AutoML连接。连接器设置应类似于以下内容：
- en: '![Figure 10.7: Connector settings](img/B19863_10_07.jpg)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![图10.7：连接器设置](img/B19863_10_07.jpg)'
- en: 'Figure 10.7: Connector settings'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.7：连接器设置
- en: 'Test the connection and save it after that. Next, we will select the data to
    load. In the `housing_test.csv` and select `housing_predictions` to be included.
    You should see the following:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 测试连接并在之后保存它。接下来，我们将选择要加载的数据。在`housing_test.csv`中，选择`housing_predictions`以包含在内。你应该看到以下内容：
- en: '![Figure 10.8: The Select data to load window.](img/B19863_10_08.jpg)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![图10.8：选择要加载的数据窗口。](img/B19863_10_08.jpg)'
- en: 'Figure 10.8: The Select data to load window.'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.8：选择要加载的数据窗口。
- en: Select **Insert script** and load the data into the application. You are now
    ready to create the actual dashboard.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 选择**插入脚本**并将数据加载到应用程序中。你现在可以创建实际的仪表板了。
- en: Note
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: If you run into problems during the application creation, there is a sample
    application in the Github repository of this book for your reference.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在创建应用程序时遇到问题，这本书的GitHub仓库中有示例应用程序供你参考。
- en: We will not cover the dashboard creation part in detail to give you a chance
    to play with the different visualization options. The following image represents
    a sample dashboard that shows predicted house values on a map using a gradient
    color scheme, a histogram to show the distribution of prices, and a waterfall
    diagram to visualize SHAP values. Use the skills acquired from previous chapters
    and create a dashboard of your own to visualize the data.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将不会详细讲解仪表板创建部分，以便给你机会尝试不同的可视化选项。以下图像代表一个示例仪表板，它使用渐变色方案在地图上显示预测的房屋价值，使用直方图显示价格分布，以及使用瀑布图可视化SHAP值。利用前几章学到的技能，创建一个自己的仪表板来可视化数据。
- en: '![Figure 10.9: Housing prices – sample dashboard](img/B19863_10_09.jpg)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![图10.9：房价 – 示例仪表板](img/B19863_10_09.jpg)'
- en: 'Figure 10.9: Housing prices – sample dashboard'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.9：房价 – 示例仪表板
- en: You can create multiple dashboards and try to cross-reference the data from
    multiple models if you re-run the experiment with different parameters. Try to
    play with the different settings and graph types to find an effective visualization.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你用不同的参数重新运行实验，可以创建多个仪表板并尝试交叉引用多个模型的数据。尝试调整不同的设置和图表类型，以找到有效的可视化方法。
- en: Now that we have implemented a linear regression example, it is time to move
    on to another example with a slightly more complex scenario. We will investigate
    the customer churn example next.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经实现了一个线性回归示例，是时候转向另一个稍微复杂一点的示例了。我们将研究客户流失示例。
- en: Customer churn example
  id: totrans-65
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 客户流失示例
- en: 'In our second example, we will create a binary model to predict customer churn
    for a bank. We are going to use a dataset that contains the following fields:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的第二个示例中，我们将创建一个二进制模型来预测银行客户的客户流失。我们将使用包含以下字段的数据集：
- en: '`customer_id`: A unique identifier for each customer.'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`customer_id`：每个客户的唯一标识符。'
- en: '`credit_score`: A numerical representation of a customer’s creditworthiness.'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`credit_score`：客户信用度的数值表示。'
- en: '`country`: The country where the customer resides.'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`country`：客户居住的国家。'
- en: '`gender`: The gender of the customer.'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`gender`：客户的性别。'
- en: '`age`: The age of the customer.'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`age`：客户的年龄。'
- en: '`tenure`: The duration of the customer’s relationship with the company.'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`tenure`：客户与公司关系的持续时间。'
- en: '`balance`: The current balance in the customer’s account.'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`balance`：客户账户中的当前余额。'
- en: '`products_number`: The number of products the customer has brought from the
    company.'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`products_number`：客户从公司购买的产品数量。'
- en: '`credit_card`: A binary indicator showing whether the customer holds a credit
    card with the company.'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`credit_card`：一个二进制指示器，显示客户是否持有公司的信用卡。'
- en: '`active_member`: A binary indicator indicating whether the customer is currently
    an active member of the company.'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`active_member`：一个二进制指示器，表示客户是否目前是公司的活跃成员。'
- en: '`estimated_salary`: An approximate estimation of the customer’s salary.'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`estimated_salary`：对客户工资的大致估计。'
- en: '`churn`: A binary indicator showing whether the customer has churned (`1`)
    or not (`0`). Churning refers to customers who have ended their relationship with
    the company.'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`churn`：一个二元指示器，显示客户是否已经流失（`1`）或未流失（`0`）。流失指的是与公司结束关系的客户。'
- en: 'Here is a sample of the dataset:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是数据集的一个样本：
- en: '![Figure 10.10: Customer churn – sample data](img/B19863_10_10.jpg)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![图10.10：客户流失 - 样本数据](img/B19863_10_10.jpg)'
- en: 'Figure 10.10: Customer churn – sample data'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.10：客户流失 - 样本数据
- en: To start with our machine learning project, we will first upload `Bank Customer
    Churn Prediction.csv` into Qlik Cloud. This data file can be found in the GitHub
    repository of this book. We also must split the dataset. Qlik AutoML splits the
    dataset during the experiment phase, but we will also create separate training
    and test datasets to get a better understanding of the model’s performance. To
    split the dataset, we will use the training and test data in a ratio of 70:30.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始我们的机器学习项目，我们首先将`Bank Customer Churn Prediction.csv`上传到Qlik Cloud。这个数据文件可以在本书的GitHub仓库中找到。我们还必须分割数据集。Qlik
    AutoML在实验阶段分割数据集，但我们将创建单独的训练集和测试集，以更好地理解模型的性能。为了分割数据集，我们将使用70:30的比例来分割训练和测试数据。
- en: 'Splitting the dataset can be done in Qlik. To do that, we will first create
    a new analytics application and name it `Churn Data Prep`. Next, create a data
    connection to the location that contains the previously uploaded `Bank Customer
    Churn Prediction.csv` file. You can use the following code to do the splitting:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 在Qlik中可以分割数据集。为此，我们首先创建一个新的分析应用程序，并将其命名为`Churn Data Prep`。然后，创建一个数据连接到包含之前上传的`Bank
    Customer Churn Prediction.csv`文件的目录。您可以使用以下代码进行分割：
- en: '[PRE0]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The preceding code reads `Bank Customer Churn.csv` using the file data connection
    and adds a row number to each row. Then, two subsets (training and test) are created
    using this row number and are stored in QVD files. The `Row number` field is dropped
    before storing because we don’t need it in our machine learning project. As a
    result of the script, the new data files (`banking_churn_train.qvd` and `banking_churn_test.qvd`)
    are stored in the same location as the original data file.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 之前的代码使用文件数据连接读取`Bank Customer Churn.csv`，并为每一行添加一个行号。然后，使用这个行号创建了两个子集（训练集和测试集），并将它们存储在QVD文件中。在存储之前删除了`行号`字段，因为我们不需要在机器学习项目中使用它。因此，脚本生成的新的数据文件（`banking_churn_train.qvd`和`banking_churn_test.qvd`）存储在原始数据文件相同的目录下。
- en: 'Next, we will start to investigate the data to form a machine learning question.
    Data exploration can be done in the same Qlik application where you split the
    data. Remember to drop the test and train tables before continuing with the visualizations.
    An example of an analysis view is represented in the following figure:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将开始调查数据以形成机器学习问题。数据探索可以在您分割数据的同一Qlik应用程序中进行。记住在继续进行可视化之前删除测试和训练表。以下图表示例了一个分析视图：
- en: '![Figure 10.11: Customer churn example - Initial analysis](img/B19863_10_11.jpg)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![图10.11：客户流失示例 - 初始分析](img/B19863_10_11.jpg)'
- en: 'Figure 10.11: Customer churn example - Initial analysis'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.11：客户流失示例 - 初始分析
- en: If we plot the values using a histogram, we can see that `credit_score` and
    `age` follow a normal distribution. If we look at the balance, there are lot of
    zero values, but the rest of the data is normally distributed. If we look at the
    tenure, there are only a few customers with 1 year of tenure and 95 of those have
    been churned. This is important information when defining our prediction window.
    We can also see that there are no issues in the data. You can play with different
    visualizations when getting familiar with the data. An example can be found in
    the GitHub repository of this book.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们使用直方图来绘制这些值，我们可以看到`credit_score`和`age`遵循正态分布。如果我们查看余额，有很多零值，但其余数据是正态分布的。如果我们查看任期，只有少数客户有1年的任期，其中95个已经流失。这在定义我们的预测窗口时是重要信息。我们还可以看到数据中没有问题。您可以在熟悉数据时尝试不同的可视化。一个例子可以在本书的GitHub仓库中找到。
- en: 'After investigating the data, we can use the following framework to form our
    machine learning question:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 在调查数据后，我们可以使用以下框架来形成我们的机器学习问题：
- en: '**Event trigger**: When a new customer subscribes'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事件触发器**：当新客户订阅时'
- en: '**Target**: When a customer leaves the company services (churn)'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**目标**：当客户离开公司服务（流失）'
- en: 'Binary outcome: Yes or No'
  id: totrans-93
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 二元结果：是或否
- en: The horizon is based on the average churned customer tenure length (around five
    years)
  id: totrans-94
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 预测范围基于平均流失客户任期长度（大约五年）
- en: '`active_member`, `age`, `balance`, `country`, `credit_card`, `credit_score`,
    `estimated_salary`, `gender`, `products_number`, and `tenure`'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`活跃会员`、`年龄`、`余额`、`国家`、`信用卡`、`信用评分`、`估计工资`、`性别`、`产品数量`和`任期`'
- en: '**Prediction point**: One year after subscription'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**预测点**：订阅后一年'
- en: '**Machine learning question**: After one year of activity as a customer, will
    the customer churn during the first five years?'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**机器学习问题**：作为客户活动一年后，客户在第一五年内会流失吗？'
- en: By defining our model using the framework, we have defined that after a new
    customer has signed, we will collect data during the first year and then predict
    whether the customer will churn during the first five years. We can re-calculate
    the predictions periodically after the initial results when we get new data (for
    example, every six months after the initial results). Since we had a minimal number
    of customers that churned during the first year, our data accumulation window
    (the time between the event trigger and the prediction point) is not too long.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用框架定义我们的模型，我们定义了在新客户签约后，我们将收集第一年的数据，然后预测客户在第一五年内是否会流失。在获得新数据（例如，在初始结果后的每六个月）后，我们可以在初始结果之后定期重新计算预测。由于我们在第一年内流失的客户数量很少，我们的数据积累窗口（事件触发和预测点之间的时间）并不太长。
- en: 'Let’s now create the actual machine learning experiment using our training
    dataset. Start by creating a new experiment and select the correct dataset (`banking_churn_train.qvd`).
    Select `churn` as the target and all the other fields except `customer_id` as
    features. The following figure represents the first experiment setup:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们使用我们的训练数据集创建实际的机器学习实验。首先创建一个新的实验，并选择正确的数据集（`banking_churn_train.qvd`）。选择`流失`作为目标，并将除`customer_id`之外的所有其他字段作为特征。以下图表示第一个实验设置：
- en: '![Figure 10.12: Experiment setup](img/B19863_10_12.jpg)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![图10.12：实验设置](img/B19863_10_12.jpg)'
- en: 'Figure 10.12: Experiment setup'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.12：实验设置
- en: 'We can see that Qlik AutoML recognized the categorical features and will automatically
    apply one-hot encoding to these fields. You can now run the experiment. After
    the first run, the experiment returns the following results:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到，Qlik AutoML 识别了分类特征，并将自动将这些字段应用一热编码。你现在可以运行实验。第一次运行后，实验返回以下结果：
- en: '![Figure 10.13: First results from the experiment](img/B19863_10_13.jpg)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![图10.13：实验的第一批结果](img/B19863_10_13.jpg)'
- en: 'Figure 10.13: First results from the experiment'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.13：实验的第一批结果
- en: 'As we can see from the confusion matrix, the rate of false negatives is quite
    large and our ROC curve indicates that our model is not performing well. From
    the permutation and SHAP importance graphs we can see that `age` and `products_number`
    correlate highly with the result. Let’s try to make another run without these
    variables and see if we will get more accurate results. Select `age` and `products_number`
    and press **Run v2**. You should see the following results:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们从混淆矩阵中可以看到，假阴性的比率相当大，我们的ROC曲线表明我们的模型表现不佳。从排列和SHAP重要性图中我们可以看到，`年龄`和`产品数量`与结果高度相关。让我们尝试再次运行，但不包括这些变量，看看我们是否会得到更准确的结果。选择`年龄`和`产品数量`，然后按**运行v2**。你应该看到以下结果：
- en: '![Figure 10.14: Results after modification](img/B19863_10_14.jpg)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![图10.14：修改后的结果](img/B19863_10_14.jpg)'
- en: 'Figure 10.14: Results after modification'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.14：修改后的结果
- en: 'As we can see, the accuracy of the model dropped so our changes were not beneficial.
    After a few iterations, we will find the best combination of features. After that,
    it is possible to finetune the model even more by enabling hyperparameter optimization
    from the settings and defining a time window for that. You can try different combinations
    and investigate the model performance. Once you are done, configure the new version
    and select the following fields: `age`, `products_number`, `active_member`, `gender`,
    `balance`, and `country`. Also, enable hyperparameter optimization and set the
    window to one hour. You should see the following results:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们所见，模型的准确性下降，因此我们的更改没有带来好处。经过几次迭代后，我们将找到最佳的特征组合。之后，通过从设置中启用超参数优化并定义一个时间窗口，我们可以进一步微调模型。你可以尝试不同的组合并调查模型性能。完成后，配置新版本并选择以下字段：`年龄`、`产品数量`、`活跃会员`、`性别`、`余额`和`国家`。还要启用超参数优化并将窗口设置为一个小时。你应该看到以下结果：
- en: '![Figure 10.15: Results from the optimized experiment](img/B19863_10_15.jpg)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![图10.15：优化实验的结果](img/B19863_10_15.jpg)'
- en: 'Figure 10.15: Results from the optimized experiment'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.15：优化实验的结果
- en: 'We can see that the accuracy of our final model is 84.4% and the F1 score is
    0.623\. The model is not a top performer but will give us relatively good results.
    Select the top-performing model and press **Deploy**. This will create a machine
    learning deployment for us. You can open the deployed model. Verify that you see
    the following schema:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到，我们最终模型的准确率为84.4%，F1分数为0.623。该模型并非表现最佳，但会给我们带来相对较好的结果。选择表现最佳的模型并按下**部署**。这将为我们创建一个机器学习部署。您可以打开已部署的模型。验证您是否看到了以下架构：
- en: '![Figure 10.16: Banking churn schema](img/B19863_10_16.jpg)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![图10.16：银行客户流失架构](img/B19863_10_16.jpg)'
- en: 'Figure 10.16: Banking churn schema'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.16：银行客户流失架构
- en: 'We can now create a new analytics application and load `banking_churn_test.qvd`
    into it as a data table. You should do this in script view. We should also create
    a data connection to our newly deployed model. To create the correct data connection,
    select Qlik AutoML from the connection list and select the model from the dropdown
    menu. Give a name to the returned table and select SHAP -values and errors to
    be included. Type `customer_id` into **Association Field**. Your settings should
    look similar to the following:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在可以创建一个新的分析应用程序并将`banking_churn_test.qvd`加载到其中作为数据表。您应该在脚本视图中这样做。我们还应该创建到我们新部署的模型的数据连接。要创建正确的数据连接，从连接列表中选择Qlik
    AutoML并从下拉菜单中选择模型。为返回的表命名并选择要包含的SHAP值和错误。在**关联字段**中输入`customer_id`。您的设置应类似于以下内容：
- en: '![Figure 10.17: Connection settings](img/B19863_10_17.jpg)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![图10.17：连接设置](img/B19863_10_17.jpg)'
- en: 'Figure 10.17: Connection settings'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.17：连接设置
- en: 'Next, add the predictions to the script. Enter the name of the `banking_churn_test`
    table into the **Resident Table** field and select the result set. Select **Insert
    script**. Your code should look as follows:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，将预测结果添加到脚本中。在**居民表**字段中输入`banking_churn_test`表的名称并选择结果集。选择**插入脚本**。您的代码应如下所示：
- en: '[PRE1]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'We will load the test dataset in the preceding code, and then call the model
    endpoint through the data connector. After you complete the script, select **Load
    data**. Open **Data model viewer** and verify that you can see two tables connected.
    Next, we will focus on creating the actual application. You should try different
    visualization types and connect to the model using the **server-side extension**
    (**SSE**) syntax. An example dashboard may look like the following:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在前面的代码中加载测试数据集，然后通过数据连接器调用模型端点。完成脚本后，选择**加载数据**。打开**数据模型查看器**并验证您是否可以看到两个表连接在一起。接下来，我们将专注于创建实际的应用程序。您应该尝试不同的可视化类型，并使用**服务器端扩展**（**SSE**）语法连接到模型。一个示例仪表板可能看起来如下：
- en: '![Figure 10.18: Churn analysis example](img/B19863_10_18.jpg)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
  zh: '![图10.18：客户流失分析示例](img/B19863_10_18.jpg)'
- en: 'Figure 10.18: Churn analysis example'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.18：客户流失分析示例
- en: We will not cover the creation of every visualization in this chapter since
    you should experiment with the data and visualizations. A sample application is
    provided as part of the materials in the GitHub repository. We have now successfully
    implemented two different machine learning solutions with different use cases
    and studied how to form a machine learning question to be answered. We have also
    learned how to optimize and finetune a model.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 由于您应该对数据和可视化进行实验，因此本章不会涵盖每个可视化的创建。一个示例应用程序作为GitHub仓库中的材料提供。我们现在已经成功实现了两个不同用例的机器学习解决方案，并研究了如何形成要回答的机器学习问题。我们还学习了如何优化和微调模型。
- en: Summary
  id: totrans-123
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we utilized the skills learned during the previous chapters
    by implementing two different use cases. In our first example, we studied the
    data of houses in California and created a model to predict their prices based
    on house-related variables. We created an application to utilize our model and
    learned about the iterations and how to interpret the experiment results.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们通过实现两个不同的用例来利用了前几章学到的技能。在我们的第一个例子中，我们研究了加利福尼亚州的房屋数据，并创建了一个基于房屋相关变量的模型来预测其价格。我们创建了一个应用程序来利用我们的模型，并学习了迭代以及如何解释实验结果。
- en: In our second example, we learned how to form a customer churn model and utilize
    it in multiple ways. We also learned how to create different datasets from our
    original data file and how to form a machine learning question using a framework.
    We visualized the results using native visualizations in Qlik Sense.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的第二个例子中，我们学习了如何构建客户流失模型，并利用它在多种方式下。我们还学习了如何从原始数据文件中创建不同的数据集，以及如何使用框架来构建机器学习问题。我们使用Qlik
    Sense的本地可视化来展示结果。
- en: In our next and last chapter, we will look into the future. We will investigate
    current trends in machine learning and artificial intelligence and try to predict
    how these might evolve in the future. We will also investigate megatrends and
    get familiar with the characteristics of a megatrend. We will also think about
    the evaluation of possible megatrends. Understanding megatrends is a crucial skill
    in being able to compete and evolve.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们接下来的最后一章中，我们将展望未来。我们将探讨当前机器学习和人工智能的趋势，并尝试预测这些趋势在未来可能如何演变。我们还将研究重大趋势，并熟悉重大趋势的特征。我们还将思考对可能出现的重大趋势的评估。理解重大趋势是能够在竞争中发展和进化的关键技能。
