["```py\n!pip install --upgrade pandas numpy matplotlib tensorflow tcav\n```", "```py\nimport tensorflow as tf\n```", "```py\nimport tcav\n```", "```py\ntarget = 'tiger'  \n```", "```py\nconcepts = ['honeycombed', 'striped'] \n```", "```py\nmodel_to_run = 'GoogleNet'\n```", "```py\nsess = utils.create_session()\n```", "```py\nGRAPH_PATH = \"models/inception5h/tensorflow_inception_graph.pb\"\n```", "```py\nLABEL_PATH = \"models/inception5h/imagenet_comp_graph_label_strings.txt\"\n```", "```py\ntrained_model = model.GoogleNetWrapper_public(sess,\n```", "```py\n                                              GRAPH_PATH,\n```", "```py\n                                              LABEL_PATH)\n```", "```py\nact_generator = act_gen.ImageActivationGenerator(\n```", "```py\n    trained_model, source_dir, activation_dir, \n```", "```py\n    max_examples=100)\n```", "```py\nbottlenecks = [ 'mixed4c']\n```", "```py\nnum_random_exp= 15\n```", "```py\nmytcav = tcav.TCAV(sess,\n```", "```py\n                   target,\n```", "```py\n                   concepts,\n```", "```py\n                   bottlenecks,\n```", "```py\n                   act_generator,\n```", "```py\n                   [0.1],\n```", "```py\n                   cav_dir=cav_dir,\n```", "```py\n                   num_random_exp=num_random_exp)\n```", "```py\nresults = mytcav.run(run_parallel=False)\n```", "```py\nutils_plot.plot_results(results,\n```", "```py\n                        num_random_exp=num_random_exp)\n```"]