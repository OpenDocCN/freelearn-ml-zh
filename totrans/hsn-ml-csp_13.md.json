["```py\nclass Program\n{\nstatic void Main(string[] args)\n{\nusing (var sim = new QuantumSimulator())\n{\nvar rand = new System.Random();\nforeach (var idxRun in Enumerable.Range(0, 8))\n{\nvar sent = rand.Next(2) == 0;\nvar received = TeleportClassicalMessage.Run(sim, sent).Result;\nSystem.Console.WriteLine($\"Round {idxRun}:tSent {sent},tgot\n  {received}.\");\nSystem.Console.WriteLine(sent == received ? \"Teleportation\n  successful!!n\" : \"n\");\n}\n}\nSystem.Console.WriteLine(\"nnPress Enter to continue...nn\");\nSystem.Console.ReadLine();\n}\n}\n```", "```py\noperation Teleport(msg : Qubit, there : Qubit) : ()\n{\nbody\n{\nusing (register = Qubit[1])\n{\n// Ask for an auxillary qubit that we can use to prepare\n// for teleportation.\nlet here = register[0];\n// Create some entanglement that we can use to send our message.\\\nH(here);\nCNOT(here, there);\n// Move our message into the entangled pair.\nCNOT(msg, here);\nH(msg);\n// Measure out the entanglement.\nif (M(msg) == One) { Z(there); }\nif (M(here) == One) { X(there); }\n// Reset our \"here\" qubit before releasing it.\nReset(here);\n}\n}\n}\n```", "```py\nPr(Zero||ψ\n ⟩\n )=\n ⟨\n ψ|0\n ⟩⟨\n 0|ψ\n ⟩\n```"]