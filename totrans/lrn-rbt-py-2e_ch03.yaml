- en: Modeling the Differential Drive Robot
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用差动驱动机器人建模
- en: In this chapter, we will look at how to model the differential drive robot and
    create the URDF model of this robot in ROS. The main use case of the robot that
    we are going to design in this chapter is to serve food and drinks in hotels and
    restaurants. The robot is named *Chefbot.* We will cover the complete modeling
    of this robot in this chapter.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将探讨如何建模差动驱动机器人并在ROS中创建该机器人的URDF模型。我们将在本章中设计的机器人的主要用途是在酒店和餐厅中供应食物和饮料。该机器人命名为*Chefbot*。我们将在本章中涵盖该机器人的完整建模。
- en: We will look at the CAD design of various mechanical components used in this
    robot and how to assemble them. We will look at the 2D and 3D CAD design of this
    robot and will discuss how to create the URDF model of the robot.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将查看机器人中使用的各种机械部件的CAD设计以及如何组装它们。我们将查看机器人的2D和3D CAD设计，并讨论如何创建机器人的URDF模型。
- en: The actual robot model deployed in hotels may be big in size, but here we intend
    to build a miniature version for testing our software. If you are interested in
    building a robot from scratch, this chapter is for you. If you are not interested
    in building the robot, you can choose some robotic platforms, such as Turtlebot,
    which are already available on the market, to work with this book.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 实际部署在酒店中的机器人模型可能体积较大，但在这里我们打算构建一个微型版本以测试我们的软件。如果你对从头开始构建机器人感兴趣，这一章就是为你准备的。如果你对构建机器人不感兴趣，你可以选择一些市场上已经可用的机器人平台，如Turtlebot，与这本书一起工作。
- en: To build the robot hardware, first we need to get the requirements of the robot.
    After getting the requirements, we can design it and draw the model in 2D CAD
    tools to manufacture the robot parts. The 3D modeling of the robot will give us
    more idea about the looks of the robot. After the 3D modeling, we can convert
    the design into a URDF model that can be used along with ROS.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 要构建机器人硬件，首先我们需要获取机器人的要求。在获取要求后，我们可以设计它并在2D CAD工具中绘制模型以制造机器人部件。机器人的3D建模将给我们更多关于机器人外观的想法。在3D建模后，我们可以将设计转换为URDF模型，该模型可以与ROS一起使用。
- en: 'The following topics will be covered in the chapter:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Designing robot parameters from the given specification
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从给定的规范中设计机器人参数
- en: Designing robot body parts in 2D using LibreCAD
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用LibreCAD在2D中设计机器人本体部件
- en: Designing a 3D robot model using Blender and Python
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Blender和Python设计3D机器人模型
- en: Creating a URDF model for Chefbot
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为Chefbot创建URDF模型
- en: Visualizing the Chefbot model in Rviz
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Rviz中可视化Chefbot模型
- en: Technical requirements
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: To test the application and code in this chapter, you need an Ubuntu 16.04 LTS
    PC/laptop with ROS Kinetic installed
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 要测试本章中的应用程序和代码，你需要一台安装了ROS Kinetic的Ubuntu 16.04 LTS PC/笔记本电脑
- en: Requirements of a service robot
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 服务机器人的要求
- en: 'Before designing any robotic system, the first procedure is to identify the
    requirements of the system. The following are the set of robot design requirements
    to be met by this robot. This includes hardware and software requirements:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在设计任何机器人系统之前，首先要确定系统的要求。以下是要满足本机器人的一组机器人设计要求。这包括硬件和软件要求：
- en: The robot should have a provision to carry food
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 机器人应具备携带食物的设施
- en: The robot should carry a maximum payload of 2 kg
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 机器人应携带最大有效载荷2公斤
- en: The robot should move at a speed between 0.25 m/s and 0.35 m/s
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 机器人的速度应在0.25米/秒到0.35米/秒之间
- en: The ground clearance of the robot should be greater than 3 cm
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 机器人的离地间隙应大于3厘米
- en: The robot has to work for 2 hours continuously
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 机器人必须连续工作2小时
- en: The robot should be able to move and supply food to any table, avoiding obstacles
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 机器人应能够移动并向任何餐桌供应食物，避免障碍物
- en: The robot height can be between 80 cm and 100 cm.
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 机器人高度应在80厘米到100厘米之间。
- en: The robot should be of low cost (less than 500 USD)
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 机器人的成本应低（低于500美元）
- en: Now we have the design requirements, such as payload, speed, ground clearance,
    robot height, cost of the robot, and the capabilities to be implemented in the
    robot, we can design a robot body and select components that are matching the
    aforementioned requirements. Let's discuss the robot mechanism we can use to match
    these requirements.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有了设计要求，例如有效载荷、速度、离地间隙、机器人高度、机器人成本以及要在机器人中实现的功能，我们可以设计机器人本体并选择符合上述要求的组件。让我们讨论我们可以用来满足这些要求的机器人机构。
- en: Robot drive mechanism
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 机器人驱动机构
- en: 'One of the cost-effective solutions for mobile robot navigation is the differential
    drive system. It''s one of the simplest drive mechanisms for a mobile robot and
    is mainly indented for indoor navigation. The **differential drive robot** consists
    of two wheels mounted on a common axis controlled by two separate motors. There
    are two supporting wheels called caster wheels. This ensures stability and weight
    distribution of the robot. The following diagram shows a typical differential
    drive system:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 移动机器人导航的经济有效解决方案之一是差速驱动系统。它是移动机器人最简单的驱动机构之一，主要用于室内导航。**差速驱动机器人**由两个安装在共同轴上的车轮组成，由两个独立的电机控制。有两个称为万向轮的支撑轮。这确保了机器人的稳定性和重量分布。以下图显示了典型的差速驱动系统：
- en: '![](img/77e74c2b-f427-4faf-9627-e7d2f86925ab.png)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/77e74c2b-f427-4faf-9627-e7d2f86925ab.png)'
- en: Differential drive system
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 差速驱动系统
- en: The next step is to select the mechanical components of this robot drive system,
    that is, mainly motors, wheels, and robot chassis. Based on the requirements,
    we will first discuss how to select the motor.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是选择此机器人驱动系统的机械组件，即主要是电机、车轮和机器人底盘。根据要求，我们首先讨论如何选择电机。
- en: Selection of motors and wheels
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 电机和车轮的选择
- en: Motors are selected after a look at the specifications. Some of the important
    parameters for motor selection are torque and RPM. We can compute these values
    from the given requirements.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在查看规格后选择电机。电机选择的一些重要参数是扭矩和转速。我们可以从给定要求中计算出这些值。
- en: Calculation of RPM of motors
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 电机转速计算
- en: The range of speed required for this robot is from 0.25 to 0.35m/s. We can take
    the maximum speed of this robot as 0.35 m/s for the design. Take the diameter
    of the wheel as 9 cm, because according to the requirement, the ground clearance
    should be greater than 3 cm and we will fix the robot body in same level as the
    motor shaft. In that case, we will get more ground clearance.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 此机器人所需的转速范围为 0.25 至 0.35m/s。在设计时，我们可以将此机器人的最大速度定为 0.35 m/s。取车轮直径为 9 cm，因为根据要求，离地间隙应大于
    3 cm，我们将机器人本体固定在与电机轴相同的高度。在这种情况下，我们将获得更大的离地间隙。
- en: 'Using the following equation, we can calculate the RPM of the motors:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下方程，我们可以计算电机的转速：
- en: '*RPM = ((60 * Speed /(3.14 * Diameter of Wheel)*'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '*RPM = ((60 * Speed) / (3.14 * Diameter of Wheel)*'
- en: '*RPM = (60 * 0.35)/(3.14 * 0.09) = 21 / 0.2826 = 74 RPM*'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '*RPM = (60 * 0.35) / (3.14 * 0.09) = 21 / 0.2826 = 74 RPM*'
- en: You can also take a look at [http://www.robotshop.com/blog/en/vehicle-speed-rpm-and-wheel-diameter-finder-9786](http://www.robotshop.com/blog/en/vehicle-speed-rpm-and-wheel-diameter-finder-9786)
    for the computation.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以查看 [http://www.robotshop.com/blog/en/vehicle-speed-rpm-and-wheel-diameter-finder-9786](http://www.robotshop.com/blog/en/vehicle-speed-rpm-and-wheel-diameter-finder-9786)
    了解计算方法。
- en: The calculated RPM with a 9 cm diameter wheel and 0.35 m/s speed is 74 RPM.
    We can consider 80 RPM as the standard value.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 使用直径为 9 厘米的车轮和 0.35 米/秒的速度计算出的转速为 74 RPM。我们可以将 80 RPM 视为标准值。
- en: Calculation of motor torque
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 电机扭矩计算
- en: 'Let''s calculate the torque required to move the robot:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们计算移动机器人所需的扭矩：
- en: Number of wheels = Four wheels including two caster wheels.
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 车轮数量 = 包括两个万向轮在内的四个车轮。
- en: Number of motors = Two.
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 电机数量 = 两个。
- en: Let's assume the coefficient of friction is 0.6 and radius of the wheel is 4.5
    cm.
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 假设摩擦系数为 0.6，车轮半径为 4.5 厘米。
- en: Take the total weight of robot = weight of robot + payload = (W = mg) = (~100
    N + ~20 N) W= ~ 150 N, whereas total mass = 12 Kg.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 机器人的总重量 = 机器人重量 + 负载 = (W = mg) = (~100 N + ~20 N) W= ~ 150 N，而总质量 = 12 Kg。
- en: The weight acting on the four wheels can be written as *2 * N1 + 2 * N2 = W*;
    that is, *N1* is the weight acting on each caster wheel and *N2* on motor wheels.
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 作用在四个车轮上的重量可以表示为 *2 * N1 + 2 * N2 = W*；即，*N1* 是作用在每个万向轮上的重量，*N2* 是作用在电机轮上的重量。
- en: Assume that the robot is stationary. The maximum torque is required when the
    robot starts moving. It should also overcome friction.
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 假设机器人处于静止状态。当机器人开始移动时，需要最大的扭矩。它还应克服摩擦。
- en: 'We can write the frictional force as robot torque = 0 until the robot moves.
    If we get the robot torque in this condition, we get the maximum torque as follows:'
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在机器人移动之前，我们可以将摩擦力表示为机器人扭矩 = 0。如果我们在此条件下获得机器人扭矩，我们可以得到以下最大扭矩：
- en: '*µ * N * r - T = 0*, where *µ* is the coefficient of friction, *N* is the average
    weight acting on each wheel, *r* is the radius of wheels, and *T* is the torque.'
  id: totrans-47
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*µ * N * r - T = 0*，其中 *µ* 是摩擦系数，*N* 是作用在每个车轮上的平均重量，*r* 是车轮半径，*T* 是扭矩。'
- en: '*N = W/2* (in the robot, actuation is only for two wheels, so we are taking
    W/2 for computing the maximum torque).'
  id: totrans-48
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*N = W/2*（在机器人中，驱动仅针对两个轮子，因此我们取 W/2 来计算最大扭矩）。'
- en: Therefore, we get: *0.6 * (120/2) * 0.045 - T = 0*
  id: totrans-49
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 因此，我们得到：*0.6 * (120/2) * 0.045 - T = 0*
- en: Hence, **T = 1.62 N-m or 16.51 Kg-cm**
  id: totrans-50
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 因此，**T = 1.62 N-m 或 16.51 Kg-cm**
- en: The design summary
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设计摘要
- en: 'After the design, we calculate the following values and rounding to standard
    motor specifications that are available in the market:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 设计完成后，我们计算以下值，并将其四舍五入到市场上可用的标准电机规格：
- en: Motor RPM = 80 (rounding to standard value)
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 电机 RPM = 80（四舍五入到标准值）
- en: Motor torque = 18 kg-cm
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 电机扭矩 = 18 kg-cm
- en: Wheel diameter = 9 cm
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 轮径 = 9 cm
- en: The robot chassis design
  id: totrans-56
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 机器人底盘设计
- en: After computing the robot's motors and wheels parameters, we can design the
    robot chassis or robot body. As required, the robot chassis should have a provision
    to hold food, it should be able to withstand up to 5 kg payload, the ground clearance
    of the robot should be greater than 3 cm, and it should be low in cost. Apart
    from this, the robot should have a provision to place electronics components,
    such as a **personal computer** (**PC**), sensors, and a battery.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 在计算了机器人的电机和车轮参数之后，我们可以设计机器人底盘或机器人本体。根据要求，机器人底盘应设有放置食物的装置，它应能承受高达 5 kg 的载重，机器人的离地间隙应大于
    3 cm，并且成本应低。除此之外，机器人还应设有放置电子组件的装置，例如 **个人电脑** (**PC**)、传感器和电池。
- en: 'One of the easiest designs to satisfy these requirements is a multi-layered
    architecture such as Turtlebot 2 (http://www.turtlebot.com/). It has three layers
    in the chassis. The robot platform called **Kobuki** (http://kobuki.yujinrobot.com/about2/)
    is the primary drive mechanism of this platform. The Roomba platform has motors
    and sensors inbuilt, so there is no need to worry about designing the robot drive
    system. The following image shows the **TurtleBot 2** robot chassis design:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 满足这些要求的最简单设计之一是多层架构，如 Turtlebot 2 (http://www.turtlebot.com/)。底盘有三层。被称为 **Kobuki**
    (http://kobuki.yujinrobot.com/about2/) 的机器人平台是这个平台的主要驱动机制。Roomba 平台内置了电机和传感器，因此无需担心设计机器人驱动系统。以下图片展示了
    **TurtleBot 2** 机器人的底盘设计：
- en: '![](img/c92d9887-5210-4ed3-9e3d-12a3201ce345.png)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c92d9887-5210-4ed3-9e3d-12a3201ce345.png)'
- en: TurtleBot 2 robot (http://robots.ros.org/turtlebot/)
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: TurtleBot 2 机器人 (http://robots.ros.org/turtlebot/)
- en: We will design a robot similar to TurtleBot 2 with our own moving platform and
    components. Our design also has a three-layer architecture. Let's identify all
    the tools that we need before we start designing.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将设计一个类似于 TurtleBot 2 的机器人，拥有我们自己的移动平台和组件。我们的设计也有三层架构。在我们开始设计之前，让我们确定所有需要的工具。
- en: 'Before we start designing the robot chassis, we need **computer-aided design**
    (**CAD**) tools. The popular tools available for CAD are:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始设计机器人底盘之前，我们需要 **计算机辅助设计** (**CAD**) 工具。可用于 CAD 的流行工具有：
- en: SolidWorks ([http://www.solidworks.com/default.html](http://www.solidworks.com/default.html))
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SolidWorks ([http://www.solidworks.com/default.html](http://www.solidworks.com/default.html))
- en: AutoCAD ([http://www.autodesk.com/products/autocad/overview](http://www.autodesk.com/products/autocad/overview))
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AutoCAD ([http://www.autodesk.com/products/autocad/overview](http://www.autodesk.com/products/autocad/overview))
- en: Maya ([http://www.autodesk.com/products/maya/overview](http://www.autodesk.com/products/maya/overview))
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Maya ([http://www.autodesk.com/products/maya/overview](http://www.autodesk.com/products/maya/overview))
- en: Inventor ([http://www.autodesk.com/products/inventor/overview](http://www.autodesk.com/products/inventor/overview))
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Inventor ([http://www.autodesk.com/products/inventor/overview](http://www.autodesk.com/products/inventor/overview))
- en: SketchUp ([http://www.sketchup.com/](http://www.sketchup.com/))
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SketchUp ([http://www.sketchup.com/](http://www.sketchup.com/))
- en: Blender ([http://www.blender.org/download/](http://www.blender.org/download/))
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Blender ([http://www.blender.org/download/](http://www.blender.org/download/))
- en: LibreCAD ([http://librecad.org/cms/home.html](http://librecad.org/cms/home.html))
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: LibreCAD ([http://librecad.org/cms/home.html](http://librecad.org/cms/home.html))
- en: The chassis design can be designed in any software you are comfortable with.
    Here, we will demonstrate the 2D model in **LibreCAD** and 3D model in **Blender**.
    One of the highlights of these applications is that they are free and available
    for all OS platforms. We will use a 3D mesh viewing tool called **MeshLab** to
    view and check the 3D model design and use Ubuntu as the main operating system.
    Also, we can see the installation procedures of these applications in Ubuntu 16.04
    to start the designing process. We will provide tutorial links to install applications
    in other platforms too.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用您熟悉的任何软件进行底盘设计。在这里，我们将演示 **LibreCAD** 中的 2D 模型以及 **Blender** 中的 3D 模型。这些应用程序的一个亮点是它们是免费的，并且适用于所有操作系统平台。我们将使用一个名为
    **MeshLab** 的 3D 网格查看工具来查看和检查 3D 模型设计，并使用 Ubuntu 作为主要操作系统。此外，我们还可以在 Ubuntu 16.04
    中查看这些应用程序的安装程序，以开始设计过程。我们还将提供其他平台上的应用程序安装教程链接。
- en: Installing LibreCAD, Blender, and MeshLab
  id: totrans-71
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装 LibreCAD、Blender 和 MeshLab
- en: '**LibreCAD** is a free, open source 2D CAD application for Windows, OS X, and
    Linux. **Blender** is a free, open source 3D computer graphics software used to
    create 3D models, animation, and video games. It comes with a GPL license, allowing
    users to share, modify, and distribute the application. **MeshLab** is an open
    source, portable, and extensible system to process and edit unstructured 3D triangular
    meshes.'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '**LibreCAD** 是一个免费、开源的 2D CAD 应用程序，适用于 Windows、OS X 和 Linux。**Blender** 是一个免费、开源的
    3D 计算机图形软件，用于创建 3D 模型、动画和视频游戏。它附带 GPL 许可证，允许用户共享、修改和分发应用程序。**MeshLab** 是一个开源、便携和可扩展的系统，用于处理和编辑未结构化的
    3D 三角形网格。'
- en: 'The following are the links to install LibreCAD in Windows, Linux, and OS X:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 以下链接是安装 LibreCAD 在 Windows、Linux 和 OS X 中的链接：
- en: Visit [http://librecad.org/cms/home.html](http://librecad.org/cms/home.htmlhttp:/librecad.org/cms/home.html)
    to download LibreCAD
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 访问 [http://librecad.org/cms/home.html](http://librecad.org/cms/home.html) 下载
    LibreCAD
- en: Visit [http://librecad.org/cms/home/from-source/linux.html](http://librecad.org/cms/home/from-source/linux.html) [to
    build LibreCAD from source](http://librecad.org/cms/home/from-source/linux.html)
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 访问 [http://librecad.org/cms/home/from-source/linux.html](http://librecad.org/cms/home/from-source/linux.html)
    [从源代码构建 LibreCAD](http://librecad.org/cms/home/from-source/linux.html)
- en: Visit [http://librecad.org/cms/home/installation/linux.html](http://librecad.org/cms/home/installation/linux.html) to
    install LibreCAD in Debian/Ubuntu
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 访问 [http://librecad.org/cms/home/installation/linux.html](http://librecad.org/cms/home/installation/linux.html)
    以在 Debian/Ubuntu 中安装 LibreCAD
- en: Visit [http://librecad.org/cms/home/installation/rpm-packages.html](http://librecad.org/cms/home/installation/rpm-packages.html)
    to install LibreCAD in Fedora
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 访问 [http://librecad.org/cms/home/installation/rpm-packages.html](http://librecad.org/cms/home/installation/rpm-packages.html)
    以在 Fedora 中安装 LibreCAD
- en: Visit [http://librecad.org/cms/home/installation/osx.html](http://librecad.org/cms/home/installation/osx.html)
    to install LibreCAD in OS X
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 访问 [http://librecad.org/cms/home/installation/osx.html](http://librecad.org/cms/home/installation/osx.html)
    以在 OS X 中安装 LibreCAD
- en: Visit [http://librecad.org/cms/home/installation/windows.html](http://librecad.org/cms/home/installation/windows.html)
    to install LibreCAD in Windows
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 访问 [http://librecad.org/cms/home/installation/windows.html](http://librecad.org/cms/home/installation/windows.html)
    以在 Windows 中安装 LibreCAD
- en: 'You can find the documentation on LibreCAD at the following link:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在以下链接中找到有关 LibreCAD 的文档：
- en: '[http://wiki.librecad.org/index.php/Main_Page](http://wiki.librecad.org/index.php/Main_Page).'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://wiki.librecad.org/index.php/Main_Page](http://wiki.librecad.org/index.php/Main_Page)。'
- en: Installing LibreCAD
  id: totrans-82
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装 LibreCAD
- en: The installation procedure for all operating systems is provided. If you are
    an Ubuntu user, you can simply install it from the Ubuntu Software Center as well.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 提供了所有操作系统的安装程序。如果您是 Ubuntu 用户，您也可以直接从 Ubuntu 软件中心安装。
- en: 'Here are the commands to install LibreCAD if you are using Ubuntu:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您使用的是 Ubuntu，以下是在安装 LibreCAD 时使用的命令：
- en: '[PRE0]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Installing Blender
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装 Blender
- en: 'Visit the following download page to install Blender for your OS platform:
    [http://www.blender.org/download/](http://www.blender.org/download/).You can find
    the latest version of Blender here. Also, you can find the latest documentation
    on Blender at [http://wiki.blender.org/](http://wiki.blender.org/).'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 访问以下下载页面以安装适用于您的操作系统平台的 Blender：[http://www.blender.org/download/](http://www.blender.org/download/)。您在这里可以找到
    Blender 的最新版本。您还可以在 [http://wiki.blender.org/](http://wiki.blender.org/) 找到 Blender
    的最新文档。
- en: 'If you are using Ubuntu/Linux, you can simply install Blender via the Ubuntu
    Software Center or use following command:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您使用的是 Ubuntu/Linux，您可以直接通过 Ubuntu 软件中心安装 Blender，或者使用以下命令：
- en: '[PRE1]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Installing MeshLab
  id: totrans-90
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装 MeshLab
- en: '**MeshLab** is available for all OS platforms. The following link will provide
    you with the download links of prebuilt binaries and the source code of MeshLab: [http://meshlab.sourceforge.net/](http://meshlab.sourceforge.net/)'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '**MeshLab**适用于所有操作系统平台。以下链接将提供预构建二进制文件和MeshLab源代码的下载链接：[http://meshlab.sourceforge.net/](http://meshlab.sourceforge.net/)'
- en: 'If you are an Ubuntu user, you can install **MeshLab** from an apt package
    manager using the following command:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你是Ubuntu用户，你可以使用以下命令从apt包管理器安装**MeshLab**：
- en: '[PRE2]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Creating 2D CAD drawing of a robot using LibreCAD
  id: totrans-94
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用LibreCAD创建机器人的2D CAD图纸
- en: 'We will take a look at the basic interface of LibreCAD. The following screenshot
    shows the interface of LibreCAD:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将查看LibreCAD的基本界面。以下截图显示了LibreCAD的界面：
- en: '![](img/4cdc331b-5c04-46eb-b1b3-d6f38612a98e.png)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/4cdc331b-5c04-46eb-b1b3-d6f38612a98e.png)'
- en: LibreCAD tool
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: LibreCAD工具
- en: 'A CAD toolbar has the necessary components to draw a model. The following diagram
    shows the detailed overview of the CAD toolbar:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: CAD工具栏包含绘制模型所需的组件。以下图表显示了CAD工具栏的详细概述：
- en: '![](img/15792b40-facc-47f1-98e6-f8c093d7bd1d.png)[http://wiki.librecad.org/](http://wiki.librecad.org/)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/15792b40-facc-47f1-98e6-f8c093d7bd1d.png)[http://wiki.librecad.org/](http://wiki.librecad.org/)'
- en: 'A detailed description of LibreCAD tools is available at the following link:
    [http://wiki.librecad.org/index.php/LibreCAD_users_Manual](http://wiki.librecad.org/index.php/LibreCAD_users_Manual)'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下链接中可以找到LibreCAD工具的详细描述：[http://wiki.librecad.org/index.php/LibreCAD_users_Manual](http://wiki.librecad.org/index.php/LibreCAD_users_Manual)
- en: 'Here is a short explanation of each tool:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是每个工具的简要说明：
- en: '**Command Box**: This is used to draw figures by only using commands. We can
    draw diagrams without touching any toolbar. A detail explanation about the usage
    of the Command Box can be found at:'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**命令框**：这是通过仅使用命令来绘制图形的工具。我们可以不触碰任何工具栏来绘制图表。关于命令框的使用说明可以在以下链接中找到：'
- en: '**Layer List**: This will have layers used in the current drawing. A basic
    concept in computer-aided drafting is the use of layers to organize a drawing.
    A detailed explanation of layers can be found at: [http://wiki.librecad.org/index.php/Layers](http://wiki.librecad.org/index.php/Layers).'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**图层列表**：这将包含当前绘图使用的图层。计算机辅助绘图中的一个基本概念是使用图层来组织绘图。关于图层的详细解释可以在以下链接中找到：[http://wiki.librecad.org/index.php/Layers](http://wiki.librecad.org/index.php/Layers).'
- en: '**Blocks**: This is a group of entities and can be inserted in the same drawing
    more than once with different attributes at different locations, different scales,
    and rotation angles. A detailed explanation of Blocks can be found at the following
    link: [http://wiki.librecad.org/index.php/Blocks](http://wiki.librecad.org/index.php/Blocks).'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**块**：这是一个实体组，可以在同一张图纸中多次插入，具有不同的属性、位置、比例和旋转角度。关于块的详细解释可以在以下链接中找到：[http://wiki.librecad.org/index.php/Blocks](http://wiki.librecad.org/index.php/Blocks).'
- en: '**Absolute Zero**: This is the origin of the drawing (0,0).'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**绝对零点**：这是绘图的起点（0,0）。'
- en: 'Now, start sketching by setting the unit of drawing. Set the drawing unit to
    centimeters. Open LibreCAD, and navigate to Edit | Application Preference. Set
    Unit as Centimeter, as shown in the following screenshot:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，通过设置绘图单位开始草图绘制。将绘图单位设置为厘米。打开LibreCAD，导航到编辑 | 应用程序首选项。将单位设置为厘米，如图所示：
- en: '![](img/32e23b0b-cfe8-468f-968e-02726e89e1c1.png)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/32e23b0b-cfe8-468f-968e-02726e89e1c1.png)'
- en: Let's start with the base plate design of the robot. The base plate has provisions
    to connect motors, place a battery, and a control board.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从机器人的底板设计开始。底板有连接电机、放置电池和控制板的空间。
- en: The base plate designs
  id: totrans-109
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 底板设计
- en: 'The following diagram shows the robot''s base plate. This plate provides provisions
    for two motors for the differential drive and each caster wheel on the front and
    back of the base plate. Motors are mentioned as **M1** and **M2** in the diagram
    and caster wheels are represented as **C1** and **C2**. It also holds four poles
    to connect to the next plates. Poles are represented as **P1-1**, **P1-2**, **P1-3**,
    and **P1-4**. The screws are indicated as **S** and we will use the same screws
    here. There is a hole at the center to bring the wires from the motor to the top
    of the plate. The plate is cut on the left-hand side and the right-hand side so
    that the wheels can be attached to the motor. The distance from the center to
    the caster wheels is mentioned as **12.5** cm and the distance from the center
    to motors is mentioned as **5.5** cm. The center of poles is at **9** cm in length
    and **9** cm in height from the center. The holes of all the plates follow the
    same dimensions:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图显示了机器人的基板。该板为差速驱动的两个电机以及基板前后每个万向轮提供了安装位置。图中将电机标记为 **M1** 和 **M2**，万向轮表示为
    **C1** 和 **C2**。它还持有四个极以连接到下一板。极表示为 **P1-1**、**P1-2**、**P1-3** 和 **P1-4**。螺钉表示为
    **S**，我们在这里将使用相同的螺钉。中心有一个孔，用于将电机线引到板的顶部。板在左侧和右侧切割，以便将轮子安装到电机上。从中心到万向轮的距离为 **12.5**
    cm，从中心到电机的距离为 **5.5** cm。极的中心长度为 **9** cm，高度为 **9** cm。所有板的孔都遵循相同的尺寸：
- en: '![](img/910fe464-2213-46b3-a2a7-671da42cb1f6.png)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
  zh: '![](img/910fe464-2213-46b3-a2a7-671da42cb1f6.png)'
- en: Design of base plate
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 基板设计
- en: 'The dimensions are not marked in the diagram; instead, they are listed in the
    following table:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 图中未标注尺寸；相反，它们列在下面的表格中：
- en: '| **Parts** | **Dimension(cm) (Length x Height) ( radius)** |'
  id: totrans-114
  prefs: []
  type: TYPE_TB
  zh: '| **部件** | **尺寸(cm) (长度 x 高度) (半径)** |'
- en: '| **M1** and **M2** | 5 x 4 |'
  id: totrans-115
  prefs: []
  type: TYPE_TB
  zh: '| **M1** 和 **M2** | 5 x 4 |'
- en: '| **C1** and **C2** | Radius = 1.5 |'
  id: totrans-116
  prefs: []
  type: TYPE_TB
  zh: '| **C1** 和 **C2** | 半径 = 1.5 |'
- en: '| **S** (Screw) (not shown in diagram) | 0.15 |'
  id: totrans-117
  prefs: []
  type: TYPE_TB
  zh: '| **S** (螺钉) (图中未显示) | 0.15 |'
- en: '| **P1-1**,**P1-2**,**P1-3**,**P1-4** | Outer radius 0.7, Height 3.5cm |'
  id: totrans-118
  prefs: []
  type: TYPE_TB
  zh: '| **P1-1**、**P1-2**、**P1-3**、**P1-4** | 外半径 0.7，高度 3.5cm |'
- en: '| Left and right wheel sections | 2.5 x 10 |'
  id: totrans-119
  prefs: []
  type: TYPE_TB
  zh: '| 左右轮段 | 2.5 x 10 |'
- en: '| Base plate | Radius = 15 |'
  id: totrans-120
  prefs: []
  type: TYPE_TB
  zh: '| 基板 | 半径 = 15 |'
- en: We will discuss the motor dimensions and clamp dimensions in more detail later.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在稍后更详细地讨论电机尺寸和夹具尺寸。
- en: Base plate pole design
  id: totrans-122
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基板极设计
- en: 'The base plate has four poles to extend to the next layer. The poles are **3.5**
    cm in length with a radius of **0.7** cm. We can extend to the next plate by attaching
    hollow tubes to the poles. At the top of the hollow tube, we will insert a hard
    plastic to make a screw hole. This hole will be useful for extending to the top
    layer. The base plate pole and hollow tubes on each pole are shown in the following
    diagram. The hollow tube has a radius of **0.75** cm and length of **15** cm:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 基板有四个极以扩展到下一层。极长为 **3.5** cm，半径为 **0.7** cm。我们可以通过将空心管附着在极上扩展到下一板。在空心管顶部，我们将插入一块硬塑料以形成螺钉孔。这个孔将用于扩展到顶层。以下图中显示了基板极和每个极上的空心管。空心管的半径为
    **0.75** cm，长度为 **15** cm：
- en: '![](img/78ca83f3-10db-4e9e-9750-51da05d5e477.png)'
  id: totrans-124
  prefs: []
  type: TYPE_IMG
  zh: '![](img/78ca83f3-10db-4e9e-9750-51da05d5e477.png)'
- en: Design of hollow tube 15 cm
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 15 cm 空心管设计
- en: Wheel, motor, and motor clamp design
  id: totrans-126
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 轮子、电机和电机夹具设计
- en: 'We have to decide the diameter of the wheel and compute motor requirements.
    Here, we are giving a typical motor and wheel that we can use if the design is
    successful:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 我们必须决定轮子的直径并计算电机需求。在这里，我们提供了一个典型的电机和轮子，如果设计成功，我们可以使用它们：
- en: '![](img/1afa7fb9-bdb0-4923-b804-ccffc987a3c9.png)'
  id: totrans-128
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1afa7fb9-bdb0-4923-b804-ccffc987a3c9.png)'
- en: Motor design of robot
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 机器人电机设计
- en: The motor design can vary according to the motor selection; if necessary, this
    motor can be taken as the design and can change after simulation. The **L **value
    in the motor diagram can vary according to the speed and torque of the motors.
    This is the gear assembly of the motor.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 电机设计可以根据电机选择而变化；如果需要，可以将此电机作为设计并可在仿真后进行更改。电机图中的 **L** 值可以根据电机的速度和扭矩而变化。这是电机的齿轮组件。
- en: 'The following diagram shows a typical wheel that we can use with a diameter
    of **90** cm. The wheel with a diameter of **86.5** mm will become **90** mm after
    placing the grip:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图显示了一个直径为 **90** cm 的典型轮子。放置夹具后，直径为 **86.5** mm 的轮子将变为 **90** mm。
- en: '![](img/c19a13cb-861e-4147-a323-2ad6f47dd814.png)'
  id: totrans-132
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c19a13cb-861e-4147-a323-2ad6f47dd814.png)'
- en: Wheel design of robot
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 机器人轮子设计
- en: 'The motors need to be mounted on the base plate. To mount, we need a clamp
    that can be screwed onto the plate and also connect the motor to the clamp. The
    following diagram shows a typical clamp that we can use for this purpose. It''s
    an L-shaped clamp with which we can mount the motor on one side and fit another
    side to the plate:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 电机需要安装在底板上。为了安装，我们需要一个可以拧到板上的夹具，并且将电机连接到夹具上。以下图显示了用于此目的的典型夹具。它是一个L形夹具，我们可以用它在一侧安装电机，并将另一侧固定到板上：
- en: '![](img/9217af88-b741-448a-a614-00a0a0d0d1ae.png)'
  id: totrans-135
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/9217af88-b741-448a-a614-00a0a0d0d1ae.png)'
- en: Typical clamp design of robot
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 机器人典型夹具设计
- en: Caster wheel design
  id: totrans-137
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 轮子设计
- en: Caster wheels need not have a special design; we can use any caster wheel that
    can touch the ground similar to the wheels. The following link has a collection
    of caster wheels that we can use for this design: [http://www.pololu.com/category/45/pololu-ball-casters](http://www.pololu.com/category/45/pololu-ball-casters).[](http://www.pololu.com/category/45/pololu-ball-casters)
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 轮子不需要特殊设计；我们可以使用任何可以接触地面的轮子，类似于轮子。以下链接有一个我们可以用于此设计的轮子集合：[http://www.pololu.com/category/45/pololu-ball-casters](http://www.pololu.com/category/45/pololu-ball-casters)。[http://www.pololu.com/category/45/pololu-ball-casters](http://www.pololu.com/category/45/pololu-ball-casters)
- en: Middle plate design
  id: totrans-139
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 中间板设计
- en: 'The dimension of this plate is same as the base plate and the screw size is
    also similar:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 这个板的尺寸与底板相同，螺丝尺寸也类似：
- en: '![](img/286755cb-0148-45d9-a978-8092c6850b00.png)'
  id: totrans-141
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/286755cb-0148-45d9-a978-8092c6850b00.png)'
- en: Design of middle plate of robot
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 机器人中间板设计
- en: 'The middle plate can be held above the hollow tubes from the base plate. This
    arrangement is connected using another hollow tube that extends from the middle
    plate. The tube from the middle plate will have a screw at the bottom to fix the
    tube from the base plate and the middle plate and a hollow end to connect the
    top plate. The top and side view of the tube extending from the middle plate is
    shown in the following diagram:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 中间板可以从底板上方支撑空心管。这种布局使用另一根从中间板延伸出来的空心管连接。从中间板延伸出来的管子底部会有一个螺丝来固定底板和中间板上的管子，并且有一个空心端来连接顶板。中间板延伸出来的管子的俯视图和侧视图如下所示：
- en: '![](img/ad0087ef-9ad1-4645-be2f-8591b1d6b0ca.png)'
  id: totrans-144
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/ad0087ef-9ad1-4645-be2f-8591b1d6b0ca.png)'
- en: Design of hollow tube 20 cm
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 20厘米空心管设计
- en: This tube will connect the middle plate to the base plate and at the same time
    provide a connect the top plate.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 这根管子将连接中间板和底板，同时提供连接顶板的功能。
- en: Top plate design
  id: totrans-147
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 顶板设计
- en: 'The top plate is similar to the other plates; it has four small poles of 3
    cm, similar to the base plate. The poles can be placed on the hollow tubes from
    the middle plate. The four poles are connected to the plate itself:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 顶板与其他板类似；它有四个3厘米的小柱子，类似于底板。柱子可以放置在中间板上的空心管上。四个柱子连接到板本身：
- en: '![](img/c4c20270-1e8f-4660-b8ee-d11a193ccd4b.png)'
  id: totrans-149
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/c4c20270-1e8f-4660-b8ee-d11a193ccd4b.png)'
- en: Design of top plate
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 顶板设计
- en: After the top plate design, the robot chassis design is almost finished. Let's
    look at the 3D model building of this robot using Blender. The 3D model is built
    for simulation purposes and the 2D design we build is mainly for manufacturing
    purposes.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 在完成顶板设计后，机器人的底盘设计几乎完成。让我们看看使用Blender构建这个机器人的3D模型。3D模型是用于模拟目的的，我们构建的2D设计主要是用于制造目的。
- en: Working with a 3D model of the robot using Blender
  id: totrans-152
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Blender处理机器人的3D模型
- en: In this section, we will design the 3D model of the robot. The 3D model is mainly
    used for simulation purposes. The modeling will be done using Blender. The version
    must be greater than 2.6 because we only tested the tutorials on these versions.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将设计机器人的3D模型。3D模型主要用于模拟目的。建模将使用Blender完成。版本必须大于2.6，因为我们只测试了这些版本的教程。
- en: 'The following screenshot shows the Blender workspace and tools that can be
    used to work with 3D models:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的截图显示了Blender工作空间和可用于与3D模型一起使用的工具：
- en: '![](img/e0365757-7ac5-49e6-a1ed-cfc6b7d7757d.png)'
  id: totrans-155
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/e0365757-7ac5-49e6-a1ed-cfc6b7d7757d.png)'
- en: Blender 3D CAD tools
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: Blender 3D CAD工具
- en: 'The main reason why we are using Blender here is that we can model the robot
    using Python scripts. Blender has an inbuilt Python interpreter and a Python script
    editor for coding purposes. We will not discuss the user interface of Blender
    here. You can find a good tutorial of Blender on its website. Refer to the following
    link to learn about Blender''s user interface: [http://www.blender.org/support/tutorials/](http://www.blender.org/support/tutorials/).
    [](http://www.blender.org/support/tutorials/)'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在这里使用 Blender 的主要原因是我们可以使用 Python 脚本来建模机器人。Blender 内置了 Python 解释器和 Python
    脚本编辑器，用于编写代码。我们在这里不会讨论 Blender 的用户界面。您可以在 Blender 的网站上找到很好的教程。有关 Blender 用户界面的信息，请参阅以下链接：[http://www.blender.org/support/tutorials/](http://www.blender.org/support/tutorials/)。
- en: Let's start coding in Blender using Python.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始使用 Python 在 Blender 中编写代码。
- en: Python scripting in Blender
  id: totrans-159
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Blender 中的 Python 脚本编写
- en: '**Blender** is mainly written in C, C++, and Python. Users can write their
    own Python script and access all the functionalities of Blender. If you are an
    expert in Blender Python APIs, you can model the entire robot using a Python script
    instead of manual modeling.'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: '**Blender** 主要用 C、C++ 和 Python 编写。用户可以编写自己的 Python 脚本并访问 Blender 的所有功能。如果您是
    Blender Python API 的专家，可以使用 Python 脚本而不是手动建模来构建整个机器人模型。'
- en: Blender uses Python 3.x. Blender. The Python APIs are generally stable, but
    some areas are still added and improved. Refer to [http://www.blender.org/documentation/blender_python_api_2_69_7/](http://www.blender.org/documentation/blender_python_api_2_69_7/)
    for the documentation on the Blender Python APIs.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: Blender 使用 Python 3.x。Blender 的 Python API 通常很稳定，但某些区域仍在添加和改进。有关 Blender Python
    API 的文档，请参阅 [http://www.blender.org/documentation/blender_python_api_2_69_7/](http://www.blender.org/documentation/blender_python_api_2_69_7/)。
- en: Let's give a quick overview of the Blender Python APIs that we will use in our
    robot model script.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们对将在我们的机器人模型脚本中使用的 Blender Python API 进行简要概述。
- en: Introduction to Blender Python APIs
  id: totrans-163
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Blender Python API 简介
- en: 'Python APIs in Blender can do most of the functionalities of Blender. The main
    jobs that can be done by the APIs are as follows:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: Blender 中的 Python API 可以完成 Blender 大多数功能。API 可以完成的主要工作如下：
- en: Edit any data inside Blender, such as scenes, meshes, particles, and so on
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编辑 Blender 内部的任何数据，例如场景、网格、粒子等。
- en: Modify user preferences, key maps, and themes
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 修改用户首选项、快捷键映射和主题
- en: Create new Blender tools
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建新的 Blender 工具
- en: Draw the 3D view using OpenGL commands from Python
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Python 的 OpenGL 命令绘制 3D 视图。
- en: 'Blender provides the **bpy** module to the Python interpreter. This module
    can be imported in a script and gives access to Blender data, classes, and functions;
    scripts that deal with Blender data will need to import this module. The main
    Python modules we will use in bpy are:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: Blender 向 Python 解释器提供了 **bpy** 模块。此模块可以在脚本中导入，并提供对 Blender 数据、类和函数的访问；处理 Blender
    数据的脚本将需要导入此模块。我们在 bpy 中将使用的主要 Python 模块如下：
- en: '**Context access**: This provides access to Blender user interface functions
    from the (`bpy.context`) script'
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**上下文访问**: 这提供了从 (`bpy.context`) 脚本访问 Blender 用户界面函数的权限。'
- en: '**Data access**: This provides access to the Blender internal data (`bpy.data`)'
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据访问**: 这提供了对 Blender 内部数据（`bpy.data`）的访问。'
- en: '**Operators**: This provides Python access to calling operators, which includes
    operators written in C, Python, or Macros (`bpy.ops`)'
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**运算符**: 这为 Python 提供了调用运算符的访问权限，包括用 C、Python 或宏（`bpy.ops`）编写的运算符。'
- en: 'For switching to scripting in Blender, we need to change the screen layout
    of Blender. The following screenshot shows the option that helps you to switch
    to the Scripting layout:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 要在 Blender 中切换到脚本编写，我们需要更改 Blender 的屏幕布局。以下截图显示了帮助您切换到脚本布局的选项：
- en: '![](img/bacef5a3-2e89-4c8d-9328-593898a5fcce.png)'
  id: totrans-174
  prefs: []
  type: TYPE_IMG
  zh: '![](img/bacef5a3-2e89-4c8d-9328-593898a5fcce.png)'
- en: Blender Scripting option
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: Blender 脚本选项
- en: After selecting the Scripting tab, we can see a text editor and Python console
    window in Blender. In the text editor, we can code using Blender APIs and also
    try Python commands via the Python console. Click on the New button to create
    a new Python script and name it `robot.py`. Now, we can design the 3D model of
    the robot using only Python scripts. The upcoming section has the complete script
    to design our robot model. We can discuss the code before running it. Hopefully,
    you have read the Python APIs of Blender from their site. The code in the upcoming
    section is split into six Python functions to draw three robot plates, draw motors
    and wheels, draw four support tubes, and export into the **STereoLithography**
    (**STL**) 3D file format for simulation.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 在选择脚本选项卡后，我们可以在Blender中看到文本编辑器和Python控制台窗口。在文本编辑器中，我们可以使用Blender API进行编码，并通过Python控制台尝试Python命令。单击新建按钮创建一个新的Python脚本，并将其命名为`robot.py`。现在，我们只能使用Python脚本设计机器人的3D模型。下一节将提供设计机器人模型的完整脚本。在运行之前，我们可以讨论代码。希望你已经从他们的网站上阅读了Blender的Python
    API。下一节中的代码分为六个Python函数，用于绘制三个机器人基板、绘制电机和轮子、绘制四个支撑管，并将它们导出为**STereoLithography**（**STL**）3D文件格式进行模拟：
- en: Python script of the robot model
  id: totrans-177
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 机器人模型的Python脚本
- en: 'The following is the Python script of the robot model that we will design:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是我们将要设计的机器人模型的Python脚本：
- en: 'Before starting the Python script in Blender, we must import the `bpy` module.
    The `bpy` module contains all the functionalities of Blender and it can only be
    accessed from inside the Blender application:'
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Blender中开始Python脚本之前，我们必须导入`bpy`模块。`bpy`模块包含Blender的所有功能，并且只能从Blender应用程序内部访问：
- en: '[PRE3]'
  id: totrans-180
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The following function will draw the base plate of the robot. This function
    will draw a cylinder with a radius of 5 cm and cut a portion from the opposite
    sides so that motors can be connected using the `Boolean` modifier inside Blender:'
  id: totrans-181
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下函数将绘制机器人的基板。此函数将绘制一个半径为5厘米的圆柱体，并在对面两侧切割一部分，以便可以使用Blender内的`布尔修改器`连接电机：
- en: '[PRE4]'
  id: totrans-182
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The following two commands will create two cubes with a radius of 0.05 meters
    on either side of the base plate. The purpose of these cubes is to create a modifier
    that subtracts the cubes from the base plate. So in effect, we will get a base
    plate with two cuts. After cutting the two sides, we will delete the cubes:'
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下两个命令将在基板的两侧创建两个半径为0.05米的立方体。这些立方体的目的是创建一个修改器，从基板中减去立方体。因此，实际上我们将得到一个有两个切割的基板。在切割两侧后，我们将删除立方体：
- en: '[PRE5]'
  id: totrans-184
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The following function will draw motors and wheels attached to the base plate:'
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下函数将绘制连接到基板的电机和轮子：
- en: '[PRE6]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The following commands will draw a cylinder with a radius of 0.045 and 0.01
    meters in depth for the wheels. After creating the wheels, it will be rotated
    and translated into the cut portion of the base plate:'
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下命令将绘制一个半径为0.045米、深度为0.01米的圆柱体作为轮子。创建轮子后，它将被旋转并平移到基板的切割部分：
- en: '[PRE7]'
  id: totrans-188
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'The following code will add two dummy motors to the base plate. The dimensions
    of the motors are mentioned in the 2D design. The motor is basically a cylinder
    and it will be rotated and placed in the base plate:'
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下代码将在基板上添加两个虚拟电机。电机的尺寸已在2D设计中说明。电机基本上是一个圆柱体，它将被旋转并放置在基板上：
- en: '[PRE8]'
  id: totrans-190
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'The following code will add a shaft to the motors, similar to the motor model.
    The shaft is also a cylinder and it will be rotated and inserted into the motor
    model:'
  id: totrans-191
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下代码将为电机添加一个轴，类似于电机模型。轴也是一个圆柱体，它将被旋转并插入到电机模型中：
- en: '[PRE9]'
  id: totrans-192
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The following code will add two caster wheels on the base plate. Currently,
    we are adding a cylinder as a wheel. In the simulation, we can assign it as a
    wheel:'
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下代码将在基板上添加两个万向轮。目前，我们正在添加一个圆柱体作为轮子。在模拟中，我们可以将其指定为轮子：
- en: '[PRE10]'
  id: totrans-194
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'The following code will add a dummy Kinect sensor:'
  id: totrans-195
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下代码将添加一个虚拟的Kinect传感器：
- en: '[PRE11]'
  id: totrans-196
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'This function will draw the middle plate of the robot:'
  id: totrans-197
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此函数将绘制机器人的中间板：
- en: '[PRE12]'
  id: totrans-198
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'This function will draw all the four supporting hollow tubes for all the three
    plates:'
  id: totrans-199
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此函数将绘制所有三个基板的所有四个支撑空心管：
- en: '[PRE13]'
  id: totrans-200
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'This function will export the designed robot to STL. We have to change the
    STL filepath before executing the script:'
  id: totrans-201
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此函数将设计的机器人导出为STL格式。在执行脚本之前，我们必须更改STL文件路径：
- en: '[PRE14]'
  id: totrans-202
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'After entering the code in the text editor, execute the script by pressing
    the Run Script button, as shown in the following screenshot. The output 3D model
    will be shown on the 3D view of Blender. Also, if we check the desktop, we can
    see the `exported.stl` file for the simulation purpose:'
  id: totrans-203
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在文本编辑器中输入代码后，通过按下如下截图所示的“运行脚本”按钮来执行脚本。输出 3D 模型将在 Blender 的 3D 视图中显示。此外，如果我们检查桌面，我们可以看到用于模拟的
    `exported.stl` 文件：
- en: '![](img/45f6226a-3e5c-4a58-b153-9603b79dcdc6.png)'
  id: totrans-204
  prefs: []
  type: TYPE_IMG
  zh: '![](img/45f6226a-3e5c-4a58-b153-9603b79dcdc6.png)'
- en: Running Python script in Blender
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Blender 中运行 Python 脚本
- en: 'The `exported.stl` file can be opened with MeshLab and the following is a screenshot
    of MeshLab:'
  id: totrans-206
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`exported.stl` 文件可以用 MeshLab 打开，以下是一个 MeshLab 的截图：'
- en: '![](img/82c5e5d2-5009-4be1-8acf-8786fc2403d7.png)'
  id: totrans-207
  prefs: []
  type: TYPE_IMG
  zh: '![](img/82c5e5d2-5009-4be1-8acf-8786fc2403d7.png)'
- en: 3D model of Chefbot in MeshLab
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: Chefbot 在 MeshLab 中的 3D 模型
- en: Creating a URDF model of the robot
  id: totrans-209
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建机器人的 URDF 模型
- en: The **robot model** in ROS contains packages to model the various aspects of
    the robot, which is specified in the XML Robot Description Format. The core package
    of this stack is URDF, which parses URDF files and constructs an object model
    of the robot.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: ROS 中的 **机器人模型** 包含用于建模机器人各个方面的软件包，这些方面在 XML 机器人描述格式中指定。此堆栈的核心软件包是 URDF，它解析
    URDF 文件并构建机器人的对象模型。
- en: '**Unified Robot Description Format** (**URDF**) is an XML specification to
    describe the model of a robot. We can represent the following features of the
    robot using URDF:'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: '**统一机器人描述格式** (**URDF**) 是一个 XML 规范，用于描述机器人的模型。我们可以使用 URDF 表示机器人的以下特征：'
- en: The kinematic and dynamic description of the robot
  id: totrans-212
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 机器人的运动学和动力学描述
- en: The visual representation of the robot
  id: totrans-213
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 机器人的视觉表示
- en: The collision model of the robot
  id: totrans-214
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 机器人的碰撞模型
- en: 'The description of the robot consists of a set of **links** (parts), elements,
    and a set of **joint** elements, which connect these links together. A typical
    robot description is shown in the following code:'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 机器人的描述由一组 **连杆**（部分）、元素和一组 **关节** 元素组成，这些元素将这些连杆连接在一起。以下代码显示了典型的机器人描述：
- en: '[PRE15]'
  id: totrans-216
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'It would be good if you refer to the following links for more information on
    URDF:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想了解更多关于 URDF 的信息，请参考以下链接：
- en: '[http://wiki.ros.org/urdf](http://wiki.ros.org/urdf) [http://wiki.ros.org/urdf/Tutorials](http://wiki.ros.org/urdf/Tutorials)'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://wiki.ros.org/urdf](http://wiki.ros.org/urdf) [http://wiki.ros.org/urdf/Tutorials](http://wiki.ros.org/urdf/Tutorials)'
- en: '**Xacro** (XML Macros) is an XML macro language. With xacro, we can create
    shorter and more readable XML files. We can use xacro along with URDF to simplify
    the URDF file. If we add xacro to URDF, we have to call the additional parser
    program to convert xacro to URDF.'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: '**Xacro**（XML 宏）是一种 XML 宏语言。使用 xacro，我们可以创建更短、更易读的 XML 文件。我们可以将 xacro 与 URDF
    结合使用，以简化 URDF 文件。如果我们向 URDF 添加 xacro，我们必须调用额外的解析程序来将 xacro 转换为 URDF。'
- en: 'The following link will give you further details about xacro:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 以下链接将提供有关 xacro 的更多详细信息：
- en: '[http://wiki.ros.org/xacro](http://wiki.ros.org/xacro)'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://wiki.ros.org/xacro](http://wiki.ros.org/xacro)'
- en: '**robot_state_publisher** allows you to publish the state of the robot to **tf**
    ([http://wiki.ros.org/tf](http://wiki.ros.org/tf)). This node read the URDF parameter
    called **robot_description** and reads the joint angles of the robot from a topic
    called **joint_states** as input and publishes the 3D poses of the robot links
    using the kinematic tree model of the robot. The package can be used as a library
    and as an ROS node. This package has been well tested and the code is stable.'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: '**robot_state_publisher** 允许您将机器人的状态发布到 **tf** ([http://wiki.ros.org/tf](http://wiki.ros.org/tf)).
    此节点读取名为 **robot_description** 的 URDF 参数，并从名为 **joint_states** 的主题中读取机器人的关节角度作为输入，然后使用机器人的运动学树模型发布机器人连杆的
    3D 位姿。该软件包可以用作库和 ROS 节点。该软件包经过良好测试，代码稳定。'
- en: '**World files**: These represent the environment of Gazebo, which has to be
    loaded along with the robot model. *empty.world* and *playground.world* are some
    examples of Gazebo world files. *empty.world* contains just an empty space. In
    *playground.world*, there will be some static objects in the environment. We can
    create our own `*.world` file using Gazebo. We will cover Gazebo world files further
    in the next chapter.'
  id: totrans-223
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**世界文件**：这些代表 Gazebo 的环境，必须与机器人模型一起加载。*empty.world* 和 *playground.world* 是一些
    Gazebo 世界文件的例子。*empty.world* 只包含一个空的空间。在 *playground.world* 中，环境中将有一些静态物体。我们可以使用
    Gazebo 创建自己的 `*.world` 文件。我们将在下一章中进一步介绍 Gazebo 世界文件。'
- en: '**CMakeList.txt and package.xml**: These files are created during the creation
    of the package. The `CmakeList.txt` file helps to build the ROS C++ nodes or libraries
    within a package and the `package.xml` file holds the list of all the dependencies
    of this package.'
  id: totrans-224
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**CMakeList.txt 和 package.xml**：这些文件是在创建包的过程中创建的。`CMakeList.txt` 文件有助于在包内构建
    ROS C++ 节点或库，而 `package.xml` 文件包含此包的所有依赖项列表。'
- en: Creating a Chefbot description ROS package
  id: totrans-225
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建 Chefbot 描述 ROS 包
- en: The `chefbot_description` package contains the URDF model of our robot. Before
    creating this package by yourself, you can go through the downloaded packages
    of Chefbot from `chapter3_codes`. It will help you to speed up the process.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: '`chefbot_description` 包包含我们机器人的 URDF 模型。在您自己创建此包之前，您可以查看从 `chapter3_codes`
    下载的 Chefbot 的已下载包。这将帮助您加快处理速度。'
- en: 'Let''s check how to create the `chefbot_description` package. The following
    procedure will guide you in creating this package:'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看如何创建 `chefbot_description` 包。以下步骤将指导您创建此包：
- en: 'First, we need to switch to the `chefbot` folder in the `src` folder:'
  id: totrans-228
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们需要切换到 `src` 文件夹中的 `chefbot` 文件夹：
- en: '[PRE16]'
  id: totrans-229
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'The following command will create the robot description package along with
    dependencies, such as `urdf` and `xacro`. This will create the `chefbot_description`
    package in the `catkin_ws/src` folder:'
  id: totrans-230
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下命令将创建包含依赖项的机器人描述包，例如 `urdf` 和 `xacro`。这将创建 `catkin_ws/src` 文件夹中的 `chefbot_description`
    包：
- en: '[PRE17]'
  id: totrans-231
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Copy all the folders from the downloaded `chefbot_description` package to the
    new package folder. The `meshes` folder holds the 3D parts of the robot and the
    `urdf` folder contains the URDF files that have the kinematics and dynamics model
    of the robot. The robot model is split into several xacro files, which enables
    easier debugging and better readability.
  id: totrans-232
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将下载的 `chefbot_description` 包中的所有文件夹复制到新的包文件夹中。`meshes` 文件夹包含机器人的 3D 部分，而 `urdf`
    文件夹包含具有机器人运动学和动力学模型的 URDF 文件。机器人模型被拆分为几个 xacro 文件，这使得调试更容易，可读性更好。
- en: 'Let''s look at the functionality of each file inside this package. You can
    check each of the files inside `chefbot_description`. The following diagram shows
    the files inside this package:'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看这个包内部每个文件的功能。您可以检查 `chefbot_description` 内部的每个文件。以下图表显示了此包内部的文件：
- en: '![](img/902c33d6-de00-4fcc-a863-6c56f9a3e31c.png)*Chefbot description package*'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: '![](img/902c33d6-de00-4fcc-a863-6c56f9a3e31c.png)*Chefbot 描述包*'
- en: 'The functionalities of each file in the package are as follows:'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 包中每个文件的功能如下：
- en: '`urdf/chefbot.xacro`: This is the main xacro file that has kinematic and dynamic
    parameters of the robot.'
  id: totrans-236
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`urdf/chefbot.xacro`：这是包含机器人运动学和动力学参数的主要 xacro 文件。'
- en: '`urdf/common_properties.xacro`: This xacro file consists of some properties
    and its values used inside the robot model. For example, different color definitions
    of robot links and some constants.'
  id: totrans-237
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`urdf/common_properties.xacro`：此 xacro 文件包含在机器人模型内部使用的某些属性及其值。例如，机器人连杆的不同颜色定义和一些常数。'
- en: '`gazebo/chefbot.gazebo.xacro`: This file consists of simulation parameters
    of the robot. It mainly has Gazebo parameters and plugins for performing simulations.
    These parameters will only be active when we start the simulation using this model.'
  id: totrans-238
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`gazebo/chefbot.gazebo.xacro`：此文件包含机器人的仿真参数。它主要包含 Gazebo 参数和用于执行仿真的插件。这些参数只有在使用此模型启动仿真时才会生效。'
- en: '`launch/upload_model.launch`: This launch file has a node that basically parses
    the robot xacro file and uploads the parsed data to a ROS parameter called `robot_description`.
    The `robot_description` parameter is then used in Rviz for visualization and used
    in Gazebo for simulation. If our xacro model is wrong, then this launch file will
    throw an error.'
  id: totrans-239
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`launch/upload_model.launch`：此启动文件有一个节点，它基本上解析机器人 xacro 文件并将解析的数据上传到名为 `robot_description`
    的 ROS 参数。然后，`robot_description` 参数用于 Rviz 的可视化并在 Gazebo 中用于仿真。如果我们的 xacro 模型有误，则此启动文件将引发错误。'
- en: '`launch/view_model.launch`: This launch file will upload the robot URDF model
    and view the model in Rviz.'
  id: totrans-240
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`launch/view_model.launch`：此启动文件将上传机器人 URDF 模型并在 Rviz 中查看模型。'
- en: '`launch/view_navigation.launch`: The will show the URDF model and navigation-related
    display types in Rviz.'
  id: totrans-241
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`launch/view_navigation.launch`：此文件将在 Rviz 中显示 URDF 模型和与导航相关的显示类型。'
- en: '`launch/view_robot_gazebo.launch`: This will launch the URDF model in Gazebo
    and start all Gazebo plugins.'
  id: totrans-242
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`launch/view_robot_gazebo.launch`：这将启动 Gazebo 中的 URDF 模型并启动所有 Gazebo 插件。'
- en: '`meshes/`: This folder contains the necessary meshes for the robot model.'
  id: totrans-243
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`meshes/`：此文件夹包含机器人模型所需的网格。'
- en: You can build the workspace using the *catkin_make* command.
  id: totrans-244
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您可以使用 *catkin_make* 命令构建工作空间。
- en: 'After building the packages, we can launch the Chefbot model in Rviz using
    the following command:'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 在构建完包之后，我们可以使用以下命令在Rviz中启动Chefbot模型：
- en: '[PRE18]'
  id: totrans-246
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'The robot model in Rviz is shown in the following screenshot:'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: Rviz中的机器人模型如下截图所示：
- en: '![](img/060447dc-471a-4ba0-ac05-4ae76553b7e1.png)'
  id: totrans-248
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/060447dc-471a-4ba0-ac05-4ae76553b7e1.png)'
- en: Chefbot URDF model in Rviz
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: Chefbot URDF模型在Rviz中
- en: 'Here is the `view_robot.launch` file that visualizes the robot in Rviz:'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是用于在Rviz中可视化机器人的`view_robot.launch`文件：
- en: '[PRE19]'
  id: totrans-251
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Here is the definition of `upload_model. launch`. The `xacro` command is to
    parse the `chefbot.xacro` file and store to `robot_description`:'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是`upload_model.launch`的定义。`xacro`命令是用来解析`chefbot.xacro`文件并将其存储到`robot_description`中的：
- en: '[PRE20]'
  id: totrans-253
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: We can have a look at the `udf/chefbot.xacro`, which is the main URDF model
    file. We can see how the links and joints are defined inside the xacro file.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以查看`udf/chefbot.xacro`，这是主要的URDF模型文件。我们可以看到链接和关节是如何在xacro文件中定义的。
- en: 'The following code snippet shows the header of the robot xacro model. It has
    an XML version, robot name, and it includes some other xacro files, such as `common_properties.xacro`
    and `chefbot.gazebo.xacro.` After that, we can see some camera properties that
    are defined in the header:'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码片段显示了机器人xacro模型的头文件。它有一个XML版本、机器人名称，并包含一些其他xacro文件，如`common_properties.xacro`和`chefbot.gazebo.xacro`。之后，我们可以看到在头文件中定义的一些相机属性：
- en: '[PRE21]'
  id: totrans-256
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'The following code snippet shows the definition of links and joints in the
    model:'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码片段显示了模型中链接和关节的定义：
- en: '[PRE22]'
  id: totrans-258
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: In this code, we can see the definition of two links called `base_footprint` and
    `base_link`. The `base_footprint` link is a dummy link, meaning it has any properties;
    it is just for showing the origin of the robot. The `base_link` is the origin
    of the robot and it has visual and collision properties. We can also see that
    the link is visualized as a mesh file. We can also see the inertial parameters
    of the link in the definition. The joint is the combination of two link. We can
    define a joint in URDF by mentioning two links and the type of the joint. There
    are different types of joints available in URDF, such as fixed, revolute, continuous,
    and prismatic. In this snippet, we are creating a fixed joint because there is
    no movement between these frames.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 在这段代码中，我们可以看到两个名为`base_footprint`和`base_link`的链接的定义。`base_footprint`链接是一个虚拟链接，意味着它没有任何属性；它只是为了显示机器人的原点。`base_link`是机器人的原点，它具有可视和碰撞属性。我们还可以看到链接被可视化为网格文件。我们还可以在定义中看到链接的惯性参数。关节是两个链接的组合。我们可以在URDF中通过提及两个链接和关节的类型来定义一个关节。URDF中有不同类型的关节可用，例如固定、旋转、连续和滑动。在这个片段中，我们创建了一个固定关节，因为这些框架之间没有运动。
- en: This chapter has been all about the basics of the Chefbot URDF. We will learn
    more about Chefbot simulation and give an explanation of the parameters in the
    next chapter.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 本章主要介绍了Chefbot URDF的基础知识。在下一章中，我们将学习更多关于Chefbot模拟的内容，并对参数进行解释。
- en: Summary
  id: totrans-261
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we discussed the modeling of the Chefbot robot. The modeling
    involves 2D and 3D designing of the robot hardware and ends up in as URDF model,
    which can be used in ROS. The chapter started with the various requirements to
    be satisfied by the robot and we have seen how to calculate various design parameters.
    After calculating the design parameters, we started to design the 2D sketches
    of the robot hardware. The designing was done using LibreCAD, a free CAD tool.
    After that, we worked on the 3D model in Blender using Python scripting. We have
    created the mesh model from Blender and created the URDF model of the robot. After
    the creation of the URDF model, we looked at how to visualize the robot in Rviz.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们讨论了Chefbot机器人的建模。建模涉及机器人硬件的2D和3D设计，最终形成URDF模型，该模型可用于ROS。本章从机器人需要满足的各种要求开始，我们看到了如何计算各种设计参数。在计算设计参数后，我们开始设计机器人硬件的2D草图。设计使用LibreCAD，一个免费的CAD工具完成。之后，我们使用Python脚本在Blender中进行了3D模型的设计。我们从Blender中创建了网格模型，并创建了机器人的URDF模型。在创建URDF模型后，我们探讨了如何在Rviz中可视化机器人。
- en: In the next chapter, we will discuss how to simulate this robot and perform
    mapping and localization.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将讨论如何模拟这个机器人并执行映射和定位。
- en: Questions
  id: totrans-264
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: What is robot modeling and what are its uses?
  id: totrans-265
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 机器人建模是什么？它的用途是什么？
- en: What is the aim of a 2D robot model?
  id: totrans-266
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 2D机器人模型的目标是什么？
- en: What is the aim of a 3D robot model?
  id: totrans-267
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 3D机器人模型的目标是什么？
- en: What is the advantage of Python scripting over manual modeling?
  id: totrans-268
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Python脚本与手动建模相比的优势是什么？
- en: What is a URDF file and what are its uses?
  id: totrans-269
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: URDF文件是什么？它的用途是什么？
- en: Further reading
  id: totrans-270
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'To learn more about URDF and Xacro and Gazebo you can refer book: *Mastering
    ROS for Robotics Programming - Second Edition* ([https://www.packtpub.com/hardware-and-creative/mastering-ros-robotics-programming-second-edition](https://www.packtpub.com/hardware-and-creative/mastering-ros-robotics-programming-second-edition))'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多关于 URDF 和 Xacro 以及 Gazebo 的信息，您可以参考以下书籍：*《精通 ROS 机器人编程 - 第二版》* ([https://www.packtpub.com/hardware-and-creative/mastering-ros-robotics-programming-second-edition](https://www.packtpub.com/hardware-and-creative/mastering-ros-robotics-programming-second-edition))
