- en: Chapter 3. R and Statistics
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Understanding data sampling in R
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Operating a probability distribution in R
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Working with univariate descriptive statistics in R
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performing correlations and multivariate analysis
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Operating linear regression and a multivariate analysis
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Conducting an exact binomial test
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performing student's t-test
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performing the Kolmogorov-Smirnov test
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Understanding the Wilcoxon Rank Sum and Signed Rank test
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Working with Pearson's Chi-squared test
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Conducting a one-way ANOVA
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performing a two-way ANOVA
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The R language, as the descendent of the statistics language, S, has become
    the preferred computing language in the field of statistics. Moreover, due to
    its status as an active contributor in the field, if a new statistical method
    is discovered, it is very likely that this method will first be implemented in
    the R language. As such, a large quantity of statistical methods can be fulfilled
    by applying the R language.
  prefs: []
  type: TYPE_NORMAL
- en: 'To apply statistical methods in R, the user can categorize the method of implementation
    into descriptive statistics and inferential statistics:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Descriptive statistics**: These are used to summarize the characteristics
    of the data. The user can use mean and standard deviation to describe numerical
    data, and use frequency and percentages to describe categorical data.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Inferential statistics**: Based on the pattern within a sample data, the
    user can infer the characteristics of the population. The methods related to inferential
    statistics are for hypothesis testing, data estimation, data correlation, and
    relationship modeling. Inference can be further extended to forecasting, prediction,
    and estimation of unobserved values either in or associated with the population
    being studied.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In the following recipe, we will discuss examples of data sampling, probability
    distribution, univariate descriptive statistics, correlations and multivariate
    analysis, linear regression and multivariate analysis, Exact Binomial Test, student's
    t-test, Kolmogorov-Smirnov test, Wilcoxon Rank Sum and Signed Rank test, Pearson's
    Chi-squared Test, One-way ANOVA, and Two-way ANOVA.
  prefs: []
  type: TYPE_NORMAL
- en: Understanding data sampling in R
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Sampling is a method to select a subset of data from a statistical population,
    which can use the characteristics of the population to estimate the whole population.
    The following recipe will demonstrate how to generate samples in R.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Make sure that you have an R working environment for the following recipe.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Perform the following steps to understand data sampling in R:'
  prefs: []
  type: TYPE_NORMAL
- en: 'In order to generate random samples of a given population, the user can simply
    use the `sample` function:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'To specify the number of items returned, the user can set the assigned value
    to the `size` argument:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Moreover, the sample can also generate Bernoulli trials by specifying `replace
    = TRUE` (default is `FALSE`):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: As we saw in the preceding demonstration, the `sample` function can generate
    random samples from a specified population. The returned number from records can
    be designated by the user simply by specifying the argument of `size`. Assigning
    the `replace` argument to `TRUE`, you can generate Bernoulli trials (a population
    with `0` and `1` only).
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In R, the default package provides another sample method, `sample.int`, where
    both n and size must be supplied as integers:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Operating a probability distribution in R
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Probability distribution and statistics analysis are closely related to each
    other. For statistics analysis, analysts make predictions based on a certain population,
    which is mostly under a probability distribution. Therefore, if you find that
    the data selected for prediction does not follow the exact assumed probability
    distribution in experiment design, the upcoming results can be refuted. In other
    words, probability provides the justification for statistics. The following examples
    will demonstrate how to generate probability distribution in R.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Since most distribution functions originate from the `stats` package, make sure
    the library `stats` are loaded.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'For a normal distribution, the user can use `dnorm`, which will return the
    height of a normal curve at `0`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Then, the user can change the mean and the standard deviation in the argument:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Next, plot the graph of a normal distribution with the `curve` function:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '![How to do it...](img/00049.jpeg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: Standard normal distribution
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'In contrast to `dnorm`, which returns the height of a normal curve, the `pnorm`
    function can return the area under a given value:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Alternatively, to get the area above a certain value, you can specify the option,
    `lower.tail`, to `FALSE`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'To plot the graph of `pnorm`, the user can employ a `curve` function:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '![How to do it...](img/00050.jpeg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: Cumulative density function (pnorm)
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'To calculate the quantiles for a specific distribution, you can use `qnorm`.
    The function, `qnorm,` can be treated as the inverse of `pnorm`, which returns
    the Z-score of a given probability:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'To generate random numbers from a normal distribution, one can use the `rnorm`
    function and specify the number of generated numbers. Also, one can define optional
    arguments, such as the mean and standard deviation:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '![How to do it...](img/00051.jpeg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: Histogram of a normal distribution
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'To calculate the uniform distribution, the `runif` function generates random
    numbers from a uniform distribution. The user can specify the range of the generated
    numbers by specifying variables, such as the minimum and maximum. For the following
    example, the user generates 100 random variables from `0` to `5`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '![How to do it...](img/00052.jpeg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: Histogram of a uniform distribution
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Lastly, if you would like to test the normality of the data, the most widely
    used test for this is the Shapiro-Wilks test. Here, we demonstrate how to perform
    a test of normality on both samples from the normal and uniform distributions,
    respectively:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this recipe, we first introduce `dnorm`, a probability density function,
    which returns the height of a normal curve. With a single input specified, the
    input value is called a standard score or a z-score. Without any other arguments
    specified, it is assumed that the normal distribution is in use with a mean of
    zero and a standard deviation of one. We then introduce three ways to draw standard
    and normal distributions.
  prefs: []
  type: TYPE_NORMAL
- en: After this, we introduce `pnorm`, a cumulative density function. The function,
    `pnorm`, can generate the area under a given value. In addition to this, `pnorm`
    can be also used to calculate the p-value from a normal distribution. One can
    get the p-value by subtracting 1 from the number, or assigning True to the option,
    `lower.tail`. Similarly, one can use the `plot` function to plot the cumulative
    density.
  prefs: []
  type: TYPE_NORMAL
- en: In contrast to `pnorm`, `qnorm` returns the z-score of a given probability.
    Therefore, the example shows that the application of a `qnorm` function to a `pnorm`
    function will produce the exact input value.
  prefs: []
  type: TYPE_NORMAL
- en: Next, we show you how to use the `rnrom` function to generate random samples
    from a normal distribution, and the `runif` function to generate random samples
    from the uniform distribution. In the function, `rnorm`, one has to specify the
    number of generated numbers and we may also add optional augments, such as the
    mean and standard deviation. Then, by using the `hist` function, one should be
    able to find a bell-curve in figure 3\. On the other hand, for the `runif` function,
    with the minimum and maximum specifications, one can get a list of sample numbers
    between the two. However, we can still use the `hist` function to plot the samples.
    It is clear that the output figure (shown in the preceding figure) is not in a
    bell-shape, which indicates that the sample does not come from the normal distribution.
  prefs: []
  type: TYPE_NORMAL
- en: Finally, we demonstrate how to test data normality with the Shapiro-Wilks test.
    Here, we conduct the normality test on both the normal and uniform distribution
    samples, respectively. In both outputs, one can find the p-value in each test
    result. The p-value shows the changes, which show that the sample comes from a
    normal distribution. If the p-value is higher than 0.05, we can conclude that
    the sample comes from a normal distribution. On the other hand, if the value is
    lower than 0.05, we conclude that the sample does not come from a normal distribution.
  prefs: []
  type: TYPE_NORMAL
- en: There's more...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Besides the normal distribution, you can obtain a t distribution, binomial
    distribution, and Chi-squared distribution by using the built-in functions of
    R. You can use the `help` function to access further information about this:'
  prefs: []
  type: TYPE_NORMAL
- en: 'For a t distribution:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'For a binomial distribution:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'For the Chi-squared distribution:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'To learn more about the distributions in the package, the user can access the
    `help` function with the keyword `distributions` to find all related documentation
    on this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: Working with univariate descriptive statistics in R
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Univariate descriptive statistics describes a single variable for unit analysis,
    which is also the simplest form of quantitative analysis. In this recipe, we introduce
    some basic functions used to describe a single variable.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We need to apply descriptive statistics to a sample data. Here, we use the built-in
    `mtcars` data as our example.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'First, load the `mtcars` data into a data frame with a variable named `mtcars`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'To obtain the vector range, the `range` function will return the lower and
    upper bound of the vector:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Compute the length of the variable:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Obtain the mean of mpg:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Obtain the median of the input vector:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'To obtain the standard deviation of the input vector:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'To obtain the variance of the input vector:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The variance can also be computed with the square of standard deviation:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'To obtain the **Interquartile Range** (**IQR**):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'To obtain the quantile:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'To obtain the maximum of the input vector:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'To obtain the minima of the input vector:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'To obtain a vector with elements that are the cumulative maxima:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'To obtain a vector with elements that are the cumulative minima:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'To summarize the dataset, you can apply the `summary` function:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE32]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'To obtain a frequency count of the categorical data, take `cyl` of `mtcars`
    as an example:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE33]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'To obtain a frequency count of numerical data, you can use a stem plot to outline
    the data shape; `stem` produces a stem-and-leaf plot of the given values:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE34]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'You can use a histogram of ggplot to plot the same stem-and-leaf figure:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE35]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '![How to do it...](img/00053.jpeg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: Histogram of mpg of mtcars
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Univariate descriptive statistics generate the frequency distribution of datasets.
    Moreover, they can be used to identify the obvious patterns in the data and the
    characteristics of the variates to provide a better understanding of the data
    from a holistic viewpoint. Additionally, they can provide information about the
    central tendency and descriptors of the skewness of individual cases. Therefore,
    it is common to see that univariate analysis is conducted at the beginning of
    the data exploration process.
  prefs: []
  type: TYPE_NORMAL
- en: To begin the exploration of data, we first load the dataset, `mtcars`, to an
    R session. From the data, we apply `range`, `length`, `mean`, `median`, `sd`,
    `var`, `IQR`, `quantile`, `min`, `max`, `cumin`, and `cumax` to obtain the descriptive
    statistic of the attribute, `mpg`. Then, we use the `summary` function to obtain
    summary information about `mtcars`.
  prefs: []
  type: TYPE_NORMAL
- en: Next, we obtain a frequency count of the categorical data (`cyl`). To obtain
    a frequency count of the numerical data, we use a stem plot to outline the data
    shape. Lastly, we use a histogram with the `binwidth` argument in `2` to generate
    a plot similar to the stem-and-leaf plot.
  prefs: []
  type: TYPE_NORMAL
- en: There's more...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'One common scenario in univariate descriptive statistics is to find the mode
    of a vector. In R, there is no built-in function to help the user obtain the mode
    of the data. However, one can implement the mode function by using the following
    code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE36]'
  prefs: []
  type: TYPE_PRE
- en: 'By applying the `mode` function on the vector, `mtcars$mpg`, you can find the
    most frequently occurring numeric value or category of a given vector:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE37]'
  prefs: []
  type: TYPE_PRE
- en: Performing correlations and multivariate analysis
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To analyze the relationship of more than two variables, you would need to conduct
    multivariate descriptive statistics, which allows the comparison of factors. Additionally,
    it prevents the effect of a single variable from distorting the analysis. In this
    recipe, we will discuss how to conduct multivariate descriptive statistics using
    a correlation and covariance matrix.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Ensure that `mtcars` has already been loaded into a data frame within an R session.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Here, you can get the covariance matrix by inputting the first three variables
    in `mtcars` to the `cov` function:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE38]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'To obtain a correlation matrix of the dataset, we input the first three variables
    of `mtcars` to the `cor` function:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE39]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this recipe, we have demonstrated how to apply correlation and covariance
    to discover the relationship between multiple variables.
  prefs: []
  type: TYPE_NORMAL
- en: First, we compute a covariance matrix of the first three `mtcars` variables.
    Covariance can measure how variables are linearly related. Thus, a positive covariance
    (for example, `cyl` versus `mpg`) indicates that the two variables are positively
    linearly related. On the other hand, a negative covariance (for example, `mpg`
    versus `disp`) indicates the two variables are negatively linearly related. However,
    due to the variance of different datasets, the covariance score of these datasets
    is not comparable. As a result, if you would like to compare the strength of the
    linear relation between two variables in a different dataset, you should use the
    normalized score, that is, the correlation coefficient instead of covariance.
  prefs: []
  type: TYPE_NORMAL
- en: Next, we apply a `cor` function to obtain a correlation coefficient matrix of
    three variables within the `mtcars` dataset. In the correlation coefficient matrix,
    the numeric element of the matrix indicates the strength of the relationship between
    the two variables. If the correlation coefficient of a variable against itself
    scores `1`, the variable has a positive relationship against itself. The `cyl`
    and `mpg` variables have a correlation coefficient of -0.85, which means they
    have a strong, negative relationship. On the other hand, the `disp` and `cyl`
    variables score 0.90, which may indicate that they have a strong, positive relationship.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'You can use `ggplot` to plot the heatmap of the correlation coefficient matrix:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE40]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '![See also](img/00054.jpeg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: The correlation coefficient matrix heatmap
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Operating linear regression and multivariate analysis
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Linear regression is a method to assess the association between dependent and
    independent variables. In this recipe, we will cover how to conduct linear regression
    for multivariate analysis.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Ensure that `mtcars` has already been loaded into a data frame within an R session.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'To fit variables into a linear model, you can use the `lm` function:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE41]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'To get detailed information on the fitted model, you can use the `summary`
    function:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE42]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'To create an analysis of a variance table, one can employ the `anova` function:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE43]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'To plot the regression line on a scatter plot of two variables, you first plot
    `cyl` against `mpg` in it, then use the `abline` function to add a regression
    line on the plot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE44]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '![How to do it...](img/00055.jpeg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: The regression plot of cyl against mpg
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this recipe, we apply the linear model function, `lm`, which builds a linear
    fitted model of two variables and returns the formula and coefficient. Next, we
    apply the `summary` function to retrieve the detailed information (including F-statistic
    and P-value) of the model. The purpose of F-statistic is to test the statistical
    significance of the model. It produces an F-value, which is the ratio of the model
    mean square to the error mean square. Thus, a large F-value indicates that more
    of the total variability is accounted for by the regression model. Then, we can
    use the F-value to support or reject the null hypothesis that all of the regression
    coefficients are equal to zero. In other words, the null hypothesis is rejected
    if the F-value is large and shows that the regression model has a predictive capability.
    On the other hand, P-values of each attribute test the null hypothesis that the
    coefficient is equal to zero (no effect on the response variable). In other words,
    a low p-value can reject a null hypothesis and indicates that a change in the
    predictor's value is related to the value of the response variable.
  prefs: []
  type: TYPE_NORMAL
- en: Next, we apply the `anova` function on the fitted model to determine the variance.
    The function outputs the sum of squares, which stands for the variability of the
    model's predicted value. Further, to visualize the linear relationship between
    two variables, the `abline` function can add a regression line on a scatter plot
    of `mpg` against `cyl`. From the preceding figure, it is obvious that the `mpg`
    and `cyl` variables are negatively related.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: For more information on how to perform linear and nonlinear regression analysis,
    please refer to the [Chapter 4](part0046_split_000.html#page "Chapter 4. Understanding
    Regression Analysis"), *Understanding Regression Analysis*
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Conducting an exact binomial test
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'While making decisions, it is important to know whether the decision error
    can be controlled or measured. In other words, we would like to prove that the
    hypothesis formed is unlikely to have occurred by chance, and is statistically
    significant. In hypothesis testing, there are two kinds of hypotheses: null hypothesis
    and alternative hypothesis (or research hypothesis). The purpose of hypothesis
    testing is to validate whether the experiment results are significant. However,
    to validate whether the alternative hypothesis is acceptable, it is deemed to
    be true if the null hypothesis is rejected.'
  prefs: []
  type: TYPE_NORMAL
- en: In the following recipes, we will discuss some common statistical testing methods.
    First, we will cover how to conduct an exact binomial test in R.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Since the `binom.test` function originates from the `stats` package, make sure
    the `stats` library is loaded.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Perform the following step:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Assume there is a game where a gambler can win by rolling the number-six-on
    a dice. As part of the rules, gamblers can bring their own dice. If a gambler
    tried to cheat in a game, he would use a loaded dice to increase his chance of
    winning. Therefore, if we observe that the gambler won 92 out of 315 games, we
    could determine whether the dice was fair by conducting an exact binomial test:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE45]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'A binomial test uses the binomial distribution to find out whether the true
    success rate is likely to be *P* for *n* trials with the binary outcome. The formula
    of the probability, *P*, can be defined in following equation:'
  prefs: []
  type: TYPE_NORMAL
- en: '![How it works...](img/00056.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Here, *X* denotes the random variables, counting the number of outcomes of the
    interest; *n* denotes the number of trials; *k* indicates the number of successes;
    *p* indicates the probability of success; and *q* denotes the probability of failure.
  prefs: []
  type: TYPE_NORMAL
- en: After we have computed the probability, *P*, we can then perform a sign test
    to determine whether the success probability is similar to what we expected. If
    the probability is not equal to what we expected, we can reject the null hypothesis.
  prefs: []
  type: TYPE_NORMAL
- en: 'By definition, the null hypothesis is a skeptical perspective or a statement
    about the population parameter that will be tested. The null hypothesis is denoted
    by H0\. An alternative hypothesis is represented by a range of population values,
    which are not included in the null hypothesis. The alternative hypothesis is denoted
    by H1\. In this case, the null and alternative hypothesis, respectively, are illustrated
    as:'
  prefs: []
  type: TYPE_NORMAL
- en: '**H0 (null hypothesis)**: The true probability of success is equal to what
    we expected'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**H1 (alternative hypothesis)**: The true probability of success is not equal
    to what we expected'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In this example, we demonstrate how to use a binomial test to determine the
    number of times the dice is rolled, the frequency of rolling the number six, and
    the probability of rolling a six from an unbiased dice. The result of the t-test
    shows that the p-value = 3.458e-08 (lower than 0.05). For significance, at the
    five percent level, the null hypothesis (the dice is unbiased) is rejected as
    too many sixes were rolled (the probability of success = 0.2920635).
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To read more about the usage of the exact binomial test, please use the `help`
    function to view related documentation on this:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE46]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Performing student's t-test
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A one sample t-test enables us to test whether two means are significantly different;
    a two sample t-test allows us to test whether the means of two independent groups
    are different. In this recipe, we will discuss how to conduct one sample t-test
    and two sample t-tests using R.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Ensure that `mtcars` has already been loaded into a data frame within an R session.
    As the `t.test` function originates from the `stats` package, make sure the library,
    `stats`, is loaded.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'First, we visualize the attribute, `mpg`, against `am` using a boxplot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE47]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '![How to do it...](img/00057.jpeg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: The boxplot of mpg of the overall population and automobiles
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'We then perform a statistical procedure to validate whether the average `mpg`
    of automobiles is lower than the average of the overall `mpg`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE48]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'We begin visualizing the data by plotting a boxplot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE49]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '![How to do it...](img/00058.jpeg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: The boxplot of mpg of automatic and manual transmission cars
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'The preceding figure reveals that the mean mpg of automatic transmission cars
    is lower than the average mpg of manual transmission vehicles:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE50]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Student's t-test is where the test statistic follows a normal distribution (the
    student's t distribution) if the null hypothesis is true. It can be used to determine
    whether there is a difference between two independent datasets. Student's t-test
    is best used with the problems associated with an inference based on small samples.
  prefs: []
  type: TYPE_NORMAL
- en: In this recipe, we discuss one sample student's t-test and two sample student's
    t-tests. In the one sample student's t-test, a research question often asked is,
    "Is the mean of the population different from the null hypothesis?" Thus, in order
    to test whether the average mpg of automobiles is lower than the overall average
    mpg, we first use a boxplot to view the differences between populations without
    making any assumptions. From the preceding figure, it is clear that the mean of
    mpg of automobiles (the blue line) is lower than the average mpg (red line) of
    the overall population. Then, we apply one sample t-test; the low p-value of 0.003595
    (< 0.05) suggests that we should reject the null hypothesis that the mean mpg
    for automobiles is less than the average mpg of the overall population.
  prefs: []
  type: TYPE_NORMAL
- en: As a one sample t-test enables us to test whether two means are significantly
    different, a two sample t-test allows us to test whether the means of two independent
    groups are different. Similar to a one sample t-test, we first use a boxplot to
    see the differences between populations and then apply a two-sample t-test. The
    test results shows the p-value = 0.01374 (p< 0.05). In other words, the test provides
    evidence that rejects the null hypothesis, which shows the mean mpg of cars with
    automatic transmission differs from the cars with manual transmission.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To read more about the usage of student''s t-test, please use the `help` function
    to view related documents:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE51]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Performing the Kolmogorov-Smirnov test
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A one-sample Kolmogorov-Smirnov test is used to compare a sample with a reference
    probability. A two-sample Kolmogorov-Smirnov test compares the cumulative distributions
    of two datasets. In this recipe, we will demonstrate how to perform the Kolmogorov-Smirnov
    test with R.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Ensure that `mtcars` has already been loaded into a data frame within an R session.
    As the `ks.test` function is originated from the `stats` package, make sure the
    `stats` library is loaded.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Validate whether the dataset, x (generated with the `rnorm` function), is distributed
    normally with a one-sample Kolmogorov-Smirnov test:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE52]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Next, you can generate uniformly distributed sample data:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE53]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'We first plot `ecdf` of two generated data samples:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE54]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '![How to do it...](img/00059.jpeg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: The ecdf plot of two generated data samples
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Finally, we apply a two-sample Kolmogorov-Smirnov test on two groups of data:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE55]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The **Kolmogorov-Smirnov test** (**K-S test**) is a nonparametric and statistical
    test, used for the equality of continuous probability distributions. It can be
    used to compare a sample with a reference probability distribution (a one sample
    K-S test), or it can directly compare two samples (a two sample K-S test). The
    test is based on the empirical distribution function (ECDF). Let ![How it works...](img/00060.jpeg)
    be a random sample of size, n; the empirical distribution function, ![How it works...](img/00061.jpeg),
    is defined as:'
  prefs: []
  type: TYPE_NORMAL
- en: '![How it works...](img/00062.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Here, ![How it works...](img/00063.jpeg) is the indicator function. If ![How
    it works...](img/00064.jpeg), the function equals to 1\. Otherwise, the function
    equals to 0.
  prefs: []
  type: TYPE_NORMAL
- en: 'The Kolmogorov-Smirnov statistic (D) is based on the greatest (where supx denotes
    the supremum) vertical difference between F(x) and Fn(x). It is defined as:'
  prefs: []
  type: TYPE_NORMAL
- en: '![How it works...](img/00065.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: H[0] is the sample follows the specified distribution. H[1] is the sample does
    not follow the specified distribution.
  prefs: []
  type: TYPE_NORMAL
- en: If Dn is greater than the critical value obtained from a table, then we reject
    H[0] at the level of significance α.
  prefs: []
  type: TYPE_NORMAL
- en: We first test whether a random number generated from a normal distribution is
    normally distributed. At the 5 percent significance level, the p-value of 0.0994
    indicates that the input is normally distributed.
  prefs: []
  type: TYPE_NORMAL
- en: Then, we plot an empirical cumulative distribution function (`ecdf`) plot to
    show how a two-sample test calculates the maximum distance D (showing 0.3), and
    apply the two-sample Kolmogorov-Smirnov test to discover whether the two input
    datasets possibly come from the same distribution.
  prefs: []
  type: TYPE_NORMAL
- en: The p-value is above 0.05, which does not reject the null hypothesis. In other
    words, it means the two datasets are possibly from the same distribution.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To read more about the usage of the Kolmogorov-Smirnov test, please use the
    `help` function to view related documents:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE56]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'As for the definition of an empirical cumulative distribution function, please
    refer to the help page of `ecdf`:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE57]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Understanding the Wilcoxon Rank Sum and Signed Rank test
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The Wilcoxon Rank Sum and Signed Rank test (or Mann-Whitney-Wilcoxon) is a nonparametric
    test of the null hypothesis, which shows that the population distribution of two
    different groups are identical without assuming that the two groups are normally
    distributed. This recipe will show how to conduct the Wilcoxon Rank Sum and Signed
    Rank test in R.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Ensure that `mtcars` has already been loaded into a data frame within an R session.
    As the `wilcox.test` function is originated from the `stats` package, make sure
    the library, `stats`, is loaded.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'We first plot the data of `mtcars` with the `boxplot` function:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE58]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '![How to do it...](img/00066.jpeg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: The boxplot of mpg of automatic cars and manual transmission cars
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Next, we still perform a Wilcoxon Rank Sum test to validate whether the distribution
    of automatic transmission cars is identical to that of manual transmission cars:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE59]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this recipe, we discuss a nonparametric test method, the Wilcoxon Rank Sum
    test (also known as the Mann-Whitney U-test). For student's t-test, it is assumed
    that the differences between the two samples are normally distributed (and it
    also works best when the two samples are normally distributed). However, when
    the normality assumption is uncertain, one can adopt the Wilcoxon Rank Sum Test
    to test a hypothesis.
  prefs: []
  type: TYPE_NORMAL
- en: Here, we used a Wilcoxon Rank Sum test to determine whether the mpg of automatic
    and manual transmission cars in the dataset, `mtcars`, is distributed identically.
    From the test result, we see that the p-value = 0.001871 (< 0.05) rejects the
    null hypothesis, and also reveals that the distribution of mpg in automatic and
    manual transmission cars is not identical. When performing this test, you may
    receive the warning message, "cannot compute exact p-value with ties", which indicates
    that there are duplicate values within the dataset. The warning message will be
    cleared once the duplicate values are removed.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To read more about the usage of the Wilcoxon Rank Sum and Signed Rank Test,
    please use the `help` function to view the concerned documents:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE60]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Working with Pearson's Chi-squared test
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this recipe, we introduce Pearson's Chi-squared test, which is used to examine
    whether the distributions of categorical variables of two groups differ. We will
    discuss how to conduct Pearson's Chi-squared Test in R.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Ensure that `mtcars` has already been loaded into a data frame within an R session.
    Since the `chisq.test` function is originated from the `stats?` package, make
    sure the library, `stats,` is loaded.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'To make the counting table, we first use the contingency table built with the
    inputs of the transmission type and number of forward gears:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE61]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'We then plot the mosaic plot of the contingency table:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE62]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '![How to do it](img/00067.jpeg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: Number of forward gears in automatic and manual cars
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Next, we perform the Pearson''s Chi-squared test on the contingency table to
    test whether the numbers of gears in automatic and manual transmission cars is
    the same:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE63]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Pearson''s Chi-squared test is a statistical test used to discover whether
    there is a relationship between two categorical variables. It is best used for
    unpaired data from large samples. If you would like to conduct Pearson''s Chi-squared
    test, you need to make sure that the input samples satisfy two assumptions: firstly,
    the two input variables should be categorical. Secondly, the variable should include
    two or more independent groups.'
  prefs: []
  type: TYPE_NORMAL
- en: 'In Pearson''s Chi-squared test, the assumption is that we have two variables,
    A and B; we can illustrate the null and alternative hypothesis in the following
    statements:'
  prefs: []
  type: TYPE_NORMAL
- en: 'H[0]: Variable A and variable B are independent'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'H[1]: Variable A and variable B are not independent'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: To test whether the null hypothesis is correct or incorrect, the Chi-squared
    test takes these steps.
  prefs: []
  type: TYPE_NORMAL
- en: 'It calculates the Chi-squared test statistic, ![How it works...](img/00068.jpeg):'
  prefs: []
  type: TYPE_NORMAL
- en: '![How it works...](img/00069.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Here, r is the number of rows in the contingency table, c is the number of columns
    in the contingency table, O[i,j] is the observed frequency count, E[i,j] is the
    expected frequency count.
  prefs: []
  type: TYPE_NORMAL
- en: 'It determines the degrees of freedom, `df`, of that statistic. The degree of
    freedom is equal to:'
  prefs: []
  type: TYPE_NORMAL
- en: '![How it works...](img/00070.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Here, r is the number of levels for one variable, and c is the number of levels
    for another variable.
  prefs: []
  type: TYPE_NORMAL
- en: It compares ![How it works...](img/00071.jpeg) to the critical value from the
    Chi-squared distribution with the degrees of freedom.
  prefs: []
  type: TYPE_NORMAL
- en: In this recipe, we use a contingency table and mosaic plot to illustrate the
    differences in count numbers. It is obvious that the number of forward gears is
    less in automatic transmission cars than in manual transmission cars.
  prefs: []
  type: TYPE_NORMAL
- en: Then, we perform the Pearson's Chi-squared test on the contingency table to
    determine whether the gears in automatic and manual transmission cars are the
    same. The output, p-value = 2.831e-05 (< 0.05), refutes the null hypothesis and
    shows the number of forward gears is different in automatic and manual transmission
    cars. However, the output message contains a warning message that Chi-squared
    approximation may be incorrect, which is because the number of samples in the
    contingency table is less than five.
  prefs: []
  type: TYPE_NORMAL
- en: There's more...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To read more about the usage of the Pearson''s Chi-squared test, please use
    the `help` function to view the related documents:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE64]'
  prefs: []
  type: TYPE_PRE
- en: 'Besides some common hypothesis testing methods mentioned in previous examples,
    there are other hypothesis methods provided by R:'
  prefs: []
  type: TYPE_NORMAL
- en: 'The Proportional test (`prop.test`): It is used to test whether the proportions
    in different groups are the same'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The Z-test (`simple.z.test` in the UsingR package): It compares the sample
    mean with the population mean and standard deviation'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The Bartlett Test (`bartlett.test`): It is used to test whether the variance
    of different groups is the same'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The Kruskal-Wallis Rank Sum Test (`kruskal.test`): It is used to test whether
    the distribution of different groups is identical without assuming that they are
    normally distributed'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The Shapiro-Wilk test (`shapiro.test`): It is used test for normality'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Conducting a one-way ANOVA
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Analysis of** **variance** (**ANOVA**) investigates the relationship between
    categorical independent variables and continuous dependent variables. It can be
    used to test whether the means of several groups are equal. If there is only one
    categorical variable as an independent variable, you can perform a one-way ANOVA.
    On the other hand, if there are more than two categorical variables, you should
    perform a two-way ANOVA. In this recipe, we discuss how to conduct a one-way ANOVA
    with R.'
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Ensure that `mtcars` has already been loaded into a data frame within an R session.
    Since the `oneway.test` and `TukeyHSD` functions originated from the `stats` package,
    make sure the library, `stats`, is loaded.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'We begin exploring by visualizing the data with a boxplot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE65]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '![How to do it...](img/00072.jpeg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: Comparison of mpg of different numbers of forward gears
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Next, we conduct a one-way ANOVA to examine whether the mean of `mpg` changes
    with different numbers of forward gears. We use the function, `oneway.test`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE66]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'In addition to `oneway.test`, a standard function, `aov`, is used for the ANOVA
    analysis:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE67]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The model generated by the `aov` function can also generate a summary as a
    fitted table:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE68]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'For the `aov` model, one can use `TukeyHSD` for a post hoc comparison test:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE69]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Further, we can visualize the differences in mean level with a `plot` function:![How
    to do it...](img/00073.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The Tukey mean-difference plot of groups with different numbers of gears
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In order to understand whether cars with a different number of forward gears
    have different means in mpg, we first plot the boxplot of mpg by the numbers of
    forward gears. This offers a simple indication if cars with a different number
    of forward gears have different means of mpg. We then perform the most basic form
    of ANOVA, a one-way ANOVA, to test whether the populations have different means.
  prefs: []
  type: TYPE_NORMAL
- en: 'In R, there are two functions to perform the ANOVA test: `oneway.test` and
    `aov`. The advantage of `oneway.test` is that the function applies a Welch correction
    to address the nonhomogeneity of a variance. However, it does not provide as much
    information as `aov`, and it does not offer a post hoc test. Next, we perform
    `oneway.test` and `aov` on the independent variable, `gear`, with regard to the
    dependent variable, `mpg`. Both test results show a small p-value, which rejects
    the null hypothesis that the mean between cars with a different number of forward
    gears have the same `mpg` mean.'
  prefs: []
  type: TYPE_NORMAL
- en: As the results of ANOVA only suggest that there is a significant difference
    in the means within overall populations, you may not know which two populations
    differ in terms of their mean. Therefore, we apply the `TukeyHSD` post hoc comparison
    test on our ANOVA model. The result shows that cars with four forward gears and
    cars with three gears have the largest difference, as their confidence interval
    is the furthest to the right within the plot.
  prefs: []
  type: TYPE_NORMAL
- en: There's more...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: ANOVA relies on an F-distribution as the basis of all probability distribution.
    An F score is obtained by dividing the between-group variance by the in-group
    variance. If the overall F test was significant, you can conduct a post hoc test
    (or multiple comparison tests) to measure the differences between groups. The
    most commonly used post hoc tests are Scheffé's method, the Tukey-Kramer method,
    and the Bonferroni correction.
  prefs: []
  type: TYPE_NORMAL
- en: 'In order to interpret the output of ANOVA, you need to have a basic understanding
    of certain terms, including the degrees of freedom, the sum of square total, the
    sum of square groups, the sum of square errors, the mean square errors, and the
    F statistic. If you require more information about these terms, you may refer
    to *Using multivariate statistics* (Fidell, L. S., & Tabachnick, B. G. (2006)
    *Boston: Allyn & Bacon*.), or refer to the Wikipedia entry of Analysis of variance
    ([http://en.wikipedia.org/wiki/Analysis_of_variance#cite_ref-31](http://en.wikipedia.org/wiki/Analysis_of_variance#cite_ref-31)).'
  prefs: []
  type: TYPE_NORMAL
- en: Performing a two-way ANOVA
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A two-way ANOVA can be viewed as the extension of a one-way ANOVA, for the analysis
    covers more than two categorical variables rather than one. In this recipe, we
    will discuss how to conduct a two-way ANOVA in R.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Ensure that `mtcars` has already been loaded into a data frame within an R session.
    Since the `twoway.test`, `TukeyHSD` and `interaction.plot` functions are originated
    from the `stats` package, make sure the library, `stats`, is loaded.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'First we plot the two boxplots of factor gears in regard to mpg, with the plot
    separated from the transmission type:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE70]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '![How to do it...](img/00074.jpeg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: The boxplots of mpg by the gear group and the transmission type
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Also, you may produce a boxplot of mpg by the number of forward gears `*` transmission
    type, with the use of the `*` operation in the `boxplot` function:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE71]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '![How to do it...](img/00075.jpeg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: The boxplot of mpg by the gear * transmission type
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Next, we use an interaction plot to characterize the relationship between variables:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE72]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '![How to do it...](img/00076.jpeg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: Interaction between the transmission type and the number of gears with the main
    effects, mpg
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'We then perform a two-way ANOVA on mpg with a combination of the gear and transmission-type
    factors:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE73]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Similar to a one-way ANOVA, we can perform a post hoc comparison test to see
    the results of the two-way ANOVA model:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE74]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'We then visualize the differences in mean levels with the `plot` function:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE75]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '![How to do it...](img/00077.jpeg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: The comparison plot of differences in mean levels by the transmission type and
    the number of gears
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this recipe, we perform a two-way ANOVA to examine the influences of the
    independent variables, `gear` and `am`, on the dependent variable, `mpg`. In the
    first step, we use a boxplot to examine the mean of mpg by the number of gears
    and the transmission type. Secondly, we apply an interaction plot to visualize
    the change in mpg through the different numbers of gears with lines separated
    by the transmission type.
  prefs: []
  type: TYPE_NORMAL
- en: The resulting plot shows that the number of gears does have an effect on the
    mean of mpg, but does not show a positive relationship either. Thirdly, we perform
    a two-way ANOVA with the `aov` function. The output shows that the p-value of
    the `gear` factor rejects the null hypothesis, while the factor, `transmission
    type`, does not reject the null hypothesis. In other words, cars with different
    numbers of gears are more likely to have different means of mpg. Finally, in order
    to examine which two populations have the largest differences, we perform a post
    hoc analysis, which reveals that cars with four gears and three gears, respectively,
    have the largest difference in terms of the mean, mpg.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'For multivariate analysis of variances, the function, `manova`, can be used
    to examine the effect of multiple independent variables on multiple dependent
    variables. Further information about MANOVA is included within the `help` function
    in R:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE76]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
