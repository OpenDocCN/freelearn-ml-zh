- en: '4'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Building a Robot around Pico
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Building a robot involves utilizing some practical skills in a workshop – cutting,
    drilling, and, most importantly, measuring. It also requires assembling parts
    and keeping them in place. The robot platform will be the base for our Raspberry
    Pi Pico robotics experiments, since we want to try out our FreeCAD designs in
    the real world.
  prefs: []
  type: TYPE_NORMAL
- en: Cutting and scratch building from styrene is a workshop technique that’s used
    by model makers and robot builders in many situations – it’s cheap and convenient
    in terms of materials but requires some patience and practice. Could you 3D-print,
    CNC-mill, or laser-cut these parts? Almost certainly – however, not everyone has
    access to these tools, and learning about scratch build techniques to complement
    them will give you flexibility as a workbench wizard.
  prefs: []
  type: TYPE_NORMAL
- en: Later in this chapter, we will look at wiring our robot and connecting the electronics
    so that the robot is ready for us to code on.
  prefs: []
  type: TYPE_NORMAL
- en: By the end of this chapter, you will have built the robot base platform with
    a Raspberry Pi Pico at its core, and it will be assembled and wired.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we’re going to cover the following main topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Cutting styrene chassis
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Drilling out holes
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Assembling a robot chassis
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wiring a Raspberry Pi Pico robot
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This chapter uses various tools and materials. You will need to have the right
    tools and be able to work safely. You’ll find this equipment in the shopping lists
    from [*Chapter 1*](B18001_01.xhtml#_idTextAnchor015).
  prefs: []
  type: TYPE_NORMAL
- en: 'You will require the following materials:'
  prefs: []
  type: TYPE_NORMAL
- en: 3 mm styrene sheet – A4 or larger
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A soldered Raspberry Pi Pico
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The solderless breadboard
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Precut jumper wire kit
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The motor controller with headers soldered in
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A 5V 3A UBEC
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 8 x AA battery compartment, with switch
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: N20 micro-metal gear motors with encoders
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ball caster ¾ inch with 4 x M2 nuts – 2 x M2 x 6 mm
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hook and loop/Velcro dots
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wheels with N20 d-hole hubs
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 1n5817 or equivalent Schottky Diode
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A standoff or a mounting kit with M2 standoffs, bolts, and nuts
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'You will need the following tools:'
  prefs: []
  type: TYPE_NORMAL
- en: A plastic cutter
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A pair of scissors
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A metal ruler that’s at least 250 mm long
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sandpaper – 400, 600, and 1,200 grit
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A pin vise drill with 0.5 mm, 1 mm, 2 mm, and 2.5 mm **high-speed steel** (**HSS**)/twist
    bits
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Safety goggles
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A flat work area with good lighting, free of interruptions or being nudged
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A cutting mat
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Screwdrivers with appropriate ends for the bolts
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: M2 and M3 spanners to tighten the bolts and standoffs
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A multimeter
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Cutting styrene parts
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Styrene is a great material for building robots. It is easy to find, can be
    cut and glued, and comes in many forms. We will be using sheets and rods. In this
    section, we will look at cutting this material, starting with transferring our
    CAD measurements. First, we look at making a good cut and refining the parts so
    that they are smooth.
  prefs: []
  type: TYPE_NORMAL
- en: Transferring CAD measurements to a plastic sheet
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Before we cut, we will need to make markings so that we know where to cut.
    In the previous chapter, we made a paper template and ensured that we printed
    it out 1:1 on a sheet of A4 paper. You’ll need that, along with some tools, as
    shown in the following figure:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.1 – Parts needed to transfer the drawing ](img/Figure_4.01_B18001.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.1 – Parts needed to transfer the drawing
  prefs: []
  type: TYPE_NORMAL
- en: 'The preceding figure shows the tools we will need, laid out and ready to use,
    followed by the drawing adhered onto a sheet of plastic. Prepare the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Scissors
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pin vise and bits
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Metal ruler
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Plastic cutter
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Cutting mat
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sheet plastic
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Paper template
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tape
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The first thing you will need to do is cut around the drawing on the paper template.
    Then, you will need to tape this firmly onto the plastic sheet. Try not to let
    any of the edges curl – the better this is taped down, the better your result
    will be.
  prefs: []
  type: TYPE_NORMAL
- en: 'We will use this template to draw some dots on our plastic. The following figure
    shows this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.2 – Marking the plastic with dots ](img/Figure_4.02_B18001.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.2 – Marking the plastic with dots
  prefs: []
  type: TYPE_NORMAL
- en: 'Here, you can see me using the pin vise with a bit to draw dots for each corner
    and hole. The right side shows the holes drilled. Follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Use the pin vise with a small bit, maybe around 0.5 mm.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Align the pin vise over a corner on your drawing and mark through the paper
    and onto the plastic.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Repeat this for all the corners. There are six for the chassis.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now, do the same with the hole centers. There are six holes in the chassis plate.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We can then use larger bits to drill out the holes – a 2 mm bit and 2.5 mm bit.
    Let the template guide you on the sizes.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: While making the marking holes, and the bolt holes, it is important to go slowly
    and use little force. Accuracy is important. Do this over some waste wood or a
    cutting mat.
  prefs: []
  type: TYPE_NORMAL
- en: Now that we have traced this out, we are ready to start cutting the parts out
    of the sheet.
  prefs: []
  type: TYPE_NORMAL
- en: Cutting the plastic sheet
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Cutting takes patience. Go slowly and start with accuracy as the goal; there’s
    no eraser for cuts!
  prefs: []
  type: TYPE_NORMAL
- en: Important Note
  prefs: []
  type: TYPE_NORMAL
- en: Your fingers or limbs must never be in the path of the blade! Do not cut yourself.
    When you are holding the ruler, keep your fingertips in the middle of it.
  prefs: []
  type: TYPE_NORMAL
- en: Ensure that the plastic cutter is sharp and has a fresh blade. Blunt blades
    do not cut effectively, and using more pressure is dangerous and risks damaging
    the parts.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let us start cutting. Look at the following figure:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.3 – Cutting the parts ](img/Figure_4.03_B18001.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.3 – Cutting the parts
  prefs: []
  type: TYPE_NORMAL
- en: 'The preceding photo shows me making cuts in the plastic sheet. The top left
    has me aligning a metal edge for the rear cut, and the top right has me setting
    up a cut for the front bevel. The bottom drawing shows the cut being made. I have
    a process for cutting these:'
  prefs: []
  type: TYPE_NORMAL
- en: Line up the ruler with a pair of holes and the template so that the cutting
    edge faces *out* from the material you will keep. This means that any runout from
    the knife will not damage the part. Keep the ruler firmly held so that it doesn’t
    move.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: With the cutter, you will use the point of the hook.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Place the hook just in from the hole (so it doesn’t snag on it). With light
    pressure, score the sheet following the ruler to the next dot. Do not aim to cut
    deeply – score the sheet. Do not force this – don’t damage the ruler, and focus
    on keeping the cut straight.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We aim to cut about halfway through. To make a clean cut, ensure that you take
    things slowly. When you reach the end, keep the ruler in place, return, and follow
    the existing score. As you make a few passes, you will see the hook picks up more
    material. This is tedious but leads to a good finish.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Clean the blade if it gets gummed up and change it if it’s dull.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Be patient; if you go too fast or use too much pressure, then you may wander
    off and damage the part or, worse, ride up and take a chunk out of you.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Repeat this process for all the lines you have drawn.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Rotate the part and ruler to get a good cutting edge for yourself. Do not lean
    over in awkward poses.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'At this point, you should have scored all the lines for the parts, but they
    will still be mostly inside the plastic sheet. So, let us see how we get them
    out:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.4 – Pushing out the parts ](img/Figure_4.04_B18001.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.4 – Pushing out the parts
  prefs: []
  type: TYPE_NORMAL
- en: The preceding figure combines two diagrams and two photos. The process for pushing
    out the parts depends on having made enough passes that you have a deep knife
    score, as item **1** shows. The more knife passes you made previously, the easier
    this will be.
  prefs: []
  type: TYPE_NORMAL
- en: Item **2** shows what is going on; we flex the plastic at the scored line until
    it snaps. The bottom-left picture shows all the lines deeply scored in the sheet,
    and the bottom right shows the sheet being flexed to release this part. This process
    is very satisfying!
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you have snapped out the parts, you should have the main chassis plate:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.5 – The plate cut out ](img/Figure_4.05_B18001.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.5 – The plate cut out
  prefs: []
  type: TYPE_NORMAL
- en: The preceding figure shows the chassis plate on a cutting mat. It looks a bit
    rough, though, with burrs on the holes and the edges. We will fix this in the
    next section.
  prefs: []
  type: TYPE_NORMAL
- en: Finishing and sanding the chassis plate
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The first things we will clean up are the holes. Burrs are the spiky ridged
    bits that remain from drilling. They can be sharp and catch your fingers and may
    also prevent parts from being assembled well. Let us learn how to remove them:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.6 – Cleaning up the holes ](img/Figure_4.06_B18001.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.6 – Cleaning up the holes
  prefs: []
  type: TYPE_NORMAL
- en: The first panel shows two holes – one with the burrs visible and the other with
    the burrs removed. To do this, use a craft knife to make a circle with the blade
    lightly inside the hole; this will just take off the burr without widening it.
    Again, use no pressure here; let the blade do the work.
  prefs: []
  type: TYPE_NORMAL
- en: Repeat this for all the holes. If you need to clean the blade, use tissue, but
    never put your fingers in the path of the blade!
  prefs: []
  type: TYPE_NORMAL
- en: Sanding the parts
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The following figure shows how to sand this part so that it is ready to use:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.7 – Sanding the plate ](img/Figure_4.07_B18001.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.7 – Sanding the plate
  prefs: []
  type: TYPE_NORMAL
- en: 'The preceding figure shows how to sand the chassis. These tips will help:'
  prefs: []
  type: TYPE_NORMAL
- en: Place the sandpaper on the table and stroke the part against it.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Start with the roughest (400 or 600 grit) sandpaper.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Smooth the edge and take off any ridges left by the cutting. It helps to come
    in at an angle of 30 to 45 degrees.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: For long edges, hold the plates in one hand and stroke the sandpaper against
    them. Keep this light and support the paper where it contacts the part.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now, go from the low-grit sandpaper to the medium-grit sandpaper (800–1,000)
    and then to the high-grit sandpaper (1,200) with the lightest touch.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The part’s edges should now be smooth and not sharp to the touch.
  prefs: []
  type: TYPE_NORMAL
- en: With that, you have designed, cut, and sanded your chassis base. Sure, it could
    be more exciting in terms of its shape, more robust, and extend up into three
    dimensions or more, but you now have the skill to enhance it in these ways. A
    chassis base is not enough for a robot, though, so we’ll start attaching robot
    parts to this base in the next section!
  prefs: []
  type: TYPE_NORMAL
- en: Assembling a robot chassis
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The chassis is the base of our robot. We have cut the required part, preparing
    it for use. In this section, we’ll attach the caster battery box, and motors.
  prefs: []
  type: TYPE_NORMAL
- en: Attaching the caster and battery box
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The battery box is assembled above the caster. Therefore, we must start with
    the caster; the following figure shows how:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.8 – Attaching the caster ball to the chassis ](img/Figure_4.08_B18001.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.8 – Attaching the caster ball to the chassis
  prefs: []
  type: TYPE_NORMAL
- en: 'The preceding figure shows me attaching the ball caster to the chassis. Let
    us take a look at this in more detail:'
  prefs: []
  type: TYPE_NORMAL
- en: The large inset at the bottom left shows a cross-section of how this will turn
    out. Note that the nylon screw must go through the bottom of the ball caster housing,
    through the chassis plate, and then an upper securing nut.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The top-left figure shows the parts for this assembly. We have the ball caster
    housing (with the ball separated), 2 x M2 long nylon screws, and 2 x M2 nuts.
    Also, prepare a suitable screwdriver, spanner, and wire/side cutters.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: After screwing both lower-spacing nuts into place, push the protruding threads
    through the corresponding holes in the underside of the chassis plate.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Tighten the securing nuts with a spanner.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: To finish, trim the threads so that they are 1 mm or less above the securing
    nuts to ensure they will not foul the bottom of the battery box. A flush cutter/side
    cutter is a good way to do this without destroying the thread.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Pop in the ball caster. Check that the ball will move freely and isn’t catching
    on the screws.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'At this point, the ball caster is secured. We can now attach the battery box,
    as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.9 – Attaching the battery box ](img/Figure_4.09_B18001.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.9 – Attaching the battery box
  prefs: []
  type: TYPE_NORMAL
- en: '*Figure 4**.9* shows how to attach the battery box. The top left shows hook
    and loop disks being adhered to the battery box in the four corners. Next, we
    add their opposite disks onto them. We then align the battery box over the chassis
    and push it down firmly so that the bottom disks stick to the chassis. Leave this
    for a few minutes for a good bond.'
  prefs: []
  type: TYPE_NORMAL
- en: The bottom left shows a cross section with the relationship between the battery
    box assembly and caster underneath. The final panel, at the bottom right, shows
    that once the hook and loop disks are adhered, you should be able to pop the battery
    box off the hook and loop to make changing batteries easier.
  prefs: []
  type: TYPE_NORMAL
- en: Now, let us move on to the robot’s front, which is where the motors will be
    added.
  prefs: []
  type: TYPE_NORMAL
- en: Attaching the motors and wheels
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Now, let’s bolt the motors on and fit their wheels in place. The following
    figure shows the necessary steps:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.10 – Attaching the motors and wheels ](img/Figure_4.10_B18001.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.10 – Attaching the motors and wheels
  prefs: []
  type: TYPE_NORMAL
- en: 'The preceding figure shows how to attach the motors and wheels:'
  prefs: []
  type: TYPE_NORMAL
- en: The top-left panel shows the parts that are needed – two wheels, two motors,
    two N20 motor brackets, four nylon bolts, and four nuts (which should have come
    with the N20 motor brackets).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Fit the motor bracket so that it covers the middle gearbox plate and part of
    the motor.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Pop the nuts in the side lugs – a small jeweler’s screwdriver will help here.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The motor will line up over the holes. It may help to put the screws into one
    of the sides first and slot the motor over them.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Tighten the screws into the nuts on the motor bracket. Repeat *steps 4* and
    *5* for the other motor.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Attach the tires to the wheels – these are usually separate. Carefully push
    the wheels onto the motor spindles. Ensure that pressure is being placed on the
    motor but try not to flex the chassis.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We have now assembled the robot chassis, other than the electronics.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We’ve assembled the chassis enough for it to stand on its wheels. It has a battery
    box and motors, but nothing to instruct the motors when to move. In the next section,
    we will wire the robot’s electronics so that we’ll be ready to run the necessary
    code.
  prefs: []
  type: TYPE_NORMAL
- en: Wiring a Raspberry Pi Pico robot
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this section, we will look at connecting Raspberry Pi Pico to the motors
    via the motor controller we chose in [*Chapter 1*](B18001_01.xhtml#_idTextAnchor015),
    *Planning a Robot with Raspberry Pi Pico*. We will add the power circuitry and
    recommend a few techniques for robot wiring. Although the breadboard can adhere
    to the chassis, I tend to leave off using adhesive until it’s necessary – it is
    easier to wire and make changes sometimes with the breadboard out of the robot.
  prefs: []
  type: TYPE_NORMAL
- en: Wiring Pico and the motor controller into the breadboard
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The motor controller that we suggested in the planning phase was the TB6612-FNG.
    I have used a SparkFun board. The following table shows the pins for this module:'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Pin name** | **Type** | **Function** |'
  prefs: []
  type: TYPE_TB
- en: '| GND | Power | Ground – power connection back to batteries. |'
  prefs: []
  type: TYPE_TB
- en: '| VM | Power | Voltage for motors – higher than the rest of the system. |'
  prefs: []
  type: TYPE_TB
- en: '| VCC | Power | The logic voltage should be at 3.3v, the same as Pico. |'
  prefs: []
  type: TYPE_TB
- en: '| AIN1/2 and BIN1/2 | Input | These are the motor control input pins. Raspberry
    Pi Pico will control the motors through these. A and B designate sets of motor
    outputs. |'
  prefs: []
  type: TYPE_TB
- en: '| PWMA/B | Input | These can be pulsed on and off to control the motors. We
    will tie these to the VCC voltage so that only the AIN/BIN pins are needed. |'
  prefs: []
  type: TYPE_TB
- en: '| STBY | Input | Connect this pin high (VCC) to enable the motors. |'
  prefs: []
  type: TYPE_TB
- en: '| AO1/2 and BO1/2 | Output | These are the motor output pins and can be connected
    directly to each motor. |'
  prefs: []
  type: TYPE_TB
- en: Table 4.1 – TB6612-FNG pin functions
  prefs: []
  type: TYPE_NORMAL
- en: The preceding table describes each pin, its overall type, and its functionality.
  prefs: []
  type: TYPE_NORMAL
- en: 'We should also use the datasheet for Pico pinout at [https://datasheets.raspberrypi.org/pico/Pico-R3-A4-Pinout.pdf](https://datasheets.raspberrypi.org/pico/Pico-R3-A4-Pinout.pdf)
    while considering the pins we’ll use. The following diagram shows how we will
    wire this controller:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.11 – Wiring diagram for the robot ](img/Figure_4.11_B18001.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.11 – Wiring diagram for the robot
  prefs: []
  type: TYPE_NORMAL
- en: This wiring diagram (made in KiCad) shows the wiring we’ll be using in this
    chapter. The box at the bottom shows the symbol key.
  prefs: []
  type: TYPE_NORMAL
- en: Focusing on the connections between Raspberry Pi Pico and the motor module,
    you’ll see the **General Purpose Input/Output** (**GPIO**) pins wired to control
    the AIN and BIN pins. The preceding diagram shows the Raspberry Pi Pico 3v3 pin
    connected to a +3v3 power line, which we’ve also connected to the motor controller’s
    VCC, PWMA/B, and STBY pins.
  prefs: []
  type: TYPE_NORMAL
- en: We will build our circuits on a breadboard. With pre-cut jumper wires, you can
    push the exposed metal ends of the wire into the breadboard holes to make a connection.
    The top and bottom have power rails for connecting the power and the ground. The
    middle section has 30 rows, each with 2 connected rows consisting of 5 pins.
  prefs: []
  type: TYPE_NORMAL
- en: 'How do we fit this on a single breadboard? Let us look at the following diagram:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.12 – Wiring the motor connections on a breadboard ](img/Figure_4.12_B18001.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.12 – Wiring the motor connections on a breadboard
  prefs: []
  type: TYPE_NORMAL
- en: The preceding diagram shows a suggested breadboard layout. First, we must plug
    in Raspberry Pi Pico and the motor module, with Pico’s USB connector facing away
    from the motor board. Next, we must prepare the power rails, connecting the black
    rail to GND and the red rail to 3.3V – do this with longer wires so that they
    don’t block the USB port. We must also connect the motor board’s PWM and STBY
    pins to the red rail. Finally, we must make four connections between the GPIO
    pins of Pico and the input pins of the motor controller. Note the gap at the end
    of Pico – there is a spare ground pin here.
  prefs: []
  type: TYPE_NORMAL
- en: Make the connections with pre-cut jumper wires. Favor making it easy to inspect
    and change compared to tight and compact wiring.
  prefs: []
  type: TYPE_NORMAL
- en: We’ve wired the motor controller, but this board needs power – we’ll look at
    this next.
  prefs: []
  type: TYPE_NORMAL
- en: Adding the batteries
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We are wiring three main power components to this robot – a battery box, a UBEC
    to convert the battery output into the 5V input that Raspberry Pi Pico needs,
    and a diode to stop USB and UBEC power interacting with each other.
  prefs: []
  type: TYPE_NORMAL
- en: 'The top of *Figure 4**.11* in the previous section shows the UBEC and diode.
    How do we add those? Let us look at a suggested breadboard layout:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.13 – Suggested board layout for batteries, UBEC, and the diode ](img/Figure_4.13_B18001.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.13 – Suggested board layout for batteries, UBEC, and the diode
  prefs: []
  type: TYPE_NORMAL
- en: This breadboard layout builds upon the previous one, with the new wiring picked
    out. The connection marked as 12v is for the 8 x AA battery box. The UBEC (bottom)
    has the *in* side coming from the battery and the motor board ground, with the
    5V *out* side going through the diode into the Pico VSys pin. Also, note the wire
    from the battery output to VM – this is for the motor voltage on the motor board.
    Where the battery comes in, I suggest using a marker or label to show this since
    reconnecting this elsewhere can damage Pico or the UBEC.
  prefs: []
  type: TYPE_NORMAL
- en: 'These parts may be tricky to wire because one end of a UBEC typically has very
    thick wires, and the battery box wires tend to be multi-stranded and not suitable
    for breadboards. However, you have two options here:'
  prefs: []
  type: TYPE_NORMAL
- en: Push sets of two male header pins into a breadboard and solder wires onto them.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For a tidier but more difficult option, you can crimp DuPont/Mini-PV male connectors
    onto the ends of the battery box and the input side of the UBEC. I recommend crimping
    these while following the guide at [https://mschoeffler.com/2017/11/02/tutorial-how-to-crimp-dupontmini-pv-connectors-engineer-pa-09-connector-pliers/](https://mschoeffler.com/2017/11/02/tutorial-how-to-crimp-dupontmini-pv-connectors-engineer-pa-09-connector-pliers/).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The output side of the UBEC is typically female. Therefore, I used pre-cut jumper
    wires in the breadboard to connect the 5V and ground separately.
  prefs: []
  type: TYPE_NORMAL
- en: Important Note
  prefs: []
  type: TYPE_NORMAL
- en: The red rails of the breadboard are running the 3.3V power output from Pico.
    Therefore, do not connect the 5V output of the UBEC or 12V input power to this
    red rail!
  prefs: []
  type: TYPE_NORMAL
- en: Our robot has power circuits, which means it can power itself. In the next section,
    we will wire in the motors.
  prefs: []
  type: TYPE_NORMAL
- en: Wiring in the motors and encoders
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The motors we chose use six wires for each motor. We need to be clear on what
    the connections from these mean. Based on the datasheet Adafruit provides for
    the TB6612FNG device, the following table will help you make these connections:'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Motor pin** | **Wire color** | **Purpose** |'
  prefs: []
  type: TYPE_TB
- en: '| 1 – M1 | White | Motor 1 – Motor power/control |'
  prefs: []
  type: TYPE_TB
- en: '| 2 – GND | Blue | Encoder ground |'
  prefs: []
  type: TYPE_TB
- en: '| 3 – C1 | Green | Encoder signal 1 |'
  prefs: []
  type: TYPE_TB
- en: '| 4 – C2 | Yellow | Encoder signal 2 |'
  prefs: []
  type: TYPE_TB
- en: '| 5 – VCC | Black | Encoder power – 3v3 |'
  prefs: []
  type: TYPE_TB
- en: '| 6 – M2 | Red | Motor 2 – motor power/control |'
  prefs: []
  type: TYPE_TB
- en: Table 4.2 – N20 motor with encoder connections
  prefs: []
  type: TYPE_NORMAL
- en: If you have purchased a different device, please use its datasheet instead.
  prefs: []
  type: TYPE_NORMAL
- en: 'The wire colors match the wired connectors that come with these motors. Plug
    those into the motors carefully, as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.14 – Plugging the motor cables in ](img/Figure_4.14_B18001.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.14 – Plugging the motor cables in
  prefs: []
  type: TYPE_NORMAL
- en: The preceding figure shows me plugging the wires into their motor sockets. These
    wires come with a specific set of colors. Beware that the wire colors do not correspond
    to conventional black/red coloring here and that I have specified the colors in
    *Table 4.2*.
  prefs: []
  type: TYPE_NORMAL
- en: We can now proceed to wire this. Refer to *Figure 4**.11* for the overall circuit
    diagram. We’ve connected the motor power/control lines to the motor controller.
    We need to wire the motor controller to the motors, and the encoder signals to
    Raspberry Pi Pico. Note that the white and red cables – M1/M2 on the motors –
    are plugged into the AO/BO points on the motor controller. Next, we must connect
    the yellow and green encoder cables to Raspberry Pi Pico.
  prefs: []
  type: TYPE_NORMAL
- en: 'The motor wires are just about stiff enough to go into a breadboard as-is;
    however, you will have far more robust connections if you also crimp these cables.
    I grouped them into three pairs for each motor:'
  prefs: []
  type: TYPE_NORMAL
- en: M1/M2 motor control pins
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The green/yellow encoder pins
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The blue/black encoder power pins
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pairing them makes it much easier to plug them into their intended location
    on the robot.
  prefs: []
  type: TYPE_NORMAL
- en: With that, we have made all the wiring connections for the first phase of this
    robot. In the next section, we will look at powering it up.
  prefs: []
  type: TYPE_NORMAL
- en: Powering the robot up
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The robot has the necessary connections for this stage. The following figure
    shows what they look like:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.15 – The fully wired robot ](img/Figure_4.15_B18001.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.15 – The fully wired robot
  prefs: []
  type: TYPE_NORMAL
- en: The preceding figure shows the breadboard fully wired.
  prefs: []
  type: TYPE_NORMAL
- en: Now, check the wiring carefully, paying extra care to the power connections
    to look for potential short circuits in terms of any voltage to the ground or
    other voltage rail.
  prefs: []
  type: TYPE_NORMAL
- en: Place eight fresh AA batteries into the battery box and turn it on. You should
    see the light activate on Raspberry Pi Pico. If not, quickly switch it off and
    check the connections. If anything is warm, then this is usually a sign of a short
    circuit or incorrect connection. If nothing is warm, verify that the connections
    are not loose.
  prefs: []
  type: TYPE_NORMAL
- en: If there are no loose connections, this is where I would recommend using a multimeter
    to check the wires – in continuity mode. I suggest the Adafruit guide at [https://learn.adafruit.com/multimeters](https://learn.adafruit.com/multimeters),
    which explains how to use a multimeter. I would check any crimped wires, along
    with the voltages in and out of the UBEC.
  prefs: []
  type: TYPE_NORMAL
- en: If you find that a crimped wire is not conducting, I suggest replacing the crimp.
    A cheeky bit of solder in the crimp may do, but this can lead to a more fragile
    crimp later. You should be able to try and power the system up again.
  prefs: []
  type: TYPE_NORMAL
- en: At this point, you should be able to turn on the robot and see the LED light
    on Raspberry Pi Pico (and possibly the UBEC).
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: With that, you have built your robot from the designs provided. You learned
    how to measure patterns from a CAD design onto plastic and then cut and drill
    them. In addition, you now have experience attaching motors, wheels, casters,
    and battery boxes to a robot.
  prefs: []
  type: TYPE_NORMAL
- en: You wired the robot while following the circuit diagram and suggested breadboard
    layouts to build. Then, you powered up the robot and performed some troubleshooting
    (if it did not light up).
  prefs: []
  type: TYPE_NORMAL
- en: However, the robot will not move yet, as we have not implemented any code. In
    the next chapter, we will add code so that we can move the robot and control its
    wheels. Then, we will learn how to use them to make turns and drive at different
    speeds.
  prefs: []
  type: TYPE_NORMAL
- en: Exercises
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The following exercises will help improve your robot and help you practice
    your skills:'
  prefs: []
  type: TYPE_NORMAL
- en: This robot is quite flat. Consider how you might add other layers or add depth
    to it.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The breadboard is currently not adhered to the robot; perhaps hook and loop
    disks could help?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It is a good idea to get familiar with the robot’s wiring. Sketch a diagram
    for yourself showing the path between Raspberry Pi Pico and the motors.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Further reading
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To learn more about the topics that were covered in this chapter, take a look
    at the following resources:'
  prefs: []
  type: TYPE_NORMAL
- en: The Spruce Crafts has an in-depth guide to modeling with styrene at [https://www.thesprucecrafts.com/modeling-with-styrene-plastic-2382537](https://www.thesprucecrafts.com/modeling-with-styrene-plastic-2382537).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*The Basics of Working with Styrene* at [https://www.youtube.com/watch?v=p3gabIJ3Ono](https://www.youtube.com/watch?v=p3gabIJ3Ono),
    by the Hawkins Screamer, also has great tips on building with styrene.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*KiCad Like a Pro*, a Packt video course at [https://www.packtpub.com/product/kicad-like-a-pro-video/9781788629997](https://www.packtpub.com/product/kicad-like-a-pro-video/9781788629997),
    shows you how to design circuits like the one we created in this chapter.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A good guide for crimping is [https://mschoeffler.com/2017/11/02/tutorial-how-to-crimp-dupontmini-pv-connectors-engineer-pa-09-connector-pliers/](https://mschoeffler.com/2017/11/02/tutorial-how-to-crimp-dupontmini-pv-connectors-engineer-pa-09-connector-pliers/).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The following Adafruit Collin’s Lab crimping video may also be beneficial to
    you: [https://youtu.be/_zl28E2urEU](https://youtu.be/_zl28E2urEU).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
