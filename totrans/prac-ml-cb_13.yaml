- en: Chapter 13. Case Study - Pricing Reinsurance Contracts
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Reinsurance, as the name implies, has developed from insurance business and
    the extent of its use will depend not only upon the amount but also upon the characteristics
    of the risks to be underwritten by the direct insurer. The volume of reinsurance
    business which can be transacted depends primarily upon the volume of direct business
    available at any given time. The idea of reinsurance is rooted in the same human
    instinct that brought insurance into being, that is, the desire that the loss
    of one shall be shared by many.
  prefs: []
  type: TYPE_NORMAL
- en: Pricing reinsurance contracts
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The key objectives of an insurer in arranging reinsurance are inter alia; increasing
    capacity to handle larger risks by passing to the re insurer that part of the
    exposure which would not normally bear, because of financial constraints; enhancing
    ability to accept larger lines than capital allows; stabilizing operating results
    from year to year with the re insurer absorbing larger claims or catastrophe losses;
    increasing the chances making a profit by reinforcing the underwriter’s attempts
    to establish an account which is homogeneous in both size and quality of risk;
    ability to write and new risk exposures. The functions of reinsurance can be considered
    as providing services to protect increased capacity, financial stability, stabilization
    of claims ratio, accumulation of claims under different classes, spread of risks,
    protection of solvency margins and stabilize profits. The reinsurance helps to
    absorb newer risk exposure arising from economic changes, social changes, changes
    in insurance methods and changes caused by scientific development. There are only
    two ways a reinsurance contract can be arranged either by Facultative reinsurance
    one-off for a single policy or Treaty reinsurance automatic for a defined group
    of policies.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In order to carry out the pricing of reinsurance contracts, we shall be using
    a dataset collected on the Hurricane dataset.
  prefs: []
  type: TYPE_NORMAL
- en: Step 1 - collecting and describing the data
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The dataset, available in XLS format, called `publicdatamay2007.xls`, will
    be used. The dataset is in a standard format. There are 207 rows of data. There
    are seven variables. The numeric variables are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '`Year`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Base economic damage`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Normalized PL05`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Normalized CL05`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The non-numeric variables are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '`Hurricane description`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`State`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Category`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Let's get into the details.
  prefs: []
  type: TYPE_NORMAL
- en: Step 2 - exploring the data
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Load up the following packages:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Version info: Code for this page was tested in R version 3.2.2'
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s explore the data and understand the relationships among the variables
    as follows. We''ll begin by importing the XLS data file called `publicdatamay2007.xls`.
    We will be saving the data to the `StormDamageData` data frame:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Printing the `StormDamageData` frame: The `head()` function returns the first
    part of `StormDamageData` frame. The `StormDamageData` data frame is passed as
    an input parameter:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'The result is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Step 2 - exploring the data](img/image_13_001.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The `tail()` function returns the last part of `StormDamageData` frame as follows.
    The `StormDamageData` frame is passed as an input parameter.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'The result is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Step 2 - exploring the data](img/image_13_002.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Exploring the dimension of the `StormDamageData` data frame: The `dim()` function
    returns the dimension of the `StormDamageData` frame. The `StormDamageData` data
    frame is passed as an input parameter. The result clearly states that there are
    207 rows of data and nine columns:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'The result is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Step 2 - exploring the data](img/image_13_003.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Step 3 - calculating the individual loss claims
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Formatting the data: The wrapper function, `ChangeFormat`, eliminates the comma
    (`,`) from the values passed and returns the result as a numeric value:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'Storing the `StormDamageData` data frame in base:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'Calling the wrapper function, `ChangeFormat`: The `Base.Economic.Damage` of
    the `StormDamageData` data frame is passed as an input. The `Vectorize()` function
    creates the wrapper to the function `ChangeFormat()`. The result is then stored
    in the `base$Base.Economic.Damage` data frame:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'Call the wrapper function, `ChangeFormat`: The `Normalized.PL05` of the `StormDamageData`
    data frame is passed as an input. The result is then stored in the `base$ Normalized.PL05`
    data frame:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'Call the wrapper function, `ChangeFormat`: The `Normalized.CL05` of the `StormDamageData`
    data frame is passed as an input. The result is then stored in the `base$ Normalized.CL05`
    data frame:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'Printing the `base` data frame: The `head()` function returns the first part
    of the base data frame. The `base` data frame is passed as an input parameter:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 'The result is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Step 3 - calculating the individual loss claims](img/image_13_004.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Plotting the normalized cost of 207 hurricanes: `plot()` is a generic function.
    `base$Normalized.PL05/1e9` represents the *x* coordinates of the plot. `type="h"`
    represents the histogram representational style. `ylim=c(0,155)` sets the upper
    limit of the y axis representation as 0 as the lower limit and 155 as the upper
    limit. The x axis represents the index of loss:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'The result is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Step 3 - calculating the individual loss claims](img/image_13_005.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Step 4 - calculating the number of hurricanes
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Extracting the year and the frequency of the hurricanes count for each year:
    The base data frame contains the details as shown in the preceding text. `table()`
    uses `base$Year` to build a contingency table of the hurricanes count for each
    year. The result is stored in the `TestBase` data frame:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'Printing the contents of the `TestBase` data frame:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: 'The result is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Step 4 - calculating the number of hurricanes](img/image_13_006.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Extracting the year from the `TestBase` data frame: The `names()` function
    extracts the name of each year. `as.numeric()` converts each of the extracted
    names of the years into a numeric value. The result is stored in the years data
    frame:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: 'Printing the contents of the `years` data frame:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: 'The result is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Step 4 - calculating the number of hurricanes](img/image_13_007.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Extracting the frequency of hurricanes count for each year from the `TestBase` data
    frame: `names()` extracts the frequency of hurricanes count for each year. `as.numeric()`
    converts each of the extracted frequency of hurricanes count into a numeric value.
    The result is stored in the frequency data frame:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: 'Printing the contents of the `frequency` data frame:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: 'The result is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Step 4 - calculating the number of hurricanes](img/image_13_008.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Extracting the frequency of the hurricanes count for each year where there
    were no hurricane occurrences from the `TestBase` data frame: The result is stored
    in the `years0frequency` data frame:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: 'Printing the contents of the `years0frequency` data frame:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: 'The result is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Step 4 - calculating the number of hurricanes](img/image_13_009.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Extracting all the counts of hurricanes for each year. The result is stored
    in the `StormDamageData` data frame:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: 'Printing the `StormDamageData` data frame. The `head()` function returns the
    first part of the `StormDamageData` data frame. The `StormDamageData` data frame
    is passed as an input parameter:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: 'The result is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Step 4 - calculating the number of hurricanes](img/image_13_010.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Ploting the years and frequency count for hurricanes for each year between
    1900 and 2005: `plot()` is a generic function. years represents the *x* coordinates
    of the plot, while frequency represents the y coordinates of the plot. `type="h"`
    represents the histogram representational style:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: 'The result is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Step 4 - calculating the number of hurricanes](img/image_13_011.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Calculating the mean of the hurricane counts for all the years between 1900
    to 2005:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: 'The result is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Step 4 - calculating the number of hurricanes](img/image_13_012.jpg)'
  prefs: []
  type: TYPE_IMG
- en: On average there have been two hurricanes per year.
  prefs: []
  type: TYPE_NORMAL
- en: Step 5 - building predictive models
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Let's find out the possible linear trend in the hurricane occurrence frequency.
    The `glm()` function is used to fit generalized linear models. `frequency~years`
    defines the formula. `data = StormDamageData` defines the dataset for the formula.
    The `family=poisson(link="identity")` function signifies the Poisson distribution.
  prefs: []
  type: TYPE_NORMAL
- en: 'The `lm()` function is used to fit linear models. `frequency~years` defines
    the formula. `data = StormDamageData` defines the dataset for the formula. Use
    the following commands:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: 'Printing the details of the `LinearTrend`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: 'The result is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Step 5 - building predictive models](img/image_13_013.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Finding out the possible exponential trend in the hurricane occurrence frequency:'
  prefs: []
  type: TYPE_NORMAL
- en: 'The `glm()` function is used to fit generalized linear models. `frequency~years`
    defines the formula. `data = StormDamageData` defines the dataset for the formula.
    The `family=poisson(link="identity")` function signifies the Poisson distribution.
    We do this by using the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: 'Printing the details of `ExpTrend`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: 'The result is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Step 5 - building predictive models](img/image_13_014.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Plotting the years and frequency count for hurricanes for each year between
    `1900` and `2005`: `plot()` is a generic function. years represents the *x* coordinates
    of the plot, while frequency represents the y coordinates of the plot. `type="h"`
    represents the histogram representational style. The `ylim=c(0,6)` function sets
    the upper limit of the *y* axis representation as `0` as the lower limit and `6`
    as the upper limit:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: 'The result is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Step 5 - building predictive models](img/image_13_015.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Predicting the trend for 2014 based on the exponential trend: The `predict()`
    function is used to predict values based on the linear model object. `ExpTrend`
    represents the object of the class inheriting from `lm`. The `newdata = data.frame(years=1890:2030)`
    function represents the data frame in which to look for variables with which to
    predict:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: 'Printing the details of `cpred1`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: 'The result is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Step 5 - building predictive models](img/image_13_016.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Joining the points of `cpred1` with line segments: `lines()` is a generic function
    that takes the value of the `cpred1` data frame as the coordinates of the *y*
    axis and joins the corresponding points with line segments. `1890:2030` represents
    the *x* axis:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
- en: 'The result is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Step 5 - building predictive models](img/image_13_017.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Predicting the trend for 2014 based on the linear trend: The `predict()` function
    is used to predict values based on the linear model object. `LinearTrend` represents
    the object of the class inheriting from `lm`. The `newdata = data.frame(years=1890:2030)`
    function represents the data frame in which to look for variables with which to
    predict:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE32]'
  prefs: []
  type: TYPE_PRE
- en: 'Printing the details of `cpred0`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE33]'
  prefs: []
  type: TYPE_PRE
- en: 'The result is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Step 5 - building predictive models](img/image_13_018.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Joining the points of `cpred0` with line segments: `lines()` is a generic function
    which takes the value of the `cpred0` data frame as coordinates of the *y-*axis
    and joins the corresponding points with line segments. `1890:2030` represents
    the *x*-axis:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE34]'
  prefs: []
  type: TYPE_PRE
- en: 'The result is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Step 5 - building predictive models](img/image_13_019.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Plotting the mean value: `abline()` as a function plots the straight line using
    the mean value of the `StormDamageData$frequency` which is `1.95283`. `h = mean(StormDamageData$frequency)`
    is the *y*-value for horizontal line:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE35]'
  prefs: []
  type: TYPE_PRE
- en: 'The result is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Step 5 - building predictive models](img/image_13_020.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Combine the data frame values for the mean of the `StormDamageData$frequency`,
    `cpred0` and `cpred1`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE36]'
  prefs: []
  type: TYPE_PRE
- en: 'Printing the details of the predictions:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE37]'
  prefs: []
  type: TYPE_PRE
- en: 'The result is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Step 5 - building predictive models](img/image_13_021.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Plotting the points of the predictions on the graph for the year 2014:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE38]'
  prefs: []
  type: TYPE_PRE
- en: 'The result is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Step 5 - building predictive models](img/image_13_022.jpg)'
  prefs: []
  type: TYPE_IMG
- en: It is important to observe that by changing the predictive model there will
    be a change in the premium. With a flat prediction, there are less than two (major)
    hurricanes, but with the exponential trend, there are more than four (major) hurricanes.
  prefs: []
  type: TYPE_NORMAL
- en: Step 6 - calculating the pure premium of the reinsurance contract
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Now we find a suitable model to compute the premium of a reinsurance treaty,
    with a deductible and limited cover. Estimate the tail index using Hill''s tail-index
    estimator as follows. `hill()` is the function for estimating the tail of the
    index of the heavy-tailed data, `base$Normalized.PL05`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE39]'
  prefs: []
  type: TYPE_PRE
- en: 'The result is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Step 6 - calculating the pure premium of the reinsurance contract](img/image_13_023.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The preceding figure shows that the costs of major hurricanes are heavy tailed.
  prefs: []
  type: TYPE_NORMAL
- en: 'Set the threshold of losses above 500 million for the Pareto model as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE40]'
  prefs: []
  type: TYPE_PRE
- en: 'We return an object of the class, `gpd`, representing the fit of a generalized
    Pareto model to excesses over a threshold (0.5) with the following command. The
    dataset is represented by `base$Normalized.PL05/1e9/20`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE41]'
  prefs: []
  type: TYPE_PRE
- en: 'The result is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Step 6 - calculating the pure premium of the reinsurance contract](img/image_13_024.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Calculating the mean of the `base$Normalized.CL05/1e9/20` data frame above
    the threshold value of 0.5:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE42]'
  prefs: []
  type: TYPE_PRE
- en: 'The result is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Step 6 - calculating the pure premium of the reinsurance contract](img/image_13_025.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Given that the loss exceeds 500 million, we can now compute the expected value
    of the reinsurance contract:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Step 6 - calculating the pure premium of the reinsurance contract](img/image_13_026.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '[PRE43]'
  prefs: []
  type: TYPE_PRE
- en: 'Find the mean value of the predictions data frame as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE44]'
  prefs: []
  type: TYPE_PRE
- en: 'The result is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Step 6 - calculating the pure premium of the reinsurance contract](img/image_13_027.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Calculating the mean of the `base$Normalized.PL05/1e9/20` data frame above
    the threshold value of 0.5:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE45]'
  prefs: []
  type: TYPE_PRE
- en: 'The result is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Step 6 - calculating the pure premium of the reinsurance contract](img/image_13_028.jpg)'
  prefs: []
  type: TYPE_IMG
- en: This indicates that each hurricane has a 12.5% chance of costing more than 500
    million for the insurance company.
  prefs: []
  type: TYPE_NORMAL
- en: 'Calculating the expected value of the reinsurance contract:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE46]'
  prefs: []
  type: TYPE_PRE
- en: 'The result is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Step 6 - calculating the pure premium of the reinsurance contract](img/image_13_029.jpg)'
  prefs: []
  type: TYPE_IMG
- en: This indicates that the expected repayment by the reinsurance company is about
    330.9865 million.
  prefs: []
  type: TYPE_NORMAL
- en: 'Calculating the premium of the reinsurance contract:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE47]'
  prefs: []
  type: TYPE_PRE
- en: 'The result is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Step 6 - calculating the pure premium of the reinsurance contract](img/image_13_030.jpg)'
  prefs: []
  type: TYPE_IMG
