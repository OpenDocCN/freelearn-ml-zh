["```py\nimport pandas as pd\nimport numpy as np\nimport warnings\nimport pickle\nfrom math import sqrt\nwarnings.filterwarnings('ignore')\nfrom azureml.core.run import Run\nfrom azureml.core.experiment import Experiment\nfrom azureml.core.workspace import Workspace\nfrom azureml.core.model import Model\n# Connect to Workspace\nws = Workspace.from_config()\nprint(ws)\n# Load Scaler and model to test\nscaler = Model(ws,'scaler').download(exist_ok=True)\nsvc_model = Model(ws,'support-vector-classifier').download(exist_ok=True)\n```", "```py\nwith open('scaler.pkl', 'rb') as file:\n    scaler = pickle.load(file)\n# Compute the prediction with ONNX Runtime\nimport onnxruntime as rt\nimport numpy\nsess = rt.InferenceSession(\"svc.onnx\")\ninput_name = sess.get_inputs()[0].name\nlabel_name = sess.get_outputs()[0].name\n```", "```py\ntest_data = np.array([34.927778, 0.24, 7.3899, 83, 16.1000, 1])\ntest_data = scaler.fit_transform(test_data.reshape(1, 6))\n# Inference \npred_onx = sess.run([label_name], {input_name: test_data.astype(numpy.float32)})[0]\nprint(pred_onx[0])\n```"]