- en: '11'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '11'
- en: Avoiding and Detecting Data and Concept Drifts
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 避免和检测数据和相关漂移
- en: We talked about the effect of data and concept drifts in machine learning modeling
    in [*Chapter 9*](B16369_09.xhtml#_idTextAnchor261), *Testing and Debugging for
    Production*. In this chapter, we want to go deeper into these concepts and practice
    detecting drifts in Python.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在[*第9章*](B16369_09.xhtml#_idTextAnchor261) *生产测试和调试*中讨论了数据和相关漂移在机器学习建模中的影响。在本章中，我们想要更深入地探讨这些概念，并在Python中练习检测漂移。
- en: Here, you will learn about the importance of concepts we introduced earlier,
    such as model versioning and model monitoring, to avoid drifts and practice with
    some of the Python libraries for drift detection.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，你将了解我们之前介绍的概念的重要性，例如模型版本控制和模型监控，以避免漂移，并练习使用一些用于漂移检测的Python库。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Avoiding drifts in your models
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 避免模型中的漂移
- en: Detecting drifts
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 漂移检测
- en: By the end of this chapter, you will be able to detect drifts in your machine
    learning models in Python and have reliable models in production.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 到本章结束时，你将能够在Python中检测你的机器学习模型中的漂移，并在生产中拥有可靠的模型。
- en: Technical requirements
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'The following requirements apply to this chapter as they help you better understand
    the concepts, allow you to use them in your projects, and to practice with the
    provided code:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 以下要求适用于本章，因为它们有助于你更好地理解这些概念，让你能够在项目中使用它们，并使用提供的代码进行练习：
- en: 'Python library requirements are as follows:'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python库需求如下：
- en: '`sklearn` >= 1.2.2'
  id: totrans-11
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sklearn` >= 1.2.2'
- en: '`numpy` >= 1.22.4'
  id: totrans-12
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`numpy` >= 1.22.4'
- en: '`pandas` >= 1.4.4'
  id: totrans-13
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pandas` >= 1.4.4'
- en: '`alibi_detect` >= 0.11.1'
  id: totrans-14
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`alibi_detect` >= 0.11.1'
- en: '`lightgbm` >= 3.3.5'
  id: totrans-15
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`lightgbm` >= 3.3.5'
- en: '`evidently` >= 0.2.8'
  id: totrans-16
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`evidently` >= 0.2.8'
- en: 'Understanding of the following is required:'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 需要理解以下内容：
- en: Data and concept drift
  id: totrans-18
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据和相关漂移
- en: Data and model versioning
  id: totrans-19
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据和模型版本控制
- en: You can find the code files for this chapter on GitHub at [https://github.com/PacktPublishing/Debugging-Machine-Learning-Models-with-Python/tree/main/Chapter11](https://github.com/PacktPublishing/Debugging-Machine-Learning-Models-with-Python/tree/main/Chapter11).
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在GitHub上找到本章的代码文件：[https://github.com/PacktPublishing/Debugging-Machine-Learning-Models-with-Python/tree/main/Chapter11](https://github.com/PacktPublishing/Debugging-Machine-Learning-Models-with-Python/tree/main/Chapter11)。
- en: Avoiding drifts in your models
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 避免模型中的漂移
- en: 'Data and concept drifts challenge the reliability of machine learning models
    in production. Drifts in our machine learning projects can have different characteristics.
    Some of these characteristics that could help you to detect drifts in your projects
    and plan to resolve them are as follows:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 数据和相关漂移挑战了机器学习模型在生产中的可靠性。我们机器学习项目中的漂移可能具有不同的特征。以下是一些可以帮助你在项目中检测漂移并计划解决它们的特征：
- en: '**Magnitude**: We might face magnitudes of difference across the data distribution
    that result in drift in our machine learning models. Small changes in the data
    distribution may be difficult to detect, while large changes may be more noticeable.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**幅度**：我们可能会面对数据分布中的差异幅度，导致我们的机器学习模型发生漂移。数据分布中的小变化可能难以检测，而大变化可能更明显。'
- en: '**Frequency**: Drifts might occur in different frequencies.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**频率**：漂移可能以不同的频率发生。'
- en: '**Gradual versus sudden**: Data drift can occur gradually where changes in
    the data distribution happen slowly over time, or it can occur suddenly where
    changes happen quickly and unexpectedly.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**渐进与突然**：数据漂移可能逐渐发生，数据分布的变化在时间上缓慢发生，或者可能突然发生，变化快速且出乎意料。'
- en: '**Predictability**: Some types of drift may be predictable, such as changes
    that occur seasonally or due to external events. Other types of drift may be unpredictable,
    such as sudden changes in consumer behavior or market trends.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可预测性**：某些类型的漂移可能是可预测的，例如季节性变化或由于外部事件引起的变化。其他类型的漂移可能是不可预测的，例如消费者行为或市场趋势的突然变化。'
- en: '**Intentionality**: Drift can be intentional, such as changes made to the data
    generation process, or unintentional, such as changes that occur naturally over
    time.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**意图性**：漂移可能是故意的，例如对数据生成过程所做的更改，或者无意的，例如随着时间的推移自然发生的变化。'
- en: We need to use techniques and practices that help us avoid the occurrence and
    pile-up of drifts in our machine learning modeling projects.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要使用帮助我们在机器学习建模项目中避免漂移发生和累积的技术和实践。
- en: Avoiding data drift
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 避免数据漂移
- en: Having access to different versions of the data in different stages of the machine
    learning life cycle of our models can help us to better detect drift by comparing
    the data in training and production, assessing data processing pre-training, or
    identifying data selection criteria that could have caused drift. Model monitoring
    also helps us to identify drifts early on and avoid pile-up.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在机器学习生命周期的不同阶段访问我们模型的不同数据版本可以帮助我们通过比较训练和生产的数据、评估预处理数据处理或识别可能导致漂移的数据选择标准来更好地检测漂移。模型监控还有助于我们尽早识别漂移并避免累积。
- en: 'Let’s practice drift monitoring by simply checking the mean of the distribution
    of features between versions of data used for model training, and the new data
    in production. We will first define a class to monitor for data drift. Here, we
    consider drift in a feature if the difference between the mean of the distributions
    between the two versions of the data is bigger than 0.1:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过简单地检查用于模型训练的数据版本之间的特征分布的均值，以及生产中的新数据来练习漂移监控。我们首先定义一个用于监控数据漂移的类。在这里，我们假设如果两个数据版本之间的分布均值之差大于0.1，则认为特征发生了漂移：
- en: '[PRE0]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Then, we use it to identify drift between two synthetic datasets:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们使用它来识别两个合成数据集之间的漂移：
- en: '[PRE1]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'This generates the following:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 这会产生以下结果：
- en: '[PRE2]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Addressing concept drift
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 应对概念漂移
- en: We can similarly define classes and functions with criteria to detect concept
    drift, as we practiced for data drift detection. But we can also check, either
    programmatically or as part of quality assurance when bringing our machine learning
    models into production, for external factors that might cause concept drift such
    as environmental factors, changes in institutional or governmental policies, et
    cetera. In addition to monitoring the data, we can benefit from feature engineering
    to select features that are more robust to concept drift or ensemble models to
    be adapted dynamically in case of concept drift.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以同样定义具有检测概念漂移标准的类和函数，就像我们练习数据漂移检测那样。但我们还可以检查，无论是通过编程还是作为将我们的机器学习模型投入生产时的质量保证的一部分，外部因素可能导致的漂移，例如环境因素、机构或政府政策的变更等。除了监控数据外，我们还可以从特征工程中受益，选择对概念漂移更鲁棒的特征，或者使用动态适应概念漂移的集成模型。
- en: Although avoiding drift in our models is ideal, we need to be ready to detect
    and eliminate it in practice. Next, you will learn techniques to detect drift
    in your model. From a practical perspective, avoiding and detecting drifts in
    your model are very similar. But there are better techniques than simply checking
    the mean of feature distributions (as we used for avoiding data drift in this
    section) that we will practice in the next section.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然在我们的模型中避免漂移是理想的，但在实践中我们需要准备好检测和消除它。接下来，你将学习检测模型中漂移的技术。从实际的角度来看，避免和检测模型中的漂移非常相似。但比简单地检查特征分布的均值（如我们在本节中用于避免数据漂移）更好的技术，我们将在下一节中练习。
- en: Detecting drifts
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检测漂移
- en: Avoiding drifts altogether in all our models is not possible, but we can aim
    to detect them early on and eliminate them. Here, we are going to practice drift
    detection with `alibi_detect` and `evidently` in Python.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在所有模型中完全避免漂移是不可能的，但我们可以努力尽早检测并消除它们。在这里，我们将通过在Python中使用`alibi_detect`和`evidently`来练习漂移检测。
- en: Practicing with alibi_detect for drift detection
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用alibi_detect进行漂移检测的练习
- en: 'One of the widely-used Python libraries for drift detection that we want to
    practice with is `alibi_detect`. We will first import the necessary Python functions
    and classes and generate a synthetic dataset with 10 features and 10,000 samples
    using `make_classification` from `scikit-learn`:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 我们想要练习的广泛使用的Python库之一是`alibi_detect`。我们首先导入必要的Python函数和类，并使用`scikit-learn`中的`make_classification`生成一个具有10个特征和10,000个样本的合成数据集：
- en: '[PRE3]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Then, we split the data into train and test sets:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们将数据分为训练集和测试集：
- en: '[PRE4]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Then, we train a `LightGBM` classifier on the training data:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们在训练数据上训练一个`LightGBM`分类器：
- en: '[PRE5]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'We now evaluate the performance of the model on the test set and define a test
    label DataFrame to use for drift detection:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们评估模型在测试集上的性能，并定义一个用于漂移检测的测试标签DataFrame：
- en: '[PRE6]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Now, we use the defined DataFrame of predictions and actual labels of the test
    data points to detect drift. We initialize the `KSDrift` detector from the `alibi_detect`
    package and fit it onto the training data. We use the `predict` method of the
    detector to calculate the drift scores and p-values on the test data. The drift
    scores indicate the level of drift for each feature, while the p-values indicate
    the statistical significance of the drift. If any of the drift scores or p-values
    are above a certain threshold, we may consider the model to be experiencing drift
    and take appropriate action, such as retraining the model with updated data:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们使用测试数据点的预测和实际标签定义的 DataFrame 来检测漂移。我们从 `alibi_detect` 包初始化 `KSDrift` 检测器并将其拟合到训练数据上。我们使用检测器的
    `predict` 方法在测试数据上计算漂移分数和 p 值。漂移分数表示每个特征的漂移水平，而 p 值表示漂移的统计显著性。如果任何漂移分数或 p 值超过某个阈值，我们可能认为模型正在经历漂移，并采取适当的行动，例如使用更新后的数据重新训练模型：
- en: '[PRE7]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Here are the resulting drift scores and p-values. As all the p-values are greater
    than 0.1, and considering the threshold is 0.005, we can say that no drift is
    detected in this case:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是生成的漂移分数和 p 值。由于所有 p 值都大于 0.1，并且考虑到阈值是 0.005，我们可以说在这种情况下没有检测到漂移：
- en: '[PRE8]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Practicing with evidently for drift detection
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 `evidently` 进行漂移检测实践
- en: 'Another widely-used Python library for drift detection that we will practice
    with here is `evidently`. After importing the necessary libraries, we load the
    diabetes dataset from `scikit-learn`:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个广泛使用的用于漂移检测的 Python 库，我们将在下面进行实践的是 `evidently`。在导入必要的库之后，我们从 `scikit-learn`
    加载糖尿病数据集：
- en: '[PRE9]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The following table shows the features we want to work on from the diabetes
    dataset for drift detection and their meanings:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表格显示了我们要从糖尿病数据集中用于漂移检测的特征及其含义：
- en: '| **Feature** | **Description** |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '| **特征** | **描述** |'
- en: '| `preg` | Number of times pregnant |'
  id: totrans-60
  prefs: []
  type: TYPE_TB
  zh: '| `preg` | 怀孕次数 |'
- en: '| `plas` | Plasma glucose concentration after 2 hours in an oral glucose tolerance
    test |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '| `plas` | 口服葡萄糖耐量测试 2 小时后的血浆葡萄糖浓度 |'
- en: '| `skin` | Triceps skinfold thickness (mm) |'
  id: totrans-62
  prefs: []
  type: TYPE_TB
  zh: '| `skin` | 三角肌皮肤褶皱厚度（毫米）|'
- en: '| `insu` | 2-hour serum insulin (mu U/ml) |'
  id: totrans-63
  prefs: []
  type: TYPE_TB
  zh: '| `insu` | 2 小时血清胰岛素（微 U/ml）|'
- en: '| `mass` | Body mass index (weight in kg/(height in m)^2) |'
  id: totrans-64
  prefs: []
  type: TYPE_TB
  zh: '| `mass` | 体重指数（千克/(米)^2) |'
- en: '| `pedi` | Diabetes pedigree function |'
  id: totrans-65
  prefs: []
  type: TYPE_TB
  zh: '| `pedi` | 糖尿病家系函数 |'
- en: '| `Age` | Age (years) |'
  id: totrans-66
  prefs: []
  type: TYPE_TB
  zh: '| `Age` | 年龄（年）|'
- en: Table 11.1 – Feature names and their description in diabetes dataset used for
    drift detection (Efron et al., 2004)
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 表 11.1 – 用于漂移检测的糖尿病数据集中特征名称及其描述（Efron 等，2004）
- en: 'We separate two sets of datapoints called reference and current sets, then
    generate a drift report using `Report()` from the `evidently.report.Reference`
    set to include all individuals aged less than or equal to 40 years, and the current
    set to include others in the dataset aged more than 40 years:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将数据点分为两组，称为参考集和当前集，然后使用 `evidently.report.Reference` 集中的 `Report()` 生成漂移报告，包括所有年龄小于或等于
    40 岁的个体，以及当前集包括数据集中年龄大于 40 岁的其他个体：
- en: '[PRE10]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'The following illustration is of the report we generated for the diabetes dataset,
    considering the selected features and separated reference and current sets:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 以下插图是我们为糖尿病数据集生成的报告，考虑了所选特征和分离的参考和当前数据集：
- en: "![Figure 11.1 – Drift report for \uFEFFthe separated reference and current\
    \ data from the diabetes dataset](img/B16369_11_01.jpg)"
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.1 – 糖尿病数据集中分离的参考和当前数据的漂移报告](img/B16369_11_01.jpg)'
- en: Figure 11.1 – Drift report for the separated reference and current data from
    the diabetes dataset
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.1 – 糖尿病数据集中分离的参考和当前数据的漂移报告
- en: 'We can see that `age`, `preg`, `plas`, `insu`, and `skin` are the features
    with significant differences in their distributions between the reference and
    current sets, which are specified as features with detected drift in the report
    shown in *Figure 11**.1*. In spite of the significance of the difference between
    the distributions, having complementary statistics such as difference of mean
    could be helpful to develop a more reliable drift detection strategy. We can also
    get the distribution of the features from the report, such as the distributions
    of `age` and `preg` in the reference and current sets in *Figures 11.2* and*11.3*,
    respectively:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到，`age`、`preg`、`plas`、`insu`和`skin`是参考集和当前集中分布差异显著的特性，这些特性在*图11.1*所示的报告中指定为检测到漂移的特征。尽管分布之间的差异很重要，但拥有如均值差异这样的补充统计数据可能有助于开发更可靠的漂移检测策略。我们还可以从报告中获取特征的分布，例如*图11.2*和*11.3*中分别显示的`age`和`preg`在参考集和当前集中的分布：
- en: "![Figure 11.2 – Distribution of \uFEFFthe age feature in both current and reference\
    \ data](img/B16369_11_02.jpg)"
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![图11.2 – 当前和参考数据中age特征的分布](img/B16369_11_02.jpg)'
- en: Figure 11.2 – Distribution of the age feature in both current and reference
    data
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.2 – 当前和参考数据中age特征的分布
- en: "![Figure 11.3 – Distribution of \uFEFFthe preg feature in both current and\
    \ reference data](img/B16369_11_03.jpg)"
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![图11.3 – 当前和参考数据中preg特征的分布](img/B16369_11_03.jpg)'
- en: Figure 11.3 – Distribution of the preg feature in both current and reference
    data
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.3 – 当前和参考数据中preg特征的分布
- en: When we detect drifts in our models, we might need to retrain them by ingesting
    new data or by filtering part of the data that might be the source of the drift.
    We might also need to change model training if concept drift is detected.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们在模型中检测到漂移时，我们可能需要通过摄取新数据或过滤可能引起漂移的部分数据来重新训练它们。如果检测到概念漂移，我们还可能需要更改模型训练。
- en: Summary
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: 'In this chapter, you learned about the importance of avoiding drift in your
    machine learning models, and how you can benefit from the concepts you learned
    in previous chapters such as model versioning and monitoring to do so. You also
    practiced with two libraries for drift detection in Python: `alibi_detect` and
    `evidently`. Using these or similar libraries will help you to eliminate drift
    in your models and have reliable models in production.'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你了解了避免机器学习模型中漂移的重要性，以及如何通过使用你在前几章中学到的概念（如模型版本化和监控）来从中受益。你还练习了两个用于Python中漂移检测的库：`alibi_detect`和`evidently`。使用这些或类似的库将有助于你在模型中消除漂移，并在生产中拥有可靠的模型。
- en: In the next chapter, you will learn about different types of deep neural network
    models and how to use PyTorch to develop reliable deep learning models.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，你将了解不同类型的深度神经网络模型以及如何使用PyTorch开发可靠的深度学习模型。
- en: Questions
  id: totrans-82
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: Could you explain the difference between magnitude and frequency as two characteristics
    of drift in machine learning modeling?
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你能解释一下在机器学习建模中，漂移的两个特征——幅度和频率之间的区别吗？
- en: What is an example of a statistical test we can use for data drift detection?
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以使用哪种统计测试来检测数据漂移？
- en: References
  id: totrans-85
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考文献
- en: Ackerman, Samuel, et al. “*Detection of data drift and outliers affecting machine
    learning model performance over time*.” arXiv preprint arXiv:2012.09258 (2020).
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ackerman, Samuel, 等人。“*检测影响机器学习模型性能随时间变化的数据漂移和异常值*。”arXiv预印本arXiv:2012.09258（2020）。
- en: Ackerman, Samuel, et al. “*Automatically detecting data drift in machine learning
    classifiers*.” arXiv preprint arXiv:2111.05672 (2021).
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ackerman, Samuel, 等人。“*自动检测机器学习分类器中的数据漂移*。”arXiv预印本arXiv:2111.05672（2021）。
- en: Efron, Bradley, Trevor Hastie, Iain Johnstone, and Robert Tibshirani (2004)
    “*Least Angle Regression*,” Annals of Statistics (with discussion), 407-499
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Efron, Bradley, Trevor Hastie, Iain Johnstone, 和 Robert Tibshirani（2004）“*最小角度回归*，”统计年鉴（附带讨论），407-499
- en: 'Gama, João, et al. “*A survey on concept drift adaptation*.” ACM computing
    surveys (CSUR) 46.4 (2014): 1-37.'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Gama, João, 等人。“*概念漂移适应的调查*。”ACM计算调查（CSUR）46.4（2014）：1-37。
- en: 'Lu, Jie, et al. “*Learning under concept drift: A review*.” IEEE transactions
    on knowledge and data engineering 31.12 (2018): 2346-2363.'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Lu, Jie, 等人。“*在概念漂移下的学习：综述*。”IEEE知识数据工程杂志31.12（2018）：2346-2363。
- en: 'Mallick, Ankur, et al. “*Matchmaker: Data drift mitigation in machine learning
    for large-scale systems*.” Proceedings of Machine Learning and Systems 4 (2022):
    77-94.'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Mallick, Ankur, 等人。“*Matchmaker：在机器学习中为大规模系统减轻数据漂移*。”机器学习和系统会议论文集4（2022）：77-94。
- en: 'Zenisek, Jan, Florian Holzinger, and Michael Affenzeller. “*Machine learning
    based concept drift detection for predictive maintenance*.” Computers & Industrial
    Engineering 137 (2019): 106031.'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Zenisek, Jan, Florian Holzinger, 和 Michael Affenzeller. “*基于机器学习的概念漂移检测用于预测性维护*。”
    计算机与工业工程 137 (2019): 106031。'
- en: Part 4:Deep Learning Modeling
  id: totrans-93
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第4部分：深度学习建模
- en: In this part of the book, we will lay the foundation with an introduction to
    the underlying theories of deep learning, and then transition to hands-on exploration
    of fully connected neural networks. We will then learn about more advanced techniques
    including convolutional neural networks, transformers, and graph neural networks.
    Concluding this part, we will spotlight the cutting-edge advancements in machine
    learning, with a keen focus on generative modeling and an introduction to reinforcement
    and self-supervised learning. Throughout these chapters, practical examples are
    provided using Python and PyTorch, ensuring that we gain both theoretical knowledge
    as well as hands-on experience.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书的这一部分，我们将通过介绍深度学习的底层理论来奠定基础，然后过渡到对全连接神经网络的动手探索。接着，我们将学习更高级的技术，包括卷积神经网络、转换器和图神经网络。在本部分的结尾，我们将聚焦于机器学习的尖端进展，特别关注生成建模，并介绍强化学习和自监督学习。在这些章节中，我们将通过Python和PyTorch提供实际示例，确保我们既获得理论知识，也获得实践经验。
- en: 'This part has the following chapters:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 本部分包含以下章节：
- en: '[*Chapter 12*](B16369_12.xhtml#_idTextAnchor320), *Going Beyond ML Debugging
    with Deep Learning*'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第12章*](B16369_12.xhtml#_idTextAnchor320), *超越机器学习调试的深度学习*'
- en: '[*Chapter 13*](B16369_13.xhtml#_idTextAnchor342), *Advanced Deep Learning Techniques*'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第13章*](B16369_13.xhtml#_idTextAnchor342), *高级深度学习技术*'
- en: '[*Chapter 14*](B16369_14.xhtml#_idTextAnchor379), *Introduction to Recent Advancements
    in Machine Learning*'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第14章*](B16369_14.xhtml#_idTextAnchor379), *机器学习最新进展简介*'
