["```py\n$ git submodule update --remote ouster_example_cartographer\n```", "```py\n      Frames:\n        All Enabled: true\n        base_link:\n          Value: true\n        map:\n          Value: true\n        odom:\n          Value: true\n        os:\n          Value: true\n        os_imu:\n          Value: true\n```", "```py\n      Tree:\n        map:\n          odom:\n            base_link:\n              os:\n                {}\n              os_imu:\n                {}\n```", "```py\nClass: rviz/RobotModel\n      Collision Enabled: false\n      Enabled: true\n      Links:\n        All Links Enabled: true\n        Expand Joint Details: false\n        Expand Link Details: false\n        Expand Tree: false\n        Link Tree Style: Links in Alphabetic Order\n        base_link:\n          Alpha: 1\n          Show Axes: false\n          Show Trail: false\n        os:\n          Alpha: 1\n          Show Axes: false\n          Show Trail: false\n          Value: true\n        os_imu:\n          Alpha: 1\n          Show Axes: false\n          Show Trail: false\n          Value: true\n```", "```py\n      Name: PointCloud2\n      Position Transformer: XYZ\n      Queue Size: 200\n      Selectable: true\n      Size (Pixels): 3\n      Size (m): 0.029999999329447746\n      Style: Flat Squares\n      Topic: /os_cloud_node/points\n```", "```py\noptions = {\n  map_builder = MAP_BUILDER,\n  trajectory_builder = TRAJECTORY_BUILDER,\n  map_frame = \"map\",\n  tracking_frame = \"os_imu\",\n  published_frame = \"base_link\",\n  odom_frame = \"base_link\",\n  provide_odom_frame = false,\n  publish_frame_projected_to_2d = false,\n  use_odometry = false,\n  use_nav_sat = false,\n  use_landmarks = false,\n  num_laser_scans = 0,\n  num_multi_echo_laser_scans = 0,\n  num_subdivisions_per_laser_scan = 1,\n  num_point_clouds = 1,\n  lookup_transform_timeout_sec = 0.2,\n  submap_publish_period_sec = 0.3,\n  pose_publish_period_sec = 5e-3,\n  trajectory_publish_period_sec = 30e-3,\n  rangefinder_sampling_ratio = 1.,\n  odometry_sampling_ratio = 1.,\n  fixed_frame_pose_sampling_ratio = 1.,\n  imu_sampling_ratio = 1.,\n  landmarks_sampling_ratio = 1.,\n}\n```", "```py\n  <joint name=\"sensor_link_joint\" type=\"fixed\">\n    <parent link=\"base_link\" />\n    <child link=\"os_sensor\" />\n    <origin xyz=\"0 0 0\" rpy=\"0 0 0\" />\n  </joint>\n  <joint name=\"imu_link_joint\" type=\"fixed\">\n    <parent link=\"os_sensor\" />\n    <child link=\"os_imu\" />\n    <origin xyz=\"0.006253 -0.011775 0.007645\" rpy=\"0 0 0\" />\n  </joint>\n  <joint name=\"os1_link_joint\" type=\"fixed\">\n    <parent link=\"os_sensor\" />\n    <child link=\"os_lidar\" />\n    <origin xyz=\"0.0 0.0 0.03618\" rpy=\"0 0 3.14159\" />\n  </joint>\n```", "```py\n    <remap from=\"points2\" to=\"/os_cloud_node/points\" />\n    <remap from=\"imu\" to=\"/os_cloud_node/imu\" />\n```", "```py\n  tracking_frame = \"os_imu\",\n  pipeline = {\n    {\n      action = \"min_max_range_filter\",\n      min_range = 1.,\n      max_range = 60.,\n    },\n```", "```py\n$ ./install-docker.sh \n```", "```py\n$ docker –version\n```", "```py\n# Stop docker before running 'sudo dockerd --add-runtime=nvidia=/usr/bin/nvidia-container-runtime'\n$ sudo systemctl stop docker\n# Change mode of docker.sock if you have a permission issue\n$ sudo chmod 666 /var/run/docker.sock\n# Add the nvidia runtime to allow docker to use nvidia GPU\n# This needs to be run in a separate shell from run-docker.sh\n$ sudo dockerd --add-runtime=nvidia=/usr/bin/nvidia-container-runtime\n```", "```py\n$ ./run-docker.sh\n```", "```py\n$ mkdir /root/bags\n$ cd /root/bags\n$ curl -O https://data.ouster.io/downloads/os1_townhomes_cartographer.zip\n$ unzip /root/bags/os1_townhomes_cartographer.zip -d /root/bags/\n```", "```py\n$ source /root/catkin_ws/devel/setup.bash\n```", "```py\n$ rosrun cartographer_ros cartographer_rosbag_validate -bag_filename /root/bags/os1_townhomes_cartographer.bag\n```", "```py\n$ cd /root/catkin_ws/src/ouster_example_cartographer/cartographer_ros/launch\n```", "```py\n$ roslaunch offline_cart_3d.launch bag_filenames:=/root/bags/os1_townhomes_cartographer.bag\n```", "```py\n$ roslaunch assets_writer_cart_3d.launch bag_filenames:=/root/bags/os1_townhomes_cartographer.bag  pose_graph_filename:=/root/bags/os1_townhomes_cartographer.bag.pbstream\n```", "```py\n$ xdg-open os1_townhomes_cartographer.bag_xray_xy_all.png\n```", "```py\n$ xdg-open os1_townhomes_cartographer.bag_probability_grid.png\n```"]