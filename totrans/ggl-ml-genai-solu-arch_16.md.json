["```py\n    conda create --name bigframes-env -y\n    ```", "```py\n    conda activate bigframes-env\n    ```", "```py\n    conda install bigframes -y\n    ```", "```py\n    conda install jupyterlab -y\n    ```", "```py\n    sed -i 's/\"display_name\": \"Python 3 (ipykernel)\"/\"display_name\": \"Python 3 (bigframes)\"/' /opt/conda/envs/bigframes-env/share/jupyter/kernels/python3/kernel.json\n    ```", "```py\n    wget https://raw.githubusercontent.com/PacktPublishing/Google-Machine-Learning-for-Solutions-Architects/main/Chapter-14/data/data_processed_titanic_part.snappy.parquet\n    wget https://raw.githubusercontent.com/PacktPublishing/Google-Machine-Learning-for-Solutions-Architects/main/Chapter-14/pyspark-ml.py\n    ```", "```py\n    gsutil cp pyspark-ml.py gs://[YOUR-BUCKET-NAME] /code/additional-use-cases-chapter/pyspark-ml.py\n    gsutil cp *.parquet gs://[YOUR-BUCKET-NAME]/data/processed/mlops-titanic\n    ```", "```py\nCREATE OR REPLACE MODEL `my_dataset.my_model_name`\nOPTIONS(model_type = 'linear_reg', input_label_cols=['target_column']) AS\nSELECT * FROM `my_dataset.my_table`;\n```", "```py\nSELECT * FROM ML.EVALUATE(MODEL `my_dataset.my_model_name`, \nTABLE `my_dataset.my_evaluation_table`);\n```", "```py\nSELECT * FROM ML.PREDICT(MODEL `my_dataset.my_model_name`, \nTABLE `my_dataset.my_input_table`);\n```"]