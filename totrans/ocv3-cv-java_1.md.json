["```py\ngit clone git://github.com/Itseez/opencv.git\ncd opencv\ngit checkout 3.0.0-rc1\nmkdir build\ncd build\n\n```", "```py\nsudo apt-get install build-essential cmake git libgtk2.0-dev pkg-config libavcodec-dev libavformat-dev libswscale-dev python-dev python-numpy libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev libjasper-dev libdc1394-22-dev ant\n\n```", "```py\ncmake -DBUILD_SHARED_LIBS=OFF\n\n```", "```py\ncmake -DBUILD_SHARED_LIBS=OFF -G \"Visual Studio 10\"\n\n```", "```py\ncmake -DBUILD_SHARED_LIBS=OFF -G \"MinGW Makefiles\"\n\n```", "```py\nmsbuild /m OpenCV.sln /t:Build /p:Configuration=Release /v:m\n\n```", "```py\nmake -j8\n\n```", "```py\nimport org.opencv.core.Core;\nimport org.opencv.core.Mat;\nimport org.opencv.core.CvType;\nimport org.opencv.core.Scalar;\n\nclass SimpleSample {\n\n  static{ System.loadLibrary(Core.NATIVE_LIBRARY_NAME); }\n\n  public static void main(String[] args) {\n    System.out.println(\"Welcome to OpenCV \" + Core.VERSION);\n    Mat m = new Mat(5, 10, CvType.CV_8UC1, new Scalar(0));\n    System.out.println(\"OpenCV Mat: \" + m);\n    Mat mr1 = m.row(1);\n    mr1.setTo(new Scalar(1));\n    Mat mc5 = m.col(5);\n    mc5.setTo(new Scalar(5));\n    System.out.println(\"OpenCV Mat data:\\n\" + m.dump());\n  }\n\n}\n```", "```py\nWelcome to OpenCV 3.0.0-rc1\nOpenCV Mat: Mat [ 5*10*CV_8UC1, isCont=true, isSubmat=false, nativeObj=0x2291b70, dataAddr=0x229bbd0 ]\nOpenCV Mat data:\n[ 0, 0, 0, 0, 0, 5, 0, 0, 0, 0;\n 1, 1, 1, 1, 1, 5, 1, 1, 1, 1;\n 0, 0, 0, 0, 0, 5, 0, 0, 0, 0;\n 0, 0, 0, 0, 0, 5, 0, 0, 0, 0;\n 0, 0, 0, 0, 0, 5, 0, 0, 0, 0]\n\n```", "```py\n<project name=\"SimpleSample\" basedir=\".\" default=\"rebuild-run\">\n    <property name=\"src.dir\"     value=\"src\"/>\n    <property name=\"lib.dir\"     value=\"${ocvJarDir}\"/>\n    <path id=\"classpath\">\n        <fileset dir=\"${lib.dir}\" includes=\"**/*.jar\"/>\n    </path>\n    <property name=\"build.dir\"   value=\"build\"/>\n    <property name=\"classes.dir\" value=\"${build.dir}/classes\"/>\n    <property name=\"jar.dir\"     value=\"${build.dir}/jar\"/>\n    <property name=\"main-class\"  value=\"${ant.project.name}\"/>\n\n    <target name=\"clean\">\n        <delete dir=\"${build.dir}\"/>\n    </target>\n\n    <target name=\"compile\">\n        <mkdir dir=\"${classes.dir}\"/>\n        <javac includeantruntime=\"false\" srcdir=\"${src.dir}\" destdir=\"${classes.dir}\" classpathref=\"classpath\"/>\n    </target>\n\n    <target name=\"jar\" depends=\"compile\">\n        <mkdir dir=\"${jar.dir}\"/>\n        <jar destfile=\"${jar.dir}/${ant.project.name}.jar\" basedir=\"${classes.dir}\">\n            <manifest>\n                <attribute name=\"Main-Class\" value=\"${main-class}\"/>\n            </manifest>\n        </jar>\n    </target>\n\n    <target name=\"run\" depends=\"jar\">\n        <java fork=\"true\" classname=\"${main-class}\">\n            <sysproperty key=\"java.library.path\" path=\"${ocvLibDir}\"/>\n            <classpath>\n                <path refid=\"classpath\"/>\n                <path location=\"${jar.dir}/${ant.project.name}.jar\"/>\n            </classpath>\n        </java>\n    </target>\n\n    <target name=\"rebuild\" depends=\"clean,jar\"/>\n\n    <target name=\"rebuild-run\" depends=\"clean,run\"/>\n\n</project>\n```", "```py\nant -DocvJarDir=path/to/dir/containing/opencv-300.jar -DocvLibDir=path/to/dir/containing/opencv_java300/native/library\n\n```", "```py\nant -DocvJarDir=X:\\opencv3.0.0\\opencv\\build\\java -DocvLibDir=X:\\opencv3.00\\opencv\\build\\java\\x64\n\n```", "```py\n    mvn archetype:generate -DgroupId=com.mycompany.app -DartifactId=my-opencv-app -DarchetypeArtifactId=maven-archetype-quickstart -DinteractiveMode=false\n\n    ```", "```py\n    my-opencv-app\n    |-- pom.xml\n    `-- src\n        |-- main\n        |   `-- java\n        |       `-- com\n        |           `-- company\n        |               `-- app\n        |                   `-- App.java\n        `-- test\n            `-- java\n                `-- com\n                    `-- company\n                        `-- app\n                            `-- AppTest.java\n    ```", "```py\n    <project  \n      xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">  \n\n      <repositories>\n        <repository>\n          <id>javaopencvbook</id>\n          <url>https://raw.github.com/JavaOpenCVBook/code/maven2/</url>\n        </repository>\n     </repositories>\n\n     <modelVersion>4.0.0</modelVersion>\n    â€¦\n    </project>\n    ```", "```py\n    <dependencies>\n      <dependency>\n        <groupId>junit</groupId>\n        <artifactId>junit</artifactId>\n        <version>3.8.1</version>\n        <scope>test</scope>\n      </dependency>\n      <dependency>\n        <groupId>org.javaopencvbook</groupId>\n        <artifactId>opencvjar</artifactId>\n        <version>3.0.0</version>\n      </dependency>\n      <dependency>\n        <groupId>org.javaopencvbook</groupId>\n        <artifactId>opencvjar-runtime</artifactId>\n        <version>3.0.0</version>\n        <classifier>natives-windows-x86_64</classifier>\n      </dependency>\n    </dependencies>\n    ```", "```py\n    <build>\n      <plugins>\n        <plugin>\n          <artifactId>maven-jar-plugin</artifactId>\n          <version>2.4</version>\n          <configuration>\n            <archive>\n              <manifest>\n                <addClasspath>true</addClasspath>\n                <classpathPrefix>lib/</classpathPrefix>\n                <mainClass>com.mycompany.app.App</mainClass>\n              </manifest>\n            </archive>\n          </configuration>\n        </plugin>\n        <plugin>\n          <groupId>org.apache.maven.plugins</groupId>\n          <artifactId>maven-dependency-plugin</artifactId>\n          <version>2.1</version>\n          <executions>\n            <execution>\n              <id>copy-dependencies</id>\n              <phase>package</phase>\n              <goals>\n                <goal>copy-dependencies</goal>\n              </goals>\n              <configuration>\n                <outputDirectory>${project.build.directory}/lib</outputDirectory>\n                <overWriteReleases>false</overWriteReleases>\n                <overWriteSnapshots>false</overWriteSnapshots>\n                <overWriteIfNewer>true</overWriteIfNewer>\n              </configuration>\n            </execution>\n          </executions>\n        </plugin>\n        <plugin>\n          <groupId>com.googlecode.mavennatives</groupId>\n          <artifactId>maven-nativedependencies-plugin</artifactId>\n          <version>0.0.7</version>\n          <executions>\n            <execution>\n              <id>unpacknatives</id>\n              <phase>generate-resources</phase>\n              <goals>\n                <goal>copy</goal>\n              </goals>\n            </execution>\n          </executions>\n        </plugin>\n      </plugins>\n    </build>\n    ```", "```py\n    mvn package\n\n    ```", "```py\n    package com.mycompany.app;\n\n    import org.opencv.core.Core;\n    import org.opencv.core.Mat;\n    import org.opencv.core.CvType;\n    import org.opencv.core.Scalar;\n\n    public class App\n    {\n      static{ System.loadLibrary(Core.NATIVE_LIBRARY_NAME); }\n\n      public static void main(String[] args) {\n        System.out.println(\"Welcome to OpenCV \" + Core.VERSION);\n        Mat m = new Mat(5, 10, CvType.CV_8UC1, new Scalar(0));\n        System.out.println(\"OpenCV Mat: \" + m);\n        Mat mr1 = m.row(1);\n        mr1.setTo(new Scalar(1));\n        Mat mc5 = m.col(5);\n        mc5.setTo(new Scalar(5));\n        System.out.println(\"OpenCV Mat data:\\n\" + m.dump());\n      }\n    }\n    ```", "```py\n    mvn package\n\n    ```", "```py\n    D:\\mvnopencv\\my-opencv-app>java   -Djava.library.path=target\\natives -jar target\\my-opencv-app-1.0-SNAPSHOT.jar\n\n    ```", "```py\n    mvn eclipse:eclipse\n\n    ```", "```py\nmvn install:install-file -Dfile=opencvjar-3.0.0.jar -DgroupId=opencvjar -DartifactId=opencvjar -Dversion=3.0.0 -Dpackaging=jar\n\n```", "```py\nmvn install:install-file -Dfile=opencvjar -runtime-natives-linux-x86.jar -DgroupId=opencvjar -DartifactId=opencvjar-runtime -Dversion=3.0.0 -Dpackaging=jar -Dclassifier=natives-linux-x86\n\n```"]