["```py\n> wbclust=read.csv(\"d:/WBClust2013.csv\",header=T)\n\n```", "```py\n> head(wbclust)\n\n```", "```py\n > wbnorm <- scale(wbclust[,2:13])\n > wbnorm\n\n```", "```py\n > rownames(wbnorm)=wbclust[,1]\n > rownames(wbnorm)\n\n```", "```py\n> dist1 <- dist(wbnorm, method=\"euclidean\")\n\n```", "```py\n > clust1 <- hclust(dist1,method=\"ward.D\")\n > clust1\n\n```", "```py\n> plot(clust1,labels= wbclust$Country, cex=0.7, xlab=\"\",ylab=\"Distance\",main=\"Clustering for 80 Most Populous Countries\")\n\n```", "```py\n> rect.hclust(clust1,k=5)\n\n```", "```py\n > cuts=cutree(clust1,k=5)\n > cuts\n\n```", "```py\nfor (i in 1:5){\n print(paste(\"Countries in Cluster \",i))\n print(wbclust$Country[cuts==i])\n print (\" \")\n}\n\n```", "```py\n> NASA = read.csv(\"d:/NASAU   nderstory.csv\",header=T)\n\n```", "```py\n *>* NASA.lab=NASA$Labels\n\n```", "```py\n> NASA=NASA[,-32]\n\n```", "```py\n> NASA\n\n```", "```py\n> NASAscale <- scale(NASA[,3:31])\n\n```", "```py\n> NASAscale\n\n```", "```py\n> rownames(NASAscale)=as.factor(NASA$Overstory.Species) \n\n```", "```py\n> rownames(NASAscale)\n\n```", "```py\n> dist1 <- dist(NASAscale, method=\"euclidean\")\n\n```", "```py\n > clust1 <- hclust(dist1,method=\"ward.D\")\n > clust1\n\n```", "```py\n> plot(clust1,labels= NASA[,2], cex=0.5, xlab=\"\",ylab=\"Distance\",main=\"Clustering for NASA Understory Data\")\n\n```", "```py\n> rect.hclust(clust1,k=2)\n\n```", "```py\n > cuts=cutree(clust1,k=2)\n > cuts\n\n```", "```py\n> library(vegan)\n\n```", "```py\n> dist1 <- vegdist(NASA[,3:31], method=\"jaccard\", upper=T)\n\n```", "```py\n > clust1 <- hclust(dist1,method=\"ward.D\")\n > clust1\n\n```", "```py\n> plot(clust1,labels= NASA[,2], cex=0.5, xlab=\"\",ylab=\"Distance\",main=\"Clustering for NASA Understory Data\")\n\n```", "```py\n> rect.hclust(clust1,k=2)\n\n```", "```py\n > cuts=cutree(clust1,k=2)\n > cuts\n\n```", "```py\n> clusplot(NASA, cuts, color=TRUE, shade=TRUE, labels=2, lines=0,  main=\"NASA Two Cluster  Plot, Ward's Method, First two PC\")\n\n```", "```py\n > library(fpc)\n > NASAtrans=t(NASAscale)\n\n```", "```py\n > dist1 <- dist(NASAtrans, method=\"minkowski\", p=3) \n\n```", "```py\n > clust1 <- hclust(dist1,method=\"ward.D\")\n > clust1\n\n```", "```py\n> plot(clust1,labels= NASA.lab[1:29], cex=1, xlab=\"\",ylab=\"Distance\",main=\"Clustering for NASA Understory Data\")\n\n```", "```py\n> rect.hclust(clust1,k=3)\n\n```", "```py\n > cuts=cutree(clust1,k=3)\n > cuts\n\n```", "```py\n > library(RColorBrewer)\n > library(cluster)\n > library(pvclust)\n > library(xtable)\n > library(plyr)\n\n```", "```py\n> GSE4051_data =read.csv(\"d:/ GSE4051_data.csv\",header=T)\n\n```", "```py\n> str(GSE4051_data, max.level = 0) \n\n```", "```py\n> GSE4051_design =read.csv(\"d:/ GSE4051_design.csv\",header=T)\n\n```", "```py\n> trans_GSE4051_data <- t(scale(t(GSE4051_data)))\n\n```", "```py\n> str(trans_GSE4051_data, max.level = 0, give.attr = FALSE)\n\n```", "```py\n > round(data.frame(avgBefore = rowMeans(head(GSE4051_data)), \navgAfter = rowMeans(head(trans_GSE4051_data)), \nvarBefore = apply(head(GSE4051_data), 1, var), \n                      varAfter = apply(head(trans_GSE4051_data),                      1, var)), 2)\n\n```", "```py\n> pair_dist_GSE4051_data <- dist(t(trans_GSE4051_data), method = 'euclidean')\n\n```", "```py\n> GSE4051_design$group <- with(GSE4051_design, interaction(gType, devStage))\n\n```", "```py\n> summary(GSE4051_design$group)\n\n```", "```py\n> pr.hc.single <- hclust(pair_dist_GSE4051_data, method = 'single')\n\n```", "```py\n> pr.hc.single\n\n```", "```py\n> pr.hc.complete <- hclust(pair_dist_GSE4051_data, method = 'complete')\n\n```", "```py\n> pr.hc.complete\n\n```", "```py\n> pr.hc.average <- hclust(pair_dist_GSE4051_data, method = 'average')\n\n```", "```py\n> pr.hc.average\n\n```", "```py\n> pr.hc.ward <- hclust(pair_dist_GSE4051_data, method = 'ward.D2')\n\n```", "```py\n> pr.hc.ward\n\n```", "```py\n> op <- par(mar = c(0,4,4,2), mfrow = c(2,2))\n\n```", "```py\n> plot(pr.hc.single, labels = FALSE, main = \"Single Linkage Representation\", xlab = \"\")\n\n```", "```py\n> plot(pr.hc.complete, labels = FALSE, main = \"Complete Linkage Representation\", xlab = \"\")\n\n```", "```py\n> plot(pr.hc.average, labels = FALSE, main = \"Average Linkage Representation\", xlab = \"\")\n\n```", "```py\n> plot(pr.hc.ward, labels = FALSE, main = \"Ward Linkage Representation\", xlab = \"\")\n\n```", "```py\n > par(op)\n > op <- par(mar = c(1,4,4,1))\n\n```", "```py\n > plot(pr.hc.single, labels = GSE4051_design$group, cex = 0.6, main = \"Single Hierarchical Cluster - 10 clusters\")\n > rect.hclust(clust1,k=5)\n\n```", "```py\n     > par(op)\n     > jGraysFun <- colorRampPalette(brewer.pal(n = 9, \"Blues\"))\n     > gTypeCols <- brewer.pal(9, \"Spectral\")[c(4,7)]\n     > heatmap(as.matrix(trans_GSE4051_data), Rowv = NA, col = jGraysFun(256), hclustfun = function(x) hclust(x, method = 'single'),\nscale = \"none\", labCol = GSE4051_design$group, labRow = NA, margins = c(8,1), \n ColSideColor = gTypeCols[unclass(GSE4051_design$gType)])\n     > legend(\"topright\", legend = levels(GSE4051_design$gType), col = gTypeCols, lty = 1, lwd = 5, cex = 0.5)\n\n```", "```py\n > plot(pr.hc.complete, labels = GSE4051_design$group, cex = 0.6, main = \"Complete Hierarchical Cluster - 10 clusters\")\n > rect.hclust(pr.hc.complete, k = 10)\n\n```", "```py\n    > par(op)\n    > jGraysFun <- colorRampPalette(brewer.pal(n = 9, \"Greens\"))\n    > gTypeCols <- brewer.pal(11, \"PRGn\")[c(4,7)]\n> heatmap(as.matrix(trans_GSE4051_data), Rowv = NA, col = jGraysFun(256), hclustfun = function(x) hclust(x, method = 'complete'), \n scale = \"none\", labCol = GSE4051_design$group, labRow = NA, margins = c(8,1),\n ColSideColor = gTypeCols[unclass(GSE4051_design$gType)])\n    > legend(\"topright\", legend = levels(GSE4051_design$gType), col = gTypeCols, lty = 1, lwd = 5, cex = 0.5)\n\n```", "```py\n > plot(pr.hc.average, labels = GSE4051_design$group, cex = 0.6, main = \"Average Hierarchical Cluster - 10 clusters\")\n > rect.hclust(pr.hc.average, k = 10)\n\n```", "```py\n    > jGraysFun <- colorRampPalette(brewer.pal(n = 9, \"Oranges\"))\n    > gTypeCols <- brewer.pal(9, \"Oranges\")[c(4,7)]\n> heatmap(as.matrix(trans_GSE4051_data), Rowv = NA, col = jGraysFun(256), hclustfun = function(x) hclust(x, method = 'average'), \nscale = \"none\", labCol = GSE4051_design$group, labRow = NA, margins = c(8,1), \n ColSideColor = gTypeCols[unclass(GSE4051_design$gType)])\n    > legend(\"topright\", legend = levels(GSE4051_design$gType), col = gTypeCols, lty = 1, lwd = 5, cex = 0.5)\n\n```", "```py\n > plot(pr.hc.ward, labels = GSE4051_design$group, cex = 0.6, main = \"Ward Hierarchical Cluster - 10 clusters\")\n > rect.hclust(pr.hc.ward, k = 10)\n\n```", "```py\n > jGraysFun <- colorRampPalette(brewer.pal(n = 9, \"Reds\")) \n > gTypeCols <- brewer.pal(9, \"Reds\")[c(4,7)] \n > heatmap(as.matrix(trans_GSE4051_data), Rowv = NA, col = jGraysFun(256), hclustfun = function(x) hclust(x, method = 'ward.D2'), \n scale = \"none\", labCol = GSE4051_design$group, labRow = NA, margins = c(8,1), \n ColSideColor = gTypeCols[unclass(GSE4051_design$gType)]) \n > legend(\"topright\", legend = levels(GSE4051_design$gType), col = gTypeCols, lty = 1, lwd = 5, cex = 0.5)\n\n```", "```py\n> Mathtest = read.table(\"d:/math test.txt\",header=T)\n\n```", "```py\n> dist.items <- dist(Mathtest[,-1], method='euclidean')^2\n\n```", "```py\n> dist.items\n\n```", "```py\n> dist.items.2 <- dist(Mathtest[,-1], method='binary')\n\n```", "```py\n> dist.items.3 <- dist(1 - Mathtest[,-1], method='binary')\n\n```", "```py\n > items.complete.link <- hclust(dist.items, method='complete')\n > items.complete.link\n\n```", "```py\n> plot(items.complete.link, labels=Mathtest[,1], ylab=\"Distance\")\n\n```", "```py\n > items.sing.link <- hclust(dist.items, method='single')\n > items.sing.link\n\n```", "```py\n> plot(items.sing.link, labels=Mathtest[,1], ylab=\"Distance\")\n\n```", "```py\n> library(cluster)\n\n```", "```py\n> my.k.choices <- 2:8\n\n```", "```py\n> avg.sil.width <- rep(0, times=length(my.k.choices))\n\n```", "```py\n > for (ii in (1:length(my.k.choices)) ){\n + avg.sil.width[ii] <- pam(dist.items, k=my.k.choices[ii])$silinfo$avg.width\n + }\n\n```", "```py\n> print( cbind(my.k.choices, avg.sil.width) )\n\n```", "```py\n > items.kmed.2 <- pam(dist.items, k=2, diss=T)\n > items.kmed.2\n\n```", "```py\n > items.2.clust <- lapply(1:2, function(nc) Mathtest[,1][items.kmed.2$clustering==nc]) \n > items.2.clust\n\n```", "```py\n > items.kmed.3 <- pam(dist.items, k=3, diss=T)\n > items.kmed.3\n\n```", "```py\n > items.3.clust <- lapply(1:3, function(nc) Mathtest[,1][items.kmed.3$clustering==nc])\n > items.3.clust\n\n```", "```py\n> protein = read.csv(\"d:/Europenaprotein.csv\",header=T)\n\n```", "```py\n> head(protein)\n\n```", "```py\n> set.seed(123456789)\n\n```", "```py\n > groupMeat <- kmeans(protein[,c(\"WhiteMeat\",\"RedMeat\")], centers=3, nstart=10)\n > groupMeat\n\n```", "```py\n> o=order(groupMeat$cluster)\n\n```", "```py\n> data.frame(protein$Country[o],groupMeat$cluster[o])\n\n```", "```py\n > plot(protein$Red, protein$White, type=\"n\", xlim=c(3,19), xlab=\"Red Meat\", ylab=\"White Meat\")\n > text(x=protein$Red, y=protein$White, labels=protein$Country,col=groupMeat$cluster+1)\n\n```", "```py\n> set.seed(123456789)\n\n```", "```py\n > groupProtein <- kmeans(protein[,-1], centers=7, nstart=10)\n > o=order(groupProtein$cluster)\n > data.frame(protein$Country[o],groupProtein$cluster[o])\n\n```", "```py\n > library(cluster)\n\n```", "```py\n> clusplot(protein[,-1], groupProtein$cluster, main='2D representation of the Cluster solution', color=TRUE, shade=TRUE, labels=2, lines=0)\n\n```", "```py\n > foodagg=agnes(protein,diss=FALSE,metric=\"euclidean\")\n > foodagg\n\n```", "```py\n> plot(foodagg, main='Dendrogram')\n\n```", "```py\n> groups <- cutree(foodagg, k=4)\n\n```", "```py\n> rect.hclust(foodagg, k=4, border=\"red\")\n\n```", "```py\n> library(cluster)\n\n```", "```py\n> food.energycontent <- read.table(\"d:/foodstuffs.txt\", header=T)\n\n```", "```py\n> head(food.energycontent) \n\n```", "```py\n> str(food.energycontent)\n\n```", "```py\n > standard.deviation <- apply(food.energycontent[,-1], 2, sd)\n > standard.deviation\n\n```", "```py\n > foodergycnt.stddev <- sweep(food.energycontent[,-1],2,standard.deviation,FUN=\"/\") \n > foodergycnt.stddev\n\n```", "```py\n > food.5cluster <- kmeans(foodergycnt.stddev, centers=5, iter.max=100, nstart=25)\n > food.5cluster\n\n```", "```py\n > food.4cluster <- kmeans(foodergycnt.stddev, centers=4, iter.max=100, nstart=25)\n > food.4cluster\n\n```", "```py\n> food.4cluster$cluster\n\n```", "```py\n > food.4cluster.clust <- lapply(1:4, function(nc) protein[food.4cluster$cluster==nc])\n > food.4cluster.clust\n\n```", "```py\n> pairs(food.energycontent[,-1], panel=function(x,y) text(x,y,food.4cluster$cluster))\n\n```", "```py\n > food.pc <- princomp(food.energycontent[,-1],cor=T)\n > my.color.vector <- rep(\"green\", times=nrow(food.energycontent))\n > my.color.vector[food.4cluster$cluster==2] <- \"blue\"\n > my.color.vector[food.4cluster$cluster==3] <- \"red\"\n > my.color.vector[food.4cluster$cluster==4] <- \"orange\"\n\n```", "```py\n> par(pty=\"s\")\n\n```", "```py\n > plot(food.pc$scores[,1], food.pc$scores[,2], ylim=range(food.pc$scores[,1]), \n + xlab=\"PC 1\", ylab=\"PC 2\", type ='n', lwd=2)\n > text(food.pc$scores[,1], food.pc$scores[,2], labels=Food, cex=0.7, lwd=2,\n + col=my.color.vector)\n\n```"]