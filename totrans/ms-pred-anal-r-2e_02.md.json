["```py\n    > participant<-c(1,2,3,4,5,6,7,8)\n    > recode<-c(Doctoral=1, Masters=2, Bachelors=3, Associates=4, Nondegree=5, SomeCollege=6, HighSchool=7, None=8))\n    > (participant<-factor (participant, levels=recode, labels=names(recode)))\n    [1] Doctoral Masters Bachelors Associates Nondegree SomeCollege HighSchool None       \n    Levels: Doctoral Masters Bachelors Associates Nondegree SomeCollege HighSchool None\n    ```", "```py\n> knn_predictions_prob <- predict(knn_model, iris_test,\n  type = \"prob\")\n> tail(knn_predictions_prob, n = 3)\n      setosa versicolor virginica\n[28,]      0        0.0       1.0\n[29,]      0        0.4       0.6\n[30,]      0        0.0       1.0\n```", "```py\n> knn_predictions <- predict(knn_model, iris_test, type = \"class\")\n> knn_predictions_z <- predict(knn_model_z, iris_test_z, type = \"class\")\n> knn_predictions_pca <- predict(knn_model_pca, iris_test_pca, type = \"class\")\n```", "```py\n> postResample(knn_predictions, iris_test_labels)\n Accuracy     Kappa \n0.9333333 0.9000000 \n> postResample(knn_predictions_z, iris_test_labels)\n Accuracy     Kappa \n0.9666667 0.9500000 \n> postResample(knn_predictions_pca, iris_test_labels)\nAccuracy    Kappa \n    0.90     0.85\n```", "```py\n> table(knn_predictions, iris_test_labels) \n               iris_test_labels\nknn_predictions setosa versicolor virginica\n     setosa         10          0         0\n     versicolor      0          9         1\n     virginica       0          1         9\n```", "```py\n> table(actual,predicted)\n          predicted\nactual     negative positive\n  negative    99900       78\n  positive        9       13\n```", "```py\n# -- 5 rounds of numeric test scores saved in a vector named \"v\"\nv <-c(74,79, 88, 90, 99)\n\n# -- create an image file for the visualization for later use\npng(file = \"c:/simple example/learning curve.png\", type = c(\"windows\", \"cairo\", \"cairo-png\"))\n\n# -- plot the model scores round by round\nplot(v, type = \"o\", col = \"red\", xlab = \"Round\", ylab = \"Score\", main = \"Learning Curve\")\n\n# -- close output \ndev.off()\n```"]