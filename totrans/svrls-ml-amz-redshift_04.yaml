- en: '4'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '4'
- en: Leveraging Amazon Redshift ML
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 利用Amazon Redshift ML
- en: In the previous chapter, we discussed the overall benefits of **machine learning**
    (**ML**) and how it fits into your data warehouse.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们讨论了**机器学习**（ML）的整体优势以及它如何融入您的数据仓库。
- en: 'In this chapter, we will focus specifically on how to leverage **Amazon Redshift
    ML** to solve various use cases. These examples are designed to give you the foundation
    you need as you get hands-on training models, beginning in [*Chapter 5*](B19071_05.xhtml#_idTextAnchor068).
    We will show the benefits of Redshift ML, such as eliminating data movement, being
    able to create models using simple SQL, and drastically reducing the time it takes
    to train a new model and make it available for inference. Additionally, you will
    learn how Amazon Redshift ML leverages **Amazon SageMaker** behind the scenes
    to automatically train your models as we guide you through the following main
    topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将专门探讨如何利用**Amazon Redshift ML**来解决各种用例。这些示例旨在为您在从[*第五章*](B19071_05.xhtml#_idTextAnchor068)开始的实际训练模型过程中提供所需的基础。我们将展示Redshift
    ML的优势，例如消除数据移动、能够使用简单的SQL创建模型，以及大幅减少训练新模型和使其可用于推理所需的时间。此外，您还将了解Amazon Redshift
    ML如何通过以下主要主题在幕后利用**Amazon SageMaker**自动训练您的模型：
- en: Why Amazon Redshift ML?
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为什么选择Amazon Redshift ML？
- en: An introduction to Amazon Redshift ML
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Amazon Redshift ML简介
- en: A `CREATE` `MODEL` overview
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建模型概述
- en: Why Amazon Redshift ML?
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为什么选择Amazon Redshift ML？
- en: Amazon Redshift ML gives you the ability to create and train ML models with
    simple SQL commands, without the need to build specialized skills. This means
    your data analysts, data engineers, and BI analysts can now leverage their SQL
    skills to do ML, which increases agility, since they no longer need to wait for
    an ML expert to train their model.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon Redshift ML让您能够通过简单的SQL命令创建和训练ML模型，无需构建专门的技能。这意味着您的数据分析师、数据工程师和BI分析师现在可以利用他们的SQL技能进行ML，这增加了敏捷性，因为他们不再需要等待ML专家来训练他们的模型。
- en: Additionally, since you use your model in the data warehouse, you no longer
    need to export data to be trained or import it back into the warehouse after your
    model is used to make predictions.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，由于您在数据仓库中使用模型，您不再需要将数据导出用于训练，或者在使用模型进行预测后将数据导入仓库。
- en: You do not have to worry about managing the governance of data. Data never leaves
    your VPC when you export data for training.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 您无需担心数据治理的管理。当您导出数据用于训练时，数据永远不会离开您的VPC。
- en: You can control who can create models and who can run inference queries on those
    models.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以控制谁可以创建模型以及谁可以在这些模型上运行推理查询。
- en: Amazon Redshift ML provides a very cost-effective solution for training and
    using models. The cost for Amazon SageMaker resources is based on the number of
    cells in your training dataset, which is the product of the number of rows times
    the number of columns in the training set.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon Redshift ML为训练和使用模型提供了一个非常经济高效的解决方案。Amazon SageMaker资源的成本基于您的训练数据集中的单元格数，这是训练集行数和列数的乘积。
- en: The costs for running prediction queries using Amazon Redshift Serverless are
    based on the compute capacity used by your queries.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Amazon Redshift Serverless运行预测查询的成本基于您的查询使用的计算能力。
- en: To learn more about Amazon Redshift Serverless costs refer here [https://docs.aws.amazon.com/redshift/latest/mgmt/serverless-billing.html](https://docs.aws.amazon.com/redshift/latest/mgmt/serverless-billing.html).
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多关于Amazon Redshift Serverless成本的信息，请参阅此处[https://docs.aws.amazon.com/redshift/latest/mgmt/serverless-billing.html](https://docs.aws.amazon.com/redshift/latest/mgmt/serverless-billing.html)。
- en: You have the ability to control the costs of model training by limiting how
    much data is used to train the model, and by controlling the time for training.
    We will show you examples of this later in the *A CREATE MODEL* *overview* section.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过限制用于训练模型的数据量以及控制训练时间来控制模型训练的成本。我们将在*创建模型*概述部分稍后展示这一示例。
- en: When you run a prediction query, all predictions are computed locally in your
    Redshift data warehouse. This enables you to achieve very high throughput and
    low latency.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 当您运行预测查询时，所有预测都在您的Redshift数据仓库中本地计算。这使得您能够实现非常高的吞吐量和低延迟。
- en: An introduction to Amazon Redshift ML
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Amazon Redshift ML简介
- en: By leveraging Amazon Redshift ML, your organization can achieve many benefits.
    First of all, you eliminate unnecessary data movement, users can use familiar
    SQL commands, and integration with Amazon SageMaker is transparent.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 通过利用Amazon Redshift ML，你的组织可以实现许多好处。首先，你可以消除不必要的数据移动，用户可以使用熟悉的SQL命令，并且与Amazon
    SageMaker的集成是透明的。
- en: 'Let’s define some of the terms that you will see throughout the remaining chapters:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们定义一些你将在剩余章节中看到的术语：
- en: '**CREATE MODEL**: This is a command that will contain the SQL that will export
    data to be used to train your model.'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**创建模型**：这是一个将包含用于将数据导出以用于训练你的模型的SQL命令的命令。'
- en: '**Features**: These are the attributes in your dataset that will be used as
    input to train your model.'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**特征**：这些是在你的数据集中用作训练模型输入的属性。'
- en: '**Target**: This is the attribute in your dataset that you want to predict.
    This is also sometimes referred to as a **label**.'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**目标**：这是你数据集中你想要预测的属性。这有时也被称为**标签**。'
- en: '**Inference**: This is also referred to as **prediction**. In Amazon Redshift
    ML, this is the process of executing a query against a trained model to get the
    predicted value generated by your model.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**推理**：这也被称为**预测**。在Amazon Redshift ML中，这是执行查询以获取由你的模型生成的预测值的流程。'
- en: To be able to create and access your ML models in Amazon Redshift to run prediction
    queries, you need to grant permissions on the model object, just like you would
    on other database objects such as tables, views, or functions.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 为了能够创建和访问你的ML模型在Amazon Redshift中运行预测查询，你需要对模型对象授予权限，就像你在其他数据库对象（如表、视图或函数）上所做的那样。
- en: 'Let’s assume you have created the following role to allow a set of users to
    create models, called `analyst_cm_role`. A superuser can grant permissions to
    this role as follows:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你已经创建了一个名为`analyst_cm_role`的角色，允许一组用户创建模型。超级用户可以按照以下方式授予此角色的权限：
- en: '[PRE0]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Users/groups/roles with the `CREATE MODEL` privilege can create a model in
    any schema in your serverless endpoint or Redshift cluster if the user has the
    `CREATE` permission on the Schema. A Redshift ML model is part of the schema hierarchy,
    similar to tables, views, stored procedures, and user-defined functions. Let’s
    assume we have a schema called `demo_ml`. You can grant `CREATE` and `USAGE` privileges
    on the `demo_ml` schema to the analyst role using the following `GRANT` statement:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 拥有`CREATE MODEL`权限的用户/组/角色可以在你的服务器端点或Redshift集群中的任何模式中创建模型，如果用户有该模式的`CREATE`权限。Redshift
    ML模型是模式层次结构的一部分，类似于表、视图、存储过程和用户定义的函数。假设我们有一个名为`demo_ml`的模式。你可以使用以下`GRANT`语句授予`demo_ml`模式上的`CREATE`和`USAGE`权限给分析师角色：
- en: '[PRE1]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Now, let’s assume we have another role to allow a set of users access to run
    prediction queries called `analyst_prediction_role`. You can grant access to run
    predictions on models using the following:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，假设我们有一个名为`analyst_prediction_role`的角色，允许一组用户运行预测查询。你可以使用以下方式授予在模型上运行预测的访问权限：
- en: '[PRE2]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The source data to create a model can be in Redshift or any other source that
    you can access from Redshift, including your **Amazon Simple Storage Service**
    (**Amazon S3**) S3 data lake via Spectrum or other sources using the Redshift
    federated query capability. At the time of writing, Amazon Aurora and Amazon RDS
    for PostgreSQL and MySQL are supported. More details are available here: [https://docs.aws.amazon.com/redshift/latest/dg/federated-overview.html](https://docs.aws.amazon.com/redshift/latest/dg/federated-overview.html).'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 创建模型的数据源可以是Redshift或任何其他你可以从Redshift访问的源，包括通过Spectrum或其他使用Redshift联合查询功能的源访问的**Amazon
    Simple Storage Service**（**Amazon S3**）S3数据湖。在撰写本文时，支持Amazon Aurora和Amazon RDS
    for PostgreSQL和MySQL。更多详细信息请参阅[https://docs.aws.amazon.com/redshift/latest/dg/federated-overview.html](https://docs.aws.amazon.com/redshift/latest/dg/federated-overview.html)。
- en: Amazon Redshift ML and Amazon SageMaker manage all data conversions, permissions,
    and resource usage. The trained model is then compiled by SageMaker Neo and made
    available as a user-defined function in Amazon Redshift so that users can make
    predictions using simple SQL.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon Redshift ML和Amazon SageMaker管理所有数据转换、权限和资源使用。然后，由SageMaker Neo编译训练好的模型，并在Amazon
    Redshift中以用户定义的函数的形式提供，以便用户可以使用简单的SQL进行预测。
- en: Once your model is trained and available as a function in Amazon Redshift, you
    can run prediction queries at scale and efficiently, locally in Amazon Redshift.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你的模型经过训练并作为Amazon Redshift中的函数可用，你就可以大规模和高效地运行预测查询，本地在Amazon Redshift中。
- en: 'See the process flow here in *Figure 4**.1*:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 请参见*图4*.1中的流程图：
- en: '![Figure 4.1 – The Redshift ML CREATE MODEL process flow](img/B19071_04_001.jpg)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![图4.1 – Redshift ML创建模型流程](img/B19071_04_001.jpg)'
- en: Figure 4.1 – The Redshift ML CREATE MODEL process flow
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.1 – Redshift ML创建模型流程
- en: Now, let us go into more detail on how you can use the `CREATE` `MODEL` statement.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们更详细地介绍如何使用`CREATE` `MODEL`语句。
- en: A CREATE MODEL overview
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建模型的概述
- en: 'The `CREATE MODEL` statement allows for flexibility when addressing the various
    use cases you may need. There are four main types of `CREATE` `MODEL` statements:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '`CREATE MODEL`语句在处理您可能需要的各种用例时提供了灵活性。主要有四种类型的`CREATE` `MODEL`语句：'
- en: '`AUTO` everything'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动化一切
- en: '`AUTO` with user guidance, where a user can provide the problem type'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`AUTO`与用户指导，用户可以提供问题类型'
- en: '`AUTO OFF`, with customized options provided by the user'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`AUTO OFF`，用户提供了定制选项'
- en: '**Bring your own** **model** (**BYOM**)'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**自带** **模型** (**BYOM**)'
- en: '*Figure 4**.2* illustrates the flexibility available when training models with
    Amazon Redshift ML:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '*图4**.2*展示了使用Amazon Redshift ML训练模型时的灵活性：'
- en: '![Figure 4.2 – Amazon Redshift ML flexibility](img/B19071_04_002.jpg)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![图4.2 – Amazon Redshift ML的灵活性](img/B19071_04_002.jpg)'
- en: Figure 4.2 – Amazon Redshift ML flexibility
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.2 – Amazon Redshift ML的灵活性
- en: In this chapter, we will provide an overview of the various types of `CREATE
    MODEL` statements. Subsequent chapters will provide in-depth examples of how to
    create all the different types of models, load the data to Redshift, and split
    your data into training and testing datasets.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将概述各种类型的`CREATE MODEL`语句。后续章节将提供如何创建所有不同类型模型的深入示例，如何将数据加载到Redshift，以及如何将您的数据分割成训练集和测试集。
- en: In this section, we will walk you through the options available to create models
    and the optional parameters available that you can specify. All of the examples
    in this chapter are informational to prepare you for the remaining chapters. You
    will create your first model in [*Chapter 5*](B19071_05.xhtml#_idTextAnchor068).
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将向您介绍创建模型时可用的选项以及您可以指定的可选参数。本章中的所有示例都是信息性的，旨在为您准备后续章节。您将在[*第五章*](B19071_05.xhtml#_idTextAnchor068)中创建您的第一个模型。
- en: AUTO everything
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 自动化一切
- en: When you execute a `CREATE MODEL` command to solve a supervised learning problem
    using `AUTO` everything, Amazon Redshift ML and Amazon SageMaker manage all the
    data preprocessing, model training, and model tuning for you. Data will be exported
    from Amazon Redshift to Amazon S3, where SageMaker will train and tune up to 100
    models. **SageMaker Autopilot** will automatically determine the algorithm and
    problem type. The best-trained model is then compiled by SageMaker Neo and made
    available as a user-defined function in Amazon Redshift so that users can make
    predictions using simple SQL.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 当您执行`CREATE MODEL`命令以使用`AUTO`一切来解决监督学习问题时，Amazon Redshift ML和Amazon SageMaker将为您管理所有数据预处理、模型训练和模型调优。数据将从Amazon
    Redshift导出到Amazon S3，在那里SageMaker将训练和调整多达100个模型。**SageMaker Autopilot**将自动确定算法和问题类型。然后，最佳训练模型将由SageMaker
    Neo编译，并在Amazon Redshift中作为用户定义的函数提供，以便用户可以使用简单的SQL进行预测。
- en: 'See the following syntax for an `AUTO` everything model:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一个`AUTO`一切模型语法的示例：
- en: '[PRE3]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: You simply supply a table name or SQL statement for the data you want to use
    in training, along with the `TARGET` column that you are trying to predict.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 您只需提供要用于训练的数据的表名或SQL语句，以及您试图预测的`TARGET`列。
- en: 'Let’s apply this to a simple example. Let’s assume we have a table called `reservation_history`
    that contains hotel reservation data, and we want to determine whether guests
    are likely to cancel an upcoming reservation:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们用一个简单的例子来应用这个方法。假设我们有一个名为`reservation_history`的表，其中包含酒店预订数据，我们想要确定客人是否有可能取消即将到来的预订：
- en: '[PRE4]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The `CREATE MODEL` statement would look like this (note that this is informational;
    you do not need to run this):'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '`CREATE MODEL`语句将看起来像这样（请注意，这仅用于信息；您不需要运行此命令）：'
- en: '[PRE5]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: In this `CREATE MODEL` statement, we only provided the minimum required parameters,
    which are `IAM_ROLE` and `S3_BUCKET`. The `TARGET` parameter is `cancelled`, which
    is what we will try to predict, based on the input we send to the `CREATE MODEL`
    statement. In this example, we send everything from the `reservation_history`
    table. The `FUNCTION` name is a description of the function that will be used
    later for predictions. The `IAM_ROLE` parameter will be attached to your serverless
    endpoint and provides access to SageMaker and an `CREATE MODEL` statement. Refer
    to [*Chapter 2*](B19071_02.xhtml#_idTextAnchor027), where we showed how to set
    up an IAM role.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个`CREATE MODEL`语句中，我们只提供了所需的最小参数，即`IAM_ROLE`和`S3_BUCKET`。`TARGET`参数被标记为`cancelled`，这是我们根据发送给`CREATE
    MODEL`语句的输入尝试预测的内容。在这个例子中，我们发送了`reservation_history`表中的所有内容。`FUNCTION`名称是描述将用于后续预测的函数的描述。`IAM_ROLE`参数将附加到您的无服务器端点，并提供对SageMaker和`CREATE
    MODEL`语句的访问。请参阅[*第2章*](B19071_02.xhtml#_idTextAnchor027)，其中我们展示了如何设置IAM角色。
- en: 'Amazon SageMaker will automatically determine that this is a binary classification
    model, since our `TARGET` can only be one of two possible values. Amazon SageMaker
    will also choose the best model type. At the time of writing, the supported model
    types for supervised learning are as follows:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon SageMaker将自动确定这是一个二元分类模型，因为我们的`TARGET`只能有两个可能的值。Amazon SageMaker还将选择最佳模型类型。在撰写本文时，支持监督学习的模型类型如下：
- en: '`XGBoost`: Based on the gradient-boosted trees algorithm'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`XGBoost`：基于梯度提升树算法'
- en: '`Linear Learner`: Provides an increase in speed to solve either classification
    or regression problems'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Linear Learner`：提供提高解决分类或回归问题速度的能力'
- en: '`MLP`: A deep learning algorithm using a multilayer perceptron'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`MLP`：使用多层感知器的深度学习算法'
- en: You will create models using each of these models in subsequent chapters.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 您将在后续章节中使用这些模型中的每一个来创建模型。
- en: AUTO with user guidance
  id: totrans-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 自动加用户指导
- en: More advanced users with a good understanding of ML may wish to provide more
    inputs to a model, such as `model _type`, `problem_type`, `preprocesors`, and
    `objective`.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 对于对机器学习有良好理解的更高级用户，可能希望向模型提供更多输入，例如`model_type`、`problem_type`、`preprocessors`和`objective`。
- en: 'Using our reservation example, we will build on the `AUTO` capabilities and
    specify a few more parameters:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 使用我们的预订示例，我们将利用`AUTO`功能并指定一些额外的参数：
- en: '`MODEL_TYPE`: `XGBoost`'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`MODEL_TYPE`: `XGBoost`'
- en: '`PROBLEM_TYPE`: `binary_classification`'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`PROBLEM_TYPE`: `binary_classification`'
- en: '`Objective`: `F1`'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Objective`: `F1`'
- en: '`S3_GARBAGE_COLLECT` – `OFF`: If set to `OFF`, the resulting datasets used
    to train the models remain in Amazon S3 and can be used for other purposes, such
    as troubleshooting'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`S3_GARBAGE_COLLECT` – `OFF`：如果设置为`OFF`，用于训练模型的生成的数据集将保留在Amazon S3中，并可被用于其他目的，例如故障排除'
- en: '`MAX_RUNTIME` – `1800`: This is one way to control the costs of model training
    by limiting the training time to `1800` seconds; the default is `5400` seconds'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`MAX_RUNTIME` – `1800`：这是通过将训练时间限制为`1800`秒来控制模型训练成本的一种方式；默认值为`5400`秒'
- en: 'By specifying `MODEL_TYPE` and/or `PROBLEM_TYPE` along with the `Objective`
    parameters, you can shorten the amount of time needed to train a model, since
    SageMaker does not have to determine these. Here is an example of the `CREATE`
    `MODEL` statement:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 通过指定`MODEL_TYPE`和/或`PROBLEM_TYPE`以及`Objective`参数，您可以缩短训练模型所需的时间，因为SageMaker不需要确定这些参数。以下是一个`CREATE
    MODEL`语句的示例：
- en: '[PRE6]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Note
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Increasing `MAX_RUNTIME` and `MAX_CELLS` often improves model quality by allowing
    SageMaker to explore more candidates. If you want faster iteration or exploration
    of your dataset, reduce `MAX_RUNTIME` and `MAX_CELLS`. If you want improved accuracy
    of models, increase `MAX_RUNTIME` and `MAX_CELLS`.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 增加最大运行时间`MAX_RUNTIME`和最大单元格数`MAX_CELLS`通常可以通过让SageMaker探索更多候选者来提高模型质量。如果您希望加快数据集的迭代或探索速度，请减少`MAX_RUNTIME`和`MAX_CELLS`。如果您希望提高模型的准确性，请增加`MAX_RUNTIME`和`MAX_CELLS`。
- en: It is a good practice to specify the problem type and objective, if known, to
    shorten training time. To improve model accuracy, provide more data if possible
    and include any features (input) that can influence the target variable.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 如果已知，指定问题类型和目标是一个好习惯，可以缩短训练时间。为了提高模型准确性，如果可能的话，提供更多数据，并包括任何可能影响目标变量的特征（输入）。
- en: 'Additionally, you can add your own preprocessors by specifying transformers.
    At the time of writing, Amazon Redshift ML supports 10 transformers including
    `OneHotEncoder`, `Ordinal Encoder`, and `StandardScaler`. You can find the complete
    list here: [https://docs.aws.amazon.com/redshift/latest/dg/r_create_model_use_cases.html#r_user_guidance_create_model](https://docs.aws.amazon.com/redshift/latest/dg/r_create_model_use_cases.html#r_user_guidance_create_model).'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，您可以通过指定转换器来添加自己的预处理器。截至编写本文时，Amazon Redshift ML 支持 10 个转换器，包括 `OneHotEncoder`、`Ordinal
    Encoder` 和 `StandardScaler`。您可以在以下位置找到完整的列表：[https://docs.aws.amazon.com/redshift/latest/dg/r_create_model_use_cases.html#r_user_guidance_create_model](https://docs.aws.amazon.com/redshift/latest/dg/r_create_model_use_cases.html#r_user_guidance_create_model)。
- en: Amazon Redshift ML stores the trained transformers and automatically applies
    them as part of the prediction query. You don’t need to specify them when generating
    predictions from your model.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon Redshift ML 存储训练好的转换器，并将其作为预测查询的一部分自动应用。在从您的模型生成预测时，您无需指定它们。
- en: 'Let’s take, as an example, using `OneHotEncoder`, which is used to convert
    a categorical value such as `country` or `gender` into a numeric value (binary
    vector) so that ML algorithms can better do predictions. Let’s create a model
    using one-hot encoding for our input columns, `marital_status` and `loyalty_program`.
    Note that this model is an example, and you do not need to run this statement:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 以 `OneHotEncoder` 为例，它用于将诸如 `country` 或 `gender` 这样的分类值转换为数值（二进制向量），以便机器学习算法可以更好地进行预测。让我们创建一个模型，使用独热编码对输入列
    `marital_status` 和 `loyalty_program` 进行编码。请注意，此模型仅作为示例，您无需运行此语句：
- en: '[PRE7]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: So far, all the `CREATE MODEL` examples we showed use `AUTO ON`. This is the
    default if you do not specify this parameter. Now, let’s move on to how you can
    do your own model tuning using `AUTO OFF` with XGBoost.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们展示的所有 `CREATE MODEL` 示例都使用了 `AUTO ON`。如果您未指定此参数，则这是默认设置。现在，让我们继续了解如何使用
    `AUTO OFF` 和 XGBoost 进行自己的模型调整。
- en: XGBoost (AUTO OFF)
  id: totrans-82
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: XGBoost (AUTO OFF)
- en: As an ML expert, you have the option to do hyperparameter tuning by using the
    `AUTO OFF` option with the `CREATE MODEL` statement. This gives you full control
    and Amazon Redshift ML does not attempt to discover the optimal preprocessors,
    algorithms, and hyperparameters.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一名机器学习专家，您有使用 `CREATE MODEL` 语句的 `AUTO OFF` 选项进行超参数调整的选项。这使您拥有完全控制权，Amazon
    Redshift ML 不会尝试发现最佳预处理器、算法和超参数。
- en: Let’s see what the `CREATE MODEL` syntax looks like using our example reservation
    dataset.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看使用我们的示例预订数据集的 `CREATE MODEL` 语法是什么样的。
- en: 'We will specify the following parameters:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将指定以下参数：
- en: '`AUTO OFF`: Turns off the automatic discovery of a preprocessor, an algorithm,
    and hyperparameters'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`AUTO OFF`：关闭自动发现预处理器、算法和超参数'
- en: '`MODEL_TYPE`:- `xgboost`'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`MODEL_TYPE`:- `xgboost`'
- en: '`OBJECTIVE`: `''binary:logistic''`'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`OBJECTIVE`: `''binary:logistic''`'
- en: '`PREPROCESSORS`: `''none''`'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`PREPROCESSORS`: `''none''`'
- en: '`HYPERPARAMETERS`: `DEFAULT` `EXCEPT(NUM_ROUND ''100''/)`'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`HYPERPARAMETERS`: `DEFAULT` `EXCEPT(NUM_ROUND ''100''/)`'
- en: 'Refer here for a list of hyperparameters for XGBoost: [https://docs.amazonaws.cn/en_us/redshift/latest/dg/](https://docs.amazonaws.cn/en_us/redshift/latest/dg/):'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 请参考以下链接以获取 XGBoost 的超参数列表：[https://docs.amazonaws.cn/en_us/redshift/latest/dg/](https://docs.amazonaws.cn/en_us/redshift/latest/dg/)。
- en: '[PRE8]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'As of this writing, `''none''` is the only available option to specify for
    `PREPROCESSORS` when using `AUTO OFF`. Since we cannot specify one-hot encoding,
    we can use a case statement with our SQL to apply this:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 就本文所述，`'none'` 是使用 `AUTO OFF` 时为 `PREPROCESSORS` 指定的唯一可用选项。由于我们无法指定独热编码，我们可以使用
    SQL 中的 case 语句来应用此选项：
- en: '[PRE9]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: In [*Chapter 10*](B19071_10.xhtml#_idTextAnchor178), you will build an XGBoost
    model using `AUTO OFF` and gain a better understanding of this option.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 在 [*第 10 章*](B19071_10.xhtml#_idTextAnchor178) 中，您将使用 `AUTO OFF` 构建XGBoost模型，并更好地理解此选项。
- en: Now, let’s take a look at another `AUTO OFF` option using the K-means algorithm.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们看看使用 K-means 算法的另一个 `AUTO OFF` 选项。
- en: K-means (AUTO OFF)
  id: totrans-97
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: K-means (AUTO OFF)
- en: The K-means algorithm is used to group data together that isn’t labeled. Since
    this algorithm discovers groupings in your data, it solves an “*unsupervised*”
    learning problem.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: K-means 算法用于将未标记的数据分组在一起。由于此算法在您的数据中发现了分组，因此它解决了一个“*无监督*”学习问题。
- en: 'Let’s see what a sample `CREATE MODEL` looks like if we want to group our `reservation_history`
    data:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们想要对 `reservation_history` 数据进行分组，让我们看看一个示例 `CREATE MODEL` 是什么样的：
- en: '`AUTO OFF`: Turns off the automatic discovery of a preprocessor, an algorithm,
    and hyperparameters'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`AUTO OFF`：关闭自动发现预处理器、算法和超参数'
- en: '`MODEL_TYPE`: `KMEANS`'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`MODEL_TYPE`: `KMEANS`'
- en: '`PREPROCESSORS`: `OPTIONAL` (at the time of writing, Amazon Redshift supports
    `StandScaler`, `MinMax`, and `NumericPassthrough` for `KMEANS`)'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`PREPROCESSORS`: `OPTIONAL`（在撰写本文时，Amazon Redshift 支持 `StandScaler`、`MinMax`
    和 `NumericPassthrough` 用于 `KMEANS`）'
- en: '`HYPERPARAMETERS`: `DEFAULT EXCEPT (K ''N'')`, where `N` is the number of clusters
    you want to create'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`HYPERPARAMETERS`: `DEFAULT EXCEPT (K ''N'')`，其中 `N` 是您想要创建的集群数量'
- en: 'Here is an example of a `CREATE MODE``L` statement. Note that you will not
    run this statement:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是一个 `CREATE MODE``L` 语句的示例。请注意，您不会运行此语句：
- en: '[PRE10]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Note that we are creating five clusters with this model. With the K-means algorithm,
    it is important to experiment with a different number of clusters. In [*Chapter
    8*](B19071_08.xhtml#_idTextAnchor139), you will get to dive deep into creating
    K-means models and determining how to validate the optimal clusters.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，我们使用此模型创建了五个集群。在使用 K-means 算法时，尝试不同的集群数量很重要。在 [*第 8 章*](B19071_08.xhtml#_idTextAnchor139)
    中，您将深入了解创建 K-means 模型以及如何验证最佳集群。
- en: Now, let’s take a look at how you can run prediction queries using models built
    outside of Amazon Redshift ML.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们看看如何使用在 Amazon Redshift ML 之外构建的模型运行预测查询。
- en: BYOM
  id: totrans-108
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: BYOM
- en: Additionally, you can use a model trained outside of Amazon Redshift with Amazon
    SageMaker for either local or remote inference in Amazon Redshift.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，您还可以使用在 Amazon Redshift 之外训练的模型，通过 Amazon SageMaker 在 Amazon Redshift 中进行本地或远程推理。
- en: Local inference
  id: totrans-110
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 本地推理
- en: Local inference is used when models are trained outside of Redshift in Amazon
    SageMaker. This allows you to run inference queries inside of Amazon Redshift
    without having to retrain a model.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 当模型在 Amazon SageMaker 之外训练时，使用本地推理。这允许您在 Amazon Redshift 内运行推理查询，而无需重新训练模型。
- en: Let’s suppose our previous example of building a model to predict whether a
    customer will cancel a reservation was trained outside of Amazon Redshift. We
    can bring that model to Redshift and then run inference queries.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们之前的示例是构建一个用于预测客户是否会取消预订的模型，该模型是在 Amazon Redshift 之外训练的。我们可以将该模型带到 Redshift，然后运行推理查询。
- en: 'Our `CREATE MODEL` sample will look like this:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的 `CREATE MODEL` 示例将如下所示：
- en: '`model_name`: This is the name you wish to give the local model in Redshift'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`model_name`: 这是您希望在 Redshift 中为本地模型指定的名称'
- en: '`FROM`: This is `job_name` from Amazon SageMaker – you can find this in Amazon
    SageMaker under **Training Jobs**'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`FROM`: 这是来自 Amazon SageMaker 的 `job_name` – 您可以在 Amazon SageMaker 下的 **训练作业**
    中找到它'
- en: '`FUNCTION`: The name of the function to be created along with the input data
    types'
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`FUNCTION`: 要创建的函数的名称以及输入数据类型'
- en: '`RETURNS`: The data type of the value returned by the function:'
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`RETURNS`: 函数返回值的类型：'
- en: '[PRE11]'
  id: totrans-118
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '[PRE12]'
  id: totrans-119
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '[PRE13]'
  id: totrans-120
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '[PRE14]'
  id: totrans-121
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '[PRE15]'
  id: totrans-122
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '[PRE16]'
  id: totrans-123
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '[PRE17]'
  id: totrans-124
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Note that the data types in `FUNCTION` match the data types from our `reservation_history`
    table, and `RETURNS` matches the data type of our `TARGET` variable, which is
    `cancelled`.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，`FUNCTION` 中的数据类型与我们的 `reservation_history` 表中的数据类型匹配，而 `RETURNS` 与我们的 `TARGET`
    变量的数据类型匹配，该变量为 `cancelled`。
- en: 'You can derive the SageMaker `JobName` by navigating to the AWS Management
    Console and going to SageMaker:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过访问 AWS 管理控制台并进入 SageMaker 来获取 SageMaker 的 `JobName`：
- en: '![Figure 4.3 – Console Home](img/B19071_04_003.jpg)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.3 – 控制台首页](img/B19071_04_003.jpg)'
- en: Figure 4.3 – Console Home
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.3 – 控制台首页
- en: After clicking on **Amazon SageMaker**, click on **Training jobs**, as shown
    in *Figure 4**.4:*
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 点击 **Amazon SageMaker** 后，点击 **训练作业**，如图 *图 4**.4* 所示：
- en: '![Figure 4.4 – Training jobs](img/B19071_04_004.jpg)'
  id: totrans-130
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.4 – 训练作业](img/B19071_04_004.jpg)'
- en: Figure 4.4 – Training jobs
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.4 – 训练作业
- en: 'Next, note the job name of the model you wish to use for local inference, which
    is what you will put in your `CREATE MODEL` statement (see *Figure 4**.5*):'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，请注意您希望用于本地推理的模型的工作名称，这就是您将在 `CREATE MODEL` 语句中放入的内容（见 *图 4**.5*）：
- en: '![Figure 4.5 – The training job name](img/B19071_04_005.jpg)'
  id: totrans-133
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.5 – 训练作业名称](img/B19071_04_005.jpg)'
- en: Figure 4.5 – The training job name
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.5 – 训练作业名称
- en: Remote inference
  id: totrans-135
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 远程推理
- en: Remote inference is useful if you have a model created in SageMaker for an algorithm
    that is not available natively in Amazon Redshift ML. For example, anomaly detection
    can be done using the Random Cut Forest algorithm from SageMaker. You can create
    a model that references the endpoint of the SageMaker model and then be able to
    run anomaly detection in Amazon Redshift.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在 SageMaker 中创建了一个算法模型，而该算法在 Amazon Redshift ML 中不可用，则远程推理很有用。例如，可以使用 SageMaker
    中的随机切割森林算法进行异常检测。您可以创建一个引用 SageMaker 模型端点的模型，然后在 Amazon Redshift 中运行异常检测。
- en: 'Our `CREATE MODEL` sample will look like this:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的 `CREATE MODEL` 示例将如下所示：
- en: '`model_name`: The name you wish to give the local model in Redshift'
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`model_name`: 你希望在 Redshift 中为本地模型提供的名称'
- en: '`FUNCTION`: The name of the function to be created along with the input data
    types'
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`FUNCTION`: 要创建的函数名称以及输入数据类型'
- en: '`RETURNS`: The data type of the value returned by the function'
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`RETURNS`: 函数返回值的类型'
- en: '`SAGEMAKER`: The name of the Amazon SageMaker endpoint:'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SAGEMAKER`: Amazon SageMaker 端点的名称：'
- en: '[PRE18]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Note that the data types in `FUNCTION` are for the input we send, and `RETURNS`
    is the data type of the data we receive when invoking the function.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，`FUNCTION` 中的数据类型是我们发送的输入类型，而 `RETURNS` 是调用函数时接收到的数据类型。
- en: 'You can derive the SageMaker endpoint by navigating to the AWS Management Console,
    going to SageMaker, and then clicking on **Endpoints**:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过导航到 AWS 管理控制台，转到 SageMaker，然后点击 **端点** 来获取 SageMaker 端点：
- en: '![Figure 4.6 – Endpoints](img/B19071_04_006.jpg)'
  id: totrans-145
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.6 – 端点](img/B19071_04_006.jpg)'
- en: Figure 4.6 – Endpoints
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.6 – 端点
- en: 'After you click on **Endpoints**, as shown in *Figure 4**.6*, you can see the
    endpoint names, as shown in *Figure 4**.7*:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 在点击 **端点** 后，如图 *图 4**.6* 所示，你可以看到端点名称，如图 *图 4**.7* 所示：
- en: '![Figure 4.7 – The endpoint names](img/B19071_04_007.jpg)'
  id: totrans-148
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.7 – 端点名称](img/B19071_04_007.jpg)'
- en: Figure 4.7 – The endpoint names
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.7 – 端点名称
- en: Then, note the name of the endpoint for the model you wish to use for remote
    inference and put it in your `CREATE` `MODEL` statement.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，注意你希望用于远程推理的模型端点名称，并将其放入你的 `CREATE` `MODEL` 语句中。
- en: You will dive deep into BYOM in [*Chapter 11*](B19071_11.xhtml#_idTextAnchor192)
    and get hands-on experience creating models for both local and remote inference.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 你将在 [*第 11 章*](B19071_11.xhtml#_idTextAnchor192) 中深入了解 BYOM，并获得创建用于本地和远程推理的模型的实践经验。
- en: Summary
  id: totrans-152
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we discussed why Amazon Redshift ML is a good choice to use
    data in your data warehouse to make predictions.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们讨论了为什么 Amazon Redshift ML 是在数据仓库中使用数据进行预测的好选择。
- en: By bringing ML to your data warehouse, Amazon Redshift ML enables you to greatly
    shorten the amount of time to create and train models by putting the power of
    ML directly in the hands of your developers, data analysts, and BI professionals.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 通过将机器学习（ML）引入你的数据仓库，Amazon Redshift ML 使你能够通过将 ML 的力量直接交到你的开发者、数据分析师和 BI 专业人员手中，大大缩短创建和训练模型所需的时间。
- en: Your data remains secure; it never leaves your VPC. Plus, you can easily control
    access to create and use models.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 你的数据保持安全；它永远不会离开你的 VPC。此外，你可以轻松控制对创建和使用模型的访问。
- en: Finally, we showed you different methods of creating models in Redshift ML,
    such as using `AUTO`, how to guide model training, and an advanced method to supply
    hyperparameters.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们向你展示了在 Redshift ML 中创建模型的不同方法，例如使用 `AUTO`，如何指导模型训练，以及提供超参数的高级方法。
- en: Now, you understand how ML fits into your data warehouse, how to use proper
    security and configuration guidelines with Redshift ML, and how a model is trained
    in Amazon SageMaker.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你了解了机器学习如何融入你的数据仓库，如何使用 Redshift ML 的适当安全性和配置指南，以及如何在 Amazon SageMaker 中训练模型。
- en: In the next chapter, you will get hands-on and create your first model using
    Amazon Redshift ML, learn how to validate the model, and learn how to run an inference
    query.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，你将亲自动手，使用 Amazon Redshift ML 创建你的第一个模型，学习如何验证模型，以及如何运行推理查询。
