- en: '10'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '10'
- en: Future Trends and Developments
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 未来趋势和发展
- en: Intelligence will drive the next generation of technologies, not big data. Big
    data systems have some issues, as discussed in [*Chapter 1*](B18369_01.xhtml#_idTextAnchor017),
    *Challenges in Big Data and Traditional AI*, and the world is gradually transitioning
    from the data-centric era to the intelligence-centric generation. **Federated
    learning** (**FL**) will play a core role in wisdom-driven technologies. Thus,
    the time is now to welcome the world of collective intelligence.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 智慧将推动下一代技术，而不是大数据。正如在[*第一章*](B18369_01.xhtml#_idTextAnchor017)“大数据和传统人工智能的挑战”中讨论的那样，大数据系统存在一些问题，世界正逐渐从数据为中心的时代过渡到智能为中心的时代。**联邦学习**（**FL**）将在智慧驱动技术中扮演核心角色。因此，现在是欢迎集体智慧世界的时刻。
- en: In this chapter, we will talk about the direction of future AI technologies
    that are driven by the paradigm shift happening with FL. For many AI fields, such
    as privacy-sensitive areas and fields requiring scalability in **machine learning**
    (**ML**), the benefits and potential of FL are already significant, mainly because
    of the privacy-preserving and distributed learning aspects that FL naturally supports
    with its design. You will then learn about the different types of FL as well as
    the latest development efforts in that area, as seen in the split and swarm learning
    techniques, which can be considered as evolutional frameworks enhancing FL.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将讨论由联邦学习（FL）带来的范式转变所驱动的未来人工智能技术的方向。对于许多人工智能领域，如对隐私敏感的领域和需要可扩展性的**机器学习**（**ML**）领域，FL的好处和潜力已经非常显著，这主要归功于FL设计上自然支持的隐私保护和分布式学习方面。你将了解FL的不同类型以及该领域的最新发展努力，如分片学习和群集学习技术，这些可以被视为增强FL的进化框架。
- en: In addition, FL creates a new concept of an *Internet of Intelligence*, where
    people and computers exchange their wisdom instead of just data themselves. The
    Internet of Intelligence for everyone is further accelerated by blockchain technologies
    as well. This Internet of Intelligence can then form a newly defined concept of
    *collective intelligence* that drives another innovation, from *data-centric*
    approaches to *intelligence-centric* or *model-centric* approaches.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，联邦学习（FL）创造了一个新的概念——*智能互联网*，在这个互联网中，人和计算机交换的是智慧，而不仅仅是数据本身。区块链技术进一步加速了面向每个人的智能互联网。这种智能互联网可以形成一个新的定义——*集体智慧*，它推动着从*数据为中心*的方法向*智能为中心*或*模型为中心*的方法的又一创新。
- en: Finally, we will share a collective vision in which FL plays a key role in collaboratively
    creating intelligence learned by many people and machines around the world.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们将分享一个集体愿景，在这个愿景中，联邦学习（FL）在协同创造由世界各地许多人和机器学习到的智慧中扮演关键角色。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Looking at future AI trends
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 观察未来人工智能趋势
- en: Ongoing research and developments in FL
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 联邦学习的研究和发展
- en: Journeying on to collective intelligence
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索集体智慧
- en: Looking at future AI trends
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 观察未来人工智能趋势
- en: The majority of industry leaders are now aware of the limitations of centralized
    ML as discussed in the next section.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 如下节所述，大多数行业领导者现在都意识到集中式机器学习的局限性。
- en: The limitation of centralized ML
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 集中式机器学习的局限性
- en: When looking at the future of AI, it is important to first know the fact that
    many companies today are struggling to extract intelligence and obtain insight
    from the data they possess. More than half of the data that organizations and
    companies have collected is usually not used. Traditional approaches to machine
    learning and data science need data to be organized and consolidated into data
    lakes and stores in advance of analyzing and training ML models. You need to duplicate
    and move the data, which will result in delays in realizing and delivering the
    value of the intelligence extracted from the data, together with certain operational
    risks and complexities.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 当展望人工智能的未来时，首先要知道的一个事实是，许多公司今天都在努力从他们拥有的数据中提取智能和获得洞察。通常，组织和企业收集的数据中超过一半都没有被使用。传统的机器学习和数据科学方法需要在分析和管理机器学习模型之前，将数据组织并整合到数据湖和存储中。你需要复制并移动数据，这会导致从数据中提取的智能价值的实现和交付延迟，同时伴随着一定的运营风险和复杂性。
- en: In addition, most of the data generated by enterprise companies will be created
    and processed outside a traditional centralized data center or cloud. It is becoming
    increasingly unrealistic and inefficient to process data for generating insight
    in a centralized manner.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，大多数企业公司生成的大量数据将在传统的集中式数据中心或云之外创建和处理。以集中方式处理数据以生成洞察力变得越来越不切实际且效率低下。
- en: Furthermore, based on some market reports out there, most of the largest global
    organizations and companies will explore FL at least once to create much more
    accurate, secure, and sustainable models environmentally.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，根据一些市场报告，大多数最大的全球组织和公司至少会探索一次联邦学习，以创建更加准确、安全和环保的模型。
- en: That being said, quite a few industries and markets are gradually becoming aware
    of the importance of a distributed and FL paradigm, because they are facing the
    unavoidable issues and limitations of the current centralized AI training with
    big data, as discussed in [*Chapter 1*](B18369_01.xhtml#_idTextAnchor017), *Challenges
    in Big Data and Traditional AI*. FL brings the model to the data where the training
    process resides instead of bringing the data to the model. Thus, FL is considered
    to be the future of data science and ML.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 话虽如此，许多行业和市场逐渐意识到分布式和联邦学习范式的重要性，因为他们正面临着当前集中式大数据AI训练不可避免的问题和限制，如[第1章](B18369_01.xhtml#_idTextAnchor017)中所述，*大数据和传统AI的挑战*。联邦学习将模型带到训练过程所在的数据处，而不是将数据带到模型处。因此，联邦学习被认为是数据科学和机器学习的未来。
- en: In the next section, let’s summarize the points of why FL is beneficial to those
    companies, especially enterprises that have been facing the aforementioned issues.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，让我们总结一下为什么联邦学习（FL）对那些公司有益，尤其是那些面临上述问题的企业。
- en: Revisiting the benefits of FL
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 重温联邦学习的益处
- en: In this section, we will summarize the benefits of FL that have been introduced
    throughout this book.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将总结本书中介绍过的联邦学习的益处。
- en: Increased model accuracy and generalizability
  id: totrans-20
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 模型准确性和泛化能力的提升
- en: FL realizes collaborative and distributed learning that can improve the performance
    of ML models, by training on dispersed datasets locally to continuously incorporate
    the learning into a global model. This way, more accurate and generalized ML models
    can be produced.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 联邦学习通过在本地对分散的数据集进行训练，将学习持续地纳入全局模型，实现了协作和分布式学习，从而可以提高机器学习模型的性能。这样，可以产生更准确和泛化的机器学习模型。
- en: Further privacy and security
  id: totrans-22
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 进一步的隐私和安全
- en: FL provides privacy and security advantages because it won’t require private
    and raw data by its design and security mechanisms, as we discussed previously
    in [*Chapter 2*](B18369_02.xhtml#_idTextAnchor037), *What Is Federated Learning?*
    and [*Chapter 9*](B18369_09.xhtml#_idTextAnchor224), *Case Studies with Key Use
    Cases of Federated Learning Applications*. Thus, FL reduces the potential risk
    of data misuse, leakage, or exposure to sensitive information. FL is also compliant
    with many privacy regulations, such as **General Data Protection Regulation**
    (**GDPR**), **California Consumer Privacy Act** (**CCPA**), and **Health Insurance
    Portability and Accountability Act** (**HIPAA**).
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 联邦学习提供了隐私和安全优势，因为它不会因为其设计和安全机制而要求私有和原始数据，正如我们在[第2章](B18369_02.xhtml#_idTextAnchor037)中讨论的*什么是联邦学习*和[第9章](B18369_09.xhtml#_idTextAnchor224)中讨论的*联邦学习应用的关键用例案例研究*。因此，联邦学习降低了数据滥用、泄露或敏感信息暴露的风险。联邦学习也符合许多隐私法规，如**通用数据保护条例**（**GDPR**）、**加州消费者隐私法案**（**CCPA**）和**健康保险可携带性和问责法案**（**HIPAA**）。
- en: Improved speed and efficiency
  id: totrans-24
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提高速度和效率
- en: FL is also known to realize high computation efficiency, which can accelerate
    the deployment and testing of ML models as well as decrease communication and
    computational latency. Due to the decentralized nature of FL, the delay for model
    delivery and update is minimized, which leads to a prediction by the global model
    in near real time. Real-time delivery and updates of intelligence are really valuable
    for time-sensitive ML applications.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 联邦学习还以其高计算效率而闻名，这可以加速机器学习模型的部署和测试，以及减少通信和计算延迟。由于联邦学习的去中心化特性，模型交付和更新的延迟最小化，从而使得全局模型能够近乎实时地进行预测。对于时间敏感的机器学习应用来说，智能的实时交付和更新是非常有价值的。
- en: FL also helps reduce bandwidth and energy consumption by overcoming system heterogeneity
    and unbalanced data distribution, which leads to minimizing data storage and transfer
    costs that can also significantly contribute to reducing the environmental impact.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: FL还有助于通过克服系统异质性和不平衡的数据分布来减少带宽和能源消耗，这导致最小化数据存储和传输成本，这些成本也可以显著减少环境影响。
- en: Toward distributed learning for further privacy and training efficiency
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 向分布式学习迈进，以实现更高的隐私性和训练效率
- en: Currently, AI is trained on huge computational servers, usually happening on
    big machines in big data companies.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，AI是在大型计算服务器上训练的，通常在大数据公司的大型机器上发生。
- en: As seen in the era of the supercomputer, which can process a huge amount of
    data and tasks within one machine or one cluster of machines, the evolutional
    process in technology starts from a central location and gradually transitions
    to distributed environments.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 正如超级计算机时代所看到的，它可以在一台机器或一台机器集群中处理大量数据和任务，技术的进化过程始于一个中心位置，并逐渐过渡到分布式环境。
- en: The same thing is exactly about to happen in AI. Now, the data lake concept
    is popular to organize and train ML models in one place, but ML already requires
    distributed learning frameworks.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在AI领域，同样的事情即将发生。现在，数据湖概念在组织训练ML模型方面非常流行，但ML已经需要分布式学习框架。
- en: FL is a great way to distribute a training process over multiple nodes. As shown
    in many research reports, most data is not fully used to extract insights into
    ML models.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: FL是一种将训练过程分布到多个节点上的绝佳方式。正如许多研究报告所示，大多数数据并未被充分利用来提取ML模型的洞察力。
- en: There are some companies and projects that are trying to use FL as a powerful
    distributed learning technique, such as the platforms provided by Devron ([devron.ai](https://devron.ai)),
    FedML ([fedml.ai](https://fedml.ai)), and STADLE ([stadle.ai](https://stadle.ai)).
    These platforms are already resolving the issues discussed in *The limitation
    of centralized AI* section and have shown a drastic improvement in the ML process
    in various use cases, as stated in the *Revisiting the benefits of FL* section.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 有些公司和项目正在尝试使用FL作为一种强大的分布式学习技术，例如Devron提供的平台([devron.ai](https://devron.ai))、FedML([fedml.ai](https://fedml.ai))和STADLE([stadle.ai](https://stadle.ai))。这些平台已经解决了*集中式AI的局限性*部分中讨论的问题，并在各种用例中显著提高了ML过程，正如*重访FL的好处*部分所述。
- en: Based on the AI trends that we have discussed, let’s look into the ongoing research
    and developments related to FL that cutting-edge companies are conducting now
    in the next section.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 根据我们讨论的AI趋势，让我们在下一节中看看与FL相关的正在进行的研究和发展，这些研究是由前沿公司现在进行的。
- en: Ongoing research and developments in FL
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: FL的持续研究和开发
- en: We now talk about the ongoing research and development projects that are being
    taken place both in academia and industries around the world. Let’s start with
    the different types and approaches of FL, and move on to ongoing efforts to further
    enhance the FL framework.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在来讨论正在全球学术界和工业界进行的研究和开发项目。让我们从FL（联邦学习）的不同类型和方法开始，然后继续探讨进一步增强FL框架的持续努力。
- en: Exploring various FL types and approaches
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 探索各种FL类型和方法
- en: 'In this book, we have visited the most basic algorithms and design concepts
    of an FL system. In the real world, we need to dig a bit deeper into what types
    of FL frameworks are available to extract the best performance out of those algorithms.
    Depending on the data scenario and use cases, we have several approaches in FL,
    as follows:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 在这本书中，我们探讨了FL系统的最基本算法和设计概念。在现实世界中，我们需要深入了解哪些FL框架可用，以从这些算法中提取最佳性能。根据数据场景和用例，FL中有几种方法，如下所示：
- en: Horizontal FL and vertical FL
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 水平FL和垂直FL
- en: Centralized FL and decentralized FL
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 集中式FL和去中心化FL
- en: Cross-silo FL and cross-device FL
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 跨部门FL和跨设备FL
- en: Now, let’s look at each type of FL in the following sections.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们在以下各节中看看每种FL类型。
- en: Horizontal FL and vertical FL
  id: totrans-42
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 水平FL和垂直FL
- en: '**Horizontal FL** uses datasets with the same feature space or schema across
    all distributed devices ([https://www.arxiv-vanity.com/papers/1902.04885/](https://www.arxiv-vanity.com/papers/1902.04885/)).
    This actually means that datasets share the same columns with different rows.
    Most existing FL projects are based on horizontal FL. Datasets and training processes
    with horizontal FL are straightforward because the datasets are formed identically,
    with different data distributions and inputs to be learned. Horizontal FL is also
    called homogeneous or sample-based FL.'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '**水平联邦学习（Horizontal FL**）使用所有分布式设备上具有相同特征空间或模式的数据库集（[https://www.arxiv-vanity.com/papers/1902.04885/](https://www.arxiv-vanity.com/papers/1902.04885/)）。这实际上意味着数据集共享相同的列，但行不同。大多数现有的联邦学习项目都是基于水平联邦学习。具有水平联邦学习的数据库和训练过程很简单，因为数据集是相同的，只是数据分布和要学习的数据输入不同。水平联邦学习也称为同质或基于样本的联邦学习。'
- en: '**Vertical FL** is applied to the cases where different datasets share the
    same sample ID space but differ in feature space. You can check out this paper
    (https://arxiv.org/pdf/2202.04309) for further information about vertical FL.
    Relating these different databases through FL can be challenging, especially if
    the unique ID for the data is different. The key idea of vertical FL is to improve
    an ML model by using distributed datasets with a diverse set of attributes. Therefore,
    vertical FL can handle the partitioned data vertically with different attributes
    in the same sample space. Vertical FL is also called heterogeneous or feature-based
    FL.'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '**垂直联邦学习（Vertical FL**）适用于不同数据集共享相同的样本ID空间但特征空间不同的情况。您可以查看这篇论文（https://arxiv.org/pdf/2202.04309）以获取有关垂直联邦学习的更多信息。通过联邦学习将这些不同的数据库联系起来可能具有挑战性，特别是如果数据的不同唯一ID不同。垂直联邦学习的关键思想是通过使用具有不同属性集的分布式数据集来改进机器学习模型。因此，垂直联邦学习可以垂直处理具有相同样本空间中不同属性的分区数据。垂直联邦学习也称为异质或基于特征的联邦学习。'
- en: Centralized FL and decentralized FL
  id: totrans-45
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 集中式联邦学习和去中心化联邦学习
- en: '**Centralized FL** is currently the most common approach and most of the platforms
    employ this framework. It uses a centralized server to collect and aggregate the
    different ML models, with distributed training across all local data sources.
    In this book, we focused on a centralized FL approach, with a scenario where local
    training agents communicate the learning results to a centralized FL server to
    create a global model.'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '**集中式联邦学习（Centralized FL**）是目前最常见的方法，大多数平台都采用这种框架。它使用集中式服务器来收集和聚合不同的机器学习模型，并在所有本地数据源上进行分布式训练。在这本书中，我们专注于集中式联邦学习方法，其中本地训练代理将学习结果传达给集中式联邦学习服务器以创建全局模型。'
- en: '**Decentralized FL**, on the other hand, does not use a centralized server
    to aggregate ML models. It requires individual ML models trained over local data
    sources to be communicated among themselves without a master node. In this case,
    model weights are transferred from each individual dataset to the others for further
    training. It could potentially be susceptible to model poisoning if an untrusted
    party could access the intelligence, and this is a common problem derived from
    peer-to-peer frameworks as well.'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '**去中心化联邦学习（Decentralized FL**），另一方面，不使用集中式服务器来聚合机器学习模型。它要求在本地数据源上训练的各个机器学习模型之间相互通信，而不需要一个主节点。在这种情况下，模型权重从每个单独的数据集传输到其他数据集以进行进一步训练。如果不受信任的方能够访问智能，则可能容易受到模型中毒的影响，这是从对等框架中衍生出的一个常见问题。'
- en: Cross-silo FL and cross-device FL
  id: totrans-48
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 跨领域联邦学习和跨设备联邦学习
- en: '**Cross-silo FL** is the case where ML models are trained on data distributed
    across any functional, organizational, and regulatory barriers. In this case,
    big data is usually stored in a larger size of storage, with training computing
    capabilities such as cloud virtual machines. In the cross-silo FL case, the number
    of silos/training environments is relatively small, so not so many agents are
    needed in the FL process.'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '**跨领域联邦学习（Cross-silo FL**）是指机器学习模型在跨越任何功能、组织和监管障碍的数据上训练的情况。在这种情况下，大数据通常存储在更大的存储空间中，并具备如云虚拟机这样的训练计算能力。在跨领域联邦学习的情况下，领域/训练环境的数量相对较小，因此在联邦学习过程中不需要太多代理。'
- en: '**Cross-device FL** is the case where models need to be trained at scale, often
    within edge devices, such as mobile phones, **Internet of Things** (**IoT**) devices,
    Raspberry Pi-type environments, and so on. In this case, a huge number of devices
    are connected for the aggregation of ML models. In the cross-device FL case, the
    limitation basically lies in the low computing power of those edge devices. The
    framework also needs to handle a number of disconnected and inactive devices to
    conduct a consistent and continuous FL process. The training process and its data
    volume should be limited too.'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '**跨设备FL**是模型需要在大规模训练的情况，通常在边缘设备上进行，例如手机、**物联网**（**IoT**）设备、Raspberry Pi类型的设备等。在这种情况下，大量设备连接起来以聚合机器学习模型。在跨设备FL的情况下，限制基本上在于这些边缘设备的低计算能力。该框架还需要处理大量断开和无效的设备，以进行一致和持续的FL过程。训练过程及其数据量也应受到限制。'
- en: That concludes the different types of FL that can be applied to a variety of
    scenarios in ML applications. There are new techniques that try to enhance the
    FL framework to evolve into the next generation of AI technologies with FL. Let’s
    look into several advanced approaches in the next section.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 这就总结了可以应用于机器学习应用中各种场景的不同类型的FL。有一些新技术试图增强FL框架，使其演变成下一代具有FL的人工智能技术。让我们在下一节中探讨几个高级方法。
- en: Understanding enhanced distributed learning frameworks with FL
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 理解基于FL的增强分布式学习框架
- en: There are ongoing efforts to further enhance FL or distributed learning frameworks.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 正在进行着进一步增强FL或分布式学习框架的努力。
- en: Split learning
  id: totrans-54
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 分割学习
- en: '**Split learning**, developed in the MIT Media Lab, is an emerging distributed
    learning technique that enables partitioning ML models into multiple sections,
    trains those partitioned ML models at distributed clients, and aggregates them
    at the end. Split learning does not have to share the data either, so it is considered
    a privacy-preserving AI as well.'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '**分割学习**是在麻省理工学院媒体实验室开发的，是一种新兴的分布式学习技术，它使机器学习模型能够分割成多个部分，在分布式客户端上训练这些分割的机器学习模型，并在最后进行聚合。分割学习也不必共享数据，因此也被认为是保护隐私的人工智能。'
- en: The overall framework is similar to the FL. However, there is a difference in
    that the neural network is partitioned into multiple sections that will be trained
    on distributed clients. The trained weights of the section of the neural network
    are then transferred to the server and clients. The weights of those multiple
    sections are continuously trained in the next training sessions. Therefore, no
    raw and private data is shared among the distributed clients, and only the weights
    of each section are sent to the next client.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 整体框架类似于FL。然而，不同之处在于神经网络被划分为多个部分，这些部分将在分布式客户端上进行训练。然后，该神经网络部分的训练权重将被传输到服务器和客户端。这些多个部分的权重将在下一次训练会话中持续训练。因此，分布式客户端之间不共享任何原始和私有数据，只有每个部分的权重被发送到下一个客户端。
- en: Especially, **SplitFed** ([https://arxiv.org/abs/2004.12088](https://arxiv.org/abs/2004.12088))
    is another advanced technique that combines split learning and FL. SplitFed splits
    the deep neural network architecture between the FL clients and servers to realize
    a higher level of privacy than FL. It offers better efficiency than split learning
    based on the parallel learning paradigm of FL.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 尤其是SplitFed（[https://arxiv.org/abs/2004.12088](https://arxiv.org/abs/2004.12088)）是另一种结合分割学习和FL的高级技术。SplitFed在FL客户端和服务器之间分割深度神经网络架构，以实现比FL更高的隐私级别。它比基于FL并行学习范式的分割学习提供了更好的效率。
- en: Swarm learning
  id: totrans-58
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 群体学习
- en: '**Swarm learning** is a decentralized ML solution built on blockchain technology,
    particularly designed to enable enterprise industries to take advantage of the
    power of distributed data, which results in protecting data privacy and security.'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '**群体学习**是基于区块链技术的去中心化机器学习解决方案，特别设计用于使企业行业能够利用分布式数据的力量，从而保护数据隐私和安全。'
- en: This can be achieved by individual nodes sharing parameters of ML models derived
    from the local data.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 这可以通过各个节点共享从本地数据推导出的机器学习模型的参数来实现。
- en: Parameters shared from the distributed clients are merged into a global model.
    The difference from the normal FL is that the merge process is not performed by
    a central server. The distributed nodes and clients choose a temporary leader
    to perform the merge. That is why swarm learning is truly decentralized, also
    providing greater fault tolerance and resiliency. The distributed agents have
    the collective intelligence of a network without sharing local data into one node.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 从分布式客户端共享的参数合并到一个全局模型中。与正常FL的不同之处在于，合并过程不是由中央服务器执行的。分布式节点和客户端选择一个临时领导者来执行合并。这就是为什么蜂群学习真正实现了去中心化，同时也提供了更大的容错性和弹性。分布式代理具有网络的集体智能，而不需要将本地数据共享到一个节点。
- en: Swarm learning builds on top of blockchain. Blockchain provides the decentralized
    control, scalability, and fault-tolerance aspects to work beyond the restrictions
    of a single enterprise. At the same time, blockchain introduces a tamperproof
    cryptocurrency framework, and the participants can use the framework to monetize
    their contributions.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 蜂群学习建立在区块链之上。区块链提供了去中心化控制、可扩展性和容错性等方面，以超越单个企业的限制。同时，区块链引入了一个防篡改的加密货币框架，参与者可以使用该框架来货币化他们的贡献。
- en: BAFFLE
  id: totrans-63
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: BAFFLE
- en: In addition, there is a framework called **BAFFLE** that stands for **Blockchain
    Based Aggregator Free Federated Learning** (https://arxiv.org/abs/1909.07452).
    BAFFLE is also an aggregator-free, blockchain-driven FL framework that is inherently
    decentralized. BAFFLE utilizes **Smart Contracts** (**SCs**) from the blockchain
    framework to coordinate round management, as well as model aggregation and updating
    tasks of FL. Using BAFFLE boosts computational performance. The global model is
    also decomposed into many sets of chunks, directly handled by the SC.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，还有一个名为**BAFFLE**的框架，代表**基于区块链的聚合器免费联邦学习**（https://arxiv.org/abs/1909.07452）。BAFFLE也是一个无聚合器、由区块链驱动的FL框架，本质上具有去中心化特性。BAFFLE利用区块链框架中的**智能合约**（**SCs**）来协调轮次管理，以及FL的模型聚合和更新任务。使用BAFFLE可以提升计算性能。全局模型也被分解成许多数据块集合，直接由SC处理。
- en: Now that we have learned about the latest research and developments in the FL
    field, in the next section, let’s look at a more visionary aspect of the AI, science,
    and technologies of collective intelligence.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经了解了FL领域的最新研究和发展，在下一节中，让我们看看人工智能、科学和集体智能技术的更具有前瞻性的方面。
- en: Journeying on to collective intelligence
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前往集体智能之旅
- en: Big data has been a game changer for the AI movement. While the amount of data
    generated at the edge and by people will increase exponentially, intelligence
    derived from that data benefits society. Therefore, the big data era will gradually
    pass the baton to the collective intelligence era, empowered by FL, in which people
    will collaboratively create a wisdom-driven world.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 大数据已经成为人工智能运动的一个变革者。虽然边缘和人们生成数据的数量将以指数级增长，但从中提取的智能对社会有益。因此，大数据时代将逐渐将接力棒传递给由FL（联邦学习）赋能的集体智能时代，在这个时代，人们将共同创造一个由智慧驱动的世界。
- en: Let’s start by defining an intelligence-centric era where the concept of collective
    intelligence is realized based on FL.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从定义一个以智能为中心的时代开始，在这个时代，基于FL的集体智能概念得以实现。
- en: Intelligence-centric era with collective intelligence
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 以集体智能为中心的时代
- en: '**Collective Intelligence** (**CI**) is the concept of a large group of single
    entities acting together in ways that seem intelligent. CI is an emergent phenomenon
    where groups of people process information to achieve insights that are not understandable
    by just individual members alone.'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '**集体智能**（**CI**）是指大量单个实体以看似智能的方式共同行动的概念。CI是一种涌现现象，其中人群处理信息以获得仅靠单个成员无法理解的见解。'
- en: 'Recently, Thomas Malone, the head of the MIT Center for Collective Intelligence,
    and the person who initially coined the phrase *collective intelligence*, broadened
    the definition of CI: *“CI is something that can emerge from a group that includes
    people and computers. CI is a very general property, and superminds can arise
    in many kinds of systems, although the systems I’ve mostly talked about are those
    that involve people and computers”* (Reference: [https://www2.deloitte.com/xe/en/insights/focus/technology-and-the-future-of-work/human-and-machine-collaboration.html](https://www2.deloitte.com/xe/en/insights/focus/technology-and-the-future-of-work/human-and-machine-collaboration.html)).'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 最近，麻省理工学院集体智能中心负责人、最初提出“集体智能”一词的人托马斯·马龙，扩展了CI的定义：“CI是能够从包括人和计算机在内的群体中产生的东西。CI是一个非常普遍的特性，超级智能可以在许多类型的系统中出现，尽管我主要讨论的系统是涉及人和计算机的系统。”（参考：[https://www2.deloitte.com/xe/en/insights/focus/technology-and-the-future-of-work/human-and-machine-collaboration.html](https://www2.deloitte.com/xe/en/insights/focus/technology-and-the-future-of-work/human-and-machine-collaboration.html)）。
- en: We are now welcoming the new perspective of CI in technologies empowered by
    FL.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在正迎来由FL（强化学习）赋能的技术中CI（集体智能）的新视角。
- en: Data, in the current world of technology, is a great source to extract intelligence.
    Dispersed datasets around the world can be converted into a collection of intelligence
    represented by AI technologies. The current trend, as mentioned, is big data,
    so big data companies are leading not only the technology industries but also
    the entire economy of the world as well. The future is moving in a CI direction.
    The vision of CI is even clearer with the emergence of sophisticated ML algorithms,
    including deep learning, as the intelligence represented by ML models can extract
    intelligence from people, computers, or any devices that generate meaningful data.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在当前的技术世界中，数据是提取智能的巨大来源。全球分散的数据集可以通过AI技术转化为智能集合。正如提到的，当前的趋势是大数据，因此大数据公司不仅领导着技术产业，也领导着整个世界经济。未来正朝着CI的方向发展。随着复杂ML算法（包括深度学习）的出现，CI的愿景变得更加清晰，因为ML模型所代表的智能可以从人、计算机或任何生成有意义数据的设备中提取智能。
- en: Why does FL promote the idea of CI? The nature of FL is to collect a set of
    distributed intelligence to be enhanced by an aggregating mechanism as discussed
    in this book. This itself enables a data-less platform that does not require collecting
    data from people or devices directly.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么FL会推崇CI的概念？FL的本质是收集一组分布式智能，通过书中讨论的聚合机制进行增强。这本身就能实现一个无需直接从人或设备收集数据的数据无平台。
- en: With the big data issues discussed throughout the book, we have steered clear
    of focusing on data-centric platform. However, it is also true that learning big
    data is very much critical and inevitable to really create systems and applications
    that are truly valuable and deliver real value in many domains of the world. That
    is why the big data field is still the most prosperous industry, even if it is
    facing significant challenges represented by privacy regulations, security, data
    silos, and so on.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管书中讨论了大数据问题，但我们并没有专注于以数据为中心的平台。然而，学习大数据对于真正创建真正有价值并能在世界许多领域创造实际价值的应用系统来说，是非常关键和不可避免的。这就是为什么即使面对隐私法规、安全、数据孤岛等重大挑战，大数据领域仍然是发展最繁荣的行业。
- en: Now is the time to further develop and disseminate the technologies such as
    FL that can accelerate the era of CI by fundamentally resolving the issues of
    big data. This way, we can realize a new era of technologies, truly driven by
    CI that has been backed up by an authentic mathematical basis.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是进一步发展和传播FL等技术的时机，这些技术可以通过从根本上解决大数据问题来加速CI时代的到来。这样，我们就能实现一个由真正的数学基础支持的CI驱动的新技术时代。
- en: As mentioned, *data-centric* platforms are the current trend. So many data and
    auto ML vendors can support and automate the processes of creating ML-based intelligence
    by organizing data and learning procedures to do so. An *intelligence-centric*
    or *model-centric* platform should be the next wave of technology in which people
    can share and enhance intelligence that they generate on their own. With FL, we
    can even realize crowd-sourced learning, where people can collaboratively and
    continuously enhance the quality and performance of ML models. Thus, FL is a critical
    and essential part of the intelligence-centric platform to truly achieve a wisdom-driven
    world.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 正如所述，*以数据为中心*的平台是当前的趋势。因此，许多数据和自动机器学习供应商可以通过组织数据和学习程序来支持并自动化创建基于机器学习的智能的过程。一个*以智能为中心*或*以模型为中心*的平台应该是下一波技术浪潮，人们可以在其中共享和增强他们自己生成的智能。借助FL，我们甚至可以实现众包学习，人们可以共同且持续地提升机器学习模型的质量和性能。因此，FL是智能中心平台实现智慧驱动世界的关键和必要部分。
- en: Internet of Intelligence
  id: totrans-78
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 智能互联网
- en: The IoT evolved into the **Internet of Everything**. However, what is the essential
    information that people want? Is it just big data? Or intelligence derived from
    data? With 5G technologies, a lot of data can be transferred over the Internet
    at a much higher speed, partially resolving the latency issues in many AI applications.
    FL can exchange less information than raw data but still needs to transfer ML
    models over the Internet.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 物联网演变为**万物互联**。然而，人们真正需要的信息是什么？仅仅是大数据吗？还是从数据中提取的智能？随着5G技术的出现，大量数据可以在互联网上以更高的速度传输，部分解决了许多人工智能应用中的延迟问题。FL可以交换比原始数据更少的信息，但仍需要在互联网上传输机器学习模型。
- en: While lots of research projects are minimizing communications latency in FL,
    in the future, information related to intelligence will be another entity often
    exchanged over the web. There will be a model repository such as **Model Zoo**
    everywhere, and crowdsourced learning empowered by FL will be more common to create
    better intelligence over the Internet with people worldwide collaboratively.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然许多研究项目正在最小化FL中的通信延迟，但在未来，与智能相关的信息将成为另一种经常在网络上交换的实体。到处都会有模型库，例如**模型动物园**，由FL支持的众包学习将更常见，以在互联网上与全球的人们共同创造更好的智能。
- en: This paradigm shift is not just in the AI field itself but also in the wide
    range of information technologies. As we’ll discuss in the next sections, this
    **Internet of Intelligence** movement will be the basis of crowdsourced learning
    and CI, and will help make intelligence available to as many people as possible
    in the coming years.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 这种范式转变不仅限于人工智能领域本身，还包括广泛的信息技术领域。正如我们将在下一节中讨论的，这种**智能互联网**运动将成为众包学习和CI的基础，并有助于在未来的几年内让尽可能多的人获得智能。
- en: Crowdsourced learning with FL
  id: totrans-82
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: FL的众包学习
- en: The *collection of intelligence* performed by FL naturally makes it a strong
    fit for moving toward CI. The same thing is applied to a scenario where people
    can collectively contribute a training process to global ML models.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: FL执行的**智能集合**自然使其非常适合向CI（集体智能）迈进。同样的事情也适用于人们可以集体贡献训练过程以供全球机器学习模型使用的场景。
- en: High-performing ML models in areas such as computer vision and natural language
    processing have been trained by certain big data companies, often spending a huge
    amount of money, including hundreds of millions of dollars.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 计算机视觉和自然语言处理等领域的高性能机器学习模型已被某些大数据公司训练，通常花费巨额资金，包括数亿美元。
- en: Is there any way to collectively train an ML model that will probably be beneficial
    for a wide range of people in general? With the advanced framework of FL, that
    is possible.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 是否有办法集体训练一个可能对广大公众都有益的机器学习模型？借助FL（联邦学习）的先进框架，这是可能的。
- en: FL provides an authentic way to manage the aggregation of multiple trained models
    from various distributed agents. In this case, the distributed agents themselves
    may be people worldwide, where each individual user and trainer of the ML model
    has their own unique datasets that are not available to anybody else because of
    data privacy, silos, and so on.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: FL提供了一种管理来自各种分布式代理的多个训练模型聚合的真正方式。在这种情况下，分布式代理本身可能是全球的每个人，其中每个机器学习模型的用户和训练者都有自己的独特数据集，这些数据集由于数据隐私、孤岛效应等原因而无法被其他人获取。
- en: This way of utilizing CI is often called *crowdsourced learning*. However, traditional
    crowdsourced learning is conducted in a much more limited way, just based on facilitating
    and recruiting data annotators at a large scale.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 这种利用CI的方式通常被称为*众包学习*。然而，传统的众包学习是以一种更加有限的方式进行，仅仅基于大规模促进和招募数据标注者。
- en: With this new paradigm with FL, users on the CI platform can access and download
    ML models that they are interested in and retrain them if necessary to absorb
    learning in their own environments. Then, with the framework to share the trained
    ML models by those users, an advanced aggregation framework of FL could pick up
    the appropriate models to be federated and make the global model perform better,
    adopting diverse data that can be only accessible to the users.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 在FL的新范式下，CI平台上的用户可以访问和下载他们感兴趣的人工智能模型，并在必要时重新训练它们，以在自己的环境中吸收学习。然后，通过用户共享训练好的机器学习模型的框架，FL的高级聚合框架可以挑选出合适的模型进行联邦学习，使全局模型表现更佳，采用只有用户才能访问的多样化数据。
- en: This way, intelligence by ML is becoming more available to many individuals
    in general, not just to specific companies that have a significant amount of data
    and budgets to train an authentic ML model. In other words, without an FL framework,
    collaborative learning is difficult and tricky and almost impossible to even automate.
    This openness of the ML models will move the entire technological world to the
    next level, and a lot more applications will become feasible, with truly powerful
    intelligence that is trained by enthusiasts to make the world better.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 这样，通过机器学习的智能正变得更加普遍，不仅限于那些拥有大量数据和预算来训练真实机器学习模型的特定公司。换句话说，没有FL框架，协作学习是困难的、棘手的，甚至几乎不可能自动化。这种机器学习模型的开放性将推动整个技术世界达到下一个水平，并将使更多应用成为可能，这些应用拥有由爱好者训练的真正强大的智能，旨在使世界变得更好。
- en: Summary
  id: totrans-90
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this final chapter of the book, we discussed fascinating future trends and
    developments in which FL is expected to play a crucial role in the coming decade.
    In the future, FL is a *must-to-have* technology from a *nice-to-have* framework
    for most enterprises and application providers, because of the inevitable privacy
    regulations and technology trends requiring scalability with so many users.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书的最后一章中，我们讨论了未来趋势和发展，其中FL预计将在未来十年内发挥关键作用。在未来，FL对于大多数企业和应用提供商来说，将是从“希望拥有”的框架转变为“必须拥有”的技术，因为不可避免的数据隐私法规和技术趋势要求与众多用户一起实现可扩展性。
- en: As we discussed, future technologies will be empowered by the concept of the
    Internet of Intelligence, by which people and computers mainly exchange their
    wisdom altogether to create a more intelligent society and world. Finally, the
    data-centric technologies will gradually evolve into intelligence-centric technologies
    because of the current collaborative learning trend with CI, which makes people
    pay significant attention to FL-related technologies, whose foundations are discussed
    throughout this book.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们所讨论的，未来的技术将由智能互联网的概念所驱动，人们和计算机主要交换他们的智慧，共同创造一个更加智能的社会和世界。最后，由于当前与CI相关的协作学习趋势，以数据为中心的技术将逐渐演变为以智能为中心的技术，这使得人们高度重视FL相关的技术，这些技术的基石在本书中进行了讨论。
- en: This book was written at the dawn of a new age in advancements made possible
    by AI. There are many uncertainties and many more challenges ahead. We have made
    great strides in utilizing the big data playbook in the last couple of decades,
    and we have now outgrown those methods and must adopt new ways of doing things,
    new technologies, and new ideas to forge ahead. As long as we capture the current
    moment and invest in new technologies such as FL, we will have a bright future
    ahead of us.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 这本书是在人工智能带来的新进步时代曙光下撰写的。在过去几十年里，我们在利用大数据策略方面取得了巨大进步，但我们已经超越了这些方法，必须采用新的做事方式、新技术和新理念来继续前进。只要我们抓住当前的时刻，投资于如FL等新技术，我们面前就有光明的未来。
- en: Further reading
  id: totrans-94
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'The following are some sources if you wish to dive deeper into some concepts
    discussed in this chapter:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您希望深入了解本章讨论的一些概念，以下是一些参考资料：
- en: '*UNDERSTANDING THE TYPES OF FEDERATED LEARNING*, posted by OpenMinded: [https://blog.openmined.org/federated-learning-types](https://blog.openmined.org/federated-learning-types'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*理解联邦学习的类型*，由OpenMinded发布：[https://blog.openmined.org/federated-learning-types](https://blog.openmined.org/federated-learning-types)'
- en: )
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: )
- en: 'Thapa, Chandra, et al. *SplitFed: When Federated Learning Meets Split Learning*,
    Proceedings of the AAAI Conference on Artificial Intelligence. Vol. 36\. No. 8\.
    2022: [https://arxiv.org/pdf/2004.12088.pdf](https://arxiv.org/pdf/2004.12088.pdf'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Thapa, Chandra, 等人。*SplitFed: 当联邦学习遇到分割学习*，AAAI人工智能会议论文集。第36卷。第8期。2022年：[https://arxiv.org/pdf/2004.12088.pdf](https://arxiv.org/pdf/2004.12088.pdf)'
- en: )
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: )
- en: '*SWARM LEARNING: TURN YOUR DISTRIBUTED DATA INTO COMPETITIVE EDGE,* technical
    white paper: [https://www.labs.hpe.com/pdf/Swarm_Learning.pdf](https://www.labs.hpe.com/pdf/Swarm_Learning.pdf'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*SWARM LEARNING: 将您的分布式数据转化为竞争优势，* 技术白皮书：[https://www.labs.hpe.com/pdf/Swarm_Learning.pdf](https://www.labs.hpe.com/pdf/Swarm_Learning.pdf)'
- en: )
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: )
- en: 'Paritosh Ramanan and Kiyoshi Nakayama. *BAFFLE: Blockchain based aggregator
    free federated learning*, 2020 IEEE International Conference on Blockchain (Blockchain).
    IEEE, 2020: [https://arxiv.org/pdf/1909.07452.pdf](https://arxiv.org/pdf/1909.07452.pdf)'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Paritosh Ramanan 和 Kiyoshi Nakayama。*BAFFLE: 基于区块链的聚合器免费联邦学习*，2020 IEEE国际区块链会议（Blockchain）。IEEE，2020年：[https://arxiv.org/pdf/1909.07452.pdf](https://arxiv.org/pdf/1909.07452.pdf)'
- en: 'Appendix: Exploring Internal Libraries'
  id: totrans-103
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 附录：探索内部库
- en: In [*Chapter 4*](B18369_04.xhtml#_idTextAnchor085), *Federated Learning Server
    Implementation with Python*, and [*Chapter 5*](B18369_05.xhtml#_idTextAnchor130),
    *Federated Learning Client-Side Implementation*, both about the implementation
    of `fl_main/lib/util` directory of the provided `simple-fl` GitHub repository.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 在[*第4章*](B18369_04.xhtml#_idTextAnchor085)，*使用Python实现联邦学习服务器*，和[*第5章*](B18369_05.xhtml#_idTextAnchor130)，*联邦学习客户端实现*，都关于提供的
    `simple-fl` GitHub仓库中 `fl_main/lib/util` 目录的实现。
- en: In this appendix, we will provide an overview of the internal library and utilization
    classes and functions with code samples to achieve their functionalities.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 在本附录中，我们将提供内部库和利用类及函数的概述，并附上代码示例以展示其功能。
- en: 'In this chapter, we’re going to cover the following main topics:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主要内容：
- en: Overview of the internal libraries for the FL system
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: FL系统内部库概述
- en: Enumeration classes for implementing the FL system
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于实现FL系统的枚举类
- en: Understanding communication handler functionalities
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解通信处理器功能
- en: Understanding the data structure handler class
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解数据结构处理器类
- en: Understanding helper and supporting libraries
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解辅助和支持库
- en: Messengers to generate communication payloads
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于生成通信负载的消息传递器
- en: Technical requirements
  id: totrans-113
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: All the library code files introduced in this chapter can be found in the `fl_main/lib/util`
    directory of the GitHub repository (https://github.com/tie-set/simple-fl).
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中介绍的所有库代码文件都可以在GitHub仓库（https://github.com/tie-set/simple-fl）的 `fl_main/lib/util`
    目录中找到。
- en: Important note
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: You can use the code files for personal or educational purposes. Please note
    that we will not support deployment for commercial use and will not be responsible
    for any errors, issues, or damages caused by using the code.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用这些代码文件用于个人或教育目的。请注意，我们不会支持商业部署，并且不对使用代码造成的任何错误、问题或损害负责。
- en: Overview of the internal libraries for the FL system
  id: totrans-117
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: FL系统内部库概述
- en: '*Figure A.1* shows the Python code components for the internal libraries found
    in the `lib/util` folder of the `fl_main` directory, which is used in the database,
    aggregator, and agent of the FL system:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '*图A.1* 展示了位于 `fl_main` 目录下的 `lib/util` 文件夹中内部库的Python代码组件，这些组件用于FL系统的数据库、聚合器和代理：'
- en: '![Figure A.1 – Python software components for the internal libraries used in
    the database, aggregator, and agent'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '![图A.1 – 用于数据库、聚合器和代理通信的Python软件组件'
- en: '](img/B18369_A_01.jpg)'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B18369_A_01.jpg)'
- en: Figure A.1 – Python software components for the internal libraries used in the
    database, aggregator, and agent
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 图A.1 – 用于数据库、聚合器和代理通信的Python软件组件
- en: The following are brief descriptions of the Python files for the internal libraries
    found in the `lib/util` folder of the FL system.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是对FL系统中位于 `lib/util` 文件夹内部库的Python文件的简要描述。
- en: states.py
  id: totrans-123
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: states.py
- en: The `states.py` file in the `lib/util` folder defines a variety of enumeration
    classes to support implementing the FL system. Definitions of the classes include
    FL client states, types of ML models and messages, and locations of the information
    and values of various messages.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 位于 `lib/util` 文件夹中的 `states.py` 文件定义了多种枚举类以支持实现FL系统。类定义包括FL客户端状态、ML模型类型和消息类型，以及各种消息的信息和值的位置。
- en: communication_handler.py
  id: totrans-125
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: communication_handler.py
- en: The `communication_handler.py` file in the `lib/util` folder can provide communication
    functionalities among the database, FL server, and clients, mainly defining the
    `send` and `receive` functions between them. Also, it provides the functions to
    start the servers for the database, aggregator, and agent.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 在`lib/util`文件夹中的`communication_handler.py`文件可以提供数据库、FL服务器和客户端之间的通信功能，主要定义它们之间的`send`和`receive`函数。此外，它还提供了启动数据库、聚合器和代理服务器的函数。
- en: data_struc.py
  id: totrans-127
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: data_struc.py
- en: The `data_struc.py` file in the `lib/util` folder defines the class called `LimitedDict`
    to support an aggregation process of the FL cycle. It provides functions to convert
    ML models with a dictionary format into `LimitedDict` and vice versa.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 在`lib/util`文件夹中的`data_struc.py`文件定义了一个名为`LimitedDict`的类，以支持FL周期的聚合过程。它提供了将具有字典格式的ML模型转换为`LimitedDict`以及相反的函数。
- en: helpers.py
  id: totrans-129
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: helpers.py
- en: The `helpers.py` file in the `lib/util` folder has a collection of internal
    helper functions, such as reading configuration files, generating unique hash
    IDs, packaging ML models into a dictionary, loading and saving local ML models,
    getting the IP address of the machine, and manipulating the FL client state.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 在`lib/util`文件夹中的`helpers.py`文件包含了一系列内部辅助函数，例如读取配置文件、生成唯一的哈希ID、将ML模型打包成字典、加载和保存本地ML模型、获取机器的IP地址以及操作FL客户端状态。
- en: messengers.py
  id: totrans-131
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: messengers.py
- en: The `messengers.py` file in the `lib/util` folder is for generating a variety
    of messages as communication payloads among FL systems to facilitate the implementation
    of communication protocols of the simple FL system discussed throughout the book.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 在`lib/util`文件夹中的`messengers.py`文件用于生成FL系统之间作为通信有效载荷的各种消息，以促进书中讨论的简单FL系统通信协议的实现。
- en: Now that we have discussed an overview of the FL system’s internal libraries,
    next, let’s talk about the individual code files in more detail.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 既然我们已经讨论了FL系统内部库的概述，那么接下来让我们更详细地讨论各个代码文件。
- en: Enumeration classes for implementing the FL system
  id: totrans-134
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 用于实现FL系统的枚举类
- en: Enumeration classes are for assisting implemention of the FL system. They are
    defined in the `states.py` file found in the `lib/util` folder of the `fl_main`
    directory. Let us look into what libraries are imported to define the enumeration
    classes.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 枚举类用于辅助实现FL系统。它们定义在`fl_main`目录的`lib/util`文件夹中的`states.py`文件中。让我们看看定义枚举类时导入了哪些库。
- en: Importing libraries to define the enumeration classes
  id: totrans-136
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 导入库以定义枚举类
- en: 'In this `states.py` code example, the file imports general libraries such as
    `Enum` and `IntEnum` from `enum`:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个`states.py`代码示例中，该文件导入了来自`enum`的通用库，如`Enum`和`IntEnum`：
- en: '[PRE0]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Next, we’ll explain the class that defines the prefixes of three components
    of the FL system.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将解释定义FL系统三个组成部分前缀的类。
- en: IDPrefix defining the FL system components
  id: totrans-140
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 定义FL系统组件的IDPrefix
- en: 'The following is a list of classes to define the FL system components. `IDPrefix`
    is the prefix to indicate which FL component is referred to in the code, such
    as `agent`, `aggregator`, or `database`:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一系列定义FL系统组件的类。`IDPrefix`是用于指示代码中引用的FL组件的前缀，例如`agent`、`aggregator`或`database`：
- en: '[PRE1]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Next, we’ll provide a list of the classes for the client state.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将提供客户端状态的类列表。
- en: Client state classes
  id: totrans-144
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 客户端状态类
- en: 'The following is a list of enumeration classes related to the FL client states,
    including the state of waiting for global models (`waiting_gm`), the state of
    ML training (`training`), the state of sending local ML models (`sending`), and
    the state of receiving the global models (`gm_ready`). The client states defined
    in the agent specification are as follows:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是与FL客户端状态相关的枚举类列表，包括等待全局模型的状态（`waiting_gm`）、机器学习训练的状态（`training`）、发送本地机器学习模型的状态（`sending`）和接收全局模型的状态（`gm_ready`）。在代理规范中定义的客户端状态如下：
- en: '[PRE2]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: List of classes defining the types of ML models and messages
  id: totrans-147
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 定义ML模型和消息类型的类列表
- en: The following is a list of classes defining the types of ML models and messages
    related to the FL system implementation.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一系列定义与FL系统实现相关的ML模型和消息类型的类。
- en: The ModelType class
  id: totrans-149
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ModelType类
- en: 'The types of ML models, including `local` models and `cluster` models (`global`
    models), are defined as follows:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 机器学习模型的类型，包括`local`模型和`cluster`模型（`global`模型），定义如下：
- en: '[PRE3]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The DBMsgType class
  id: totrans-152
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: DBMsgType类
- en: 'The message types are defined in the communication protocol between an aggregator
    and database, as follows:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 消息类型在聚合器和数据库之间的通信协议中定义，如下所示：
- en: '[PRE4]'
  id: totrans-154
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The AgentMsgType class
  id: totrans-155
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: AgentMsgType类
- en: 'The message types are defined in the communication protocol sent from an agent
    to an aggregator, as follows:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 消息类型在从代理发送到聚合器的通信协议中定义，如下所示：
- en: '[PRE5]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: The AggMsgType class
  id: totrans-158
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: AggMsgType类
- en: 'The message types are defined in the communication protocol sent from an aggregator
    to an agent, as follows:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 消息类型在从聚合器发送到代理的通信协议中定义，如下所示：
- en: '[PRE6]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: List of state classes defining message location
  id: totrans-161
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 定义消息位置的州类列表
- en: The following is a list of classes defining the message location related to
    communication between the FL systems.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是与FL系统之间通信相关的消息位置定义的类列表。
- en: The ParticipateMSGLocation class
  id: totrans-163
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ParticipateMSGLocation类
- en: 'The index indicator to read a participation message from an agent to the aggregator
    is as follows:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 从代理到聚合器的参与消息的索引指示器如下：
- en: '[PRE7]'
  id: totrans-165
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: The ParticipateConfirmationMSGLocation class
  id: totrans-166
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ParticipateConfirmationMSGLocation类
- en: 'The index indicator to read a participation confirmation message sent back
    from the aggregator is as follows:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 从聚合器返回的参与确认消息的索引指示器如下：
- en: '[PRE8]'
  id: totrans-168
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: The DBPushMsgLocation class
  id: totrans-169
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: DBPushMsgLocation类
- en: 'The index indicator to read a `push` message from an aggregator to the database
    is as follows:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 从聚合器到数据库的`push`消息的索引指示器如下：
- en: '[PRE9]'
  id: totrans-171
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: The GMDistributionMsgLocation class
  id: totrans-172
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: GMDistributionMsgLocation类
- en: 'The index indicator to read a global model distribution message from an aggregator
    to agents is as follows:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 从聚合器到代理的全局模型分布消息的索引指示器如下：
- en: '[PRE10]'
  id: totrans-174
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: The ModelUpMSGLocation class
  id: totrans-175
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ModelUpMSGLocation类
- en: 'The index indicator to a message uploading local ML models from an agent to
    an aggregator is as follows:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 从代理到聚合器上传本地机器学习模型的索引指示器如下：
- en: '[PRE11]'
  id: totrans-177
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: The PollingMSGLocation class
  id: totrans-178
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: PollingMSGLocation类
- en: 'The index indicator for a `polling` message from an agent to an aggregator
    is as follows:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 从代理到聚合器的`polling`消息的索引指示器如下：
- en: '[PRE12]'
  id: totrans-180
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: We have defined the enumeration classes that are utilized throughout the code
    of the FL system. In the next section, we will discuss the communication handler
    functionalities.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已定义了在整个FL系统代码中使用的枚举类。在下一节中，我们将讨论通信处理器的功能。
- en: Understanding communication handler functionalities
  id: totrans-182
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解通信处理器功能
- en: The communication handler functionalities are implemented in the `communication_handler.py`
    file, which can be found in the `lib/util` folder of the `fl_main` directory.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 通信处理器的功能实现在`communication_handler.py`文件中，该文件位于`fl_main`目录下的`lib/util`文件夹中。
- en: Importing libraries for the communication handler
  id: totrans-184
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为通信处理器导入库
- en: 'In this `communication_handler.py` code example, the handler imports general
    libraries such as `websockets`, `asyncio`, `pickle`, and `logging`:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 在此`communication_handler.py`代码示例中，处理器导入了一般库，如`websockets`、`asyncio`、`pickle`和`logging`：
- en: '[PRE13]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Next, we’ll provide a list of functions of the communication handler.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将提供通信处理器功能的列表。
- en: Functions of the communication handler
  id: totrans-188
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 通信处理器的功能
- en: The following is a list of the functions related to the communication hander.
    Although the **Secure Sockets Layer** (**SSL**) or **Transport Layer Security**
    (**TLS**) framework is not implemented in the communication handler code here
    for simplification, it is recommended to support them to secure communication
    among FL components all the time.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是与通信处理器相关的函数列表。尽管为了简化，此处未在通信处理器代码中实现**安全套接字层**（**SSL**）或**传输层安全性**（**TLS**）框架，但建议始终支持它们以保护FL组件之间的通信安全。
- en: The init_db_server function
  id: totrans-190
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: init_db_server函数
- en: 'The `init_db_server` function is for starting the database server on the FL
    server side. It takes a function, database IP address, and socket information
    as inputs and initiates the server functionality based on the WebSocket framework.
    You can use any other communication protocol, such as HTTP, as well. Here is the
    sample code to initiate the database server:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: '`init_db_server`函数用于在FL服务器端启动数据库服务器。它接受一个函数、数据库IP地址和套接字信息作为输入，并根据WebSocket框架启动服务器功能。您也可以使用其他通信协议，如HTTP。以下是启动数据库服务器的示例代码：'
- en: '[PRE14]'
  id: totrans-192
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: The init_fl_server function
  id: totrans-193
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: init_fl_server函数
- en: 'The `init_fl_server` function is for starting the FL server on the aggregator
    side. As parameters, it takes three functions for agent registration, receiving
    messages from agents, and the model synthesis routine, as well as the aggregator’s
    IP address and registration and receiver sockets info (to receive messages from
    agents) to initiate the server functionality based on the WebSocket framework.
    Here is the sample code for initiating the FL server:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: '`init_fl_server` 函数用于在聚合器端启动 FL 服务器。它接受三个函数作为参数，用于代理注册、从代理接收消息和模型合成例程，以及聚合器的
    IP 地址和注册接收套接字信息（用于接收来自代理的消息），以基于 WebSocket 框架启动服务器功能。以下是启动 FL 服务器的示例代码：'
- en: '[PRE15]'
  id: totrans-195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: The init_client_server function
  id: totrans-196
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: init_client_server 函数
- en: 'The `init_client_server` function is for starting the FL client-side server
    functionalities. It takes a function, the agent’s IP address, and the socket info
    to receive messages from an aggregator as inputs and initiate the functionality
    based on the WebSocket framework. Here is sample code for initiating the FL client-side
    server functionality:'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: '`init_client_server` 函数用于启动 FL 客户端服务器功能。它接受一个函数、代理的 IP 地址以及用于接收来自聚合器的消息的套接字信息作为输入，并根据
    WebSocket 框架启动功能。以下是启动 FL 客户端服务器功能的示例代码：'
- en: '[PRE16]'
  id: totrans-198
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: The send function
  id: totrans-199
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 发送函数
- en: 'The `send` function is for sending a message to the destination specified by
    the IP address and socket info taken as parameters together with a message to
    be sent. It returns a response message sent back from the destination node to
    the source node, if there is one:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: '`send` 函数用于将消息发送到由 IP 地址和套接字信息指定的目的地，这些信息作为参数一起传递，同时传递要发送的消息。如果目的地节点有响应，则返回从目的地节点发送回源节点的响应消息：'
- en: '[PRE17]'
  id: totrans-201
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: The send_websocket function
  id: totrans-202
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: send_websocket 函数
- en: 'The `send_websocket` function is for returning a message to the message source
    specified by the WebSocket information, taken as a parameter together with a message
    to be sent:'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: '`send_websocket` 函数用于将消息返回给由 WebSocket 信息指定的消息源，该信息作为参数一起传递，同时传递要发送的消息：'
- en: '[PRE18]'
  id: totrans-204
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: The receive function
  id: totrans-205
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 接收函数
- en: 'The `receive` function is used to receive a message with the WebSocket taken
    as a parameter and returns a pickled message:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: '`receive` 函数用于接收一个作为参数的 WebSocket 消息，并返回一个序列化的消息：'
- en: '[PRE19]'
  id: totrans-207
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Next, we will talk about the data structure class that handles processing ML
    models.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将讨论处理 ML 模型的数据结构类。
- en: Understanding the data structure handler class
  id: totrans-209
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解数据结构处理程序类
- en: The data structure handler is implemented in the `data_struc.py` file, which
    can be found in the `lib/util` folder of the `fl_main` directory. The data structure
    class has the `LimitedDict` class to handle the aggregation of the ML models in
    a consistent manner.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 数据结构处理程序在 `data_struc.py` 文件中实现，该文件位于 `fl_main` 目录的 `lib/util` 文件夹中。数据结构类具有
    `LimitedDict` 类，用于以一致的方式处理 ML 模型的聚合。
- en: Importing libraries for the data structure handler
  id: totrans-211
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 导入数据结构处理程序的库
- en: 'In this `data_struc.py` code example, the handler imports general libraries,
    such as `numpy` and `Dict`:'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个 `data_struc.py` 代码示例中，处理程序导入了通用库，如 `numpy` 和 `Dict`：
- en: '[PRE20]'
  id: totrans-213
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Next, let’s move on to the `LimitedDict` class and its functions related to
    the data structure handler.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们继续了解 `LimitedDict` 类及其与数据结构处理程序相关的函数。
- en: The LimitedDict class
  id: totrans-215
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: LimitedDict 类
- en: The following is a definition of the `LimitedDict` class and its functions related
    to the data structure handler.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是对 `LimitedDict` 类及其与数据结构处理程序相关的函数的定义。
- en: The LimitedDict class and its functions
  id: totrans-217
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: LimitedDict 类及其函数
- en: 'The functions of the `LimitedDict` class are for converting a dictionary format
    into a class with keys and values. `LimitedDict` is used with the buffer in ML
    models to store local and cluster models in the memory space of the state manager
    of the aggregator:'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: '`LimitedDict` 类的函数用于将字典格式转换为具有键和值的类。`LimitedDict` 与 ML 模型中的缓冲区一起使用，以存储聚合器状态管理器的内存空间中的本地和集群模型：'
- en: '[PRE21]'
  id: totrans-219
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: The convert_LDict_to_Dict function
  id: totrans-220
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: convert_LDict_to_Dict 函数
- en: 'The `convert_LDict_to_Dict` function is used to convert the `LimitedDict` instance
    defined previously into a normal dictionary format:'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: '`convert_LDict_to_Dict` 函数用于将之前定义的 `LimitedDict` 实例转换为正常字典格式：'
- en: '[PRE22]'
  id: totrans-222
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: In the next section, we will talk about the helper and supporting libraries.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将讨论辅助和支持库。
- en: Understanding helper and supporting libraries
  id: totrans-224
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解辅助和支持库
- en: The helper and supporting functions are implemented in the `helpers.py` file,
    which can be found in the `lib/util` folder of the `fl_main` directory.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 辅助和支持函数在 `helpers.py` 文件中实现，该文件位于 `fl_main` 目录的 `lib/util` 文件夹中。
- en: Importing libraries for helper libraries
  id: totrans-226
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 导入辅助库的库
- en: 'In this `helpers.py` code example, the file imports general libraries such
    as `json` and `time`:'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个 `helpers.py` 代码示例中，文件导入了通用库，如 `json` 和 `time`：
- en: '[PRE23]'
  id: totrans-228
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Next, let’s move on to the list of functions of the helper library.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们继续到辅助库的函数列表。
- en: Functions of the helper library
  id: totrans-230
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 辅助库的函数
- en: The following is a list of functions related to the helper library.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是与辅助库相关的函数列表。
- en: The set_config_file function
  id: totrans-232
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '`set_config_file` 函数'
- en: 'The `set_config_file` function takes the type of the config file, such as `db`,
    `aggregator`, or `agent`, as a parameter and returns a string of the path to the
    configuration file:'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: '`set_config_file` 函数接受配置文件的类型作为参数，例如 `db`、`aggregator` 或 `agent`，并返回配置文件的路径字符串：'
- en: '[PRE24]'
  id: totrans-234
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: The read_config function
  id: totrans-235
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '`read_config` 函数'
- en: 'The `read_config` function reads a JSON configuration file to set up the database,
    aggregator, or agent. It takes a config path as a parameter and returns config
    info in a dictionary format:'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: '`read_config` 函数读取 JSON 配置文件以设置数据库、聚合器或代理。它接受配置路径作为参数，并以字典格式返回配置信息：'
- en: '[PRE25]'
  id: totrans-237
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: The generate_id function
  id: totrans-238
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '`generate_id` 函数'
- en: 'The `generate_id` function generates a system-wide unique ID based on the MAC
    address and instantiation time with a hash function (`sha256`) returning the hash
    value as an ID:'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: '`generate_id` 函数基于 MAC 地址和实例化时间，使用哈希函数 (`sha256`) 生成一个系统范围内的唯一 ID，并将哈希值作为 ID：'
- en: '[PRE26]'
  id: totrans-240
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: The generate_model_id function
  id: totrans-241
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '`generate_model_id` 函数'
- en: 'The `generate_model_id` function generates a system-wide unique ID for a set
    of models based on the following:'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: '`generate_model_id` 函数基于以下内容为一系列模型生成系统范围内的唯一 ID：'
- en: '**Component ID**: The ID of the FL system entity that created the models'
  id: totrans-243
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**组件 ID**：创建模型的 FL 系统实体的 ID'
- en: '**Generation time**: The time the models were created'
  id: totrans-244
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**生成时间**：模型的创建时间'
- en: 'The ID is generated by a hash function (sha256). It takes the following parameters:'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: ID 是通过哈希函数（sha256）生成的。它接受以下参数：
- en: '`component_type`: A string value with a prefix indicating the component type
    of `IDPrefix`'
  id: totrans-246
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`component_type`：带有前缀的字符串值，指示 `IDPrefix` 的组件类型'
- en: '`component_id`: A string value of the ID of the entity that created the models'
  id: totrans-247
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`component_id`：创建模型的实体的 ID 字符串值'
- en: '`gene_time`: A float value of the time the models were created'
  id: totrans-248
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`gene_time`：模型创建时间的浮点值'
- en: 'This function returns the hash value as a model ID:'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数将哈希值作为模型 ID 返回：
- en: '[PRE27]'
  id: totrans-250
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: The create_data_dict_from_models function
  id: totrans-251
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '`create_data_dict_from_models` 函数'
- en: 'The `create_data_dict_from_models` function creates the data dictionary for
    ML models by taking the following parameters:'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: '`create_data_dict_from_models` 函数通过以下参数创建 ML 模型的数据字典：'
- en: '`model_id`: A string value of the model ID'
  id: totrans-253
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`model_id`：模型 ID 的字符串值'
- en: '`models`: The `np.array` about ML models'
  id: totrans-254
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`models`：关于 ML 模型的 `np.array`'
- en: '`component_id`: The ID of the FL system such as aggregator ID and agent ID'
  id: totrans-255
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`component_id`：FL 系统的 ID，例如聚合器 ID 和代理 ID'
- en: 'It returns a data dictionary containing the ML models:'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 它返回包含 ML 模型的数据字典：
- en: '[PRE28]'
  id: totrans-257
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: The create_meta_data_dict function
  id: totrans-258
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '`create_meta_data_dict` 函数'
- en: 'The `create_meta_data_dict` function creates the metadata dictionary with the
    metadata of the ML models, taking the performance metrics (`perf_val`) and the
    number of samples (`num_samples`) as parameters, and returns `meta_data_dict`,
    containing the performance value and the number of samples:'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: '`create_meta_data_dict` 函数通过将性能指标 (`perf_val`) 和样本数量 (`num_samples`) 作为参数，创建包含
    ML 模型元数据的元数据字典，并返回 `meta_data_dict`，其中包含性能值和样本数量：'
- en: '[PRE29]'
  id: totrans-260
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: The compatible_data_dict_read function
  id: totrans-261
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '`compatible_data_dict_read` 函数'
- en: 'The `compatible_data_dict_read` function takes `data_dict`, which contains
    the information related to ML models, extracts the values if the corresponding
    key exists in the dictionary, and returns the component ID, the generation time
    of the ML models, the ML models themselves, and the model IDs:'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: '`compatible_data_dict_read` 函数接受 `data_dict`，其中包含与 ML 模型相关的信息，如果字典中存在相应的键，则提取值，并返回组件
    ID、ML 模型的生成时间、ML 模型本身和模型 ID：'
- en: '[PRE30]'
  id: totrans-263
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: The save_model_file function
  id: totrans-264
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '`save_model_file` 函数'
- en: 'The `save_model_file` function is for saving a given set of models into a local
    file. It takes the following parameters:'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: '`save_model_file` 函数用于将一组模型保存到本地文件。它接受以下参数：'
- en: '`data_dict`: A dictionary containing the model ID and ML models with the `Dict[str,np.array]`
    format.'
  id: totrans-266
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`data_dict`：包含模型 ID 和 ML 模型的字典，格式为 `Dict[str,np.array]`。'
- en: '`path`: A string value of the path to the directory of the ML model storage.'
  id: totrans-267
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`path`：ML 模型存储目录的路径字符串值'
- en: '`name`: A string value of the model filename.'
  id: totrans-268
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`name`：模型文件名的字符串值。'
- en: '`performance_dict`: A dictionary containing performance data with the `Dict[str,float]`
    format. Each entry contains both the model ID and its performance information:'
  id: totrans-269
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`performance_dict`：一个包含性能数据的字典，格式为 `Dict[str,float]`。每个条目都包含模型 ID 和其性能信息：'
- en: '[PRE31]'
  id: totrans-270
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: The load_model_file function
  id: totrans-271
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: The load_model_file 函数
- en: '`load_model_file` reads a local model file that takes the following parameters:'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: '`load_model_file` 函数读取一个本地模型文件，需要以下参数：'
- en: '`path`: A string value of the path to the directory to store ML models'
  id: totrans-273
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`path`：存储机器学习模型的目录的字符串值'
- en: '`name`: A string value of the model filename'
  id: totrans-274
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`name`：模型文件名的字符串值'
- en: 'It returns the unpickled ML models and performance data in the `Dict` format:'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 它以 `Dict` 格式返回未反序列化的机器学习模型和性能数据：
- en: '[PRE32]'
  id: totrans-276
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: The read_state function
  id: totrans-277
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: The read_state 函数
- en: 'The `read_state` function reads a local state file that takes the following
    parameters:'
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: '`read_state` 函数读取一个本地状态文件，需要以下参数：'
- en: '`path`: A string value of the path to the directory of the client state file'
  id: totrans-279
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`path`：客户端状态文件目录的字符串值'
- en: '`name`: A string value of the model filename'
  id: totrans-280
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`name`：模型文件名的字符串值'
- en: 'This function returns a client state, `ClientState` (for example, *training*
    or *sending*), the state indicated in the file, in an integer format. If the client
    state file is being written at the time of access, it will try to read the file
    again after 0.01 seconds:'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数返回一个客户端状态，`ClientState`（例如，*training* 或 *sending*），文件中指示的状态，以整数格式。如果客户端状态文件在访问时正在写入，它将在
    0.01 秒后再次尝试读取文件：
- en: '[PRE33]'
  id: totrans-282
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: The write_state function
  id: totrans-283
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: The write_state 函数
- en: '`write_state` changes the client state on the state file in the agent. It takes
    the following parameters:'
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: '`write_state` 函数用于在代理的状态文件上更改客户端状态。它需要以下参数：'
- en: '`path`: A string value of the path to the directory of the client state file'
  id: totrans-285
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`path`：客户端状态文件目录的字符串值'
- en: '`name`: A string value of the model filename'
  id: totrans-286
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`name`：模型文件名的字符串值'
- en: '`state`: The value of `ClientState` (for example, *training* or *sending*)
    to set up a new client state:'
  id: totrans-287
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`state`：`ClientState` 的值（例如，*training* 或 *sending*），用于设置新的客户端状态：'
- en: '[PRE34]'
  id: totrans-288
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: The get_ip function
  id: totrans-289
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: The get_ip 函数
- en: 'The `get_ip` function obtains the IP address of the machine and returns the
    value of the IP address:'
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: The `get_ip` 函数获取机器的 IP 地址并返回 IP 地址的值：
- en: '[PRE35]'
  id: totrans-291
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: The init_loop function
  id: totrans-292
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: The init_loop 函数
- en: 'The `init_loop` function is used to start a continuous loop function. It takes
    a function for running a loop function:'
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: The `init_loop` 函数用于启动一个连续循环函数。它需要一个用于运行循环函数的函数：
- en: '[PRE36]'
  id: totrans-294
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: In the next section, let’s look at the messenger functions to create communication
    payloads.
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，让我们看看创建通信有效载荷的消息传递函数。
- en: Messengers to generate communication payloads
  id: totrans-296
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 用于生成通信有效载荷的消息传递器
- en: The messenger functions are defined in the `messengers.py` file, which can be
    found in the `lib/util` folder of the `fl_main` directory.
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 消息传递函数定义在 `messengers.py` 文件中，该文件位于 `fl_main` 目录的 `lib/util` 文件夹中。
- en: Importing libraries for messengers
  id: totrans-298
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为消息传递导入库
- en: 'In this `messengers.py` code example, the file imports general libraries, such
    as `time` and `numpy`. It also imports `ModelType`, `DBMsgType`, `AgentMsgType`,
    and `AggMsgType`, which were defined in the *Enumeration classes for implementing
    the FL system* section in this chapter:'
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个 `messengers.py` 代码示例中，文件导入了通用库，如 `time` 和 `numpy`。它还导入了 `ModelType`、`DBMsgType`、`AgentMsgType`
    和 `AggMsgType`，这些在本书的 *实现联邦学习系统的枚举类* 部分中定义：
- en: '[PRE37]'
  id: totrans-300
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: Next, let’s move on to the list of functions of the `messengers` library.
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们继续查看 `messengers` 库的函数列表。
- en: Functions of messengers
  id: totrans-302
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 消息传递函数的功能
- en: The following is a list of functions related to the `messengers` library.
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是与 `messengers` 库相关的函数列表。
- en: The generate_db_push_message function
  id: totrans-304
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: The generate_db_push_message 函数
- en: 'The `generate_db_push_message` function generates and returns a message for
    pushing the message containing ML models to the database. It takes the following
    parameters to package them as a payload message (in a `List` format with the message
    type defined as `push`) between the aggregator and database:'
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: '`generate_db_push_message` 函数生成并返回一个消息，用于将包含机器学习模型的推送消息推送到数据库。它通过以下参数将它们打包为有效载荷消息（以
    `List` 格式，消息类型定义为 `push`），在聚合器和数据库之间：'
- en: '`component_id`: A string value of the component ID, such as the aggregator
    ID'
  id: totrans-306
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`component_id`：组件 ID 的字符串值，例如聚合器 ID'
- en: '`round`: FL round information in an integer format'
  id: totrans-307
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`round`：FL 轮次信息，以整数格式'
- en: '`model_type`: The type of ML model, such as `cluster` or `local` models'
  id: totrans-308
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`model_type`：机器学习模型类型，例如 `cluster` 或 `local` 模型'
- en: '`models`: ML models with the `Dict[str, np.array]` format'
  id: totrans-309
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`models`：格式为 `Dict[str, np.array]` 的机器学习模型'
- en: '`model_id`: A string value of the unique ID of the ML models'
  id: totrans-310
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`model_id`: 机器学习模型唯一ID的字符串值'
- en: '`gene_time`: A float value of the time at which the ML models are generated'
  id: totrans-311
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`gene_time`: 机器学习模型生成时间的浮点值'
- en: '`performance_dict`: Performance data with the `Dict[str, float]` format'
  id: totrans-312
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`performance_dict`: 以 `Dict[str, float]` 格式的性能数据'
- en: 'The following code provides the functionality of generating the preceding database
    push message:'
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码提供了生成前面数据库推送消息的功能：
- en: '[PRE38]'
  id: totrans-314
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: The generate_lmodel_update_message function
  id: totrans-315
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: The generate_lmodel_update_message function
- en: 'The `generate_lmodel_update_message` function generates and returns a message
    for sending the aggregator a message containing the local models created in an
    agent. It takes the following parameters to package them as a payload message
    (in `List` format with the message type defined as `update`) between the agent
    and aggregator:'
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: '`generate_lmodel_update_message` 函数生成并返回一个消息，用于向聚合器发送包含在代理中创建的本地模型的消息。它通过以下参数将它们打包为有效载荷消息（以
    `List` 格式，消息类型定义为 `update`），在代理和聚合器之间传递：'
- en: '`agent_id`: A string value of the agent ID'
  id: totrans-317
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`agent_id`: 代理ID的字符串值'
- en: '`model_id`: A string value of the unique ID of the ML models'
  id: totrans-318
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`model_id`: 机器学习模型唯一ID的字符串值'
- en: '`local_models`: Local ML models with the `Dict[str, np.array]` format'
  id: totrans-319
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`local_models`: 以 `Dict[str, np.array]` 格式的本地机器学习模型'
- en: '`performance_dict`: Performance data with the `Dict[str, float]` format'
  id: totrans-320
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`performance_dict`: 以 `Dict[str, float]` 格式的性能数据'
- en: 'The following code shows the functionality of generating the preceding local
    model update message:'
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码展示了生成前面本地模型更新消息的功能：
- en: '[PRE39]'
  id: totrans-322
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: The generate_cluster_model_dist_message function
  id: totrans-323
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: generate_cluster_model_dist_message 函数
- en: 'The `generate_cluster_model_dist_message` function generates and returns a
    message in `List` format to send a message containing the global models created
    by an aggregator to the connected agents. It takes the following parameters to
    package them as a payload message (in `List` format with the message type defined
    as `update`) between the aggregator and agent:'
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: '`generate_cluster_model_dist_message` 函数生成并返回一个 `List` 格式的消息，用于发送包含由聚合器创建的全局模型的消息到连接的代理。它通过以下参数将它们打包为有效载荷消息（以
    `List` 格式，消息类型定义为 `update`），在聚合器和代理之间传递：'
- en: '`aggregator_id`: A string value of the aggregator ID'
  id: totrans-325
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`aggregator_id`: 聚合器ID的字符串值'
- en: '`model_id`: A string value of the unique ID of the ML models'
  id: totrans-326
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`model_id`: 机器学习模型唯一ID的字符串值'
- en: '`round`: FL round information in an integer format'
  id: totrans-327
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`round`: 以整数格式表示的联邦学习轮次信息'
- en: '`models`: ML models with the `Dict[str, np.array]` format'
  id: totrans-328
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`models`: 以 `Dict[str, np.array]` 格式的机器学习模型'
- en: 'The following code shows the functionality of generating the preceding cluster
    model distribution message:'
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码展示了生成前面聚类模型分布消息的功能：
- en: '[PRE40]'
  id: totrans-330
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: The generate_agent_participation_message function
  id: totrans-331
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: generate_agent_participation_message 函数
- en: 'The `generate_agent_participation_message` function generates and returns a
    message to send a participation request message containing the initial models
    created by an agent to the connected aggregator. It takes the following parameters
    to package them as a payload message (in `List` format with the message type defined
    as `participate`) between the agent and aggregator:'
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: '`generate_agent_participation_message` 函数生成并返回一个消息，用于发送包含由代理创建的初始模型参与请求消息到连接的聚合器。它通过以下参数将它们打包为有效载荷消息（以
    `List` 格式，消息类型定义为 `participate`），在代理和聚合器之间传递：'
- en: '`agent_name`: A string value of the agent name'
  id: totrans-333
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`agent_name`: 代理名称的字符串值'
- en: '`agent_id`: A string value of the agent ID'
  id: totrans-334
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`agent_id`: 代理ID的字符串值'
- en: '`model_id`: A string value of the unique ID of the ML models'
  id: totrans-335
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`model_id`: 机器学习模型唯一ID的字符串值'
- en: '`models`: ML models with the `Dict[str, np.array]` format'
  id: totrans-336
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`models`: 以 `Dict[str, np.array]` 格式的机器学习模型'
- en: '`init_weights_flag`: A Boolean value to indicate whether the weights are initialized
    or not'
  id: totrans-337
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`init_weights_flag`: 一个布尔值，用于指示权重是否已初始化'
- en: '`simulation_flag`: A Boolean value to indicate whether the run is for a simulation
    or not'
  id: totrans-338
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`simulation_flag`: 一个布尔值，用于指示运行是否为模拟'
- en: '`exch_socket`: Socket information with a string value to send a message from
    an aggregator to this agent'
  id: totrans-339
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`exch_socket`: 用于从聚合器向该代理发送消息的字符串值套接字信息'
- en: '`gene_time`: A float value of the time at which the ML models are generated'
  id: totrans-340
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`gene_time`: 机器学习模型生成时间的浮点值'
- en: '`meta_dict`: Performance data with the `Dict[str, float]` format'
  id: totrans-341
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`meta_dict`: 以 `Dict[str, float]` 格式的性能数据'
- en: '`agent_ip`: IP address of the agent itself'
  id: totrans-342
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`agent_ip`: 代理自身的IP地址'
- en: 'The following code shows the functionality of generating the preceding agent
    participation message:'
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码展示了生成前面代理参与消息的功能：
- en: '[PRE41]'
  id: totrans-344
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: The generate_agent_participation_confirm_message function
  id: totrans-345
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '`generate_agent_participation_confirm_message` 函数'
- en: 'The `generate_agent_participation_confirm_message` function generates and returns
    a message to send a participation confirmation message containing the global models
    back to the agent. It takes the following parameters to package them as a payload
    message (in `List` format with the message type defined as `welcome`) between
    the aggregator and agent:'
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: '`generate_agent_participation_confirm_message` 函数生成并返回一个消息，用于发送包含全局模型的参与确认消息回代理。它接受以下参数，将它们打包成一个有效载荷消息（以`List`格式，消息类型定义为`welcome`），在聚合器和代理之间：'
- en: '`aggregator_id`: A string value of the aggregator ID'
  id: totrans-347
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`aggregator_id`: 聚合器ID的字符串值'
- en: '`model_id`: A string value of the unique ID of the ML models'
  id: totrans-348
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`model_id`: 机器学习模型唯一ID的字符串值'
- en: '`models`: ML models with the `Dict[str, np.array]` format'
  id: totrans-349
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`models`: 以`Dict[str, np.array]`格式的机器学习模型'
- en: '`round`: FL round information in an integer format'
  id: totrans-350
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`round`: 以整数格式表示的联邦学习轮次信息'
- en: '`agent_id`: A string value of the agent ID'
  id: totrans-351
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`agent_id`: 代理ID的字符串值'
- en: '`exch_socket`: A port number to reach out to an agent from the aggregator'
  id: totrans-352
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`exch_socket`: 从聚合器到达代理的端口号'
- en: '`recv_socket`: A port number to receive messages from the agent'
  id: totrans-353
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`recv_socket`: 接收来自代理的消息的端口号'
- en: 'The following code shows the functionality of generating the preceding agent
    participation confirmation message:'
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码展示了生成前面代理参与确认消息的功能：
- en: '[PRE42]'
  id: totrans-355
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: The generate_polling_message function
  id: totrans-356
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '`generate_polling_message` 函数'
- en: 'The `generate_polling_message` function generates and returns a message to
    send a `polling` message containing the polling signal to the aggregator. It takes
    the following parameters to package them as a payload message (in `List` format
    with the message type defined as `polling`) between the agent and aggregator:'
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: '`generate_polling_message` 函数生成并返回一个消息，用于发送包含轮询信号的`polling`消息到聚合器。它接受以下参数，将它们打包成一个有效载荷消息（以`List`格式，消息类型定义为`polling`），在代理和聚合器之间：'
- en: '`round`: FL round information in an integer format'
  id: totrans-358
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`round`: 以整数格式表示的联邦学习轮次信息'
- en: '`agent_id`: A string value of the agent ID'
  id: totrans-359
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`agent_id`: 代理ID的字符串值'
- en: 'The following code shows the functionality of generating the preceding polling
    message:'
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码展示了生成前面轮询消息的功能：
- en: '[PRE43]'
  id: totrans-361
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: The generate_ack_message function
  id: totrans-362
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '`generate_ack_message` 函数'
- en: 'The `generate_ack_message` function generates and returns a message to send
    an `ack` message containing the acknowledgment signal back to an agent. No parameter
    is required to create a payload message (in `List` format with the message type
    defined as `ack`) between the aggregator and agent:'
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: '`generate_ack_message` 函数生成并返回一个消息，用于发送包含确认信号的`ack`消息回代理。创建有效载荷消息（以`List`格式，消息类型定义为`ack`）不需要参数，在聚合器和代理之间：'
- en: '[PRE44]'
  id: totrans-364
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: Summary
  id: totrans-365
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we have explained the internal libraries in detail so that
    you can implement the entire FL system without further investigating what and
    how to code for basic functionalities such as communication and data structure
    conversion frameworks.
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们详细解释了内部库，以便您可以在不进一步调查基本功能（如通信和数据结构转换框架）的情况下实现整个联邦学习系统。
- en: 'There are mainly five aspects that the internal library covers: *enumeration
    classes*, defining the system states, such as FL client states; the *communication
    handler*, supporting send and receive functionalities; the *data structure*, to
    handle ML models when aggregation happens; *helper and support functions*, which
    cope with basic operations, such as saving data and producing randomized IDs;
    and *messenger functions*, to generate various payloads sent among the database,
    aggregator, and agents.'
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: 内部库主要涵盖以下五个方面：*枚举类*，定义系统状态，例如联邦学习客户端状态；*通信处理器*，支持发送和接收功能；*数据结构*，在聚合时处理机器学习模型；*辅助和支持函数*，处理基本操作，如保存数据和生成随机ID；以及*messenger函数*，用于生成在数据库、聚合器和代理之间发送的各种有效载荷。
- en: With these functions, you will find the implementation of FL systems easy and
    smooth, but these libraries only support achieving some minimal functionality
    of the FL system; hence, it is up to you to further enhance the FL system to create
    a more authentic platform that can be used in real-life use cases and technologies.
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这些函数，您会发现联邦学习系统的实现既简单又顺畅，但这些库仅支持实现联邦学习系统的一些基本功能；因此，您需要进一步扩展联邦学习系统，以创建一个更真实的平台，可以用于现实生活中的用例和技术。
