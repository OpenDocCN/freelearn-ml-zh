- en: Chapter 1. Practical Machine Learning with R
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Downloading and installing R
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Downloading and installing RStudio
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Installing and loading packages
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reading and writing data
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using R to manipulate data
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Applying basic statistics
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Visualizing data
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Getting a dataset for machine learning
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The aim of machine learning is to uncover hidden patterns, unknown correlations,
    and find useful information from data. In addition to this, through incorporation
    with data analysis, machine learning can be used to perform predictive analysis.
    With machine learning, the analysis of business operations and processes is not
    limited to human scale thinking; machine scale analysis enables businesses to
    capture hidden values in big data.
  prefs: []
  type: TYPE_NORMAL
- en: Machine learning has similarities to the human reasoning process. Unlike traditional
    analysis, the generated model cannot evolve as data is accumulated. Machine learning
    can learn from the data that is processed and analyzed. In other words, the more
    data that is processed, the more it can learn.
  prefs: []
  type: TYPE_NORMAL
- en: R, as a dialect of GNU-S, is a powerful statistical language that can be used
    to manipulate and analyze data. Additionally, R provides many machine learning
    packages and visualization functions, which enable users to analyze data on the
    fly. Most importantly, R is open source and free.
  prefs: []
  type: TYPE_NORMAL
- en: 'Using R greatly simplifies machine learning. All you need to know is how each
    algorithm can solve your problem, and then you can simply use a written package
    to quickly generate prediction models on data with a few command lines. For example,
    you can either perform Naïve Bayes for spam mail filtering, conduct k-means clustering
    for customer segmentation, use linear regression to forecast house prices, or
    implement a hidden Markov model to predict the stock market, as shown in the following
    screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Introduction](img/00002.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Stock market prediction using R
  prefs: []
  type: TYPE_NORMAL
- en: Moreover, you can perform nonlinear dimension reduction to calculate the dissimilarity
    of image data, and visualize the clustered graph, as shown in the following screenshot.
    All you need to do is follow the recipes provided in this book.
  prefs: []
  type: TYPE_NORMAL
- en: '![Introduction](img/00003.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: A clustered graph of face image data
  prefs: []
  type: TYPE_NORMAL
- en: This chapter serves as an overall introduction to machine learning and R; the
    first few recipes introduce how to set up the R environment and integrated development
    environment, RStudio. After setting up the environment, the following recipe introduces
    package installation and loading. In order to understand how data analysis is
    practiced using R, the next four recipes cover data read/write, data manipulation,
    basic statistics, and data visualization using R. The last recipe in the chapter
    lists useful data sources and resources.
  prefs: []
  type: TYPE_NORMAL
- en: Downloading and installing R
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To use R, you must first install it on your computer. This recipe gives detailed
    instructions on how to download and install R.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'If you are new to the R language, you can find a detailed introduction, language
    history, and functionality on the official website ([http://www.r-project.org](http://www.r-project.org)/).
    When you are ready to download and install R, please access the following link:
    [http://cran.r-project.org/](http://cran.r-project.org/).'
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Please perform the following steps to download and install R for Windows and
    Mac users:'
  prefs: []
  type: TYPE_NORMAL
- en: Go to the R CRAN website, [http://www.r-project.org/](http://www.r-project.org/),
    and click on the **download R** link, that is, [http://cran.r-project.org/mirrors.html](http://cran.r-project.org/mirrors.html)):![How
    to do it...](img/00004.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You may select the mirror location closest to you:![How to do it...](img/00005.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: CRAN mirrors
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Select the correct download link based on your operating system:![How to do
    it...](img/00006.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the download link based on your OS
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: As the installation of R differs for Windows and Mac, the steps required to
    install R for each OS are provided here.
  prefs: []
  type: TYPE_NORMAL
- en: 'For Windows users:'
  prefs: []
  type: TYPE_NORMAL
- en: Click on **Download R for Windows**, as shown in the following screenshot, and
    then click on **base**:![How to do it...](img/00007.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Go to "Download R for Windows" and click "base"
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Click on **Download R 3.x.x for Windows**:![How to do it...](img/00008.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click "Download R 3.x.x for Windows"
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: The installation file should be downloaded. Once the download is finished, you
    can double-click on the installation file and begin installing R:![How to do it...](img/00009.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The Windows installation of R is quite straightforward; the installation GUI
    may instruct you on how to install the program step by step (public license, destination
    location, select components, startup options, startup menu folder, and select
    additional tasks). Leave all the installation options as the default settings
    if you do not want to make any changes.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: After successfully completing the installation, a shortcut to the R application
    will appear in your Start menu, which will open the R Console:![How to do it...](img/00010.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The Windows R Console
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'For Mac OS X users:'
  prefs: []
  type: TYPE_NORMAL
- en: Go to **Download R for (Mac) OS X,** as shown in this screenshot.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the latest version (`.pkg` file extension) according to your Mac OS
    version:![How to do it...](img/00011.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Double-click on the downloaded installation file (`.pkg` extension) and begin
    to install R. Leave all the installation options as the default settings if you
    do not want to make any changes:![How to do it...](img/00012.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Follow the onscreen instructions, **Introduction**, **Read Me**, **License**,
    **Destination Select**, **Installation Type**, **Installation**, **Summary**,
    and click on **continue** to complete the installation.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: After the file is installed, you can use **Spotlight Search** or go to the application
    folder to find R:![How to do it...](img/00013.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Use "Spotlight Search" to find R
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Click on R to open **R Console**:![How to do it...](img/00014.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'As an alternative to downloading a Mac `.pkg` file to install R, Mac users
    can also install R using Homebrew:'
  prefs: []
  type: TYPE_NORMAL
- en: Download `XQuartz-2.X.X.dmg` from [https://xquartz.macosforge.org/landing/](https://xquartz.macosforge.org/landing/).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Double-click on the `.dmg` file to mount it.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Update brew with the following command line:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Clone the repository and symlink all its formulae to `homebrew/science`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Install gfortran:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Install R:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: For Linux users, there are precompiled binaries for Debian, Red Hat, SUSE, and
    Ubuntu. Alternatively, you can install R from a source code. Besides downloading
    precompiled binaries, you can install R for Linux through a package manager. Here
    are the installation steps for CentOS and Ubuntu.
  prefs: []
  type: TYPE_NORMAL
- en: 'Downloading and installing R on Ubuntu:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Add the entry to the `/etc/apt/sources.list` file:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Then, update the repository:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Install R with the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Start R in the command line:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Downloading and installing R on CentOS 5:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Get rpm CentOS5 RHEL EPEL repository of CentOS5:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Install CentOS5 RHEL EPEL repository:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Update the installed packages:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Install R through the repository:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Start R in the command line:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Downloading and installing R on CentOS 6:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Get rpm CentOS5 RHEL EPEL repository of CentOS6:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Install the CentOS5 RHEL EPEL repository:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Update the installed packages:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Install R through the repository:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Start R in the command line:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: CRAN provides precompiled binaries for Linux, Mac OS X, and Windows. For Mac
    and Windows users, the installation procedures are straightforward. You can generally
    follow onscreen instructions to complete the installation. For Linux users, you
    can use the package manager provided for each platform to install R or build R
    from the source code.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: For those planning to build R from the source code, refer to **R Installation
    and Administration** ([http://cran.r-project.org/doc/manuals/R-admin.html](http://cran.r-project.org/doc/manuals/R-admin.html)),
    which illustrates how to install R on a variety of platforms.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Downloading and installing RStudio
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To write an R script, one can use R Console, R commander, or any text editor
    (EMACS, VIM, or sublime). However, the assistance of RStudio, an **integrated
    development environment** (**IDE**) for R, can make development a lot easier.
  prefs: []
  type: TYPE_NORMAL
- en: RStudio provides comprehensive facilities for software development. Built-in
    features such as syntax highlighting, code completion, and smart indentation help
    maximize productivity. To make R programming more manageable, RStudio also integrates
    the main interface into a four-panel layout. It includes an interactive R Console,
    a tabbed source code editor, a panel for the currently active objects/history,
    and a tabbed panel for the file browser/plot window/package install window/R help
    window. Moreover, RStudio is open source and is available for many platforms,
    such as Windows, Mac OS X, and Linux. This recipe shows how to download and install
    RStudio.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: RStudio requires a working R installation; when RStudio loads, it must be able
    to locate a version of R. You must therefore have completed the previous recipe
    with R installed on your OS before proceeding to install RStudio.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Perform the following steps to download and install RStudio for Windows and
    Mac users:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Access RStudio''s official site by using the following URL: [http://www.rstudio.com/products/RStudio/](http://www.rstudio.com/products/RStudio/).![How
    to do it...](img/00015.jpeg)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: For a desktop version installation, click on **Download RStudio Desktop** ([http://www.rstudio.com/products/rstudio/download/](http://www.rstudio.com/products/rstudio/download/))
    and choose the RStudio recommended for your system. Download the relevant packages:![How
    to do it...](img/00016.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Install RStudio by double-clicking on the downloaded packages. For Windows users,
    follow the onscreen instruction to install the application:![How to do it...](img/00017.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: For Mac users, simply drag the RStudio icon to the `Applications` folder:![How
    to do it...](img/00018.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Start RStudio:![How to do it...](img/00019.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The RStudio console
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Perform the following steps for downloading and installing RStudio for Ubuntu/Debian
    and RedHat/Centos users:'
  prefs: []
  type: TYPE_NORMAL
- en: 'For Debian(6+)/Ubuntu(10.04+) 32-bit:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: 'For Debian(6+)/Ubuntu(10.04+) 64-bit:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: 'For RedHat/CentOS(5,4+) 32 bit:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: 'For RedHat/CentOS(5,4+) 64 bit:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: How it works
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The RStudio program can be run on the desktop or through a web browser. The
    desktop version is available for Windows, Mac OS X, and Linux platforms with similar
    operations across all platforms. For Windows and Mac users, after downloading
    the precompiled package of RStudio, follow the onscreen instructions, shown in
    the preceding steps, to complete the installation. Linux users may use the package
    management system provided for installation.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In addition to the desktop version, users may install a server version to provide
    access to multiple users. The server version provides a URL that users can access
    to use the RStudio resources. To install RStudio, please refer to the following
    link: [http://www.rstudio.com/ide/download/server.html](http://www.rstudio.com/ide/download/server.html).
    This page provides installation instructions for the following Linux distributions:
    Debian (6+), Ubuntu (10.04+), RedHat, and CentOS (5.4+).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For other Linux distributions, you can build RStudio from the source code.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Installing and loading packages
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: After successfully installing R, users can download, install, and update packages
    from the repositories. As R allows users to create their own packages, official
    and non-official repositories are provided to manage these user-created packages.
    **CRAN** is the official R package repository. Currently, the CRAN package repository
    features 6,379 available packages (as of 02/27/2015). Through the use of the packages
    provided on CRAN, users may extend the functionality of R to machine learning,
    statistics, and related purposes. CRAN is a network of FTP and web servers around
    the world that store identical, up-to-date versions of code and documentation
    for R. You may select the closest CRAN mirror to your location to download packages.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Start an R session on your host computer.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Perform the following steps to install and load R packages:'
  prefs: []
  type: TYPE_NORMAL
- en: 'To load a list of installed packages:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Setting the default CRAN mirror:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'R will return a list of CRAN mirrors, and then ask the user to either type
    a mirror ID to select it, or enter zero to exit:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Install a package from CRAN; take package e1071 as an example:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Update a package from CRAN; take package e1071 as an example:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Load the package the package:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'If you would like to view the documentation of the package, you can use the
    `help` function:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'If you would like to view the documentation of the function, you can use the
    `help` function:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Alternatively, you can use the help shortcut, `?`, to view the help document
    for this function:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'If the function does not provide any documentation, you may want to search
    the supplied documentation for a given keyword. For example, if you wish to search
    for documentation related to `svm`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Alternatively, you can use `??` as the shortcut for `help.search`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'To view the argument taken for the function, simply use the `args` function.
    For example, if you would like to know the argument taken for the `lm` function:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE32]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Some packages will provide examples and demos; you can use `example` or `demo`
    to view an example or demo. For example, one can view an example of the `lm` package
    and a demo of the `graphics` package by typing the following commands:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE33]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'To view all the available demos, you may use the demo function to list all
    of them:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE34]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: How it works
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This recipe first introduces how to view loaded packages, install packages from
    CRAN, and load new packages. Before installing packages, those of you who are
    interested in the listing of the CRAN package can refer to [http://cran.r-project.org/web/packages/available_packages_by_name.html](http://cran.r-project.org/web/packages/available_packages_by_name.html).
  prefs: []
  type: TYPE_NORMAL
- en: When a package is installed, documentation related to the package is also provided.
    You are, therefore, able to view the documentation or the related help pages of
    installed packages and functions. Additionally, demos and examples are provided
    by packages that can help users understand the capability of the installed package.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Besides installing packages from CRAN, there are other R package repositories,
    including Crantastic, a community site for rating and reviewing CRAN packages,
    and R-Forge, a central platform for the collaborative development of R packages.
    In addition to this, Bioconductor provides R packages for the analysis of genomic
    data.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If you would like to find relevant functions and packages, please visit the
    list of task views at [http://cran.r-project.org/web/views/](http://cran.r-project.org/web/views/),
    or search for keywords at [http://rseek.org](http://rseek.org).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reading and writing data
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Before starting to explore data, you must load the data into the R session.
    This recipe will introduce methods to load data either from a file into the memory
    or use the predefined data within R.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: First, start an R session on your machine. As this recipe involves steps toward
    the file IO, if the user does not specify the full path, read and write activity
    will take place in the current working directory.
  prefs: []
  type: TYPE_NORMAL
- en: You can simply type `getwd()` in the R session to obtain the current working
    directory location. However, if you would like to change the current working directory,
    you can use `setwd("<path>")`, where `<path>` can be replaced as your desired
    path, to specify the working directory.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Perform the following steps to read and write data with R:'
  prefs: []
  type: TYPE_NORMAL
- en: 'To view the built-in datasets of R, type the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE35]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: R will return a list of datasets in a `dataset` package, and the list comprises
    the name and description of each dataset.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'To load the dataset `iris` into an R session, type the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE36]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: The dataset iris is now loaded into the data frame format, which is a common
    data structure in R to store a data table.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'To view the data type of iris, simply use the `class` function:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE37]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: The `data.frame` console print shows that the `iris` dataset is in the structure
    of data frame.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Use the save function to store an object in a file. For example, to save the
    loaded iris data into `myData.RData`, use the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE38]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Use the load function to read a saved object into an R session. For example,
    to load iris data from `myData.RData`, use the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE39]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'In addition to using built-in datasets, R also provides a function to import
    data from text into a data frame. For example, the `read.table` function can format
    a given text into a data frame:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE40]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'You can also use `row.names` and `col.names` to specify the names of columns
    and rows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE41]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'View the class of the `test.data` variable:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE42]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: The `class` function shows that the `test.data` variable contains a data frame.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'In addition to importing data by using the `read.table` function, you can use
    the `write.table` function to export data to a text file:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE43]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: The `write.table` function will write the content of `test.data` into `test.txt`
    (the written path can be found by typing `getwd()`), with a separation delimiter
    as white space.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Similar to `write.table`, `write.csv` can also export data to a file. However,
    `write.csv` uses a comma as the default delimiter:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE44]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'With the `read.csv` function, the `csv` file can be imported as a data frame.
    However, the last example writes column and row names of the data frame to the
    `test.csv` file. Therefore, specifying header to `TRUE` and row names as the first
    column within the function can ensure the read data frame will not treat the header
    and the first column as values:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE45]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: How it works
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Generally, data for collection may be in multiple files and different formats.
    To exchange data between files and RData, R provides many built-in functions,
    such as `save`, `load`, `read.csv`, `read.table`, `write.csv`, and `write.table`.
  prefs: []
  type: TYPE_NORMAL
- en: This example first demonstrates how to load the built-in dataset iris into an
    R session. The iris dataset is the most famous and commonly used dataset in the
    field of machine learning. Here, we use the iris dataset as an example. The recipe
    shows how to save RData and load it with the `save` and `load` functions. Furthermore,
    the example explains how to use `read.table`, `write.table`, `read.csv`, and `write.csv`
    to exchange data from files to a data frame. The use of the R IO function to read
    and write data is very important as most of the data sources are external. Therefore,
    you have to use these functions to load data into an R session.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: For the `load`, `read.table`, and `read.csv` functions, the file to be read
    can also be a complete URL (for supported URLs, use `?url` for more information).
  prefs: []
  type: TYPE_NORMAL
- en: 'On some occasions, data may be in an Excel file instead of a flat text file.
    The `WriteXLS` package allows writing an object into an Excel file with a given
    variable in the first argument and the file to be written in the second argument:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Install the `WriteXLS` package:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE46]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Load the `WriteXLS` package:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE47]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Use the `WriteXLS` function to write the data frame iris into a file named
    `iris.xls`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE48]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Using R to manipulate data
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This recipe will discuss how to use the built-in R functions to manipulate data.
    As data manipulation is the most time consuming part of most analysis procedures,
    you should gain knowledge of how to apply these functions on data.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Ensure you have completed the previous recipes by installing R on your operating
    system.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Perform the following steps to manipulate the data with R.
  prefs: []
  type: TYPE_NORMAL
- en: 'Subset the data using the bracelet notation:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Load the dataset iris into the R session:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE49]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'To select values, you may use a bracket notation that designates the indices
    of the dataset. The first index is for the rows and the second for the columns:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE50]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'You can also select multiple columns using c():'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE51]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'You can then use `str()` to summarize and display the internal structure of
    `Sepal.iris`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE52]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'To subset data with the rows of given indices, you can specify the indices
    at the first index with the bracket notation. In this example, we show you how
    to subset data with the top five records with the `Sepal.Length` column and the
    `Sepal.Width` selected:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE53]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'It is also possible to set conditions to filter the data. For example, to filter
    returned records containing the setosa data with all five variables. In the following
    example, the first index specifies the returning criteria, and the second index
    specifies the range of indices of the variable returned:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE54]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Alternatively, the `which` function returns the indexes of satisfied data.
    The following example returns indices of the iris data containing species equal
    to `setosa`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE55]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The indices returned by the operation can then be applied as the index to select
    the iris containing the setosa species. The following example returns the setosa
    with all five variables:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE56]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Subset data using the `subset` function:'
  prefs: []
  type: TYPE_NORMAL
- en: Besides using the bracket notation, R provides a `subset` function that enables
    users to subset the data frame by observations with a logical statement.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'First, subset species, sepal length, and sepal width out of the iris data.
    To select the sepal length and width out of the iris data, one should specify
    the column to be subset in the `select` argument:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE57]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: This reveals that `Sepal.data` contains 150 objects with the `Sepal.Length`
    variable and `Sepal.Width`.
  prefs: []
  type: TYPE_NORMAL
- en: 'On the other hand, you can use a subset argument to get subset data containing
    setosa only. In the second argument of the subset function, you can specify the
    subset criteria:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE58]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Most of the time, you may want to apply a union or intersect a condition while
    subsetting data. The OR and AND operations can be further employed for this purpose.
    For example, if you would like to retrieve data with `Petal.Width >=0.2 and Petal.Length
    < = 1.4`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE59]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '**Merging data**: merging data involves joining two data frames into a merged
    data frame by a common column or row name. The following example shows how to
    merge the `flower.type` data frame and the first three rows of the iris with a
    common row name within the `Species` column:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE60]'
  prefs: []
  type: TYPE_PRE
- en: '**Ordering data**: the `order` function will return the index of a sorted data
    frame with a specified column. The following example shows the results from the
    first six records with the sepal length ordered (from big to small) iris data'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE61]'
  prefs: []
  type: TYPE_PRE
- en: How it works
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Before conducting data analysis, it is important to organize collected data
    into a structured format. Therefore, we can simply use the R data frame to subset,
    merge, and order a dataset. This recipe first introduces two methods to subset
    data: one uses the bracket notation, while the other uses the `subset` function.
    You can use both methods to generate the subset data by selecting columns and
    filtering data with the given criteria. The recipe then introduces the `merge`
    function to merge data frames. Last, the recipe introduces how to use `order`
    to sort the data.'
  prefs: []
  type: TYPE_NORMAL
- en: There's more...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The `sub` and `gsub` functions allow using regular expression to substitute
    a string. The `sub` and `gsub` functions perform the replacement of the first
    and all the other matches, respectively:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE62]'
  prefs: []
  type: TYPE_PRE
- en: Applying basic statistics
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: R provides a wide range of statistical functions, allowing users to obtain the
    summary statistics of data, generate frequency and contingency tables, produce
    correlations, and conduct statistical inferences. This recipe covers basic statistics
    that can be applied to a dataset.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Ensure you have completed the previous recipes by installing R on your operating
    system.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Perform the following steps to apply statistics on a dataset:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Load the iris data into an R session:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE63]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Observe the format of the data:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE64]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The iris dataset is a data frame containing four numeric attributes: `petal
    length`, `petal width`, `sepal width`, and `sepal length`. For numeric values,
    you can perform descriptive statistics, such as `mean`, `sd`, `var`, `min`, `max`,
    `median`, `range`, and `quantile`. These can be applied to any of the four attributes
    in the dataset:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE65]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The preceding example demonstrates how to apply descriptive statistics on a
    single variable. In order to obtain summary statistics on every numeric attribute
    of the data frame, one may use `sapply`. For example, to apply the mean on the
    first four attributes in the iris data frame, ignore the `na` value by setting
    `na.rm` as `TRUE`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE66]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'As an alternative to using `sapply` to apply descriptive statistics on given
    attributes, R offers the summary function that provides a full range of descriptive
    statistics. In the following example, the summary function provides the mean,
    median, 25th and 75th quartiles, min, and max of every iris dataset numeric attribute:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE67]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The preceding example shows how to output the descriptive statistics of a single
    variable. R also provides the correlation for users to investigate the relationship
    between variables. The following example generates a 4x4 matrix by computing the
    correlation of each attribute pair within the iris:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE68]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'R also provides a function to compute the covariance of each attribute pair
    within the iris:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE69]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Statistical tests are performed to access the significance of the results;
    here we demonstrate how to use a t-test to determine the statistical differences
    between two samples. In this example, we perform a t.test on the petal width an
    of an iris in either the setosa or versicolor species. If we obtain a p-value
    less than 0.5, we can be certain that the petal width between the setosa and versicolor
    will vary significantly:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE70]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Alternatively, you can perform a correlation test on the sepal length to the
    sepal width of an iris, and then retrieve a correlation score between the two
    variables. The stronger the positive correlation, the closer the value is to 1\.
    The stronger the negative correlation, the closer the value is to -1:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE71]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: R has a built-in statistics function, which enables the user to perform descriptive
    statistics on a single variable. The recipe first introduces how to apply `mean`,
    `sd`, `var`, `min`, `max`, `median`, `range`, and `quantile` on a single variable.
    Moreover, in order to apply the statistics on all four numeric variables, one
    can use the `sapply` function. In order to determine the relationships between
    multiple variables, one can conduct correlation and covariance. Finally, the recipe
    shows how to determine the statistical differences of two given samples by performing
    a statistical test.
  prefs: []
  type: TYPE_NORMAL
- en: There's more...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'If you need to compute an aggregated summary statistics against data in different
    groups, you can use the aggregate and reshape functions to compute the summary
    statistics of data subsets:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Use `aggregate` to calculate the mean of each iris attribute group by the species:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE72]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Use `reshape` to calculate the mean of each iris attribute group by the species:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE73]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: For information on reshape and aggregate, refer to the help documents by using
    `?reshape` or `?aggregate`.
  prefs: []
  type: TYPE_NORMAL
- en: Visualizing data
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Visualization is a powerful way to communicate information through graphical
    means. Visual presentations make data easier to comprehend. This recipe presents
    some basic functions to plot charts, and demonstrates how visualizations are helpful
    in data exploration.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Ensure that you have completed the previous recipes by installing R on your
    operating system.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Perform the following steps to visualize a dataset:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Load the iris data into the R session:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE74]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Calculate the frequency of species within the iris using the `table` command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE75]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'As the frequency in the table shows, each species represents 1/3 of the iris
    data. We can draw a simple pie chart to represent the distribution of species
    within the iris:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE76]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '![How to do it...](img/00020.jpeg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: The pie chart of species distribution
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'The histogram creates a frequency plot of sorts along the *x*-axis. The following
    example produces a histogram of the sepal length:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE77]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '![How to do it...](img/00021.jpeg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: The histogram of the sepal length
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: In the histogram, the *x*-axis presents the sepal length and the *y*-axis presents
    the count for different sepal lengths. The histogram shows that for most irises,
    sepal lengths range from 4 cm to 8 cm.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Boxplots, also named box and whisker graphs, allow you to convey a lot of information
    in one simple plot. In such a graph, the line represents the median of the sample.
    The box itself shows the upper and lower quartiles. The whiskers show the range:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE78]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '![How to do it...](img/00022.jpeg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: The boxplot of the petal width
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: The preceding screenshot clearly shows the median and upper range of the petal
    width of the setosa is much shorter than versicolor and virginica. Therefore,
    the petal width can be used as a substantial attribute to distinguish iris species.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'A scatter plot is used when there are two variables to plot against one another.
    This example plots the petal length against the petal width and color dots in
    accordance to the species it belongs to:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE79]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '![How to do it...](img/00023.jpeg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: The scatter plot of the sepal length
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'The preceding screenshot is a scatter plot of the petal length against the
    petal width. As there are four attributes within the iris dataset, it takes six
    operations to plot all combinations. However, R provides a function named `pairs`,
    which can generate each subplot in one figure:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE80]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '![How to do it...](img/00024.jpeg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: Pairs scatterplot of iris data
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: R provides many built-in plot functions, which enable users to visualize data
    with different kinds of plots. This recipe demonstrates the use of pie charts
    that can present category distribution. A pie chart of an equal size shows that
    the number of each species is equal. A histogram plots the frequency of different
    sepal lengths. A box plot can convey a great deal of descriptive statistics, and
    shows that the petal width can be used to distinguish an iris species. Lastly,
    we introduced scatter plots, which plot variables on a single plot. In order to
    quickly generate a scatter plot containing all the pairs of iris data, one may
    use the `pairs` command.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'ggplot2 is another plotting system for R, based on the implementation of Leland
    Wilkinson''s grammar of graphics. It allows users to add, remove, or alter components
    in a plot with a higher abstraction. However, the level of abstraction results
    is slow compared to lattice graphics. For those of you interested in the topic
    of ggplot, you can refer to this site: [http://ggplot2.org/](http://ggplot2.org/).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Getting a dataset for machine learning
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: While R has a built-in dataset, the sample size and field of application is
    limited. Apart from generating data within a simulation, another approach is to
    obtain data from external data repositories. A famous data repository is the UCI
    machine learning repository, which contains both artificial and real datasets.
    This recipe introduces how to get a sample dataset from the UCI machine learning
    repository.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Ensure that you have completed the previous recipes by installing R on your
    operating system.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Perform the following steps to retrieve data for machine learning:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Access the UCI machine learning repository: [http://archive.ics.uci.edu/ml/](http://archive.ics.uci.edu/ml/).![How
    to do it...](img/00025.jpeg)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: UCI data repository
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Click on **View ALL Data Sets**. Here you will find a list of datasets containing
    field names, such as **Name**, **Data Types**, **Default Task**, **Attribute Types**,
    **# Instances**, **# Attributes**, and **Year**:![How to do it...](img/00026.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Use *Ctrl* + *F* to search for **Iris**:![How to do it...](img/00027.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on **Iris**. This will display the data folder and the dataset description:![How
    to do it...](img/00028.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on **Data Folder**, which will display a directory containing the iris
    dataset:![How to do it...](img/00029.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'You can then either download `iris.data` or use the `read.csv` function to
    read the dataset:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE81]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Before conducting data analysis, it is important to collect your dataset. However,
    to collect an appropriate dataset for further exploration and analysis is not
    easy. We can, therefore, use the prepared dataset with the UCI repository as our
    data source. Here, we first access the UCI dataset repository and then use the
    iris dataset as an example. We can find the iris dataset by using the browser's
    find function (*Ctrl* + *F*), and then enter the file directory. Last, we can
    download the dataset and use the R IO function, `read.csv`, to load the iris dataset
    into an R session.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: KDnuggets ([http://www.kdnuggets.com/datasets/index.html](http://www.kdnuggets.com/datasets/index.html))
    offers a resourceful list of datasets for data mining and data science. You can
    explore the list to find the data that satisfies your requirements.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
