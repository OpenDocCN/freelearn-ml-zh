["```py\n>brnn(x,y,neurons,normalize,epochs,…,Monte_Carlo,…)\n```", "```py\n>install.packages(\"brnn\")  #one time installation\n>library(brnn)\n>mpgdataall <- read.csv(\"C:/…/auto-mpg.csv\")#give the correct full path\n>mpgdata <- mpgdataall[,c(1,3,5,6)]\n>#Fitting Bayesian NN Model\n>ytrain <- mpgdata[1:100,1]\n>xtrain <- as.matrix(mpgdata[1:100,2:4])\n>mpg_brnn <- brnn(xtrain,ytrain,neurons=2,normalize = TRUE,epochs = 1000,Monte_Carlo = TRUE)\n>summary(mpg_brnn)\nA Bayesian regularized neural network\n3 - 2 - 1 with 10 weights,biases and connection strengths\nInputs and output were normalized\nTraining finished because Changes in F= beta*SCE + alpha*Ew in last 3 iterations less than 0.001\n\n>#Prediction using trained model\n>ytest <- mpgdata[101:150,1]\n>xtest <- as.matrix(mpgdata[101:150,2:4])\n>ypred_brnn <- predict.brnn(mpg_brnn,xtest)\n>plot(ytest,ypred_brnn)\n>err <-ytest-ypred\n>summary(err)\n```", "```py\ninstall.packages(\"darch\") #one time\n>library(darch)\n>darch <- newDArch(c(2,4,1),batchSize = 2,genWeightFunc = generateWeights)\nINFO [2015-07-19 18:50:29] Constructing a darch with 3 layers.\nINFO [2015-07-19 18:50:29] Generating RBMs.\nINFO [2015-07-19 18:50:29] Construct new RBM instance with 2 visible and 4 hidden units.\nINFO [2015-07-19 18:50:29] Construct new RBM instance with 4 visible and 1 hidden units.\n```", "```py\n>inputs <- matrix(c(0,0,0,1,1,0,1,1),ncol=2,byrow=TRUE)\n>outputs <- matrix(c(0,1,1,0),nrow=4)\n```", "```py\n>darch <- preTrainDArch(darch,inputs,maxEpoch=1000)\n```", "```py\n>getLayerWeights(darch,index=1)\n[[1]]\n          [,1]        [,2]       [,3]       [,4]\n[1,]   8.167022    0.4874743  -7.563470  -6.951426\n[2,]   2.024671  -10.7012389   1.313231   1.070006\n[3,]  -5.391781    5.5878931   3.254914   3.000914\n```", "```py\n>layers <- getLayers(darch)\n>for(i in length(layers):1){\n     layers[[i]][[2]] <- sigmoidUnitDerivative\n    }\n>setLayers(darch) <- layers\n>rm(layers)\n```", "```py\n>setFineTuneFunction(darch) <- backpropagation\n>darch <- fineTuneDArch(darch,inputs,outputs,maxEpoch=1000)\n```", "```py\n>darch <- getExecuteFunction(darch)(darch,inputs)\n>outputs_darch <- getExecOutputs(darch)\n>outputs_darch[[2]]\n        [,1]\n[1,] 9.998474e-01\n[2,] 4.921130e-05\n[3,] 9.997649e-01\n[4,] 3.796699e-05\n```"]