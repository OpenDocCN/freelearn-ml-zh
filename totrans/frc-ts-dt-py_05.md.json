["```py\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom prophet import Prophet\ndf = pd.read_csv('AirPassengers.csv')\ndf ['Month'] = pd.to_datetime(df['Month'])\ndf.columns = ['ds', 'y']\n```", "```py\nmodel_a = Prophet(seasonality_mode='additive',\n                  yearly_seasonality=4)\nmodel_a.fit(df)\nforecast_a = model_a.predict()\nfig_a = model_a.plot(forecast_a)\nplt.show()\n```", "```py\nmodel_m = Prophet(seasonality_mode='multiplicative',\n                  yearly_seasonality=4)\nmodel_m.fit(df)\nforecast_m = model_m.predict()\nfig_m = model_m.plot(forecast_m)\nplt.show()\n```", "```py\nfig_a2 = model_a.plot_components(forecast_a)\nplt.show()\n```", "```py\nfig_m2 = model_m.plot_components(forecast_m)\nplt.show()\n```", "```py\ndf = pd.read_csv('divvy_daily.csv')\ndf.head()\n```", "```py\ndf = df[['date', 'rides']]\ndf['date'] = pd.to_datetime(df['date'])\ndf.columns = ['ds', 'y']\n```", "```py\nmodel = Prophet(seasonality_mode='multiplicative')\nmodel.fit(df)\nfuture = model.make_future_dataframe(periods=365)\nforecast = model.predict(future)\nfig = model.plot(forecast)\nplt.show()\n```", "```py\nfig2 = model.plot_components(forecast)\nplt.show()\n```", "```py\nmodel = Prophet(seasonality_mode='multiplicative',\n                yearly_seasonality=4)\nmodel.fit(df)\n```", "```py\nfrom prophet.plot import plot_yearly\n```", "```py\nfig3 = plot_yearly(model, figsize=(10.5, 3.25))\nplt.show()\n```", "```py\ndf = pd.read_csv('sunspots.csv',\\\n                 usecols=['Date', 'Monthly Mean Total\\\n                          Sunspot Number'])\ndf['Date'] = pd.to_datetime(df['Date'])\ndf.columns = ['ds', 'y']\n```", "```py\nmodel = Prophet(seasonality_mode='multiplicative',\n                yearly_seasonality=False)\n```", "```py\nmodel.add_seasonality(name='11-year cycle',\n                      period=11 * 365.25,\n                      fourier_order=5)\n```", "```py\nmodel.fit(df)\nfuture = model.make_future_dataframe(periods=240, freq='M')\nforecast = model.predict(future)\nfig2 = model.plot_components(forecast)\nplt.show()\n```", "```py\nmodel.seasonalities\n```", "```py\nOrderedDict([('11-year cycle',\n              {'period': 4017.75,\n               'fourier_order': 5,\n               'prior_scale': 10.0,\n               'mode': 'multiplicative',\n               'condition_name': None})])\n```", "```py\nmodel.add_seasonality(name='hourly',\n                      # an hour is 0.04167 days\n                      period=1 / 24,\n                      # experiment with this value\n                      fourier_order=5)\n```", "```py\nmodel.add_seasonality(name='quarterly',\n                      # a quarter is 91.3125 days\n                      period=365.25 / 4\n                      # experiment with this value\n                      fourier_order=5)\n```", "```py\ndf = pd.read_csv('divvy_hourly.csv')\ndf['date'] = pd.to_datetime(df['date'])\ndf.columns = ['ds', 'y']\n```", "```py\ndef is_weekend(ds):\n    date = pd.to_datetime(ds)\n    return (date.dayofweek == 5 or date.dayofweek == 6)\ndf['weekend'] = df['ds'].apply(is_weekend)\ndf['weekday'] = ~df['ds'].apply(is_weekend)\ndf.head()\n```", "```py\nmodel = Prophet(seasonality_mode='multiplicative',\n                yearly_seasonality=6,\n                weekly_seasonality=6,\n                daily_seasonality=False)\n```", "```py\nmodel.add_seasonality(name='daily_weekend',\n                      period=1,\n                      fourier_order=3,\n                      condition_name='weekend')\nmodel.add_seasonality(name='daily_weekday',\n                      period=1,\n                      fourier_order=3,\n                      condition_name='weekday')\n```", "```py\nmodel.fit(df)\nfuture = model.make_future_dataframe(periods=365 * 24,\n                                     freq='h')\nfuture['weekend'] = future['ds'].apply(is_weekend)\nfuture['weekday'] = ~future['ds'].apply(is_weekend)\nforecast = model.predict(future)\n```", "```py\nfrom prophet.plot import plot_seasonality\nfig3 = plot_seasonality(model, 'daily_weekday',\n                        figsize=(10, 3))\nplt.show()\nfig4 = plot_seasonality(model, 'daily_weekend',\n                        figsize=(10, 3))\nplt.show()\n```", "```py\ndf = pd.read_csv('divvy_daily.csv')\ndf = df[['date', 'rides']]\ndf['date'] = pd.to_datetime(df['date'])\ndf.columns = ['ds', 'y']\n```", "```py\nmodel = Prophet(seasonality_mode='multiplicative',\n                yearly_seasonality=4,\n                seasonality_prior_scale=.01)\n```", "```py\nmodel.fit(df)\nfuture = model.make_future_dataframe(periods=365)\nforecast = model.predict(future)\nfig = model.plot(forecast)\nplt.show()\nfig2 = model.plot_components(forecast)\nplt.show()\n```", "```py\nmodel = Prophet(seasonality_mode='multiplicative',\n                yearly_seasonality=4,\n                weekly_seasonality=False)\n```", "```py\nmodel.add_seasonality(name='weekly',\n                      period=7,\n                      fourier_order=4,\n                      prior_scale=0.01)\n```", "```py\nmodel.fit(df)\nfuture = model.make_future_dataframe(periods=365)\nforecast = model.predict(future)\nfig2 = model.plot_components(forecast)\nplt.show()\n```"]