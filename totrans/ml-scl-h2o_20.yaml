- en: '*Appendix* : Alternative Methods to Launch H2O Clusters'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This [*Appendix*](B16721_Appendix_Final_SK_ePub.xhtml#_idTextAnchor268) will
    show you how to launch H2O-3 and Sparkling Water clusters on your local machine
    so that you can run the code samples in this book. We will also show you how to
    launch H2O-3 clusters in the 90-day free trial environment for the H2O AI Cloud.
    This trial environment includes Enterprise Steam to launch and manage H2O clusters
    on Kubernetes infrastructure.
  prefs: []
  type: TYPE_NORMAL
- en: Note on Environments
  prefs: []
  type: TYPE_NORMAL
- en: '**Architecture**: As introduced in [*Chapter 2*](B16721_02_Final_SK_ePub.xhtml#_idTextAnchor024),
    *Platform Components and Key Concepts*, you will use a client environment (with
    the H2O-3 or Sparkling Water libraries implemented) to run commands against a
    remote H2O-3 or Sparkling Water architecture distributed across multiple server
    nodes on a Kubernetes or Hadoop cluster. For small datasets, however, the architecture
    can be launched locally as a single process on the same machine as the client.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Versions**: Functionality and code samples from this book use the following
    versions: H2O-3 version 3.34.0.7, and Sparkling Water version 3.34.0.7-1-3.2 to
    run on Spark 3.2\. You will set up your environment with the latest (most recent)
    stable versions, which will allow you to run the same code samples from this book
    but will also include capabilities in H2O-3 and Sparkling Water that were added
    after the book was written.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Languages**: You can set up your client environment in Python, R, or Java/Scala.
    We will use Python in this book. Your Python client can be a Jupyter notebook,
    PyCharm, or other.'
  prefs: []
  type: TYPE_NORMAL
- en: Let's learn how to run H2O-3 entirely in your local environment.
  prefs: []
  type: TYPE_NORMAL
- en: Local H2O-3 cluster
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This is the easiest method to run H2O-3 and is suitable for the small datasets
    used in code samples in this book. It launches H2O-3 on your local machine (versus
    an enterprise cluster environment) and does not involve H2O Enterprise Steam.
  prefs: []
  type: TYPE_NORMAL
- en: First, we will perform a one-time setup of our H2O-3 Python environment.
  prefs: []
  type: TYPE_NORMAL
- en: Step 1 – Install H2O-3 in Python
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: To set up your H2O-3 Python client, simply install three module dependencies
    in your Python environment and then the `h2o-3` Python module. You must use Python
    2.7.x, 3.5.x, 3.6.x, or 3.7.x.
  prefs: []
  type: TYPE_NORMAL
- en: 'More specifically, do the following:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Install dependencies in your Python environment:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Install the H2O-3 library in your Python environment:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Please refer to [http://h2o-release.s3.amazonaws.com/h2o/rel-zumbo/1/index.html](http://h2o-release.s3.amazonaws.com/h2o/rel-zumbo/1/index.html)
    (the **INSTALL IN PYTHON** tab) to install H2O-3 in Conda.
  prefs: []
  type: TYPE_NORMAL
- en: You are now ready to run H2O-3 locally. Let's see how to do that.
  prefs: []
  type: TYPE_NORMAL
- en: Step 2 – Launch your H2O-3 cluster and write code
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To start a local single-node H2O-3 cluster, simply run the following in your
    Python IDE:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: You can now write your H2O-3 code, including all samples from this book. See
    [*Chapter 2*](B16721_02_Final_SK_ePub.xhtml#_idTextAnchor024), *Platform Components
    and Key Concepts,* for a `Hello World` code sample and an explanation of what
    happens under the surface.
  prefs: []
  type: TYPE_NORMAL
- en: Java Dependency – Only When Running Locally
  prefs: []
  type: TYPE_NORMAL
- en: The H2O-3 cluster (not the Python client) runs on Java. Because you are running
    the cluster on your local machine here (representing a single-node cluster), you
    must have Java installed. This is not required when you use your Python client
    to connect to a remote H2O cluster in your enterprise Kubernetes or Hadoop environment.
  prefs: []
  type: TYPE_NORMAL
- en: Now, let's see how we can set up our environment to write Sparkling Water code
    on our local machine.
  prefs: []
  type: TYPE_NORMAL
- en: Local Sparkling Water cluster
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Running Sparkling Water locally is similar to running H2O-3 locally, but with
    Spark dependencies. See this link for a full explanation of the Spark, Python,
    and H2O components involved: [https://docs.h2o.ai/sparkling-water/3.2/latest-stable/doc/pysparkling.html](https://docs.h2o.ai/sparkling-water/3.2/latest-stable/doc/pysparkling.html).'
  prefs: []
  type: TYPE_NORMAL
- en: 'We will be using Spark 3.2 here. To use a different version of Spark, go to
    the **Sparkling Water** section of the H2O downloads page at the following link:
    [https://h2o.ai/resources/download/](https://h2o.ai/resources/download/).'
  prefs: []
  type: TYPE_NORMAL
- en: For your Sparkling Water Python client, you must use Python 2.7.x, 3.5.x, 3.6.x,
    or 3.7.x. We will be running Sparkling Water from a Jupyter notebook here.
  prefs: []
  type: TYPE_NORMAL
- en: Step 1 – Install Spark locally
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Follow these steps to install Spark locally:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Go to [https://spark.apache.org/downloads.html](https://spark.apache.org/downloads.html)
    to download Spark. Make the following choices and then download:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Spark version: 3.2.x'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Package type: Pre-built for Hadoop 3.3 and later'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Unzip the downloaded file.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Set the following environment variables (shown here for macOS):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Now, let's install the Sparkling Water library in our Python environment.
  prefs: []
  type: TYPE_NORMAL
- en: Step 2 – Install Sparkling Water in Python
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Install the following modules:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Install dependencies in your Python environment:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Install the Sparkling Water Python module (called `PySparkling`). Note the
    module reference to Spark 3.2 specifically here:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Next, let's install an interactive shell.
  prefs: []
  type: TYPE_NORMAL
- en: Step 3 – Install a Sparkling Water Python interactive shell
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To run Sparkling Water locally, we need to install an interactive shell to
    launch the Sparkling Water cluster on Spark. (This is only required when running
    Sparkling Water locally; Enterprise Steam takes care of this when running on your
    enterprise cluster.) To do so, perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Download the interactive shell by navigating to the **Sparkling Water** section
    of [https://h2o.ai/resources/download/](https://h2o.ai/resources/download/), clicking
    **Sparkling Water For Spark 3.2**, and finally, clicking on the **DOWNLOAD SPARKLING
    WATER** button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Unzip the download.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now, let's launch a Sparkling Water cluster and access it from a Jupyter notebook.
  prefs: []
  type: TYPE_NORMAL
- en: Step 4 – Launch a Jupyter notebook on top of the Sparkling Water shell
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'We assume you have Jupyter Notebook installed in the same Python environment
    as your installations in step *2*. Perform the following steps to launch a Jupyter
    notebook:'
  prefs: []
  type: TYPE_NORMAL
- en: On the command line, navigate into the directory where you unzipped the download
    in step *3* of this section.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Launch the Sparkling Water interactive shell and a Jupyter notebook in it:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'For macOS, use the following:'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
- en: 'For Windows, use the following:'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
- en: Your Jupyter notebook should launch in your browser.
  prefs: []
  type: TYPE_NORMAL
- en: Now, let's write Sparkling Water code.
  prefs: []
  type: TYPE_NORMAL
- en: Step 5 – Launch your Sparkling Water cluster and write code
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In your Jupyter notebook, type the following code to get you started:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Start your Sparkling Water cluster:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Test the installation:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: You are now ready to build models using both H2O and Spark code.
  prefs: []
  type: TYPE_NORMAL
- en: H2O-3 cluster in the 90-day free trial environment for H2O AI Cloud
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Here, you must interact with Enterprise Steam to run H2O-3\. In this case, you
    will install the `h2osteam` module in your Python client environment in addition
    to the `h2o` module as we did when running H2O-3 locally.
  prefs: []
  type: TYPE_NORMAL
- en: Step 1 – Get your 90-day trial to H2O AI Cloud
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Get your trial access to H2O AI Cloud here: [https://h2o.ai/freetrial](https://h2o.ai/freetrial).'
  prefs: []
  type: TYPE_NORMAL
- en: When you have completed all steps and can log in to H2O AI Cloud, then we can
    start running H2O-3 clusters as part of the H2O AI Cloud platform. Here are the
    next steps.
  prefs: []
  type: TYPE_NORMAL
- en: Step 2 – Set up your Python environment
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To set up your Python client environment, perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Log in to H2O AI Cloud and click on the `h2osteam` library by clicking on the
    **Python Client** option from the sidebar:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 15.1 – Enterprise Steam'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B16721_15_001.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 15.1 – Enterprise Steam
  prefs: []
  type: TYPE_NORMAL
- en: 'Install the `h2osteam` library in your Python environment by running the following
    command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Here, `/path/to/download.whl` is replaced by your actual path.
  prefs: []
  type: TYPE_NORMAL
- en: 'You will also need to install the `h2o` library. To do so, execute the following:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Now, let's use Steam to start an H2O cluster and then write H2O code in Python.
  prefs: []
  type: TYPE_NORMAL
- en: Step 3 – Launch your cluster
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Follow these steps to launch your H2O cluster, which is done on a Kubernetes
    server cluster:'
  prefs: []
  type: TYPE_NORMAL
- en: In Enterprise Steam, click **H2O** on the sidebar and then click the **Launch
    New Cluster** button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You now can configure your H2O cluster and give it a name. Be sure to configure
    the latest H2O version from the dropdown, which should match the library you installed
    in the previous step.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: When configured, click the **Launch Cluster** button and wait for the cluster
    launch to complete.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You will need the URL to Enterprise Steam to connect to it from your Jupyter
    notebook or other Python client. While in Steam, copy the URL from `https` to
    `h2o.ai`, inclusive.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Step 4 – Write H2O-3 code
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'We can now start writing code (for example in Jupyter) to build models on our
    H2O-3 cluster that we just launched. Perform the following steps after opening
    your Python client:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Import your libraries and connect to Enterprise Steam:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Important Note
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: At the time of this writing the URL for the 90-day H2O AI Cloud trial is [https://steam.cloud.h2o.ai](https://steam.cloud.h2o.ai).
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: For password you can use your login password to the H2O AI Cloud trial environment,
    or you can use a temporary personal access token generated from the Enterprise
    Steam Configurations page.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Connect to your H2O cluster you started in Enterprise Steam:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: You can now write your H2O-3 code, including all samples from this book.
  prefs: []
  type: TYPE_NORMAL
