["```py\nto_drop = ['points']\ndf_data_1.drop(to_drop, inplace=True, axis=1)\ndf_data_1.head()\n```", "```py\nfrom pandas import DataFrame\nData = {'x': [25,34,22,27,33,33,31,22,35,34,67,54,57,43,50,57,59,52,65,47,49,48,35,33,44,45,38,43,51,46],\n        'y': [79,51,53,78,59,74,73,57,69,75,51,32,40,47,53,36,35,58,59,50,25,20,14,12,20,5,29,27,8,7]\n      }\ndf = DataFrame(Data,columns=['x','y'])\nprint (df)\n```", "```py\nfrom pandas import DataFrame\nimport matplotlib.pyplot as plt\nfrom sklearn.cluster import KMeans\nData = {'x': [25,34,22,27,33,33,31,22,35,34,67,54,57,43,50,57,59,52,65,47,49,48,35,33,44,45,38,43,51,46],\n        'y': [79,51,53,78,59,74,73,57,69,75,51,32,40,47,53,36,35,58,59,50,25,20,14,12,20,5,29,27,8,7]\n       }\ndf = DataFrame(Data,columns=['x','y'])\nkmeans = KMeans(n_clusters=3).fit(df)\ncentroids = kmeans.cluster_centers_\nprint(centroids)\nplt.scatter(df['x'], df['y'], c= kmeans.labels_.astype(float), s=50, alpha=0.5)\nplt.scatter(centroids[:, 0], centroids[:, 1], c='red', s=50)\nplt.show()\n```", "```py\nfurniture = df.loc[df['Category'] == 'Furniture']\nfurniture['Order Date'].min(), furniture['Order Date'].max()\n```", "```py\ny = furniture['Sales'].resample('MS').mean()\ny[\"2017\":]\n```", "```py\ny.plot(figsize=(15, 6))\nplt.show()\n```", "```py\nfrom pylab import rcParams\nrcParams['figure.figsize'] = 18, 8\ndecomposition = sm.tsa.seasonal_decompose(y, model='additive')\nfig = decomposition.plot()\nplt.show()\n```", "```py\npred = results.get_prediction(start=pd.to_datetime('2017-01-01'), dynamic=False)\npred_ci = pred.conf_int()\nax = y['2014':].plot(label='observed')\npred.predicted_mean.plot(ax=ax, label='One-step' ahead Forecast', alpha=.7, figsize=(14, 7))\nax.fill_between(pred_ci.index, pred_ci.iloc[:, 0], pred_ci.iloc[:, 1], color='k', alpha)\nax.set_xlabel('Date')\nax.set_ylabel('Furniture Sales')\nplt.legend()\nplt.show() \n```"]