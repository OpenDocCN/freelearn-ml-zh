- en: '3'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '3'
- en: Exploring Data Using Power BI and Creating a Semantic Model
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Power BI探索数据并创建语义模型
- en: '[*Chapter 2*](B19500_02.xhtml#_idTextAnchor030) was a tedious process of combing
    through the FAA Wildlife Strike raw data, identifying the columns of data that
    you want to carry forward for analysis, and then setting up queries that will
    transform the data and metadata for the purpose of analysis and ML with Power
    BI. However, it was important work.'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第2章*](B19500_02.xhtml#_idTextAnchor030)是一个繁琐的过程，需要仔细检查FAA野生动物打击原始数据，识别你想要用于分析的列，然后设置查询以转换数据及其元数据，以便进行分析和机器学习。然而，这是一项重要的工作。'
- en: Now, you are ready to create a `columnname` or `column_name` might be displayed
    to users as **Column Name** via the semantic layer. Also, the logic for runtime
    calculations such as **Year to Date Cumulative Sales** often exists in the semantic
    layer. In the Microsoft Power BI ecosystem, the semantic layer exists within the
    Power BI dataset.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你已经准备好创建一个`列名`，或者`column_name`可能会通过语义层显示为**列名**。此外，如**年度累计销售额**等运行时计算的逻辑通常存在于语义层中。在Microsoft
    Power BI生态系统中，语义层存在于Power BI数据集中。
- en: The Power BI dataset will consist of all of the data created by the queries
    in [*Chapter 2*](B19500_02.xhtml#_idTextAnchor030) but with the addition of custom
    columns, relationships between tables, and calculated measures that will help
    you aggregate columns for the purpose of doing mathematical operations for your
    analytics. Going back to the *Reviewing the requirements for the solution* section
    of [*Chapter 1*](B19500_01.xhtml#_idTextAnchor015), this will be the basis for
    the **Analytical Report** that you have been tasked to deliver.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: Power BI数据集将包含[*第2章*](B19500_02.xhtml#_idTextAnchor030)中查询创建的所有数据，但会添加自定义列、表之间的关系以及计算度量，这些将帮助你聚合列，以便进行数学运算，以支持你的分析。回到[*第1章*](B19500_01.xhtml#_idTextAnchor015)中**审查解决方案需求**部分，这将是你被要求交付的**分析报告**的基础。
- en: Once you’ve built out your Power BI dataset with some basic calculated measures,
    you will start building the basis for the data that will be used for ML in Power
    BI. This will be the basis for the **Predict Damage**, **Predict Size**, and **Predict
    Height** ML models that are requirements from the *Reviewing the requirements
    for the solution* section of [*Chapter 1*](B19500_01.xhtml#_idTextAnchor015).
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你使用一些基本的计算度量创建了Power BI数据集，你将开始构建用于Power BI中机器学习的数据基础。这将作为**预测损害**、**预测尺寸**和**预测高度**机器学习模型的基础，这些模型是来自[*第1章*](B19500_01.xhtml#_idTextAnchor015)中**审查解决方案需求**部分的必需要求。
- en: Technical requirements
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'For this chapter, you will need the following:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 对于本章，你需要以下内容：
- en: Power BI Desktop April 2023 or later (no licenses required)
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Power BI桌面版2023年4月或更高版本（无需许可证）
- en: 'FAA Wildlife Strike data files from either the FAA website or the Packt GitHub
    site at this link: [https://github.com/PacktPublishing/Unleashing-Your-Data-with-Power-BI-Machine-Learning-and-OpenAI/](https://github.com/PacktPublishing/Unleashing-Your-Data-with-Power-BI-Machine-Learning-and-OpenAI/).'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 来自FAA野生动物打击数据文件，可以从FAA网站或通过以下链接的Packt GitHub站点获取：[https://github.com/PacktPublishing/Unleashing-Your-Data-with-Power-BI-Machine-Learning-and-OpenAI/](https://github.com/PacktPublishing/Unleashing-Your-Data-with-Power-BI-Machine-Learning-and-OpenAI/)
- en: Designing relationships between tables
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设计表之间的关系
- en: 'In a Power BI dataset, relationships between tables determine how queries that
    involve data from both tables are generated. If you’ve taken an introductory class
    on Power BI, such as *Dashboard in a Day*, learning about relationships is a foundational
    skill for Power BI development. Back in [*Chapter 2*](B19500_02.xhtml#_idTextAnchor030),
    you determined that the tables have the following key values to establish relationships:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在Power BI数据集中，表之间的关系决定了涉及两个表数据的查询是如何生成的。如果你已经参加了Power BI的入门课程，例如*一天构建仪表板*，了解关系是Power
    BI开发的基础技能。回到[*第2章*](B19500_02.xhtml#_idTextAnchor030)，你确定了以下键值以建立关系：
- en: '`Date` column matches up to the `Incident Date` column on the `Strike` `Reports`
    table'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`日期`列与`打击报告`表中的`事件日期`列相匹配'
- en: '`Aircraft Code` matches up with `Aircraft Class Code` on the `Strike` `Reports`
    table'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`飞机代码`与`飞机类别代码`在`打击报告`表上相匹配'
- en: '`Manufacturer Code` and `Model Code` are compound keys matching up with `AMA`
    and `AMO` from the `Strike` `Reports` table'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`制造商代码`和`型号代码`是复合键，与`打击报告`表中的`AMA`和`AMO`相匹配'
- en: '`Engine Code` maps to four columns on the `Strike Reports` table – `Engine
    1 Position Code`, `Engine 2 Position Code`, `Engine 3 Position Code`, and `Engine
    4` `Position Code`'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`发动机代码`映射到`打击报告`表中的四列——`发动机1位置代码`、`发动机2位置代码`、`发动机3位置代码`和`发动机4位置代码`'
- en: Let’s go ahead and make sure that proper key values exist for all of these tables!
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们继续确保所有这些表都存在适当的关键值！
- en: 'You can pick up where you left off with your PBIX file from [*Chapter 2*](B19500_02.xhtml#_idTextAnchor030),
    or you can follow along using the finished version of the content from this chapter.
    You can download the PBIT version of the file from the Packt GitHub site folder
    for [*Chapter* *3*](B19500_03.xhtml#_idTextAnchor047): [https://github.com/PacktPublishing/Unleashing-Your-Data-with-Power-BI-Machine-Learning-and-OpenAI/tree/main/Chapter-03](https://github.com/PacktPublishing/Unleashing-Your-Data-with-Power-BI-Machine-Learning-and-OpenAI/tree/main/Chapter-03).'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从[*第2章*](B19500_02.xhtml#_idTextAnchor030)的PBIX文件中断点继续，或者使用本章内容的完成版进行跟随。您可以从Packt
    GitHub网站文件夹的[*第3章*](B19500_03.xhtml#_idTextAnchor047)下载文件的PBIT版本：[https://github.com/PacktPublishing/Unleashing-Your-Data-with-Power-BI-Machine-Learning-and-OpenAI/tree/main/Chapter-03](https://github.com/PacktPublishing/Unleashing-Your-Data-with-Power-BI-Machine-Learning-and-OpenAI/tree/main/Chapter-03).
- en: Date table
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 日期表
- en: You’ve already created a **Date** table named **Date Info**, which has a field
    named **Date** containing every unique **Date** value between 1990-2024\. Within
    Power Query, you’ll see within **Column Statistics** that there are no blank values
    and every value is unique and does not repeat. **Date** is the primary key of
    the **Date** table.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 您已经创建了一个名为**日期信息**的**日期**表，其中包含一个名为**日期**的字段，包含1990-2024年之间的每个唯一日期值。在Power Query中，您会在**列统计信息**中看到没有空白值，每个值都是唯一的且不重复。**日期**是**日期**表的主键。
- en: For the **Strike Reports** table, **Incident Date** is the foreign key value
    that will map to the **Date** table. The column represents the date that a wildlife
    strike was reported to have happened. The column is also fully populated with
    valid data.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 对于**打击报告**表，**事件日期**是映射到**日期**表的外键值。该列表示报告野生动物打击发生的日期。该列也完全填充了有效数据。
- en: Since the **Date** table contains a valid primary key, and **Incident Date**
    on the **Strike** **Reports** table is a valid **Date** field, you do not need
    to do any additional transformations. The columns are ready for a relationship
    in the dataset!
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 由于**日期**表包含有效的主键，并且**打击报告**表中的**事件日期**是一个有效的**日期**字段，因此您不需要进行任何额外的转换。这些列在数据集中已准备好建立关系！
- en: Aircraft Type Info
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 飞机类型信息
- en: On the **Aircraft** **Type** **Info** table, you see a text column named **Aircraft**
    **Code**. Each row contains a unique letter that identifies the row. **Aircraft**
    **Classification** is another column that provides a description of the type of
    aircraft. If working with extremely large data volumes, integer key values are
    a best practice. However, since the total data volume is a manageable size, you’re
    fine using the character text values as a primary key for the **Aircraft** **Type**
    table.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在**飞机类型信息**表中，您会看到一个名为**飞机代码**的文本列。每一行包含一个唯一字母，用于标识该行。**飞机分类**是另一列，提供了飞机类型的描述。如果处理极大量的数据，整数键值是一个最佳实践。然而，由于总数据量是可管理的，您可以使用字符文本值作为**飞机类型**表的主键。
- en: 'The **Strike** **Reports** table contains a corresponding column named **Aircraft**
    **Class** **Code**. You left-click the caret next to the column name and select
    **Load** **More** to see all the possible unique values in the table. You notice
    that there are values registering as both **(null)**, which is actually blank,
    and the four-letter value **NULL**, which is a text entry:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '**打击报告**表包含一个名为**飞机类别代码**的对应列。您左键单击列名旁边的箭头并选择**加载更多**以查看表中所有可能的唯一值。您会发现有值注册为**（null）**，这实际上是空白，以及四个字母的值**NULL**，这是一个文本条目：'
- en: '![Figure 3.1 – A screenshot showing (null) and NULL text values](img/Figure_3.01_B19500.jpg)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![图3.1 – 展示(null)和NULL文本值的屏幕截图](img/Figure_3.01_B19500.jpg)'
- en: Figure 3.1 – A screenshot showing (null) and NULL text values
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.1 – 展示(null)和NULL文本值的屏幕截图
- en: The **NULL** text value does not exist in the Aircraft Type Info query. It differs
    from **(null)** because **NULL** contains actual text while **(null)** is an empty
    value. If you filter the column for either **(null)** or the **NULL** text value,
    you notice that the rows containing those values appear to have differences. Most
    of the blank **(null)** values are on rows where wildlife was struck by unknown
    flights and many columns are blank, while some of the **NULL** text values contain
    **Flight** numbers.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '**NULL**文本值在飞机类型信息查询中不存在。它与**(null)**不同，因为**NULL**包含实际的文本，而**(null)**是一个空值。如果你对**(null)**或**NULL**文本值进行筛选，你会注意到包含这些值的行似乎存在差异。大多数空白**(null)**值出现在未知航班撞击野生动物的行上，并且许多列都是空的，而一些**NULL**文本值包含**航班**号码。'
- en: 'When you build out data for use with Power BI ML, you will want to remove or
    replace all blank values since ML models usually need a design that does not have
    null values. Power BI datasets still work with null foreign key values, but that
    approach is not ideal. You decide to add two new rows to the Aircraft Type Info
    query, one for the **NULL** text value and one for blank values that show up as
    **(null)**. You will also need to replace the blank values in the Strike Reports
    query. Here are the steps you need to perform:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 当你构建用于与Power BI ML一起使用的数据时，你将想要删除或替换所有空白值，因为ML模型通常需要一个不包含空值的结构。Power BI数据集仍然可以与空外键值一起工作，但这种方法并不理想。你决定向飞机类型信息查询中添加两行新数据，一行用于**NULL**文本值，另一行用于显示为**(null)**的空白值。你还需要替换打击报告查询中的空白值。以下是你需要执行的步骤：
- en: Right-click the `null` for `blank` for `blank`.
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键单击`blank`的`null`的`blank`。
- en: On the **Home** ribbon of Power Query, select **Enter Data**. Name the new table
    **Aircraft Type Added Data**. Create two columns, **Aircraft Code** and **Aircraft
    Classification**.
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Power Query的**主页**选项卡上，选择**获取数据**。将新表命名为**飞机类型添加数据**。创建两列，**飞机代码**和**飞机分类**。
- en: 'Enter `blank` for both columns in row 1 and `NULL` for both columns in row
    2\. Your table should look like this before hitting **OK**:'
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在第1行中为两列输入`blank`，在第2行中为两列输入`NULL`。在点击**确定**之前，你的表格应该看起来像这样：
- en: "![Figure 3.2 – New data for Aircraft Type to account for blanks and the text\
    \ valu\uFEFFe NULL](img/Figure_3.02_B19500.jpg)"
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.2 – 为飞机类型添加新数据以处理空白值和文本值 NULL](img/Figure_3.02_B19500.jpg)'
- en: Figure 3.2 – New data for Aircraft Type to account for blanks and the text value
    NULL
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.2 – 为飞机类型添加新数据以处理空白值和文本值 NULL
- en: 'Right-click the new query in the **Queries** pane, and move it to the **Raw
    Data** group. Right-click it again, and uncheck **Enable Load**. Power Query should
    now look like this:'
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**查询**面板中右键单击新查询，并将其移动到**原始数据**组。再次右键单击它，取消选中**启用加载**。Power Query现在应该看起来像这样：
- en: '![Figure 3.3 – New data added to the Raw Data group that will not be loaded
    to the dataset](img/Figure_3.03_B19500.jpg)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.3 – 添加到原始数据组的新数据，这些数据将不会加载到数据集中](img/Figure_3.03_B19500.jpg)'
- en: Figure 3.3 – New data added to the Raw Data group that will not be loaded to
    the dataset
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.3 – 添加到原始数据组的新数据，这些数据将不会加载到数据集中
- en: 'Left-click on the **Aircraft Type Info** query. On the Power Query ribbon,
    under **Home** | **Combine**, select **Append Queries** | **Append Queries**.
    Append the **Aircraft Type Added Data** query. Your **Aircraft Type Info** query
    should now look like this:'
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 左键单击**飞机类型信息**查询。在Power Query选项卡下，在**主页** | **合并**中，选择**追加查询** | **追加查询**。追加**飞机类型添加数据**查询。现在，你的**飞机类型信息**查询应该看起来像这样：
- en: '![Figure 3.4 – New rows added to Aircraft Type Info query](img/Figure_3.04_B19500.jpg)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.4 – 添加到飞机类型信息查询的新行](img/Figure_3.04_B19500.jpg)'
- en: Figure 3.4 – New rows added to Aircraft Type Info query
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.4 – 添加到飞机类型信息查询的新行
- en: Now, both the **Strike Reports** query and the **Aircraft Type Info** query
    will have referential integrity, meaning that when you populate the dataset, every
    key value on the **Strike Reports** table will be a value that finds a match on
    the **Aircraft Type Info** table. The **Aircraft Type Info** query is ready to
    go!
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，**打击报告**查询和**飞机类型信息**查询都将具有引用完整性，这意味着当你填充数据集时，**打击报告**表上的每个键值都将与**飞机类型信息**表上的值匹配。**飞机类型信息**查询已准备就绪！
- en: Engine Codes Info
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 发动机代码信息
- en: 'As noted previously, you’ve already determined that **Manufacturer Code** and
    **Model Code** are compound keys matching up with **AMA** and **AMO** from the
    **Strike Reports** query. For the **Engine Codes Info** query, you observe that
    a combination of **Manufacturer Code** and **Model Code** results in a unique
    row definition. On the **Strike Reports** query, you browse the values in the
    **AMA** and **AMO** columns to find that there are blank **(null)** values in
    both columns and some invalid values that will not match up with the **Engine
    Codes Info** query. You evaluate a few options for handling these discrepancies:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，你已经确定**制造商代码**和**型号代码**是复合键，与**打击报告**查询中的**AMA**和**AMO**相匹配。对于**引擎代码信息**查询，你观察到**制造商代码**和**型号代码**的组合产生了一个唯一的行定义。在**打击报告**查询中，你浏览**AMA**和**AMO**列的值，发现两个列中都有空白**(null**)值，还有一些无效值，这些值不会与**引擎代码信息**查询匹配。你评估了几种处理这些差异的选项：
- en: Account for all of the incomplete and non-matching values by adding new rows
    to the **Engine Codes** **Info** query.
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过在**引擎代码****信息**查询中添加新行，来考虑所有不完整和不匹配的值。
- en: Break off the **Engine Manufacturing** data into a separate query, which will
    be a new dimension.
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将**引擎制造**数据拆分为一个单独的查询，这将是一个新的维度。
- en: Add a new row to the `Incomplete or Missing`. A new foreign key will be added
    to the **Engine Codes Info** query for incomplete or missing compound key values.
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`不完整或缺失`中添加新行。将为不完整或缺失的复合键值在**引擎代码信息**查询中添加一个新的外键。
- en: While the first and second options would follow best practices, you decide to
    move ahead with option three (put all of the incomplete entries and mismatched
    values into a single bucket) for your first round of development. If you determine
    later that better matches will improve your results in a meaningful way, you can
    always circle back in future rounds of development. Options one and two would
    require significant effort, and right now, you doubt that the benefits would justify
    the investment of time. You have a deadline to meet! Changing the architecture
    in the future will still be a valid option due to the flexibility of Power Query
    and Power BI.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然第一个和第二个选项遵循最佳实践，但你决定在第一轮开发中采用第三个选项（将所有不完整条目和不匹配值放入一个单独的类别中）。如果你后来确定更好的匹配将以有意义的方式改善你的结果，你可以在未来的开发轮次中回过头来。选项一和二将需要大量的努力，而现在，你怀疑这些好处是否足以证明投入时间的价值。你有一个截止日期要遵守！由于Power
    Query和Power BI的灵活性，未来改变架构仍然是一个有效的选项。
- en: 'First, begin by adding a new row to the **Engine Codes Info** query. Create
    a new query in the **Raw Data** group called **Engine Codes Added Data**, just
    as you did with **Aircraft Type** **Added Data**:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，向**引擎代码信息**查询中添加新行。在**原始数据**组中创建一个新的查询，命名为**引擎代码添加数据**，就像你为**飞机类型****添加数据**所做的那样：
- en: 'On the ribbon of Power Query, select **Enter Data**. Name the new table **Engine
    Codes Added Data**. Create four columns: **Manufacturer Code**, **Model Code**,
    **Engine Manufacturer**, and **Engine Model**.'
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Power Query的选项卡上，选择**获取数据**。将新表命名为**引擎代码添加数据**。创建四个列：**制造商代码**、**型号代码**、**引擎制造商**和**引擎型号**。
- en: 'Enter `Incomplete or Missing` for all four columns in row 1\. Your table should
    look like this before hitting **OK**:'
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在第1行中，为所有四个列输入`不完整或缺失`。在点击**确定**之前，你的表格应该看起来像这样：
- en: '![Figure 3.5 – Incomplete or missing key values can be bucketed in the report
    for Engine Codes](img/Figure_3.05_B19500.jpg)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![图3.5 – 在引擎代码报告中，不完整或缺失的关键值可以被归入不同的类别](img/Figure_3.05_B19500.jpg)'
- en: Figure 3.5 – Incomplete or missing key values can be bucketed in the report
    for Engine Codes
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.5 – 在引擎代码报告中，不完整或缺失的关键值可以被归入不同的类别
- en: Right-click the new query in the **Queries** pane, and move it to the **Raw
    Data** group. Right-click it again, and uncheck **Enable Load**.
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**查询**面板中右键点击新的查询，并将其移动到**原始数据**组。再次右键点击，取消勾选**启用加载**。
- en: 'Left-click on the **Engine Codes Info** query. On the Power Query ribbon, under
    **Home** | **Combine**, select **Append Queries** | **Append Queries**. Append
    the **Engine Codes Added Data** query. Your **Engine Codes Info** query now contains
    the additional row of data. Power Query should now look like this (notice that
    **Incomplete or Missing** is now in the table):'
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 左键点击**引擎代码信息**查询。在Power Query选项卡下，在**主页**|**组合**中，选择**追加查询**|**追加查询**。追加**引擎代码添加数据**查询。现在，你的**引擎代码信息**查询包含了额外的数据行。Power
    Query现在应该看起来像这样（注意**不完整或缺失**现在在表中）：
- en: '![Figure 3.6 – The Engine Codes Info query now has a bucket for missing and
    incomplete key values](img/Figure_3.06_B19500.jpg)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![图3.6 – Engine Codes Info查询现在有一个用于缺失和不完整键值的桶](img/Figure_3.06_B19500.jpg)'
- en: Figure 3.6 – The Engine Codes Info query now has a bucket for missing and incomplete
    key values
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.6 – Engine Codes Info查询现在有一个用于缺失和不完整键值的桶
- en: 'Power BI datasets require a single key column, and do not support compound
    keys. You’ll need to add a single primary key to the **Engine Codes Info** query.
    On the Power Query ribbon, select **Add Column** | **General** | **Index Column**
    | **From 1**. Rename the new **Index** column to **Engine Codes Info Key**. The
    **Engine Codes Info** query now looks like this:'
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Power BI数据集需要一个单独的键列，并且不支持复合键。您需要向**Engine Codes Info**查询添加一个单独的主键。在Power Query功能区，选择**添加列**
    | **常规** | **索引列** | **从1**。将新的**索引**列重命名为**Engine Codes Info Key**。现在**Engine
    Codes Info**查询看起来是这样的：
- en: '![Figure 3.7 – Integer primary key value added to the Engine Codes Info query](img/Figure_3.07_B19500.jpg)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![图3.7 – 将整数主键值添加到Engine Codes Info查询中](img/Figure_3.07_B19500.jpg)'
- en: Figure 3.7 – Integer primary key value added to the Engine Codes Info query
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.7 – 将整数主键值添加到Engine Codes Info查询中
- en: 'Now, you will add a corresponding foreign key to the **Strike Reports** query.
    While on the **Strike** **Reports** query in Power Query, select **Home** | **Combine**
    | **Merge Queries** | **Merge Queries**. Select **Engine Codes Info** as the second
    table. Click on **EMA** on the **Strike Reports** table and **Manufacturer Code**
    on the **Engine Codes Info** table. You’ll see that greater than 50% of the rows
    found a match:'
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，您将为**Strike Reports**查询添加相应的外键。在Power Query中的**Strike** **Reports**查询上，选择**主页**
    | **组合** | **合并查询** | **合并查询**。选择**Engine Codes Info**作为第二个表。在**Strike Reports**表上点击**EMA**，在**Engine
    Codes Info**表上点击**制造商代码**。您将看到超过50%的行找到了匹配项：
- en: '![Figure 3.8 – Not all of the EMA values from Strike Reports found a match
    on the Engine Codes Info query](img/Figure_3.08_B19500.jpg)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![图3.8 – Strike Reports中的EMA值并非全部在Engine Codes Info查询中找到匹配项](img/Figure_3.08_B19500.jpg)'
- en: Figure 3.8 – Not all of the EMA values from Strike Reports found a match on
    the Engine Codes Info query
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.8 – Strike Reports中的EMA值并非全部在Engine Codes Info查询中找到匹配项
- en: 'Since the table matches up via a compound key, **EMA** and **EMO** to **Manufacturer
    Code** and **Model Code**, you press Ctrl and click **EMO** on the **Strike Reports**
    table and **Model Code** for the **Engine Codes Info** table. You lose a few matches
    versus the **Manufacturer** keys alone, which would justify breaking off the **Manufacturer**
    information into a separate dimension table. However, since the difference is
    small, you decide to add breaking out **Manufacturer** as a separate dimension
    to the backlog for future rounds of development. If you don’t get any matches,
    check to ensure that the **EMA** and **EMO** columns in both tables are text values
    since data types need to be the same. Proceeding with the current plan will still
    give you a fairly similar match rate:'
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 由于表通过复合键匹配，**EMA**和**EMO**与**制造商代码**和**型号代码**匹配，您在**Strike Reports**表上按Ctrl并点击**EMO**，对于**Engine
    Codes Info**表点击**型号代码**。与仅使用**制造商**键相比，您会丢失一些匹配项，这可以证明将**制造商**信息拆分为单独的维度表是合理的。然而，由于差异很小，您决定将拆分**制造商**作为单独的维度添加到开发的后备计划中。如果您没有找到任何匹配项，请检查两个表中的**EMA**和**EMO**列是否为文本值，因为数据类型需要相同。按照当前计划进行仍将给出相当相似的匹配率：
- en: '![Figure 3.9 – A compound key can tie together Strike Reports and Engine Codes
    Info but not every row finds a match](img/Figure_3.09_B19500.jpg)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![图3.9 – 复合键可以将Strike Reports和Engine Codes Info关联起来，但并非每一行都能找到匹配项](img/Figure_3.09_B19500.jpg)'
- en: Figure 3.9 – A compound key can tie together Strike Reports and Engine Codes
    Info but not every row finds a match
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.9 – 复合键可以将Strike Reports和Engine Codes Info关联起来，但并非每一行都能找到匹配项
- en: 'Click **OK**. You’ll see a new column was added to **Strike Reports** named
    **Engine Codes Info**. Click the caret and select only **Engine Codes** **Info
    Key**:'
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**确定**。您将看到在**Strike Reports**中添加了一个名为**Engine Codes Info**的新列。点击箭头并仅选择**Engine
    Codes** **Info Key**：
- en: '![Figure 3.10 – A foreign key for Engine Codes Info was added to Strike Reports](img/Figure_3.10_B19500.jpg)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![图3.10 – 在Strike Reports中为Engine Codes Info添加了外键](img/Figure_3.10_B19500.jpg)'
- en: Figure 3.10 – A foreign key for Engine Codes Info was added to Strike Reports
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.10 – 在Strike Reports中为Engine Codes Info添加了外键
- en: Click **OK**. You now have a single foreign key value, **Engine Codes Info Key**,
    for the **Engine Codes Info** table in your dataset.
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**确定**。现在，您数据集中**Engine Codes Info**表有一个单独的外键值，**Engine Codes Info Key**。
- en: Let's move on to the next step.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们继续下一步。
- en: Engine Position Info
  id: totrans-70
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 发动机位置信息
- en: 'You previously determined that **Engine Code** on the **Engine Position Info**
    table was a primary key for the table, and all four of the columns (**Engine 1
    Position Code**, **Engine 2 Position Code**, **Engine 3 Position Code**, and **Engine
    4 Position Code**) from the **Wildlife Strikes** query were foreign keys referencing
    the engine position. You revisit the preliminary data model, which includes **Engine
    Position Info** as a dimension table referencing **Strike Reports** as a fact
    table. Since there is not a single foreign key on the **Engine Position Info**
    table referencing a single primary key on the **Strike Reports** table, a dimensional
    design can be handled in a few different ways, such as the following:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 您之前确定**发动机位置信息**表上的**发动机代码**是该表的唯一键，**野生动物打击**查询中的所有四个列（**发动机1位置代码**、**发动机2位置代码**、**发动机3位置代码**和**发动机4位置代码**）都是外键，引用发动机位置。您重新审视初步数据模型，该模型包括**发动机位置信息**作为维度表，引用**打击报告**作为事实表。由于**发动机位置信息**表上没有单个外键引用**打击报告**表上的单个主键，因此可以以几种不同的方式处理维度设计，如下所示：
- en: A separate fact table having a separate row for each engine position.
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个单独的事实表，为每个发动机位置有一个单独的行。
- en: Change the granularity of the existing fact table to have a separate row for
    each engine position.
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将现有事实表的粒度更改为为每个发动机位置有一个单独的行。
- en: Add a separate copy of **Engine Position Info** for each of the four foreign
    key columns on the **Strike** **Reports** table.
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为**打击报告**表上的四个外键列中的每一个添加一个单独的**发动机位置信息**副本。
- en: Add inactive relationships between the **Engine Position Info** and **Strike
    Reports** table that can be switched out interactively using the DAX expression
    language.
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在**发动机位置信息**和**打击报告**表之间添加不活动的关联，可以使用DAX表达式语言交互式地切换。
- en: The first option might be a valid choice if significant analytics were to be
    performed on the engine positions and you were building a complex star schema
    design. The second and third options would work from a logical perspective but
    would add unnecessary complexity and bloat to your design. Remember, you will
    be performing analytics for the purpose of building predictive models using ML
    in Power BI. Keeping the columns on the **Strike Reports** table in the current
    format will work well for building queries to be used for ML purposes. You know
    that Power BI ML works best with simple flattened tables of data, with each of
    those four columns as a potential feature of the data. You decide to proceed with
    the fourth option since it works best for your ML use case and will not add bloat
    or unnecessary complexity to your design.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 如果要对发动机位置执行重要的分析并且您正在构建复杂的星型模式设计，第一个选项可能是一个有效的选择。第二个和第三个选项在逻辑上可能可行，但会给您的结构增加不必要的复杂性和冗余。记住，您将执行分析以使用Power
    BI中的ML构建预测模型。保持**打击报告**表上的列的当前格式将很好地用于构建用于ML目的的查询。您知道Power BI ML与简单扁平的数据表配合得最好，其中每个四个列都是数据的潜在特征。您决定选择第四个选项，因为它最适合您的ML用例，并且不会给设计增加冗余或不必要的复杂性。
- en: 'You take a look at the data within the **Engine 1 Position Code**, **Engine
    2 Position Code**, **Engine 3 Position Code**, and **Engine 4 Position Code**
    columns of the **Strike Reports** table. All four columns are similar to the **Aircraft
    Class Code** column that you previously reviewed in having both **(null)** entries,
    which are actually blank, and the four-letter **NULL** value, which is a text
    entry. You handle this scenario in a similar manner by adding two new rows to
    the **Engine Position Info** query for **blank** and **NULL** entries:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 您查看**打击报告**表中的**发动机1位置代码**、**发动机2位置代码**、**发动机3位置代码**和**发动机4位置代码**列中的数据。这四个列与您之前审查的**飞机类别代码**列类似，都具有**（null）**条目，实际上为空白，以及四个字母的**NULL**值，这是一个文本条目。您可以通过为**发动机位置信息**查询中的**空白**和**NULL**条目添加两个新行以类似方式处理此场景：
- en: Right-click each of the `null` for `blank` for **Replace With**. Now, all of
    the empty values will contain the word **blank**.
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键单击每个**空白**的**替换为**。现在，所有空值都将包含单词**空白**。
- en: On the ribbon of Power Query, select **Enter Data**. Name the new table **Engine
    Position Added Data**. Create two columns, **Engine Code** and **Location** **of
    Engine**.
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Power Query的选项卡上选择**获取数据**。将新表命名为**发动机位置添加数据**。创建两个列，**发动机代码**和**发动机位置**。
- en: Enter `blank` for both columns in row 1 and `NULL` for both columns in row 2.
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在第1行中为两列输入`blank`，在第2行中为两列输入`NULL`。
- en: 'Right-click the new query in the **Queries** pane, and move it to the **Raw
    Data** group. Right-click it again, and uncheck **Enable Load**. Power Query should
    now look like this:'
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**查询**面板中右键单击新查询，并将其移动到**原始数据**组。再次右键单击它，并取消选中**启用加载**。Power Query现在应如下所示：
- en: '![Figure 3.11 – New data to account for blank and NULL text values in Engine
    Position](img/Figure_3.11_B19500.jpg)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![图3.11 – 新数据以处理发动机位置中的空白和NULL文本值](img/Figure_3.11_B19500.jpg)'
- en: Figure 3.11 – New data to account for blank and NULL text values in Engine Position
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.11 – 新数据以处理发动机位置中的空白和NULL文本值
- en: 'Left-click on the **Engine Position Info** query. On the Power Query ribbon,
    under **Home** | **Combine select Append Queries** | **Append Queries**, append
    the **Engine Position Added Data** query. Your **Engine Position Info** query
    should now look like this:'
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 左键单击**发动机位置信息**查询。在Power Query功能区中，在**主页** | **组合选择追加查询** | **追加查询**下，追加**发动机位置添加数据**查询。现在您的**发动机位置信息**查询应如下所示：
- en: '![Figure 3.12 – Engine Position Info can now match for blank rows and the NULL
    text value](img/Figure_3.12_B19500.jpg)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![图3.12 – 现在可以匹配空白行和NULL文本值](img/Figure_3.12_B19500.jpg)'
- en: Figure 3.12 – Engine Position Info can now match for blank rows and the NULL
    text value
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.12 – 现在可以匹配空白行和NULL文本值
- en: You are sure to note that although it is a best practice to use integer values
    for primary and foreign keys, Power BI has the flexibility and performance to
    handle text values as key columns in this solution. Replacing all of the key values
    on these tables with integer values would introduce unnecessary complexity at
    this point in your efforts.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 您一定会注意到，尽管使用整数值作为主键和外键是最佳实践，但Power BI具有灵活性和性能来处理此解决方案中作为键列的文本值。在您的工作的这个阶段，用整数值替换这些表上的所有键值将引入不必要的复杂性。
- en: At this point, you are ready to start building your Power BI dataset!
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 到此为止，您已准备好开始构建您的Power BI数据集！
- en: Building a Power BI dataset
  id: totrans-89
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建Power BI数据集
- en: 'You review the preliminary data model design from your earlier efforts, and
    note that you have approached a fork for which the relational analytic data that
    will populate the Power BI dataset will likely have differences from the flattened
    data used for ML in Power BI:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 您回顾了之前努力的初步数据模型设计，并注意到您已经接近一个分叉点，其中将填充Power BI数据集的关系分析数据可能与Power BI中用于机器学习的扁平化数据存在差异：
- en: '![Figure 3.13 – You will now populate Power Query queries for the Power BI
    dataset](img/Figure_3.13_B19500.jpg)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![图3.13 – 您现在将填充Power Query查询以用于Power BI数据集](img/Figure_3.13_B19500.jpg)'
- en: Figure 3.13 – You will now populate Power Query queries for the Power BI dataset
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.13 – 您现在将填充Power Query查询以用于Power BI数据集
- en: 'In order to keep your work both organized and optimized for future changes,
    you decide to create a new group in Power Query that will contain the tables for
    the Power BI dataset. You take note that when working with extremely large data
    volumes or a complex data model, avoiding complexity within Power Query is often
    a best practice. However, with your data volumes, complexity, and overall use
    case, it makes sense to have separate groups for different segments of the project:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使您的工作既有序又为未来的更改优化，您决定在Power Query中创建一个新的组，该组将包含Power BI数据集的表。您注意到，当处理极大量的数据或复杂的数据模型时，避免Power
    Query中的复杂性通常是最佳实践。然而，考虑到您数据量、复杂性和整体用例，为项目的不同部分有单独的组是有意义的：
- en: Create a new group within **Queries** called **Curated** **Dataset Tables**.
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**查询**中创建一个新的组，称为**精选数据集表**。
- en: Right-click each of the **Strike Reports**, **Aircraft Type Info**, **Engine
    Codes Info**, **Engine Position Info**, and **Date** queries, and select **Reference**.
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键单击每个**打击报告**、**飞机类型信息**、**发动机代码信息**、**发动机位置信息**和**日期**查询，并选择**引用**。
- en: Move each of those new queries into the **Curated Dataset** **Tables** group.
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将每个新查询移动到**精选数据集** **表**组。
- en: Rename the queries for readability to **Strike reports Fact**, **Aircraft Type
    Dim**, **Engine Codes Dim**, **Engine Position Dim**, and **Date Dim**.
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将查询重命名为**打击报告事实**、**飞机类型维度**、**发动机代码维度**、**发动机位置维度**和**日期维度**以提高可读性。
- en: Within the **Curated Reporting Queries** group, right-click each query and uncheck
    **Enable Load**. These queries do not need to be imported and cached within Power
    BI.
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**精选报告查询**组中，右键单击每个查询并取消选中**启用加载**。这些查询不需要导入并缓存到Power BI中。
- en: 'Power Query should now look like this:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: Power Query现在应如下所示：
- en: '![Figure 3.14 – Queries that will be populated as tables in the Power BI dataset](img/Figure_3.14_B19500.jpg)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![图3.14 – 将作为Power BI数据集中的表填充的查询](img/Figure_3.14_B19500.jpg)'
- en: Figure 3.14 – Queries that will be populated as tables in the Power BI dataset
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.14 – 将作为Power BI数据集中的表填充的查询
- en: 'Now, it is time for your dataset to blast off! First, you will go through the
    following steps to build your Power BI dataset:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，是时候让你的数据集起飞了！首先，你需要完成以下步骤来构建你的Power BI数据集：
- en: Import and process the **Wildlife Strike** data queries from Power Query.
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从Power Query导入并处理**野生动物空袭**数据查询。
- en: Create relationships between fact and dimension tables.
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在事实表和维度表之间创建关系。
- en: Clean up the metadata and adjust the settings.
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 清理元数据和调整设置。
- en: Importing and processing the Wildlife Strike data queries from Power Query
  id: totrans-106
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 从Power Query导入并处理野生动物空袭数据查询
- en: 'You run the full queries and import the **Wildlife Strike** data for your dataset:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 你将运行完整查询并导入你的数据集的**野生动物空袭**数据：
- en: In the Power Query ribbon, select **Home** | **Close** | **Close & Apply** |
    **Close & Apply**. Your dataset will populate with data imported using the Power
    Query transformations.
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Power Query功能区，选择**主页** | **关闭** | **关闭并应用** | **关闭并应用**。你的数据集将填充使用Power Query转换导入的数据。
- en: After importing the data, Power Query is closed and you are in the primary interface
    of Power BI Desktop.
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 数据导入后，Power Query关闭，你将进入Power BI Desktop的主界面。
- en: 'On the left side of the application, click the **Model** view and arrange the
    tables in a manner that is easy to read:'
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在应用程序的左侧，点击**模型**视图，以易于阅读的方式排列表：
- en: '![Figure 3.15 – Arrange the dataset tables in the Model view](img/Figure_3.15_B19500.jpg)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
  zh: '![图3.15 – 在模型视图中排列数据集表](img/Figure_3.15_B19500.jpg)'
- en: Figure 3.15 – Arrange the dataset tables in the Model view
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.15 – 在模型视图中排列数据集表
- en: Creating relationships between fact and dimension tables
  id: totrans-113
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在事实表和维度表之间创建关系
- en: 'Next, you’ll create relationships between the tables of data. On the **Date
    Dim** table, drag the **Date** column and drop it on the **Incident Date** column
    of the **Strike Reports Fact** table. Power BI will appear as follows:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，你将在数据表中创建关系。在**日期维度**表中，将**日期**列拖放到**空袭报告事实**表的**事件日期**列上。Power BI将显示如下：
- en: '![Figure 3.16 – A relationship has been created between Strike Reports Fact
    and Date Dim](img/Figure_3.16_B19500.jpg)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![图3.16 – 空袭报告事实与日期维度之间已创建关系](img/Figure_3.16_B19500.jpg)'
- en: Figure 3.16 – A relationship has been created between Strike Reports Fact and
    Date Dim
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.16 – 空袭报告事实与日期维度之间已创建关系
- en: 'Double-click on the relationship line to reveal that the relationship was determined
    to be a many-to-one with a cross-filter direction of **Single**. The arrow on
    the relationship line indicates that the **Date Dim** table can filter the **Strike
    Reports Fact** table, but not the other way around. The **Make this relationship
    active** box is also checked:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 双击关系线，可以看到关系被确定为多对一，交叉过滤方向为**单一**。关系线上的箭头表示**日期维度**表可以过滤**空袭报告事实**表，但不能反过来。**使此关系生效**框也已勾选：
- en: '![Figure 3.17 – The cardinality and filter direction are set to Many to one
    and Single](img/Figure_3.17_B19500.jpg)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![图3.17 – 基数和过滤方向设置为多对一和单一](img/Figure_3.17_B19500.jpg)'
- en: Figure 3.17 – The cardinality and filter direction are set to Many to one and
    Single
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.17 – 基数和过滤方向设置为多对一和单一
- en: 'Repeat the process by dragging and dropping the remaining columns to the **Strike
    Reports** **Fact** table:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 通过拖放剩余的列到**空袭报告事实**表来重复此过程：
- en: '| **Source Table (Column)** | **Destination** **Table (Column)** | **Cardinality**
    | **Cross** **–** **filter direction** | **Make this relationship active** |'
  id: totrans-121
  prefs: []
  type: TYPE_TB
  zh: '| **源表（列）** | **目标表（列）** | **基数** | **交叉** **–** **过滤方向** | **使此关系生效** |'
- en: '| Strike Reports Fact (Aircraft Class Code) | Aircraft Type Dim (Aircraft Code)
    | Many to one (fact to dimension) | Single (dimension to fact) | Yes |'
  id: totrans-122
  prefs: []
  type: TYPE_TB
  zh: '| 空袭报告事实（飞机类别代码） | 飞机类型维度（飞机代码） | 多对一（事实到维度） | 单一（维度到事实） | 是 |'
- en: '| Strike Reports Fact (Engine Codes Info Key) | Engine Codes Dim (Engine Codes
    Info Key) | Many to one (fact to dimension) | Single (dimension to fact) | Yes
    |'
  id: totrans-123
  prefs: []
  type: TYPE_TB
  zh: '| 空袭报告事实（发动机代码信息键） | 发动机代码维度（发动机代码信息键） | 多对一（事实到维度） | 单一（维度到事实） | 是 |'
- en: '| Strike Reports Fact (Engine 1 Position Code) | Engine Position Dim (Engine
    Code) | Many to one (fact to dimension) | Single (dimension to fact) | Yes |'
  id: totrans-124
  prefs: []
  type: TYPE_TB
  zh: '| 空袭报告事实（发动机1位置代码） | 发动机位置维度（发动机代码） | 多对一（事实到维度） | 单一（维度到事实） | 是 |'
- en: '| Strike Reports Fact (Engine 2 Position Code) | Engine Position Dim (Engine
    Code) | Many to one (fact to dimension) | Single (dimension to fact) | No |'
  id: totrans-125
  prefs: []
  type: TYPE_TB
  zh: '| 击中报告事实（发动机2位置代码） | 发动机位置维度（发动机代码） | 多对一（事实到维度） | 单一（维度到事实） | 否 |'
- en: '| Strike Reports Fact (Engine 2 Position Code) | Engine Position Dim (Engine
    Code) | Many to one (fact to dimension) | Single (dimension to fact) | No |'
  id: totrans-126
  prefs: []
  type: TYPE_TB
  zh: '| 击中报告事实（发动机2位置代码） | 发动机位置维度（发动机代码） | 多对一（事实到维度） | 单一（维度到事实） | 否 |'
- en: '| Strike Report Fact (Engine 2 Position Code) | Engine Position Dim (Engine
    Code) | Many to one (fact to dimension) | Single (dimension to fact) | No |'
  id: totrans-127
  prefs: []
  type: TYPE_TB
  zh: '| 击中报告事实（发动机2位置代码） | 发动机位置维度（发动机代码） | 多对一（事实到维度） | 单一（维度到事实） | 否 |'
- en: Figure 3.18 – Relationship settings between the Strike Reports Fact table and
    dimension tables
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.18 – 击中报告事实表与维度表之间的关系设置
- en: 'Your Power BI model view should now look like this:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 您的Power BI模型视图现在应该看起来像这样：
- en: '![Figure 3.19 – Completed relational design for the Power BI dataset](img/Figure_3.19_B19500.jpg)'
  id: totrans-130
  prefs: []
  type: TYPE_IMG
  zh: '![图3.19 – Power BI数据集完成的关联设计](img/Figure_3.19_B19500.jpg)'
- en: Figure 3.19 – Completed relational design for the Power BI dataset
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.19 – Power BI数据集完成的关联设计
- en: The relationships between tables are now defined and complete.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 表之间的关系现在已定义并完成。
- en: Cleaning up the metadata and adjusting settings
  id: totrans-133
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 清理元数据和调整设置
- en: 'Next, you move on to clean up the metadata so that the end users of the analytic
    reports can easily understand the content of the dataset. This process will involve
    the following tasks:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，您将进行清理元数据，以便分析报告的最终用户可以轻松理解数据集的内容。此过程将涉及以下任务：
- en: Hiding unnecessary columns
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 隐藏不必要的列
- en: Adjusting **Summarization** and **Data** **Category** settings
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调整**汇总**和**数据类别**设置
- en: Adjusting settings for the **Date** **Dim** table
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调整**日期维度**表的设置
- en: Hiding unnecessary columns
  id: totrans-138
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 隐藏不必要的列
- en: 'Columns that serve as a foreign key or surrogate primary key remain part of
    the browsable solution for report developers and viewers by default. You hide
    the visibility of these columns since they are part of the dataset for relationships
    but do not have a practical use in reporting. In the **Fields** panel on the right-hand
    side of the screen, right-click on these columns and select **Hide in** **report
    view**:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，作为外键或代理主键的列仍然是报告开发人员和查看者可浏览的解决方案的一部分。您可以通过隐藏这些列的可见性来隐藏它们，因为它们是关系数据集的一部分，但在报告中没有实际用途。在屏幕右侧的**字段**面板上，右键单击这些列并选择**在**
    **报告视图中** **隐藏**：
- en: '| **Table (Column)** **to Hide** |'
  id: totrans-140
  prefs: []
  type: TYPE_TB
  zh: '| **要隐藏的（列）表** |'
- en: '| Engine Codes Dim (Engine Codes Info Key) |'
  id: totrans-141
  prefs: []
  type: TYPE_TB
  zh: '| 发动机代码维度（发动机代码信息键） |'
- en: '| Strike Reports Fact (Engine Codes Info Key) |'
  id: totrans-142
  prefs: []
  type: TYPE_TB
  zh: '| 击中报告事实（发动机代码信息键） |'
- en: '| Strike Reports Fact (Incident Date) |'
  id: totrans-143
  prefs: []
  type: TYPE_TB
  zh: '| 击中报告事实（事件日期） |'
- en: '| Strike Reports Fact (Aircraft Class Code) |'
  id: totrans-144
  prefs: []
  type: TYPE_TB
  zh: '| 击中报告事实（飞机类别代码） |'
- en: Figure 3.20 – Columns that aren’t needed in the reports are hidden
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.20 – 报告中不需要的列被隐藏
- en: Adjusting Summarization, Data Category, Format, and Sort by settings
  id: totrans-146
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 调整汇总、数据类别、格式和排序依据设置
- en: 'Power BI provides settings for columns of data that impact how the data is
    displayed and aggregated in reports. The **Summarization** setting determines
    whether numeric values will add/average/min/max or whether they are not intended
    to be used for math. The **Don’t Summarize** setting will ensure that numeric
    values do not get summarized by default. **Data Category** settings will determine
    how data is displayed within the context of maps, URLs, and so on when added to
    reports. When you highlight a column, **Summarization** and **Data Category**
    are on the Power BI data view ribbon at **Column Tools** | **Properties**. **Format**
    is also configured on the ribbon, and determines the display characteristics on
    the page such as decimal points. **Sort by** determines a column to sort another
    column, such as using numeric values 1-12 to sort the months January through February
    on a data visualization. You use the following settings for columns in this solution:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: Power BI为影响报告数据显示和聚合的数据列提供设置。**汇总**设置确定数值是否将添加/平均/最小/最大，或者它们是否不打算用于数学。**不汇总**设置将确保默认情况下数值不会被汇总。**数据类别**设置将确定当数据添加到报告时，数据在地图、URL等上下文中的显示方式。当您突出显示一个列时，**汇总**和**数据类别**在Power
    BI数据视图选项卡上的**列工具** | **属性**。**格式**也在选项卡上配置，并确定页面上的显示特征，如小数点。**排序依据**确定一个列以排序另一个列，例如使用数字值1-12对数据可视化中的1月到2月进行排序。您在此解决方案中使用以下列设置：
- en: '| **Table (Column)** | **Summarization** | **Data Category** | **Format** |
    **Sort by** |'
  id: totrans-148
  prefs: []
  type: TYPE_TB
  zh: '| **表（列）** | **汇总** | **数据类别** | **格式** | **排序依据** |'
- en: '| --- | --- | --- | --- | --- |'
  id: totrans-149
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- |'
- en: '| `Strike Reports` `Fact (Latitude)` | Don’t Summarize | Latitude | Decimal
    number with 7 places |  |'
  id: totrans-150
  prefs: []
  type: TYPE_TB
  zh: '| `Strike Reports` `Fact (Latitude)` | 不汇总 | 纬度 | 具有七位小数的十进制数 |  |'
- en: '| `Strike Reports` `Fact (Longitude)` | Don’t Summarize | Longitude | Decimal
    number with 7 places |  |'
  id: totrans-151
  prefs: []
  type: TYPE_TB
  zh: '| `Strike Reports` `Fact (Longitude)` | 不汇总 | 经度 | 具有七位小数的十进制数 |  |'
- en: '| `Strike Reports` `Fact (State)` | Don’t Summarize | State or Province | Text
    |  |'
  id: totrans-152
  prefs: []
  type: TYPE_TB
  zh: '| `Strike Reports` `Fact (State)` | 不汇总 | 州或省 | 文本 |  |'
- en: '| `Strike Reports Fact (``Enroute State)` | Don’t Summarize | State or Province
    | Text |  |'
  id: totrans-153
  prefs: []
  type: TYPE_TB
  zh: '| `Strike Reports Fact (``Enroute State)` | 不汇总 | 州或省 | 文本 |  |'
- en: '| `Date (``Quarter Year)` | Don’t Summarize |  | Text | **Date (****Quarter
    Num)** |'
  id: totrans-154
  prefs: []
  type: TYPE_TB
  zh: '| `Date (``Quarter Year)` | 不汇总 |  | 文本 | **Date (****Quarter Num)** |'
- en: '| `Date (``Month Name)` | Don’t Summarize |  | Text | **Date (****Month Num)**
    |'
  id: totrans-155
  prefs: []
  type: TYPE_TB
  zh: '| `Date (``Month Name)` | 不汇总 |  | 文本 | **Date (****Month Num)** |'
- en: '| `Date (Month` `Name Short)` | Don’t Summarize |  | Text | **Date (****Month
    Num)** |'
  id: totrans-156
  prefs: []
  type: TYPE_TB
  zh: '| `Date (Month` `Name Short)` | 不汇总 |  | 文本 | **Date (****Month Num)** |'
- en: '| `Date (``Month Year)` | Don’t Summarize |  | Text | **Date (Month** **Year
    Order)** |'
  id: totrans-157
  prefs: []
  type: TYPE_TB
  zh: '| `Date (``Month Year)` | 不汇总 |  | 文本 | **Date (Month** **Year Order)** |'
- en: '| `Date (``Week Year)` | Don’t Summarize |  | Text | **Date (Week** **Year
    Order)** |'
  id: totrans-158
  prefs: []
  type: TYPE_TB
  zh: '| `Date (``Week Year)` | 不汇总 |  | 文本 | **Date (Week** **Year Order)** |'
- en: '| `Date (``Day Name)` | Don’t Summarize |  | Text | **Date (Day** **Num Week)**
    |'
  id: totrans-159
  prefs: []
  type: TYPE_TB
  zh: '| `Date (``Day Name)` | 不汇总 |  | 文本 | **Date (Day** **Num Week)** |'
- en: '| `Date (Day` `Name Short)` | Don’t Summarize |  | Text | **Date (Day** **Num
    Week)** |'
  id: totrans-160
  prefs: []
  type: TYPE_TB
  zh: '| `Date (Day` `Name Short)` | 不汇总 |  | 文本 | **Date (Day** **Num Week)** |'
- en: Figure 3.21 – Categories, summarization, format, and sort settings for columns
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.21 – 列的分类、汇总、格式和排序设置
- en: As you build out your analytical report and determine suitable features for
    ML in Power BI, you may modify more settings and add to this list.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 当您构建分析报告并确定Power BI中机器学习（ML）的合适特征时，您可能需要修改更多设置并添加到这个列表中。
- en: Adjusting settings for the Date Dim table
  id: totrans-163
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 调整日期维度表的设置
- en: Specifying the **Date Dim** table as an official date table will unlock capabilities
    in Power BI such as **Time Intelligence**. Marking the **Date Dim** table as an
    official date table can be accomplished by navigating to **Table Tools** | **Calendars**
    | **Mark as date table** in the **Data** view and selecting **Date** as the official
    date column for the solution.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 将**日期维度表**指定为官方日期表将解锁Power BI中的**时间智能**等能力。通过在**数据**视图中的**表工具** | **日历** | **标记为日期表**导航，并将**日期**作为解决方案的官方日期列进行标记，可以完成将**日期维度表**标记为官方日期表的操作。
- en: Having built out the foundation of the relational model in the Power BI dataset,
    you can move on to build runtime calculations. You’ve got the data model set up
    the way you need it, but adding some logic to the semantic layer for mathematical
    operations will empower you to dive deeper with analytics.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 在Power BI数据集中构建了关系模型的基础后，您可以继续构建运行时计算。您已经以所需的方式设置了数据模型，但为语义层添加一些用于数学运算的逻辑将使您能够通过分析深入挖掘。
- en: Adding measures to your Power BI dataset
  id: totrans-166
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 向您的Power BI数据集添加度量
- en: As a final activity for this chapter, you will add a few basic measures to the
    Power BI dataset. Measures are not stored on the tables of data but rather during
    runtime on reports. These measures will be used to do mathematics such as total
    number of reports, average damage cost amounts, average height of contact calculations,
    and more. For now, you choose a few basic measures that will give you a starting
    point for analysis. In future chapters, you can add more measures as you discover
    new perspectives within the data.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 作为本章的最终活动，您将向Power BI数据集添加一些基本度量。度量不是存储在数据表的表中，而是在运行时在报告中。这些度量将用于进行数学运算，例如报告总数、平均损害成本金额、平均接触高度计算等。目前，您可以选择一些基本度量，这将为您分析提供一个起点。在未来章节中，您可以在发现数据中的新视角时添加更多度量。
- en: Measures can be added using the DAX expression language, which is a key skill
    for Power BI. Most of the formulas will be fairly simple for anyone who is familiar
    with writing formulas in Excel.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用DAX表达式语言添加度量，这是Power BI的关键技能。对于熟悉在Excel中编写公式的任何人来说，大多数公式都将相当简单。
- en: 'Add the following measures in the **Data** view of Power BI while the **Strike
    Reports Fact** table is highlighted:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 在高亮显示**打击报告事实表**时，在Power BI的**数据**视图中添加以下度量：
- en: '| **Name** | **DAX formula** | **Description** |'
  id: totrans-170
  prefs: []
  type: TYPE_TB
  zh: '| **名称** | **DAX公式** | **描述** |'
- en: '| Incidents | `Incidents = COUNTROWS(''Strike` `Reports Fact'')` | This formula
    will calculate a count of the total incidents that were reported |'
  id: totrans-171
  prefs: []
  type: TYPE_TB
  zh: '| 事故 | `事故 = COUNTROWS(''Strike Reports Fact'')` | 此公式将计算报告的总事故数 |'
- en: '| Average Speed | `Average Speed =` `AVERAGE([Speed])` | An average speed for
    incidents at the time of impact |'
  id: totrans-172
  prefs: []
  type: TYPE_TB
  zh: '| 平均速度 | `平均速度 =` `AVERAGE([Speed])` | 在碰撞时刻的事故平均速度 |'
- en: '| Average Height | `Average Height =` `AVERAGE([Height])` | An average height
    for incidents at the time of impact |'
  id: totrans-173
  prefs: []
  type: TYPE_TB
  zh: '| 平均高度 | `平均高度 =` `AVERAGE([Height])` | 在碰撞时刻的事故平均高度 |'
- en: '| Total Cost of Repairs | `Total Cost of Repairs = SUM([Cost` `of Repairs])`
    | A sum of all repair costs |'
  id: totrans-174
  prefs: []
  type: TYPE_TB
  zh: '| 维修总成本 | `维修总成本 = SUM([Cost of Repairs])` | 所有维修成本的总和 |'
- en: '| Average Cost of Repairs | `Average Cost of Repairs = SUM([Cost` `of Repairs])`
    | An average of all repair costs |'
  id: totrans-175
  prefs: []
  type: TYPE_TB
  zh: '| 维修平均成本 | `维修平均成本 = SUM([Cost of Repairs])` | 所有维修成本的平均值 |'
- en: '| Incidents with Costs | `Incidents with Costs = CALCULATE([Incidents],FILTER(''Strike
    Reports Fact'',[Cost of Repairs] >` `0)` | A count of incidents that resulted
    in costs incurred |'
  id: totrans-176
  prefs: []
  type: TYPE_TB
  zh: '| 有成本的事故 | `有成本的事故 = CALCULATE([事故],FILTER(''Strike Reports Fact'',[Cost of
    Repairs] > 0))` | 导致产生成本的事故数量 |'
- en: '| Percentage Incidents with Costs | `Percentage Incidents with Costs = DIVIDE([Incidents`
    `with Costs],[Incidents])` | A percentage of incidents that resulted in costs
    incurred |'
  id: totrans-177
  prefs: []
  type: TYPE_TB
  zh: '| 有成本的百分比事故 | `有成本的百分比事故 = DIVIDE([有成本的事故],[事故])` | 导致产生成本的事故的百分比 |'
- en: Figure 3.22 – Calculated measures and the corresponding DAX expressions
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.22 – 计算度量值和相应的DAX表达式
- en: As you progress in your exploration of the data, you will probably add more
    measures to your list. The measures listed in the preceding table are a good start
    before moving to your next phase of analysis.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 在您探索数据的过程中，您可能会向您的列表中添加更多度量值。在进入下一个分析阶段之前，前表中列出的度量值是一个良好的起点。
- en: Summary
  id: totrans-180
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, you designed key values for tables in a Power BI dataset, created
    a Power BI dataset, and added measures to the Power BI dataset. You have progressed
    from exploring and understanding raw data to working with a multidimensional dataset
    in Power BI that contains runtime measures. You now have the basic foundation
    for analytics and building an analytics report.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您为Power BI数据集中的表格设计了关键值，创建了一个Power BI数据集，并向Power BI数据集中添加了度量值。您已经从探索和理解原始数据进步到在Power
    BI中使用包含运行时度量的多维度数据集。现在，您已经具备了分析和构建分析报告的基本基础。
- en: In the next chapter, you will build an analytical report that dives into the
    data and uncovers features that you will earmark for machine learning in Power
    BI. As you enrich the analytical report and discover new features, you will also
    begin to build out the datasets in Power Query that will be used to train and
    test using Power BI ML.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，您将构建一个分析报告，深入数据并揭示您将为Power BI机器学习标记的特性。随着您丰富分析报告并发现新特性，您也将开始构建Power Query中的数据集，这些数据集将用于Power
    BI ML的训练和测试。
