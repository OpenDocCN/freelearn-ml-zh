- en: R Fundamentals for Machine Learning
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You're probably used to hearing words such as big data, machine learning, and
    artificial intelligence in the news. It's amazing how many new applications of
    these terms appear every day. Recommender systems such as the ones used by Amazon,
    Netflix, search engines, stock market analysis, or even for speech recognition
    are only a few examples. Different new algorithms and new techniques emerge every
    year, and many of them are based on previous approaches or combine different existing
    algorithms. At the same time, there are more and more tutorials and courses focused
    on teaching them.
  prefs: []
  type: TYPE_NORMAL
- en: Many courses have a number of common limitations such as solving *toy* problems
    or focusing all of their attention on algorithms. These limitations could mean
    that you obtain an incorrect understanding of the data modeling approach. Thus,
    the modeling process entails important steps before, as business and data understanding,
    and data preparation. Without these previous steps, it isn't guaranteed that the
    model will be applied without flaws in the future. Furthermore, model development
    does not finish after finding an appropriate algorithm. The performance evaluation
    of the model, its interpretability, and the model's deployment are also very relevant
    and the culmination of the modeling process.
  prefs: []
  type: TYPE_NORMAL
- en: In this book, we will learn how to develop different predictive models. The
    applications or examples included in this book have been based on the financial
    sector, and will also try to create a theoretical framework that helps you understand
    the causes of the financial crisis, which had a dramatic impact on countries around
    the world.
  prefs: []
  type: TYPE_NORMAL
- en: All of the algorithms and techniques that are used in this book will be applied
    using the R language. Nowadays, R is one of the major languages for data science.
    There is an enormous debate about which language is better, R or Python. Both
    languages have many strengths and some weakness as well.
  prefs: []
  type: TYPE_NORMAL
- en: 'In my experience, R is more powerful for the analysis of financial data. I''ve
    found many R libraries that specialize in this field, but not so many in Python.
    Nevertheless, credit risk and financial information is very much related to the
    treatment of time series, which, at least in my opinion, performs better in Python.
    The use of recurrent or **Long Short-Term Memory** (**LSTM**) networks are better
    implemented in Python as well. However, R provides more powerful libraries for
    data visualization and interactive style. It is recommended that you use both
    R and Python interchangeably, depending on your project. Good resources on machine
    learning with Python are available at Packt, some of which are listed here for
    your convenience:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Python Machine Learning – Second Edition,* [https://www.packtpub.com/big-data-and-business-intelligence/python-machine-learning-second-edition](https://www.packtpub.com/big-data-and-business-intelligence/python-machine-learning-second-edition)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Hands-On Data Science and Python Machine Learning,* [https://www.packtpub.com/big-data-and-business-intelligence/hands-data-science-and-python-machine-learning](https://www.packtpub.com/big-data-and-business-intelligence/hands-data-science-and-python-machine-learning)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Python Machine Learning By Example*, [https://www.packtpub.com/big-data-and-business-intelligence/python-machine-learning-example](https://www.packtpub.com/big-data-and-business-intelligence/python-machine-learning-example)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In this chapter, let's revive your knowledge on machine learning and get you
    started with coding using R.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following topics will be covered in this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: R and RStudio installation
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Some basics commands
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Objects, special cases, and basic operators in R
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Controlling code flow
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: All about R packages
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Taking further steps
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: R and RStudio installation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Let's first start with installing R. It is totally free and can be downloaded
    from [https://cloud.r-project.org/](https://cloud.r-project.org/). Installing
    R is an easy task.
  prefs: []
  type: TYPE_NORMAL
- en: Let's look at the steps to install R on a Windows PC. For installing it on other
    operating systems, the steps are straightforward and are available at the same
    [https://cloud.r-project.org/](https://cloud.r-project.org/) link.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s start by installing R on a Windows system:'
  prefs: []
  type: TYPE_NORMAL
- en: Visit [https://cloud.r-project.org/](https://cloud.r-project.org/).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Look for Download and Install R and select your operating system. We are installing
    for Windows, so select the Windows link.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Go to Subdirectories and click on base.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You will be redirected to a page that shows download R *X*.*X*.*X* for Windows.
    At the time of writing this book, Download R 3.5.2 for Windows is the version
    that you need to click on.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Save and run the .exe file.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You can now select the setup language to install R.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A setup wizard will open and you can go on clicking Next until you reach Select
    Destination Location.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select your preferred location and click Next.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click the Next button several more times until R starts to install.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: After the installation is complete, R will notify you with the message Completing
    the R for Windows 3.5.2 Setup Wizard. You can now click on Finish.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You can find the R shortcut on your desktop and double-click on it to start
    R.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Like any other application, in case you can't find R on your desktop, you can
    go to the Start button, All Programs, and look for R and start it.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'You will get a screen similar to what''s shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/8d96dd67-16c3-456d-8c66-dde0e17c4fb6.png)'
  prefs: []
  type: TYPE_IMG
- en: This is the R Command Prompt, waiting for input.
  prefs: []
  type: TYPE_NORMAL
- en: Things to know about R
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Before moving on to typing in commands, you must know that R is a case-sensitive
    and interpreted language.
  prefs: []
  type: TYPE_NORMAL
- en: You can choose between manually entering commands and running a set of commands
    from the source file as per your will. R provides a lot of built-in functions
    that give most functionalities to the user. As a user, you can even create user-created
    functions.
  prefs: []
  type: TYPE_NORMAL
- en: You can even create and manipulate objects. You might know that objects are
    anything that can have an assigned value. An interactive session will require
    all objects to be present in the memory while the execution process is running,
    whereas the functions can be placed in the packages that have a reference in the
    current program and can be accessed as and when needed.
  prefs: []
  type: TYPE_NORMAL
- en: Using RStudio
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Alongside using R, it is recommended to use RStudio. RStudio is an **integrated
    development environment** (**IDE**) that, like any other IDE, enhances your interaction
    with R.
  prefs: []
  type: TYPE_NORMAL
- en: RStudio provides you with a very well-organized interface that can clearly represent
    graphs, data tables, R code, and output simultaneously.
  prefs: []
  type: TYPE_NORMAL
- en: Moreover, to import and export files in different formats into R without having
    to write code, R offers an import wizard like feature.
  prefs: []
  type: TYPE_NORMAL
- en: Having seen the standard R GUI interface, you will see the similarities with
    RStudio, but the difference is that RStudio is very intuitive and user-friendly
    compared to the R GUI. You will have many options to choose from the menu, and
    you can even customize the GUI according to your requirements. RStudio for desktop
    is available at [https://www.rstudio.com/products/rstudio/download/#download](https://www.rstudio.com/products/rstudio/download/#download).
  prefs: []
  type: TYPE_NORMAL
- en: RStudio installation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The installation steps are very similar to the installation of R, so it isn't
    necessary to describe the detailed steps.
  prefs: []
  type: TYPE_NORMAL
- en: 'The first time you open RStudio, you will see three different windows. You
    can enable a fourth window by going to File, New File, and selecting R Script:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/5b657076-3e88-4477-afa2-09e52050580a.png)'
  prefs: []
  type: TYPE_IMG
- en: On the upper-left side window, scripts can be written and then saved and executed.
    The window that follows, on the left, represents the Console, where codes in R
    can directly be executed.
  prefs: []
  type: TYPE_NORMAL
- en: The upper-right window allows for the visualization of variables and objects
    that have been defined in the workspace. Furthermore, it is possible to see the
    history of commands that were previously executed. Finally, the bottom-right window
    displays the working directory.
  prefs: []
  type: TYPE_NORMAL
- en: Some basic commands
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Here a list of useful commands to start with R and RStudio:'
  prefs: []
  type: TYPE_NORMAL
- en: '`help.start()`: Starts the HTML version of R documentation'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`help(command)`/`??command`/`help.search(command)`: Displays the help related
    to a specific command'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`demo()`: A user-friendly interface that runs some demonstrations of R scripts'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`library(help=package)`: Lists functions and datasets in a package'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`getwd()`: Prints the directory that is currently active and working'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`ls()`: Lists the objects that are used in the current session'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`setwd(mydirectory)`: Changes the working directory to `mydirectory`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`options()`: Displays current settings in the options'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`options(digits=5)`: You can print the specified digit as output'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`history()`: Displays previous commands until the limit of 25'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`history(max.show=Inf)`: Displays all commands, irrespective of the limit'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`savehistory(file=“myfile”)`: Saves the history (default file is a `.Rhistory`
    file)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`loadhistory(file=“myfile”)`: Recalls your command history'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`save.image()`: Saves the current workspace to the `.RData` file that''s present
    in that particular working directory'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`save(object list,file=“myfile.RData”)`: Saves objects into a specified file'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`load(“myfile.RData”)`: Loads a specific object from a specified file'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`q()`: This will quit R for you with a prompt to save the current workspace'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`library(package)`: Loads a library that''s specific to a project'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`install.package(package)`: Downloads and installs packages from CRAN-like
    repositories or even from local files'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`rm(object1, object2…)`: Removes objects'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: To execute a command in RStudio, it should be written in the console, and then
    you must press *Enter*.
  prefs: []
  type: TYPE_NORMAL
- en: In RStudio, it is possible to create interactive documents by combining lines
    of code and plain text. R Notebooks will be helpful in interacting with R directly,
    and so we can have a publishing-quality document produced as output when we use
    it.
  prefs: []
  type: TYPE_NORMAL
- en: 'To create a new notebook in RStudio, go to File, New File, and R Notebook.
    The default notebook will open, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/6c776b49-1538-4fcc-813e-5060fea742d9.png)'
  prefs: []
  type: TYPE_IMG
- en: 'This notebook is a plain text file that has the `.rmd` extension. A file contains
    three types of content:'
  prefs: []
  type: TYPE_NORMAL
- en: An (optional) YAML header surrounded by --- lines
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: R code chunks surrounded by [PRE0]
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: n<-10
  prefs: []
  type: TYPE_NORMAL
- en: n
  prefs: []
  type: TYPE_NORMAL
- en: '[1] 10'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: n+5
  prefs: []
  type: TYPE_NORMAL
- en: '[1] 15'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: x<-4
  prefs: []
  type: TYPE_NORMAL
- en: y<-3
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: x + y
  prefs: []
  type: TYPE_NORMAL
- en: '[1] 7'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: x - y
  prefs: []
  type: TYPE_NORMAL
- en: '[1] 1'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: x * y
  prefs: []
  type: TYPE_NORMAL
- en: '[1] 12'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: x / y
  prefs: []
  type: TYPE_NORMAL
- en: '[1] 1.333333'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: x ** y
  prefs: []
  type: TYPE_NORMAL
- en: '[1] 64'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: x * pi
  prefs: []
  type: TYPE_NORMAL
- en: '[1] 12.56637'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: exp(y)
  prefs: []
  type: TYPE_NORMAL
- en: '[1] 20.08554'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: sign(y)
  prefs: []
  type: TYPE_NORMAL
- en: '[1] 1'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: max(x,y)
  prefs: []
  type: TYPE_NORMAL
- en: '[1] 4'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: min(x,y)
  prefs: []
  type: TYPE_NORMAL
- en: '[1] 3'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: factorial(y)
  prefs: []
  type: TYPE_NORMAL
- en: '[1] 6'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: sqrt(y)
  prefs: []
  type: TYPE_NORMAL
- en: '[1] 1.732051'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: z <- x + y
  prefs: []
  type: TYPE_NORMAL
- en: z
  prefs: []
  type: TYPE_NORMAL
- en: '[1] 7'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: x > y
  prefs: []
  type: TYPE_NORMAL
- en: '[1] TRUE'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: x + y != 8
  prefs: []
  type: TYPE_NORMAL
- en: '[1] TRUE'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: a<-c(1,3,5,8)
  prefs: []
  type: TYPE_NORMAL
- en: a
  prefs: []
  type: TYPE_NORMAL
- en: '[1] 1 3 5 8'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: y <- c(1,3)
  prefs: []
  type: TYPE_NORMAL
- en: class(y)
  prefs: []
  type: TYPE_NORMAL
- en: '[1] "numeric"'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: y <- c(1,5,1)
  prefs: []
  type: TYPE_NORMAL
- en: y + 3
  prefs: []
  type: TYPE_NORMAL
- en: '[1] 4 8 4'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: c(1:10)
  prefs: []
  type: TYPE_NORMAL
- en: '[1]  1  2  3  4  5  6  7  8  9 10'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: seq(1, 5, by=0.1)
  prefs: []
  type: TYPE_NORMAL
- en: '[1] 1.0 1.1 1.2 1.3 1.4 1.5 1.6 1.7 1.8 1.9 2.0 2.1 2.2 2.3 2.4 2.5 2.6'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[18] 2.7 2.8 2.9 3.0 3.1 3.2 3.3 3.4 3.5 3.6 3.7 3.8 3.9 4.0 4.1 4.2 4.3'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[35] 4.4 4.5 4.6 4.7 4.8 4.9 5.0'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: seq(1, 5, length.out=22)
  prefs: []
  type: TYPE_NORMAL
- en: '[1] 1.000000 1.190476 1.380952 1.571429 1.761905 1.952381 2.142857'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[8] 2.333333 2.523810 2.714286 2.904762 3.095238 3.285714 3.476190'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[15] 3.666667 3.857143 4.047619 4.238095 4.428571 4.619048 4.809524'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[22] 5.000000'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: rep(3,20)
  prefs: []
  type: TYPE_NORMAL
- en: '[1] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: x <- c(9,8,1,5)
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: x[-3]
  prefs: []
  type: TYPE_NORMAL
- en: '[1] 9 8 5'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: x[1:2]
  prefs: []
  type: TYPE_NORMAL
- en: '[1] 9 8'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: x[x>0 & x<4]
  prefs: []
  type: TYPE_NORMAL
- en: '[1] 1'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: x[c(TRUE, FALSE, FALSE, TRUE)]
  prefs: []
  type: TYPE_NORMAL
- en: '[1] 9 5'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: sum(x)
  prefs: []
  type: TYPE_NORMAL
- en: '[1] 23'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: prod(x)
  prefs: []
  type: TYPE_NORMAL
- en: '[1] 360'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: length(x)
  prefs: []
  type: TYPE_NORMAL
- en: '[1] 4'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
- en: x
  prefs: []
  type: TYPE_NORMAL
- en: '[1] 9 8 1 5'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: x[1]<-22
  prefs: []
  type: TYPE_NORMAL
- en: x
  prefs: []
  type: TYPE_NORMAL
- en: '[1] 22 8 1 5'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE32]'
  prefs: []
  type: TYPE_PRE
- en: r<-c(1,4,7,9,8,1)
  prefs: []
  type: TYPE_NORMAL
- en: r<-factor(r)
  prefs: []
  type: TYPE_NORMAL
- en: r
  prefs: []
  type: TYPE_NORMAL
- en: '[1] 1 4 7 9 8 1'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Levels: 1 4 7 8 9'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE33]'
  prefs: []
  type: TYPE_PRE
- en: levels(r)
  prefs: []
  type: TYPE_NORMAL
- en: '[1] "1" "4" "7" "8" "9"'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE34]'
  prefs: []
  type: TYPE_PRE
- en: factor(r, exclude=4)
  prefs: []
  type: TYPE_NORMAL
- en: '[1] 1    <NA> 7    9    8    1'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Levels: 1 7 8 9'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE35]'
  prefs: []
  type: TYPE_PRE
- en: a<- c(1,2,7,7,1,2,2,7,1,7)
  prefs: []
  type: TYPE_NORMAL
- en: a<- factor(a, levels=c(1,2,7), ordered=TRUE)
  prefs: []
  type: TYPE_NORMAL
- en: a
  prefs: []
  type: TYPE_NORMAL
- en: '[1] 1 2 7 7 1 2 2 7 1 7'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Levels: 1 < 2 < 7'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE36]'
  prefs: []
  type: TYPE_PRE
- en: c<-"This is our first string"
  prefs: []
  type: TYPE_NORMAL
- en: c
  prefs: []
  type: TYPE_NORMAL
- en: '[1] "This is our first string"'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: class(c)
  prefs: []
  type: TYPE_NORMAL
- en: '[1] "character"'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE37]'
  prefs: []
  type: TYPE_PRE
- en: nchar(c)
  prefs: []
  type: TYPE_NORMAL
- en: '[1] 24'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE38]'
  prefs: []
  type: TYPE_PRE
- en: substring(c,4)
  prefs: []
  type: TYPE_NORMAL
- en: '[1] "s is our first string"'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE39]'
  prefs: []
  type: TYPE_PRE
- en: substring(c,1,4)
  prefs: []
  type: TYPE_NORMAL
- en: '[1] "This"'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE40]'
  prefs: []
  type: TYPE_PRE
- en: strsplit(c, " ")
  prefs: []
  type: TYPE_NORMAL
- en: '[[1]]'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[1] "This"   "is"     "our"    "first"  "string"'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE41]'
  prefs: []
  type: TYPE_PRE
- en: grep("our", c)
  prefs: []
  type: TYPE_NORMAL
- en: '[1] 1'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: grep("book", c)
  prefs: []
  type: TYPE_NORMAL
- en: integer(0)
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE42]'
  prefs: []
  type: TYPE_PRE
- en: regexpr("our", c)
  prefs: []
  type: TYPE_NORMAL
- en: '[1] 9'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: attr(,"match.length")
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[1] 3'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: attr(,"index.type")
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[1] "chars"'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: attr(,"useBytes")
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[1] TRUE'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE43]'
  prefs: []
  type: TYPE_PRE
- en: tolower(c)
  prefs: []
  type: TYPE_NORMAL
- en: '[1] "this is our first string"'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE44]'
  prefs: []
  type: TYPE_PRE
- en: toupper(c)
  prefs: []
  type: TYPE_NORMAL
- en: '[1] "THIS IS OUR FIRST STRING"'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE45]'
  prefs: []
  type: TYPE_PRE
- en: sub("our", "my", c)
  prefs: []
  type: TYPE_NORMAL
- en: '[1] "This is my first string"'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE46]'
  prefs: []
  type: TYPE_PRE
- en: gsub("our", "my", c)
  prefs: []
  type: TYPE_NORMAL
- en: '[1] "This is my first string"'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE47]'
  prefs: []
  type: TYPE_PRE
- en: 'paste(c,"My book",sep=" : ")'
  prefs: []
  type: TYPE_NORMAL
- en: '[1] "This is our first string : My book"'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE48]'
  prefs: []
  type: TYPE_PRE
- en: m<-matrix(c(1,2,3,4,5,6), nrow=2, ncol=3)
  prefs: []
  type: TYPE_NORMAL
- en: m
  prefs: []
  type: TYPE_NORMAL
- en: '[,1] [,2] [,3]'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[1,]    1    3    5'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[2,]    2    4    6'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE49]'
  prefs: []
  type: TYPE_PRE
- en: m<-matrix(c(1,2,3,4,5,6), nrow=2, ncol=3,byrow=TRUE)
  prefs: []
  type: TYPE_NORMAL
- en: m
  prefs: []
  type: TYPE_NORMAL
- en: '[,1] [,2] [,3]'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[1,]    1    2    3'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[2,]    4    5    6'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE50]'
  prefs: []
  type: TYPE_PRE
- en: m<-matrix(c(1,2,3,4,5,6), nrow=2, ncol=3,byrow=TRUE,dimnames=list(c('Obs1',
    'Obs2'), c('col1', 'Col2','Col3')))
  prefs: []
  type: TYPE_NORMAL
- en: m
  prefs: []
  type: TYPE_NORMAL
- en: col1 Col2 Col3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Obs1    1    2    3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Obs2    4    5    6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE51]'
  prefs: []
  type: TYPE_PRE
- en: rbind(1:3,4:6,10:12)
  prefs: []
  type: TYPE_NORMAL
- en: '[,1] [,2] [,3]'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[1,]    1    2    3'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[2,]    4    5    6'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[3,]   10   11   12'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: cbind(1:3,4:6,10:12)
  prefs: []
  type: TYPE_NORMAL
- en: '[,1] [,2] [,3]'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[1,]    1    4   10'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[2,]    2    5   11'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[3,]    3    6   12'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: m<-array(c(1,2,3,4,5,6), dim=c(2,3))
  prefs: []
  type: TYPE_NORMAL
- en: m
  prefs: []
  type: TYPE_NORMAL
- en: '[,1] [,2] [,3]'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[1,]    1    3    5'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[2,]    2    4    6'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE52]'
  prefs: []
  type: TYPE_PRE
- en: m<-array(c(1,2,3,4,5,6), dim=c(2,3))
  prefs: []
  type: TYPE_NORMAL
- en: m
  prefs: []
  type: TYPE_NORMAL
- en: '[,1] [,2] [,3]'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[1,] 1 3 5'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[2,] 2 4 6'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: m[1,2]
  prefs: []
  type: TYPE_NORMAL
- en: '[1] 3'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE53]'
  prefs: []
  type: TYPE_PRE
- en: m[2,2]
  prefs: []
  type: TYPE_NORMAL
- en: '[1] 4'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE54]'
  prefs: []
  type: TYPE_PRE
- en: m[2,]
  prefs: []
  type: TYPE_NORMAL
- en: '[1] 2 4 6'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE55]'
  prefs: []
  type: TYPE_PRE
- en: m[,1]
  prefs: []
  type: TYPE_NORMAL
- en: '[1] 1 2'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE56]'
  prefs: []
  type: TYPE_PRE
- en: m<-matrix(c(1,2,3,4,5,6,7,8,9), nrow=3, ncol=3)
  prefs: []
  type: TYPE_NORMAL
- en: m
  prefs: []
  type: TYPE_NORMAL
- en: '[,1] [,2] [,3]'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[1,]    1    4    7'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[2,]    2    5    8'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[3,]    3    6    9'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: diag(m)
  prefs: []
  type: TYPE_NORMAL
- en: '[1] 1 5 9'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE57]'
  prefs: []
  type: TYPE_PRE
- en: dim(m)
  prefs: []
  type: TYPE_NORMAL
- en: '[1] 3 3'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE58]'
  prefs: []
  type: TYPE_PRE
- en: colSums(m)
  prefs: []
  type: TYPE_NORMAL
- en: '[1]  6 15 24'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE59]'
  prefs: []
  type: TYPE_PRE
- en: rowSums(m)
  prefs: []
  type: TYPE_NORMAL
- en: '## [1] 12 15 18'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE60]'
  prefs: []
  type: TYPE_PRE
- en: t(m)
  prefs: []
  type: TYPE_NORMAL
- en: '[,1] [,2] [,3]'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[1,]    1    2    3'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[2,]    4    5    6'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[3,]    7    8    9'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE61]'
  prefs: []
  type: TYPE_PRE
- en: det(m)
  prefs: []
  type: TYPE_NORMAL
- en: '[1] 0'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE62]'
  prefs: []
  type: TYPE_PRE
- en: eigen(m)
  prefs: []
  type: TYPE_NORMAL
- en: eigen() decomposition
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: $values
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[1]  1.611684e+01 -1.116844e+00 -5.700691e-16'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '##'
  prefs: []
  type: TYPE_NORMAL
- en: $vectors
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[,1]       [,2]       [,3]'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[1,] -0.4645473 -0.8829060  0.4082483'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[2,] -0.5707955 -0.2395204 -0.8164966'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[3,] -0.6770438  0.4038651  0.4082483'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE63]'
  prefs: []
  type: TYPE_PRE
- en: x<- list(1:4,"book",TRUE, 1+4i)
  prefs: []
  type: TYPE_NORMAL
- en: x
  prefs: []
  type: TYPE_NORMAL
- en: '[[1]]'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[1] 1 2 3 4'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '##'
  prefs: []
  type: TYPE_NORMAL
- en: '[[2]]'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[1] "book"'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '##'
  prefs: []
  type: TYPE_NORMAL
- en: '[[3]]'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[1] TRUE'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '##'
  prefs: []
  type: TYPE_NORMAL
- en: '[[4]]'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[1] 1+4i'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE64]'
  prefs: []
  type: TYPE_PRE
- en: x[[1]]
  prefs: []
  type: TYPE_NORMAL
- en: '[1] 1 2 3 4'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE65]'
  prefs: []
  type: TYPE_PRE
- en: x[[1]][2:4]
  prefs: []
  type: TYPE_NORMAL
- en: '[1] 2 3 4'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE66]'
  prefs: []
  type: TYPE_PRE
- en: a <- c(1, 3, 5)
  prefs: []
  type: TYPE_NORMAL
- en: b <- c("red", "yellow", "blue")
  prefs: []
  type: TYPE_NORMAL
- en: c <- c(TRUE, FALSE, TRUE)
  prefs: []
  type: TYPE_NORMAL
- en: df <- data.frame(a, b, c)
  prefs: []
  type: TYPE_NORMAL
- en: df
  prefs: []
  type: TYPE_NORMAL
- en: a      b     c
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 1    red  TRUE
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 3 yellow FALSE
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 5   blue  TRUE
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE67]'
  prefs: []
  type: TYPE_PRE
- en: df[2,1]
  prefs: []
  type: TYPE_NORMAL
- en: '[1] 3'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE68]'
  prefs: []
  type: TYPE_PRE
- en: df[,"a"]
  prefs: []
  type: TYPE_NORMAL
- en: '[1] 1 3 5'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE69]'
  prefs: []
  type: TYPE_PRE
- en: data(iris)
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE70]'
  prefs: []
  type: TYPE_PRE
- en: ncol(iris)
  prefs: []
  type: TYPE_NORMAL
- en: '[1] 5'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE71]'
  prefs: []
  type: TYPE_PRE
- en: nrow(iris)
  prefs: []
  type: TYPE_NORMAL
- en: '[1] 150'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE72]'
  prefs: []
  type: TYPE_PRE
- en: head(iris,10)
  prefs: []
  type: TYPE_NORMAL
- en: Sepal.Length Sepal.Width Petal.Length Petal.Width Species
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 1           5.1         3.5          1.4         0.2  setosa
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 2           4.9         3.0          1.4         0.2  setosa
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 3           4.7         3.2          1.3         0.2  setosa
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 4           4.6         3.1          1.5         0.2  setosa
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 5           5.0         3.6          1.4         0.2  setosa
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 6           5.4         3.9          1.7         0.4  setosa
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 7           4.6         3.4          1.4         0.3  setosa
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 8           5.0         3.4          1.5         0.2  setosa
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 9           4.4         2.9          1.4         0.2  setosa
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 10          4.9         3.1          1.5         0.1  setosa
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE73]'
  prefs: []
  type: TYPE_PRE
- en: tail(iris,5)
  prefs: []
  type: TYPE_NORMAL
- en: Sepal.Length Sepal.Width Petal.Length Petal.Width   Species
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 146          6.7         3.0          5.2         2.3 virginica
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 147          6.3         2.5          5.0         1.9 virginica
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 148          6.5         3.0          5.2         2.0 virginica
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 149          6.2         3.4          5.4         2.3 virginica
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 150          5.9         3.0          5.1         1.8 virginica
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE74]'
  prefs: []
  type: TYPE_PRE
- en: str(iris)
  prefs: []
  type: TYPE_NORMAL
- en: '''data.frame'':    150 obs. of  5 variables:'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '$ Sepal.Length: num  5.1 4.9 4.7 4.6 5 5.4 4.6 5 4.4 4.9 ...'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '$ Sepal.Width : num  3.5 3 3.2 3.1 3.6 3.9 3.4 3.4 2.9 3.1 ...'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '$ Petal.Length: num  1.4 1.4 1.3 1.5 1.4 1.7 1.4 1.5 1.4 1.5 ...'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '$ Petal.Width : num  0.2 0.2 0.2 0.2 0.2 0.4 0.3 0.2 0.2 0.1 ...'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '$ Species     : Factor w/ 3 levels "setosa","versicolor",..: 1 1 1 1 1 1 1
    1 1 1 ...'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE75]'
  prefs: []
  type: TYPE_PRE
- en: install.packages("foreign")
  prefs: []
  type: TYPE_NORMAL
- en: library(foreign)
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE76]'
  prefs: []
  type: TYPE_PRE
- en: install.packages("Hmisc")
  prefs: []
  type: TYPE_NORMAL
- en: library(Hmisc)
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE77]'
  prefs: []
  type: TYPE_PRE
- en: mydata<-read.table("c:/mydata.csv", header=TRUE,sep=",", row.names="id")
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE78]'
  prefs: []
  type: TYPE_PRE
- en: library(xlsx)
  prefs: []
  type: TYPE_NORMAL
- en: mydata<-read.xlsx("c:/myexcel.xlsx", 1)
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE79]'
  prefs: []
  type: TYPE_PRE
- en: mydata<-read.xlsx("c:/myexcel.xlsx", sheetName= "mysheet")
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE80]'
  prefs: []
  type: TYPE_PRE
- en: library(foreign)
  prefs: []
  type: TYPE_NORMAL
- en: mydata<-read.systat("c:/mydata.dta")
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE81]'
  prefs: []
  type: TYPE_PRE
- en: getfile=’c:/mydata.sav’ exportoutfile=’c:/mydata.por’
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE82]'
  prefs: []
  type: TYPE_PRE
- en: library(Hmisc)
  prefs: []
  type: TYPE_NORMAL
- en: mydata<-spss.get("c:/mydata.por", use.value.labels=TRUE)
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE83]'
  prefs: []
  type: TYPE_PRE
- en: libname out xport ‘c:/mydata.xpt’; data out.mydata; set sasuser.mydata; run;
  prefs: []
  type: TYPE_NORMAL
- en: library(Hmisc)
  prefs: []
  type: TYPE_NORMAL
- en: mydata<-sasxport.get("c:/mydata.xpt")
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE84]'
  prefs: []
  type: TYPE_PRE
- en: library(foreign)
  prefs: []
  type: TYPE_NORMAL
- en: mydata<-read.dta("c:/mydata.dta")
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE85]'
  prefs: []
  type: TYPE_PRE
- en: write.table(mydata, "c:/mydata.txt", sep="\t")
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE86]'
  prefs: []
  type: TYPE_PRE
- en: library(xlsx)
  prefs: []
  type: TYPE_NORMAL
- en: write.xlsx(mydata, "c:/mydata.xlsx")
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE87]'
  prefs: []
  type: TYPE_PRE
- en: library(foreign)
  prefs: []
  type: TYPE_NORMAL
- en: write.foreign(mydata, "c:/mydata.txt", "c:/mydata.sps",   package="SPSS")
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE88]'
  prefs: []
  type: TYPE_PRE
- en: library(foreign)
  prefs: []
  type: TYPE_NORMAL
- en: write.foreign(mydata, "c:/mydata.txt", "c:/mydata.sas",   package="SAS")
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE89]'
  prefs: []
  type: TYPE_PRE
- en: library(foreign)
  prefs: []
  type: TYPE_NORMAL
- en: write.dta(mydata, "c:/mydata.dta")
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE90]'
  prefs: []
  type: TYPE_PRE
- en: myfunction <- function(arg1, arg2, … )
  prefs: []
  type: TYPE_NORMAL
- en: '{'
  prefs: []
  type: TYPE_NORMAL
- en: statements
  prefs: []
  type: TYPE_NORMAL
- en: return(object)
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE91]'
  prefs: []
  type: TYPE_PRE
- en: squaredNum<-function(number)
  prefs: []
  type: TYPE_NORMAL
- en: '{'
  prefs: []
  type: TYPE_NORMAL
- en: a<-number^2
  prefs: []
  type: TYPE_NORMAL
- en: return(a)
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE92]'
  prefs: []
  type: TYPE_PRE
- en: squaredNum(425)
  prefs: []
  type: TYPE_NORMAL
- en: '## [1] 180625'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE93]'
  prefs: []
  type: TYPE_PRE
- en: x<-4
  prefs: []
  type: TYPE_NORMAL
- en: y<-3
  prefs: []
  type: TYPE_NORMAL
- en: if (x >3) {
  prefs: []
  type: TYPE_NORMAL
- en: y <- 10
  prefs: []
  type: TYPE_NORMAL
- en: '} else {'
  prefs: []
  type: TYPE_NORMAL
- en: y<- 0
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE94]'
  prefs: []
  type: TYPE_PRE
- en: print(y)
  prefs: []
  type: TYPE_NORMAL
- en: '[1] 10'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE95]'
  prefs: []
  type: TYPE_PRE
- en: for (i in 1:10){
  prefs: []
  type: TYPE_NORMAL
- en: print(i)
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '[1] 1'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[1] 2'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[1] 3'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[1] 4'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[1] 5'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[1] 6'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[1] 7'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[1] 8'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[1] 9'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[1] 10'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE96]'
  prefs: []
  type: TYPE_PRE
- en: x<- matrix(1:6,2,3)
  prefs: []
  type: TYPE_NORMAL
- en: for (i in seq_len(nrow(x))){
  prefs: []
  type: TYPE_NORMAL
- en: for (j in seq_len(ncol(x))){
  prefs: []
  type: TYPE_NORMAL
- en: print(x[i,j])}
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '[1] 1'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[1] 3'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[1] 5'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[1] 2'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[1] 4'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[1] 6'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE97]'
  prefs: []
  type: TYPE_PRE
- en: x <- 1
  prefs: []
  type: TYPE_NORMAL
- en: while (x >= 1 & x < 20){
  prefs: []
  type: TYPE_NORMAL
- en: print(x)
  prefs: []
  type: TYPE_NORMAL
- en: x = x+1
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '[1] 1'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[1] 2'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[1] 3'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[1] 4'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[1] 5'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[1] 6'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[1] 7'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[1] 8'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[1] 9'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[1] 10'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[1] 11'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[1] 12'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[1] 13'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[1] 14'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[1] 15'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[1] 16'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[1] 17'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[1] 18'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[1] 19'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE98]'
  prefs: []
  type: TYPE_PRE
- en: x <- 1
  prefs: []
  type: TYPE_NORMAL
- en: repeat{
  prefs: []
  type: TYPE_NORMAL
- en: print(x)
  prefs: []
  type: TYPE_NORMAL
- en: x = x+1
  prefs: []
  type: TYPE_NORMAL
- en: if (x == 6){
  prefs: []
  type: TYPE_NORMAL
- en: break
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: '[1] 1'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[1] 2'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[1] 3'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[1] 4'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[1] 5'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE99]'
  prefs: []
  type: TYPE_PRE
- en: for (i in 1:15){
  prefs: []
  type: TYPE_NORMAL
- en: if (i <= 5){
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: next
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '} else { print(i)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '} }'
  prefs: []
  type: TYPE_NORMAL
- en: '[1] 6'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[1] 7'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[1] 8'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[1] 9'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[1] 10'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[1] 11'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[1] 12'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[1] 13'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[1] 14'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[1] 15'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE100]'
  prefs: []
  type: TYPE_PRE
- en: install.packages("ggplot2")
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE101]'
  prefs: []
  type: TYPE_PRE
- en: install.packages("devtools")
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE102]'
  prefs: []
  type: TYPE_PRE
- en: library(ggplot2)
  prefs: []
  type: TYPE_NORMAL
- en: '```'
  prefs: []
  type: TYPE_NORMAL
- en: The `require` function can be used to load a package. The only difference between
    `require` and `library` is that, in case the specific package is not found, `library`
    will show an error, but `require` will continue the execution of code without
    showing any error.
  prefs: []
  type: TYPE_NORMAL
- en: Necessary packages
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To run all the code that''s presented in this book, you need to install some
    of the packages we have mentioned. Specifically, you need to install the following
    packages (alphabetically ordered):'
  prefs: []
  type: TYPE_NORMAL
- en: '`Amelia`: Package for missing data visualization and imputation.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Boruta`: Implements a feature selection algorithm for finding relevant variables.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`caret`: This package (short for **classification and regression training**)
    implements several machine learning algorithms for building predictive models.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`caTools`: Contains several basic utility functions, including predictive metrics
    or functions to split samples.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`choroplethr`/`choroplethrMaps`: Creates maps in R.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`corrplot`: Calculates correlation among variables and displays them graphically.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataExplorer`: Includes different functions for data exploration process.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`dplyr`: Package for data manipulation.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`fBasics`: Includes techniques of explorative data analysis.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`funModeling`: Functions for data cleaning, importance variable analysis, and
    model performance.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`ggfortify`: Functions for data visualization tools for statistical analysis.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`ggplot2`: System for declaratively creating graphics.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`glmnet`: A package oriented toward Lasso and elastic-net regularized regression
    models.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`googleVis`: R interface to Google Charts.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`h2o`: A package that includes fast and scalable algorithms, including gradient
    boosting, random forest, and deep learning.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`h2oEnsemble`: Provides functionality to create ensembles from the base learning
    algorithms that are accessible via the `h2o` package.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Hmisc`: Contains many functions that are useful for data analysis and also
    for importing files from different formats.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`kohonen`: Facilitates the creation and visualization of self-organizing maps.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`lattice`: A package to create powerful graphs.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`lubridate`: Incorporates functions to work with dates in an easy way.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`MASS`: Contains several statistical functions.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`plotrix`: This has many plots, labeling, axis, and color scaling functions.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`plyr`: This contains tools that can split, apply, and combine data.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`randomForest`: Algorithms for random forests for classification and regression.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`rattle`: This provides a GUI for different R packages that can aid in data
    mining.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`readr`: Provides a fast and friendly way to read files from `.csv`, `.tsv`,
    or `.fwf` files.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`readtext`: Functions to import and handle plain and formatted text files.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`recipes`: Useful package for data manipulation and analysis.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`rpart`: Implements classification and regression trees.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`rpart.plot`: The easiest way to plot a tree that''s created using the `rpart`
    package.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Rtsne`: Implementation of **t-distributed Stochastic Neighbor Embedding**
    (**t-SNE**).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`RWeka`: RWeka has many algorithms for data mining and also tools that can
    pre-process and classify data. It provides an easy interface to perform operations
    like regression, clustering, association, and visualization.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`rworldmap`: Enables mapping of country-level and gridded user datasets.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`scales`: This provides methods that can automatically detect breaks, determine
    labels for axes, and legends. It does the work of mapping.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`smbinning`: A set of functions to build scoring models.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`SnowballC`: This can easily implement the very famous Porter''s word stemming
    algorithm that collapses words into root nodes and compares the vocabulary.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`sqldf`: Functions to manipulate R data frames using SQL.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`tibbletime`: Useful functions to work with time series.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`tidyquant`: A package focused on retrieving, manipulating, and scaling financial
    data analysis in the easiest way possible.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`tidyr`: Includes functions for data frame manipulations.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`tidyverse`: This is one package that contains packages for manipulating the
    data, exploring, and visualizing.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`tm`: Package for text mining in R.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`VIM`: Using this package, missing packages can be visualized.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`wbstats`: This gives you access to data and statistics from the World Bank
    API.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`WDI`: Search, extract, and format data from the World Bank''s **World Development
    Indicators** (**WDI**).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`wordcloud`: This package gives you the powerful functions that can help you
    in creating pretty word clouds. It can also help in visualizing the differences
    and similarities between two documents.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Once these packages have been installed, we can start working with all the code
    that's contained in the following chapters.
  prefs: []
  type: TYPE_NORMAL
- en: Taking further steps
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We will be using the US bankruptcy problem statement to help you understand
    machine learning processes in depth and also to give you hands-on experience in
    dealing with and solving real-world problems. All the following chapters will
    describe each step in detail.
  prefs: []
  type: TYPE_NORMAL
- en: The objective of the following chapters is to describe all the steps and alternatives
    to develop a model based on machine learning techniques.
  prefs: []
  type: TYPE_NORMAL
- en: We will see several steps, starting from the extraction of the information and
    the generation of new variables up to the validation of the model. As we will
    see, in each step of the development, some alternatives or multiple steps are
    possible. In most of the cases, the best alternative will be the one that gives
    a better predictive model, but sometimes other alternatives will be chosen owing
    to some restrictions that are imposed by the future use of the model or the kind
    of problem we want to solve.
  prefs: []
  type: TYPE_NORMAL
- en: Background on the financial crisis
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this book, we will solve two different problems related to the financial
    crisis: the bankruptcy of the US banks and the assessment of the solvency of the
    European countries. Why have I chosen such a specific problem for this book? Well,
    the first reason is my concern about the financial crisis and my aim to try to
    avoid future crises. On the other hand, it is an interesting problem because a
    high amount of data is available, making it a very appropriate problem to understand
    machine learning techniques.'
  prefs: []
  type: TYPE_NORMAL
- en: Most of the chapters in this book will cover the development of a predictive
    model to detect the failures of banks. To solve this problem, we will use a large
    dataset that collects some of the more typical problems you can find when dealing
    with different algorithms. For example, a high amount of observations and variables
    and an unbalanced sample means one of the categories in the classification model
    is much larger than the other.
  prefs: []
  type: TYPE_NORMAL
- en: 'Some of the steps we will see during the following chapters are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Data collection
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Features generation
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Descriptive analysis
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Treatment of missing information
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Univariate analysis
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Multivariate analysis
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Model selection
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The last chapter will focus on the development of models to detect economic
    imbalances in the European countries, while covering some basic text mining and
    clustering techniques.
  prefs: []
  type: TYPE_NORMAL
- en: Although this book is technical, one of the most important aspects of each big
    data and machine learning solution is understanding the problem that we need to
    solve.
  prefs: []
  type: TYPE_NORMAL
- en: By the end of this book, you will see that just knowing algorithms is not enough
    to develop models. There are many important steps that you will need to follow
    before jumping into running algorithms. If you pay attention to these preliminary
    steps, you are more likely to get good results.
  prefs: []
  type: TYPE_NORMAL
- en: In this sense, and because I'm passionate about economic theory, you can find
    a summary about the causes of the problems that we will solve in this book, from
    an economic point of view, in the repository where the code for this book is located.
    Specifically, the causes of the financial crisis and the contagion and transformation
    to a sovereign crisis are described.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this opening chapter, we established the purpose of this book. Now that
    you are clear on the basics of R and its concepts, we will move on to develop
    two main predictive models. We will cover all the necessary steps: data collection,
    data analysis, and feature selection, and different algorithms will be described
    in a practical manner.'
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will start solving programming and collect the necessary
    data to start modeling development.
  prefs: []
  type: TYPE_NORMAL
