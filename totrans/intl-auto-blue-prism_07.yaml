- en: '7'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: IA Templates and Utility – IA Object
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Mature BP development teams rarely start their development work from a blank
    Process Studio canvas. Instead, they build up their internal best practices and
    incorporate them into a library of standard templates that cover the majority
    of automation scenarios that they’ve encountered.
  prefs: []
  type: TYPE_NORMAL
- en: In my experience working with consulting teams from the Big 4, other large technology
    consultancies, directly with customers, and as a member of SS&C’s automation COE,
    most of the templates that exist are variations on BP’s **Standard Process Template**.
    This standard template is available after logging in to the BP Portal, [https://portal.blueprism.com/products/developer-jumpstart](https://portal.blueprism.com/products/developer-jumpstart).
    On this web page, you’ll find BP’s official templates and documentation on how
    to use them.
  prefs: []
  type: TYPE_NORMAL
- en: Despite the large amount of “talk” surrounding IA, I’ve yet to see any IA-specific
    templates being used by partners, customers, or even BP itself. To help bridge
    this gap, I’ve developed some templates that can be used for IA, including much
    of the design work discussed in previous chapters. The goal of this chapter is
    to go through the templates and explain how to use them to kickstart your IA development.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we’re going to discuss one Object and three Process templates:'
  prefs: []
  type: TYPE_NORMAL
- en: An IA utility Object
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A single-Process, single-Work Queue, *synchronous* review template
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A single-Process, single-Work Queue, *asynchronous* review template
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A three-Process, three-Work Queue, *asynchronous* review template
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Download and import the `.bprelease` file from [https://github.com/PacktPublishing/Intelligent-Automation-with-Blue-Prism/tree/main/ch7](https://github.com/PacktPublishing/Intelligent-Automation-with-Blue-Prism/tree/main/ch7).
    The Release contains five Processes and one Object. Verify that it matches the
    following figure:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.1 – The imported Release contents](img/B18416_07_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.1 – The imported Release contents
  prefs: []
  type: TYPE_NORMAL
- en: Let’s discuss the Object first.
  prefs: []
  type: TYPE_NORMAL
- en: Object – Utility – IA
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This Object contains helper functions to perform tasks commonly used in IA.
    Most of the Actions use **C#** Code Stages. This Object has dependencies on the
    standard **MS Excel VBO** and **Utility - Environment** Objects that come bundled
    with BP.
  prefs: []
  type: TYPE_NORMAL
- en: The Object’s Actions and their purpose with respect to IA are discussed next.
  prefs: []
  type: TYPE_NORMAL
- en: Random Integer in Range
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This generates a random integer within a range. Submit both a lower (default
    **1**) and upper (default **100**) range value. The returned random number is
    *inclusive* of the range values. This Action is primarily used for *Random Sampling*.
  prefs: []
  type: TYPE_NORMAL
- en: Random Decimal in Range
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This generates a random decimal number within a range. Submit both a lower (default
    **0**) and upper (default **1**) range value. The returned random number is *inclusive*
    of the range values. This Action is primarily used for *Random Sampling*.
  prefs: []
  type: TYPE_NORMAL
- en: Run Process Read Stdout Stderr with Timeout
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This Action requires **Utility - Environment** to be imported.
  prefs: []
  type: TYPE_NORMAL
- en: If you recall from [*Chapter 2*](B18416_02.xhtml#_idTextAnchor028), there isn’t
    a BP-provided Action that can start a Process, specify a *timeout*, and retrieve
    *Stdout* and *Stderr* as Data Items. We had to use `Utility - Environment::Run
    Process Until Ended` and specify redirection files in order to capture Stdout
    and Stderr.
  prefs: []
  type: TYPE_NORMAL
- en: This Action is a wrapper around **Run Process Until Ended**. The inputs to this
    Action are the same as for **Run Process Until Ended**. It performs file redirection
    and temporary file management logic so that Stdout and Stderr can be returned
    as Data Items. This Action should be used to trigger ML predictions from the CLI
    or PowerShell, instead of the built-in options provided by BP.
  prefs: []
  type: TYPE_NORMAL
- en: File to Base64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This Action converts a file (using the file path as an input) to Base64 format.
    This has additional error handling compared to the version that’s provided in
    `.html` files for review and can convert images and files that need to be uploaded
    to APIs. This Action works on any generic file, not just images.
  prefs: []
  type: TYPE_NORMAL
- en: Threshold Excel to Collection
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This Action converts an Excel file that contains labels and threshold values
    into a Collection. The Excel file must have two columns, with the label in column
    A, and the threshold values (numeric) in column B. The first row of the Excel
    file should be the headings for the label and threshold values, but there are
    no restrictions on what the actual heading values are.
  prefs: []
  type: TYPE_NORMAL
- en: The Output of this Action is a Collection with two fields. The first field is
    the label and the second is the threshold values. This Action requires **MS Excel
    VBO** to be imported.
  prefs: []
  type: TYPE_NORMAL
- en: In addition, using this Action will store the labels and thresholds in an internal
    dictionary that is used by the Action, **Get Threshold by Label**, which is described
    next.
  prefs: []
  type: TYPE_NORMAL
- en: Get Threshold by Label
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The purpose of this Action is to provide for a fast lookup of threshold values,
    as there could be hundreds of predicted labels. Using the **Threshold Excel to
    Collection** Action once is required before this Action can be used.
  prefs: []
  type: TYPE_NORMAL
- en: To use this Action, pass in a label to get its corresponding threshold value.
    The most common ways of finding a specific row in a Collection involve using a
    loop or `Utility - Collection Manipulation::Filter Collection`, which isn’t very
    performant when there are many rows. This Action looks up the label and retrieves
    the value from the internal dictionary, which is fast. An Exception is thrown
    if the label isn’t found.
  prefs: []
  type: TYPE_NORMAL
- en: Object Overview
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: There are six Actions in the **Utility - Intelligent Automation** Object. The
    language used in the Code Stages is C#. Remember that this Object is just a starting
    point. It can and should be extended with common features needed for your IA solutions.
    Now, let’s take a look at the three Process templates that make use of this Object.
  prefs: []
  type: TYPE_NORMAL
- en: Process templates
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*Three* Process templates have been created to cover the vast majority of different
    IA designs. All of these templates are based on BP’s standard Process template,
    so it should look familiar to most developers. I’ve made a conscious effort to
    keep the standard Process template’s logic as unchanged as possible so that developers
    can focus their development effort purely on implementing the business logic that’s
    specific to their use case.'
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: 'If you’re not familiar with BP’s standard Process template, an instruction
    manual can be found on the Portal’s Developer Jumpstart page: [https://portal.blueprism.com/system/files/2017-09/Process%20Template%201%20-%20Basic%20-%20Instructions.pdf](https://portal.blueprism.com/system/files/2017-09/Process%20Template%201%20-%20Basic%20-%20Instructions.pdf).
    It’s important to understand how to use the standard template before using the
    IA templates described in this chapter.'
  prefs: []
  type: TYPE_NORMAL
- en: Two of the templates are *single*-Process and *single*-Work Queue designs. These
    are better suited to teams who are just getting started with BP, or those with
    a limited number of available licenses. These two templates differ in whether
    HITL review should be finished in near real time (*synchronous*) or not (*asynchronous*).
    The third template has a *three*-Process, *three*-Work Queue design. Although
    the scheduling and license usage become more complex, it improves scalability,
    simplifies auditing, and facilitates the feedback of reviewed predictions back
    to the ML team.
  prefs: []
  type: TYPE_NORMAL
- en: Each template is discussed in its corresponding subsection and contains an explanation
    of its use. When looking at the templates through the Process Studio, pay attention
    to the Stages that are colored in a green font. Those are the areas that may need
    modification on your part – for instance, to add logic that’s specific to your
    use case.
  prefs: []
  type: TYPE_NORMAL
- en: Single-Process, single-Work Queue, synchronous review Process template
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This template provides a simple, single-Session solution for cases when *near-real-time*
    HITL review is needed. Let’s look at the important details of this synchronous
    review template so that you can successfully implement it in practice.
  prefs: []
  type: TYPE_NORMAL
- en: Using IA Template 1 – Synchronous Reviews
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In this section, we will go Page by Page through the template and examine what
    needs to be understood and changed so that your IA use case can be implemented.
    Pages and details that are unchanged from the standard Process template won’t
    be discussed. Remember that you need to use **Save As** to save the template into
    a new Process to use it. Don’t edit and save the template directly.
  prefs: []
  type: TYPE_NORMAL
- en: Throughout the Process diagram, you’ll see green-colored Blocks. These green
    Blocks are in the template for documentation and guidance purposes. Please delete
    the green Blocks as you go through as they can affect Exception handling.
  prefs: []
  type: TYPE_NORMAL
- en: 'Each subsection heading below refers to a Page in the Process Studio. Please
    open the corresponding Page and read through it to understand what changes you’ll
    need to make use of this template. We will be covering 10 Pages in total:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Main Page**: Here we need to understand the main work steps and add/remove
    Pages from the Work Block to fulfill your use case.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**IA Data**: This Page contains important Data Items that are used in the IA
    solution logic.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Start Up**: There are placeholder areas here to create shared data folders
    for reviews and to load threshold values from Excel if needed.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**02 ML Prediction**: On this Page, we need to create the kill switch Credential
    and amend the logic to make use of that Credential. We also need to create an
    Environment Variable for the ML Model Version so that it can be logged. Finally,
    we need to make the ML prediction and store the prediction and confidence score
    in designated Data Items.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**03 Random Sampling**: Create an Environment Variable to store the Random
    sampling percentage, and amend the logic to use that Environment Variable, if
    we want to use random sampling.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**03 Thresholding**: Keep this Page as is if you want to use thresholding and
    you’re using Excel to store the threshold levels. Otherwise, add in your thresholding
    logic here.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**04 Write Shared Review Data**: There are placeholders for you to add in the
    logic needed to create the review data.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**05 Wait for Reviewed Predictions**: Add logic to check whether a prediction
    has been reviewed. Create an Environment Variable to store the maximum number
    of seconds that the polling loop will wait. Finally, add logic to save the reviewed
    prediction into a designated Data Item.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**06 Check for Reviewer Exception**: This Page doesn’t need to be changed.
    It contains logic to throw Business Exceptions if the reviewer doesn’t think that
    the Item should be processed by automation.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**07 Work Step Using the ML Prediction**: This Page demonstrates how to get
    the reviewed prediction so that it can be used further in the Process. Add additional
    Stages here as needed.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Open the `–` **Synchronous Reviews** Group. Let’s look at the Pages in more
    depth, starting with **Main Page**.
  prefs: []
  type: TYPE_NORMAL
- en: Main Page
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '**Main Page** contains the high-level Process flow – six Stages that have been
    added to the *Work* Block, along with a *Choice* Stage to control skipping through
    IA-related Stages if an Item is retried. The following list contains the changes
    that you should make to the template or an explanation of something that’s important
    to understand:'
  prefs: []
  type: TYPE_NORMAL
- en: Locate the *Work* Block. Replace the `03 Random Sampling` Page with the `03
    Thresholding` Page in the *Work* Block if you want to use a thresholding scheme
    to determine whether a prediction needs human review. The Page that’s unneeded
    should be deleted.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Double-click on the **Check Status** Choice Stage to the left of the *Work*
    Block. See that there are checks against three Data Items that contain Statuses.
    These are used in the IA solution logic to skip Stages if they’re already complete.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Look at the IA-related work steps Pages: `02 ML Prediction`, `04 Write Shared
    Review Data`, `05 Wait for Reviewed Predictions`, and `06 Check for Reviewer Exception`.
    These Stages should be left as-is as they’re important to the IA solution logic.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Add more Pages between `01 Work Step` and `02 ML Prediction`, to add in business
    logic.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Add more Pages after the `07 Work Step Using the ML Prediction` Page, to add
    in business logic.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Update the value of the **Queue Name** Data Item.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 7.2 – The Work Block on the Main Page of the Synchronous Review template](img/B18416_07_02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.2 – The Work Block on the Main Page of the Synchronous Review template
  prefs: []
  type: TYPE_NORMAL
- en: IA Data
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'This Page contains Data Items important to the IA logic. Nothing here needs
    changing, although the Initial Values can be changed for style reasons. The following
    list explains the Data Items and how they’re used in the IA template logic:'
  prefs: []
  type: TYPE_NORMAL
- en: Look at the Block named *IA Session Control*. The three Session Variables described
    in [*Chapter 6*](B18416_06.xhtml#_idTextAnchor093) are present. These Session
    Variables give the controller more flexibility in managing live IA operations.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Look at the **Manual Review Required Flag** Data Item. This stores whether an
    HITL review is needed for the current Item.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Find the Block named *Global [Item Data] Field Names*. This Block contains five
    Data Items. The values stored in these Data Items are *Field Names* that will
    be added to the current `Prediction`. This means that **Item Data.Prediction**
    will be created somewhere during the Session run. It’s safe to change the Initial
    Values, as “dot notation” isn’t used to access these Collection Fields.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Look at the *Global ML Statuses* Block. It contains three Data Items, storing
    Status text. These Statuses are used to skip steps on the **Main Page**, and to
    simplify management in the Control Room.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Look at the `BE`. This Data Item provides reviewers with a way to forcibly throw
    a `BE`, and the template will mark that Item as a Business Exception once it’s
    picked up for work.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 7.3 – The IA Page of the Synchronous Reviews template](img/B18416_07_03.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.3 – The IA Page of the Synchronous Reviews template
  prefs: []
  type: TYPE_NORMAL
- en: Start Up
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'Two placeholders in green Blocks have been added to the bottom of this Page.
    IA logic can be added there. The following list contains the changes that you
    should make to the template or an explanation of something that’s important to
    understand:'
  prefs: []
  type: TYPE_NORMAL
- en: Find the green Block named *Created Shared Data Folders* near the bottom of
    the Page. Stages should be added here to add logic related to the creation of
    shared folders for HITL review.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Delete the *Created Shared Data Folders* Block if it’s not used for Exception
    handling.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Find the green Block named *Load Threshold Data*. This is intended for loading
    the Threshold data. If it’s an Excel file, the **Utility - Intelligent Automation::Threshold
    Excel to Collection** Action can be used.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Delete the *Load Threshold Data* Block if it’s not used in Exception handling.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 7.4 – The bottom of the Start Up Page of the Synchronous Reviews template](img/B18416_07_04.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.4 – The bottom of the Start Up Page of the Synchronous Reviews template
  prefs: []
  type: TYPE_NORMAL
- en: 02 ML Prediction
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'This Page is where the actual ML prediction steps, such as calling an API Web
    Service or CLI program, should occur. The following list contains the changes
    that you should make to the template or an explanation of something that’s important
    to understand:'
  prefs: []
  type: TYPE_NORMAL
- en: See that there’s a Block named *Kill Switch* after *Start*. To use this kill
    switch, create a Credential from the **System** | **Security** | **Credentials**
    area of BP. Ensure that the Permissions of the Credential are properly set.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Create a new Environment Variable from **System** | **Processes** | **Environment
    Variables** with the name of the Credential from *step 1* as its Value.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Change the **Kill Switch Credential Name** Data Item’s **Exposure** to **Environment**
    and select the Environment Variable that was created in *step 2*. This causes
    the Data Item to be renamed.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Change the `Get Kill Switch Credential` Action to use the name of the Data Item
    from *step 3*.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 7.5 – The Kill Switch Block on the 02 ML Prediction Page of the Synchronous
    Reviews template](img/B18416_07_05.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.5 – The Kill Switch Block on the 02 ML Prediction Page of the Synchronous
    Reviews template
  prefs: []
  type: TYPE_NORMAL
- en: Find the Stage named *Log [Model Version]* in the orange-colored Block named
    *Predict*. Its purpose is to log which version of the ML model is being used to
    make a prediction. Create an Environment Variable from `Text` or `DateTime` model
    version as its Value.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Change the **Model Version** Data Item’s **Exposure** to **Environment**, and
    select the Environment Variable that was created in *step 5*. This causes the
    Data Item to be renamed.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Change the *Log [Model Version]* Stage to use the Environment Variable Data
    Item in *step 6*. Ensure that the **Stage logging** is set to **Enabled**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Find the placeholder *Note* in the orange-colored Block named *Predict*. Replace
    this with the actual logic that’s needed to obtain a prediction.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 7.6 – The Predict Block on the 02 ML Prediction Page of the Synchronous
    Reviews template](img/B18416_07_06.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.6 – The Predict Block on the 02 ML Prediction Page of the Synchronous
    Reviews template
  prefs: []
  type: TYPE_NORMAL
- en: Edit the `Multi Calc` Stage named *Set [Prediction] and [Confidence Score]*
    in the green Block named *Store Prediction Result*. Change it so that the actual
    prediction is saved into the **Prediction** Data Item and the confidence score
    is saved into the **Confidence Score** Data Item.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Delete the *Store Prediction Result* Block if it’s not used for Exception handling.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 7.7 – The Store Prediction Result Block on the 02 ML Prediction Page
    of the Synchronous Reviews template](img/B18416_07_07.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.7 – The Store Prediction Result Block on the 02 ML Prediction Page
    of the Synchronous Reviews template
  prefs: []
  type: TYPE_NORMAL
- en: Find the green Block named *Optional New ML Model Evaluation* connected to *End*.
    You can link a Process here that will call a secondary ML model for evaluation
    purposes. A description of how to integrate this can be found in [*Chapter 6*](B18416_06.xhtml#_idTextAnchor093),
    *Example 4*. Delete the Note and green Block if they aren’t needed.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 7.8 – The Optional New ML Model Evaluation Block on the 02 ML Prediction
    Page of the Synchronous Reviews template](img/B18416_07_08.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.8 – The Optional New ML Model Evaluation Block on the 02 ML Prediction
    Page of the Synchronous Reviews template
  prefs: []
  type: TYPE_NORMAL
- en: 03 Random Sampling
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'This Page contains the random sampling logic that determines whether a prediction
    needs HITL review. This can be swapped out on **Main Page** for **03 Thresholding**
    or replaced completely with custom logic. The following list contains the changes
    that you should make to the template or an explanation of something that’s important
    to understand:'
  prefs: []
  type: TYPE_NORMAL
- en: Create a new Environment Variable from **System** | **Processes** | **Environment
    Variables** with the sampling rate as its Value. It’s recommended to use a decimal
    value between 1 and 100.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Change the **Random Sampling Rate** Data Item **Exposure** to **Environment**
    and select the Environment Variable created in *step 1*. This causes the Data
    Item to be renamed.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Change the *Require Manual Review?* Decision Stage Expression to use the Data
    Item that was renamed in *step 2*.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 7.9 – The 03 Random Sampling Page of the Synchronous Reviews template](img/B18416_07_09.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.9 – The 03 Random Sampling Page of the Synchronous Reviews template
  prefs: []
  type: TYPE_NORMAL
- en: 03 Thresholding
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: This Page contains the thresholding logic to determine whether a prediction
    needs human review. If you want to use **Thresholding**, delete the **03 Random
    Sampling** Page from **Main Page**, and replace it with this one. The logic needed
    to load the thresholds into a Collection should have been executed on the **Start
    Up** Page. Changes to this Page are only needed if you don’t want to use the threshold
    Actions available from the **Utility - Intelligent** **Automation** Object.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.10 – The 03 Thresholding Page of the Synchronous Reviews template](img/B18416_07_10.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.10 – The 03 Thresholding Page of the Synchronous Reviews template
  prefs: []
  type: TYPE_NORMAL
- en: 04 Write Shared Review Data
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'This Page should be changed to contain the steps needed to create the shared
    data needed for reviewers, whether it be uploading data to a website, to an FTP,
    or to shared folders. There are two green Blocks that need to be populated with
    your custom logic. The following list contains the changes that you should make
    to the template or an explanation of something that’s important to understand:'
  prefs: []
  type: TYPE_NORMAL
- en: Find the green Block named *Data Creation Logic* and insert the logic needed
    to persist the shared data needed by the reviewer. Whatever method is used needs
    some way of being connected back to **Item ID** in the Work Queue. For example,
    the **Item ID** could be a part of the filename, database record, or field uploaded
    into an API. Alternatively, you could store a unique identifier of your shared
    location in **Item Data** so that it can be checked later. Be aware that including
    the original prediction and confidence score as part of the review data might
    bias the reviewer.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Delete the *Data Creation Logic* Block if it’s not used for Exception handling.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 7.11 – The Data Creation Logic Block on the 04 Write Shared Review
    Data Page of the Synchronous Reviews template](img/B18416_07_11.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.11 – The Data Creation Logic Block on the 04 Write Shared Review Data
    Page of the Synchronous Reviews template
  prefs: []
  type: TYPE_NORMAL
- en: Find the green Block named *Check for Real Presence of Shared Data* and insert
    the logic that checks whether the shared data has been successfully persisted.
    For example, you could check to see whether files exist in their correct location.
    This should result in setting the `True` or `False`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Delete the *Check for Real Presence of Shared Data* Block if it’s not used for
    Exception handling.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 7.12 – The Check for Real Presence of Shared Data Block on the 04
    Write Shared Review Data Page of the Synchronous Reviews template](img/B18416_07_12.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.12 – The Check for Real Presence of Shared Data Block on the 04 Write
    Shared Review Data Page of the Synchronous Reviews template
  prefs: []
  type: TYPE_NORMAL
- en: Find the Note right before **Work Queues::Set Data**, near to **End**. Replace
    this Note with logic to add fields that uniquely identify your created data in
    **Item Data**. This could be a database key, a URL, or a file path. This should
    be used to simplify the logic needed in *step 3*, to verify whether the shared
    data exists at the source.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 7.13 – The Note before End of the Synchronous Reviews template](img/B18416_07_13.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.13 – The Note before End of the Synchronous Reviews template
  prefs: []
  type: TYPE_NORMAL
- en: 05 Wait for Reviewed Predictions
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'For *synchronous* reviews, we want to poll and wait for the review to come
    in before proceeding to the next Queue Item. This Page contains the logic to check
    for completed reviews, and the logic to read completed reviews back into BP. Note
    that a new Exception Type, **Reviewer Timeout**, is introduced here. This new
    Exception prevents Session terminations that are a part of the base BP Process
    Template’s Exception-handling logic. We need to use something that’s not a *System
    Exception* because three consecutive *System Exceptions* terminate the Session,
    based on the logic in the **Mark Item As Exception** Page. The following list
    contains the changes that you should make to the template or an explanation of
    something that’s important to understand:'
  prefs: []
  type: TYPE_NORMAL
- en: Replace the Note inside the *Polling Loop* Block with logic to check for a completed
    review. This likely involves checking for the current Item’s **Item ID**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Change the *Review Complete?* Decision Stage with an Expression that indicates
    whether the review for this Item is complete.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Create a new Environment Variable from `Number`) allowed for HITL review.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Change the **Max Timeout Seconds** Data Item’s **Exposure** to **Environment**,
    and select the Environment Variable that was created in *step 3*. This will rename
    the **Max Timeout Seconds** Data Item.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Change the *Continue Checking?* Decision Stage to make use of the renamed Data
    Item from *step 4*.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Notice that the new Exception Type, *Reviewer Timeout*, is thrown if the Environment
    Variable timeout wait period is surpassed.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 7.14 – The Polling Loop Block on the 05 Wait for Reviewed Predictions
    Page of the Synchronous Reviews template](img/B18416_07_14.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.14 – The Polling Loop Block on the 05 Wait for Reviewed Predictions
    Page of the Synchronous Reviews template
  prefs: []
  type: TYPE_NORMAL
- en: Find the *Note* in the green Block named *Store Reviewed Prediction in [Item
    Data]* and add the logic needed to read the reviewed prediction back into BP.
    This could be reading a text file, a database record, text from a web page, and
    so on.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Change the *Set [Reviewed Prediction] and [Review Justification]* Multi Calculation
    Stage so that the reviewed prediction value and the reasoning behind the corrected
    review are saved into their respective Data Items, **Reviewed Prediction** and
    **Review Justification**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Delete the *Store Reviewed Prediction in [Item Data]* Block if it’s not used
    for Exception handling.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 7.15 – The Store Reviewed Prediction in [Item Data] Block on the 05
    Wait for Reviewed Predictions Page of the Synchronous Reviews template](img/B18416_07_15.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.15 – The Store Reviewed Prediction in [Item Data] Block on the 05 Wait
    for Reviewed Predictions Page of the Synchronous Reviews template
  prefs: []
  type: TYPE_NORMAL
- en: 06 Check for Reviewer Exception
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: This Page checks to see whether the reviewer wants this Item to be marked as
    a *Business Exception*. It checks to see whether the reviewed label is equal to
    `BE`, which is defined on the `IA Data` Page. If `BE` (or whatever the label has
    been changed to) is detected, a *Business Exception* is thrown. This Page doesn’t
    require any changes.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.16 – The 06 Check for Reviewer Exception Page of the Synchronous
    Reviews template](img/B18416_07_16.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.16 – The 06 Check for Reviewer Exception Page of the Synchronous Reviews
    template
  prefs: []
  type: TYPE_NORMAL
- en: 07 Work Step Using the ML Prediction
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: This Page demonstrates how to get the most up-to-date prediction so that it
    can be used later on during the Session. First, check to see whether a reviewed
    prediction exists. If yes, use that as the predicted value. If no, use the original
    prediction. Logging is explicitly set on these Stages so that we can trace whether
    this Item is using a reviewed versus a non-reviewed prediction for processing.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.17 – Getting the final prediction on the 06 Work Step Using the
    ML Prediction Page of the Synchronous Reviews template](img/B18416_07_17.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.17 – Getting the final prediction on the 06 Work Step Using the ML
    Prediction Page of the Synchronous Reviews template
  prefs: []
  type: TYPE_NORMAL
- en: 'We’ve finished looking at the first template, which is for synchronous, or
    near-real-time reviews. As a high-level summary, developers will need to provide
    logic for the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Making the calls that generate the prediction and confidence score
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating shared data for reviewers to see
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Checking whether the shared data actually exists
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Checking whether human review has been completed
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reading the human-reviewed prediction back into BP
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: This is all logic that’s specific to your scenario. All of the generic IA solution
    logic is handled by the template. Next, let’s look at the single-Process, single-Work
    Queue *asynchronous* Process template. There will be many similarities in that
    template to this one.
  prefs: []
  type: TYPE_NORMAL
- en: Single-Process, single-Work Queue, asynchronous review Process template
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This template provides a *single*-Session solution for cases where we don’t
    want to stop and wait for HITL review. Let’s look at the details of this *asynchronous*
    review template so that you can successfully implement it in practice.
  prefs: []
  type: TYPE_NORMAL
- en: Using IA Template 2 – Asynchronous Reviews
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In this section, we will go Page by Page and examine what needs to be understood
    and changed so that your IA use case can be implemented. Pages and details that
    are inherited from the standard Process template won’t be discussed. There’s a
    lot of overlap between this template and the previous one, so you’ll see a lot
    of repeated content. I’ve decided to leave this repeated content in to serve as
    a complete reference on how to use the template.
  prefs: []
  type: TYPE_NORMAL
- en: 'Each of the following subsection headings refers to a Page in the Process Studio.
    Please open the corresponding Page and read through it to understand what changes
    you’ll need to make use of this template. We will go through 11 Pages in total:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Main Page**: Here we need to understand the main work steps and add/remove
    Pages from the Work Block to fulfill your use case.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**IA Data**: This Page contains important Data Items that are used in the IA
    solution logic.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Start Up**: There are placeholder areas here to create shared data folders
    for reviews and to load threshold values from Excel if needed.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**02 ML Prediction**: On this Page, we need to create the kill switch Credential
    and amend the logic to make use of that Credential. We also need to create an
    Environment Variable for the ML Model Version so that it can be logged. Finally,
    we need to make the ML prediction and store the prediction and confidence score
    in designated Data Items.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**03 Random Sampling**: If we want to use random sampling to determine whether
    a prediction needs review, we should create an Environment Variable to store the
    random sampling percentage and amend the logic to use that Environment Variable.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**03 Thresholding**: If we want to use thresholding, and we’re using Excel
    to store the thresholds, we can keep this Page as is. Otherwise, you’ll need to
    add your logic here.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**04 Write Shared Review Data**: There are placeholders for you to add in the
    logic needed to create the review data.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**05 Check for Reviewer Exception**: This Page doesn’t need to be changed.
    It contains logic to throw Business Exceptions if the reviewer doesn’t think that
    the Item should be processed by automation.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**06 Work Step Using the ML Prediction**: This Page demonstrates how to get
    the reviewed prediction so that it can be used further in the Process. Add additional
    Stages here as needed.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Defer Item for Manual Review**: This Page prevents Items that need review
    from getting picked up too early by **Get Next Item**. Item deferrals are needed
    to prevent the Session run from entering an infinite loop.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Check for Reviewed Predictions**: Add logic to loop through all Items that
    are pending review to see whether they’ve been reviewed. You also need to add
    logic to save reviewed predictions in designated Data Items.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Open the **Asynchronous Reviews** Process in the **Ch7 | IA Template 2 – Asynchronous
    Reviews** Group to get started. Throughout the Process diagram, you’ll see green
    Blocks. These green Blocks are in the template for documentation and guidance
    purposes. Please delete the green Blocks as you go through as they potentially
    impact Exception handling.
  prefs: []
  type: TYPE_NORMAL
- en: Main Page
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '**Main Page** contains the high-level Process flow. Four Stages have been added
    to the *Work* Block, along with a Choice Stage to control skipping through IA-related
    Stages if an Item is retried. The following list contains the changes that you
    should make to the template or an explanation of something that’s important to
    understand:'
  prefs: []
  type: TYPE_NORMAL
- en: Notice that there are calls to the `Check for Reviewed Predictions` Page prior
    to each **Get Next Item**. These checks happen outside of the *Work* Block.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 7.18 – Checking for reviewed predictions before Get Next Item on the
    Main Page of the Asynchronous Reviews template](img/B18416_07_18.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.18 – Checking for reviewed predictions before Get Next Item on the
    Main Page of the Asynchronous Reviews template
  prefs: []
  type: TYPE_NORMAL
- en: Locate the *Work* Block and replace the `03 Random Sampling` Page with the `03
    Thresholding` Page if you want to use a thresholding scheme to determine whether
    a prediction needs human review.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Double-click on the *Check Status* Choice Stage to the left of the *Work* Block.
    See that there are three Data Items that contain Statuses that are used in the
    IA solution logic to skip Stages.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Look at where the `Defer Item for Manual Review` Page is positioned. If a manual
    review is needed for an Item, that Item is deferred. All Items are checked for
    completed review prior to **Get** **Next Item**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Add more Pages between `01 Work Step` and `02 ML Prediction`, if needed.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Add more Pages after the `06 Work Step Using the ML Prediction` Page, if needed.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Update the value of the `Queue Name` Data Item.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 7.19 – The Work Block on the Main Page of the Asynchronous Reviews
    template](img/B18416_07_19.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.19 – The Work Block on the Main Page of the Asynchronous Reviews template
  prefs: []
  type: TYPE_NORMAL
- en: IA Data
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'This Page contains Data Items important to the IA logic. Nothing here needs
    changing, although the Initial Values can be changed for style reasons. The following
    list explains the Data Items and how they’re used in the IA template logic:'
  prefs: []
  type: TYPE_NORMAL
- en: Look at the Block named *IA Session Control*. The three Session Variables described
    in [*Chapter 6*](B18416_06.xhtml#_idTextAnchor093) are present. These Session
    Variables give the Controller more flexibility in managing live IA operations.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Look at the `Flag` Data Item. This stores whether an HITL review is needed for
    the current Item.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Find the Block named *Global [Item Data] Field Names*. This Block contains five
    Data Items. The values stored in these Data Items are *Field Names* that will
    be added to the current **Item Data**. For example, **Prediction Item Data Field
    Name** has the Initial Value of **Prediction**. This means that **Item Data.Prediction**
    will be created somewhere during the Session run. It’s safe to change the Initial
    Values, as “dot notation” isn’t used to access the Collection Fields.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Look at the *Global ML Statuses* Block. It contains three Data Items, storing
    Status text. These Statuses are used to skip Pages on `Main Page`, and to simplify
    management in the Control Room.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Look at the **Throw Exception Review Text** Data Item. Its Initial Value is
    set to **BE**. This Data Item provides reviewers with a way to forcibly throw
    a **B**usiness **E**xception for a prediction that they are reviewing. Reviewers
    need to set the “reviewed prediction” label to **BE**, and the template will mark
    that Item as a Business Exception once it’s picked up for work.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Start Up
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'There are two placeholders in green Blocks at the bottom of the `Start Up`
    Page. The following list contains the changes that you should make to the template
    or an explanation of something that’s important to understand:'
  prefs: []
  type: TYPE_NORMAL
- en: Find the green Block named *Created Shared Data Folders* near the bottom of
    the Page. This is meant to house logic related to the creation of shared folders
    for HITL review.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Delete the *Created Shared Data Folders* Block if it’s not used for Exception
    handling.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Find the green Block named *Load Threshold Data*. This is intended for loading
    the Threshold data. If it’s an Excel file, the **Utility - Intelligent Automation::Threshold
    Excel to Collection** Action can be used.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Delete the *Load Threshold Data* Block if it’s not used for Exception handling.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 02 ML Prediction
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'This Page is where the actual ML prediction steps, such as calling an API Web
    Service or CLI program, should occur. The following list contains the changes
    that you should make to the template or an explanation of something that’s important
    to understand:'
  prefs: []
  type: TYPE_NORMAL
- en: See that there’s a *Kill Switch* Block after *Start*. To use this kill switch,
    create a Credential from the **System** | **Security** | **Credentials** area
    of BP. Set the appropriate permissions on the Credential.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Create a new Environment Variable from **System** | **Processes** | **Environment
    Variables** with the name of the Credential from *step 1* as its Value.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Change the **Kill Switch Credential Name** Data Item’s **Exposure** to **Environment**
    and select the Environment Variable that was created in *step 2*. This causes
    the Data Item to be renamed.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Change the **Get Kill Switch Credential** Action to use the name of the Data
    Item from *step 3*.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Find the Stage named *Log [Model Version]* in the orange-colored Block named
    *Predict*. Its purpose is to log which version of the ML model is being used to
    make a prediction. Create an Environment Variable from `Text` or `DateTime` model
    version as its Value.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Change the **Model Version** Data Item’s Exposure to **Environment**, and select
    the Environment Variable that was created in *step 5*. This causes the Data Item
    to be renamed.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Change the *Log [Model Version]* Stage to use the Environment Variable Data
    Item in *step 6*. Ensure that **Stage logging** is set to **Enabled**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Find the placeholder *Note* in the orange-colored Block named *Predict*. Replace
    this with the actual logic that’s needed to obtain a prediction.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Edit the Multi Calc Stage named *Set [Prediction] and [Confidence Score]* in
    the green Block named *Store Prediction Result*. Change it so that the actual
    prediction is saved in the **Prediction** Data Item and the confidence score is
    saved in the **Confidence Score** Data Item.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Delete the *Store Prediction Result* Block if it’s not used for Exception handling.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Find the green Block named *Optional New ML Model Evaluation* connected to *End*.
    You can Link a Process here that will call a secondary ML model for evaluation
    purposes. A description of how to integrate this can be found in [*Chapter 6*](B18416_06.xhtml#_idTextAnchor093),
    *Example 4*. Delete the *Note* and green Block it if they aren’t needed.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 03 Random Sampling
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'This Page contains the random sampling logic for determining whether a prediction
    needs HITL review. This can be swapped out on `Main Page` for `03 Thresholding`
    or replaced completely with custom logic. The following list contains the changes
    that you should make to the template or an explanation of something that’s important
    to understand:'
  prefs: []
  type: TYPE_NORMAL
- en: Create a new Environment Variable from **System** | **Processes** | **Environment
    Variables** with the sampling rate as its Value. It’s recommended to use a decimal
    value between 1 and 100.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Change the **Random Sampling Rate** Data Item **Exposure** to **Environment**
    and select the Environment Variable created in *step 1*. This Data Item will be
    renamed.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Change the *Require Manual Review?* Decision Stage Expression to use the Data
    Item that was renamed in *step 2*.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 03 Thresholding
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: This Page contains the thresholding logic to determine whether a prediction
    needs human review. If you want to use Thresholding, delete the `03 Random Sampling`
    Page from `Main Page`, and replace it with this one. The logic needed to load
    the thresholds into a Collection should have been executed on the `Start Up` Page.
    Changes to this Page are only needed if you don’t want to use the threshold Actions
    available from the **Utility - Intelligent** **Automation** Object.
  prefs: []
  type: TYPE_NORMAL
- en: 04 Write Shared Review Data
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'This Page should be changed to contain the steps needed to create the shared
    data needed for reviewers, whether it be uploading data to a website, to an FTP,
    to shared folders, and so on. There are two green Blocks that need to be populated
    with your custom logic. The following list contains the changes that you should
    make to the template or an explanation of something that’s important to understand:'
  prefs: []
  type: TYPE_NORMAL
- en: Find the green Block named *Data Creation Logic* and insert the logic needed
    to persist the shared data needed by the reviewer. Whatever method is used needs
    some way of being connected back to the **Item ID** in the Work Queue. For example,
    the **Item ID** could be a part of the filename, database record, or field uploaded
    into an API. Alternatively, you could store a unique identifier of your shared
    location in **Item Data** so that it can be checked later. Be aware that including
    the original prediction and confidence score as part of the review data might
    bias the reviewer.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Delete the *Data Creation Logic* Block if it’s not used for Exception handling.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Find the green Block named *Check for Real Presence of Shared Data* and insert
    the logic that checks whether the shared data has been successfully persisted.
    For example, you could check to see whether files exist in their correct location.
    This should result in setting the `True` or `False`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Delete the *Check for Real Presence of Shared Data* Block if it’s not used for
    Exception handling.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Find the *Note* right before **Work Queues::Set Data**, near to *End*. Replace
    this *Note* with logic to add fields that uniquely identify your created data
    in **Item Data**. This could be a database key, a URL, or a file path. This should
    be used to simplify the logic needed in *step 3*, to verify whether the shared
    data exists at the source.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 05 Check for Reviewer Exception
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: This Page checks to see whether the reviewer wants this Item to be marked as
    a *Business Exception*. It checks to see whether the reviewed label is equal to
    `IA Data` Page. If **BE** (or whatever the label has been changed to) is detected,
    a *Business Exception* is thrown. This Page doesn’t require any changes.
  prefs: []
  type: TYPE_NORMAL
- en: 06 Work Step Using the ML Prediction
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: This Page demonstrates how to get the most up-to-date prediction so that it
    can be used further on during the Session. First, check to see whether a reviewed
    prediction exists. If yes, use that as the predicted value. If no, use the original
    prediction. Logging is explicitly set on these Stages so that we can trace whether
    this Item is using a reviewed versus a non-reviewed prediction for processing.
  prefs: []
  type: TYPE_NORMAL
- en: Defer Item for Manual Review
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: After determining that an Item requires HITL review, the Item needs to be deferred
    so that the reviewers have enough time to take action. Change the `Deferral Time`
    Data Item to have the appropriate deferral time. Imagine that the Queue contains
    only one Item. The deferral time needs to be set high enough so that it won’t
    get picked up twice consecutively in a single Session run; otherwise, it will
    lead to an infinite loop.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.20 – The Defer Item for Manual Review Page of the Asynchronous Reviews
    template](img/B18416_07_20.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.20 – The Defer Item for Manual Review Page of the Asynchronous Reviews
    template
  prefs: []
  type: TYPE_NORMAL
- en: Check for Reviewed Predictions
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'This Page is the main difference between the synchronous and asynchronous templates.
    In this asynchronous template, this Page is called outside of the *Work* Block,
    just before **Get Next Item** is called. This allows other Items to proceed working
    while we wait for predictions to be reviewed. The next major difference is that
    we must perform checking on *all Items* that are pending review, instead of on
    the current Item. The current Item doesn’t exist, since we’re outside of the *Work*
    Block. The following list contains the changes that you should make to the template
    or an explanation of something that’s important to understand:'
  prefs: []
  type: TYPE_NORMAL
- en: Replace the *Note* that’s linked to *Start* with logic to retrieve *all* of
    the records that need to be checked for completed reviews. This could be the result
    of a database query that retrieves all Items that are pending review, or getting
    the contents of a network folder where completed reviews are expected to reside.
    The list of Items to check should be saved in the **All Items to Check for Completed**
    **Review** Collection.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 7.21 – The beginning of the Check for Reviewed Predictions Page of
    the Asynchronous Reviews template](img/B18416_07_21.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.21 – The beginning of the Check for Reviewed Predictions Page of the
    Asynchronous Reviews template
  prefs: []
  type: TYPE_NORMAL
- en: Find the Calculation Stage named *Set [Item ID to Check]* inside of the Loop.
    Change the Expression so that the ID of the Item we are checking is saved in the
    `Item ID to Check` Data Item.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 7.22 – Change the Set [Item ID to Check] Calculation Stage](img/B18416_07_22.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.22 – Change the Set [Item ID to Check] Calculation Stage
  prefs: []
  type: TYPE_NORMAL
- en: Replace the *Note* inside the Block named *Check for Completed Review* with
    logic to check whether the Item has finished being reviewed. Notice that any Exceptions
    that happen in this Block are masked in order to prevent Process terminations.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Find the Decision Stage named *Review Complete?* after the blue-colored *Check
    for Completed Review* Block. Replace the Expression with one that indicates whether
    the review for this Item is complete.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 7.23 – Determine whether the review for this item is complete](img/B18416_07_23.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.23 – Determine whether the review for this item is complete
  prefs: []
  type: TYPE_NORMAL
- en: Replace the *Note* in the green Block named *Store Reviewed Prediction in [Data]*
    with the logic needed to read the reviewed prediction back into BP. This could
    be reading a text file, a database record, text from a web page, and so on.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Change the *Set [Reviewed Prediction] and [Review Justification]* Multi Calculation
    Stage so that the reviewed prediction value and the reasoning behind the corrected
    review are saved in their respective Data Items, `Reviewed Prediction` and `Review
    Justification`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Delete the *Store Reviewed Prediction in [Data]* Block if it’s not used for
    Exception handling.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 7.24 – The Store Reviewed Prediction in [Data] Block on the Check
    for Reviewed Predictions Page of the Asynchronous Review template](img/B18416_07_24.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.24 – The Store Reviewed Prediction in [Data] Block on the Check for
    Reviewed Predictions Page of the Asynchronous Review template
  prefs: []
  type: TYPE_NORMAL
- en: We’ve finished looking at the second template. The differences between the two
    single-Process, single-Work Queue templates are highlighted in the following table.
  prefs: []
  type: TYPE_NORMAL
- en: '| **Synchronous Template** **Page Name** | **Asynchronous Template** **Page
    Name** | **Differences** |'
  prefs: []
  type: TYPE_TB
- en: '| `Main Page` | `Main Page` | The synchronous template waits for the *current*
    Item’s prediction review (if required) *inside* the *Work* Block.The asynchronous
    template checks *all* Items for reviewed predictions before each **Get Next Item**,
    *outside* of the *Work* Block. Deferrals are used. |'
  prefs: []
  type: TYPE_TB
- en: '| `IA Data` | `IA Data` | None. |'
  prefs: []
  type: TYPE_TB
- en: '| `Start Up` | `Start Up` | None. |'
  prefs: []
  type: TYPE_TB
- en: '| `02` `ML Prediction` | `02` `ML Prediction` | None. |'
  prefs: []
  type: TYPE_TB
- en: '| `03` `Random Sampling` | `03` `Random Sampling` | None. |'
  prefs: []
  type: TYPE_TB
- en: '| `03 Thresholding` | `03 Thresholding` | None. |'
  prefs: []
  type: TYPE_TB
- en: '| `04 Write Shared` `Review Data` | `04 Write Shared` `Review Data` | None.
    |'
  prefs: []
  type: TYPE_TB
- en: '| `05 Wait for` `Reviewed Predictions` | `Check for` `Reviewed Predictions`
    | The asynchronous template must loop through multiple Items. This occurs outside
    of the main *Work* Block. The synchronous version only checks for the current
    Item while inside the *Work* Block. |'
  prefs: []
  type: TYPE_TB
- en: '| `06 Check for` `Reviewer Exception` | `05 Check for` `Reviewer Exception`
    | None. Although the numbering is different, the Page logic is the same. |'
  prefs: []
  type: TYPE_TB
- en: '| `07 Work Step Using the` `ML Prediction` | `06 Work Step Using the` `ML Prediction`
    | None. Although the numbering is different, the Page logic is the same. |'
  prefs: []
  type: TYPE_TB
- en: '| N/A | `Defer Item for` `Manual Review` | Only the asynchronous template has
    this. Deferrals are used when review is needed, to prevent **Get Next Item** from
    picking the Item up too quickly and entering an infinite loop. |'
  prefs: []
  type: TYPE_TB
- en: Table 7.1 – The differences between the single-Process, single-Work Queue templates
  prefs: []
  type: TYPE_NORMAL
- en: Next, let’s look at our final template, which is separated into three BP Processes.
  prefs: []
  type: TYPE_NORMAL
- en: Three-Process, three-Work Queue, asynchronous review Process template
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Our third template is the most complex as it’s split into three Processes. The
    first Process contains the standard business logic that we’d expect from traditional
    RPA. Just prior to when an ML prediction needs to be made, data gets pushed into
    a second Work Queue, and execution on the Item in Process 1 is paused.
  prefs: []
  type: TYPE_NORMAL
- en: The second Process generates the ML prediction and determines whether HITL review
    is required. If review is required, data gets pushed into the third Work Queue.
    If not, the equivalent Item in Queue 1 is allowed to continue automated processing
    in Process 1.
  prefs: []
  type: TYPE_NORMAL
- en: The third Process creates the shared review data and checks for completed reviews.
    Once an Item is successfully reviewed, its equivalent Item in Queue 1 is allowed
    to continue automated processing in Process 1.
  prefs: []
  type: TYPE_NORMAL
- en: This overall template is asynchronous, as it’s split into three parts. This
    is the template that I would choose by default for a new IA solution, unless there
    are specific restrictions on the number of Sessions that can be used, or there
    is a need for synchronous review. Now, let’s look at each “sub-template” individually.
  prefs: []
  type: TYPE_NORMAL
- en: Using IA Template 3 – 01 – Business Logic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'This Process is very similar to the original BP Process template. Let’s look
    at the differences, Page by Page. Each of the following subsection headings refers
    to a Page in the Process Studio. Please open the corresponding Page and read through
    it to understand what changes you’ll need to make use of this template. We’ll
    be going through six Pages in the first sub-template:'
  prefs: []
  type: TYPE_NORMAL
- en: '`Main Page`: Add and remove Pages from the Work Block to fulfill your use case.
    **Get Next Item** has added Tag Filters that prevent Items waiting for ML prediction
    and ML review from being worked on.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`IA Data`: This Page contains important Data Items that are used in the IA
    solution logic.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`02 Push to Queue 2`: This Page contains the logic to add an Item into Work
    Queue 2 for ML prediction. It also tags the current Item to prevent it from being
    picked up by **Get** **Next Item**.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`03 Check for Reviewer Exception`: This Page doesn’t need to be changed. It
    contains logic to throw Business Exceptions if the reviewer doesn’t think that
    the Item should be processed by automation.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`04 Work Step Using the ML Prediction`: This Page demonstrates how to get the
    reviewed prediction so that it can be used further in the Process. Add additional
    Stages here as needed.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`Unlock Item`: This Page unlocks the current Item so that it can be picked
    up for further processing by **Get Next Item**, once its Tags are removed.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Open the `Main Page`.
  prefs: []
  type: TYPE_NORMAL
- en: Main Page
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'A major change to `Main Page` when compared to the standard Process template
    is that the **Get Next Item** Stages have *Tag Filters* set. Inside the *Work*
    Block, after our work steps, there’s a Page that pushes the current Item into
    *Work Queue 2* for ML prediction. We also have a Page that checks whether the
    reviewer wants to throw a Business Exception for this Item. Steps can be skipped
    using a Choice Stage, which checks for IA-related Item Statuses. The following
    list contains the changes that you should make to the template or an explanation
    of something that’s important to understand:'
  prefs: []
  type: TYPE_NORMAL
- en: Double-click on each **Get Next Item** Action. See that there are *Tag Filters*
    that filter out Items that are waiting for ML prediction or manual review.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: See that there’s a `02 Push to Queue 2` Page inside the *Work* Block that links
    to the `Unlock Item` Page. After the current Item is pushed to *Queue 2* for ML
    prediction, it’s tagged and put back into the Queue. The Tag prevents it from
    being picked up by **Get Next Item** until the ML prediction is complete.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Locate the `03 Check for Reviewer Exception` Page. This Page checks to see whether
    the reviewer wants to throw a Business Exception.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Double-click on the *Check Status* Choice Stage to the left of the *Work* Block.
    See that we can skip executing Pages based on the Status of the Item.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Change the values of the Data Items that contain the Queue Names **Queue Name**
    and **Queue** **Name 2**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Add more Pages between `01 Work Step` and `02 ML Prediction`, if needed.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Add more Pages after `04 Work Step Using the ML Prediction`, if needed.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: IA Data
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'This Page contains Data Items important to the IA logic. Nothing here needs
    changing, although the Initial Values can be changed for style reasons. If changed,
    the Data Items *must also have their equivalents changed in the other two templates*.
    This is needed to keep the **Item Data** field names, Statuses, and Tags consistent
    throughout the three templates. The following list explains the Data Items and
    how they’re used in the IA template logic:'
  prefs: []
  type: TYPE_NORMAL
- en: Find the Block named *Global [Item Data] Field Names*. This Block contains four
    Data Items. The values stored in these Data Items are *Field Names* that will
    be added to the current **Item Data**. For example, **Prediction Item Data Field
    Name** has the Initial Value of **Prediction**. This means that **Item Data.Prediction**
    will be created somewhere during the Session run. **Queue 1 Item ID Item Data
    Field Name** has an Initial Value of **Queue 1 Item ID**. This means that *Queue
    2*’s Item Data will have a Field named **Item Data.Queue 1 Item ID**. It’s safe
    to change the Initial Values, as “dot notation” isn’t used to access the Collection
    Fields.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Look at the *Global ML Statuses* Block. It contains two Data Items, storing
    Status text. These Statuses are used to skip steps on `Main Page` and to simplify
    management in the Control Room.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Look at the *Global ML Tags* Block. It contains two Data Items that store Tag
    text. These Tags prevent Items from being retrieved using **Get** **Next Item**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Look at the **Throw Exception Review Text** Data Item. Its Initial Value is
    set to **BE**. This Data Item provides reviewers with a way to forcibly throw
    a Business Exception for a prediction that they are reviewing. Reviewers need
    to set the “reviewed prediction” label to **BE**, and the template will mark that
    Item as a Business Exception once it’s picked up for work.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 02 Push to Queue 2
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'This Page adds the input data that’s necessary to create a prediction into
    a Collection and submits that Collection as Item Data into *Queue 2*. It also
    Tags the current Item so that it doesn’t get picked up by **Get Next Item** until
    the ML prediction is completed. The following list contains the changes that you
    should make to the template or an explanation of something that’s important to
    understand:'
  prefs: []
  type: TYPE_NORMAL
- en: Replace the *Note* Stage in the green Block with logic that populates the **Queue
    2 Item Data** Collection. This Collection should contain the input data needed
    to make an ML prediction.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: See within the green Block that we add *Queue 1*’s current **Item ID** in the
    **Queue 2 Item Data** Collection. This gives *Process 2* and *Queue 2* a reference
    to its equivalent Item in *Queue 1*.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Delete the green Block named *Build Queue 2 Item Data* if it’s not used for
    Exception handling.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: See that we Tag the current Item with **Waiting ML Prediction** using the **Add
    Tag “Waiting ML** **Prediction”** Action.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: See that we save *Queue 2*’s Item ID into *Queue 1*’s `Item Data`. This gives
    *Process 1* and *Queue 1* a reference to its equivalent Item in *Queue 2*.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 03 Check for Reviewer Exception
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: This Page checks to see whether the reviewer wants this Item to be marked as
    a *Business Exception*. It checks to see whether the reviewed label is equal to
    `IA Data` Page. If **BE** (or whatever the label has been changed to) is detected,
    a *Business Exception* is thrown. This Page doesn’t require any changes.
  prefs: []
  type: TYPE_NORMAL
- en: 04 Work Step Using the ML Prediction
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: This Page demonstrates how to get the most up-to-date prediction so that it
    can be used further on during the Session. First, check to see whether a reviewed
    prediction exists. If yes, use that as the predicted value. If no, use the original
    prediction. Logging is explicitly set on these Stages so that we can trace whether
    this Item is using a reviewed versus a non-reviewed prediction for processing.
  prefs: []
  type: TYPE_NORMAL
- en: Unlock Item
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: This Page unlocks the current Item so that it gets placed back in the Queue.
    This Page doesn’t need any changes. The current Item won’t get picked up again
    until its Tags are removed.
  prefs: []
  type: TYPE_NORMAL
- en: Now, let’s look at the template for *Process 2*.
  prefs: []
  type: TYPE_NORMAL
- en: Using IA Template 3 – 02 – ML Prediction
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This Process executes the steps that generate the ML prediction and determines
    whether it needs manual review through either random sampling or thresholding.
    If it does, it gets pushed into *Queue 3*. If it doesn’t, the corresponding Item
    in *Queue 1* is untagged so that it can continue processing.
  prefs: []
  type: TYPE_NORMAL
- en: 'Each of the following subsection headings refers to a Page in the Process Studio.
    Please open the corresponding Page and read through it to understand what changes
    you’ll need to make use of this template. We will go through eight Pages in total:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Main Page**: Understand the high-level steps of this Process here; can swap
    out the review criteria here if necessary.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**IA Data**: This Page contains important Data Items that are used in the IA
    solution logic.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Start Up**: There is a placeholder here to load in threshold values from
    Excel, if thresholding is used.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**01 ML Prediction**: On this Page, we need to create the kill switch Credential
    and amend the logic to make use of that Credential. We also need to create an
    Environment Variable for the ML Model Version so that it can be logged. Finally,
    we need to make the ML prediction and store the prediction and confidence score
    in designated Data Items.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**02 Random Sampling**: If we want to use random sampling to determine whether
    a prediction needs review, we should create an Environment Variable to store the
    random sampling percentage, and amend the logic to use that Environment Variable.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**02 Thresholding**: If we want to use thresholding, and we’re using Excel
    to store the thresholds, we can keep this Page as is. Otherwise, you’ll need to
    add in your logic here.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**03a Update Queue 1 Item**: This Page contains fixed logic that updates the
    Status, Tags, and Item Data of the equivalent *Queue* *1* Item.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**03b Push to Queue 3 and Update Queue 1 Item**: This Page pushes data into
    *Queue 3* when HITL review is needed, and updates the Status, Tags, and Item Data
    of the equivalent *Queue* *1* Item.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Open the `Ch7` | `IA Template 3 – 3 Process 3 Queue` folder to get started,
    and navigate to **Main Page**.
  prefs: []
  type: TYPE_NORMAL
- en: Main Page
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'This *Work* Block on **Main Page** contains four Pages and a Decision Stage.
    No Tag Filters are used in **Get Next Item**, and no Item unlocking or deferrals
    are used. The following list contains the changes that you should make to the
    template or an explanation of something that’s important to understand:'
  prefs: []
  type: TYPE_NORMAL
- en: Look at the **01 ML Prediction** Page in the *Work* Block. This Page contains
    the logic to make the ML prediction.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Look at the **02 Random Sampling** Page. Replace this with **02 Thresholding**
    if you want to use a thresholding scheme to determine whether a prediction needs
    human review.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Double-click on the *Skip Steps?* Choice Stage to the left of the *Work* Block.
    See that there is one Status, **Prediction Complete**, which we can use to skip
    Stages in the *Work* Block.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Change the values of the three Data Items that contain the Queue Names **Queue
    Name**, **Queue Name 2**, and **Queue** **Name 3**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: See that all Items get marked as completed unless they’re marked as an Exception.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: IA Data
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'This Page is a central location containing Data Items important to the IA logic.
    Nothing here needs changing, although the Initial Values can be changed for style
    reasons. If changed, the Data Items *must also have their equivalents changed
    in the other two templates* **IA Data** Page. This is required to maintain consistent
    **Item Data** field names, Statuses, and Tags throughout the three templates.
    The following list explains the Data Items and how they’re used in the IA template
    logic:'
  prefs: []
  type: TYPE_NORMAL
- en: See that there’s a Session Variable, **Force HITL Review**, that can force all
    Items that have undergone prediction to also be manually reviewed.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The *Global [Item Data] Field Names for all Queues* Block contains four Data
    Items. The values stored in these Data Items are *Field Names* that will be added
    to the current **Item Data**. For example, **Prediction Item Data Field Name**
    has the Initial Value of **Prediction**. This means that **Item Data.Prediction**
    will be created somewhere during the Session run. *Queue 2 Item ID Item Data Field
    Name* has an Initial Value of **Queue 2 Item ID**. This text will be added as
    a field into the data that is pushed into *Queue 3*.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: See that the *Global ML Statuses* Block contains three Data Items, storing Status
    text. These Statuses are used to skip steps on `Main Page` and to simplify management
    in the Control Room.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: See that the *Global ML Tags* Block contains two Data Items, storing Tag text.
    These Tags control whether an Item can be retrieved using **Get Next Item**, in
    *Queue 1*.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Start Up
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'This Page has a placeholder where you can add logic to load Threshold data
    into BP:'
  prefs: []
  type: TYPE_NORMAL
- en: Find the green Block named *Load Threshold Data*. This is intended for loading
    the Threshold data. If it’s an Excel file, the **Utility - Intelligent Automation::Threshold
    Excel to Collection** Action can be used.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Delete the *Load Threshold Data* Block if it’s not used for Exception handling.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 01 ML Prediction
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'This Page is where the actual ML prediction steps, such as calling an API Web
    Service or CLI program, should occur. The following list contains the changes
    that you should make to the template or an explanation of something that’s important
    to understand:'
  prefs: []
  type: TYPE_NORMAL
- en: See that there’s a *Kill Switch* Block after *Start*. To use this kill switch,
    create a Credential from the **System** | **Security** | **Credentials** area
    of BP. Set the appropriate Permissions on the Credential.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Create a new Environment Variable from **System** | **Processes** | **Environment
    Variables** with the name of the Credential from *step 1* as its Value.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Change the **Kill Switch Credential Name** Data Item’s **Exposure** to **Environment**
    and select the Environment Variable that was created in *step 2*. This causes
    the Data Item to be renamed.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Change the **Get Kill Switch Credential** Action to use the name of the Data
    Item from *step 3*.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Find the Stage named *Log [Model Version]* in the orange-colored Block named
    *Predict*. Its purpose is to log which version of the ML model is being used to
    make a prediction. Create an Environment Variable from `Text` or `DateTime` model
    version as its Value.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Change the `Model Version` Data Item’s **Exposure** to **Environment**, and
    select the Environment Variable that was created in *step 5*. This causes the
    Data Item to be renamed.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Change the *Log [Model Version]* Stage to use the Environment Variable Data
    Item in *step 6*. Ensure that **Stage logging** is set to **Enabled**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Find the placeholder *Note* in the orange-colored Block named *Predict*. Replace
    this with the actual logic that’s needed to obtain a prediction.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Edit the Multi Calc Stage named *Set [Prediction] and [Confidence Score]* in
    the green Block named *Store Prediction Result*. Change it so that the actual
    prediction is saved in the `Prediction` Data Item and the confidence score is
    saved in the `Confidence Score` Data Item.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Delete the *Store Prediction Result* Block if it’s not used for Exception handling.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Find the green Block named *Optional New ML Model Evaluation* connected to *End*.
    You can link a Process here that will call a secondary ML model for evaluation
    purposes. A description of how to integrate this can be found in [*Chapter 6*](B18416_06.xhtml#_idTextAnchor093),
    *Example 4*. Delete the Note and green Block if they aren’t needed.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 02 Random Sampling
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'This Page contains the random sampling logic for determining whether a prediction
    needs HITL review. This can be swapped out on **Main Page** for **02 Thresholding**
    or replaced completely with custom logic. The following list contains the changes
    that you should make to the template or an explanation of something that’s important
    to understand:'
  prefs: []
  type: TYPE_NORMAL
- en: Create a new Environment Variable from **System** | **Processes** | **Environment
    Variables** with the sampling rate as its Value. It’s recommended to use a decimal
    value between 1 and 100.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Change the `Random Sampling Rate` Data Item **Exposure** to **Environment**
    and select the Environment Variable created in *step 1*. This Data Item will be
    renamed.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Change the *Require Manual Review?* Decision Stage Expression to use the Data
    Item that was renamed in *step 2*.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 02 Thresholding
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: This Page contains the thresholding logic to determine whether a prediction
    needs human review. If you want to use Thresholding, delete the **02 Random Sampling**
    Page from **Main Page**, and replace it with this one. The logic needed to load
    the thresholds into a Collection should have been executed on the **Start Up**
    Page. Changes to this Page are only needed if you don’t want to use the threshold
    Actions available from the **Utility - Intelligent** **Automation** Object.
  prefs: []
  type: TYPE_NORMAL
- en: 03a Update Queue 1 Item
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: This Page is only executed when a human review of the prediction isn’t needed.
    First, *Queue 1*‘s Item is locked and the prediction and confidence score are
    added to its Item Data. Then, its Status is updated to **Manual Review Not Required**.
    The **Waiting ML Prediction** Tag is removed, which allows *Process 1* to pick
    it up again through **Get Next Item**. This Page doesn’t need any changes.
  prefs: []
  type: TYPE_NORMAL
- en: If this Page isn’t run, **03b Push to Queue 3** will be run instead.
  prefs: []
  type: TYPE_NORMAL
- en: 03b Push to Queue 3 and Update Queue 1 Item
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'This Page contains the logic that adds the input data needed to create a reviewable
    prediction into a Collection. The Collection is then pushed into *Queue 3*. It
    also updates the equivalent Item’s data in *Queue 1* with the prediction results
    and updates the Status of the Item to indicate that it requires HITL review. The
    following list contains the changes that you should make to the template or an
    explanation of something that’s important to understand:'
  prefs: []
  type: TYPE_NORMAL
- en: Replace the *Note* Stage in the green Block named *Build Queue 3 Item Data*
    with logic that populates the `Queue 3 Item Data` Collection. This Collection
    should contain the input data needed to create a reviewable prediction.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Look at the Stages in the green Block named *Build Queue 3 Item Data*. See that
    we add the current (*Queue 2*’s) `Item ID` into the `Queue 3 Item Data` Collection
    that’s added to *Queue 3*. This is done for traceability purposes. Through `Queue
    3 Item Data` will already have a copy of *Queue 1*’s Item ID.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Delete the green Block named *Build Queue 3 Item Data* if it’s not used for
    Exception handling.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Find the **Add Queue 3 Item ID to [Queue 1 Item Data]** Action. This Action,
    all the way until the **Work Queue::Set Data** Action, is used to update the equivalent
    Item in *Queue 1* with the confidence score and prediction.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Find the **Update Queue 1’s Status to “Manual Review Required”** Action. This
    and the two next Actions that follow change *Queue 1*’s Item Status to **Manual
    Review Required**, remove the **Waiting ML Prediction** Tag, and add the **Manual
    Review** **Required** Tag.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Next, let’s look at the final template, which is used to create review data
    and check for completed reviews.
  prefs: []
  type: TYPE_NORMAL
- en: Using IA Template 3 – 03 – HITL Review
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'This third and final Process template contains the logic to create shared review
    data records and check for reviewed predictions. If a review isn’t complete, the
    Item is deferred. If the review is complete, *Queue 1*’s Item is updated so that
    it can continue processing. Each of the following subsection headings refers to
    a Page in the Process Studio. Please open the corresponding Page and read through
    it to understand what changes you’ll need to make use of this template. We will
    go through six Pages in total:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Main Page**: Understand the high-level Process steps and update the values
    of the Data Items that contain the Queue names.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**IA Data**: This Page contains important Data Items that are used in the IA
    solution logic.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Start Up**: This Page has a placeholder area to create shared data folders
    for reviews if needed.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**01 Write Shared Review Data**: There are placeholders for you to add in the
    logic needed to create the review data.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**02 Check for Reviewed Predictions**: Add logic to check whether the Item
    has been reviewed. You also need to add logic to save reviewed predictions into
    designated Data Items.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Defer**: Choose an appropriate deferral time and defer the Item if it hasn’t
    been reviewed yet.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Open the **03 – HITL Review** Process in the **Ch7 |** **IA Template 3 – 3 Process
    3 Queue** Group to get started. Navigate to **Main Page**.
  prefs: []
  type: TYPE_NORMAL
- en: Main Page
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '`Queue Name` and `Queue Name 3` Data Item Values.'
  prefs: []
  type: TYPE_NORMAL
- en: IA Data
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'This Page is a central location containing Data Items important to the IA logic.
    Nothing here needs changing, although the Initial Values can be changed for style
    reasons. If changed, the Data Items *must also have their equivalents changed
    in the other two templates’* `IA Data` Page. This is required to maintain consistent
    `Item Data` field names, Statuses, and Tags throughout the three templates. The
    following list explains the Data Items and how they’re used in the IA template
    logic:'
  prefs: []
  type: TYPE_NORMAL
- en: Locate the *IA Session Control* Block. There are two Session Variables here.
    `Disable HITL Review` is used to disable the HITL review requirement, and `Force
    Create Review Data` forces Items to recreate its review data.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The *Global [Item Data] Field Names for all Queues* Block contains four Data
    Items. The values stored in these Data Items are *Field Names* that will be added
    to the current `Item Data`. For example, `Reviewed Prediction Item Data Field
    Name` has the Initial Value of `Item Data.Reviewed Prediction` will be created
    somewhere during the Session run.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: See that the *Global ML Statuses* Block contains one Data Item that stores Status
    text. This Status is used to skip steps on **Main Page** of *Process 1* and *Queue
    1* and to simplify management in the Control Room.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: See that the *Global ML Tags* Block contains one Data Item that stores Tag text.
    This Tag controls whether an Item can be retrieved using **Get Next Item**, in
    *Process 1*, *Queue 1*.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Start Up
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'This Page has a placeholder in a green Block where logic can be added to create
    shared folders for reviewing:'
  prefs: []
  type: TYPE_NORMAL
- en: Locate the green Block named *Created Shared Data Folders* near the bottom of
    the Page. This should house logic related to the creation of shared folders for
    HITL review if needed.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Delete the *Created Shared Data Folders* Block if it’s not used for Exception
    handling.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 01 Write Shared Review Data
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'This Page contains the steps needed to create the shared data needed for reviewers,
    whether it be uploading data to a website, to an FTP, to shared folders, and so
    on. There are two green Blocks that need to be populated with your custom logic.
    The following list contains the changes that you should make to the template or
    an explanation of something that’s important to understand:'
  prefs: []
  type: TYPE_NORMAL
- en: Find the green Block named *Data Creation Logic* and insert the logic needed
    to persist the shared data needed by the reviewer. Whatever method is used needs
    some way of being connected back to the `Item ID` in the Work Queue. For example,
    the `Item ID` could be a part of the filename, database record, or field uploaded
    into an API. Alternatively, you could store a unique identifier of your shared
    location in `Item Data` so that it can be checked later. Be aware that including
    the original prediction and confidence score as part of the review data might
    bias the reviewer. If you want to provide the original predicted label and confidence
    score to the reviewer, add two new Data Items to the *Global [Item Data] Field
    Names for all Queues* Block on the `IA Data` Page to reference those Fields.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Delete the *Data Creation Logic* Block if it’s not used for Exception handling.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Find the green Block named *Check for Real Presence of Shared Data* and insert
    the logic that checks whether the shared data has been successfully persisted.
    For example, you could check to see whether files exist in their correct location.
    This should result in setting the `Shared Data Found?` Data Item to either `True`
    or `False`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Delete the *Check for Real Presence of Shared Data* Block if it’s not used for
    Exception handling.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Find the Note right before `Item Data`. This could be a database key, a URL,
    or a file path. This should be used to simplify the logic needed in *step 3*,
    to verify whether the shared data exists at the source.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 02 Check for Reviewed Predictions
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'This Page checks the current Item to see whether it has been reviewed. If the
    review is completed, it reads the revised prediction and its justification and
    updates the equivalent *Queue 1* Item so that it can continue processing. The
    following list contains the changes that you should make to the template or an
    explanation of something that’s important to understand:'
  prefs: []
  type: TYPE_NORMAL
- en: Replace the green *Note* Stage after the *[Disable HITL Review]* Decision Stage
    with the steps needed to check whether this Item has been reviewed. This will
    likely involve checking for the current Item’s `Item ID`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Change the *Review Complete?* Decision Stage with an Expression that indicates
    whether the review for this Item is complete.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Find the green Block named *Store Reviewed Prediction in [Item Data]*, and add
    in the logic needed to read the reviewed prediction back into BP. This could be
    reading a text file, a database record, text from a web page, and so on.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Change the *Set [Reviewed Prediction] and [Review Justification]* Multi Calculation
    Stage so that the reviewed prediction value and the reasoning behind the corrected
    review are saved in their respective Data Items, `Reviewed Prediction` and `Review
    Justification`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Delete the *Store Reviewed Prediction in [Item Data]* Block if it’s not used
    for Exception handling.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Find the **Add [Reviewed Prediction] to [Queue 1 Item Data]** Action. This and
    the two following actions are performed if the Item was successfully reviewed.
    They update the equivalent Item in *Queue 1* with the reviewed prediction and
    justification.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Find the **Update Queue 1’s Status to “Manual Review Complete”** Action. This
    and the next Action are used to update the Status of *Queue 1*’s Item to **Manual
    Review Complete** and remove the **Manual Review Required** Tag. This allows *Queue
    1*’s Item to continue with its automation.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Defer
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: If the Item hasn’t been reviewed, defer it so that the reviewers have enough
    time to take action. Change the `Deferral Time` Data Item to have the appropriate
    deferral time. Imagine that the Queue contains only one Item. The deferral time
    needs to be set high enough so that it won’t get picked up twice consecutively
    in a single Session run; otherwise, it will lead to an infinite loop.
  prefs: []
  type: TYPE_NORMAL
- en: We’ve finished looking at the three Processes that make up the final template.
    To consolidate what we’ve seen and further understand how the three sub-templates
    interact with each other, I’m providing a summary of the `IA Data` Pages. This
    will allow you to see which Statuses, Tags, and `Item Data` Fields are being used
    in each sub-template.
  prefs: []
  type: TYPE_NORMAL
- en: Summary of IA Data for the three-Process template
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The Y/N table values indicate whether the Data Item is present on the `IA Data`
    Page of the templates.
  prefs: []
  type: TYPE_NORMAL
- en: Item Data Field names
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '| **Data** **Item Name** | **Initial Value** | **01 –** **Business Logic**
    | **02 –** **ML Prediction** | **03 –** **HITL Review** |'
  prefs: []
  type: TYPE_TB
- en: '| Prediction Item Data Field Name | Prediction | Y | Y | N* |'
  prefs: []
  type: TYPE_TB
- en: '| Confidence Item Data Field Name | Confidence | N | Y | N* |'
  prefs: []
  type: TYPE_TB
- en: '| Reviewed Prediction Item Data Field Name | Reviewed Prediction | Y | N |
    Y |'
  prefs: []
  type: TYPE_TB
- en: '| Review Justification | Review Justification | N | N | Y |'
  prefs: []
  type: TYPE_TB
- en: '| Review Data Created Item Data Field | Review Data Created | N | N | Y |'
  prefs: []
  type: TYPE_TB
- en: '| Queue 1 Item ID Item Data Field Name | Queue 1 Item ID | Y | Y | Y |'
  prefs: []
  type: TYPE_TB
- en: '| Queue 2 Item ID Item Data Field Name | Queue 2 Item ID | Y | Y | N |'
  prefs: []
  type: TYPE_TB
- en: '| Queue 3 Item ID Item Data Field Name | Queue 3 Item ID | N | Y | N |'
  prefs: []
  type: TYPE_TB
- en: Table 7.2 – Item Data Field names
  prefs: []
  type: TYPE_NORMAL
- en: '*** These two Data Items can be added to sub-template 3 if you want to let
    the reviewer know what the original prediction and confidence** **score are.**'
  prefs: []
  type: TYPE_NORMAL
- en: Statuses
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '| **Data** **Item Name** | **Initial Value** | **01 –** **Business Logic**
    | **02 –** **ML Prediction** | **03 –** **HITL Review** |'
  prefs: []
  type: TYPE_TB
- en: '| Prediction Complete Status | Prediction Complete | N | Y | N |'
  prefs: []
  type: TYPE_TB
- en: '| Manual Review Required Status | Manual Review Required | N | Y | N |'
  prefs: []
  type: TYPE_TB
- en: '| Manual Review Not Required Status | Manual Review Not Required | Y | Y |
    N |'
  prefs: []
  type: TYPE_TB
- en: '| Manual Review Complete Status | Manual Review Complete | Y | N | Y |'
  prefs: []
  type: TYPE_TB
- en: Table 7.3 –Statuses
  prefs: []
  type: TYPE_NORMAL
- en: Tags
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '| **Data** **Item Name** | **Initial Value** | **01 –** **Business Logic**
    | **02 –** **ML Prediction** | **03 –** **HITL Review** |'
  prefs: []
  type: TYPE_TB
- en: '| Waiting ML Prediction Tag | Waiting ML Prediction | Y | Y | N |'
  prefs: []
  type: TYPE_TB
- en: '| Manual Review Required Tag | Manual Review Required | Y | Y | Y |'
  prefs: []
  type: TYPE_TB
- en: Table 7.4 –Tags
  prefs: []
  type: TYPE_NORMAL
- en: Session Variables
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '| **Data** **Item Name** | **Initial Value** | **01 –** **Business Logic**
    | **02 –** **ML Prediction** | **03 –** **HITL Review** |'
  prefs: []
  type: TYPE_TB
- en: '| Force HITL Review | False | N | Y | N |'
  prefs: []
  type: TYPE_TB
- en: '| Disable HITL Review | False | N | N | Y |'
  prefs: []
  type: TYPE_TB
- en: '| Force Create Review Data | False | N | N | Y |'
  prefs: []
  type: TYPE_TB
- en: Table 7.5 – Session Variables
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we’ve brought together all of the development and design concepts
    thus far and packaged them into reusable templates. These templates serve as a
    strong foundation for creating an IA solution that manages the complexities and
    risks of ML. First, we looked at an Object containing IA-specific Actions that
    were lacking from BP’s default VBOs. Then we looked at two single-Process, single-Work
    Queue templates. One template was for synchronous reviews, whereas the other was
    for asynchronous reviews. Finally, we looked at a three-part Process template
    that separates the business logic from the ML prediction from the HITL reviews.
  prefs: []
  type: TYPE_NORMAL
- en: This concludes the IA solution design section of the book. In the next chapter,
    we will look at how IA impacts BP operations outside of the Process Studio – for
    example, in the Control Room, and System Settings. We’ll also hypothesize on how
    IA affects BP’s **Robotic Operating Model** (**ROM**). The ROM is a critically
    important topic that underlies successful IA adoption.
  prefs: []
  type: TYPE_NORMAL
- en: Part 3:Control Room and Management
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This part of the book shifts away from object and process diagrams and into
    the wider operational concerns of a BP and IA. [*Chapter 8*](B18416_08.xhtml#_idTextAnchor133)
    discusses BP’s Logical Access Model, what new user roles might be needed due to
    IA, and what permissions those roles should have in the BP software. It also discusses
    multi-team environments and how to limit the scope of what these new roles can
    see.
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 9*](B18416_09.xhtml#_idTextAnchor146) goes through popular ML deployment
    methodologies. These methodologies determine how we update and roll back ML models
    for use in BP. It also goes through some SQL queries that can be used to extract
    ML audit data from the session log tables in BP.'
  prefs: []
  type: TYPE_NORMAL
- en: BP’s **Robotic Operating Model** (**ROM**) is an industry-leading methodology
    that helps business achieve their automation goals. Although it isn’t a technology
    product, it’s without question a major part of BP that differentiates it from
    other RPA vendors. [*Chapter 10*](B18416_10.xhtml#_idTextAnchor157) looks at the
    ROM and discusses which areas will be the most affected by IA.
  prefs: []
  type: TYPE_NORMAL
- en: 'This part contains the following chapters:'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 8*](B18416_08.xhtml#_idTextAnchor133), *The LAM, User Roles, and
    MTE*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Chapter 9*](B18416_09.xhtml#_idTextAnchor146), *ML Deployments and Database
    Operations*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Chapter 10*](B18416_10.xhtml#_idTextAnchor157), *IA’s Impact on the Robotic
    Operating Model*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
