- en: A Taste of Machine Learning
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: So, you have decided to enter the field of machine learning. That's great!
  prefs: []
  type: TYPE_NORMAL
- en: Nowadays, machine learning is all around us—from protecting our email, to automatically
    tagging our friends in pictures, to predicting what movies we like. As a form
    of artificial intelligence, machine learning enables computers to learn through
    experience; to make predictions about the future using collected data from the
    past. On top of that, computer vision is one of today's most exciting application
    fields of machine learning, with deep learning and convolutional neural networks
    driving innovative systems such as self-driving cars and Google's DeepMind.
  prefs: []
  type: TYPE_NORMAL
- en: However, fret not; your application does not need to be as large-scale or world-changing
    ...
  prefs: []
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can refer to the code for this chapter at the following link: [https://github.com/PacktPublishing/Machine-Learning-for-OpenCV-Second-Edition/tree/master/Chapter01](https://github.com/PacktPublishing/Machine-Learning-for-OpenCV-Second-Edition/tree/master/Chapter01).
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is a short summary of the software and hardware requirements:'
  prefs: []
  type: TYPE_NORMAL
- en: OpenCV version 4.1.x (4.1.0 or 4.1.1 will both work just fine).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Python version 3.6 (any Python version 3.x will be fine).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Anaconda Python 3 for installing Python and the required modules.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You can use any OS—macOS, Windows, and Linux-based OS—with this book. We recommend
    you have at least 4 GB RAM in your system.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You don't need to have a GPU to run the code provided with this book.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Getting started with machine learning
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Machine learning has been around for at least 60 years. Growing out of the
    quest for artificial intelligence, early machine learning systems inferred the
    hand-coded rules of `if...else` statements to process data and make decisions.
    Think of a spam filter whose job is to parse incoming emails and move unwanted
    messages to a spam folder as shown here in the following diagram:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/13ad85ae-1adb-4546-a63d-6dedceceaae8.png)'
  prefs: []
  type: TYPE_IMG
- en: We could come up with a blacklist of words that, whenever they show up in a
    message, would mark an email as spam. This is a simple example of a hand-coded expert
    system. (We will build a smarter one in [Chapter 7](08148129-87ac-4042-944d-8e0a2bbbe0c5.xhtml), *Implementing
    a Spam ...*
  prefs: []
  type: TYPE_NORMAL
- en: Problems that machine learning can solve
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Most machine learning problems belong to one of the following three main categories:'
  prefs: []
  type: TYPE_NORMAL
- en: In supervised learning, we have what is referred to as the label for a data
    point. Now, this can be the class of an object that is captured in the image,
    a bounding box around a face, the digit present in the image, or anything else.
    Think of it as a teacher who teaches but also tells you what the correct answer
    is to a problem. Now, the student can try to devise a model or an equation that
    takes into account all the problems and their correct answers and finds out the
    answer to a problem that does (or does not) have a correct answer. The data that
    goes into learning the model is called the **training data** and the data on which
    the process/model is tested is called **test data**. These predictions come in
    two flavors, such as identifying new photos with the correct animal (called a **classification** **problem**)
    or assigning accurate sale prices to other used cars (called a **regression** **problem**).
    Don't worry if this seems a little over your head for now—we will have the entirety
    of the book to nail down the details.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In unsupervised learning, data points have no labels associated with them ([Chapter
    8](790a10c4-635a-40da-ae5f-13946bc0e9fd.xhtml), *Discovering Hidden Structures
    with* *Unsupervised Learning*). Think of it like a class where the instructor
    gives you a jumbled puzzle and leaves it up to you to figure out what to do. Here,
    the most common result is the **c**lusters, which contain objects with similar
    characteristics. It can also result in different ways of looking at higher dimensional
    data (complex data) so that it appears simpler.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reinforcement learning is about maximizing a reward in a problem. So, if the
    teacher gives you a candy for every correct answer and punishes you for every
    incorrect answer, he/she is reinforcing the concepts by making you increase the
    number of times you receive candies rather than the number of times you are subjected
    to a punishment.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'These three main categories are illustrated in the following diagram:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/6161f52c-65f7-4402-b74e-f66b5cf5a3c6.png)'
  prefs: []
  type: TYPE_IMG
- en: Now that we have covered the main machine learning categories, let's go over
    some concepts in Python that will prove very useful along the journey of this
    book.
  prefs: []
  type: TYPE_NORMAL
- en: Getting started with Python
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Python has become the common language for many data science and machine learning
    applications, thanks to its great number of open source libraries for processes
    such as data loading, data visualization, statistics, image processing, and natural
    language processing. One of the main advantages of using Python is the ability
    to interact directly with the code, using a Terminal or other tools such as the **Jupyter
    Notebook**, which we'll look at shortly.
  prefs: []
  type: TYPE_NORMAL
- en: 'If you have mostly been using OpenCV in combination with C++, I would strongly
    suggest that you switch to Python, at least for the purpose of studying this book.
    This decision has not been made out of spite! Quite the contrary: I have done
    my fair share of C/C++ programming—especially ...'
  prefs: []
  type: TYPE_NORMAL
- en: Getting started with OpenCV
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Being the avid user of OpenCV that I believe you are, I probably don't have
    to convince you about the power of OpenCV.
  prefs: []
  type: TYPE_NORMAL
- en: Built to provide a common infrastructure for computer vision applications, OpenCV
    has become a comprehensive set of both classic and state-of-the-art computer vision
    and machine learning algorithms. According to their own documentation, OpenCV
    has a user community of more than 47,000 people and has been downloaded over seven
    million times. That's pretty impressive! As an open source project, it is very
    easy for researchers, businesses, and government bodies to utilize and modify
    already available code.
  prefs: []
  type: TYPE_NORMAL
- en: That being said, a number of open source machine learning libraries have popped
    up as part of the recent machine learning boom that provide far more functionality
    than OpenCV. A prominent example is **scikit-learn**, which provides a number
    of state-of-the-art machine learning algorithms as well as a wealth of online
    tutorials and code snippets. As OpenCV was developed mainly to provide computer
    vision algorithms, its machine learning functionality is restricted to a single
    module, called `ml`. As we will see in this book, OpenCV still provides a number
    of state-of-the-art algorithms, but sometimes lacks a bit in functionality. In
    these rare cases, instead of reinventing the wheel, we will simply use scikit-learn
    for our purposes.
  prefs: []
  type: TYPE_NORMAL
- en: Last but not least, installing OpenCV using the Python Anaconda distribution is essentially a
    one-liner as we'll see in the following sections.
  prefs: []
  type: TYPE_NORMAL
- en: If you are a more advanced user who wants to build real-time applications, OpenCV's
    algorithms are well-optimized for this task, and Python provides several ways
    to speed up computations where it is necessary (using, for example, **Cython** or
    parallel processing libraries such as **joblib** or **dask**).
  prefs: []
  type: TYPE_NORMAL
- en: Installation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Before we get started, let''s make sure that we have all the tools and libraries
    installed that are necessary to create a fully functioning data science environment.
    After downloading the latest code for this book from GitHub, we are going to install
    the following software:'
  prefs: []
  type: TYPE_NORMAL
- en: Python's Anaconda distribution, based on Python 3.6 or higher
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: OpenCV 4.1
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Some supporting packages
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Don't feel like installing stuff? You can also visit [https://mybinder.org/v2/gh/PacktPublishing/Machine-Learning-for-OpenCV-Second-Edition/master](https://mybinder.org/v2/gh/PacktPublishing/Machine-Learning-for-OpenCV-Second-Edition/master),
    where you will find all the code for this book in an interactive, executable environment
    and 100% free and open source, thanks to the **Binder** project.
  prefs: []
  type: TYPE_NORMAL
- en: Getting the latest code for this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can get the latest code for this book from GitHub: [https://github.com/PacktPublishing/Machine-Learning-for-OpenCV-Second-Edition](https://github.com/PacktPublishing/Machine-Learning-for-OpenCV-Second-Edition).
    You can either download a `.zip` package (beginners) or clone the repository using
    Git (intermediate users).
  prefs: []
  type: TYPE_NORMAL
- en: Git is a version control system that allows you to track changes in files and
    collaborate with others on your code. In addition, the web platform GitHub makes
    it easy for people to share their code with you on a public server. As I make
    improvements to the code, you can easily update your local copy, file bug reports,
    or suggest code changes.
  prefs: []
  type: TYPE_NORMAL
- en: If you choose to go with git, the first step is to make sure it is installed
    ([https://git-scm.com/downloads](https://git-scm.com/downloads)).
  prefs: []
  type: TYPE_NORMAL
- en: 'Then, open a Terminal (or Command Prompt, as it is called in Windows):'
  prefs: []
  type: TYPE_NORMAL
- en: On Windows 10, right-click on the Start Menu button, and select Command Prompt.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: On macOS X, press *Cmd* + *Space* to open spotlight search, then type `terminal`,
    and hit *Enter*.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: On Ubuntu, Linux/Unix and friends, press *Ctrl + Alt + T*. On Red Hat, right-click
    on the desktop and choose Open Terminal from the menu.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Navigate to a directory where you want the code downloaded:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Then you can grab a local copy of the latest code by typing the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: This will download the latest code in a folder called `OpenCV-ML`.
  prefs: []
  type: TYPE_NORMAL
- en: 'After a while, the code might change online. In that case, you can update your
    local copy by running the following command from within the `OpenCV-ML` directory:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Getting to grips with Python's Anaconda distribution
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Anaconda** is a free Python distribution developed by Continuum Analytics
    that is made for scientific computing. It works across Windows, Linux, and macOS
    X platforms and is free, even for commercial use. However, the best thing about
    it is that it comes with a number of preinstalled packages that are essential
    for data science, math, and engineering. These packages include the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**NumPy**: A fundamental package for scientific computing in Python that provides
    functionality for multidimensional arrays, high-level mathematical functions,
    and pseudo-random number generators'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**SciPy**: A collection of functions for scientific computing in Python that
    provides advanced linear algebra routines, ...'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Installing OpenCV in a conda environment
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We will carry out the following steps to install OpenCV:'
  prefs: []
  type: TYPE_NORMAL
- en: 'In a Terminal, navigate to the directory where you downloaded the following
    code:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'Then, run the following command to create a conda environment based on Python
    3.6, which will also install all the necessary packages listed in the `environment.yml` file
    (available in the GitHub repository) in one fell swoop:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'You can also have a look at the following `environment.yml` file:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Notice that the environment's name will be `OpenCV-ML`. This code will use the `conda-forge`
    channel to download all the `conda` based dependencies and use `pip` to install `OpenCV
    4.0 (along with opencv_contrib)`.
  prefs: []
  type: TYPE_NORMAL
- en: 'To activate the environment, type one of the following, depending on your platform:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'When we close the Terminal, the session will be deactivated—so we will have
    to run this last command again the next time we open a new Terminal. We can also
    deactivate the environment by hand:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: And done! Let's verify whether all this installation was successful or not.
  prefs: []
  type: TYPE_NORMAL
- en: Verifying the installation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'It''s a good idea to double-check our installation. While our terminal is still
    open, we start IPython, which is an interactive shell to run Python commands:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'Next, make sure that you are running (at least) Python 3.6 and not Python 2.7\.
    You might see the version number displayed in IPython''s welcome message. If not,
    you can run the following commands:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'Now try to import OpenCV as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 'You should get no error messages. Then, try to find out the version number
    like so:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: Make sure that OpenCV's version ...
  prefs: []
  type: TYPE_NORMAL
- en: Getting a glimpse of OpenCV's ml module
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Starting with OpenCV 3.1, all machine learning related functions in OpenCV have
    been grouped into the `ml` module. This has been the case for the C++ API for
    quite some time. You can get a glimpse of what''s to come by displaying all functions
    in the `ml` module:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: If you have installed an older version of OpenCV, the `ml` module might not
    be present. For example, the k-nearest neighbor algorithm (which we will talk
    about in [Chapter 3](323dbb44-1e2b-4eaa-8cd1-2575e6766ffc.xhtml), *First Steps
    in Supervised Learning)* used to be called `cv2.KNearest()` but is now called `cv2.ml.KNearest_create()`.
    In order to avoid confusion throughout the book, I recommend using OpenCV 4.0.
  prefs: []
  type: TYPE_NORMAL
- en: This is all good but you will be wondering by now why should you even learn
    machine learning, and what are its applications? Let's answer this question in
    the next section.
  prefs: []
  type: TYPE_NORMAL
- en: Applications of machine learning
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Machine learning, artificial intelligence, deep learning, and data science are
    four terms that I believe are going to change the way we have always looked at
    things. Let's see if I can convince you why I believe so.
  prefs: []
  type: TYPE_NORMAL
- en: From making a computer learn how to play Go and defeat the world champion of
    the very same game to using the same branch to detect whether a person has a tumor
    or not just by seeing their brain's CT Scan, machine learning has left its mark
    in every single domain. One of the projects that I worked on was using machine
    learning to determine the residual life cycle of boiler water wall tubes in thermal
    power plants. The proposed solution was successful in saving a huge amount of
    money by using the ...
  prefs: []
  type: TYPE_NORMAL
- en: What's new in OpenCV 4.0?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: So, we come to the last section of the very first chapter. I will keep it short
    and to the point since you as a reader can safely skip it. The topic of our discussion
    is **OpenCV 4.0**.
  prefs: []
  type: TYPE_NORMAL
- en: 'OpenCV 4.0 is a result of three and a half years of hard work and bug fixes
    by OpenCV and was finally released in November 2018\. In this section, we will
    look at some of the major changes and new features in OpenCV 4.0:'
  prefs: []
  type: TYPE_NORMAL
- en: With the OpenCV 4.0 release, OpenCV has officially become a C++11 library. This
    means that you have to make sure that a C++11 compliant compiler is present in
    your system when you are trying to compile OpenCV 4.0.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In continuation of the previous point, a lot of C APIs have been removed. Some
    of the modules that have been affected include Video IO module (`videoio`), Object
    Detection module (`objdetect`), and others. File IO for XML, YAML, and JSON have
    also removed the C API.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: OpenCV 4.0 also has a lot of improvements in the DNN module (the deep learning
    module). ONNX support has been added. **Intel OpenVINO** also marks its presence
    in the new OpenCV version. We will be looking into this in some more detail in
    our later chapters.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: OpenCL acceleration has been fixed on AMD and NVIDIA GPUs.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: OpenCV Graph API has also been added, which is a highly efficient engine for
    image processing and other operations.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: As in every OpenCV release, there have been a lot of changes with the purpose
    of improving the performance. Some new features such as QR Code Detection and
    Decoding have also been added.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In short, there have been a lot of changes in OpenCV 4.0 and they have their
    own uses. For example, ONNX support helps in the portability of models across
    various languages and frameworks, OpenCL reduces runtime for computer vision applications,
    Graph API helps in increasing the efficiency of the applications, and the OpenVINO
    toolkit uses Intel's processors and a model zoo to provide highly efficient deep
    learning models. We will be focusing primarily on OpenVINO toolkit and DLDT as
    well as accelerating computer vision applications in later chapters. But, I should
    also point out here that both OpenCV 3.4.4 and OpenCV 4.0.0 are being modified
    at a high speed to fix bugs. So, if you are going to use either of them in any
    application, be prepared to modify your code and installation to incorporate the
    changes made. On a similar note, OpenCV 4.0.1 and OpenCV 3.4.5 are also out within
    a few months of their predecessors.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this chapter, we talked about machine learning at a high abstraction level:
    what it is, why it is important, and what kinds of problems it can solve. We learned
    that machine learning problems come in three flavors: supervised learning, unsupervised
    learning, and reinforcement learning. We talked about the prominence of supervised
    learning, and that this field can be further divided into two subfields: classification
    and regression. Classification models allow us to categorize objects into known
    classes (such as animals into cats and dogs), whereas regression analysis can
    be used to predict continuous outcomes of target variables (such as the sales
    price of used cars).'
  prefs: []
  type: TYPE_NORMAL
- en: We also learned how to set up a data science environment using ...
  prefs: []
  type: TYPE_NORMAL
