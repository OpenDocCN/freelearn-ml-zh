["```py\n    ticker:GOOG\n    ```", "```py\n{\n     …\n    \"currentIntent\": \n    {\n        \"name\": \"GetQuote\", \n        \"Slots\": \n        {\n            \"ticker\": \"GOOG\"\n        },\n     …\n}\n```", "```py\nevent['currentIntent']['name']\nevent['currentIntent']['Slots']['ticker']\n```", "```py\ndef get_quote(request):\n    return \"Quote handling logic goes here.\"\ndef Lambda_handler(event, context):\n    intent = event['currentIntent']['name']\n    if intent == 'GetQuote':\n        return get_quote(event)\n    return \"Sorry, I'm not sure what you have in mind.  Please try again.\"\n```", "```py\ndef get_quote(request):\n    Slots = request['currentIntent']['Slots']\n    ticker = Slots['ticker']\n    price = call_quote_api(ticker)\n```", "```py\nrequest['currentIntent']['Slots']\n```", "```py\nimport json\nfrom urllib.request import urlopen\ndef call_quote_api(ticker):\n    response = urlopen('https://api.iextrading.com/1.0/stock/{}/delayed-quote'.format(ticker))\n    response = json.load(response)\n    return response['delayedPrice']\n```", "```py\nmessage = 'The last price (delayed) of ticker {} was {}'.format(ticker, price)\n```", "```py\nThe last price (delayed) of ticker GOOG was 1107.32\n```", "```py\nreturn close(message)\n```"]