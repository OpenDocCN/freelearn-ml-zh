["```py\nimport numpy as np\nimport pandas as pd\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import mean_absolute_error\n```", "```py\nmonths = np.array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12])\nsales = np.array([4.14,  4.85,  7.34,  6.89,  8.27, 10.06,  8.11, 11.67, 10.45, 11.54, 13.4 , 14.42])\ndf = pd.DataFrame({\"month\": months, \"sales\": sales})\n```", "```py\nmodel = LinearRegression()\nmodel = model.fit(df[[\"month\"]], df[[\"sales\"]])\n```", "```py\npredicted_sales = model.predict(df[[\"month\"]])\nmean_absolute_error(predicted_sales, df[[\"sales\"]])\n```", "```py\nprint(f\"Gradient: ${model.coef_}\")\nprint(f\"Intercept: ${model.intercept_}\")\n```", "```py\ndataset = datasets.load_breast_cancer()\nX_train, X_test, y_train, y_test = train_test_split(dataset.data, dataset.target, random_state=157)\nmodel = DecisionTreeClassifier(random_state=157, max_depth=3, min_samples_split=2)\nmodel = model.fit(X_train, y_train)\nf1_score(y_test, model.predict(X_test))\n```", "```py\ndataset = datasets.load_diabetes()\nX_train, X_test, y_train, y_test = train_test_split(dataset.data, dataset.target, random_state=157)\nmodel = DecisionTreeRegressor(random_state=157, max_depth=3, min_samples_split=2)\nmodel = model.fit(X_train, y_train)\nmean_absolute_error(y_test, model.predict(X_test))\n```"]