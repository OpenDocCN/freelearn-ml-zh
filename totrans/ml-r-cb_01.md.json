["```py\n    $ brew update\n\n    ```", "```py\n    $ brew tap homebrew/science\n\n    ```", "```py\n    $ brew install gfortran\n\n    ```", "```py\n    $ brew install R\n\n    ```", "```py\n    $ sudo sh -c \"echo 'deb http:// cran.stat.ucla.edu/bin/linux/ubuntu precise/' >> /etc/apt/sources.list\"\n\n    ```", "```py\n    $ sudo apt-get update\n\n    ```", "```py\n    $ sudo apt-get install r-base\n\n    ```", "```py\n    $ R\n\n    ```", "```py\n    $ wget http://dl.fedoraproject.org/pub/epel/5/x86_64/epel-release-5-4.noarch.rpm\n\n    ```", "```py\n    $ sudo rpm -Uvh epel-release-5-4.noarch.rpm\n\n    ```", "```py\n    $ sudo yum update\n\n    ```", "```py\n    $ sudo yum install R\n\n    ```", "```py\n    $ R\n\n    ```", "```py\n    $ wget http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm\n\n    ```", "```py\n    $ sudo rpm -Uvh epel-release-6-8.noarch.rpm\n\n    ```", "```py\n    $ sudo yum update\n\n    ```", "```py\n    $ sudo yum install R\n\n    ```", "```py\n    $ R\n\n    ```", "```py\n$ wget http://download1.rstudio.org/rstudio-0.98.1091-i386.deb\n$ sudo gdebi rstudio-0.98\\. 1091-i386.deb\n\n```", "```py\n$ wget http://download1.rstudio.org/rstudio-0.98\\. 1091-amd64.deb\n$ sudo gdebi rstudio-0.98\\. 1091-amd64.deb\n\n```", "```py\n$ wget http://download1.rstudio.org/rstudio-0.98\\. 1091-i686.rpm\n$ sudo yum install --nogpgcheck rstudio-0.98\\. 1091-i686.rpm\n\n```", "```py\n$ wget http://download1.rstudio.org/rstudio-0.98\\. 1091-x86_64.rpm\n$ sudo yum install --nogpgcheck rstudio-0.98\\. 1091-x86_64.rpm\n\n```", "```py\n    > library()\n\n    ```", "```py\n    > chooseCRANmirror()\n\n    ```", "```py\n    > install.packages(\"e1071\")\n\n    ```", "```py\n    > update.packages(\"e1071\")\n\n    ```", "```py\n    > library(e1071)\n\n    ```", "```py\n    > help(package =\"e1071\")\n\n    ```", "```py\n    > help(svm, e1071)\n\n    ```", "```py\n    > ?e1071::svm\n\n    ```", "```py\n    > help.search(\"svm\")\n\n    ```", "```py\n    > ??svm\n\n    ```", "```py\n    > args(lm)\n\n    ```", "```py\n    > example(lm)\n    > demo(graphics)\n\n    ```", "```py\n    > demo()\n\n    ```", "```py\n    > data()\n\n    ```", "```py\n    > data(iris)\n\n    ```", "```py\n    > class(iris)\n    [1] \"data.frame\"\n\n    ```", "```py\n    > save(iris, file=\"myData.RData\")\n\n    ```", "```py\n    > load(\"myData.RData\")\n\n    ```", "```py\n    > test.data = read.table(header = TRUE, text = \"\n    + a b\n    + 1 2\n    + 3 4\n    + \")\n\n    ```", "```py\n    > test.data = read.table(text = \"\n    + 1 2\n    + 3 4\", \n    + col.names=c(\"a\",\"b\"),\n    + row.names = c(\"first\",\"second\"))\n\n    ```", "```py\n    > class(test.data)\n    [1] \"data.frame\"\n\n    ```", "```py\n    > write.table(test.data, file = \"test.txt\" , sep = \" \")\n\n    ```", "```py\n    > write.csv(test.data, file = \"test.csv\")\n\n    ```", "```py\n    > csv.data = read.csv(\"test.csv\", header = TRUE, row.names=1)\n    > head(csv.data)\n     a b\n    1 1 2\n    2 3 4\n\n    ```", "```py\n    > install.packages(\"WriteXLS\")\n\n    ```", "```py\n    > library(\"WriteXLS\")\n\n    ```", "```py\n    > WriteXLS(\"iris\", ExcelFileName=\"iris.xls\")\n\n    ```", "```py\n    > data(iris)\n\n    ```", "```py\n    > iris[1,\"Sepal.Length\"]\n    [1] 5.1\n\n    ```", "```py\n    > Sepal.iris = iris[, c(\"Sepal.Length\", \"Sepal.Width\")]\n\n    ```", "```py\n    > str(Sepal.iris)\n    'data.frame':  150 obs. of  2 variables:\n     $ Sepal.Length: num  5.1 4.9 4.7 4.6 5 5.4 4.6 5 4.4 4.9 ...\n     $ Sepal.Width : num  3.5 3 3.2 3.1 3.6 3.9 3.4 3.4 2.9 3.1 ..\n\n    ```", "```py\n    > Five.Sepal.iris = iris[1:5, c(\"Sepal.Length\", \"Sepal.Width\")]\n    > str(Five.Sepal.iris)\n    'data.frame':\t5 obs. of  2 variables:\n     $ Sepal.Length: num  5.1 4.9 4.7 4.6 5\n     $ Sepal.Width : num  3.5 3 3.2 3.1 3.6\n\n    ```", "```py\n    > setosa.data = iris[iris$Species==\"setosa\",1:5]\n    > str(setosa.data)\n    'data.frame':\t50 obs. of  5 variables:\n     $ Sepal.Length: num  5.1 4.9 4.7 4.6 5 5.4 4.6 5 4.4 4.9 ...\n     $ Sepal.Width : num  3.5 3 3.2 3.1 3.6 3.9 3.4 3.4 2.9 3.1 ...\n     $ Petal.Length: num  1.4 1.4 1.3 1.5 1.4 1.7 1.4 1.5 1.4 1.5 ...\n     $ Petal.Width : num  0.2 0.2 0.2 0.2 0.2 0.4 0.3 0.2 0.2 0.1 ...\n     $ Species     : Factor w/ 3 levels \"setosa\",\"versicolor\",..: 1 1 1 1 1 1 1 1 1 1 ...\n\n    ```", "```py\n    > which(iris$Species==\"setosa\")\n     [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18\n    [19] 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36\n    [37] 37 38 39 40 41 42 43 44 45 46 47 48 49 50\n\n    ```", "```py\n    > setosa.data = iris[which(iris$Species==\"setosa\"),1:5]\n    > str(setosa.data)\n    'data.frame':\t50 obs. of  5 variables:\n     $ Sepal.Length: num  5.1 4.9 4.7 4.6 5 5.4 4.6 5 4.4 4.9 ...\n     $ Sepal.Width : num  3.5 3 3.2 3.1 3.6 3.9 3.4 3.4 2.9 3.1 ...\n     $ Petal.Length: num  1.4 1.4 1.3 1.5 1.4 1.7 1.4 1.5 1.4 1.5 ...\n     $ Petal.Width : num  0.2 0.2 0.2 0.2 0.2 0.4 0.3 0.2 0.2 0.1 ...\n     $ Species     : Factor w/ 3 levels \"setosa\",\"versicolor\",..: 1 1 1 1 1 1 1 1 1 1 ...\n\n    ```", "```py\n    > Sepal.data = subset(iris, select=c(\"Sepal.Length\", \"Sepal.Width\"))\n    > str(Sepal.data)\n    'data.frame': 150 obs. of  2 variables:\n     $ Sepal.Length: num  5.1 4.9 4.7 4.6 5 5.4 4.6 5 4.4 4.9 ...\n     $ Sepal.Width : num  3.5 3 3.2 3.1 3.6 3.9 3.4 3.4 2.9 3.1 ...\n\n    ```", "```py\n    > setosa.data = subset(iris, Species ==\"setosa\")\n    > str(setosa.data)\n    'data.frame': 50 obs. of  5 variables:\n     $ Sepal.Length: num  5.1 4.9 4.7 4.6 5 5.4 4.6 5 4.4 4.9 ...\n     $ Sepal.Width : num  3.5 3 3.2 3.1 3.6 3.9 3.4 3.4 2.9 3.1 ...\n     $ Petal.Length: num  1.4 1.4 1.3 1.5 1.4 1.7 1.4 1.5 1.4 1.5 ...\n     $ Petal.Width : num  0.2 0.2 0.2 0.2 0.2 0.4 0.3 0.2 0.2 0.1 ...\n     $ Species     : Factor w/ 3 levels \"setosa\",\"versicolor\",..: 1 1 1 1 1 1 1 1 1 1 ...\n\n    ```", "```py\n    > example.data= subset(iris, Petal.Length <=1.4 & Petal.Width >= 0.2, select=Species )\n    > str(example.data)\n    'data.frame': 21 obs. of  1 variable:\n     $ Species: Factor w/ 3 levels \"setosa\",\"versicolor\",..: 1 1 1 1 1 1 1 1 1 1 ...\n\n    ```", "```py\n> flower.type = data.frame(Species = \"setosa\", Flower = \"iris\")\n> merge(flower.type, iris[1:3,], by =\"Species\")\n Species Flower Sepal.Length Sepal.Width Petal.Length Petal.Width\n1  setosa   iris          5.1         3.5          1.4         0.2\n2  setosa   iris          4.9         3.0          1.4         0.2\n3  setosa   iris          4.7         3.2          1.3         0.2\n\n```", "```py\n> head(iris[order(iris$Sepal.Length, decreasing = TRUE),])\n Sepal.Length Sepal.Width Petal.Length Petal.Width   Species\n132          7.9         3.8          6.4         2.0 virginica\n118          7.7         3.8          6.7         2.2 virginica\n119          7.7         2.6          6.9         2.3 virginica\n123          7.7         2.8          6.7         2.0 virginica\n136          7.7         3.0          6.1         2.3 virginica\n106          7.6         3.0          6.6         2.1 virginica\n\n```", "```py\n> sub(\"e\", \"q\", names(iris))\n[1] \"Sqpal.Length\" \"Sqpal.Width\"  \"Pqtal.Length\" \"Pqtal.Width\"  \"Spqcies\" \n> gsub(\"e\", \"q\", names(iris))\n[1] \"Sqpal.Lqngth\" \"Sqpal.Width\"  \"Pqtal.Lqngth\" \"Pqtal.Width\"  \"Spqciqs\"\n\n```", "```py\n    > data(iris)\n\n    ```", "```py\n    > class(iris)\n     [1] \"data.frame\"\n\n    ```", "```py\n    > mean(iris$Sepal.Length)\n    [1] 5.843333\n    > sd(iris$Sepal.Length)\n    [1] 0.8280661\n    > var(iris$Sepal.Length)\n    [1] 0.6856935\n    > min(iris$Sepal.Length)\n    [1] 4.3\n    > max(iris$Sepal.Length)\n    [1] 7.9\n    > median(iris$Sepal.Length)\n    [1] 5.8\n    > range(iris$Sepal.Length)\n    [1] 4.3 7.9\n    > quantile(iris$Sepal.Length)\n     0%  25%  50%  75% 100% \n     4.3  5.1  5.8  6.4  7.9\n\n    ```", "```py\n    > sapply(iris[1:4], mean, na.rm=TRUE)\n    Sepal.Length  Sepal.Width Petal.Length  Petal.Width \n     5.843333     3.057333     3.758000     1.199333 \n\n    ```", "```py\n    > summary(iris)\n    Sepal.Length    Sepal.Width     Petal.Length    Petal.Width    Species \n     Min.   :4.300   Min.   :2.000   Min.   :1.000   Min.   :0.100   setosa    :50 \n     1st Qu.:5.100   1st Qu.:2.800   1st Qu.:1.600   1st Qu.:0.300   versicolor:50 \n     Median :5.800   Median :3.000   Median :4.350   Median :1.300   virginica :50 \n     Mean   :5.843   Mean   :3.057   Mean   :3.758   Mean   :1.199 \n     3rd Qu.:6.400   3rd Qu.:3.300   3rd Qu.:5.100   3rd Qu.:1.800 \n     Max.   :7.900   Max.   :4.400   Max.   :6.900   Max.   :2.500\n\n    ```", "```py\n    > cor(iris[,1:4])\n     Sepal.Length Sepal.Width Petal.Length Petal.Width\n    Sepal.Length    1.0000000  -0.1175698    0.8717538   0.8179411\n    Sepal.Width    -0.1175698   1.0000000   -0.4284401  -0.3661259\n    Petal.Length    0.8717538  -0.4284401    1.0000000   0.9628654\n    Petal.Width     0.8179411  -0.3661259    0.9628654   1.0000000\n\n    ```", "```py\n    > cov(iris[,1:4])\n     Sepal.Length Sepal.Width Petal.Length Petal.Width\n    Sepal.Length    0.6856935  -0.0424340    1.2743154   0.5162707\n    Sepal.Width    -0.0424340   0.1899794   -0.3296564  -0.1216394\n    Petal.Length    1.2743154  -0.3296564    3.1162779   1.2956094\n    Petal.Width     0.5162707  -0.1216394    1.2956094   0.5810063\n\n    ```", "```py\n    > t.test(iris$Petal.Width[iris$Species==\"setosa\"], \n    +        iris$Petal.Width[iris$Species==\"versicolor\"])\n\n     Welch Two Sample t-test\n\n    data:  iris$Petal.Width[iris$Species == \"setosa\"] and iris$Petal.Width[iris$Species == \"versicolor\"]\n    t = -34.0803, df = 74.755, p-value < 2.2e-16\n    alternative hypothesis: true difference in means is not equal to 0\n    95 percent confidence interval:\n     -1.143133 -1.016867\n    sample estimates:\n    mean of x mean of y \n     0.246     1.326\n\n    ```", "```py\n    > cor.test(iris$Sepal.Length, iris$Sepal.Width)\n\n     Pearson's product-moment correlation\n\n    data:  iris$Sepal.Length and iris$Sepal.Width\n    t = -1.4403, df = 148, p-value = 0.1519\n    alternative hypothesis: true correlation is not equal to 0\n    95 percent confidence interval:\n     -0.27269325  0.04351158\n    sample estimates:\n     cor \n    -0.1175698 \n\n    ```", "```py\n    > aggregate(x=iris[,1:4],by=list(iris$Species),FUN=mean)\n\n    ```", "```py\n    >  library(reshape)\n    >  iris.melt <- melt(iris,id='Species')\n    >  cast(Species~variable,data=iris.melt,mean,\n     subset=Species %in% c('setosa','versicolor'),\n     margins='grand_row') \n\n    ```", "```py\n    > data(iris)\n\n    ```", "```py\n    > table.iris = table(iris$Species)\n    > table.iris\n\n     setosa versicolor  virginica \n     50         50         50 \n\n    ```", "```py\n    > pie(table.iris)\n\n    ```", "```py\n    > hist(iris$Sepal.Length)\n\n    ```", "```py\n    > boxplot(Petal.Width ~ Species, data = iris)\n\n    ```", "```py\n    > plot(x=iris$Petal.Length, y=iris$Petal.Width, col=iris$Species)\n\n    ```", "```py\n    > pairs(iris[1:4], main = \"Edgar Anderson's Iris Data\", pch = 21, bg = c(\"red\", \"green3\", \"blue\")[unclass(iris$Species)])\n\n    ```", "```py\n    > iris.data = read.csv(url(\"http://archive.ics.uci.edu/ml/machine-learning-databases/iris/iris.data\"), header = FALSE,  col.names = c(\"Sepal.Length\", \"Sepal.Width\", \"Petal.Length\", \"Petal.Width\", \"Species\"))\n    > head(iris.data)\n     Sepal.Length Sepal.Width Petal.Length Petal.Width   Species\n    1         5.1         3.5          1.4         0.2 Iris-setosa\n    2         4.9         3.0          1.4         0.2 Iris-setosa\n    3         4.7         3.2          1.3         0.2 Iris-setosa\n    4         4.6         3.1          1.5         0.2 Iris-setosa\n    5         5.0         3.6          1.4         0.2 Iris-setosa\n    6         5.4         3.9          1.7         0.4 Iris-setosa\n\n    ```"]