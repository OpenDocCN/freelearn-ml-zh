["```py\n    az extension add -n azure-cli-ml\n    ```", "```py\n    az group create -n automl-cli-group -l eastus\n    ```", "```py\n    az ml workspace create -w automl-ws -g automl-cli-group\n    ```", "```py\n    import azureml.core\n    from azureml.core.workspace import Workspace\n    from azureml.core.compute import ComputeTarget, AmlCompute\n    ```", "```py\n    ws = Workspace.from_config()\n    ```", "```py\n    compute_name = 'automl-cluster'\n    compute_min_nodes = 0\n    compute_max_nodes = 4\n    vm_size = 'Standard_DS3_v2' \n    idle_seconds = 1200\n    ```", "```py\n    Compute_Config = AmlCompute.provisioning_configuration(vm_size=vm_size, min_nodes=compute_min_nodes, max_nodes=compute_max_nodes, idle_seconds_before_scaledown = idle_seconds)\n    ```", "```py\n    compute_target = ComputeTarget.create(ws, compute_name, provisioning_config)\n    compute_target.wait_for_completion(show_output=True)\n    ```", "```py\n    az ml computetarget create computeinstance -n clicompute -s \"STANDARD_DS3_V2\" -v\n    ```", "```py\n    az ml computetarget create amlcompute -n clicluster –min-nodes 0 –max-nodes 1 -s STANDARD_DS3_V2\n    ```", "```py\n    from azureml.opendatasets import Diabetes\n    from azureml.core import Dataset\n    ```", "```py\n    diabetes_tabular = Diabetes.get_tabular_dataset()\n    ```", "```py\n    from azureml.core.workspace import Workspace\t\n    ws = Workspace.from_config()\n    diabetes = diabetes_tabular.register(workspace=ws, name='Diabetes Sample')\n    ```"]