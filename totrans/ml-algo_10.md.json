["```py\nfrom sklearn.datasets import make_blobs\n\n>>> nb_samples = 25\n>>> X, Y = make_blobs(n_samples=nb_samples, n_features=2, centers=3, cluster_std=1.5)\n```", "```py\nfrom scipy.spatial.distance import pdist\n\n>>> Xdist = pdist(X, metric='euclidean')\n```", "```py\nfrom scipy.cluster.hierarchy import linkage\n\n>>> Xl = linkage(Xdist, method='ward')\n```", "```py\nfrom scipy.cluster.hierarchy import dendrogram\n\n>>> Xd = dendrogram(Xl)\n```", "```py\n>>> nb_samples = 3000\n>>> X, _ = make_blobs(n_samples=nb_samples, n_features=2, centers=8, cluster_std=2.0)\n```", "```py\nfrom sklearn.cluster import AgglomerativeClustering\n\n>>> ac = AgglomerativeClustering(n_clusters=8, linkage='complete')\n>>> Y = ac.fit_predict(X)\n```", "```py\n>>> ac = AgglomerativeClustering(n_clusters=8, linkage='average')\n>>> Y = ac.fit_predict(X)\n```", "```py\n>>> ac = AgglomerativeClustering(n_clusters=8)\n>>> Y = ac.fit_predict(X)\n```", "```py\nfrom sklearn.datasets import make_circles\n\n>>> nb_samples = 3000\n>>> X, _ = make_circles(n_samples=nb_samples, noise=0.05)\n```", "```py\n>>> ac = AgglomerativeClustering(n_clusters=20, linkage='average')\n>>> ac.fit(X)\n```", "```py\nfrom sklearn.neighbors import kneighbors_graph\n\n>>> acc = []\n>>> k = [50, 100, 200, 500]\n\n>>> for i in range(4):\n>>>    kng = kneighbors_graph(X, k[i])\n>>>    ac1 = AgglomerativeClustering(n_clusters=20, connectivity=kng, linkage='average')\n>>>    ac1.fit(X)\n>>>    acc.append(ac1)\n```"]