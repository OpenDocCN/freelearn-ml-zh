- en: '5'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '5'
- en: IA Process and Work Queue Designs for HITL
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: HITL 的 IA 流程和工作队列设计
- en: The primary difference between RPA and IA lies in the *certainty of outcomes*
    and *risk*. In some cases, people implement so-called “IA” that doesn’t incur
    any risk. A Chatbot interface that classifies human input, which further triggers
    traditional RPA to run, falls into this category. While there’s ML in the chatbot
    portion, the risk is contained and resolved before RPA even begins. For these
    types of IA Processes, you really only need to know how to interface with the
    ML part (see *Chapters 1*, *2*, and *3*), and this chapter can be omitted.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: RPA 和 IA 之间的主要区别在于结果的**确定性**和**风险**。在某些情况下，人们实施所谓的“IA”，不会产生任何风险。一个将人类输入分类的聊天机器人界面，进而触发传统的
    RPA 运行，就属于这一类。虽然聊天机器人部分有 ML，但风险在 RPA 开始之前就被控制并解决了。对于这类 IA 流程，你实际上只需要知道如何与 ML 部分接口（参见第
    1、2、3 章），本章可以省略。
- en: For IA cases that *do* change the risk profile, by creating non-deterministic
    process outcomes, you’re hopefully convinced that designing an IA process to accommodate
    HITL should be standard practice, even if the team decides to keep HITL turned
    off. There could be an update to the prediction model, regulatory changes, new
    business requirements, and so on that will lead to enabling HITL reviews again.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 对于那些通过创建非确定性流程结果来改变风险配置的 IA 案例来说，你可能会相信，设计一个 IA 流程以适应 HITL 应该是标准做法，即使团队决定保持
    HITL 关闭。可能会有预测模型的更新、监管变化、新的业务需求等，这将导致再次启用 HITL 审查。
- en: The number of Processes and the number of Work Queues are two fundamental design
    decisions that an IA Solution Designer must make. Almost all of the other design
    elements, such as whether to use Tags, Statuses, Deferrals, and so on depend on
    these two decisions. This chapter discusses when to choose *one versus multiple
    Processes* and *one versus multiple Work Queues* when implementing IA in BP. It’s
    important to keep in mind that this discussion focuses specifically on IA – meaning
    a design that enables ML prediction and HITL review afterward. Other use-case-specific
    design topics involving Work Queues, such as parent-child Queues, won’t be presented.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 进程数量和工作队列数量是 IA 解决方案设计师必须做出的两个基本设计决策。几乎所有其他设计元素，例如是否使用标签、状态、延期等，都取决于这两个决策。本章讨论在
    BP 中实施 IA 时，何时选择“一个进程与多个进程”以及“一个工作队列与多个工作队列”。重要的是要记住，这次讨论专门针对 IA —— 意味着一种能够实现后续
    ML 预测和 HITL 审查的设计。其他涉及工作队列的特定用例设计主题，如父子队列，将不会介绍。
- en: 'More specifically, we will be looking at the pros and cons of the following:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 更具体地说，我们将探讨以下内容的优缺点：
- en: Single BP Process, single Work Queue designs
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 单 BP 流程、单工作队列设计
- en: Multiple BP Process, single Work Queue designs
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 多 BP 流程、单工作队列设计
- en: Multiple BP Processes, multiple Work Queue designs
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 多个 BP 流程、多个工作队列设计
- en: Technical requirements
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'Download and import the three `.bprelease` files in the `ch5` folder on GitHub:
    [https://github.com/PacktPublishing/Intelligent-Automation-with-Blue-Prism/tree/main/ch5](https://github.com/PacktPublishing/Intelligent-Automation-with-Blue-Prism/tree/main/ch5)'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 下载并导入 GitHub 上 `ch5` 文件夹中的三个 `.bprelease` 文件：[https://github.com/PacktPublishing/Intelligent-Automation-with-Blue-Prism/tree/main/ch5](https://github.com/PacktPublishing/Intelligent-Automation-with-Blue-Prism/tree/main/ch5)
- en: The GitHub folder also has an Excel file that will be saved as part of *Example
    1* of this chapter.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: GitHub 文件夹中还有一个 Excel 文件，它将作为本章的 *示例 1* 的一部分保存。
- en: Single-Process, single-Work Queue designs
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 单进程、单工作队列设计
- en: If there’s such a thing as a *default* solution design, it would be a *single*
    BP Process and a *single* Work Queue created from the *Blue Prism Process Template*.
    As we saw in the examples in [*Chapter 4*](B18416_04.xhtml#_idTextAnchor062),
    this *simple* design can absolutely be used for IA.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 如果存在所谓的“默认”解决方案设计，那将是从“蓝 prism 流程模板”创建的单个 BP 流程和单个工作队列。正如我们在[第 4 章](B18416_04.xhtml#_idTextAnchor062)的例子中看到的那样，这种“简单”的设计绝对可以用于
    IA。
- en: In this section, we’ll discuss the two main IA solution designs that involve
    a *single* Process and a *single* Work Queue, including their pros, cons, and
    when you might choose them.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将讨论涉及单个进程和单个工作队列的两个主要 IA 解决方案设计，包括它们的优缺点以及何时选择它们。
- en: Asynchronous (non-blocking) reviews
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 异步（非阻塞）审查
- en: In an **asynchronous review** design, the BP Process *doesn’t wait* for the
    current Item to be reviewed so that it can continue processing. Instead, the Process
    suspends work on the current Item that needs HITL review and moves on to the next
    one. This is probably how most IA Processes should be designed since reviewers
    usually can’t predict when an Item needs review or how long it will take before
    the Item is actually reviewed.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在**异步审查**设计中，BP流程**不等待**当前项目被审查，以便它可以继续处理。相反，流程暂停对当前需要HITL审查的项目的工作，并继续处理下一个项目。这可能是大多数IA流程应该被设计的方式，因为审查者通常无法预测何时需要审查项目或项目实际审查需要多长时间。
- en: All three of the examples from [*Chapter 4*](B18416_04.xhtml#_idTextAnchor062)
    were designed to operate asynchronously. Statuses determine when an Item is pending
    review, and Deferrals prevent Items from being selected by **Get Next Item** too
    quickly.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 三个例子都来自[*第四章*](B18416_04.xhtml#_idTextAnchor062)，它们都被设计成异步操作。状态决定项目何时处于待审查状态，而延期防止项目被**获取下一个项目**操作选得太快。
- en: Let’s evaluate this *asynchronous review* design from the perspective of **functionality**,
    **maintainability** (in terms of how easy it will be to modify in the future),
    and **operability**. We’ll be using these three criteria to evaluate all of the
    designs in this chapter.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从**功能性**、**可维护性**（从未来修改的难易程度来看）和**可操作性**的角度来评估这种**异步审查**设计。我们将使用这三个标准来评估本章中所有设计。
- en: Functionality
  id: totrans-19
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 功能性
- en: This design allows for Work Queue Items to be indefinitely Deferred until they
    are reviewed by a human. Items that aren’t Deferred can continue automated processing.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 此设计允许工作队列项目无限期地延期，直到它们被人工审查。未延期的项目可以继续自动化处理。
- en: The Process continually switches between two distinct cycles of operation. The
    first cycle is creating review data and checking for completed HITL reviews. The
    next is picking up an Item for traditional RPA processing.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 流程不断在两个不同的操作周期之间切换。第一个周期是创建审查数据和检查完成的HITL审查。下一个周期是选择项目进行传统的RPA处理。
- en: Maintainability
  id: totrans-22
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 可维护性
- en: In terms of maintainability, all of the logic, both business and IA-related,
    is contained in a *single* BP Process. This isn’t clearly good nor bad, as some
    people consider it easier to maintain than a multi-Process solution. My view is
    that having too much in a single Process – in our case, the business logic, the
    ML calling code, and the HITL logic – makes the solution less maintainable. Containing
    everything in a single Process prevents multiple developers from editing it at
    once, which is undesirable if there’s lots of logic there.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在可维护性方面，所有逻辑，无论是业务逻辑还是IA相关的逻辑，都包含在一个**单一**的BP流程中。这并不明显是好事还是坏事，因为有些人认为它比多流程解决方案更容易维护。我的观点是，在单一流程中包含太多内容——在我们的案例中，业务逻辑、ML调用代码和HITL逻辑——会使解决方案的可维护性降低。将所有内容都包含在一个流程中，防止多个开发者同时编辑它，这在逻辑很多的情况下是不理想的。
- en: Operability
  id: totrans-24
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 可操作性
- en: The Controller needs to know how to check Item Statuses in order to find out
    which Items haven’t been reviewed yet. They need to know exactly which Statuses
    exist so that they can edit the Statuses manually in the Control Room. This is
    how they can force an Item to continue automated processing, even if it’s flagged
    for review. There will always be added operational complexity when moving from
    RPA to IA, regardless of the specific Process and Work Queue design that’s chosen.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 控制器需要知道如何检查项目状态，以便找出哪些项目尚未被审查。他们需要确切知道哪些状态存在，这样他们就可以在控制室中手动编辑状态。这样他们就可以强制项目继续自动化处理，即使它被标记为需要审查。无论选择的具体流程和工作队列设计如何，从RPA迁移到IA时，总会增加操作复杂性。
- en: Controllers also need to find out whether Items that are waiting for review
    are stuck in limbo. There’s a chance that the data shared between the Digital
    Worker and the reviewer, whether it be an Excel file in a shared folder, a database
    record, or a web interface, is incorrectly generated or accidentally deleted.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 控制器还需要找出等待审查的项目是否陷入僵局。有可能数字工作者和审查者之间共享的数据，无论是共享文件夹中的Excel文件、数据库记录还是网络界面，被错误生成或意外删除。
- en: Pros
  id: totrans-27
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 优点
- en: An advantage of the asynchronous review design is that everything is contained
    in one Process, making the Session usage (license consumption) easy to predict.
    The scheduling is also simple to manage. This benefits companies that need to
    carefully control how their licenses are used. Statistics about a case’s Total
    Work Time are also clear from the Control Room since we only have a single Work
    Queue.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 异步审查设计的优点在于所有内容都包含在一个流程中，这使得会话使用（许可证消耗）易于预测。调度管理也相对简单。这对需要仔细控制许可证使用方式的公司来说是有益的。由于我们只有一个工作队列，所以从控制室中可以清楚地看到关于案件总工作时间的统计数据。
- en: Cons
  id: totrans-29
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 缺点
- en: One downside of this design is that Work Queue Items can’t be picked up for
    work immediately after it’s reviewed (assuming that it’s desirable to do so).
    It always has to wait for the Deferral time to pass before it can be picked up
    by **Get** **Next Item**.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 这种设计的缺点之一是，工作队列项目在审查后不能立即开始工作（假设这是可取的）。它必须等待延期时间过去，才能由**获取下一个项目**来获取。
- en: 'Another downside of this design is that checking for reviewed predictions so
    that their Statuses can be updated should probably occur outside of the Process
    Template’s Work Block. In the following figure, we see that the Process checks
    for completed human reviews right before a new Item is worked on:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 这种设计的另一个缺点是，为了更新已审查预测的状态，检查应可能发生在流程模板的工作块之外。在下面的图中，我们看到流程在处理新项目之前检查了已完成的人工审查：
- en: '![Figure 5.1 – Checking for a reviewed prediction should only happen in between
    Items](img/B18416_05_1.jpg)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![图5.1 – 检查已审查的预测应仅在项目之间进行](img/B18416_05_1.jpg)'
- en: Figure 5.1 – Checking for a reviewed prediction should only happen in between
    Items
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.1 – 检查已审查的预测应仅在项目之间进行
- en: This is required because the logic that checks for completed reviews is unrelated
    to the case-specific logic of the Item that’s locked by **Get Next Item**. We
    don’t want an Exception that occurs in the review-checking logic to cause an Item
    that’s being worked on to be an Exception as well. The compromise that’s made
    by placing checking logic outside the Work Block is that the Process can Terminate
    if an Exception happens there. A *two*-Process design can decouple the review-checking
    logic from the actual business process logic, mitigating this issue.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 这是因为检查已完成审查的逻辑与被**获取下一个项目**锁定的项目特定的逻辑无关。我们不希望审查检查逻辑中发生的异常导致正在处理的项目也成为异常。将检查逻辑放在工作块之外所做的妥协是，如果那里发生异常，流程可以终止。一个**双流程**设计可以将审查检查逻辑与实际业务流程逻辑解耦，从而减轻这个问题。
- en: Another concern with this design lies in the amount of time spent performing
    the review checking versus actually processing a case. They’re two relatively
    independent activities that need to run within the same Session. Depending on
    actual conditions, you might spend so much time in the review-checking logic that
    it *negatively impacts the throughput of working cases*. Imagine that checking
    for completed reviews requires logging in to a custom website. If this website
    is slow or requires lots of navigation between pages, the gap between picking
    up cases using **Get Next Item** due to checking for completed reviews can become
    very large.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 关于这种设计的另一个担忧在于执行审查检查与实际处理案件所花费的时间量。它们是两个相对独立的活动，需要在同一会话中运行。根据实际情况，你可能会在审查检查逻辑上花费大量时间，从而**负面影响处理案件的处理能力**。想象一下，检查已完成审查需要登录到自定义网站。如果这个网站速度慢或需要在多个页面之间进行大量导航，由于检查已完成审查而使用**获取下一个项目**来获取案件之间的差距可能会变得非常大。
- en: A full example of this one-Process, one-Work Queue, asynchronous design can
    be found in [*Chapter 4*](B18416_04.xhtml#_idTextAnchor062), *Example 3*.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 一个完整的单一流程、单一工作队列、异步设计的例子可以在[*第4章*](B18416_04.xhtml#_idTextAnchor062)，*示例3*中找到。
- en: Now that we’ve discussed the merits and demerits of the asynchronous review
    design, let’s look at a different *single*-Process, *single*-Work Queue design
    for *synchronous* reviews.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 既然我们已经讨论了异步审查设计的优点和缺点，让我们看看一种不同的单一流程、单一工作队列设计，用于同步审查。
- en: Synchronous (blocking) reviews
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 同步（阻塞）审查
- en: If we have **SLA requirements** that require manual review to complete in a
    short timeframe, we should consider a **synchronous review** design. In this design,
    the Process blocks and waits for the Work Queue Item's review to be completed
    before progressing.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们有**SLA要求**，需要手动审查在短时间内完成，我们应该考虑**同步审查**设计。在这个设计中，流程会阻塞并等待工作队列项目审查完成后再继续。
- en: Functionality
  id: totrans-40
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 功能性
- en: In a synchronous review Process, we must complete the current Item, including
    waiting for HITL review, before moving on to other Items. This is often desired
    when IA is backing a real-time customer interaction. Recall that there’s a real
    IA use case where ML is used to help verify pharmaceutical prescriptions. Depending
    on the setting where this is used – such as a pharmacy, a doctor’s office, or
    a hospital – the customer’s expectation of receiving their medication can be considered
    “real-time,” and as low as a few minutes.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在同步审查流程中，我们必须完成当前项目，包括等待HITL审查，然后才能继续处理其他项目。当IA支持实时客户互动时，这通常是所希望的。回想一下，有一个真实的IA用例，其中ML被用来帮助验证药物处方。根据这种设置的使用情况——例如药店、医生办公室或医院——客户对收到药物的需求可以被认为是“实时”的，时间短至几分钟。
- en: Under a synchronous review design, the BP Process enters a polling loop that
    blocks and continually checks to see whether the prediction has been reviewed.
    If the review is completed within the SLA period, automated processing continues.
    If the ML review doesn’t complete within the SLA period, the case is marked as
    an Exception.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在同步审查设计下，BP流程进入轮询循环，阻塞并持续检查预测是否已审查。如果审查在SLA期限内完成，则自动处理继续。如果ML审查没有在SLA期限内完成，则案件被标记为异常。
- en: Maintainability
  id: totrans-43
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 可维护性
- en: Similar to the asynchronous design, everything is contained within a *single*
    Process, which to most developers could be considered maintainable. The logic
    to implement a polling loop is simpler than the logic for the asynchronous design
    and easy for even new developers to grasp.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 与异步设计类似，所有内容都包含在一个*单个*进程中，这对大多数开发者来说可能是可维护的。实现轮询循环的逻辑比异步设计的逻辑简单，即使是新开发者也能轻松掌握。
- en: Operability
  id: totrans-45
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 可操作性
- en: Control Room operations are straightforward compared to the asynchronous design
    – Items that aren’t reviewed within the time limit are marked as an Exception.
    Controllers don’t really need to do anything different from non-IA solutions.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 与异步设计相比，控制室操作简单。在时间限制内未审查的项目被标记为异常。控制器实际上不需要与非IA解决方案不同的操作。
- en: Pros
  id: totrans-47
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 优点
- en: There aren’t many advantages to this design besides the overall simplicity of
    the solution. It’s easy to understand, modify the polling logic, schedule and
    predict the license usage. The strongest reason to choose this design is to enable
    real-time reviews.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 除了解决方案的整体简单性之外，这种设计没有太多优点。它易于理解，修改轮询逻辑，安排和预测许可证使用。选择这种设计的最强理由是能够实现实时审查。
- en: Cons
  id: totrans-49
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 缺点
- en: The most significant downside of this design is *significantly lowered case
    throughput*, which is a trade-off to meeting individual case SLAs. If there’s
    also a high volume of cases, more BP sessions need to be concurrently running,
    resulting in more licenses being used. Time is inevitably wasted in the polling
    loop, and this waste increases as the SLA period is longer.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 这种设计的最大缺点是*显著降低的案件吞吐量*，这是为了满足个别案件SLA而做出的权衡。如果案件数量也很大，需要同时运行更多的BP会话，从而导致使用更多许可证。在轮询循环中不可避免地会浪费时间，而且这种浪费随着SLA期限的延长而增加。
- en: 'Let’s look at an example of this single-Process, single-Work Queue-blocking
    design for a hospital setting. At a high level, we will be going through the following
    four steps:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看一个医院设置中这种单进程、单工作队列阻塞设计的例子。从高层次来看，我们将进行以下四个步骤：
- en: Examine the contents of the example’s Release file and import additional dependencies.
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查示例的发布文件内容并导入额外的依赖项。
- en: Understand the logic to create `.html` review files with images.
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 理解创建带有图像的`.html`审查文件的逻辑。
- en: Examine the polling logic used to achieve synchronous reviews.
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查用于实现同步审查的轮询逻辑。
- en: Run the example to see the result in the Control Room.
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行示例，在控制室中查看结果。
- en: Example 1 – polling for reviewed predictions
  id: totrans-56
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 示例1 - 轮询已审查的预测
- en: In this example, we’ll use the prescription medication scenario that was described
    earlier. Imagine that we’re working on a project for a private hospital where
    roughly 200 patients are processed per day. Each of these patients is expected
    to need medication from the hospital pharmacy. To shorten the time spent waiting
    and improve patient satisfaction at the pharmacy, the hospital is looking to use
    image-based ML to automatically *count the number of pills* for their most commonly
    prescribed medications.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 在本例中，我们将使用之前描述的处方药场景。想象一下，我们正在为一个每天处理约200名患者的私人医院项目工作。预计每位患者都需要从医院药房获取药物。为了缩短患者等待时间并提高药房的患者满意度，医院正在寻求使用基于图像的机器学习来自动
    *计数常用处方的药片数量*。
- en: The ML team has already built a model for multiple types of medication and determined
    the thresholds where they want human intervention for manual review. To meet the
    goals of the project (reduce the time spent waiting by patients), we’ve decided
    on a blocking process design where the Digital Worker waits for, at most, *two
    minutes* for a prediction to be reviewed. A small team of trained remote workers
    will be responsible for performing manual review using a simple web interface.
    The web interface is chosen as the reviewers need to look at an image of the medication.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 机器学习团队已经为多种药物类型构建了模型，并确定了需要人工干预进行手动审阅的阈值。为了满足项目的目标（减少患者等待时间），我们决定采用阻塞过程设计，其中数字工作者最多等待
    *两分钟* 进行预测审阅。一支由受过培训的远程工作人员组成的小团队将负责使用简单的Web界面进行手动审阅。选择Web界面是因为审阅者需要查看药物图片。
- en: The Digital Worker will save `.html` files to a network share folder. One `.html`
    file contains the image of the prescription medication and a drop-down list for
    the reviewer to choose the amount of medication shown in the image. The `.html`
    filename will contain the Item ID. The concept of batch size isn’t relevant to
    this case as we don’t want to review multiple predictions in a single `.``html`
    file.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 数字工作者会将 `.html` 文件保存到网络共享文件夹中。一个 `.html` 文件包含处方药的图片和一个下拉列表，供审阅者选择图片中显示的药物剂量。`.html`
    文件名将包含项目ID。批量大小的概念在此情况下不适用，因为我们不希望在单个 `.html` 文件中审阅多个预测。
- en: Our first step is to verify the contents of the `.bprelease` file and import
    some additional files needed for this example.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的第一步是验证 `.bprelease` 文件的内容，并导入本例所需的额外文件。
- en: Verify the Release contents and import dependencies
  id: totrans-61
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 验证发布内容并导入依赖项
- en: 'Here, we’ll examine the `.bprelease` file contents and import a third-party
    asset from the DX. Then, we’ll download an Excel file containing the thresholds
    for human review and ensure that it’s saved to the correct location:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们将检查 `.bprelease` 文件内容，并从DX导入第三方资产。然后，我们将下载包含人工审阅阈值的Excel文件，并确保将其保存到正确的位置：
- en: 'Verify that *one* Process, *one* Work Queue, and *four* Environment Variables
    have been imported:'
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证是否已导入 *一个* 流程、*一个* 工作队列和 *四个* 环境变量：
- en: '![Figure 5.2 – The Release contents of Example 1](img/B18416_05_2.jpg)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![图5.2 – 示例1的发布内容](img/B18416_05_2.jpg)'
- en: Figure 5.2 – The Release contents of Example 1
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.2 – 示例1的发布内容
- en: Download and Import the `.html` files. Note that this step has been completed
    if you’ve gone through *Example 3, GCP Cloud Vision batch OCR processing* section
    of[*Chapter 2*](B18416_02.xhtml#_idTextAnchor028). Ignore this step if **Utility
    – File Manipulation** has already been imported.
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载并导入 `.html` 文件。注意，如果您已经完成了[*第2章*](B18416_02.xhtml#_idTextAnchor028)中“示例3，GCP
    Cloud Vision批量OCR处理”部分，则此步骤已完成。如果**实用工具 – 文件操作**已经导入，则忽略此步骤。
- en: Download the Excel file from [https://github.com/PacktPublishing/Intelligent-Automation-with-Blue-Prism/blob/main/ch5/Ch5%20Example%201%20Thresholds.xlsx](https://github.com/PacktPublishing/Intelligent-Automation-with-Blue-Prism/blob/main/ch5/Ch5%20Example%201%20Thresholds.xlsx).
    This contains the thresholds for triggering the review of different medication
    types.
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 [https://github.com/PacktPublishing/Intelligent-Automation-with-Blue-Prism/blob/main/ch5/Ch5%20Example%201%20Thresholds.xlsx](https://github.com/PacktPublishing/Intelligent-Automation-with-Blue-Prism/blob/main/ch5/Ch5%20Example%201%20Thresholds.xlsx)
    下载Excel文件。该文件包含触发不同药物类型审阅的阈值。
- en: Copy the Excel file into the path specified by the Environment Variable named
    `C:/Users/Public/Ch5 Example` `1 Thresholds.xlsx`.
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将Excel文件复制到名为 `C:/Users/Public/Ch5 Example` 的环境变量指定的路径中 `1 Thresholds.xlsx`。
- en: 'Open the Excel file. This file stores the thresholds for the different types
    of medication (if we have more medication types, we can add more rows to the spreadsheet):'
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开Excel文件。此文件存储不同类型药物（如果我们有更多药物类型，我们可以在电子表格中添加更多行）的阈值：
- en: '![Figure 5.3 – The threshold configuration Excel file](img/B18416_05_3.jpg)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![图5.3 – 阈值配置Excel文件](img/B18416_05_3.jpg)'
- en: Figure 5.3 – The threshold configuration Excel file
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.3 – 阈值配置Excel文件
- en: Locate the Environment Variable named `.html` files as the interface to review
    predictions. After the reviewer has reviewed a prediction, they’re expected to
    press a button named **Submit Reviewed Prediction**, which either triggers the
    browser’s file download dialog to pop up or automatically downloads a file onto
    your PC. The behavior depends on how your browser is set up.
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定位名为`.html`文件的环境变量，作为审查预测的接口。在审查者审查完预测后，他们预计会按下名为**提交已审查预测**的按钮，这将触发浏览器文件下载对话框弹出或自动将文件下载到您的PC上。该行为取决于您的浏览器设置。
- en: '![Figure 5.4 – The static .html review interface](img/B18416_05_4.jpg)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![图5.4 – 静态.html审查界面](img/B18416_05_4.jpg)'
- en: Figure 5.4 – The static .html review interface
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.4 – 静态.html审查界面
- en: Under more realistic conditions, we wouldn’t use static `.html` files. We’d
    have a web server serving the review web pages, where pressing the **Submit**
    button would automatically copy the necessary file to a shared location. This
    would remove the need for the user to download a file altogether. However, setting
    up a web server is outside the scope of this book and unnecessary to illustrate
    the concepts of a synchronous review design.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在更现实的情况下，我们不会使用静态的`.html`文件。我们会使用一个提供审查网页的Web服务器，按下**提交**按钮会自动将必要的文件复制到共享位置。这将消除用户下载文件的需求。然而，设置Web服务器超出了本书的范围，并且对于说明同步审查设计的概念是不必要的。
- en: Next, let’s look at the Process diagram. Most of the Process is structured identically
    to *Example 2 – Thresholding* from [*Chapter 4*](B18416_04.xhtml#_idTextAnchor062).
    Only the important differences will be highlighted here.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们看看流程图。大部分流程结构与[第4章](B18416_04.xhtml#_idTextAnchor062)中的**示例2 – 阈值**相同。这里将突出显示重要的差异。
- en: Examine the .html file creation logic
  id: totrans-77
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 检查.html文件创建逻辑
- en: 'An important part of the solution lies in how we implement the data-sharing
    interface between the Digital Worker and the reviewer. Since images are part of
    the review data, we’ve chosen a web browser and HTML form as the review interface.
    Let’s see how this can be achieved:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 解决方案的一个重要部分在于我们如何在数字工作者和审查者之间实现数据共享接口。由于图像是审查数据的一部分，我们选择了一个网页浏览器和HTML表单作为审查界面。让我们看看这是如何实现的：
- en: Open **Example 1 – Polling for Reviewed Predictions** in the *Ch5* Group in
    the Process Studio.
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在流程工作室的*Ch5*组中打开**示例1 – 轮询已审查预测**。
- en: Locate and open the `03b Write Image to HTML Template` Page. This Page is executed
    after we know that a prediction needs manual review.
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定位并打开`03b 将图像写入HTML模板`页面。此页面在我们知道需要手动审查预测之后执行。
- en: Look at the first three Action Stages after Start. The first Action writes the
    image of the medication into a file. The second Action reads the image content
    back into BP as a Base64 string. The third Action deletes the image file created
    by Action 1\. The purpose is to convert the image into Base64 encoding so that
    it can be embedded directly into the `.``html` file.
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查看启动后的前三个动作阶段。第一个动作将药物图像写入文件。第二个动作将图像内容以Base64字符串的形式读回BP。第三个动作删除由动作1创建的图像文件。其目的是将图像转换为Base64编码，以便可以直接嵌入到`.html`文件中。
- en: 'Look at the *Multi Calc* Stage. Here, the Base64 image string is replaced with
    a `Text` Data Item, which contains an HTML template for the select list, a `Text`
    Data Item is saved as a `.html` file, with the Item ID as the filename, into the
    path specified by the **Ch5 Example 1 To Review Folder Path** Environment Variable:'
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查看Multi Calc阶段。在这里，Base64图像字符串被替换为包含选择列表HTML模板的`Text`数据项，一个`Text`数据项被保存为`.html`文件，以项目ID作为文件名，存入由**Ch5
    Example 1 To Review Folder Path**环境变量指定的路径：
- en: '![Figure 5.5 – Embed the image as Base64 into the HTML file](img/B18416_05_5.jpg)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![图5.5 – 将图像作为Base64嵌入到HTML文件中](img/B18416_05_5.jpg)'
- en: Figure 5.5 – Embed the image as Base64 into the HTML file
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.5 – 将图像作为Base64嵌入到HTML文件中
- en: Open the `.js` file stored on a CDN, meaning that this example *requires an
    Internet connection* *to run*.
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开存储在CDN上的`.js`文件，这意味着这个例子**需要互联网连接**才能运行。
- en: 'Examine the following JavaScript, which is part of the **HTML Template** Data
    Item. When the **Submit** button is pressed in the HTML form, JavaScript is triggered,
    showing the file download dialog. This file download dialog defaults to naming
    the filename as the current Item’s ID, and it stores the reviewed prediction value
    as the file content:'
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查以下JavaScript代码，这是HTML模板数据项的一部分。当在HTML表单中按下**提交**按钮时，JavaScript被触发，显示文件下载对话框。此文件下载对话框默认将文件名命名为当前项的ID，并将已审查的预测值作为文件内容存储：
- en: '[PRE0]'
  id: totrans-87
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: We should now understand how the Digital Worker exchanges data with the reviewer.
    BP creates a `.html` file named after the current Item ID into the path specified
    by the **Ch5 Example 1 To Review Folder Path** Environment Variable.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在应该了解数字工作者如何与审查者交换数据。BP在由**Ch5 Example 1 To Review Folder Path**环境变量指定的路径中创建一个以当前项ID命名的`.html`文件。
- en: The reviewer monitors this folder manually and opens any `.html` files that
    appear in their default web browser. The `.html` file contains the image of the
    medication, a drop-down list for the reviewer to select the correct amount of
    medication, and a button to submit the form. The `.txt` file is written to disk,
    which contains the drop-down list value (the human-reviewed amount of medication)
    as content.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 审查者手动监控此文件夹，并在他们的默认网络浏览器中打开任何出现的`.html`文件。`.html`文件包含药物的图片，一个供审查者选择正确药物剂量的下拉列表，以及一个提交表单的按钮。`.txt`文件被写入磁盘，其中包含下拉列表的值（人工审查的药物量）作为内容。
- en: Examine the polling logic
  id: totrans-90
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 检查轮询逻辑
- en: 'Let’s now examine the two major parts that make the polling logic work. The
    first part is a wait loop that throws an Exception if the maximum wait time is
    surpassed; the second part is the cleanup of the `.html` and `.``txt` files:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们来检查使轮询逻辑工作起来的两个主要部分。第一部分是一个等待循环，如果超过最大等待时间，则抛出异常；第二部分是清理`.html`和`.txt`文件：
- en: 'Go to `Main Page`. See that inside the Work Block, we’ve added a new Page named
    `Wait for Reviewed Predictions`. This Page contains the logic that stalls execution
    by polling for the reviewed prediction if a review is required:'
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往`主页面`。注意在工作块内部，我们添加了一个名为`等待审查预测`的新页面。此页面包含轮询审查预测的逻辑，如果需要审查，则通过轮询来阻止执行：
- en: '![Figure 5.6 – The Wait for Reviewed Predictions Page contains the polling
    logic](img/B18416_05_6.jpg)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![图5.6 – 等待审查预测页面包含轮询逻辑](img/B18416_05_6.jpg)'
- en: Figure 5.6 – The Wait for Reviewed Predictions Page contains the polling logic
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.6 – 等待审查预测页面包含轮询逻辑
- en: Open the `Wait for Reviewed` `Predictions` Page.
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开`等待审查预测`页面。
- en: 'Locate the Block named `.txt` file named with the current Item ID. This is
    the same `.txt` file that’s saved by pressing the `.html` review file. If an exact
    file isn’t found, we continue to poll until the maximum timeout value specified
    in the **Ch5 Example 1 Max Timeout Seconds** Environment Variable is reached.
    An Exception is thrown if the file isn’t detected within the maximum allowed timeout:'
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定位名为当前项ID的`.txt`文件块。这是通过按下`.html`审查文件保存的同一`.txt`文件。如果在最大超时值（由**Ch5 Example 1
    Max Timeout Seconds**环境变量指定）达到之前没有找到确切的文件，我们将继续轮询。如果在最大允许的超时时间内没有检测到文件，将抛出异常：
- en: '![Figure 5.7 – The polling logic](img/B18416_05_7.jpg)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![图5.7 – 轮询逻辑](img/B18416_05_7.jpg)'
- en: Figure 5.7 – The polling logic
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.7 – 轮询逻辑
- en: 'Look at the six Stages that immediately follow the `.txt` file named after
    the current Item ID is found, the Work Queue Status is updated. The revised prediction
    is read back into BP, and the `.txt` file is deleted:'
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查看在找到以当前项ID命名的`.txt`文件之后的六个阶段，工作队列状态被更新。修订后的预测被读回到BP中，并且`.txt`文件被删除：
- en: '![Figure 5.8 – Read the revised prediction and delete the .txt file](img/B18416_05_8.jpg)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![图5.8 – 读取修订后的预测并删除.txt文件](img/B18416_05_8.jpg)'
- en: Figure 5.8 – Read the revised prediction and delete the .txt file
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.8 – 读取修订后的预测并删除.txt文件
- en: Important note
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: Updating the Status is not crucial to the correct functioning of this single-work
    queue polling design. It’s kept here to skip steps on the `Main Page` in case
    the Item is retried after an Exception or Stop. However, updating the Status is
    crucial to the asynchronous review design. There, the Status is used to repeatedly
    defer the Item until it has been reviewed.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 更新状态对于此单个工作队列轮询设计是否正确运行不是至关重要的。它保留在这里是为了在异常或停止后重试项时跳过`主页面`上的步骤。然而，更新状态对于异步审查设计至关重要。在那里，状态被用来反复推迟项，直到它被审查。
- en: 'Locate the `.html` file is deleted as the final step on this Page. It’s safe
    to delete the `.html` file even if it’s still loaded in the reviewer’s browser
    due to how modern browsers work:'
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在本页的最后一步，找到已删除的 `.html` 文件。即使它仍在审查员的浏览器中加载，也可以安全地删除 `.html` 文件，因为现代浏览器的工作方式是这样的：
- en: '![Figure 5.9 – Delete the .html file](img/B18416_05_9.jpg)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.9 – 删除 .html 文件](img/B18416_05_9.jpg)'
- en: Figure 5.9 – Delete the .html file
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.9 – 删除 .html 文件
- en: Run the Process
  id: totrans-107
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 运行流程
- en: This Process loads 10 randomly generated Items into the Work Queue named [*Chapter
    5*](B18416_05.xhtml#_idTextAnchor075) *Example 1 Queue*. Due to random creation,
    this Process might need to be run multiple times before an image is selected for
    manual review. On average, there should be four Items that need manual review
    for every Session run. The ML algorithm is not real – it’s a placeholder, based
    on random numbers.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 此流程将 10 个随机生成的项目加载到名为[*第 5 章*](B18416_05.xhtml#_idTextAnchor075) *示例 1 队列*的工作队列中。由于随机生成，此流程可能需要多次运行，才能选择一个图像进行人工审查。平均而言，每个会话运行应有四个项目需要人工审查。机器学习算法不是真实的
    – 它是一个占位符，基于随机数。
- en: 'We will run the polling Process and let two minutes pass. This should cause
    the first Item to be marked as an Exception since the review didn’t complete within
    the timeout period. Then, we will manually review all subsequent Items within
    their two-minute limit. This should result in all of the other Items being marked
    as Completed:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将运行查询流程，并让两分钟过去。这应该会导致第一个项目被标记为异常，因为审查没有在超时期间完成。然后，我们将手动审查所有后续项目，在它们的两分钟限制内完成。这应该会导致所有其他项目被标记为已完成：
- en: Go to the Control Room, locate the *Ch5* Group, and start the Process named
    **Example 1 – Polling for Reviewed Predictions**. *Do not wait for the Session*
    *to complete*.
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往控制室，找到*Ch5*组，并启动名为**示例 1 – 查询已审查预测**的流程。*不要等待会话完成*。
- en: Open the folder that has been configured for the **Ch5 Example 1 To Review Folder
    Path** Environment Variable in Windows File Explorer.
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Windows 文件资源管理器中打开已配置为**Ch5 示例 1 审查文件夹路径**环境变量的文件夹。
- en: 'Wait for a `.html` file to appear. Once a file appears, the reviewer has 120
    seconds before this Item is marked as an Exception:'
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 等待出现 `.html` 文件。一旦出现文件，审查员在项目被标记为异常前有 120 秒的时间：
- en: '![Figure 5.10 – An .html file appears in the To Review Folder Path](img/B18416_05_10.jpg)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.10 – .html 文件出现在审查文件夹路径中](img/B18416_05_10.jpg)'
- en: Figure 5.10 – An .html file appears in the To Review Folder Path
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.10 – .html 文件出现在审查文件夹路径中
- en: 'Wait 120 seconds for the Item to expire and open the Work Queue named [*Chapter
    5*](B18416_05.xhtml#_idTextAnchor075) *Example 1 Queue*. See that there is one
    Item marked as an Exception. Note that the Item Key displayed in the Control Room
    is not the same as the Item ID (filename of the `.``html` file):'
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 等待 120 秒，让项目过期，并打开名为[*第 5 章*](B18416_05.xhtml#_idTextAnchor075) *示例 1 队列*的工作队列。注意，控制室中显示的项目键与项目
    ID（.html 文件的文件名）不同：
- en: '![Figure 5.11 – The Item is marked as an Exception once the maximum wait time
    is surpassed](img/B18416_05_11.jpg)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.11 – 当超过最大等待时间后，项目将被标记为异常](img/B18416_05_11.jpg)'
- en: Figure 5.11 – The Item is marked as an Exception once the maximum wait time
    is surpassed
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.11 – 当超过最大等待时间后，项目将被标记为异常
- en: 'Return to Windows File Explorer and wait for another `.html` file to appear.
    Open the file as soon as possible in your web browser. Review the prediction by
    choosing the amount of medication and clicking on the **Submit Reviewed** **Prediction**
    button:'
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 返回 Windows 文件资源管理器，等待另一个 `.html` 文件出现。尽快在你的网络浏览器中打开文件。通过选择药物剂量并点击**提交已审查****预测**按钮来审查预测：
- en: '![Figure 5.12 – Perform human review and submit](img/B18416_05_12.jpg)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.12 – 进行人工审查并提交](img/B18416_05_12.jpg)'
- en: Figure 5.12 – Perform human review and submit
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.12 – 进行人工审查并提交
- en: If the **Save as** dialog appears, ensure that the folder matches the value
    of the **Ch5 Example 1 Completed Review Folder Path** Environment Variable. Save
    the file without renaming it. The **Save as** dialog might not appear if you have
    your browser set to automatically download files.
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果出现**另存为**对话框，请确保文件夹与**Ch5 示例 1 已完成审查文件夹路径**环境变量的值匹配。保存文件时不要重命名。如果你的浏览器设置为自动下载文件，则可能不会出现**另存为**对话框。
- en: Repeat *steps 5* and *6*, reviewing any `.html` files that appear, until the
    Session has finished executing.
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重复*步骤 5*和*步骤 6*，审查出现的任何 `.html` 文件，直到会话执行完毕。
- en: 'Once the Session run is complete, open the [*Chapter 5*](B18416_05.xhtml#_idTextAnchor075)
    *Example 1 Queue* Work Queue and see that all Items have been marked as **Completed**
    except for one:'
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦会话运行完成，打开[*第5章*](B18416_05.xhtml#_idTextAnchor075) *示例1队列*工作队列，你会看到除了一个之外的所有项目都被标记为**完成**：
- en: '![Figure 5.13 – All Items except for one are completed](img/B18416_05_13.jpg)'
  id: totrans-124
  prefs: []
  type: TYPE_IMG
  zh: '![图5.13 – 除了一个之外的所有项目都已完成](img/B18416_05_13.jpg)'
- en: Figure 5.13 – All Items except for one are completed
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.13 – 除了一个之外的所有项目都已完成
- en: In this example, we saw how a *single* Process and *single* Work Queue, together
    with a polling loop, can fulfill the IA use case where real-time HITL review is
    needed. We also devised a method to review images by writing them into `.``html`
    files.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我们看到了如何通过一个**单个**进程和**单个**工作队列，结合轮询循环，来满足需要实时HITL审查的IA用例。我们还设计了一种通过将图像写入`.html`文件来审查图像的方法。
- en: Next, let’s move the discussion from *single*-Process designs and look at *multi-Process*
    ones.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们将讨论从**单个**进程设计转移到**多进程**设计。
- en: Important note
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: While you can design a *single* BP Process with *multiple* Work Queues, there
    aren’t any clear reasons to do so for IA. As a general design rule, avoid having
    multiple Work Queues for a single BP Process. It’s difficult to follow the Process
    flow when there are multiple Work Queues that can be the source of an Item that’s
    worked on, reducing maintainability. An exception to this is if the additional
    Work Queues aren’t a source of Items to be worked on, such as for Parent/Child
    Work Queue designs where only Item Statuses, Tags, or Data are updated.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然你可以设计一个**单个**BP流程与**多个**工作队列，但对于IA来说，这样做并没有明显的理由。作为一个一般的设计规则，避免为单个BP流程拥有多个工作队列。当有多个工作队列可以作为正在处理的项目来源时，很难追踪流程流程，这会降低可维护性。一个例外是，如果额外的队列不是工作项目的来源，例如在父/子工作队列设计中，只有项目状态、标签或数据被更新。
- en: Multiple-Process, single-Work Queue designs
  id: totrans-130
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 多进程、单工作队列设计
- en: Under the context of IA, there are three broad reasons why you might want to
    have multiple BP Processes working on only a *single* Work Queue. The first is
    to *keep distinct pieces of logic separate*. We will see an example of this later
    in the section, which has one BP Process primarily for the business logic and
    other Processes to house logic specific to the ML portions of the solution design.
    Keeping these separate makes future modifications to the business logic easier
    to manage.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 在IA的背景下，你可能希望有多个BP流程在仅**单个**工作队列上工作的三个主要原因。第一个是为了**保持不同逻辑部分的分离**。我们将在本节的后面看到这个例子，其中一个BP流程主要用于业务逻辑，其他流程用于存放解决方案设计中的ML部分的特定逻辑。将这些逻辑分开使得对业务逻辑的将来修改更容易管理。
- en: The next reason is closely related to the first one. We can separate a solution
    into different Processes to *promote reusability*. As you can imagine, the logic
    to implement random sampling, thresholding, notifying reviewers that predictions
    are ready for review, and so on, are potentially interchangeable across multiple
    IA Processes, and could be implemented as their own Process.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个原因与第一个原因密切相关。我们可以将解决方案分解为不同的进程来**提高可重用性**。正如你可以想象的那样，实现随机抽样、阈值设置、通知审查员预测已准备好审查等逻辑，在多个IA进程中可能是可互换的，并且可以将其作为它们自己的进程来实现。
- en: The third reason is to enable different sections of the overall process to *scale
    differently*. Imagine that we’re putting a new IA process into production and
    that the random sampling percentage is set to 100%, to force human review of every
    ML prediction during hypercare. If there’s a BP Process dedicated specifically
    to checking for reviewed predictions, we can run it on more Digital Workers to
    prevent bottlenecks during this time. Once we’re happy with the accuracy and performance
    of the ML model, the random sampling percentage and the number of Sessions that
    the review-checking Process needs can be lowered.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 第三个原因是为了使整体流程的不同部分能够**不同比例地扩展**。想象一下，我们正在将一个新的IA流程投入生产，并且随机抽样百分比设置为100%，以强制在超期期间对每个ML预测进行人工审查。如果有一个专门用于检查已审查预测的BP流程，我们可以在更多的数字工作者上运行它，以防止在此期间出现瓶颈。一旦我们对ML模型的准确性和性能感到满意，随机抽样百分比和需要审查检查流程的会话数量可以降低。
- en: In the next section, we will discuss a *multiple*-Process, *single*-Queue IA
    design where the logic for manual reviews is split into its own Process. This
    section also contains an example.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将讨论一个**多进程**、**单队列**IA设计，其中手动审查的逻辑被分割到它自己的进程中。本节还包含一个示例。
- en: Independent manual review logic
  id: totrans-135
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 独立的手动审查逻辑
- en: The review-checking logic that we’ve previously seen can be put in a separate
    Process, decoupling it from the business logic. The following figure shows how
    this can be set up at a high level.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 我们之前看到的审阅检查逻辑可以被放入一个单独的进程，从而将其与业务逻辑解耦。以下图表展示了这在高层次上的设置方式。
- en: '![Figure 5.14 – A two-Process, single-Queue design](img/B18416_05_14.jpg)'
  id: totrans-137
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.14 – 双进程、单队列设计](img/B18416_05_14.jpg)'
- en: Figure 5.14 – A two-Process, single-Queue design
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.14 – 双进程、单队列设计
- en: '*Process 1* in the diagram performs all the business logic steps, including
    making the ML prediction. *Process 2* uses the *same* Work Queue as Process 1
    and is only responsible for the logic related to HITL review – transferring data
    to the reviewers and checking for completed reviews. Its main purpose is to update
    the Work Queue Item Status so that Process 1 can continue automated processing
    on an Item after it has been reviewed.'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 图表中的**进程 1**执行所有业务逻辑步骤，包括进行机器学习预测。**进程 2**使用与**进程 1**相同的**工作队列**，仅负责与HITL审查相关的逻辑——将数据传输给审稿人并检查完成的审稿。其主要目的是更新工作队列项目状态，以便**进程
    1**在项目被审阅后可以继续对项目进行自动化处理。
- en: Functionality
  id: totrans-140
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 功能性
- en: The main function of this design is to allow Process 1 to spend *all* of its
    time executing business logic as opposed to IA solution logic (writing share data
    and checking for reviewed predictions). It allows for *independent scaling* of
    the two activities. For instance, you could dedicate multiple Sessions to run
    Process 1 while only having one Session run Process 2, or the other way around,
    depending on your actual need.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 此设计的主要功能是允许**进程 1**将所有时间都用于执行业务逻辑，而不是IA解决方案逻辑（编写共享数据和检查已审阅的预测）。它允许两个活动**独立扩展**。例如，你可以为**进程
    1**分配多个会话来运行，而只为**进程 2**分配一个会话，或者相反，具体取决于你的实际需求。
- en: Maintainability
  id: totrans-142
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 可维护性
- en: By moving from one Process to two, each Process overall becomes simpler to maintain.
    But the overall complexity of the solution increases, as developers need to understand
    how both Processes affect the execution flow of an Item. As the IA team gains
    experience and documentation practices improve, this complexity is significantly
    reduced.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 通过从单个进程转换为两个进程，每个进程总体上变得更加易于维护。但解决方案的整体复杂性增加了，因为开发者需要理解两个进程如何影响项目的执行流程。随着IA团队经验的积累和文档实践的提高，这种复杂性显著降低。
- en: Operability
  id: totrans-144
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 可操作性
- en: The *single*-Process, *single*-Queue example checks to see whether a review
    is completed by looping through the contents of a *completed folder*. This completed
    folder could instead be an API call, a database, or some other system. Files or
    records in the “completed location” *must* contain a reference to the *Item ID*
    somewhere. BP must be able to lock the Item based on the Item ID to update its
    Status so that it can continue automated processing as required.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: '**单进程**、**单队列**示例通过遍历**完成文件夹**的内容来检查审阅是否完成。这个完成文件夹可以是API调用、数据库或其他系统。在“完成位置”的文件或记录中*必须*包含对**项目
    ID**的引用。BP必须能够根据项目 ID 锁定项目以更新其状态，以便它可以继续所需的自动化处理。'
- en: Having the Item ID directly exposed to reviewers is fragile from an *operations*
    standpoint. Someone could accidentally (or deliberately) modify the Item ID. This
    could result in a permanently stuck Work Queue Item that can no longer be reviewed,
    or updating the Status of a different Item than was intended.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 从操作角度来看，将项目 ID 直接暴露给审稿人是不稳定的。有人可能会意外地（或故意地）修改项目 ID。这可能导致工作队列项目永久卡住，无法再进行审阅，或者更新了与预期不同的项目的状态。
- en: The alternative to looping through a data transfer location is to loop through
    the Work Queue for Items that are pending review. Unfortunately, **Get Next Item**
    can’t filter based on Status. We can, however, filter Work Queues based on *Tags*,
    which we’ll implement in an example shortly. We’ll also need to store a reference
    to the file path or third-party system ID as Work Queue Data so that the Item
    ID doesn’t need to be exposed to the reviewer.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 通过遍历数据传输位置的选择方案是遍历待审阅项目的**工作队列**。不幸的是，**获取下一个项目**无法根据状态进行筛选。然而，我们可以根据**标签**筛选工作队列，我们将在接下来的示例中实现这一点。我们还需要将文件路径或第三方系统
    ID 存储为工作队列数据，这样就不需要将项目 ID 暴露给审稿人。
- en: Also, since we plan on looping through every Item that’s pending review, we
    can ensure that the review data is persisted correctly and recreate it if it isn’t.
    This isn’t possible in our previous design since we’re only looping through the
    contents of the completed folder, and not the full set of everything that needs
    to be reviewed.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，由于我们计划遍历每个待审查的项目，我们可以确保审查数据被正确持久化，并在必要时重新创建它。在我们的先前设计中这是不可能的，因为我们只遍历完成文件夹的内容，而不是需要审查的完整集合。
- en: Discussion
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 讨论
- en: You might be wondering whether we could have added Tags to our *single*-Process,
    *single*-Work Queue example to prevent exposing the Item ID to reviewers. While
    it would work technically, in practice, it takes too much time away from actually
    working the Items according to business logic. Recall that the review-checking
    logic in our previous example was positioned outside of the Main Page’s Work Block.
    If the number of Items pending review is high or if checking to see whether a
    pending Item has been reviewed takes more than a few seconds, we can end up spending
    significant amounts of time just doing this checking.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能想知道我们是否可以在我们的单进程、单工作队列示例中添加标签，以防止将项目ID暴露给审查者。虽然在技术上可行，但在实践中，这会占用太多时间，无法根据业务逻辑实际处理项目。回想一下，我们先前示例中的审查检查逻辑位于主页面工作块之外。如果待审查的项目数量很多，或者检查待审查项目是否已审查需要超过几秒钟的时间，我们可能会花费大量时间仅进行此检查。
- en: Pros
  id: totrans-151
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 优点
- en: In the *single*-Process, *single*-Queue design, review checking is performed
    *outside* the Work Block of the Process Template. Exceptions that occur outside
    the Work Block potentially result in Terminations. With a two-Process design,
    review logic can be placed into its own Work Block. Exceptions that occur no longer
    lead to immediate Termination. This makes this design well-suited for scenarios
    where checking for a completed review has complex logic, such as logging into
    a web interface.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 在单进程、单队列设计中，审查检查是在流程模板的工作块外进行的。在工作块外发生的异常可能会导致终止。采用双进程设计，可以将审查逻辑放入其自己的工作块。发生的异常不再导致立即终止。这使得这种设计非常适合检查完成的审查具有复杂逻辑的场景，例如登录到网络界面。
- en: While some might consider this solution as more difficult to maintain, as there
    are two Processes instead of just one, I’d argue that it’s now easier to maintain
    the primary Process that contains the business logic, since much of the IA solution
    logic has been moved out. It’s the business logic that’s more apt to change over
    the lifetime of an IA solution. Moving to a two-Process design also enables reuse
    and targeted scaling.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然有些人可能认为这种解决方案比只有一个进程更难维护，但我认为现在维护包含业务逻辑的主要进程更容易，因为大部分IA解决方案逻辑已经被移出。业务逻辑在IA解决方案的生命周期中更容易发生变化。转向双进程设计也实现了重用和目标扩展。
- en: Cons
  id: totrans-154
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 缺点
- en: The main downside of this *two*-process, *single*-Work Queue design over the
    single-Process one is that the number of Sessions used to get a working solution
    is, at minimum, two. The scheduling also becomes more complex.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 与单进程设计相比，这种双进程、单工作队列设计的主要缺点是，获取工作解决方案所需的最小会话数是两个。调度也变得更加复杂。
- en: Looping through every Item that’s marked for human review, regardless of whether
    it has been reviewed, unnecessarily adds to the Total Work Time of that Item.
    A negative consequence of this two Process, single-Queue design is that the case
    duration statistics will be higher than the single-Process design.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 遍历每个标记为人工审查的项目，无论其是否已审查，都会不必要地增加该项目的总工作时间。这种双进程、单队列设计的负面后果是，案例持续时间统计将高于单进程设计。
- en: Another downside is caused by moving the logic that persists prediction data
    so that it can be shared with the reviewer in the new Process. Since we’re offloading
    that task to a different Process, we’re effectively no longer saving review data
    immediately after an ML prediction is made. We may need *frequent Session runs
    of Process 2* to ensure that review data is created in a timely manner.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个缺点是由于将持久化预测数据的逻辑移动到新进程中，以便与审查者共享。由于我们将该任务卸载到不同的进程，我们实际上在ML预测后不再立即保存审查数据。我们可能需要频繁地运行进程2的会话，以确保及时创建审查数据。
- en: 'Next, let’s look at an implementation of this single-Work Queue, two-Process
    design in an example. At a high level, we will be going through five steps:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们通过一个示例来查看这种单工作队列、双进程设计的实现。从高层次来看，我们将进行以下五个步骤：
- en: Verify the contents of the Release.
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证发布内容。
- en: Confirm that the HITL review logic has been moved out of Process 1.
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确认HITL审查逻辑已被移出流程1。
- en: Understand the functionality that has been moved into Process 2.
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 理解已移入流程2的功能。
- en: Run Process 1 and see the results in the Control Room.
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行流程1，并在控制室中查看结果。
- en: Run Process 2 and see the results in the Control Room.
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行流程2，并在控制室中查看结果。
- en: Example 2 – independent manual review logic
  id: totrans-164
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 示例2 – 独立手动审查逻辑
- en: Suppose that we’re deploying the customer churn example from [*Chapter 4*](B18416_04.xhtml#_idTextAnchor062),
    *Example 3* into production for the first time. During our hypercare period, we
    want to review every single ML prediction. Based on the case volume, the hypercare
    period, and the overall seasonality of retail shopping, we want to revise our
    original *single*-Process design and split out the review logic so that it can
    be scaled independently and started on multiple Sessions. We will still keep a
    *single* Work Queue.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们将从[*第4章*](B18416_04.xhtml#_idTextAnchor062)的*示例3*中部署客户流失示例到生产环境中，这是第一次。在我们的超期关注期间，我们希望审查每一个机器学习预测。根据案例数量、超期关注期间以及零售购物的整体季节性，我们希望修改我们最初的*单一*流程设计，并将审查逻辑拆分出来，以便它可以独立扩展并在多个会话中启动。我们仍然会保留一个*单一*工作队列。
- en: The Release has already been developed. Let’s examine how the review logic has
    been split into a separate Process, and execute it to get an idea of how it can
    be scaled and maintained independently.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 这个发布已经开发完成。让我们检查审查逻辑是如何拆分到一个单独的流程中，并执行它以了解它如何可以独立扩展和维护。
- en: Verify the Release contents
  id: totrans-167
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 验证发布内容
- en: 'This Release’s contents are similar to those of [*Chapter 4*](B18416_04.xhtml#_idTextAnchor062),
    *Example 3*, except that there’s an additional Process:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 这个发布的内容与[*第4章*](B18416_04.xhtml#_idTextAnchor062)的*示例3*相似，除了有一个额外的流程：
- en: Verify that *two Processes*, one Work Queue, and five Environment Variables
    have been imported (descriptions of the Environment Variables can be found in
    [*Chapter 4*](B18416_04.xhtml#_idTextAnchor062), *Example 3*):![](img/B18416_05_15.jpg)
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证已导入*两个流程*、一个工作队列和五个环境变量（环境变量的描述可以在[*第4章*](B18416_04.xhtml#_idTextAnchor062)的*示例3*中找到）！![img/B18416_05_15.jpg](img/B18416_05_15.jpg)
- en: Figure 5.15 – The Release contents for Example 2
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.15 – 示例2的发布内容
- en: Verify that the **Ch5 Example 2 Random Sampling Target** Environment Variable
    is set to **100.0**, meaning that all ML predictions will be reviewed as required
    by the hypercare period.
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证**Ch5示例2随机抽样目标**环境变量是否设置为**100.0**，这意味着所有机器学习预测都将按照超期关注期间的要求进行审查。
- en: Verify that the primary Process no longer has review-related logic
  id: totrans-172
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 验证主要流程不再包含与审查相关的逻辑
- en: 'Let’s ensure that the Process containing the main business logic no longer
    has logic related to creating Excel files and updating Item Statuses:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们确保包含主要业务逻辑的流程不再包含与创建Excel文件和更新项目状态相关的逻辑：
- en: Open the Process named **Example 2A – Random Sampling** in the *Ch5* Group in
    the Process Studio.
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在流程工作室的*Ch5*组中打开名为**示例2A – 随机抽样**的流程。
- en: 'On the `Main Page`, see that there’s no Page to check for reviewed predictions
    before the **Get Next Item** Stages; this logic has been removed from this Process:'
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`主页面`上，可以看到在**获取下一项**阶段之前没有页面来检查已审查的预测；这个逻辑已经被从该流程中移除：
- en: '![Figure 5.16 – There are no Pages to check for reviewed predictions](img/B18416_05_16.jpg)'
  id: totrans-176
  prefs: []
  type: TYPE_IMG
  zh: '![图5.16 – 没有页面来检查已审查的预测](img/B18416_05_16.jpg)'
- en: Figure 5.16 – There are no Pages to check for reviewed predictions
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.16 – 没有页面来检查已审查的预测
- en: Open any of the `Main Page`. See that a Tag Filter has been added to *not* select
    any Items with the **Manual Review** **Required** Tag.
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开任意的`主页面`。可以看到已添加了一个标签过滤器，以*不*选择任何带有**手动审查** **所需**标签的项目。
- en: 'See that the Work Queue name on the `Main Page` is set to **Chapter 5** **Example**
    **2 Queue**:'
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 看到在`主页面`上的工作队列名称被设置为**第5章** **示例** **2队列**：
- en: '![Figure 5.17 – Take note of the Queue name](img/B18416_05_17.jpg)'
  id: totrans-180
  prefs: []
  type: TYPE_IMG
  zh: '![图5.17 – 注意队列名称](img/B18416_05_17.jpg)'
- en: Figure 5.17 – Take note of the Queue name
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.17 – 注意队列名称
- en: Open the Page named `Update Status and Tag for Manual Review`. See that there’s
    no longer any logic to write Excel files to disk. Also, see that we’re setting
    the Tag for Items requiring HITL review to **Manual** **Review Required**.
  id: totrans-182
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开名为`更新状态和标签以进行手动审查`的页面。可以看到不再有任何将Excel文件写入磁盘的逻辑。还可以看到我们正在将需要HITL审查的项目标签设置为**手动**
    **审查所需**。
- en: We’ve finished verifying that the primary Process contains no logic related
    to HITL reviews. Next, let’s look at the second Process of this design, which
    contains the IA logic related to writing review data to disk and checking for
    completed reviews.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经完成验证主流程不包含与HITL审核相关的逻辑。接下来，让我们看看这个设计的第二个进程，它包含将审核数据写入磁盘和检查完成审核的IA逻辑。
- en: Examine the Process that checks for reviewed predictions
  id: totrans-184
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 检查审核预测的进程
- en: 'This second Process is developed using the standard BP Process Template. We’ll
    see that all of the logic regarding HITL reviews has been moved to this new Process:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个进程是使用标准的BP进程模板开发的。我们将看到所有关于HITL审核的逻辑都已移动到这个新进程中：
- en: Open **Example 2B – Manual Review Logic** Process under the *Ch5* Group in the
    Process Studio.
  id: totrans-186
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在流程工作室的*Ch5*组下打开**示例2B – 人工审核逻辑**流程。
- en: See that the Queue Name on the `Main Page` is also set to **Chapter 5** **Example
    2 Queue**, matching the Work Queue in **Example 2A – Random Sampling** Process.
    Both Processes work from the same Queue.
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 注意到`主页面`上的队列名称也设置为**第5章示例2队列**，与**示例2A – 随机采样**进程中的工作队列相匹配。两个进程都从同一个队列工作。
- en: Open any of the `Main Page`. See that there’s a Tag Filter that selects Items
    tagged with **Manual** **Review Required**.
  id: totrans-188
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开任何`主页面`。注意有一个标签过滤器，用于选择带有**需要人工审核**标签的项目。
- en: 'Look at the Work Block on the `Main Page`. There are two steps. First, review
    data is written to the share folders. Next, we check to see whether the Item has
    been moved to the *completed* folder, indicating that it has been reviewed. Putting
    these in the Work Block allows us to gracefully recover from Exceptions and retry
    Items from the Control Room:'
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查看主页面上的工作块。有两个步骤。首先，审核数据写入共享文件夹。接下来，我们检查项目是否已移动到*完成*文件夹，这表示它已被审核。将这些步骤放入工作块中，使我们能够从异常中优雅地恢复，并从控制室重新尝试项目：
- en: '![Figure 5.18 – The two steps related to review logic are in the Work Block](img/B18416_05_18.jpg)'
  id: totrans-190
  prefs: []
  type: TYPE_IMG
  zh: '![图5.18 – 与审核逻辑相关的两个步骤在工作块中](img/B18416_05_18.jpg)'
- en: Figure 5.18 – The two steps related to review logic are in the Work Block
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.18 – 与审核逻辑相关的两个步骤在工作块中
- en: Open the `02 Check for Reviewed` `Predictions` Page.
  id: totrans-192
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开`02 检查已审核`的`预测`页面。
- en: 'Locate the *Update Item* Block. See that we’re Updating the Status and removing
    the Tag when an Item is reviewed. The remaining logic on this Page is related
    to shared folder file management:'
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定位到*更新项目*块。注意当项目被审核时，我们正在更新状态并移除标签。此页面上的剩余逻辑与共享文件夹文件管理相关：
- en: '![Figure 5.19 – Update the Item’s Status and Tag](img/B18416_05_19.jpg)'
  id: totrans-194
  prefs: []
  type: TYPE_IMG
  zh: '![图5.19 – 更新项目的状态和标签](img/B18416_05_19.jpg)'
- en: Figure 5.19 – Update the Item’s Status and Tag
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.19 – 更新项目的状态和标签
- en: So far, we’ve seen that Process 1 no longer contains HITL review logic and that
    both Processes share the same Work Queue. Process 2 removes the `Main Page` to
    skip steps in case of Item retries.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经看到进程1不再包含HITL审核逻辑，并且两个进程共享相同的工作队列。进程2移除了`主页面`以跳过项目重试时的步骤。
- en: Run the primary Process
  id: totrans-197
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 运行主流程
- en: 'Let’s run the main Process and examine the Work Queue. This Process randomly
    generates 13 Items to populate the Work Queue and performs ML predictions. We
    should see that all Items will stop processing, pending human review:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们运行主进程并检查工作队列。此进程随机生成13个项目以填充工作队列并执行机器学习预测。我们应该看到所有项目都将停止处理，等待人工审核：
- en: Locate the *Ch5* folder and run **Example 2A – Random Sampling** in the Control
    Room. Wait for the Session to complete.
  id: totrans-199
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定位到*Ch5*文件夹，并在控制室中运行**示例2A – 随机采样**。等待会话完成。
- en: 'View the contents of the **Chapter 5** **Example 2 Queue**. See that all 13
    Items have the **Manual Review Required** Status and Tag since our random sampling
    rate is set to 100%:'
  id: totrans-200
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查看第5章**示例2队列**的内容。注意所有13个项目都有**需要人工审核**的状态和标签，因为我们的随机采样率设置为100%：
- en: '![Figure 5.20 – All Items have the Manual Review Required Status](img/B18416_05_20.jpg)'
  id: totrans-201
  prefs: []
  type: TYPE_IMG
  zh: '![图5.20 – 所有项目都需要人工审核状态](img/B18416_05_20.jpg)'
- en: Figure 5.20 – All Items have the Manual Review Required Status
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.20 – 所有项目都需要人工审核状态
- en: Open Windows File Explorer and navigate to the folder defined in the **Ch5 Example
    2 To Review Folder Path** Environment Variable. Check that there are no Excel
    files in this folder. This is because the logic to write review files to disk
    has been moved to Process 2, which hasn’t been run yet.
  id: totrans-203
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开Windows文件资源管理器，导航到在**Ch5示例2审核文件夹路径**环境变量中定义的文件夹。检查此文件夹中是否有Excel文件。这是因为将审核文件写入磁盘的逻辑已移动到进程2，而进程2尚未运行。
- en: Run the HITL review-checking logic Process
  id: totrans-204
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 运行HITL审查检查逻辑进程
- en: 'The second Process writes review data to the shared folder and checks for completed
    reviews. This should be run *concurrently* with the previous Process. However,
    we’ll be running the Processes sequentially for the benefit of readers using the
    trial edition of BP. Here, we’ll be reviewing eight of the thirteen predictions
    before running the second Process again:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个进程将审查数据写入共享文件夹并检查完成的审查。这应该与之前的进程**同时**运行。然而，为了方便使用BP试用版的读者，我们将按顺序运行进程。在这里，我们将在再次运行第二个进程之前审查13个预测中的8个：
- en: Locate the *Ch5* Group and run the **Example 2B – Manual Review Logic** Process
    in the Control Room. Wait for the Session to complete.
  id: totrans-206
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定位到*Ch5*组，并在控制室运行**示例 2B – 手动审查逻辑**进程。等待会话完成。
- en: Open Windows File Explorer and navigate to the folder defined in the **Ch5 Example
    2 To Review Folder Path** Environment Variable. Check that there are three Excel
    files in this folder. Two of the Excel files should have five items needing review
    (according to the batch size) and one file should have three, totaling 13\. Notice
    that Item ID is no longer a column in the file.
  id: totrans-207
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开Windows文件资源管理器，导航到在**Ch5 Example 2 待审查文件夹路径**环境变量中定义的文件夹。确认该文件夹中有三个Excel文件。其中两个Excel文件应有五个需要审查的项目（根据批量大小），一个文件应有三个，总共13个。注意项目ID不再作为文件中的列。
- en: Cut and paste one of the files with five predictions and the file that has three
    predictions into the folder defined in the **Ch5 Example 2 Completed Review Folder
    Path** Environment Variable. This simulates what a reviewer does after completing
    the review of two Excel files, totaling eight predictions.
  id: totrans-208
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将包含五个预测和一个包含三个预测的文件剪切并粘贴到在**Ch5 Example 2 完成审查文件夹路径**环境变量中定义的文件夹中。这模拟了审查员在完成两个Excel文件的审查后所做的工作，总共八个预测。
- en: Run **Example 2B – Manual Review Logic** in the Control Room again. Wait for
    the Session to complete.
  id: totrans-209
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 再次在控制室运行**示例 2B – 手动审查逻辑**。等待会话完成。
- en: 'Look at **Chapter 5** **Example 2 Queue** Work Queue to see that eight of the
    Item’s Statuses are set to **Manual Review Complete** and have been untagged:'
  id: totrans-210
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查看第**5章**的**示例 2 队列**工作队列，以确认8个项目的状态被设置为**手动审查完成**并且已被取消标记：
- en: '![Figure 5.21 – Eight Items have updated their Status and removed their Tag](img/B18416_05_21.jpg)'
  id: totrans-211
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.21 – 八个项目已更新其状态并移除其标记](img/B18416_05_21.jpg)'
- en: Figure 5.21 – Eight Items have updated their Status and removed their Tag
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.21 – 八个项目已更新其状态并移除其标记
- en: Open Windows File Explorer and navigate to the folder defined in the **Ch5 Example
    2 Completed Review Folder Path** Environment Variable. Verify that there are no
    longer any Excel files in this folder.
  id: totrans-213
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开Windows文件资源管理器，导航到在**Ch5 Example 2 完成审查文件夹路径**环境变量中定义的文件夹。验证该文件夹中不再有任何Excel文件。
- en: At this point, eight of the Items have been untagged, meaning that they can
    be picked up by Process 1’s **Get Next** **Item** Action.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，有8个项目已被取消标记，这意味着它们可以被进程1的**获取下一个****项目**动作选中。
- en: Run the primary Process again
  id: totrans-215
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 再次运行主进程
- en: 'We will rerun the primary Process and pretend that it never stopped. While
    13 new Work Queue Items will be created, we’re more interested in seeing that
    the 8 Items from the previous run are marked as **Completed**:'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将重新运行主进程并假装它从未停止过。虽然将创建13个新的工作队列项目，但我们更感兴趣的是看到之前运行中的8个项目被标记为**已完成**：
- en: Run **Example 2A – Random Sampling** in the Control Room again. Wait for the
    Session to complete.
  id: totrans-217
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 再次在控制室运行**示例 2A – 随机抽样**。等待会话完成。
- en: View the contents of **Chapter 5** **Example 2 Queue**. See that 8 of the 26
    Items are marked as **Completed**.
  id: totrans-218
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查看第**5章**的**示例 2 队列**内容。注意26个项目中有8个被标记为**已完成**。
- en: In this example, we saw how the review-checking logic can be separated into
    its own Process, independent from the main business logic. This has a number of
    benefits, namely promoting reusability and allowing for the independent scaling
    of the business logic versus the review-checking logic. The overall robustness
    of the data transfer design is also improved by removing the need to expose the
    Item ID to reviewers, and by locating the review-checking logic inside of an Exception-handling
    Block.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我们看到了如何将审查检查逻辑分离成它自己的进程，独立于主要业务逻辑。这有几个好处，包括促进可重用性，允许业务逻辑与审查检查逻辑独立扩展。通过消除向审查员暴露项目ID的需求，并将审查检查逻辑定位在异常处理块内，整体的数据传输设计鲁棒性也得到了提高。
- en: Now, let’s move on from *multiple*-Process, *single*-Work Queue designs, and
    explore why we might want to use *multiple* Processes and *multiple* Work Queues
    in IA.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们从**多进程**、**单工作队列**的设计转向，探讨为什么我们可能想在IA中使用**多进程**和**多工作队列**。
- en: Multiple-process, multiple-work queue designs
  id: totrans-221
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 多进程、多工作队列设计
- en: Adding new Process(es) and Work Queue(s) is a great way to *add ML to an existing
    BP solution*, as much of the original design and Process diagram can stay the
    same. While adding more Work Queues leads to an overall more complex design, they
    can add some nuanced improvements to our solution, especially around auditing,
    making them worthy of consideration.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 添加新的进程和工作队列是向现有的BP解决方案**添加机器学习**的好方法，因为大部分原始设计和流程图可以保持不变。虽然添加更多的工作队列会导致整体设计更加复杂，但它们可以在审计等方面为我们提供一些细微的改进，因此值得考虑。
- en: Let’s look at the pros and cons of a *two-Process*, *two-Queue* IA solution
    design, where the Work Queue Items that need human review are saved to a separate
    Work Queue.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看一个**两进程**、**两队列**的IA解决方案设计的优缺点，其中需要人工审核的工作队列项被保存在一个单独的工作队列中。
- en: Fully independent manual reviews
  id: totrans-224
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 完全独立的人工审核
- en: One of the downsides of the *two-Process*, *single*-Work Queue design is that
    the case duration statistics end up higher due to the repeated checking of each
    Item. If we instead push all Items that need review into a *new Work Queue*, we
    can separate the time spent processing the business logic from the time that is
    spent on review checking.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: '双进程、单工作队列设计的缺点之一是，由于对每个项目的重复检查，案例持续时间统计最终会更高。如果我们将所有需要审核的项目推入一个新的工作队列，我们就可以将处理业务逻辑所花费的时间与审核检查所花费的时间分开。  '
- en: 'This *two* Queue design is shown in the following figure. The first Process
    performs the business logic, including making ML predictions. If an Item requires
    manual review, *only data that is relevant to the review* is pushed into Work
    Queue 2\. Process 2 saves review data in the review interface and checks to see
    whether the review is completed. If a review is complete, it updates the Item
    Status in Work Queue 1 so that automated processing can continue:'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 这种**两**队列设计在以下图中展示。第一个进程执行业务逻辑，包括进行机器学习预测。如果一个项目需要人工审核，则只有与审核相关的**数据**会被推入工作队列2。进程2将审核数据保存在审核界面中，并检查审核是否完成。如果审核完成，它将在工作队列1中更新项目状态，以便自动化处理可以继续：
- en: '![Figure 5.22 – A two-Process, two-Work Queue design](img/B18416_05_22.jpg)'
  id: totrans-227
  prefs: []
  type: TYPE_IMG
  zh: '![图5.22 – 双进程、双工作队列设计](img/B18416_05_22.jpg)'
- en: Figure 5.22 – A two-Process, two-Work Queue design
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.22 – 双进程、双工作队列设计
- en: Functionality
  id: totrans-229
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 功能性
- en: The functionality of this design is identical to the multiple-Process, single-Queue
    design. We can dedicate *all* of Process 1’s time to executing business logic,
    and we can have *independent scaling* of the two Processes. Adding a new Work
    Queue doesn’t affect the functionality.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 这种设计的功能与多进程、单工作队列设计相同。我们可以将进程1的所有时间都用于执行业务逻辑，并且我们可以对两个进程进行**独立扩展**。添加新的工作队列不会影响功能。
- en: Maintainability
  id: totrans-231
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 可维护性
- en: This design actually improves maintainability compared to the two-Process, single-Queue
    one. The addition of the Work Queue leads to an even cleaner separation between
    the business logic and the HITL review logic.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 与双进程、单队列设计相比，这种设计实际上提高了可维护性。工作队列的添加导致了业务逻辑和HITL审核逻辑之间更加清晰的分离。
- en: Operability
  id: totrans-233
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 可操作性
- en: The addition of a new Work Queue most directly impacts how we operate the IA
    solution. Although being able to isolate the time spent performing business logic
    versus the time spent in manual review logic is useful, the reporting and Control
    Room operations can become more complex. If you want a view of how long an Item
    takes to complete, including the review logic time, the case durations of the
    two Queues need to be added together in your reporting. This should really only
    be a one-off change to the automated reporting that’s put into place, though.
    The Controller also needs to navigate between two Work Queues, while remembering
    the *Item Key*, to get a full picture of what’s happening with an Item, which
    is an operational inconvenience.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 新增工作队列最直接地影响了我们操作IA解决方案的方式。虽然能够隔离执行业务逻辑和人工审核逻辑所花费的时间是有用的，但报告和控制室操作可能会变得更加复杂。如果你想要查看一个项目完成所需的时间，包括审核逻辑时间，你需要在报告中将两个队列的案例持续时间相加。这实际上应该是对自动报告的一次性更改。控制器还需要在两个工作队列之间导航，同时记住**项目键**，以全面了解项目的状况，这会给操作带来不便。
- en: Pros
  id: totrans-235
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 优点
- en: 'The main benefit of this design, something that will become increasingly important
    in the future, is that the second Work Queue enables *simpler HITL auditing*.
    Since we only push the minimum amount of data needed to perform the human review,
    the Session Logs or Work Queue data of Process 2 can be readily exported without
    exposing unnecessary data. We should strongly consider implementing this Process
    design if we need to frequently answer the following:'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 这种设计的主要好处，这在未来将变得越来越重要，是第二个工作队列使得**简化HITL审计**成为可能。由于我们只推送执行人工审核所需的最小数据量，因此可以轻松导出流程2的会话日志或工作队列数据，而不会暴露不必要的数据。如果我们需要频繁回答以下问题，我们应该强烈考虑实施这种流程设计：
- en: What were the original inputs to the ML prediction?
  id: totrans-237
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 机器学习预测的原始输入是什么？
- en: Who performed the review?
  id: totrans-238
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 谁进行了审核？
- en: What was the revised label and why?
  id: totrans-239
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 修订的标签是什么，为什么？
- en: While they might not seem relevant now, these are precisely the types of questions
    that regulators and courts of law will ask whether an ML prediction causes harm
    or damage to a user or customer.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然现在可能看起来并不相关，但这些正是监管机构和法律法院会询问的问题，即机器学习预测是否对用户或客户造成了伤害或损害。
- en: Important note
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: If the Windows filesystem is used as the data-sharing method, you must explicitly
    enable folder or file-based auditing. This will generate security events that
    allow you to find out which user has modified a file (reviewed a prediction).
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 如果使用Windows文件系统作为数据共享方法，你必须明确启用基于文件夹或文件的审计。这将生成安全事件，允许你找出哪个用户修改了文件（审核了预测）。
- en: The isolated Work Queue or Session Log data that contains only what has been
    human-reviewed can be readily *fed back to the data scientists* who developed
    the algorithm. If we didn’t have this clean source of corrected data, we would
    need to generate it by filtering the Session Logs programmatically and removing
    any extraneous data. The main benefits of this design are simplified HITL auditing
    and enabling data feedback to the ML model developers.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 仅包含经过人工审核内容的隔离工作队列或会话日志数据可以轻松地**反馈给开发算法的数据科学家**。如果我们没有这个干净的校正数据源，我们就需要通过程序过滤会话日志并删除任何无关数据来生成它。这种设计的主要好处是简化了HITL审计，并使数据反馈给机器学习模型开发者成为可能。
- en: Finally, this type of design is well-suited to turning existing RPA Processes
    into IA ones as the existing RPA design can largely remain unchanged.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，这种设计非常适合将现有的RPA流程转换为IA流程，因为现有的RPA设计可以基本保持不变。
- en: Cons
  id: totrans-245
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 缺点
- en: Most of the negatives are the operational inconveniences discussed earlier.
    Items must now be tracked across multiple Work Queues and reporting becomes more
    complex.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数的负面因素是之前讨论过的操作不便。现在必须跨多个工作队列跟踪项目，报告变得更加复杂。
- en: Now that we’ve discussed a *two*-Process, *two*-Work Queue design, let’s go
    one step further and separate out the ML prediction logic as well.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 既然我们已经讨论了**两个**流程，**两个**工作队列的设计，让我们再进一步，将机器学习预测逻辑也分离出来。
- en: Separating ML predictions and manual reviews into their own Processes and Work
    Queues
  id: totrans-248
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将机器学习预测和人工审核分离到它们自己的流程和工作队列中
- en: 'If we need to expand the simplified auditing to *encompass all ML predictions*,
    we can move the ML algorithm calling steps and data into their own Process and
    Work Queue. This leads to a *three*-Process, *three*-Work Queue design, as shown
    in the following figure:'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们需要将简化审计扩展到**涵盖所有机器学习预测**，我们可以将机器学习算法调用步骤和数据移动到它们自己的流程和工作队列中。这将导致**三个**流程，**三个**工作队列的设计，如下面的图所示：
- en: '![Figure 5.23 – A three-Process, three-Work Queue design](img/B18416_05_23.jpg)'
  id: totrans-250
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.23 – 三流程，三工作队列设计](img/B18416_05_23.jpg)'
- en: Figure 5.23 – A three-Process, three-Work Queue design
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.23 – 三流程，三工作队列设计
- en: Our first Process and Work Queue contain standard business logic. All ML predictions
    that need to be made are added to Work Queue 2, which is worked by Process 2\.
    Process 2 executes the ML algorithm, generates the prediction, and decides whether
    human review is necessary. If human review isn’t needed, the Item’s Status is
    updated in Work Queue 1 so that automated processing continues. If human review
    is needed, the Item gets pushed into Work Queue 3\. Process 3 creates the data
    needed for HITL review and updates the Item Status in Queue 1 when the review
    is completed.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的第一流程和工作队列包含标准业务逻辑。所有需要做出的机器学习预测都被添加到工作队列2，由流程2处理。流程2执行机器学习算法，生成预测，并决定是否需要人工审核。如果不需要人工审核，项目的状态将在工作队列1中更新，以便自动化处理继续。如果需要人工审核，项目将被推入工作队列3。流程3创建HITL审核所需的数据，并在审核完成后在工作队列1中更新项目状态。
- en: Functionality, maintainability, and operability
  id: totrans-253
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 功能性、可维护性和可操作性
- en: These are largely the same as the two-Process, two-Work Queue design.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 这些与两流程、两工作队列设计大致相同。
- en: Pros
  id: totrans-255
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 优点
- en: The benefits are largely the same as the *two*-Process, *two*-Work Queue design,
    except that we gain additional *audit options for all ML predictions* that are
    made.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 与两流程、两工作队列设计相比，好处大致相同，但我们获得了对所有机器学习预测的额外**审计选项**。
- en: Cons
  id: totrans-257
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 缺点
- en: This design suffers from the same problems as the *two*-Process, *two*-Work
    Queue design. Depending on business needs, the reporting can be more complicated
    if we need to add the execution times of multiple Work Queues together. The Controller
    will have an even harder time keeping track of what’s happening to a case across
    three different Work Queues.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 这种设计与两流程、两工作队列设计存在相同的问题。根据业务需求，如果需要将多个工作队列的执行时间相加，报告可能会更复杂。控制器将更难跟踪三个不同工作队列中案件的情况。
- en: Next, let’s look at an implementation of this *three*-Process, *three*-Work
    Queue design through an example.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们通过一个示例来查看这种三流程、三工作队列设计的实现。
- en: Example 3 – full separation
  id: totrans-260
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 示例3 – 完全分离
- en: In this example (based on a real-life IA case), we’re automating a national
    utility’s customer claims process. 5,000 claims are processed per month. The current
    non-automated process requires human judgment and there are 25 possible resolutions
    to a customer’s claim.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子（基于一个真实的IA案例）中，我们正在自动化一个国家公用事业公司的客户索赔流程。每月处理5,000个索赔。当前的未自动化流程需要人工判断，并且有25种可能的客户索赔解决方案。
- en: This national utility has developed an ML recommendation system that displays
    the top three resolution suggestions and their confidence scores. Manual review
    is triggered when the confidence scores of the top two recommendations are within
    5% of each other. This is a more complex form of *thresholding* where there’s
    a dependency between the predicted labels.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 这个国家公用事业公司开发了一个机器学习推荐系统，显示前三个解决方案建议及其置信度分数。当前两个建议的置信度分数相差在5%以内时，将触发人工审查。这是一种更复杂的**阈值**形式，其中预测标签之间存在依赖关系。
- en: Cases are reviewed through a web interface containing the three recommendations,
    their confidence levels, the relevant case data, and customer data. Since the
    solution is for a national utility, the IA team wants to stay ahead of regulations
    and implement a solution design that facilitates the auditing of all ML predictions
    and human reviews.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 案例通过包含三个建议、它们的置信度水平、相关案例数据和客户数据的Web界面进行审查。由于该解决方案是为国家公用事业公司设计的，IA团队希望走在法规的前面，并实施一个促进所有机器学习预测和人工审查审计的解决方案设计。
- en: 'The goal of this example is to illustrate the logic needed to get this three-Process,
    three-Work Queue design working. At a high level, we will go through the following
    11 steps:'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 本例的目的是说明实现三流程、三工作队列设计所需逻辑。从高层次来看，我们将进行以下11个步骤：
- en: Verify the Release contents and configure an Environment Variable.
  id: totrans-265
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证发布内容并配置环境变量。
- en: Examine Process 1’s (business logic) `Main Page`.
  id: totrans-266
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查流程1的（业务逻辑）“主页面”。
- en: See how data is pushed into the ML Queue (Queue 2).
  id: totrans-267
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 看看数据是如何推入机器学习队列（队列2）的。
- en: Examine Process 2’s (ML prediction) `Main Page`.
  id: totrans-268
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查流程2的（机器学习预测）“主页面”。
- en: Examine Process 3’s (HITL review) `Main Page`.
  id: totrans-269
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查流程3的（HITL审查）“主页面”。
- en: Run Process 1 and see the result in the Control Room.
  id: totrans-270
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行流程1并查看控制室的结果。
- en: Run Process 2 and see the result in the Control Room.
  id: totrans-271
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行流程2并查看控制室的结果。
- en: Run Process 3 and see the result in the Control Room.
  id: totrans-272
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行流程3并查看控制室的结果。
- en: Review one prediction.
  id: totrans-273
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 审查一个预测。
- en: Run Process 3 again and see the result in the Control Room.
  id: totrans-274
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 再次运行流程3并查看控制室的结果。
- en: Run Process 1 again and see the result in the Control Room.
  id: totrans-275
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 再次运行流程1，并在控制室查看结果。
- en: Verify the Release contents and configure an Environment Variable
  id: totrans-276
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 验证发布内容并配置环境变量
- en: 'Let’s get familiar with `.bprelease` and configure one Environment Variable:'
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们熟悉`.bprelease`并配置一个环境变量：
- en: 'Verify that *three* Processes, *three* Work Queues, and *three* Environment
    Variables have been imported:'
  id: totrans-278
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确认已导入**三个**流程、**三个**工作队列和**三个**环境变量：
- en: '![Figure 5.24 – The Release contents for Example 3](img/B18416_05_24.jpg)'
  id: totrans-279
  prefs: []
  type: TYPE_IMG
  zh: '![图5.24 – 示例3的发布内容](img/B18416_05_24.jpg)'
- en: Figure 5.24 – The Release contents for Example 3
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.24 – 示例3的发布内容
- en: Open the Environment Variable named **Ch5 Example 3 Completed Review Folder
    Path**. Change the value so that it matches the default download folder of your
    web browser. Do not put a trailing slash at the end of the folder name.
  id: totrans-281
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开名为**Ch5 示例 3 完成审查文件夹路径**的环境变量。更改值以匹配您网络浏览器的默认下载文件夹。不要在文件夹名称末尾添加尾随斜杠。
- en: Examine Process 1’s Main Page
  id: totrans-282
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 检查流程 1 的主页面
- en: 'Next, let’s look at the first Process, which contains the primary business
    logic. This is close to what an RPA Process would look like without any IA components
    added. We’ll highlight the areas that make this solution design function:'
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们看看第一个流程，它包含主要业务逻辑。这接近于添加任何 IA 组件的 RPA 流程的外观。我们将突出显示使此解决方案设计功能化的区域：
- en: Open **Example 3A – IA Business Logic** in the *Ch5* Group in the Process Studio.
  id: totrans-284
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在流程工作室的 *Ch5* 组中打开**示例 3A – IA 业务逻辑**。
- en: 'Open any of the `Main Page`. See that a **Tag Filter** has been added to not
    select Items with the **Waiting ML Prediction** or **Manual Review** **Required**
    Tags:'
  id: totrans-285
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开任何“主页面”。注意已添加了一个**标签过滤器**，以避免选择带有**等待机器学习预测**或**手动审查****必需**标签的项目：
- en: '![Figure 5.25 – Get Next Item filters on two Tags](img/B18416_05_25.jpg)'
  id: totrans-286
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.25 – 获取下一个项目在两个标签上的过滤器](img/B18416_05_25.jpg)'
- en: Figure 5.25 – Get Next Item filters on two Tags
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.25 – 获取下一个项目在两个标签上的过滤器
- en: 'Look at the *Work* Block. There’s a Page named `03 Push to Queue 2` that’s
    responsible for connecting this Process to Process 2, which performs all ML predictions.
    All execution paths lead to this Page, meaning that all Items will eventually
    be pushed to Queue 2 for ML prediction:'
  id: totrans-288
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查看工作块。有一个名为“03 推送至队列 2”的页面，负责将此流程连接到执行所有机器学习预测的流程 2。所有执行路径都导向此页面，这意味着所有项目最终都将被推送到队列
    2 进行机器学习预测：
- en: '![Figure 5.26 – The 03 Push to Queue 2 Page](img/B18416_05_26.jpg)'
  id: totrans-289
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.26 – 03 推送至队列 2 页面](img/B18416_05_26.jpg)'
- en: Figure 5.26 – The 03 Push to Queue 2 Page
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.26 – 03 推送至队列 2 页面
- en: See that there’s an `Unlock Item` Page following `03 Push to` `Queue 2`.
  id: totrans-291
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 注意在“03 推送至队列 2”之后有一个“解锁项目”页面。
- en: Here, we saw that Tag Filters were used in **Get Next Item** so that Items that
    require manual review or ML prediction are not selected.
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们看到了在“获取下一个项目”中使用了标签过滤器，以便不选择需要手动审查或机器学习预测的项目。
- en: Next, let’s look at what happens on the `03 Push to Queue` `2` Page.
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们看看在“03 推送至队列 2”页面会发生什么。
- en: Pushing Items into the ML Work Queue
  id: totrans-294
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 将项目推入机器学习工作队列
- en: 'The `03 Push to Queue 2` Page adds a new Item in Work Queue 2, **Tags** the
    current Item, and adds a reference to the newly created Item in Work Queue 2 to
    the current Item’s Data:'
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: “03 推送至队列 2”页面在工作队列 2 中添加了一个新项目，**标记**了当前项目，并将对工作队列 2 中新创建项目的引用添加到当前项目的数据中：
- en: Open the `03 Push to Queue` `2` Page.
  id: totrans-296
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开“03 推送至队列 2”页面。
- en: 'Look at the first three Actions that are connected to Start. The first Action
    copies the existing Item Data into a new Collection, omitting any Data that’s
    irrelevant to the ML prediction. The second Action adds the current Item ID of
    Work Queue 1 into this new Collection. The third Action adds this new Collection
    to Work Queue 2:'
  id: totrans-297
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查看与开始连接的前三个动作。第一个动作将现有项目数据复制到一个新集合中，省略了与机器学习预测无关的任何数据。第二个动作将工作队列 1 的当前项目 ID
    添加到这个新集合中。第三个动作将这个新集合添加到工作队列 2：
- en: '![Figure 5.27 – The first three Actions of the 03 Push to Queue 2 Page](img/B18416_05_27.jpg)'
  id: totrans-298
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.27 – 03 推送至队列 2 页面的前三个动作](img/B18416_05_27.jpg)'
- en: Figure 5.27 – The first three Actions of the 03 Push to Queue 2 Page
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.27 – 03 推送至队列 2 页面的前三个动作
- en: Open the next Action named **Work Queues::Tag Item**. See that we add the **Waiting
    ML Prediction** Tag to the current Item, which prevents it from being picked up
    in this Process using **Get Next Item**. This Tag will be removed in Process 2.
  id: totrans-300
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开名为**工作队列::标记项目**的下一个动作。注意我们给当前项目添加了**等待机器学习预测**标签，这阻止了它在此流程中使用**获取下一个项目**被选中。此标签将在流程
    2 中被移除。
- en: Process 1 is relatively straightforward. Only a few changes have been made to
    the standard Process Template, namely adding *Tag Filters* to **Get Next Item**,
    adding a new Page to push Items into Work Queue 2, and unlocking the current Item.
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 流程 1 相对简单。仅对标准流程模板进行了少量修改，即在“获取下一个项目”中添加了*标签过滤器*，添加了一个新页面将项目推入工作队列 2，并解锁当前项目。
- en: Next, let’s look at the ML prediction Process itself.
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们看看机器学习预测流程本身。
- en: Examine Process 2’s Main Page
  id: totrans-303
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 检查流程 2 的主页面
- en: 'Let’s quickly look at Process 2’s `Main` `Page` to understand the logic that’s
    happening at a high level. This Process is responsible for running the ML prediction
    and checking to see whether HITL review is required through thresholding:'
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们快速查看流程 2 的 `Main` 页面，以了解在高级别上正在发生的逻辑。此流程负责运行机器学习预测并检查是否需要通过阈值检查进行 HITL 审查：
- en: Open **Example 3B – ML Prediction** in the *Ch5* Group in the Process Studio.
  id: totrans-305
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在流程工作室的 *Ch5* 组中打开 **示例 3B – 机器学习预测**。
- en: 'Look at the first two Pages in the *Work* Block on the `Main Page`. `01 ML
    Prediction` triggers the ML prediction and persists the predicted results into
    the current Item Data. `02 Check for Manual Review` contains the logic that checks
    the *threshold* between the two recommended resolutions with the highest Confidence
    Scores. These first two Pages have similar logic to what we’ve seen in previous
    examples:'
  id: totrans-306
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查看主页面上的 *工作* 块中的前两个页面。`01 机器学习预测` 触发机器学习预测并将预测结果持久化到当前项目数据中。`02 检查手动审查` 包含检查两个最高置信度分数推荐解决方案之间的
    *阈值* 的逻辑。这两个页面与我们在前面的示例中看到的逻辑类似：
- en: '![Figure 5.28 – The first two Pages in the Work Block of Process 2](img/B18416_05_28.jpg)'
  id: totrans-307
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.28 – 流程 2 工作块中的前两个页面](img/B18416_05_28.jpg)'
- en: Figure 5.28 – The first two Pages in the Work Block of Process 2
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.28 – 流程 2 工作块中的前两个页面
- en: Look at the `03a Update Queue 1 Item` Page. It is run when HITL review is not
    needed. In this Page, we try to lock the equivalent Item in Work Queue 1, update
    its Status, and remove the Tag. This allows Process 1 to continue processing this
    Item.
  id: totrans-309
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查看名为 `03a 更新队列 1 项目` 的页面。当不需要 HITL 审查时运行。在此页面中，我们尝试锁定工作队列 1 中等效的项目，更新其状态，并移除标签。这允许流程
    1 继续处理此项目。
- en: Look at the `03b Push to Queue 3` Page. It is run when HITL review is needed.
    This Page contains the logic needed to create an Item for Queue 3\. It’s largely
    the same as what was done in Process 1 to push an Item into Work Queue 2.
  id: totrans-310
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查看名为 `03b 推送到队列 3` 的页面。当需要 HITL 审查时运行。此页面包含创建队列 3 项目所需的逻辑。它与流程 1 中将项目推送到工作队列
    2 所做的操作大致相同。
- en: Examine Process 3’s Main Page
  id: totrans-311
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 检查流程 3 的主页面
- en: 'Finally, let’s take a high-level look at our third Process, which is responsible
    for saving the `.html` files for the reviewers, as well as checking for completed
    reviews:'
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，让我们从高级别看一下我们的第三个流程，该流程负责为审阅者保存 `.html` 文件，以及检查完成的审查：
- en: Open **Example 3C – Manual Review Logic** in the *Ch5* Group in the Process
    Studio.
  id: totrans-313
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在流程工作室的 *Ch5* 组中打开 **示例 3C – 手动审查逻辑**。
- en: 'See that the *Work* Block on the `Main Page` only has two Pages. There’s no
    Choice Stage and Status checking to skip steps because we want to be able to recreate
    the `.html` files if they’re missing:'
  id: totrans-314
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 注意到主页面上的 *工作* 块只有两个页面。没有选择阶段和状态检查以跳过步骤，因为我们希望能够在文件缺失时重新创建 `.html` 文件：
- en: '![Figure 5.29 – Two Pages in the Work Block of Process 3](img/B18416_05_29.jpg)'
  id: totrans-315
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.29 – 流程 3 工作块中的两个页面](img/B18416_05_29.jpg)'
- en: Figure 5.29 – Two Pages in the Work Block of Process 3
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.29 – 流程 3 工作块中的两个页面
- en: Look at the `01 Write Shared Review Data` Page. It writes the input data to
    the ML algorithm and the three predictions into a .html file using Find/replace.
    Once the file is saved to the shared location specified by the **Ch5 Example 3
    To Review Folder Path** Environment Variable, this file path is saved into the
    current Item’s Data. This allows us to check to see whether the file is missing
    and recreate it if necessary.
  id: totrans-317
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查看名为 `01 编写共享审查数据` 的页面。该页面将输入数据写入机器学习算法，并将三个预测结果使用查找/替换功能写入一个 .html 文件。一旦文件保存到由
    **Ch5 示例 3 审查文件夹路径** 环境变量指定的共享位置，该文件路径就会被保存到当前项目的数据中。这使我们能够检查文件是否存在，并在必要时重新创建它。
- en: Look at the `02 Check for Reviewed Predictions` Page. It checks to see whether
    a `.txt` file is present in the location specified by the **Ch5 Example 3 Completed
    Review Folder Path** Environment Variable. If yes, we try to lock the equivalent
    Item in Work Queue 1, update its Status, and remove the Tag. This allows Process
    1 to continue processing this Item after it’s retrieved using **Get** **Next Item**.
  id: totrans-318
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查看名为 `02 检查已审查预测` 的页面。该页面检查是否在由 **Ch5 示例 3 已完成审查文件夹路径** 环境变量指定的位置存在 `.txt` 文件。如果是，我们尝试锁定工作队列
    1 中等效的项目，更新其状态，并移除标签。这允许流程 1 在使用 **获取下一个项目** 后继续处理此项目。
- en: Look at the two Pages that follow the *Item Review Complete?* Decision Stage.
    Depending on whether the Item was manually reviewed, we either defer the Item
    or mark it as Completed.
  id: totrans-319
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查看紧随“*项目审查完成？* 决策阶段”的两个页面。根据项目是否手动审查，我们要么推迟项目，要么将其标记为已完成。
- en: After examining the three Processes of this solution, we should notice that
    nothing here is really new compared to the earlier examples in this chapter. However,
    we’ve structured the solution such that the three different concerns – the business
    logic, the ML prediction logic, and the HITL review logic – stay relatively independent.
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 在检查这个解决方案的三个进程之后，我们应该注意到，与本章早期示例相比，这里实际上没有什么真正的新内容。然而，我们已经将解决方案结构化，使得三个不同的关注点——业务逻辑、ML预测逻辑和HITL审查逻辑——保持相对独立。
- en: Communication between Work Queues happens by persisting the Item ID of other
    Queues into our Item Data. This allows us to lock and update Item Tags and Statuses
    of Process 1, containing the main business flow.
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 工作队列之间的通信是通过将其他队列的项目ID持久化到我们的项目数据中实现的。这允许我们锁定并更新包含主要业务流程的进程1的项目标签和状态。
- en: Now, let’s run the example Process.
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们运行示例进程。
- en: Run the primary Process
  id: totrans-323
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 运行主进程
- en: 'We need to run three Processes in the Control Room to complete our example.
    The primary Process that we’ll run next randomly generates 10 items to populate
    the Work Queue. After populating, each item should have the Status and Tags set
    so that we’re waiting for an ML prediction before we can continue:'
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要在控制室运行三个进程来完成我们的示例。我们将运行的下一个主要进程将随机生成10个项目以填充工作队列。填充后，每个项目都应该设置状态和标签，以便我们可以在继续之前等待ML预测：
- en: Run **Example 3A – IA Business Logic** in the *Ch5* Group in the Control Room.
    Wait for the Session to complete.
  id: totrans-325
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在控制室中的*Ch5*组运行**示例3A – IA业务逻辑**。等待会话完成。
- en: 'View the contents of [*Chapter 5*](B18416_05.xhtml#_idTextAnchor075) *Example
    3 Queue 1* under **Queue Management**. See that all 10 Items have the **Waiting
    ML** **Prediction** Tag:'
  id: totrans-326
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**队列管理**下查看[*第5章*](B18416_05.xhtml#_idTextAnchor075) *示例3队列1*的内容。您会看到所有10个项目都有**等待ML**
    **预测**标签：
- en: '![Figure 5.30 – All Items in Queue 1 are waiting for ML prediction](img/B18416_05_30.jpg)'
  id: totrans-327
  prefs: []
  type: TYPE_IMG
  zh: '![图5.30 – 队列1中的所有项目正在等待ML预测](img/B18416_05_30.jpg)'
- en: Figure 5.30 – All Items in Queue 1 are waiting for ML prediction
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.30 – 队列1中的所有项目正在等待ML预测
- en: View the contents of `Chapter 5` `Example 3 Queue 2` under **Queue Management**.
    There should be 10 Items in this Queue, with the same Item Keys that are in Queue
    1.
  id: totrans-329
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**队列管理**下查看`第5章` `示例3队列2`的内容。这个队列中应该有10个项目，与队列1中的项目键相同。
- en: The Items are now waiting for Process 2 to run.
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 项目现在正在等待进程2运行。
- en: Run the ML Process
  id: totrans-331
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 运行ML进程
- en: 'The second Process that we need to run generates the ML prediction and determines
    which Items require HITL review. Work Queues 1, 2, and 3 are modified by this
    Process:'
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要运行的第二个进程生成ML预测并确定哪些项目需要HITL审查。工作队列1、2和3都由这个进程修改：
- en: Run **Example 3B – ML Prediction** in the *Ch5* Group in the Control Room. Wait
    for the Session to complete.
  id: totrans-333
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在控制室中的*Ch5*组运行**示例3B – ML预测**。等待会话完成。
- en: 'View the contents of [*Chapter 5*](B18416_05.xhtml#_idTextAnchor075) *Example
    3 Queue 2* under **Queue Management**. See that all 10 Items have completed their
    ML prediction:'
  id: totrans-334
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**队列管理**下查看[*第5章*](B18416_05.xhtml#_idTextAnchor075) *示例3队列2*的内容。您会看到所有10个项目已完成他们的ML预测：
- en: '![Figure 5.31 – All Items in Queue 2 have finished their ML prediction](img/B18416_05_31.jpg)'
  id: totrans-335
  prefs: []
  type: TYPE_IMG
  zh: '![图5.31 – 队列2中的所有项目已完成他们的ML预测](img/B18416_05_31.jpg)'
- en: Figure 5.31 – All Items in Queue 2 have finished their ML prediction
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.31 – 队列2中的所有项目已完成ML预测
- en: 'View the contents of [*Chapter 5*](B18416_05.xhtml#_idTextAnchor075) *Example
    3 Queue 1* under **Queue Management**. See that some of the Items require HITL
    review. Note that this is truly random. If you don’t see any Items that need review,
    please run Process 1 and Process 2 again. Count the number of Items that need
    review. In the following figure, it’s two:'
  id: totrans-337
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**队列管理**下查看[*第5章*](B18416_05.xhtml#_idTextAnchor075) *示例3队列1*的内容。您会看到一些项目需要HITL审查。请注意，这确实是随机的。如果您没有看到任何需要审查的项目，请再次运行进程1和进程2。计算需要审查的项目数量。在以下图中，它是两个：
- en: '![Figure 5.32 – Some Items in Queue 1 should require manual review](img/B18416_05_32.jpg)'
  id: totrans-338
  prefs: []
  type: TYPE_IMG
  zh: '![图5.32 – 队列1中的一些项目应该需要人工审查](img/B18416_05_32.jpg)'
- en: Figure 5.32 – Some Items in Queue 1 should require manual review
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.32 – 队列1中的一些项目应该需要人工审查
- en: 'View the contents of [*Chapter 5*](B18416_05.xhtml#_idTextAnchor075) *Example
    3 Queue 3* under **Queue Management**. There should be the same number of Items
    in this queue as was counted in *step 3* (two). You can compare the two Queues
    based on Item Key as well:'
  id: totrans-340
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**队列管理**下查看[*第5章*](B18416_05.xhtml#_idTextAnchor075) *示例3队列3*的内容。这个队列中的项目数量应该与*步骤3*中计数的一样（两个）。您还可以根据项目键比较这两个队列：
- en: '![Figure 5.33 – Items needing manual review in Queue 1 should also be in Queue
    3](img/B18416_05_33.jpg)'
  id: totrans-341
  prefs: []
  type: TYPE_IMG
  zh: '![图5.33 – 需要手动审查的项目在队列1中也应在队列3中](img/B18416_05_33.jpg)'
- en: Figure 5.33 – Items needing manual review in Queue 1 should also be in Queue
    3
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.33 – 需要手动审查的项目在队列1中也应在队列3中
- en: Run the HITL review Process
  id: totrans-343
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 运行HITL审查流程
- en: 'Now, let’s run the final Process. This Process generates review data and checks
    to see whether a review is complete. If so, it updates the Item in Work Queue
    1 so that it can continue automated processing:'
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们运行最后一个流程。此流程生成审查数据并检查审查是否完成。如果是，它将更新工作队列1中的项目，以便它可以继续自动化处理：
- en: Run **Example 3C – Manual Review Logic** in the *Ch5* Group in the Control Room.
    Wait for the Session to complete. This Process will have looped through all Items
    needing review, created their review files, and checked to see whether the review
    was complete.
  id: totrans-345
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在控制室中的*Ch5*组中运行**示例3C – 手动审查逻辑**。等待会话完成。此流程将遍历所有需要审查的项目，创建它们的审查文件，并检查审查是否完成。
- en: Open the folder defined by the `.html` files in the folder should be the same
    as the number of Items in [*Chapter 5*](B18416_05.xhtml#_idTextAnchor075) *Example
    3 Queue 1* (two in this case).
  id: totrans-346
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在文件夹中打开由`.html`文件定义的文件夹，应该与[*第5章*](B18416_05.xhtml#_idTextAnchor075) *示例3队列1*中的项目数量相同（本例中为两个）。
- en: Manually review one file
  id: totrans-347
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 手动审查一个文件
- en: 'Let’s review one prediction by opening one of the review files and submitting
    the web form. This web form will attempt to save a `.txt` file to the location
    specified by the **Ch5 Example 3 Completed Review Folder Path** Environment Variable:'
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过打开一个审查文件并提交网页表单来审查一个预测。此网页表单将尝试将.txt文件保存到由**Ch5 Example 3 完成审查文件夹路径**环境变量指定的位置：
- en: Choose one of the `.html` files and open it in your web browser.
  id: totrans-349
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择一个`.html`文件并在您的网页浏览器中打开它。
- en: 'Scroll to the bottom of the web page, select a random Resolution from the drop-down
    list, and press the **Submit Reviewed** **Prediction** button:'
  id: totrans-350
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 滚动到网页底部，从下拉列表中选择一个随机的**决议**，然后按下**提交已审查**的**预测**按钮：
- en: '![Figure 5.34 – Manually review the Item](img/B18416_05_34.jpg)'
  id: totrans-351
  prefs: []
  type: TYPE_IMG
  zh: '![图5.34 – 手动审查项目](img/B18416_05_34.jpg)'
- en: Figure 5.34 – Manually review the Item
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.34 – 手动审查项目
- en: Save the file if the **Save as** dialog appears. Ensure that the folder that
    you save the file to matches the value of the **Ch5 Example 3 Completed Review
    Folder Path** Environment Variable. Do not rename the file. The **Save as** dialog
    might not appear if your browser is set to automatically download files.
  id: totrans-353
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果出现**另存为**对话框，请保存文件。确保您保存文件的文件夹与**Ch5 Example 3 完成审查文件夹路径**环境变量的值匹配。不要重命名文件。如果您的浏览器设置为自动下载文件，则可能不会出现**另存为**对话框。
- en: Run the HITL review Process again
  id: totrans-354
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 再次运行HITL审查流程
- en: 'Now that we’ve reviewed a prediction, we can run the third Process again (this
    will find that there’s a matching .txt file for one of the Items, and update that
    Item in Work Queue 1 by removing the Tag so that it can be picked up by Process
    1’s Get Next Item):'
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经审查了一个预测，我们可以再次运行第三个流程（这将发现其中一个项目有一个匹配的.txt文件，并通过移除标签来更新工作队列1中的该项目，以便它可以被流程1的获取下一个项目所获取）：
- en: Run **Example 3C – Manual Review Logic** in the *Ch5* Group in the Control Room.
    Wait for the Session to complete.
  id: totrans-356
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在控制室中的*Ch5*组中运行**示例3C – 手动审查逻辑**。等待会话完成。
- en: 'View the contents of [*Chapter 5*](B18416_05.xhtml#_idTextAnchor075) *Example
    3 Queue 3* under **Queue Management**. One of the Items should be marked as **Completed**:'
  id: totrans-357
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**队列管理**下查看[*第5章*](B18416_05.xhtml#_idTextAnchor075) *示例3队列3*的内容。其中一个项目应被标记为**完成**：
- en: '![Figure 5.35 – One Item has been marked as Completed in Queue 3](img/B18416_05_35.jpg)'
  id: totrans-358
  prefs: []
  type: TYPE_IMG
  zh: '![图5.35 – 队列3中的一个项目已被标记为已完成](img/B18416_05_35.jpg)'
- en: Figure 5.35 – One Item has been marked as Completed in Queue 3
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.35 – 队列3中的一个项目已被标记为已完成
- en: 'View the contents of [*Chapter 5*](B18416_05.xhtml#_idTextAnchor075) *Example
    3 Queue 1* under **Queue Management**. The Item with the same Item Key should
    have a **Manual Review Complete** Status and no Tag:'
  id: totrans-360
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**队列管理**下查看[*第5章*](B18416_05.xhtml#_idTextAnchor075) *示例3队列1*的内容。具有相同项目键的项目应有一个**手动审查完成**的状态和没有标签：
- en: '![Figure 5.36 – The same Item in Queue 1 should have an updated Status and
    no Tag](img/B18416_05_36.jpg)'
  id: totrans-361
  prefs: []
  type: TYPE_IMG
  zh: '![图5.36 – 队列1中的相同项目应有一个更新的状态和没有标签](img/B18416_05_36.jpg)'
- en: Figure 5.36 – The same Item in Queue 1 should have an updated Status and no
    Tag
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.36 – 队列1中的相同项目应有一个更新的状态和没有标签
- en: Run the primary Process again
  id: totrans-363
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 再次运行主流程
- en: The last step in this example is to run the primary Process again (note that
    10 new Items will be added to Queue 1 and Queue 2; we expect all of the Items
    from the previous Session run to complete except for those marked as **Manual**
    **Review Required**):.
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: 在此示例中的最后一步是再次运行主流程（请注意，将有 10 个新项目添加到队列 1 和队列 2；我们预计除了标记为**需要手动****审查**的项目外，所有来自上次会话运行的项目都将完成）：。
- en: Run **Example 3A – IA Business Logic** in the *Ch5* Group in the Control Room.
    Wait for the Session to complete.
  id: totrans-365
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在控制室中的**Ch5**组中运行**示例 3A – IA 业务逻辑**。等待会话完成。
- en: View the contents of [*Chapter 5*](B18416_05.xhtml#_idTextAnchor075) *Example
    3 Queue 1* under **Queue Management**. See that all of the Items that were added
    in the original Session run are marked as **Completed**, except for the ones tagged
    with **Manual** **Review Required**.
  id: totrans-366
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**队列管理**下查看[*第 5 章*](B18416_05.xhtml#_idTextAnchor075) **示例 3 队列 1**的内容。您会看到在原始会话中添加的所有项目都被标记为**完成**，除了那些标记为**需要手动****审查**的项目。
- en: We’ve completed *Example 3*. In this example, we went through a *three*-Process,
    *three*-Work Queue design that separates ML logic and HITL review logic into their
    own Process and Work Queue. Inter-process communication is handled by Tag Filters,
    Statuses, and keeping references to the equivalent Item IDs in other Queues.
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经完成了**示例 3**。在这个示例中，我们经历了一个**三**流程、**三**工作队列的设计，将机器学习逻辑和HITL审查逻辑分别放入它们自己的流程和工作队列中。进程间通信由标签过滤器、状态和引用其他队列中等效的项目
    ID 来处理。
- en: The main benefits of this type of design are simplified auditability and the
    separate scaling of different IA concerns. We won’t go through the motions of
    exporting the Session Logs, but it’s straightforward to see that we can selectively
    export just the ML or HITL review logs in case a customer (or regulatory body)
    complains about the resolution chosen for their claim.
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: 此类设计的主要优点是简化了可审计性以及不同 IA 关注点的独立扩展。我们不会走通过导出会话日志的过场，但可以清楚地看到，在客户（或监管机构）对他们的索赔选择的解决方案提出投诉的情况下，我们可以选择性地仅导出机器学习或HITL审查日志。
- en: Design comparison
  id: totrans-369
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设计比较
- en: We’ve covered five different IA designs that varied in terms of their number
    of Processes and Work Queues. Let’s review the designs to understand why we might
    want to choose one design over another. Keep in mind that none of the designs
    are better or worse than others. It’s about how appropriate it is for your use
    case, the skill level of developers, and the overall maturity of the IA initiative.
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经介绍了五种不同的 IA 设计，这些设计在流程和工作队列的数量方面有所不同。让我们回顾这些设计，以了解为什么我们可能想要选择一种设计而不是另一种设计。请记住，没有哪种设计比其他设计更好或更差。这关乎它是否适合您的用例、开发人员的技能水平以及
    IA 初始化的整体成熟度。
- en: Design 1 – asynchronous reviews (one Process, one Work Queue)
  id: totrans-371
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设计 1 – 异步审查（一个流程，一个工作队列）
- en: This self-contained design allows for human review to be delayed forever. The
    Process alternates through cycles of doing work on an Item and checking for reviewed
    predictions. The checking of completed reviews is done by querying the data share
    location as opposed to looping through each Item that’s pending review.
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: 此自包含设计允许人类审查无限期延迟。流程通过在项目上执行工作并检查已审查预测的周期交替。完成的审查检查是通过查询数据共享位置来完成的，而不是通过循环遍历每个待审查的项目。
- en: Since everything is in a single Process and Work Queue, it’s well suited for
    scenarios where the number of concurrent Sessions available is limited or the
    work volume is low. Control Room management overhead is also low. Maintaining/updating
    the single Process can be considered simpler for newer development teams.
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: 由于所有内容都在单个流程和工作队列中，因此它非常适合可用的并发会话数量有限或工作量较低的场景。控制室的管理开销也较低。对于新开发团队来说，维护/更新单个流程可能更简单。
- en: This design is less suitable if checking for a reviewed prediction takes a long
    time to execute or is prone to throw Exceptions. This is because the checking
    logic is located outside of the main Work Block.
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: 如果检查已审查预测需要很长时间才能执行或容易抛出异常，则此设计不太合适。这是因为检查逻辑位于主工作块之外。
- en: Design 2 – synchronous (polling) reviews (one Process, one Work Queue)
  id: totrans-375
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设计 2 – 同步（轮询）审查（一个流程，一个工作队列）
- en: This design should be used when we need to stop and wait for HITL review to
    complete when HITL is required. If a human review isn’t performed within the time
    limit, the Item is marked as an Exception. Since each Item pauses and waits for
    human review, the overall case throughput of this design is the lowest. Otherwise,
    it has similar pros/cons to the asynchronous design.
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: 当需要停止并等待HITL审查完成时，应使用此设计。如果未在规定时间内进行人工审查，项目将被标记为异常。由于每个项目都会暂停并等待人工审查，因此此设计的整体案件吞吐量最低。否则，它具有与异步设计相似的优势/劣势。
- en: Design 3 – independent HITL review logic (two Processes, one Work Queue)
  id: totrans-377
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设计3 – 独立的HITL审查逻辑（两个流程，一个工作队列）
- en: This design splits the HITL review logic into a separate Process while keeping
    the same Work Queue. The main benefit of this design is that the business logic
    and review checking can be scaled independently in terms of Session runs. The
    maintainability in my opinion is also improved.
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: 此设计将HITL审查逻辑拆分为一个单独的流程，同时保持相同的工作队列。此设计的主要优点是，业务逻辑和审查检查可以在会话运行方面独立扩展。在我看来，可维护性也得到了提高。
- en: This design loops through all Work Queue Items that need human review instead
    of looping at the data share interface. This allows review records to be recreated
    if they’re missing. This also increases the Total Work Time of an individual case,
    making the statistics look worse.
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
  zh: 此设计遍历所有需要人工审查的工作队列项目，而不是在数据共享接口处循环。这允许在缺少审查记录时重新创建它们。这也增加了单个案件的总工作时间，使统计数据看起来更差。
- en: Since there are two BP Processes, we need a minimum of two Sessions to run this
    solution. If the Session runs for the review logic Process are infrequent, the
    data share records won’t be created in a timely manner, even if the reviewers
    are available to do their work. Items that have finished human review also depend
    on frequent runs of the review-checking Process so that the Item can have its
    Status updated and picked up for continued automated processing.
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: 由于存在两个BP流程，我们需要至少两个会话来运行此解决方案。如果会话运行审查逻辑流程不频繁，即使审查员有空闲时间工作，数据共享记录也不会及时创建。完成人工审查的项目也依赖于审查检查流程的频繁运行，以便项目可以更新其状态并继续自动化处理。
- en: Finally, the scheduling is more complex when compared to single-Process solutions,
    although this shouldn’t be an issue for experienced Controllers.
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，与单流程解决方案相比，调度更为复杂，尽管这不应该对经验丰富的控制器造成问题。
- en: Design 4 – fully independent HITL reviews (two Processes, two Work Queues)
  id: totrans-382
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设计4 – 完全独立的HITL审查（两个流程，两个工作队列）
- en: Building on Design 3, we can further separate the manual review portion by pushing
    Items that need human review into a separate Work Queue. This allows us to isolate
    case statistics, separating the time spent performing review logic (saving the
    data to be shared with reviewers and checking for completed reviews) from the
    time spent performing business logic. The trade-off that’s made when isolating
    these statistics is that we might want an end-to-end view of the time spent on
    a case. This requires adding the case times from two Work Queues together. Operationally,
    adding another Work Queue makes tracking cases in the Control Room more difficult
    for the Controller.
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
  zh: 在设计3的基础上，我们可以通过将需要人工审查的项目推入单独的工作队列来进一步分离人工审查部分。这使我们能够隔离案件统计信息，将执行审查逻辑（将数据保存以供审查员共享并检查完成的审查）的时间与执行业务逻辑的时间分开。在隔离这些统计信息时做出的权衡是，我们可能希望有一个端到端的时间视图。这需要将两个工作队列的案件时间相加。从操作角度来看，添加另一个工作队列会使控制器在控制室中跟踪案件变得更加困难。
- en: Most notably, adding a new Work Queue increases the auditability of what was
    reviewed and allows for this data to be more easily fed back to data science teams
    so that the ML algorithm can be improved. This design is also a good way to extend
    an existing RPA process, by adding ML. Besides these points, this design has similar
    pros and cons to Design 3.
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: 最值得注意的是，添加新的工作队列增加了审查内容的可审计性，并允许这些数据更容易地反馈给数据科学团队，以便改进机器学习算法。通过添加机器学习，此设计也是扩展现有RPA流程的好方法。除了这些要点外，此设计具有与设计3相似的优势和劣势。
- en: Design 5 – full separation (three Processes, three Work Queues)
  id: totrans-385
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设计5 – 完全分离（三个流程，三个工作队列）
- en: Our final design builds on Design 4\. It places all the ML logic (making the
    prediction and checking whether HITL review is necessary) into a new Process and
    data into a separate Work Queue. As a result, we gain a simple way to audit all
    ML predictions. Besides this, we have similar pros and cons to Designs 3 and 4.
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
  zh: 我们最终的设计建立在设计4的基础上。它将所有ML逻辑（做出预测和检查是否需要HITL审查）放入一个新的流程，并将数据放入单独的工作队列。因此，我们获得了一种简单的方式来审计所有ML预测。除此之外，我们还有与设计3和4相似的优势和劣势。
- en: Summary
  id: totrans-387
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we explored five IA designs that differed in terms of the number
    of BP Processes and Work Queues. Deciding on the number of Processes and Work
    Queues is extremely important for both IA and general RPA design as it affects
    almost every aspect of the remaining solution. This includes the potential scalability,
    case reporting statistics, maintainability, logging, auditability, scheduling,
    and other Control Room operations.
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们探讨了五种IA设计，这些设计在BP流程和工作队列的数量方面有所不同。确定流程和工作队列的数量对于IA和通用RPA设计都极为重要，因为它几乎影响剩余解决方案的各个方面。这包括潜在的扩展性、案例报告统计、可维护性、日志记录、可审计性、调度以及其他控制室操作。
- en: Two IA designs were presented containing a single Process and a single Work
    Queue. One design was for synchronous reviews and the other for asynchronous reviews.
    In our third design, we split off the logic used to handle HITL reviews into its
    own Process, leading to a two-Process, single-Work Queue design. This allows for
    increased reusability and the separate scaling of business logic versus HITL review
    logic. For the fourth design, we added a new Work Queue to store all the Items
    that need manual review. This provides a simpler audit trail into which predictions
    were corrected by a human. It also allows us to more easily feed back these corrected
    predictions to the ML team. Finally, our fifth design further split off all of
    the ML calling logic into its own Work Queue and Process, enhancing scalability
    and simplifying the auditing of all ML predictions.
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
  zh: 两种IA设计包含单个流程和单个工作队列。一种设计用于同步审查，另一种设计用于异步审查。在我们的第三种设计中，我们将处理HITL审查的逻辑分离成独立的流程，从而形成两个流程、一个工作队列的设计。这允许提高重用性，并分别对业务逻辑和HITL审查逻辑进行扩展。对于第四种设计，我们添加了一个新的工作队列来存储所有需要人工审查的项目。这提供了一个更简单的审计轨迹，其中人类纠正了预测。这也使我们能够更容易地将这些纠正后的预测反馈给机器学习团队。最后，我们的第五种设计进一步将所有ML调用逻辑分离成独立的工作队列和流程，增强了可扩展性并简化了所有ML预测的审计。
- en: In the next chapter, we’ll discuss some smaller design elements that supplement
    the larger Process/Work Queue structure that was chosen based on the learnings
    of this chapter. These elements, such as Environment Variables, Session Variables,
    and Credentials, can improve the overall IA solution management and operations.
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将讨论一些较小的设计元素，这些元素补充了本章学习的基础上选择的大规模流程/工作队列结构。这些元素，例如环境变量、会话变量和凭证，可以改善整体IA解决方案的管理和操作。
