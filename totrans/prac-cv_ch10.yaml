- en: Machine Learning for Computer Vision
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 计算机视觉中的机器学习
- en: In this chapter, we will get an overview of the relevant machine learning theory
    and tools that are useful when developing applications such as image classification,
    object detection, and so on. With widespread communication tools and the wide
    availability of camera sensors, we are now bombarded with large amounts of image
    data. Utilizing this data to create computer vision applications requires an understanding
    of some basic machine learning concepts.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将概述相关的机器学习理论和工具，这些工具在开发图像分类、目标检测等应用程序时非常有用。随着通信工具的普及和摄像头传感器的广泛应用，我们现在被大量的图像数据所淹没。利用这些数据创建计算机视觉应用程序需要理解一些基本的机器学习概念。
- en: Let's begin by first explaining what machine learning is, and then we will see
    the different types of algorithms in it.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们先解释一下什么是机器学习，然后我们将看到其中的不同类型的算法。
- en: What is machine learning?
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是机器学习？
- en: 'Let''s say we have scanned images of several handwritten digits and want to
    make a piece of software that would recognize handwritten digits from an image
    scan. For simplicity, let''s assume that we have only one digit. The target software
    that we develop takes in this image and outputs a number corresponding to that
    image. We can create an algorithm with several checks, such as: if there is a
    single vertical line, then output it as 1, or if there is an oval shape, then
    show it as zero. However, this is very naive and is a bad solution because we
    can have vertical lines for other digits too: 7, 9, and so on. The following figure
    explains the overall process, taking in one of the samples from the MNIST handwritten
    digit dataset:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们已经扫描了几张手写数字的图像，并希望制作一个软件，该软件能够从图像扫描中识别手写数字。为了简化，让我们假设我们只有一个数字。我们开发的软件接受这张图像，并输出与该图像对应的数字。我们可以创建一个包含几个检查的算法，例如：如果有一条单独的垂直线，则输出1，或者如果有一个椭圆形，则显示为0。然而，这种方法非常天真，并且是一个糟糕的解决方案，因为我们也可以为其他数字有垂直线：7，9，等等。以下图解释了整个过程，取自MNIST手写数字数据集的一个样本：
- en: '![](img/bf938706-48ba-400d-94a7-79e814034409.png)'
  id: totrans-5
  prefs: []
  type: TYPE_IMG
  zh: '![](img/bf938706-48ba-400d-94a7-79e814034409.png)'
- en: There are several ways to model such a problem. We know that an image is made
    up of arrays of pixels and each pixel stores a value. In the previous figure,
    the value of each pixel is binary and an initial approach would be to compute
    the mean value of the image. Based on this mean value, we can define a function
    such that if the mean value lies between a range, then the image is of **9**;
    we can do the same for other digits. In this whole process, our parameters are
    the ranges for each digit image, and these ranges can be either add intuitively
    or learned through experience.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 有几种方法可以建模这样的问题。我们知道图像由像素数组组成，每个像素存储一个值。在之前的图中，每个像素的值是二进制的，最初的方法是计算图像的平均值。基于这个平均值，我们可以定义一个函数，如果平均值位于某个范围内，则该图像为**9**；我们可以对其他数字做同样的处理。在整个过程中，我们的参数是每个数字图像的范围，这些范围可以是直观地添加，也可以通过经验学习。
- en: However, such a method of detecting digits in an image is prone to errors and
    is not efficient. The parameters for the model may work only on a specific set
    of images and it is hard to find the right set of values for the ranges just from
    experience. The machine learning technique plays an important role here. In this
    setup, let's use a function that will output an array of size 10, corresponding
    to the digits we are trying to find. Each array value represents the probability
    of that digit in the image. The highest probability digit will be the identified
    digit. Now, we have modeled the output but our input is still the mean value of
    the image, which may not vary much between different images. So, instead of using
    the mean value, we can use whole image pixels and map the pixel values directly
    to the output probabilities. This way, we can capture more variations in the image,
    and this is the usual way in computer vision.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，这种在图像中检测数字的方法容易出错，并且效率不高。模型的参数可能只适用于特定的一组图像，而且仅凭经验很难找到合适的值。机器学习技术在这里起着重要作用。在这个设置中，让我们使用一个函数，该函数将输出一个大小为10的数组，对应于我们试图找到的数字。每个数组值代表该数字在图像中的概率。概率最高的数字将被识别为该数字。现在，我们已经对输出进行了建模，但我们的输入仍然是图像的平均值，这在不同图像之间可能变化不大。因此，我们不是使用平均值，而是可以使用整个图像像素，并将像素值直接映射到输出概率。这样，我们可以捕捉到图像中的更多变化，这是计算机视觉中的常用方法。
- en: 'Our understanding of machine learning can be further strengthened by a mathematical
    method for modeling the problem, as follows:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 我们对机器学习的理解可以通过以下建模问题的数学方法进一步增强：
- en: '![](img/40276c5c-ba1f-447d-804e-1262a44c0ef8.png)'
  id: totrans-9
  prefs: []
  type: TYPE_IMG
  zh: '![](img/40276c5c-ba1f-447d-804e-1262a44c0ef8.png)'
- en: Here, ![](img/e24f0411-0c91-4ab1-8328-8ea8e8c34690.png) is the input and ![](img/4eb00261-1f31-4629-81fc-b0c15fb3caad.png) is
    the output of the model. In our previous case, these are the images and probability
    array respectively. ![](img/ef19589b-5035-4772-a341-ce0efd0cbe69.png) is the machine
    learning model that we would like to create and ![](img/c006ccff-daaa-4f7e-b8b3-cf819d4d8be0.png) are
    the parameters of ![](img/03c68248-56f1-4e10-b3b2-ac59a911dc5b.png).
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，![](img/e24f0411-0c91-4ab1-8328-8ea8e8c34690.png)是输入，![](img/4eb00261-1f31-4629-81fc-b0c15fb3caad.png)是模型的输出。在我们之前的例子中，这些是图像和概率数组。![](img/ef19589b-5035-4772-a341-ce0efd0cbe69.png)是我们希望创建的机器学习模型，![](img/c006ccff-daaa-4f7e-b8b3-cf819d4d8be0.png)是![](img/03c68248-56f1-4e10-b3b2-ac59a911dc5b.png)的参数。
- en: Kinds of machine learning techniques
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 机器学习技术的种类
- en: In the previous section, we saw an introduction to machine learning and an example
    modeling of a digit image. Now, we will see the different styles of machine learning
    techniques.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一节中，我们看到了机器学习的介绍以及数字图像的建模示例。现在，我们将看到不同的机器学习技术风格。
- en: Supervised learning
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 监督学习
- en: In supervised learning, we are given a dataset of both the inputs and required
    outputs for the model; our goal is to create a model that will take any previously
    unseen data and output values that are true to the actual as much as possible.
    There are two kinds of supervised learning.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在监督学习中，我们被给出一个包含模型输入和所需输出的数据集；我们的目标是创建一个模型，该模型可以接受任何以前未见过的数据，并尽可能真实地输出值。监督学习有两种类型。
- en: Classification
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 分类
- en: This is the term for cases when the output of the model is categorical. For
    example, in the case of digit classification, the output is one of the 10 different
    digits.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 这是指模型输出为分类情况的术语。例如，在数字分类的情况下，输出是10个不同数字中的一个。
- en: Regression
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 回归
- en: This is the term for cases when the output has continuous values, for example,
    a line fitting model. In it, the goal is to approximate the curve as much as possible
    so that the output of the model would be a value within a certain range.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 这是指输出具有连续值的情况，例如，线性拟合模型。在其中，目标是尽可能逼近曲线，以便模型的输出是一个特定范围内的值。
- en: Unsupervised learning
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 无监督学习
- en: In this type of machine learning, we are not given any dataset with specific
    outputs; instead, the model should be able to find the possible outputs given
    an input. For example, in the previous handwritten digit image, we would like
    to estimate all possible digits in some ancient text. The assumption here is that
    we don't know how many different kinds of digits exist in that text. In such a
    case, the model should understand what a digit looks like. An example approach
    could be to segment the regions of the digit in the image and fit approximately
    basic shapes like lines, circles, rectangles, and so on.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种机器学习类型中，我们没有给出任何具有特定输出的数据集；相反，模型应该能够根据输入找到可能的输出。例如，在之前的手写数字图像中，我们希望估计某些古代文本中所有可能的数字。这里的假设是我们不知道该文本中存在多少种不同的数字。在这种情况下，模型应该理解数字的外观。一个可能的办法是对图像中数字的区域进行分割，并拟合基本形状，如线条、圆形、矩形等。
- en: Dimensionality's curse
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 维度诅咒
- en: Given the different kinds of machine learning techniques, it is highly important
    to know the challenges in modeling. We will use the previous digit classification
    method. We previously tried to model it using all pixels as the available input.
    The dimensions for the input are the image size, that is, h x w. It ranges from
    several hundreds to a few thousand. This size is considered as the input dimension,
    and as it increases, the computation as well as uncertainty in estimation increase.
    We need a bigger model to perform better estimation if the input dimension increases.
    This is termed **curse of dimensionality**.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑到不同的机器学习技术，了解建模中的挑战非常重要。我们将使用之前提到的数字分类方法。我们之前尝试使用所有像素作为可用输入来建模它。输入的维度是图像大小，即
    h x w。它从几百到几千不等。这个大小被认为是输入维度，随着它的增加，计算以及估计的不确定性也会增加。如果输入维度增加，我们需要更大的模型来进行更好的估计。这被称为**维度诅咒**。
- en: In order to resolve this curse, it is highly recommended to reduce the input
    dimensions. For example, instead of using pixel values as input, we can extract
    strong features and use them as input to the model. This will reduce the input
    dimensions significantly and may improve the overall performance of the model.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 为了解决这个诅咒，强烈建议减少输入维度。例如，我们不是使用像素值作为输入，而是提取强大的特征并将它们作为模型的输入。这将显著减少输入维度，并可能提高模型的总体性能。
- en: A rolling-ball view of learning
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 学习的滚动球视角
- en: To learn the parameters of the model, we create a `cost` function or `objective`
    function and minimize its value. The minimum value of `objective` will give the
    best parameters for the model. For example, let model ![](img/cbda72ff-a37b-4353-9215-6f0c6cdfde00.png) predicts
    a value ![](img/12d1df00-4788-46bf-bca4-9450dc4f17fb.png)and also let we are given
    with the dataset of both the model input and the output. Then, learning a model
    requires updating the parameters ![](img/d9580831-a1bf-44ea-a416-3b243393d3a8.png) such
    that we get the best performance.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 为了学习模型的参数，我们创建一个`成本`函数或`目标`函数，并最小化其值。`目标`的最小值将给出模型的最佳参数。例如，假设模型 ![](img/cbda72ff-a37b-4353-9215-6f0c6cdfde00.png)
    预测一个值 ![](img/12d1df00-4788-46bf-bca4-9450dc4f17fb.png)，并且我们给出了模型输入和输出的数据集。那么，学习一个模型需要更新参数
    ![](img/d9580831-a1bf-44ea-a416-3b243393d3a8.png)，以便我们获得最佳性能。
- en: 'To make the model learn, we use parameter update rule. It works by estimating
    how far the model-estimated values are away from the target values and then updates
    the parameter such that this difference reduces. After several iterations, the
    difference gets smaller, and once it is small enough, we say our model has learnt
    the parameters. A figurative explanation is given here:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 为了让模型学习，我们使用参数更新规则。它通过估计模型估计值与目标值之间的距离，然后更新参数，使得这种差异减少。经过几次迭代，差异会变小，一旦足够小，我们就说我们的模型已经学会了参数。这里给出了一个形象的解释：
- en: '![](img/2fb6a99e-0246-4322-9ca8-4aaeacdf2bbe.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2fb6a99e-0246-4322-9ca8-4aaeacdf2bbe.png)'
- en: The learning of the model is similar to a rolling ball. It is an iterative process,
    and after each process, the parameters are updated. The update pushes the parameters
    to minimize an `objective` function. This minimization is represented as pushing
    the ball downwards on the slope. The best parameters are equivalent to model state
    at the bottom of the slope.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 模型的学习类似于滚动球。它是一个迭代过程，每次过程后，参数都会更新。更新将参数推向最小化`目标`函数。这种最小化表示为将球向下推到斜坡上。最佳参数相当于斜坡底部的模型状态。
- en: Useful tools
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 有用工具
- en: In this section, we will see some of the tools that are used while creating
    machine learning models. Here, we will be using the scikit-learn package, but
    these are available in many other libraries too. The overall functioning and the
    purpose remain the same.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将看到在创建机器学习模型时使用的某些工具。在这里，我们将使用scikit-learn包，但这些在其他许多库中也是可用的。整体功能和目的保持不变。
- en: Preprocessing
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 预处理
- en: Preprocessing the input as well as target labels in settings such as classification
    or regression is as important as the model itself. Some of the techniques used
    are explained as follows.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在分类或回归等设置中对输入以及目标标签进行预处理与模型本身一样重要。以下是一些使用的技术解释。
- en: Normalization
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 归一化
- en: For the ease of the model to learn proper parameters through a training set,
    it is highly essential to normalize the values in a small range, usually 0 to
    1.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 为了让模型通过训练集学习适当的参数，将值归一化到一个小范围内，通常是0到1，是非常重要的。
- en: Noise
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 噪声
- en: For making the system more robust, the input can also be added with small Gaussian
    noise. In the case of images as input, the noise corresponds to salt and pepper
    noise.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使系统更加鲁棒，输入也可以添加小的高斯噪声。在图像作为输入的情况下，噪声对应于盐和胡椒噪声。
- en: Postprocessing
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 后处理
- en: In the case of classification, the output of the model is an array of probabilities.
    To compute the predicted label for the input, we use an index with the maximum
    value of the array.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在分类的情况下，模型的输出是一个概率数组。为了计算输入的预测标签，我们使用数组中最大值的索引。
- en: In the case of regression, the output of the model is usually normalized values
    between the range 0-1\. This requires rescaling of the output to the original
    domain.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在回归的情况下，模型的输出通常是介于0-1范围内的归一化值。这需要对输出进行缩放以回到原始域。
- en: Evaluation
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 评估
- en: 'Once we have trained a model, to evaluate, it is highly necessary to check
    its overall validity. In a binary classification problem, setting the evaluation
    is done by using the following output values. Here, we want to evaluate the model''s
    performance for category A:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们训练了一个模型，为了评估它，高度有必要检查其整体有效性。在二元分类问题中，设置评估是通过使用以下输出值完成的。在这里，我们想要评估模型对类别A的性能：
- en: '**True positive **(**TP**): Given a sample from label A, the output is also
    categorized as A'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**真阳性**（**TP**）：给定一个来自标签A的样本，输出也被分类为A'
- en: '**True negative** (**TN**): Given a sample from label A, the output is categorized
    into B'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**真阴性**（**TN**）：给定一个来自标签A的样本，输出被分类到B'
- en: '**False positive** (**FP**): Given a sample from label B, the output is categorized
    into A'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**假阳性**（**FP**）：给定一个来自标签B的样本，输出被分类到A'
- en: '**False negative** (**FN**): Given a sample from B, the output is also categorized
    into B'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**假阴性**（**FN**）：给定一个来自B的样本，输出也被分类到B'
- en: This is done for the evaluation set, and based on it, we compute the following
    parameters.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 这是在评估集上完成的，并且基于它，我们计算以下参数。
- en: Precision
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 精确度
- en: 'The precision value tells us how much the result is relevant to our goal in
    accuracy. This is computed as follows:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 精确度值告诉我们结果与我们的目标在准确性方面有多相关。这是按照以下方式计算的：
- en: '![](img/c8cf6d9d-c869-4f16-bf21-5d8d3491f5bb.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/c8cf6d9d-c869-4f16-bf21-5d8d3491f5bb.png)'
- en: 'Using scikit-learn, we can do this as:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 使用scikit-learn，我们可以这样做：
- en: '[PRE0]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Recall
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 召回率
- en: 'Recall tells us how many of the results are truly relevant. This is computed
    as follows:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 召回率告诉我们有多少结果是真正相关的。这是按照以下方式计算的：
- en: '![](img/9587bbf1-945e-4ecb-832b-aaba7a2fbab2.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/9587bbf1-945e-4ecb-832b-aaba7a2fbab2.png)'
- en: 'Using scikit-learn:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 使用scikit-learn：
- en: '[PRE1]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: F-measure
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: F度量
- en: 'Using both the precision and recall values, F-measure (specifically F1-score
    for the overall evaluation) is computed. This is given as follows:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 使用精确度和召回率值，计算F度量（特别是F1分数用于整体评估）。这是按照以下方式给出的：
- en: '![](img/5088628f-e014-46f3-8e86-6b3cbcada60f.png)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/5088628f-e014-46f3-8e86-6b3cbcada60f.png)'
- en: 'Using scikit-learn, this can be computed as:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 使用scikit-learn，这可以计算如下：
- en: '[PRE2]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Summary
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, an overview of machine learning was explained with relevant
    tools. The explanation here complements several algorithms presented in the chapter.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们用相关工具解释了机器学习概述。这里的解释补充了章节中提出的几个算法。
- en: Taking into account the curse of dimensionality, learning overview, and evaluation
    of the model, we can create better computer vision applications that use machine
    learning techniques.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑到维度诅咒、学习概述和模型评估，我们可以创建更好的计算机视觉应用，这些应用使用机器学习技术。
