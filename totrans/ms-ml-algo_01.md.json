["```py\nimport numpy as np\n\ndef zero_center(X):\n    return X - np.mean(X, axis=0)\n\ndef whiten(X, correct=True):\n    Xc = zero_center(X)\n    _, L, V = np.linalg.svd(Xc)\n    W = np.dot(V.T, np.diag(1.0 / L))\n    return np.dot(Xc, W) * np.sqrt(X.shape[0]) if correct else 1.0\n```", "```py\nfrom sklearn.model_selection import train_test_split\n\nX_train, X_test, Y_train, Y_test = train_test_split(X, Y, train_size=0.7, random_state=1)\n```", "```py\nfrom sklearn.datasets import load_digits\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.svm import SVC\n\ndata = load_digits()\nsvm = SVC(kernel='poly')\n\nskf_scores = cross_val_score(svm, data['data'], data['target'], cv=10)\n\nprint(skf_scores)\n[ 0.96216216  1\\.          0.93922652  0.99444444  0.98882682  0.98882682\n  0.99441341  0.99438202  0.96045198  0.96590909]\n\nprint(skf_scores.mean())\n0.978864325583\n```", "```py\nfrom sklearn.model_selection import cross_val_score, LeaveOneOut\n\nloo_scores = cross_val_score(svm, data['data'], data['target'], cv=LeaveOneOut())\n\nprint(loo_scores[0:100])\n[ 1\\.  1\\.  1\\.  1\\.  1\\.  0\\.  1\\.  1\\.  1\\.  1\\.  1\\.  1\\.  1\\.  1\\.  1\\.  1\\.  1\\.  1.\n  1\\.  1\\.  1\\.  1\\.  1\\.  1\\.  1\\.  1\\.  1\\.  1\\.  1\\.  1\\.  1\\.  1\\.  1\\.  1\\.  1\\.  1.\n  1\\.  0\\.  1\\.  1\\.  1\\.  1\\.  1\\.  1\\.  1\\.  1\\.  1\\.  1\\.  1\\.  1\\.  1\\.  1\\.  1\\.  1.\n  1\\.  1\\.  1\\.  1\\.  1\\.  1\\.  1\\.  1\\.  1\\.  1\\.  1\\.  1\\.  1\\.  1\\.  1\\.  0\\.  1\\.  1.\n  1\\.  1\\.  1\\.  1\\.  1\\.  1\\.  1\\.  1\\.  1\\.  1\\.  1\\.  1\\.  1\\.  1\\.  1\\.  1\\.  1\\.  1.\n  1\\.  1\\.  1\\.  1\\.  1\\.  1\\.  1\\.  1\\.  1\\.  1.]\n\nprint(loo_scores.mean())\n0.988870339455\n```", "```py\nfrom sklearn.datasets import load_iris\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import cross_val_score, LeavePOut\n\ndata = load_iris()\n\np = 3\nlr = LogisticRegression()\n\nlpo_scores = cross_val_score(lr, data['data'], data['target'], cv=LeavePOut(p))\n\nprint(lpo_scores[0:100])\n[ 1\\.          1\\.          1\\.          1\\.          1\\.          1\\.          1.\n  1\\.          1\\.          1\\.          1\\.          1\\.          1\\.          1.\n  1\\.          1\\.          1\\.          1\\.          1\\.          1\\.          1.\n  1\\.          1\\.          1\\.          1\\.          1\\.          1\\.          1.\n  1\\.          1\\.          1\\.          1\\.          1\\.          1\\.          1.\n  1\\.          1\\.          1\\.          1\\.          1\\.          1\\.          1.\n  1\\.          1\\.          1\\.          1\\.          1\\.          1\\.          1.\n  1\\.          1\\.          1\\.          1\\.          1\\.          1\\.          1.\n  1\\.          1\\.          1\\.          1\\.          1\\.          1\\.          1.\n  1\\.          0.66666667  ...\n\nprint(lpo_scores.mean())\n0.955668420098\n```"]