- en: '1'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '1'
- en: Comprehending Google Cloud Services
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解谷歌云服务
- en: In Part 1 of this book, we will be building a foundation by focusing on Google
    Cloud and Python, the essential platform and tool for our learning journey, respectively.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书的第一部分，我们将通过关注谷歌云和 Python（分别是我们学习旅程的必要平台和工具）来建立基础。
- en: In this chapter, we will dive into **Google Cloud Platform** (**GCP**) and discuss
    the Google Cloud services that are closely related to **Google Cloud Machine Learning**.
    Mastering these services will provide us with a solid background.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将深入探讨 **谷歌云平台**（**GCP**）并讨论与 **谷歌云机器学习**密切相关的谷歌云服务。掌握这些服务将为我们提供坚实的基础。
- en: 'The following topics will be covered in this chapter:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Understanding the GCP global infrastructure
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解 GCP 全球基础设施
- en: Getting started with GCP
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开始使用 GCP
- en: GCP organization structure
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: GCP 组织结构
- en: GCP Identity and Access Management
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: GCP 身份和访问管理
- en: GCP compute spectrum
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: GCP 计算谱系
- en: GCP storage and database services
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: GCP 存储和数据库服务
- en: GCP big data and analytics services
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: GCP 大数据和数据分析服务
- en: GCP artificial intelligence services
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: GCP 人工智能服务
- en: Let’s get started.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始吧。
- en: Understanding the GCP global infrastructure
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解 GCP 全球基础设施
- en: '**Google** is one of the biggest cloud service providers in the world. With
    the physical computing infrastructures such as computers, hard disk drives, routers,
    and switches in Google’s worldwide data centers, which are connected by Google’s
    global backbone network, Google provides a full spectrum of cloud services in
    GCP, including compute, network, database, security, and advanced services such
    as big data, **machine learning** (**ML**), and many, many more.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**谷歌** 是世界上最大的云服务提供商之一。凭借谷歌全球数据中心中的物理计算基础设施，如计算机、硬盘驱动器、路由器和交换机，这些数据中心通过谷歌的全球骨干网络连接，谷歌在
    GCP 中提供了一系列全面的云服务，包括计算、网络、数据库、安全和大数据、**机器学习**（**ML**）等高级服务。'
- en: Within Google’s global cloud infrastructure, there are many data center groups.
    Each data center group is called a **GCP region**. These regions are located worldwide,
    in Asia, Australia, Europe, North America, and South America. These regions are
    connected by Google’s global backbone network for performance optimization and
    resiliency. Each GCP region is a collection of **zones** that are isolated from
    each other. Each zone has one or more data centers and is identified by a name
    that combines a letter identifier with the region’s name. For example, zone *US-Central1-a*
    is a zone in the *US-Central1* region, which is physically located in Council
    Bluffs, Iowa, the United State of America. In the GCP global infrastructure, there
    are also many **edge locations** or **points of** **presence** (**POPs**) where
    Google’s global networks connect to the internet. More details about GCP regions,
    zones, and edge locations can be found at [https://cloud.google.com/about/locations](https://cloud.google.com/about/locations).
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在谷歌的全球云基础设施中，有许多数据中心组。每个数据中心组被称为 **GCP 区域**。这些区域遍布全球，包括亚洲、澳大利亚、欧洲、北美和南美。这些区域通过谷歌的全球骨干网络连接，以优化性能和增强弹性。每个
    GCP 区域是一组相互隔离的 **区域**。每个区域有一个或多个数据中心，并由一个结合字母标识符和区域名称的名称来标识。例如，区域 *US-Central1-a*
    位于 *US-Central1* 区域，该区域位于美国爱荷华州的 Council Bluffs。在 GCP 全球基础设施中，还有许多 **边缘位置** 或
    **接入点**（**POPs**），谷歌的全球网络通过这些位置连接到互联网。有关 GCP 区域、区域和边缘位置的更多详细信息，请参阅 [https://cloud.google.com/about/locations](https://cloud.google.com/about/locations)。
- en: GCP provides on-demand cloud resources at a global scale. These resources can
    be used together to build solutions that help meet business goals and satisfy
    technology requirements. For example, if a company needs 1,000 TB of storage in
    Tokyo, its IT professional can log into their GCP account console and provision
    the storage in the *Asia-northeast1* region at any time. Similarly, a 3,000 TB
    database can be provisioned in Sydney and a 4,000-node cluster in Frankfurt at
    any time, with just a few clicks. And finally, if a company wants to set up a
    global website, such as [zeebestbuy.com](http://zeebestbuy.com), with the lowest
    latencies for their global users, they can build three web servers in the global
    regions of London, Virginia, and Singapore, and utilize Google’s global DNS service
    to distribute the web traffic along these three web servers. Depending on the
    user’s web browser location, DNS will route the traffic to the nearest web server.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: GCP在全球范围内提供按需云资源。这些资源可以一起使用来构建帮助满足业务目标和满足技术要求解决方案。例如，如果一家公司需要在东京需要1,000 TB的存储空间，其IT专业人员可以登录他们的GCP账户控制台，在任何时候在*亚洲东北1*地区配置存储空间。同样，可以在悉尼配置3,000
    TB的数据库，在法兰克福配置4,000节点的集群，只需点击几下即可。最后，如果一家公司想要为全球用户提供最低延迟的全球网站，例如[zeebestbuy.com](http://zeebestbuy.com)，他们可以在全球区域的伦敦、弗吉尼亚和新加坡建立三个Web服务器，并利用谷歌的全球DNS服务将这些Web流量分配到这三个Web服务器。根据用户的Web浏览器位置，DNS将路由流量到最近的Web服务器。
- en: Getting started with GCP
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 开始使用GCP
- en: Now that we have learned about Google’s global cloud infrastructure and the
    on-demand resource provisioning concept of cloud computing, we can’t wait to dive
    into Google Cloud and provision resources in the cloud!
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经了解了谷歌的全球云基础设施和云计算的按需资源配置概念，我们迫不及待地想要深入谷歌云并在云中配置资源！
- en: 'In this section, we will build cloud resources by doing the following:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将通过以下步骤构建云资源：
- en: Creating a free-tier GCP account
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建免费层级的GCP账户
- en: Provisioning a virtual computer instance in Google Cloud
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在谷歌云中配置虚拟计算机实例
- en: Provisioning our first storage in Google Cloud
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在谷歌云中配置我们的第一个存储
- en: Let’s go through each of these steps in detail.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们详细地逐一介绍这些步骤。
- en: Creating a free-tier GCP account
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建免费层级的GCP账户
- en: Google provides a free-tier account type for us to get started on GCP. More
    details can be found at [https://cloud.google.com/free/docs/gcp-free-tier](https://cloud.google.com/free/docs/gcp-free-tier).
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 谷歌为我们提供了一个免费层账户类型，以便我们开始在GCP上操作。更多详细信息可以在[https://cloud.google.com/free/docs/gcp-free-tier](https://cloud.google.com/free/docs/gcp-free-tier)找到。
- en: Once you have signed up for a GCP free-tier account, it’s time to plan our first
    resources in Google Cloud – a computer and a storage folder in the cloud. We will
    provision them as needed. How exciting!
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您注册了GCP免费层账户，就是时候规划我们在谷歌云中的第一个资源了——一台计算机和一个云存储文件夹。我们将按需配置它们。多么令人兴奋啊！
- en: Provisioning our first computer in Google Cloud
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在谷歌云中配置我们的第一台计算机
- en: 'We will start with the simplest idea: provisioning a computer in the cloud.
    Think about a home computer for a moment. It has a **Central Processing Unit**
    (**CPU**), **Random Access Memory** (**RAM**), **hard disk drives** (**HDDs**),
    and a **network interface card** (**NIC**) for connecting to the relevant **Internet
    Service Provider** (**ISP**) equipment (such as cable modems and routers). It
    also has an operating system (Windows or Linux), and it may have a database such
    as MySQL for some family data management, or Microsoft Office for home office
    usage.'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从最简单的想法开始：在云中配置一台计算机。暂时想想家里的电脑。它有一个**中央处理器**（**CPU**），**随机存取存储器**（**RAM**），**硬盘驱动器**（**HDDs**），以及一个**网络接口卡**（**NIC**）来连接到相关的**互联网服务提供商**（**ISP**）设备（如电缆调制解调器和路由器）。它还有一个操作系统（Windows或Linux），并且可能有一个数据库，如MySQL用于家庭数据管理，或者Microsoft
    Office用于家庭办公使用。
- en: To provision a computer in Google Cloud, we will need to do the same planning
    for its hardware, such as the number of CPUs, RAM, and the size of HDDs, as well
    as for its software, such as the operating system (Linux or Windows) and database
    (**MySQL**). We may also need to plan the network for the computer, such as an
    external IP address, and whether the IP address needs to be static or dynamic.
    For example, if we plan to provision a web server, then our computer will need
    a static external IP address. And from a security point of view, we will need
    to set up the network firewalls so that only specific computers at home or work
    may access our computer in the cloud.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 要在谷歌云中配置计算机，我们需要对其硬件进行相同的规划，例如CPU的数量、RAM的大小以及HDD的大小，以及对其软件的规划，例如操作系统（Linux或Windows）和数据库（**MySQL**）。我们可能还需要规划计算机的网络，例如外部IP地址，以及IP地址是否需要静态或动态。例如，如果我们计划配置一个Web服务器，那么我们的计算机将需要一个静态的外部IP地址。从安全的角度来看，我们还需要设置网络防火墙，以便只有家庭或工作地点的特定计算机可以访问我们云中的计算机。
- en: 'GCP offers a cloud service for consumers to provision a computer in the cloud:
    **Google Compute Engine** (**GCE**). With the GCE service, we can build flexible,
    self-managed **virtual machines** (**VMs**) in the Google Cloud. GCE offers different
    hardware and software options based on consumers’ needs, so you can use customized
    VM types and select the appropriate operating system for the VM instances.'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: GCP为消费者提供了一种在云中配置计算机的云服务：**Google Compute Engine**（**GCE**）。通过GCE服务，我们可以在谷歌云中构建灵活的、自我管理的**虚拟机**（**VM**）。GCE根据消费者的需求提供不同的硬件和软件选项，因此您可以使用定制的VM类型并为VM实例选择合适的操作系统。
- en: Following the instructions at [https://cloud.google.com/compute/docs/instances/create-start-instance](https://cloud.google.com/compute/docs/instances/create-start-instance),
    you can create a VM in GCP. Let’s pause here and go to the GCP console to provision
    our first computer.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下说明进行操作 [https://cloud.google.com/compute/docs/instances/create-start-instance](https://cloud.google.com/compute/docs/instances/create-start-instance)，您可以在GCP中创建一个虚拟机。让我们在这里暂停一下，转到GCP控制台来配置我们的第一个计算机。
- en: How do we access the computer? If the VM has a Windows operating system, you
    can use **Remote Desktop** to access it. For a Linux VM, you can use **Secure
    Shell** (**SSH**) to log in. More details are available at [https://cloud.google.com/compute](https://cloud.google.com/compute).
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 我们如何访问计算机？如果VM运行的是Windows操作系统，您可以使用**远程桌面**来访问它。对于Linux VM，您可以使用**安全外壳**（**SSH**）进行登录。更多详细信息请参阅
    [https://cloud.google.com/compute](https://cloud.google.com/compute)。
- en: Provisioning our first storage in Google Cloud
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在谷歌云中配置我们的第一个存储
- en: When we open the computer case and look inside our home computer, we can see
    its hardware components – that is, its CPU, RAM, HDD, and NIC. The hard disks
    within a PC are limited in size and performance. *EMC*, a company founded in 1979
    by Richard Egan and Roger Marino, expanded PC hard disks outside of the PC case
    to a separate computer network storage platform called *Symmetrix* in 1990\. Symmetrix
    has its own CPU/RAM and provides huge storage capacities. It is connected to the
    computer through fiber cables and serves as the **storage array** of the computer.
    On the other hand, *SanDisk*, founded in 1988 by Eli Harari, Sanjay Mehrotra,
    and Jack Yuan, produced the first Flash-based **solid-state drive** (**SSD**)
    in a 2.5-inch hard drive, called *Cruzer*, in 2000\. Cruzer provides portable
    storage via a USB connection to a computer. By thinking out of the box and extending
    either to Symmetrix or Cruzer, EMC and Sandisk extended the hard disk concept
    out of the box. These are great examples of start-up ideas!
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们打开计算机机箱并查看我们家庭计算机的内部时，我们可以看到其硬件组件——即其CPU、RAM、HDD和NIC。PC内的硬盘在大小和性能上都是有限的。*EMC*，由理查德·伊根和罗杰·马诺在1979年创立的公司，在1990年将PC硬盘扩展到PC机箱外的独立计算机网络存储平台，称为*Symmetrix*。Symmetrix拥有自己的CPU/RAM，并提供巨大的存储容量。它通过光纤电缆连接到计算机，并作为计算机的**存储阵列**。另一方面，*SanDisk*，由Eli
    Harari、Sanjay Mehrotra和Jack Yuan于1988年创立，在2000年生产了第一个基于Flash的**固态硬盘**（**SSD**），名为*Cruzer*。Cruzer通过USB连接到计算机提供便携式存储。通过跳出思维定式，扩展到Symmetrix或Cruzer，EMC和SanDisk将硬盘概念扩展到了盒子之外。这些都是创业想法的绝佳例子！
- en: 'And then comes the great idea of cloud computing – the concept of storage is
    further extended to cloud-block storage, cloud **network-attached storage** (**NAS**),
    and cloud object storage. Let’s look at these in more detail:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 然后是云计算的伟大想法——存储的概念进一步扩展到云块存储、云**网络附加存储**（**NAS**）和云对象存储。让我们更详细地看看这些：
- en: '**Cloud block storage** is a form of software-based storage that can be attached
    to a VM in the cloud, just like a hard disk is attached to our PC at home. In
    Google Cloud, cloud block storage is called **persistent disks** (**PD**). Instead
    of buying a physical hard disk and installing it on the PC to use it, PDs can
    be created instantly and attached to a VM in the cloud, with only a couple of
    clicks.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**云块存储**是一种基于软件的存储形式，可以附加到云中的虚拟机，就像硬盘在我们的家用电脑上一样。在 Google Cloud 中，云块存储被称为 **持久磁盘**（**PD**）。无需购买物理硬盘并将其安装在电脑上使用，PD
    可以立即创建并附加到云中的虚拟机，只需几个点击即可。'
- en: '**Cloud network-attached storage** (**Cloud NAS**) is a form of software-based
    storage that can be shared among many cloud VMs through a virtual cloud network.
    In GCP, cloud NAS is called **Filestore**. Instead of buying a physical file server,
    installing it on a network, and sharing it with multiple PCs at home, a Filestore
    instance can be created instantly and shared by many cloud VMs, with only a couple
    of clicks.'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**云网络附加存储**（**Cloud NAS**）是一种基于软件的存储形式，可以通过虚拟云网络在许多云虚拟机之间共享。在 GCP 中，云 NAS 被称为
    **Filestore**。无需购买物理文件服务器，将其安装在网络上并与多个家庭电脑共享，只需几个点击即可创建 Filestore 实例，并由许多云虚拟机共享。'
- en: '**Cloud object storage** is a form of software-based storage that can be used
    to store objects (files, images, and so on) in the cloud. In GCP, cloud object
    storage is called **Google Cloud Storage** (**GCS**). Different from PD, which
    is a cloud block storage type that’s used by a VM (it can be shared in read-only
    mode among multiple VMs), and Filestore, which is a cloud NAS type shared by many
    VMs, GCS is a cloud object type used for storing immutable objects. Objects are
    stored in GCS buckets. In GCP, bucket creation and deletion, object uploading,
    downloading, and deletion can all be done from the GCP console, with just a couple
    of clicks!'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**云对象存储**是一种基于软件的存储形式，可以用于在云中存储对象（文件、图像等）。在 GCP 中，云对象存储被称为 **Google Cloud Storage**（**GCS**）。与
    PD 不同，PD 是一种云块存储类型，由虚拟机使用（可以在多个虚拟机之间以只读模式共享），以及 Filestore，它是一种由多个虚拟机共享的云 NAS 类型，GCS
    是一种用于存储不可变对象的云对象类型。对象存储在 GCS 存储桶中。在 GCP 中，可以通过 GCP 控制台进行存储桶创建和删除、对象上传、下载和删除，只需几个点击即可！'
- en: GCS provides different storage classes based on the object accessing patterns.
    More details can be found at [https://cloud.google.com/storage](https://cloud.google.com/storage).
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: GCS 根据对象访问模式提供不同的存储类别。更多详细信息可以在 [https://cloud.google.com/storage](https://cloud.google.com/storage)
    找到。
- en: Following the instructions at [https://cloud.google.com/storage/docs/creating-buckets](https://cloud.google.com/storage/docs/creating-buckets),
    you can create a storage folder/bucket and upload objects into it. Let’s pause
    here and go to the GCP console to provision our first storage bucket and upload
    some objects into it.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 按照位于 [https://cloud.google.com/storage/docs/creating-buckets](https://cloud.google.com/storage/docs/creating-buckets)
    的说明，您可以创建存储文件夹/存储桶并将对象上传到其中。让我们在这里暂停一下，转到 GCP 控制台来配置我们的第一个存储桶并将一些对象上传到其中。
- en: Managing resources using GCP Cloud Shell
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 GCP Cloud Shell 管理资源
- en: 'So far, we have discussed provisioning VMs and buckets/objects in the cloud
    from the GCP console. There is another tool that can help us create, manage, and
    delete resources: GCP Cloud Shell. Cloud Shell is a command-line interface that
    can easily be accessed from your console browser. After you click the **Cloud
    Shell** button on the GCP console, you will get a Cloud Shell – a command-line
    user interface on a VM, in your web browser, with all the cloud resource management
    commands already installed.'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经讨论了从 GCP 控制台在云中配置虚拟机和存储桶/对象。还有一个工具可以帮助我们创建、管理和删除资源：GCP Cloud Shell。Cloud
    Shell 是一个可以通过控制台浏览器轻松访问的命令行界面。在您点击 GCP 控制台上的 **Cloud Shell** 按钮后，您将获得一个 Cloud
    Shell – 在您的网络浏览器中，一个带有所有云资源管理命令的虚拟机命令行用户界面。
- en: 'The following tools are provided by Google for customers to create and manage
    cloud resources using the command line:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 以下工具由 Google 提供，供客户使用命令行创建和管理云资源：
- en: The `gcloud` tool is the main command-line interface for GCP products and services
    such as GCE.
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`gcloud` 工具是 GCP 产品和服务（如 GCE）的主要命令行界面。'
- en: The `gsutil` tool is for GCS services.
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`gsutil` 工具用于 GCS 服务。'
- en: The `bq` tool is for BigQuery services.
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`bq` 工具用于 BigQuery 服务。'
- en: The `kubectl` tool is for Kubernetes services.
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`kubectl` 工具用于 Kubernetes 服务。'
- en: Please refer to [https://cloud.google.com/shell/docs/using-cloudshell-command](https://cloud.google.com/shell/docs/using-cloudshell-command)
    for more information about GCP Cloud Shell and commands, as well as how to create
    a VM and a storage bucket using Cloud Shell commands.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 请参阅[https://cloud.google.com/shell/docs/using-cloudshell-command](https://cloud.google.com/shell/docs/using-cloudshell-command)获取有关GCP
    Cloud Shell和命令的更多信息，以及如何使用Cloud Shell命令创建虚拟机（VM）和存储桶。
- en: GCP networking – virtual private clouds
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: GCP网络 – 虚拟私有云
- en: Think about home computers again – they are all connected via a network, wired
    or wireless, so that they can connect to the internet. Without networking, a computer
    is almost useless. Within GCP, a cloud network unit is called a **virtual private
    cloud** (**VPC**). A VPC is a software-based logical network resource. Within
    a GCP project, a limited number of VPCs can be provisioned. After launching VMs
    in the cloud, you can connect them within a VPC, or isolate them from each other
    in separate VPCs. Since GCP VPCs are global and can span multiple regions in the
    world, you can provision a VPC, as well as the resources within it, anywhere in
    the world. Within a VPC, a public subnet has VMs with external IP addresses that
    are accessible from the internet and can access the internet; a private subnet
    contains VMs that do not have external IP addresses. VPCs can be peered with each
    other, within a GCP project, or outside a GCP project.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 再次思考家庭电脑——它们都通过网络连接，有线或无线，以便连接到互联网。没有网络，电脑几乎毫无用处。在GCP中，云网络单元被称为**虚拟私有云**（**VPC**）。VPC是一种基于软件的逻辑网络资源。在GCP项目中，可以配置有限数量的VPC。在云中启动虚拟机（VM）后，您可以在VPC内连接它们，或者将它们隔离在不同的VPC中。由于GCP
    VPC是全球性的，并且可以跨越世界上的多个区域，因此您可以在世界任何地方配置VPC，以及其中的资源。在VPC内，公共子网包含具有外部IP地址的虚拟机，这些IP地址可以从互联网访问，并且可以访问互联网；私有子网包含没有外部IP地址的虚拟机。VPC可以在GCP项目内或项目外相互对等。
- en: VPCs can be provisioned using the GCP console or GCP Cloud Shell. Please refer
    to [https://cloud.google.com/vpc/](https://cloud.google.com/vpc/) for details.
    Let’s pause here and go to the GCP console to provision our VPC and subnets, and
    then launch some VMs into those subnets.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用GCP控制台或GCP Cloud Shell配置VPC。有关详细信息，请参阅[https://cloud.google.com/vpc/](https://cloud.google.com/vpc/)。让我们在这里暂停一下，转到GCP控制台以配置我们的VPC和子网，然后在这些子网中启动一些虚拟机。
- en: GCP organization structure
  id: totrans-53
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: GCP组织结构
- en: Before we discuss the GCP cloud services further, we need to spend some time
    talking about the GCP organization structure, which is quite different from that
    of the **Amazon Web Services** (**AWS**) cloud and the Microsoft Azure cloud.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们进一步讨论GCP云服务之前，我们需要花一些时间来讨论GCP组织结构，它与**亚马逊网络服务**（**AWS**）云和微软Azure云的结构相当不同。
- en: The GCP resource hierarchy
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: GCP资源层次结构
- en: 'As shown in the following diagram, within a GCP cloud domain, at the top is
    the GCP organization, followed by folders, then projects. As a common practice,
    we can map a company’s organizational hierarchy to a GCP structure: a company
    maps to a GCP organization, its departments (sales, engineering, and more) are
    mapped to folders, and the functional projects from the departments are mapped
    to projects under the folders. Cloud resources such as VMs, **databases** (**DBs**),
    and so on are under the projects.'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 如以下图所示，在GCP云域内，最上面是GCP组织，然后是文件夹，接着是项目。作为一项常见做法，我们可以将公司的组织结构映射到GCP结构中：公司映射到GCP组织，其部门（销售、工程等）映射到文件夹，而来自部门的职能项目映射到文件夹下的项目。云资源，如虚拟机（VM）、**数据库**（**DB**）等，位于项目下。
- en: 'In a GCP organization hierarchy, *each project is a separate compartment, and
    each resource belongs to exactly one project*. Projects can have multiple owners
    and users. They are managed and billed separately, although multiple projects
    may be associated with the same billing account:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 在GCP组织层次结构中，*每个项目都是一个独立的隔间，每个资源恰好属于一个项目*。项目可以有多个所有者和用户。它们分别管理和计费，尽管多个项目可能与同一个计费账户相关联：
- en: '![Figure 1.1 – Sample GCP organization structure ](img/Figure_1.1.jpg)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![图1.1 – GCP组织结构示例](img/Figure_1.1.jpg)'
- en: Figure 1.1 – Sample GCP organization structure
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.1 – GCP组织结构示例
- en: 'In the preceding diagram, there are two organizations: one for production and
    one for testing (sandbox). Under each organization, there are multiple layers
    of folders (note that the number of folder layers and the number of folders at
    each layer may be limited), and under each folder, there are multiple projects,
    each of which contains multiple resources.'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的图中，有两个组织：一个用于生产，一个用于测试（沙盒）。在每一个组织下，都有多层文件夹（注意文件夹层数和每层的文件夹数量可能有限），在每个文件夹下，都有多个项目，每个项目包含多个资源。
- en: GCP projects
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: GCP 项目
- en: 'GCP projects are the logical separations of GCP resources. Projects are used
    to fully isolate resources based on Google Cloud’s **Identity and Access Management**
    (**IAM**) permissions:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: GCP 项目是 GCP 资源的逻辑分隔。项目用于根据 Google Cloud 的 **身份和访问管理**（**IAM**）权限完全隔离资源：
- en: '**Billing isolation**: Use different projects to separate spending units'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**计费隔离**：使用不同的项目来分隔支出单元'
- en: '**Quotas and limits**: Set at the project level and separated by workloads'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**配额和限制**：在项目级别设置，并按工作负载分隔'
- en: '**Administrative complexity**: Set at the project level for access separation'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**管理复杂性**：在项目级别设置以实现访问分离'
- en: '**Blast radius**: Misconfiguration issues are limited within a project'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**影响范围**：配置问题在项目内受限'
- en: '**Separation of duties**: Business units and data sensitivity are separate'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**职责分离**：业务单元和数据敏感性是分开的'
- en: In summary, the GCP organization structure provides a hierarchy for managing
    Google Cloud resources, with projects being the logical isolation and separation.
    In the next section, we will discuss resource permissions within the GCP organization
    by looking at IAM.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 总结来说，GCP 组织结构为管理 Google Cloud 资源提供了一个层次结构，其中项目是逻辑隔离和分离。在下一节中，我们将通过查看 IAM 来讨论
    GCP 组织内的资源权限。
- en: GCP Identity and Access Management
  id: totrans-69
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: GCP 身份和访问管理
- en: 'Once we have reviewed the GCP organization structure and the GCP resources
    of VMs, storage, and network, we must look at the access management of these resources
    within the GCP organization: IAM. GCP IAM manages cloud identities using the **AAA**
    model: **authentication**, **authorization**, and **auditing** (or **accounting**).'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们审查了 GCP 组织结构以及 VM、存储和网络等 GCP 资源，我们必须查看这些资源在 GCP 组织内的访问管理：IAM。GCP IAM 使用
    **AAA** 模型管理云身份：**身份验证**、**授权**和**审计**（或**会计**）。
- en: Authentication
  id: totrans-71
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 身份验证
- en: The first *A* in the *AAA* model is **authentication**, which involves verifying
    the cloud identity that is trying to access the cloud. Instead of the traditional
    way of just asking for a username and password, **multi-factor authentication**
    (**MFA**) is used, an authentication method that requires users to verify their
    identity using multiple independent methods. For security reasons, all user authentications,
    including GCP console access and any other **single sign-on** (**SSO**) implementations,
    must be done while enforcing MFA. Usernames and passwords are simply ineffective
    in protecting user access these days.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 在 *AAA* 模型中的第一个 *A* 是 **身份验证**，它涉及验证试图访问云的云身份。与传统方式仅要求提供用户名和密码不同，**多因素身份验证**（**MFA**）被使用，这是一种要求用户使用多种独立方法验证其身份的认证方法。出于安全原因，所有用户身份验证，包括
    GCP 控制台访问和任何其他 **单点登录**（**SSO**）实现，都必须在强制执行 MFA 的同时进行。用户名和密码在当今时代简单地无法保护用户访问。
- en: Authorization
  id: totrans-73
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 授权
- en: '**Authorization** is represented by the second *A* in the *AAA* model. It is
    the process of granting or denying a user access to cloud resources once the user
    has been authenticated into the cloud account. The amount of information and the
    number of services the user can access depend on the user’s authorization level.
    Once a user’s identity has been verified and the user has been authenticated into
    GCP, the user must pass the authorization rules to access the cloud resources
    and data. Authorization determines the resources that the user can and cannot
    access.'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '**授权**在 *AAA* 模型中由第二个 *A* 表示。它是在用户已认证到云账户后，授予或拒绝用户访问云资源的过程。用户可以访问的信息量和服务的数量取决于用户的授权级别。一旦用户的身份得到验证并且用户已认证到
    GCP，用户必须通过授权规则才能访问云资源和数据。授权决定了用户可以和不能访问的资源。'
- en: 'Authorization defines *who can do what on which resource*. The following diagram
    shows the **authorization** concept in GCP. As you can see, there are three parties
    in the authorization process: the first layer in the figure is identity – this
    specifies *who* can be a user account, a group of users, or an application (**Service
    Account**). The third layer specifies *which* cloud resources, such as GCS buckets,
    GCE VMs, VPCs, service accounts, or other GCP resources. A **Service Account**
    can be an identity as well as a resource:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 授权定义了*谁可以在哪个资源上做什么*。以下图表显示了GCP中的授权概念。如您所见，授权过程中有三个参与者：图中的第一层是身份 – 这指定了*谁*可以是用户帐户、用户组或应用程序（**服务帐户**）。第三层指定了*哪些*云资源，例如GCS存储桶、GCE虚拟机、VPC、服务帐户或其他GCP资源。**服务帐户**也可以是一个身份以及一个资源：
- en: '![Figure 1.2 – GCP IAM authentication ](img/Figure_1.2.jpg)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![图1.2 – GCP IAM身份验证](img/Figure_1.2.jpg)'
- en: Figure 1.2 – GCP IAM authentication
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.2 – GCP IAM身份验证
- en: 'The middle layer is **IAM Role**, also known as the *what*, which refers to
    specific privileges or actions that the identity has against the resources. For
    example, when a group is provided the privilege of a compute viewer, then the
    group will have read-only access to get and list GCE resources, without being
    able to write/change them. GCP supports three types of IAM roles: **primitive**
    (**basic**), **predefined**, and **custom**. Let’s take a look:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 中间层是**IAM角色**，也称为*什么*，它指的是身份对资源具有的特定权限或操作。例如，当一组用户被授予计算查看者的权限时，该组将只能对GCE资源进行只读访问，无法写入/更改它们。GCP支持三种类型的IAM角色：**原始（基本**）、**预定义**和**自定义**。让我们看看：
- en: '**Primitive (basic) roles**, include the Owner, Editor, and Viewer roles, which
    existed in GCP before the introduction of IAM. These roles have thousands of permissions
    across all Google Cloud services and confer significant privileges. Therefore,
    in production environments, it is recommended to not grant basic roles unless
    there is no alternative. Instead, grant the most limited predefined roles or custom
    roles that meet your needs.'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**原始（基本）角色**包括所有者、编辑者和查看者角色，这些角色在IAM引入之前就存在于GCP中。这些角色在所有Google Cloud服务中都有数千个权限，并赋予显著的权限。因此，在生产环境中，除非没有其他选择，否则建议不要授予基本角色。相反，授予满足您需求的限制性预定义角色或自定义角色。'
- en: '**Predefined roles** provide granular access to specific services following
    role-based permission needs. Predefined roles are created and maintained by Google.
    Google automatically updates its permissions as necessary, such as when Google
    Cloud adds new features or services.'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**预定义角色**根据基于角色的权限需求提供对特定服务的细粒度访问。预定义角色由Google创建和维护。Google会根据需要自动更新其权限，例如当Google
    Cloud添加新功能或服务时。'
- en: '**Custom roles** provide granular access according to the user-specified list
    of permissions. These roles should be used sparingly as the user is responsible
    for maintaining the associated permissions.'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**自定义角色**根据用户指定的权限列表提供细粒度访问。这些角色应谨慎使用，因为用户负责维护相关的权限。'
- en: 'In GCP, authentication is implemented using IAM policies, which bind identities
    to IAM roles. Here is a sample IAM policy:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 在GCP中，身份验证是通过IAM策略实现的，这些策略将身份绑定到IAM角色。以下是一个示例IAM策略：
- en: '[PRE0]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: In the preceding example, Jack (`jack@example.com`) is granted the Organization
    Admin predefined role (`roles/resourcemanager.organizationAdmin`) and thus has
    permissions for organizations, folders, and limited project operations. Both Jack
    and Joe (`joe@example.com`) can create projects since they have been granted the
    Project Creator role (`roles/resourcemanager.projectCreator`). Together, these
    two role bindings provide fine-grained GCP resource access to Jack and Joe, though
    Jack has more privileges.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的示例中，Jack（`jack@example.com`）被授予了预定义的组织管理员角色（`roles/resourcemanager.organizationAdmin`），因此他有权访问组织、文件夹和有限的项目操作。Jack和Joe（`joe@example.com`）都可以创建项目，因为他们已被授予项目创建者角色（`roles/resourcemanager.projectCreator`）。这两个角色绑定共同为Jack和Joe提供了细粒度的GCP资源访问权限，尽管Jack拥有更多的权限。
- en: Auditing or accounting
  id: totrans-85
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 审计或会计
- en: The third *A* in the *AAA* model refers to **auditing** or **accounting**, which
    is the process of keeping track of a user’s activity while accessing GCP resources,
    including the amount of time spent in the network, the services they’ve accessed,
    and the amount of data transferred during their login session. Auditing data is
    used for trend analysis, access recording, compliance auditing, breach detection,
    forensics and investigations, accounts billing, cost allocations, and capacity
    planning. With the Google Cloud Audit Logs service, you can keep track of users/groups
    and their activities and ensure the activity records are genuine. Auditing logs
    are very helpful for cloud security. For example, tracing back to events of a
    cybersecurity incident can be very valuable to forensics analyses and case investigations.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 在 *AAA* 模型的第三个 *A* 指的是 **审计** 或 **会计**，这是跟踪用户访问 GCP 资源活动的过程，包括在网络中花费的时间、他们访问的服务以及登录会话期间传输的数据量。审计数据用于趋势分析、访问记录、合规审计、违规检测、取证和调查、账户计费、成本分配和容量规划。使用
    Google Cloud Audit Logs 服务，您可以跟踪用户/组和他们的活动，并确保活动记录是真实的。审计日志对于云安全非常有帮助。例如，回溯到网络安全事件的记录对于取证分析和案件调查可能非常有价值。
- en: Service account
  id: totrans-87
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 服务帐户
- en: In GCP, a service account is a specialized account that can be used by GCP services
    and other applications running on GCE instances or elsewhere to interact with
    GCP **application programming interfaces** (**APIs**). They are like *programmatic
    access users* by which you can give access to GCP services. Service accounts exist
    in GCP projects but can be given permissions at the organization and folder levels,
    as well as to different projects. By leveraging service account credentials, applications
    can authorize themselves to a set of APIs and perform actions within the permissions
    that have been granted to the service account. For example, an application running
    on a GCE instance can use the instance’s service account to interact with other
    Google services (such as a Cloud SQL Database instance) and their underlying APIs.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 在 GCP 中，服务帐户是一种专用帐户，可以由 GCP 服务和其他在 GCE 实例或其他地方运行的应用程序用来与 GCP **应用程序编程接口** (**APIs**)
    交互。它们就像 *程序化访问用户*，通过它们您可以赋予访问 GCP 服务的权限。服务帐户存在于 GCP 项目中，但可以在组织和文件夹级别以及不同的项目中分配权限。通过利用服务帐户凭证，应用程序可以授权自己访问一组
    API 并在授予服务帐户的权限范围内执行操作。例如，运行在 GCE 实例上的应用程序可以使用该实例的服务帐户与其他 Google 服务（如 Cloud SQL
    数据库实例）及其底层 API 交互。
- en: When we created our first VM, a default service account was created for that
    VM at the same time. You can define the permissions for this VM’s service account
    by defining its **access scopes**. Once defined, all the applications running
    on this VM will have the same permission to access other GCP resources, such as
    a GCS bucket. When the number of VMs has increased significantly, this will generate
    a lot of service accounts. That’s why we often create a service account and assign
    it to a VM or other resources that need to have the same GCP permissions.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们创建第一个虚拟机时，同时为该虚拟机创建了一个默认的服务帐户。您可以通过定义其 **访问范围** 来定义此虚拟机服务帐户的权限。一旦定义，在此虚拟机上运行的所有应用程序都将拥有相同的权限来访问其他
    GCP 资源，例如 GCS 存储桶。当虚拟机的数量显著增加时，这将生成大量的服务帐户。这就是我们经常创建一个服务帐户并将其分配给需要具有相同 GCP 权限的虚拟机或其他资源的原因。
- en: GCP compute services
  id: totrans-90
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: GCP 计算服务
- en: 'Previously, we looked at the GCE service and created our VM instances in the
    cloud. Now, let’s look at the whole GCP compute spectrum, which includes **Google
    Compute Engine** (**GCE**), **Google Kubernetes Engine** (**GKE**), Cloud Run,
    **Google App Engine** (**GAE**), and Cloud Functions, as shown in the following
    diagram:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 之前，我们探讨了 GCE 服务并在云中创建了我们的虚拟机实例。现在，让我们看看整个 GCP 计算谱系，它包括 **Google Compute Engine**
    (**GCE**), **Google Kubernetes Engine** (**GKE**), Cloud Run, **Google App Engine**
    (**GAE**), 和 Cloud Functions，如下面的图所示：
- en: '![Figure 1.3 – GCP compute services ](img/Figure_1.3.jpg)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.3 – GCP 计算服务](img/Figure_1.3.jpg)'
- en: Figure 1.3 – GCP compute services
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.3 – GCP 计算服务
- en: The GCP compute spectrum provides a broad range of business use cases. Based
    on the business model, we can choose GCE, GKE, GAE, Cloud Run, or Cloud Functions
    to match the requirements. We will discuss each of them briefly in the next few
    sections.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: GCP 计算谱系提供了广泛的企业用例。根据业务模式，我们可以选择 GCE、GKE、GAE、Cloud Run 或 Cloud Functions 来满足需求。我们将在接下来的几节中简要讨论每个服务。
- en: GCE virtual machines
  id: totrans-95
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: GCE 虚拟机
- en: We discussed the concepts surrounding GCE and provisioned VMs using the cloud
    console and Cloud Shell. In this section, we will discuss GCP GCE VM images and
    the pricing model.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 我们讨论了围绕 GCE 和使用云控制台和 Cloud Shell 部署的虚拟机的相关概念。在本节中，我们将讨论 GCP GCE 虚拟机镜像和定价模式。
- en: Compute Engine images provide the base operating environment for applications
    that run in **Compute Engines** (that is, VMs), and they are critical to ensuring
    that your application deploys and scales quickly and reliably. You can also use
    golden/trusted images to archive application versions for disaster recovery or
    rollback scenarios. GCE images are also crucial in security since they can be
    used to deploy all the VMs in a company.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 计算引擎镜像为在 **计算引擎**（即虚拟机）中运行的应用程序提供基本操作系统环境，它们对于确保您的应用程序快速、可靠地部署和扩展至关重要。您还可以使用金/受信任镜像来存档应用程序版本以用于灾难恢复或回滚场景。GCE
    镜像在安全性方面也至关重要，因为它们可以用于部署公司中的所有虚拟机。
- en: 'GCE offers different pricing models for VMs: pay-as-you-go, preemptive, committed
    usage, and sole-tenant host.'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: GCE 为虚拟机提供不同的定价模式：按需付费、抢占式、承诺使用量和独占主机。
- en: Pay-as-you-go is for business cases that need to provision VMs on the fly. If
    the workload is foreseeable, we want to use committed usage for the discounted
    price. If the workload can be restarted, we want to further leverage the *preemptive*
    model and bid for the VM prices. If licenses tied to the host exist, the *sole-tenant
    host* type fits our needs. For more details about GCE VM pricing, check out [https://cloud.google.com/compute/vm-instance-pricing](https://cloud.google.com/compute/vm-instance-pricing).
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 按需付费适用于需要即时配置虚拟机的业务场景。如果工作量可预测，我们希望使用承诺使用量以获得折扣价格。如果工作量可以重启，我们希望进一步利用 *抢占式*
    模型并竞标虚拟机价格。如果存在与主机相关的许可证，则 *独占主机* 类型符合我们的需求。有关 GCE 虚拟机定价的更多详细信息，请参阅 [https://cloud.google.com/compute/vm-instance-pricing](https://cloud.google.com/compute/vm-instance-pricing)。
- en: Load balancers and managed instance groups
  id: totrans-100
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 负载均衡器和托管实例组
- en: A single computer may be down due to hardware or software failures, and it also
    does not provide any scaling when computing power demands are changed along the
    timeline. To ensure high availability and scalability, GCP provides **load balancers**
    (**LBs**) and **managed instance groups** (**MIGs**). LBs and MIGs allow you to
    create homogeneous groups of instances so that load balancers can direct traffic
    to more than one VM instance. MIG also offers features such as auto-scaling and
    auto-healing. Auto-scaling lets you deal with spikes in traffic by configuring
    the appropriate minimum and maximum instances in the autoscaling policy and scaling
    the number of VM instances up or down based on specific signals, while auto-healing
    performs health checking and, if necessary, automatically recreates unhealthy
    instances.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 单台计算机可能因硬件或软件故障而宕机，并且在计算能力需求随时间变化时也无法提供任何扩展。为确保高可用性和可伸缩性，GCP 提供了 **负载均衡器**（**LBs**）和
    **托管实例组**（**MIGs**）。LBs 和 MIGs 允许您创建同构的实例组，以便负载均衡器可以将流量定向到多个虚拟机实例。MIG 还提供自动扩展和自动修复等功能。自动扩展允许您通过配置自动扩展策略中的适当最小和最大实例来处理流量峰值，并根据特定信号调整虚拟机实例的数量，而自动修复则执行健康检查，并在必要时自动重新创建不健康的实例。
- en: 'Let’s look at an example to explain this idea:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过一个例子来解释这个概念：
- en: '![Figure 1.4 – GCP load balancers and managed instance groups ](img/Figure_1.4.jpg)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.4 – GCP 负载均衡器和托管实例组](img/Figure_1.4.jpg)'
- en: Figure 1.4 – GCP load balancers and managed instance groups
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.4 – GCP 负载均衡器和托管实例组
- en: 'As shown in the preceding diagram, [www.zeebestbuy.com](http://www.zeebestbuy.com)
    is a global e-commerce company. Every year, when *Black Friday* comes, their website
    is so heavily loaded that a single computer cannot accommodate the traffic – many
    more web servers (running on VM instances) are needed to distribute the traffic
    load. After *Black Friday*, the traffic goes back to normal, and not that many
    instances are needed. On the GCP platform, we use LBs and MIGs to solve this problem.
    As shown in the preceding diagram, we build three web servers globally (N. Virginia
    in the US, Singapore, and London in the UK), and GCP DNS can distribute the user
    traffic to these three locations based on the user’s browser location and the
    latency to the three sites. At each site, we set up an LB and a MIG: the desired
    capacity, as well as the minimum and maximum capacities, can be set appropriately
    based on the normal and peak traffic. When *Black Friday* comes, the LB and MIG
    work together to elastically launch new VM instances (web servers) to handle the
    increased traffic. After the *Black Friday* sale ends, they will stop/delete the
    VM instances to reflect the decreased traffic.'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 如前图所示，[www.zeebestbuy.com](http://www.zeebestbuy.com) 是一家全球电子商务公司。每年，当 *黑色星期五*
    来临，他们的网站负载非常重，以至于单个计算机无法容纳流量——需要更多的网络服务器（运行在虚拟机实例上）来分配流量负载。黑色星期五之后，流量会恢复正常，不需要那么多实例。在
    GCP 平台上，我们使用负载均衡器（LB）和迁移组（MIG）来解决这个问题。如前图所示，我们在全球范围内建立了三个网络服务器（美国弗吉尼亚北部、新加坡和英国伦敦），GCP
    DNS 可以根据用户的浏览器位置和到三个站点的延迟将用户流量分配到这些位置。在每个站点，我们设置一个 LB 和一个 MIG：根据正常和高峰流量，可以适当地设置所需的容量、最小容量和最大容量。当
    *黑色星期五* 来临，LB 和 MIG 一起弹性地启动新的虚拟机实例（网络服务器）来处理增加的流量。黑色星期五销售结束后，他们将停止/删除虚拟机实例以反映减少的流量。
- en: MIG uses a launch template, which is like a launch configuration, and specifies
    instance configuration information, including the ID of the VM image, the instance
    type, the scaling thresholds, and other parameters that are used to launch VM
    instances. LB uses health checks to monitor the instances. If an instance is not
    responding within the configured threshed times, new instances will be launched
    based on the launch template.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: MIG 使用启动模板，类似于启动配置，并指定实例配置信息，包括虚拟机镜像的 ID、实例类型、扩展阈值以及其他用于启动虚拟机实例的参数。LB 使用健康检查来监控实例。如果实例在配置的阈值时间内没有响应，将根据启动模板启动新的实例。
- en: Containers and Google Kubernetes Engine
  id: totrans-107
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 容器和 Google Kubernetes Engine
- en: Just like the transformation from physical machines into VMs, the transformation
    from VMs into containers is revolutionary. Instead of launching a VM to run an
    application, we package the application into a standard unit that contains everything
    to run the application or service in the same way on different VMs. We build the
    package into a Docker image; a container is a running instance of a Docker image.
    While a hypervisor virtualizes the hardware into VMs, a Docker image virtualizes
    an operating system into application containers.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 就像从物理机到虚拟机的转变一样，从虚拟机到容器的转变是革命性的。我们不再启动一个虚拟机来运行应用程序，而是将应用程序打包成一个标准单元，这个单元包含运行应用程序或服务所需的一切，以便在不同的虚拟机上以相同的方式运行。我们将包构建成一个
    Docker 镜像；容器是 Docker 镜像的运行实例。当虚拟化程序将硬件虚拟化为虚拟机时，Docker 镜像将操作系统虚拟化为应用程序容器。
- en: 'Due to loose coupling and modular portability, more and more applications are
    being containerized. Quickly, a question arose: how can all these containers/Docker
    images be managed? There is where **Google Kubernetes Engine** (**GKE**) comes
    in, a container management system developed by Google. A GKE cluster usually consists
    of at least one control plane and multiple worker machines called nodes, which
    work together to manage/orchestrate the containers. A Kubernetes Pod is a group
    of containers that are deployed together and work together to complete a task.
    For example, an app server pod contains three separate containers: the app server
    itself, a monitoring container, and a logging container. Working together, they
    form the application or service of a business use case.'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 由于松散耦合和模块化可移植性，越来越多的应用程序正在被容器化。很快，就出现了一个问题：如何管理所有这些容器/Docker 镜像？这就是 **Google
    Kubernetes Engine**（**GKE**）发挥作用的地方，这是 Google 开发的一个容器管理系统。一个 GKE 集群通常至少包含一个控制平面和多个被称为节点的工人机器，它们协同工作来管理/编排容器。Kubernetes
    Pod 是一组一起部署并协同工作以完成任务的容器。例如，一个应用服务器 Pod 包含三个独立的容器：应用服务器本身、一个监控容器和一个日志容器。协同工作，它们构成了业务用例中的应用程序或服务。
- en: Following the instructions at [https://cloud.google.com/kubernetes-engine/docs/how-to/creating-a-zonal-cluster](https://cloud.google.com/kubernetes-engine/docs/how-to/creating-a-zonal-cluster),
    you can create a GKE zonal cluster. Let’s pause here and use GCP Cloud Shell to
    create a GKE cluster.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下说明[https://cloud.google.com/kubernetes-engine/docs/how-to/creating-a-zonal-cluster](https://cloud.google.com/kubernetes-engine/docs/how-to/creating-a-zonal-cluster)，您可以创建一个
    GKE 区域集群。让我们在这里暂停一下，并使用 GCP Cloud Shell 创建一个 GKE 集群。
- en: GCP Cloud Run
  id: totrans-111
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: GCP Cloud Run
- en: GCP Cloud Run is a managed compute platform that enables you to run stateless
    containers that can be invoked via HTTP requests on either a fully managed environment
    or in your GKE cluster. Cloud Run is serverless, which means that all infrastructure
    management tasks are the responsibility of Google, leaving the user to focus on
    application development. With Cloud Run, you can build your applications in any
    language using whatever frameworks and tools you want, and then deploy them in
    seconds without having to manage the server infrastructure.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: GCP Cloud Run 是一个托管计算平台，允许您在完全托管的环境或 GKE 集群中运行无状态的容器，这些容器可以通过 HTTP 请求被调用。Cloud
    Run 是无服务器的，这意味着所有基础设施管理任务都是 Google 的责任，让用户专注于应用程序开发。使用 Cloud Run，您可以使用任何语言以及您想要的任何框架和工具来构建应用程序，然后几秒钟内即可部署，无需管理服务器基础设施。
- en: GCP Cloud Functions
  id: totrans-113
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: GCP Cloud Functions
- en: Different from the GCE and GKE services, which deploy VMs or containers to run
    applications, respectively, Cloud Functions is a serverless compute service that
    allows you to submit your code (written in JavaScript, Python, Go, and so on).
    Google Cloud will run the code in the backend and deliver the results to you.
    You do not know and do not care about where the code was run – you are only charged
    for the time your code runs on GCP.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 与分别部署 VM 或容器以运行应用程序的 GCE 和 GKE 服务不同，Cloud Functions 是一种无服务器计算服务，允许您提交代码（用 JavaScript、Python、Go
    等语言编写）。Google Cloud 将在后台运行代码并将结果发送给您。您不知道也不关心代码在哪里运行——您只需为代码在 GCP 上运行的时间付费。
- en: Leveraging Cloud Functions, a piece of code can be triggered within a few milliseconds
    based on certain events. For example, after an object is uploaded to a GCS bucket,
    a message can be generated and sent to GCP Pub/Sub, which will cause Cloud Functions
    to process the object. Cloud Functions can also be triggered based on HTTP endpoints
    you define or by events in Firebase mobile applications.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 利用 Cloud Functions，一段代码可以在几毫秒内根据某些事件被触发。例如，当一个对象被上传到 GCS 存储桶后，可以生成并发送一条消息到 GCP
    Pub/Sub，这将导致 Cloud Functions 处理该对象。Cloud Functions 也可以根据您定义的 HTTP 端点或 Firebase
    移动应用程序中的事件被触发。
- en: With Cloud Functions, Google takes care of the backend infrastructure for running
    the code and lets you focus on the code development only.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Cloud Functions，Google 负责运行代码的后端基础设施，让您只需专注于代码开发。
- en: GCP storage and database service spectrum
  id: totrans-117
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: GCP 存储和数据库服务范围
- en: 'Previously, we examined the GCS service and created our storage bucket in the
    cloud, as well as the persistent disks and Filestore instances for our cloud VM
    instances. Now, let’s look at the whole GCP storage and database service spectrum,
    which includes Cloud Storage, Cloud SQL, Cloud Spanner, Cloud Firestore, Bigtable,
    and BigQuery, as shown in the following diagram:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 之前，我们探讨了 GCS 服务，并在云中创建了我们的存储桶，以及为我们的云 VM 实例创建的持久磁盘和 Filestore 实例。现在，让我们看看整个
    GCP 存储和数据库服务范围，包括 Cloud Storage、Cloud SQL、Cloud Spanner、Cloud Firestore、Bigtable
    和 BigQuery，如下所示：
- en: '![Figure 1.5 – GCP storage and database services ](img/Figure_1.5.jpg)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.5 – GCP 存储和数据库服务](img/Figure_1.5.jpg)'
- en: Figure 1.5 – GCP storage and database services
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.5 – GCP 存储和数据库服务
- en: Here, Cloud Storage stores objects, Cloud SQL and Cloud Spanner are the relational
    databases, Cloud Firestore and Bigtable are NoSQL databases.BigQuery is a data
    warehouse as well as a bigdata analytical/visualization tool. We will discuss
    BigQuery in the *GCP big data and analytics services* section.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，Cloud Storage 存储对象，Cloud SQL 和 Cloud Spanner 是关系型数据库，Cloud Firestore 和 Bigtable
    是 NoSQL 数据库。BigQuery 也是一个数据仓库以及大数据分析/可视化工具。我们将在 *GCP 大数据和数据分析服务* 部分讨论 BigQuery。
- en: GCP storage
  id: totrans-122
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: GCP 存储
- en: We have already discussed GCP storage, including **Google Cloud Storage** (**GCS**),
    persistent disks, and Filestore. GCS is a common choice for GCP ML jobs to store
    their training data, models, checkpoints, and logs. In the next few sections,
    we will discuss more GCP storage databases and services.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经讨论了 GCP 存储，包括 **Google Cloud Storage**（**GCS**）、持久磁盘和 Filestore。GCS 是 GCP
    ML 作业存储其训练数据、模型、检查点和日志的常见选择。在接下来的几节中，我们将讨论更多 GCP 存储数据库和服务。
- en: Google Cloud SQL
  id: totrans-124
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Google Cloud SQL
- en: Cloud SQL is a fully managed GCP relational database service for MySQL, PostgreSQL,
    and SQL Server. With Cloud SQL, you run the same relational databases you are
    familiar with on-premises, without the hassle of self-management, such as backup
    and restore, high availability, and more. As a managed service, it is the responsibility
    of Google to manage the database backups, export and import, ensure high availability
    and failover, perform patch maintenance and updates, and perform monitoring and
    logging.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: Cloud SQL 是一个完全托管的 GCP 关系型数据库服务，支持 MySQL、PostgreSQL 和 SQL Server。使用 Cloud SQL，您可以在本地运行熟悉的相同关系型数据库，无需自我管理的麻烦，如备份和恢复、高可用性等。作为一个托管服务，Google
    负责管理数据库备份、导出和导入、确保高可用性和故障转移、执行补丁维护和更新，以及执行监控和日志记录。
- en: Google Cloud Spanner
  id: totrans-126
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Google Cloud Spanner
- en: Google Cloud Spanner is a GCP fully managed relational database with unlimited
    global scale, strong consistency, and up to 99.999% availability. Like a relational
    database, Cloud Spanner has schemas, SQL, and strong consistency. Also, like a
    non-relational database, Cloud Spanner offers high availability, horizontal scalability,
    and configurable replications. Cloud Spanner has been used for mission-critical
    business use cases, such as online trading systems for transactions and financial
    management.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: Google Cloud Spanner 是一个具有无限全球规模、强一致性以及高达 99.999% 可用性的 GCP 完全托管的关系型数据库。与关系型数据库类似，Cloud
    Spanner 有模式、SQL 和强一致性。同样，与非关系型数据库类似，Cloud Spanner 提供高可用性、水平可伸缩性和可配置的复制。Cloud Spanner
    已被用于关键业务用例，如在线交易系统的交易和财务管理。
- en: Cloud Firestore
  id: totrans-128
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Cloud Firestore
- en: Cloud Firestore is a fast, fully managed, serverless, cloud-native NoSQL document
    database. Cloud Firestore supports ACID transactions and allows you to run sophisticated
    queries against NoSQL data without performance degradation. It stores, syncs and
    query data for mobile apps and web apps at global scale. Firestore integrates
    with Firebase and other GCP services seamlessly and thus accelerates serverless
    application development.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: Cloud Firestore 是一个快速、完全托管、无服务器、云原生的 NoSQL 文档数据库。Cloud Firestore 支持ACID事务，并允许您在无需性能下降的情况下对NoSQL数据进行复杂查询。它在全球范围内存储、同步和查询移动应用和Web应用的数据。Firestore
    与 Firebase 和其他 GCP 服务无缝集成，从而加速无服务器应用程序的开发。
- en: Google Cloud Bigtable
  id: totrans-130
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Google Cloud Bigtable
- en: Cloud Bigtable is Google’s fully managed NoSQL big data database service. Bigtable
    stores data in tables that are sorted using key/value maps. Bigtable can store
    trillions of rows and millions of columns, enabling applications to store petabytes
    of data. Bigtable provides extreme scalability and automatically handles database
    tasks such as restarts, upgrades, and replication. Bigtable is ideal for storing
    very large amounts of semi-structured or non-structured data, with sub-10 milliseconds
    latency and extremely high read and write throughput. Many of Google’s core products
    such as Search, Analytics, Maps, and Gmail use Cloud Bigtable.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: Cloud Bigtable 是 Google 的完全托管 NoSQL 大数据数据库服务。Bigtable 使用键/值映射对表进行排序来存储数据。Bigtable
    可以存储数万亿行和数百万列，使应用程序能够存储PB级的数据。Bigtable 提供极端的可伸缩性，并自动处理数据库任务，如重启、升级和复制。Bigtable
    非常适合存储大量半结构化或非结构化数据，具有低于10毫秒的延迟和极高的读写吞吐量。Google 的许多核心产品，如搜索、分析、地图和Gmail，都使用了 Cloud
    Bigtable。
- en: GCP big data and analytics services
  id: totrans-132
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: GCP 大数据和分析服务
- en: 'Distinguished from storage and database services, the big data and analytics
    services focus on the big data processing pipeline: from data ingestion, storing,
    and processing to visualization, it helps you create a complete cloud-based big
    data infrastructure:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 与存储和数据库服务不同，大数据和分析服务专注于大数据处理流程：从数据摄入、存储和处理到可视化，它帮助您创建一个完整的基于云的大数据基础设施：
- en: '![Figure 1.6 – GCP big data and analytics services ](img/Figure_1.6.jpg)'
  id: totrans-134
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.6 – GCP 大数据和分析服务](img/Figure_1.6.jpg)'
- en: Figure 1.6 – GCP big data and analytics services
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.6 – GCP 大数据和分析服务
- en: As shown in the preceding diagram, the GCP big data and analytics services include
    Cloud Dataproc, Cloud Dataflow, BigQuery, and Cloud Pub/Sub.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 如前图所示，GCP 大数据和分析服务包括 Cloud Dataproc、Cloud Dataflow、BigQuery 和 Cloud Pub/Sub。
- en: Let’s examine each of them briefly.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们简要地考察每一个。
- en: Google Cloud Dataproc
  id: totrans-138
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Google Cloud Dataproc
- en: Based on the concept of Map-Reduce and the architecture of Hadoop systems, **Google**
    **Cloud Dataproc** is a managed GCP service for processing large datasets. **Dataproc**
    provides organizations with the flexibility to provision and configure data processing
    clusters of varying sizes on demand. Dataproc integrates well with other GCP services.
    It can operate directly on Cloud Storage files or use Bigtable to analyze data,
    and it can be integrated with **Vertex AI**, **BigQuery**, **Dataplex**, and other
    **GCP** services.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 基于Map-Reduce概念和Hadoop系统架构，**Google Cloud Dataproc**是GCP的一项托管服务，用于处理大型数据集。**Dataproc**为组织提供按需配置和配置不同大小数据处理集群的灵活性。Dataproc与其他GCP服务兼容良好。它可以直接在云存储文件上操作或使用Bigtable分析数据，并且可以与**Vertex
    AI**、**BigQuery**、**Dataplex**和其他**GCP**服务集成。
- en: Dataproc helps users process, transform, and understand vast quantities of data.
    You can use Dataproc to run Apache Spark, Apache Flink, Presto, and 30+ open source
    tools and frameworks. You can also use Dataproc for data lake modernization, ETL
    processes, and more.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: Dataproc帮助用户处理、转换和理解大量数据。您可以使用Dataproc运行Apache Spark、Apache Flink、Presto和30多个开源工具和框架。您还可以使用Dataproc进行数据湖现代化、ETL流程等。
- en: Google Cloud Dataflow
  id: totrans-141
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Google Cloud Dataflow
- en: Cloud Dataflow is a GCP-managed service for developing and executing a wide
    variety of data processing patterns, including **Extract, Transform, Load** (**ETL**),
    batch, and streaming jobs. Cloud Dataflow is a serverless data processing service
    that runs jobs written with Apache Beam libraries. Cloud Dataflow executes jobs
    that consist of a pipeline – a sequence of steps that reads data, transforms it
    into different formats, and writes it out. A dataflow pipeline consists of a series
    of pipes, which is a way to connect components, where data moves from one component
    to the next via a pipe. When jobs are executed on Cloud Dataflow, the service
    spins up a cluster of VMs, distributes the job tasks to the VMs, and dynamically
    scales the cluster based on job loads and their performance.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: Cloud Dataflow是GCP管理的服务，用于开发和执行各种数据处理模式，包括**提取、转换、加载**（**ETL**）、批量作业和流作业。Cloud
    Dataflow是一个无服务器数据处理服务，使用Apache Beam库编写的作业在其上运行。Cloud Dataflow执行由管道组成的作业——一系列读取数据、将其转换为不同格式并写入的步骤。数据流管道由一系列管道组成，这是一种连接组件的方式，其中数据通过管道从一个组件移动到下一个组件。当作业在Cloud
    Dataflow上执行时，该服务启动一个VM集群，将作业任务分配给VM，并根据作业负载和性能动态扩展集群。
- en: Google Cloud BigQuery
  id: totrans-143
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Google Cloud BigQuery
- en: 'BigQuery is a Google fully managed enterprise data warehouse service that is
    highly scalable, fast, and optimized for data analytics. It has the following
    features:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: BigQuery是Google提供的一项全面管理的企业数据仓库服务，具有高度可扩展性、快速响应，并针对数据分析进行了优化。它具有以下特性：
- en: BigQuery supports ANSI-standard SQL queries, including joins, nested and repeated
    fields, analytic and aggregation functions, scripting, and a variety of spatial
    functions via geospatial analytics.
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: BigQuery支持ANSI标准的SQL查询，包括连接、嵌套和重复字段、分析聚合函数、脚本和通过地理空间分析的各种空间函数。
- en: With BigQuery, you do not physically manage the infrastructure assets. BigQuery’s
    serverless architecture lets you use SQL queries to answer big business questions
    with zero infrastructure overhead. With BigQuery’s scalable, distributed analysis
    engine, you can query petabytes of data in minutes.
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用BigQuery，您无需物理管理基础设施资产。BigQuery的无服务器架构允许您使用SQL查询以零基础设施开销来回答大型商业问题。借助BigQuery的可扩展、分布式分析引擎，您可以在几分钟内查询PB级数据。
- en: BigQuery integrates seamlessly with other GCP data services. You can query data
    stored in BigQuery or run queries on data where it lives using external tables
    or federated queries, including GCS, Bigtable, Spanner, or Google Sheets stored
    in Google Drive.
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: BigQuery可以无缝集成其他GCP数据服务。您可以使用外部表或联邦查询在BigQuery中查询存储的数据，或在数据所在位置运行查询，包括存储在Google
    Drive中的GCS、Bigtable、Spanner或Google Sheets。
- en: BigQuery helps you manage and analyze your data with built-in features such
    as ML, geospatial analysis, and business intelligence. We will discuss BigQuery
    ML later in this book.
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: BigQuery通过内置的ML、地理空间分析和商业智能等功能帮助您管理和分析数据。我们将在本书的后续部分讨论BigQuery ML。
- en: Google BigQuery is used in many business cases due to it being SQL-friendly,
    having a serverless structure, and having built-in integration with other GCP
    services.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 由于Google BigQuery易于使用SQL、具有无服务器结构以及内置与其他GCP服务的集成，因此在许多业务案例中得到了应用。
- en: Google Cloud Pub/Sub
  id: totrans-150
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Google Cloud Pub/Sub
- en: 'GCP Pub/Sub is a widely used cloud service for decoupling many GCP services
    – it implements an event/message queue pipe to integrate services and parallelize
    tasks. With the Pub/Sub service, you can create event producers, called publishers,
    and event consumers, called subscribers. Using Pub/Sub, the publishers communicate
    with subscribers asynchronously by broadcasting events – a publisher can have
    multiple subscribers and a subscriber can subscribe to multiple publishers:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: GCP Pub/Sub 是一种广泛使用的云服务，用于解耦许多 GCP 服务——它实现了一个事件/消息队列管道，用于集成服务和并行化任务。使用 Pub/Sub
    服务，您可以创建事件生产者，称为发布者，和事件消费者，称为订阅者。使用 Pub/Sub，发布者可以通过广播事件异步地与订阅者通信——一个发布者可以有多个订阅者，一个订阅者可以订阅多个发布者：
- en: '![Figure 1.7 – Google Cloud Pub/Sub services](img/Figure_1.7.jpg)'
  id: totrans-152
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.7 – Google Cloud Pub/Sub 服务](img/Figure_1.7.jpg)'
- en: Figure 1.7 – Google Cloud Pub/Sub services
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.7 – Google Cloud Pub/Sub 服务
- en: 'The preceding diagram shows the example we discussed in the *GCP Cloud Functions*
    section: after an object is uploaded to a GCS bucket, a request/message can be
    generated and sent to GCP Pub/Sub, which can trigger an email notification and
    a cloud function to process the object. When the number of parallel object uploads
    is huge, Cloud Pub/Sub will help buffer/queue the requests/messages and decouple
    the GCS service from other cloud services such as Cloud Functions.'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 上述图表显示了我们在 *GCP 云函数* 部分讨论的示例：当一个对象被上传到 GCS 存储桶后，可以生成并发送一个请求/消息到 GCP Pub/Sub，这可以触发电子邮件通知和云函数来处理该对象。当并行对象上传的数量巨大时，Cloud
    Pub/Sub 将帮助缓冲/排队请求/消息，并将 GCS 服务与其他云服务（如 Cloud Functions）解耦。
- en: So far, we have covered various GCP services, including compute, storage, databases,
    and data analytics (big data). Now, let’s take a look at various GCP **artificial
    intelligence** (**AI**) services.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经介绍了各种 GCP 服务，包括计算、存储、数据库和数据分析（大数据）。现在，让我们来看看各种 GCP **人工智能**（**AI**）服务。
- en: GCP artificial intelligence services
  id: totrans-156
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: GCP 人工智能服务
- en: 'The AI services in Google Cloud are some of its best services. Google Cloud’s
    AI services include the following:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: Google Cloud 中的 AI 服务是其最好的服务之一。Google Cloud 的 AI 服务包括以下内容：
- en: '**BigQuery ML** (**BQML**)'
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**BigQuery ML**（**BQML**）'
- en: TensorFlow and Keras
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: TensorFlow 和 Keras
- en: Google Vertex AI
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Google Vertex AI
- en: Google ML API
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Google ML API
- en: Google BQML is built from Google Cloud BQ, which serves as a serverless big
    data warehouse and analytical platform. BQML trains ML models from the datasets
    already stored in BQ, using SQL-based languages. TensorFlow introduces the concepts
    of tensors and provides a framework for ML development, whereas Keras provides
    a high-level structure using TensorFlow. We will discuss BQML, TensorFlow, and
    Keras in more detail in part three of this book, along with Google Cloud Vertex
    AI and the Google Cloud ML API, which we will briefly introduce next.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: Google BQML 是基于 Google Cloud BQ 构建的，它作为一个无服务器的云大数据仓库和分析平台。BQML 使用基于 SQL 的语言从已存储在
    BQ 中的数据集训练机器学习模型。TensorFlow 引入了张量的概念，并为机器学习开发提供了一个框架，而 Keras 则使用 TensorFlow 提供了一个高级结构。我们将在本书的第三部分更详细地讨论
    BQML、TensorFlow 和 Keras，以及 Google Cloud Vertex AI 和 Google Cloud ML API，我们将在下一部分简要介绍。
- en: Google Vertex AI
  id: totrans-163
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Google Vertex AI
- en: '**Google Vertex AI** ([https://cloud.google.com/vertex-ai/docs/start/introduction-unified-platform](https://cloud.google.com/vertex-ai/docs/start/introduction-unified-platform))
    aims to provide a fully managed, scalable, secure, enterprise-level ML development
    infrastructure. Within the Vertex AI environment, data scientists can complete
    all of their ML projects from end to end: data preparation and feature engineering;
    model training, validation, and tuning; model deployment and monitoring, and so
    on. It provides a unified API, client library, and user interface.'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: '**Google Vertex AI** ([https://cloud.google.com/vertex-ai/docs/start/introduction-unified-platform](https://cloud.google.com/vertex-ai/docs/start/introduction-unified-platform))
    致力于提供一套全面管理、可扩展、安全的企业级机器学习开发基础设施。在 Vertex AI 环境中，数据科学家可以完成他们所有机器学习项目的全流程：数据准备和特征工程；模型训练、验证和调优；模型部署和监控等。它提供统一的
    API、客户端库和用户界面。'
- en: 'Vertex AI provides end-to-end ML services, including, but not limited to, the
    following:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: Vertex AI 提供端到端的机器学习服务，包括但不限于以下内容：
- en: Vertex AI data labeling and dataset
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Vertex AI 数据标注和数据集
- en: Vertex AI Feature Store
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Vertex AI 特征存储
- en: Vertex AI Workbench and notebooks
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Vertex AI 工作台和笔记本
- en: Vertex AI training
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Vertex AI 训练
- en: Vertex AI models and endpoints
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Vertex AI 模型和端点
- en: Vertex AI Pipelines
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Vertex AI 管道
- en: Vertex AI Metadata
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Vertex AI 元数据
- en: Vertex AI Experiments and TensorBoard
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Vertex AI 实验 和 TensorBoard
- en: We will examine each of these in detail in the third part of this book.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在本书的第三部分详细检查这些内容。
- en: Google Cloud ML APIs
  id: totrans-175
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Google Cloud ML APIs
- en: '**Google Cloud ML APIs** provide application interfaces to customers with Google’s
    pre-trained ML models, which are trained with Google’s data. The following are
    a few AI APIs:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: '**Google Cloud ML APIs**为用户提供Google预训练的机器学习模型的应用接口，这些模型是用Google的数据训练的。以下是一些AI
    API：'
- en: '**Google Cloud sight APIs**, which include the Google Cloud Vision API and
    Cloud Video API. The pre-trained models of the sight APIs use ML to understand
    your images with industry-leading prediction accuracy. They can be used to detect
    objects/faces/scenes, read handwriting, and build valuable image/video metadata.'
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Google Cloud sight APIs**，包括Google Cloud Vision API和Cloud Video API。视觉API的预训练模型使用机器学习来理解您的图像，具有行业领先的预测准确性。它们可以用于检测对象/人脸/场景，读取手写文字，并构建有价值的图像/视频元数据。'
- en: '**Google Cloud language APIs**, which includes the Natural Language Processing
    API and Translation API. These powerful pre-trained models of the Language API
    empower developers to easily apply **natural language understanding** (**NLU**)
    to their applications, alongside features such as sentiment analysis, entity analysis,
    entity sentiment analysis, content classification, and syntax analysis. The Translation
    API allows you to detect a language and translate it into the target language.'
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Google Cloud语言API**，包括自然语言处理API和翻译API。这些强大的预训练语言API模型使开发者能够轻松地将**自然语言理解**（NLU）应用于他们的应用程序，同时提供情感分析、实体分析、实体情感分析、内容分类和语法分析等功能。翻译API允许您检测语言并将其翻译成目标语言。'
- en: '**Google Cloud conversation APIs**, which include the Speech-to-Text, Text-to-Speech,
    and Dialogflow APIs. The pre-trained models of the Conversation APIs accurately
    convert speech into text, text into speech, and enable developers to develop business
    applications for call centers, online voice ordering systems, and so on using
    Google’s cutting-edge AI technologies.'
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Google Cloud对话API**，包括语音转文本、文本转语音和Dialogflow API。对话API的预训练模型能够准确地将语音转换为文本，文本转换为语音，并使开发者能够利用Google的尖端AI技术开发呼叫中心、在线语音订购系统等商业应用程序。'
- en: AI is the ability of a computer (or a robot controlled by a computer) to perform
    tasks that are usually done by humans because they require human intelligence.
    In the history of human beings, from vision development (related to the Cambrian
    explosion) to language development, to tool development, a fundamental question
    is, how did we humans evolve and how can we teach a computer to learn to see,
    speak, and use tools? The GCP AI service spectrum includes vision services(image
    recognition, detection, segmentation, and so on), language services(text, speech,
    translation, and so on), and many more. We will learn more about these services
    later in this book. We are certain that many more AI services, including hand
    detection tools, will be added to the spectrum in the future.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 人工智能是计算机（或由计算机控制的机器人）执行通常由人类完成的任务的技能，因为这些任务需要人类智能。在人类历史上，从视觉发展（与寒武纪大爆发相关）到语言发展，再到工具发展，一个基本问题是，我们人类是如何进化的，我们如何教会计算机学习看、说话和使用工具？GCP
    AI服务范围包括视觉服务（图像识别、检测、分割等）、语言服务（文本、语音、翻译等），还有更多。我们将在本书的后面部分了解更多关于这些服务的内容。我们确信，未来还将添加更多AI服务，包括手势检测工具等。
- en: Summary
  id: totrans-181
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we started by creating a GCP free-tier account and provisioning
    our VM and storage bucket in the cloud. Then, we looked at the GCP organization’s
    structure, resource hierarchy, and IAM. Finally, we looked at the GCP services
    that are related to ML, including compute, storage, big data and analytics, and
    AI, to have a solid understanding of each GCP service.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们首先创建了一个GCP免费层账户，并在云中配置了我们的虚拟机和存储桶。然后，我们研究了GCP组织的结构、资源层次结构和IAM。最后，我们研究了与机器学习相关的GCP服务，包括计算、存储、大数据和数据分析以及AI，以便对每个GCP服务有一个扎实的理解。
- en: To help you with your hands-on GCP skills, we have provided examples in [*Appendix
    1*](B18333_11.xhtml#_idTextAnchor184), *Practicing with Basic GCP Services*, where
    we have provided labs for provisioning basic GCP resources, step by step.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 为了帮助您掌握GCP的实际操作技能，我们在[*附录1*](B18333_11.xhtml#_idTextAnchor184)“使用基本GCP服务实践”中提供了示例，其中我们提供了配置基本GCP资源的实验室，步骤详尽。
- en: 'In the next chapter, we will build another foundation: Python programming.
    We will focus on Python basic skill development and Python data library usage.'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将构建另一个基础：Python编程。我们将专注于Python基本技能的发展和Python数据库的使用。
- en: Further reading
  id: totrans-185
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: '[To learn more about the topics t](https://cloud.google.com/compute/docs/instances/create-start-instance)hat
    were covered in this chapter, take a look at the following resources:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: '[了解更多关于本章所涵盖的主题](https://cloud.google.com/compute/docs/instances/create-start-instance)的资源如下：'
- en: '[https://cloud.google.com/compute/](https://cloud.google.com/compute/)'
  id: totrans-187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://cloud.google.com/compute/](https://cloud.google.com/compute/)'
- en: '[https://cloud.google.com/storage/](https://cloud.google.com/storage/)'
  id: totrans-188
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://cloud.google.com/storage/](https://cloud.google.com/storage/)'
- en: '[https://cloud.google.com/vpc](https://cloud.google.com/vpc)'
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://cloud.google.com/vpc](https://cloud.google.com/vpc)'
- en: '[https://cloud.google.com/products/databases](https://cloud.google.com/products/databases)'
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://cloud.google.com/products/databases](https://cloud.google.com/products/databases)'
- en: '[https://cloud.google.com/products/security-and-identity](https://cloud.google.com/products/security-and-identity)'
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://cloud.google.com/products/security-and-identity](https://cloud.google.com/products/security-and-identity)'
- en: '[https://cloud.google.com/solutions/smart-analytics](https://cloud.google.com/solutions/smart-analytics)'
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://cloud.google.com/solutions/smart-analytics](https://cloud.google.com/solutions/smart-analytics)'
- en: '[https://cloud.google.com/products/ai](https://cloud.google.com/products/ai)'
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://cloud.google.com/products/ai](https://cloud.google.com/products/ai)'
- en: '[*Appendix 1*](B18333_11.xhtml#_idTextAnchor184), *Practicing with Basic GCP
    Services*'
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*附录1*](B18333_11.xhtml#_idTextAnchor184)，*使用基本GCP服务练习*'
