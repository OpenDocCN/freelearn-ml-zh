- en: '9'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Conformal Prediction for Computer Vision
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In today’s fast-paced world, computer vision has grown beyond mere image recognition
    to be a fundamental cornerstone in numerous real-world applications. From self-driving
    cars navigating bustling streets to medical imaging systems that detect early
    signs of diseases, the demand for reliable and accurate computer vision models
    has never been higher. However, with the increasing complexity of these systems
    and their applications, a critical need arises for the ability to quantify the
    uncertainty associated with their predictions.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: Enter **conformal prediction**, a ground-breaking framework that offers a robust
    means to encapsulate the uncertainty inherent in machine learning models. While
    traditional computer vision models often produce a singular prediction, the true
    power of conformal prediction lies in its ability to provide a set of possible
    outcomes, each backed by a confidence level. This offers practitioners a more
    informed, nuanced view of the model’s predictions, enabling safer and more reliable
    deployments in critical applications.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: 'This chapter dives deep into the marriage of conformal prediction and computer
    vision. We begin by illuminating the necessity of uncertainty quantification in
    computer vision, highlighting its significance in real-world scenarios including
    **autonomous driving** and **healthcare diagnostics**. As we navigate deeper,
    we’ll explore the Achilles’ heel of modern deep learning models: *their tendency
    to produce* *miscalibrated predictions*.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
- en: By the journey’s end, you’ll gain hands-on experience building state-of-the-art
    computer vision classifiers imbued with the power of conformal prediction. We’ll
    introduce and guide you through the best open source conformal prediction libraries
    in computer vision applications to ensure you have all the tools necessary to
    embark on this journey.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we’re going to cover the following main topics:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
- en: Uncertainty quantification for computer vision
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Why deep learning produces miscalibrated predictions
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Various approaches to quantify uncertainty in computer vision problems
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Conformal prediction for computer vision
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Building computer vision classifiers using Conformal prediction
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Uncertainty quantification for computer vision
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As a domain, computer vision has transformed many sectors by automating complex
    tasks that were once reserved for human eyes and cognition. Computer vision models
    have become an integral part of modern technology, whether it’s detecting pedestrians
    on the road, identifying potential tumours in medical scans, or even analyzing
    satellite images for environmental studies. However, as the reliance on these
    models grows, so does the need to understand and quantify the uncertainty associated
    with their predictions.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
- en: Why does uncertainty matter?
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Before deep-diving into the mechanics, it’s essential to understand why we
    need **uncertainty quantification** (**UQ**) in the first place. Let’s go through
    some of the reasons as follows:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
- en: '**Safety and reliability**: A wrong prediction can have severe consequences
    in critical applications, such as medical imaging or autonomous driving. Knowing
    the confidence level in a prediction can aid in decision-making, such as whether
    to trust the model’s prediction or seek human intervention.'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Model improvements**: Uncertainty measurements can provide insights into
    areas where the model might be lacking, helping to guide data collection and training
    enhancements.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Trustworthiness**: Knowing that a system acknowledges its limitations and
    can provide confidence intervals or uncertainty metrics for end users and stakeholders
    makes it more trustworthy.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Navigating the world of computer vision, one inevitably encounters uncertainties
    that can influence the accuracy of model predictions. But what are the sources
    of these uncertainties, and can they be managed? Let’s delve into the two primary
    types of uncertainty in computer vision.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
- en: Types of uncertainty in computer vision
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Uncertainty in computer vision can be broadly classified into two categories:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
- en: '**Aleatoric uncertainty**: This type of uncertainty arises from the inherent
    noise in the data. For instance, low-light images, blurry images, or images taken
    from varying angles introduce variability that the model might find challenging
    to handle. Aleatoric uncertainty is often irreducible, meaning no matter how good
    the model becomes, this uncertainty will always exist due to the inherent noise
    in the observations.'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Epistemic uncertainty**: This type of uncertainty stems from the model itself.
    It could be due to incomplete training data, model architecture choices, or the
    optimization process. Given enough data or improvements in model design, epistemic
    uncertainty can be reduced.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In the realm of computer vision, it’s not enough to simply get a prediction.
    As advanced as our models are, they can sometimes be overly confident, potentially
    leading to misinformed decisions. How do we gauge the reliability of these predictions?
    Enter the world of uncertainty quantification.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
- en: Quantifying uncertainty
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Modern computer vision models, especially deep learning architectures, produce
    predictions that are often overconfident. This miscalibration can be misleading,
    especially in critical applications. The need, therefore, is not just to produce
    a prediction but also to accompany it with a measure of confidence or uncertainty.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
- en: Various methods have been proposed to quantify uncertainty, ranging from Bayesian
    neural networks, which provide a distribution over model parameters, to ensemble
    methods, which rely on the variability of predictions across different models.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
- en: However, as we’ll see in the subsequent sections, Conformal prediction offers
    a fresh and rigorous perspective on uncertainty quantification tailored to the
    needs of computer vision applications.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
- en: Uncertainty quantification for computer vision is not a theoretical exercise
    but a crucial aspect of building reliable, safe, and trustworthy models. Understanding
    and accounting for their inherent uncertainties will be paramount as computer
    vision systems continue to permeate every sector.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
- en: Why does deep learning produce miscalibrated predictions?
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The **ImageNet Large Scale Visual Recognition Challenge** (**ILSVRC**) is an
    annual competition where research teams evaluate their algorithms on a given dataset,
    aiming to push the boundaries of computer vision. 2012 was a watershed moment
    for the field, marking a significant shift towards the dominance of deep learning
    in computer vision ([https://www.image-net.org/challenges/LSVRC/2012/](https://www.image-net.org/challenges/LSVRC/2012/)).
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
- en: Before the advent of deep learning, computer vision primarily relied on hand-engineered
    features and traditional machine learning techniques. Algorithms such as **Scale-Invariant
    Feature Transform** (**SIFT**), **Histogram of Oriented Gradients** (**HOG**),
    and **Speeded-Up Robust Features** (**SURF**) were commonly used to extract features
    from images. These features would then be fed into machine learning classifiers
    such as **Support Vector Machines** (**SVM**) to make predictions. While these
    methods had their successes, they had significant limitations regarding scalability
    and performance on more complex datasets.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
- en: In 2012, a deep convolutional neural network named AlexNet ([https://en.wikipedia.org/wiki/AlexNet](https://en.wikipedia.org/wiki/AlexNet)),
    developed by Alex Krizhevsky, Ilya Sutskever, and Geoffrey Hinton, was entered
    into the ILSVRC. It achieved a top-5 error rate of 15.3%, a staggering 10.8 percentage
    points lower than the second-place finisher. This dramatic improvement was an
    incremental step and a quantum leap in performance.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
- en: Why was AlexNet revolutionary?
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
- en: '**Deep architecture**: AlexNet was considerably deeper than other networks
    of its time. It had five convolutional layers followed by three fully connected
    layers. This depth allowed it to learn more complex and hierarchical features
    from the ImageNet dataset.'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**GPU training**: The team utilized **graphics processing units** (**GPUs**)
    to train the network, which made it feasible to process the massive amount of
    data in the ImageNet dataset and efficiently train the deep architecture.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**ReLU activation**: Instead of traditional tanh or sigmoid activation functions,
    AlexNet employed the **Rectified Linear Unit** (**ReLU**) activation. This choice
    helped combat the vanishing gradient problem, enabling the training of deeper
    networks.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Dropout**: To prevent overfitting, AlexNet introduced the dropout technique,
    where random subsets of neurons were “dropped out” during training, forcing the
    network to learn redundant representations.'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The dawn of 2012 marked a transformative moment in the realm of computer vision.
    Propelled by the unprecedented achievements of AlexNet in the ImageNet competition,
    the entire industry pivoted towards deep learning, especially **convolutional**
    **neural networks** (**CNNs**). As we journey through the aftermath of this revolution,
    we’ll witness the exponential growth in research, widespread industry adoption,
    and the relentless quest for more data and computational power.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
- en: Post-2012 – the deep learning surge
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The 2012 ImageNet competition, marked by the triumph of AlexNet, became a watershed
    moment in the field of computer vision. This victory underscored the profound
    potential of deep learning, especially **convolutional neural networks** (**CNNs**).
    As a result, the following happened:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
- en: '**Research boom**: After 2012, there was an explosion of research into deep
    learning for computer vision. Variants and improvements upon AlexNet, such as
    VGG, GoogLeNet, and ResNet, were rapidly developed, pushing the envelope further.'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Industry adoption**: Tech giants and start-ups began investing heavily in
    deep learning research and applications, from facial recognition systems to augmented
    reality.'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Datasets and compute**: The success of deep learning fueled the creation
    of even larger datasets and a race for more powerful computation infrastructure,
    further accelerating the innovation cycle.'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The 2012 ImageNet competition was a turning point, heralding the era of deep
    learning in computer vision. The principles and breakthroughs of AlexNet laid
    the foundation for the subsequent advancements we see today, from self-driving
    cars to real-time video analytics.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
- en: The "calibration crisis" in deep learning – a turning point in 2017
  id: totrans-46
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Since its triumphant ascendance following the 2012 ImageNet competition, deep
    learning experienced rapid advancements and widespread adoption across many domains.
    The community was engrossed in developing architectures, optimization techniques,
    and applications for five consecutive years. Yet, amidst this whirlwind of innovation,
    a significant concern remained largely overlooked: *the miscalibration of predictions
    produced by deep* *learning systems*.'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
- en: In real-world applications where automated systems drive decisions, it’s not
    enough for classification networks to merely provide accurate results. These systems
    play an integral role in various critical sectors, from healthcare to finance,
    and a misjudgment can have significant consequences. Therefore, it’s crucial that
    these classification networks not only deliver precise outcomes but also possess
    the self-awareness to flag potential uncertainties or errors in their predictions.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
- en: For instance, in a medical diagnostic tool, beyond correctly identifying a disease,
    the system should also indicate its confidence level in that diagnosis. Medical
    professionals can take appropriate precautions if uncertain, perhaps seeking additional
    tests or expert opinions.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
- en: 'Take another example: a self-driving car equipped with a neural network designed
    to identify pedestrians and various obstacles on the road. In such a scenario,
    the car’s system doesn’t just need to recognize people or obstructions; it must
    do so accurately and in real time. Any delay or misidentification could lead to
    potentially dangerous situations.'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
- en: Furthermore, it’s not only about detecting obstacles but also understanding
    the level of certainty in that detection. Imagine a scenario where a self-driving
    car’s detection network struggles to determine whether there’s an obstruction
    ahead confidently. If the car’s system is uncertain about an object—perhaps due
    to poor lighting conditions or an obscured view—it should be programmed to lean
    more heavily on data from its other sensors, such as lidar or radar, to decide
    whether braking is necessary and to proceed cautiously, slow down, or even halt.
    This dual requirement of precise detection and self-awareness of its own certainty
    levels ensures safer navigation and decision-making, especially in dynamic and
    unpredictable road environments. See the article *Risk-Sensitive Decision-Making
    for Autonomous-Driving* ([https://uu.diva-portal.org/smash/get/diva2:1698692/FULLTEXT01.pdf](https://uu.diva-portal.org/smash/get/diva2:1698692/FULLTEXT01.pdf))
    if you are interested in more details on the subject.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
- en: Accurate confidence estimates play a pivotal role in enhancing model interpretability.
    Humans inherently understand and relate to probabilities, making it an intuitive
    measure to gauge predictions.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
- en: When a model provides well-calibrated confidence levels, it offers an additional
    layer of information that bolsters its credibility to the user. This is especially
    crucial for neural networks, as their decision-making processes can be complex
    and challenging to decipher. Moreover, reliable probability assessments can be
    integrated into broader probabilistic models, further expanding their utility
    and application.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
- en: This combination of accuracy and introspection ensures that automated decision-making
    systems are trustworthy and reliable, fostering confidence in their integration
    into critical applications.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
- en: Miscalibration refers to the disparity between a model’s stated confidence in
    its predictions and the actual accuracy of those predictions. For instance, if
    a model claims 90% confidence for a set of predictions, one expects approximately
    90% of those predictions to be correct. However, despite their high accuracy,
    deep learning models often needed to catch up on their expressed confidence and
    actual correctness.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
- en: Fast forward to the present, and while contemporary neural networks have seen
    significant advancements in accuracy compared to those from a decade ago, it’s
    intriguing to note that they no longer maintain calibration.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 快进到今天，尽管与十年前相比，当代神经网络在准确性方面取得了显著进步，但值得注意的是，它们不再保持校准。
- en: It wasn’t until 2017 that the magnitude of this issue was brought to the forefront
    of the AI community’s attention. A pivotal paper, *On Calibration of Modern Neural
    Networks (Guo, 2017)*, ([https://proceedings.mlr.press/v70/guo17a.html](https://proceedings.mlr.press/v70/guo17a.html))
    discovered that deep neural networks are poorly calibrated, spotlighting the calibration
    conundrum inherent in deep learning systems.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 直到2017年，这个问题的重要性才被带到人工智能社区的关注焦点。一篇关键论文，*《现代神经网络的校准》（Guo, 2017）*，([https://proceedings.mlr.press/v70/guo17a.html](https://proceedings.mlr.press/v70/guo17a.html))
    发现深度神经网络校准不佳，突显了深度学习系统中固有的校准难题。
- en: 'This research not only underscored the severe miscalibration of these systems
    but also brought to light a startling revelation: several of the *state-of-the-art*
    techniques that had been hailed as breakthroughs, such as dropout, weight decay,
    and batch normalization, were paradoxically exacerbating the miscalibration issue.'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 这项研究不仅强调了这些系统的严重误校准，而且还揭示了惊人的发现：一些被誉为突破性的*最先进*技术，如dropout、权重衰减和批量归一化，反而加剧了误校准问题。
- en: This seminal paper served as a wake-up call. It prompted introspection within
    the community, urging researchers to question and revisit the techniques they
    had championed. The paper was a critique and an invitation to explore and rectify
    the issue. Its lucid exposition and profound insights made it a must-read for
    anyone in the field.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 这篇开创性的论文起到了警钟的作用。它促使社区进行反思，敦促研究人员质疑并重新审视他们所倡导的技术。这篇论文是对问题的批判和探索及纠正的邀请。它清晰的表达和深刻的洞察力使它成为该领域任何人的必读之作。
- en: While the years following the 2012 ImageNet competition were characterized by
    rapid progress and unbridled optimism, the 2017 paper served as a moment of reckoning.
    It underscored the importance of introspection in science and the continuous need
    to refine, recalibrate, and, if necessary, rethink our approaches, ensuring that
    the AI systems we build are accurate and reliably calibrated.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然2012年ImageNet竞赛之后的几年以快速进步和无拘无束的乐观为特征，但2017年的论文却是一个清算的时刻。它强调了科学中反思的重要性以及不断改进、重新校准和必要时重新思考我们方法的持续需求，以确保我们构建的人工智能系统是准确且可靠校准的。
- en: Confidence calibration is the problem of predicting probability estimates that
    represent the actual outcome. It is crucial for classification models in many
    applications because good confidence estimates provide valuable information to
    establish trustworthiness with the user. Good probability estimates can be used
    for model interpretability, as humans have a natural cognitive intuition for probabilities.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 置信度校准是预测表示实际结果的概率估计的问题。在许多应用中，这对于分类模型至关重要，因为良好的置信度估计可以为建立与用户的信任提供有价值的信息。良好的概率估计可用于模型可解释性，因为人类对概率有自然的认知直觉。
- en: The authors of the paper *On Calibration of Modern Neural Networks* found that
    increased model capacity and lack of regularization are closely related to the
    miscalibration phenomenon observed in deep neural networks. Model capacity has
    increased dramatically over the past few years, with networks having hundreds
    or thousands of layers and hundreds of convolutional filters per layer. Recent
    work shows that very deep or wide models can generalize better than smaller ones
    while exhibiting the capacity to fit the training set easily. However, this increased
    capacity can lead to overfitting and miscalibration.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 论文《现代神经网络的校准》的作者发现，模型容量增加和缺乏正则化与深度神经网络中观察到的误校准现象密切相关。在过去几年中，模型容量大幅增加，网络拥有数百或数千层，每层有数百个卷积滤波器。最近的研究表明，非常深或宽的模型可以比较小的模型更好地泛化，同时展现出轻松拟合训练集的能力。然而，这种增加的容量可能导致过拟合和误校准。
- en: Regarding shallow classical neural networks, the paper *On Calibration of Modern
    Neural Networks* posited that traditional (or shallow) neural networks were well
    calibrated. This belief stemmed from a highly cited 2005 paper by Niculescu-Mizil
    and R. Caruana, titled *Predicting good probabilities with supervised learning*
    ([https://www.cs.cornell.edu/~alexn/papers/calibration.icml05.crc.rev3.pdf](https://www.cs.cornell.edu/~alexn/papers/calibration.icml05.crc.rev3.pdf)).
    Presented at the prestigious ICML conference, this paper has amassed over 1,570
    citations since its publication. One of the conclusions reached was that shallow
    (classical) neural networks were “well calibrated.”
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
- en: However, this conclusion about the calibration of shallow neural networks was
    upended later. In a 2020 study titled *Are Traditional Neural Networks Well-Calibrated?*
    ([https://ieeexplore.ieee.org/document/8851962](https://ieeexplore.ieee.org/document/8851962)),
    the authors debunked the widely held belief that shallow neural networks are well-calibrated.
    Their findings revealed that traditional shallow networks are poorly calibrated,
    and their ensembles exhibit the same issue. Fortunately, the researchers also
    highlighted that the calibration of these networks can be significantly enhanced
    using the Venn-ABERS conformal prediction method we learned about in previous
    chapters.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
- en: Overconfidence in modern deep learning computer vision models
  id: totrans-65
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Many deep learning models designed for computer vision predominantly utilize
    convolution-based architectures. These architectures have propelled the field
    forward, achieving unprecedented predictive accuracy. However, there’s an unintended
    side effect: *these models often produce* *overconfident predictions*:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
- en: '**Accuracy versus quality**: The relentless pursuit of accuracy in deep learning
    has led to models that can correctly classify images with remarkable precision.
    However, accuracy is just one facet of a model’s performance. Predictive quality,
    which encompasses aspects such as the reliability and calibration of predictions,
    is equally vital.'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**The overconfidence issue**: Even as these models achieve higher accuracy
    rates, they tend to be excessively confident in their predictions. This means
    they do so with high confidence when they make an error, indicating they believe
    strongly in the incorrect prediction.'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Implications in critical applications**: This overconfidence poses considerable
    risks, especially in sectors where the stakes are high. Consider healthcare: a
    misdiagnosis by a computer vision system analyzing medical scans might lead medical
    professionals to pursue incorrect treatments if made with high confidence. Similarly,
    an overconfident misinterpretation of a road scene in autonomous vehicles could
    result in dangerous manoeuvres.'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In essence, as the deep learning community pushes the boundaries of accuracy,
    it’s imperative also to address the calibration of these models. Ensuring that
    they not only make accurate predictions but also gauge the confidence of those
    predictions appropriately is crucial, especially when these models are employed
    in life-critical applications.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
- en: Various approaches to quantify uncertainty in computer vision problems
  id: totrans-71
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Uncertainty quantification in computer vision is crucial for ensuring vision-based
    systems’ reliability and safety, especially when deployed in critical applications.
    Over the years, various approaches have been developed to address and quantify
    this uncertainty. Here’s a look at some of the most prominent methods:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
- en: '**Bayesian Neural Networks** (**BNNs**): These neural networks treat weights
    as probability distributions rather than fixed values. By doing so, they can provide
    a measure of uncertainty for their predictions. During inference, multiple forward
    passes are made with different weight samples, producing a distribution of outputs
    that capture the model’s uncertainty.'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Monte Carlo dropout**: Monte Carlo dropout involves performing dropout during
    inference. By running the network multiple times with dropout and averaging the
    results, a distribution over the outputs is obtained, which can be used to gauge
    uncertainty.'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Ensemble methods**: Ensemble methods involve training multiple models and
    aggregating their predictions. The variance in predictions across models can be
    used as a proxy for uncertainty. This approach is computationally expensive but
    often leads to more robust uncertainty estimates.'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Deep Gaussian processes**: Deep Gaussian processes combine deep learning
    with Gaussian processes to provide a non-parametric way to estimate uncertainty.
    They offer a rich way to capture complex uncertainties but can be computationally
    challenging for large datasets.'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Conformal prediction**: Conformal prediction provides a set of possible outcomes
    for a prediction, each with a confidence level. This set-based prediction approach
    is designed to guarantee coverage, meaning that the actual outcome will fall within
    the predicted set with a probability equal to the confidence level.'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Calibration techniques**: While not directly measuring uncertainty, calibration
    techniques such as Platt scaling or temperature scaling ensure that the predicted
    confidence scores reflect the true likelihood of correctness. A well-calibrated
    model’s predicted probabilities are more interpretable and can be used as a measure
    of uncertainty.'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The superiority of conformal prediction in uncertainty quantification
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Quantifying uncertainty is fundamental to building robust and reliable machine
    learning models. Several methodologies have emerged over the years, each with
    its own merits. However, conformal prediction stands out as a particularly compelling
    framework. Let’s explain why:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
- en: '**Distribution-free framework**: One of the most notable features of conformal
    prediction is that it doesn’t make any assumptions about the distribution of the
    data. Many uncertainty quantification methods are based on certain probabilistic
    assumptions or rely on specific data distributions to function effectively. In
    contrast, conformal prediction remains agnostic to these considerations, making
    it versatile and widely applicable across diverse datasets.'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Theoretical guarantees**: conformal prediction offers robust theoretical
    guarantees for its predictions. Specifically, it provides a set of potential outcomes
    for a prediction, and each outcome is associated with a confidence level. The
    framework ensures that the actual outcome will fall within the predicted set with
    a probability corresponding to the confidence level. This is a powerful assurance,
    especially in critical applications where understanding the bounds of a prediction
    is essential.'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Model independence**: Another significant advantage of conformal prediction
    is its independence from the underlying model. Whether you’re working with a simple
    linear regression, a complex deep learning architecture, or any other model, conformal
    prediction can be applied seamlessly. This flexibility ensures that practitioners
    are open in their choice of model when seeking to quantify uncertainty.'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Scalability with dataset size**: conformal prediction is not sensitive to
    the size of the dataset. Whether dealing with a small dataset with limited entries
    or a massive one with millions of data points, the framework remains effective
    and reliable. This scalability is especially beneficial in modern applications
    where data can range from scarce to overwhelmingly abundant.'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: While numerous approaches exist for uncertainty quantification, conformal prediction
    emerges as a frontrunner due to its distribution-free nature, robust theoretical
    underpinnings, model independence, and scalability. For practitioners seeking
    a robust and reliable method to gauge the uncertainty of their machine learning
    models, conformal prediction presents a compelling choice.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
- en: Conformal prediction for computer vision
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this section, we will dive deeper into the diverse applications of conformal
    prediction in computer vision. With its broad range of problems, from image classification
    to object detection, computer vision presents challenges that require precise
    and reliable machine learning models. As we navigate these applications, we will
    demonstrate how conformal prediction is a robust tool to quantify the uncertainty
    associated with these models.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
- en: By exploring these practical examples, we aim to underscore the importance of
    understanding the model’s confidence in its predictions. Understanding is crucial,
    especially when decisions based on these predictions could have significant consequences.
    Conformal prediction, with its ability to provide a measure of uncertainty, can
    greatly aid researchers and practitioners in making informed decisions based on
    the outputs of their models. This improves the system’s reliability and paves
    the way for more transparent and trustworthy AI implementations in computer vision.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
- en: Uncertainty sets for image classifiers using conformal prediction
  id: totrans-89
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In 2020, researchers from the University of California, Berkeley, published
    a paper titled *Uncertainty sets for image classifiers using Conformal* *Prediction*
    ([https://arxiv.org/abs/2009.14193](https://arxiv.org/abs/2009.14193)).
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
- en: This was the first time that computer vision researchers applied conformal prediction
    to the computer vision problem. The paper described the first conformal prediction
    method explicitly developed for computer vision, RAPS, which is the current state
    of the art for image classification.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
- en: 'Here are the key points from the paper:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
- en: The paper proposes a new method called **regularized adaptive predictive sets**
    (**RAPS**) for generating stable prediction sets with neural network classifiers
    guaranteed to achieve a desired coverage level.
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: RAPS modifies an existing conformal prediction algorithm to produce smaller,
    more stable prediction sets by regularizing the influence of noisy probability
    estimates for unlikely classes.
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: RAPS is evaluated on ImageNet classification using ResNet and other CNN models.
    It achieves the desired coverage levels while producing prediction sets that are
    substantially smaller (5 to 10 times smaller) than a standalone Platt scaling
    baseline.
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The method satisfies theoretical guarantees on coverage and is proven to provide
    the best performance for selecting fixed-size sets.
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: RAPS provides a practical way to obtain prediction sets from any image classifier
    that can reliably quantify uncertainty and identify complex test examples. The
    authors suggest applications in areas such as medical imaging and active learning.
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Here is a summary of how the RAPS algorithm works:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
- en: It uses a pre-trained image classifier to compute class probability estimates
    for images in the calibration set and class probability estimates for a new test
    image.
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'For every image within the calibration set, RAPS calculates conformity scores,
    denoted as E j as follows: E j = ∑ i=1 k ′    ( ˆ π  (i)(x j) + λ1[i > k reg]).
    This is achieved by arranging the probability estimates in a descending sequence.
    The scores are then computed by accumulating these probability estimates, starting
    from the highest and continuing down to (and including) the probability estimate
    of the image’s actual class. The calculation is illustrated in the following *Figure
    9**.1*.'
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A high value of λ acts as a deterrent against creating sets that are larger
    than k reg.
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: As is standard in inductive conformal prediction, the model then computes the
    1-alpha quantile of the conformity scores computed on the calibration set.
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Outputs the k* highest-score classes where the conformity score E test for the
    test point is greater or equal the 1-alpha quantile.
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The following figure illustrates the RAPS method. The figure is from Anastasios
    N. Angelopoulos’ blog *Uncertainty Sets for Image Classifiers using Conformal*
    *Prediction*: ([https://people.eecs.berkeley.edu/~angelopoulos/blog/posts/conformal-classification/](https://people.eecs.berkeley.edu/~angelopoulos/blog/posts/conformal-classification/)).'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.1 – An illustration of the RAPS method (the red line is drawn to
    achieve exact coverage)](img/B19925_09_01.jpg)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
- en: Figure 9.1 – An illustration of the RAPS method (the red line is drawn to achieve
    exact coverage)
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
- en: The parameters λ and k reg are estimated by the RAPS model on the calibration
    set. The intuition behind parameters is that a high λ discourages sets larger
    than k reg.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
- en: By construction, this prediction set provably contains the true class with probability
    of at least 1-α, where α is the desired error level. The regularization penalty
    allows RAPS to produce smaller, more stable sets than previous methods such as
    Platt scaling or the unregularized adaptive method.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
- en: This approach allows researchers to use any underlying classifier and produce
    predictive sets that are assured to meet a designated error rate, such as 90%,
    all while maintaining a minimal average size. Its ease of deployment makes it
    a compelling, automated method to gauge the uncertainty of image classifiers,
    which is crucial in areas including medical diagnostics, autonomous vehicles,
    and screening hazardous online content.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
- en: In summary, RAPS leverages conformal prediction ideas to guarantee coverage,
    modifies the conformal score to enable smaller sets, and calibrates the procedure
    correctly using held-out data.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
- en: Building computer vision classifiers using conformal prediction
  id: totrans-111
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Let’s illustrate the application of conformal prediction to computer vision
    in practice. We will use a notebook from the book repository available at `https://github.com/PacktPublishing/Practical-Guide-to-Applied-Conformal-Prediction/blob/main/Chapter_09.ipynb`.
    This notebook extensively uses notebooks from Anastasios Angelopolous’ *Conformal
    Prediction* repo at [https://github.com/aangelopoulos/conformal-prediction](https://github.com/aangelopoulos/conformal-prediction).
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
- en: 'After loading the data, set up the problem and define the desired coverage
    and the number of points in the calibration set:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[PRE1]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The softmax scores were split into the calibration and test datasets, obtaining
    calibration and test labels:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[PRE3]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[PRE4]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '[PRE5]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '[PRE6]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The test dataset contains 49,000 points, and the calibration dataset contains
    1,000 points. Both datasets include images and human-readable labels from the
    ImageNet dataset.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
- en: Naïve Conformal prediction
  id: totrans-123
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'We''ll first look at a naïve way to produce prediction sets using conformal
    prediction:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
- en: Compute a non-conformity score for each calibration point
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Then, an empirical quantile of the calibration scores will be evaluated
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'This closely resembles what we observed with inductive conformal prediction
    in earlier chapters. We determine non-conformity scores through hinge loss, and
    then use the distribution of these scores to calculate the quantile based on the
    desired coverage. This process, including the final sample correction formula,
    parallels our approach for inductive conformal prediction:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '[PRE8]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '[PRE9]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'We can form the prediction sets for test set objects using the computed get
    adjusted quantile on nonconformity scores:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: The result is an array showcasing sets of predictions. This Boolean array signifies
    ImageNet classes according to the Boolean values it holds. The Boolean values
    indicate the classes chosen by the model, with `True` signifying a class is selected
    and `False` meaning the class is not included in the prediction set.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.2 – An illustration of the prediction sets for the test set](img/B19925_09_02.jpg)'
  id: totrans-134
  prefs: []
  type: TYPE_IMG
- en: Figure 9.2 – An illustration of the prediction sets for the test set
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
- en: 'We can calculate the empirical coverage, which comes very close to the specified
    confidence level of 90%:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '[PRE12]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: We can look at some of the objects and prediction sets.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.3 – An object from the test set, the prediction set produced by
    the naïve variant of conformal prediction was the label "palace"](img/B19925_09_03.jpg)'
  id: totrans-140
  prefs: []
  type: TYPE_IMG
- en: Figure 9.3 – An object from the test set, the prediction set produced by the
    naïve variant of conformal prediction was the label "palace"
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
- en: For objects with higher levels of uncertainty, prediction sets contain more
    than one element.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.4 – An object from the test set, the prediction set produced by
    the naïve variant of conformal prediction was [‘Crock Pot’, ‘digital clock’]](img/B19925_09_04.jpg)'
  id: totrans-143
  prefs: []
  type: TYPE_IMG
- en: Figure 9.4 – An object from the test set, the prediction set produced by the
    naïve variant of conformal prediction was [‘Crock Pot’, ‘digital clock’]
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
- en: 'The naïve method presents two significant issues:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
- en: Firstly, the probabilities produced by CNNs often need to be more accurate,
    resulting in sets that don’t achieve the intended coverage
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Secondly, for instances where the model lacks confidence, the naive method must
    include numerous classes to attain the desired confidence threshold, leading to
    an excessively large set
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Temperature scaling isn’t a remedy, as it only adjusts the score of the primary
    class, and calibrating the remaining scores is an overwhelming task. Interestingly,
    even with the perfect calibration of all scores, the naive approach would still
    fall short of achieving coverage.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
- en: Alternative ways of constructing prediction sets were developed to address these
    issues, namely **Adaptive Prediction Sets** (**APS**) and **Regularized** **Adaptive
    Prediction** **Sets** (**RAPS**).
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
- en: Adaptive Prediction Sets (APS)
  id: totrans-150
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Next, we'll look at APS, described in the NeurIPS spotlight paper, *Classification
    with Valid and Adaptive Coverage* (2000) (https://proceedings.neurips.cc/paper/2020/file/244edd7e85dc81602b7615cd705545f5-Paper.pdf).
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
- en: In essence, APS presents a simple approach. Instead of directly using the softmax
    scores, a new threshold is determined based on a calibration dataset. For example,
    if sets with a projected probability of 93% yield a 90% coverage on the calibration
    set, then a 93% threshold would be adopted. APS is a particular implementation
    of RAPS, and unlike the naïve approach, it aims to achieve precise coverage.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
- en: 'However, APS does face a practical hurdle: the average size of its sets is
    significantly large. Deep learning classifiers grapple with a permutation dilemma:
    their scores for less certain classes, such as those ranked from 10 to 1,000,
    don’t reflect accurate probability estimates. The arrangement of these classes
    is largely swayed by noise, prompting APS to opt for vast sets, especially for
    complex images.'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
- en: 'The code describing APS is as follows:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '[PRE14]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '[PRE15]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '[PRE16]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '[PRE17]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '[PRE18]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '[PRE19]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '[PRE20]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '[PRE21]'
  id: totrans-163
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '[PRE22]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '[PRE23]'
  id: totrans-165
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: '[PRE24]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: '[PRE25]'
  id: totrans-167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Let’s look at the code in more detail. It uses APS to generate prediction sets
    based on a specified quantile threshold:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
- en: '`cal_pi = cal_smx.argsort(1)[:, ::-1]`: This sorts the softmax scores ``cal_smx`
    for each instance score from `cal_smx` in descending order and returns the indices
    of the sorted values.'
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`cal_srt = np.take_along_axis(cal_smx, cal_pi, axis=1).cumsum(axis=1)`: For
    each row, it rearranges the scores based on the indices from `cal_pi`, then computes
    the cumulative sum along the columns.'
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`cal_scores = np.take_along_axis(cal_srt, cal_pi.argsort(axis=1), axis=1)[range(n_cal),
    cal_labels]`: This step retrieves the specific scores corresponding to the true
    labels `(cal_labels)`. It first reverts the sorted order of `cal_pi` to get the
    original ordering and then picks the scores associated with the true labels for
    each instance.'
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`qhat = np.quantile(cal_scores, np.ceil((n_cal + 1) * (1 - alpha)) / n_cal,
    method="higher")`: Calculates the quantile value based on the provided `alpha`.
    This value will serve as the threshold for the prediction phase.*   `test_pi =
    test_smx.argsort(1)[:, ::-1]`: Similarly, for the test set, it sorts the scores
    from `test_smx` in descending order and returns the indices of the sorted values.*   `test_srt=
    np.take_along_axis(test_smx, test_pi, axis=1).cumsum(axis=1)`: Rearranges the
    test set scores based on the `test_pi` sorted indices and computes the cumulative
    sum.*   `prediction_sets= np.take_along_axis(test_srt <= qhat, test_pi.argsort(axis=1),
    axis=1)`: For each instance in the test set, it determines which scores are below
    the quantile threshold `qhat`. This Boolean array (`test_srt <= qhat`) is then
    rearranged into its original order using `test_pi.argsort(axis=1)`, resulting
    in the final prediction sets where `True` entries indicate inclusion in the set.'
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In essence, this code is used to calibrate model scores to define a threshold
    and then uses this threshold to generate prediction sets for a new (test) dataset.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
- en: We can look at some objects and prediction sets generated by APS.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.5 – An object from the test set](img/B19925_09_05.jpg)'
  id: totrans-175
  prefs: []
  type: TYPE_IMG
- en: Figure 9.5 – An object from the test set
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
- en: 'Unfortunately, as already mentioned and demonstrated in this example, the prediction
    sets produced by APS can be vast. The preceding example produced a prediction
    set of:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
- en: '[''King Charles Spaniel'', ''Rhodesian Ridgeback'', ''Afghan Hound'', ''Basset
    Hound'', ''Bloodhound'', ''Redbone Coonhound'', ''Otterhound'', ''Weimaraner'',
    ''Irish Terrier'', ''Norfolk Terrier'', ''Norwich Terrier'', ''Australian Terrier'',
    ''Dandie Dinmont Terrier'', ''Tibetan Terrier'', ''Soft-coated Wheaten Terrier'',
    ''Flat-Coated Retriever'', ''Golden Retriever'', ''Labrador Retriever'', ''Vizsla'',
    ''English Setter'', ''Irish Setter'', ''Gordon Setter'', ''Clumber Spaniel'',
    ''English Springer Spaniel'', ''Welsh Springer Spaniel'', ''Cocker Spaniels'',
    ''Sussex Spaniel'', ''Irish Water Spaniel'', ''Briard'', ''Bullmastiff'', ''Leonberger'',
    ''Newfoundland'', ''Chow Chow'', ''Miniature Poodle'', ''Standard Poodle'', ''lion'',
    ''brown bear'', ''grasshopper'', ''leafhopper'', ''doormat'', ''handkerchief'',
    ''maze'', ''prayer rug'', ''tennis ball'', ''acorn''].'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
- en: Regularized Adaptive Prediction Sets (RAPS)
  id: totrans-179
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We now get hands-on with RAPS, which was briefly introduced in the *Uncertainty
    sets for image classifiers using conformal prediction* section earlier in this
    chapter.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
- en: 'We set the RAPS regularization parameters (a larger `lam_reg` value and smaller
    `k_reg` value leads to smaller sets) and regularization vector in the following
    code block:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  id: totrans-182
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '[PRE27]'
  id: totrans-183
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: '[PRE28]'
  id: totrans-184
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: '[PRE29]'
  id: totrans-185
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: '[PRE30]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'As previously, we compute non-conformity scores and obtain score quantiles:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE31]'
  id: totrans-188
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: '[PRE32]'
  id: totrans-189
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: '[PRE33]'
  id: totrans-190
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: '[PRE34]'
  id: totrans-191
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: '[PRE35]'
  id: totrans-192
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: '[PRE36]'
  id: totrans-193
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'We can deploy predictions on the test set using the following code:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE37]'
  id: totrans-195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: '[PRE38]'
  id: totrans-196
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: '[PRE39]'
  id: totrans-197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: '[PRE40]'
  id: totrans-198
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: '[PRE41]'
  id: totrans-199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: '[PRE42]'
  id: totrans-200
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: '[PRE43]'
  id: totrans-201
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: '[PRE44]'
  id: totrans-202
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: Let’s look at some objects and prediction sets generated by RAPS.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
- en: "![Figure 9.6 – An object from the test set\uFEFF; the prediction set produced\
    \ by RAPS was [‘electric ray’]](img/B19925_09_06.jpg)"
  id: totrans-204
  prefs: []
  type: TYPE_IMG
- en: Figure 9.6 – An object from the test set; the prediction set produced by RAPS
    was [‘electric ray’]
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
- en: We can see that for objects with little uncertainty, RAPS produces one-element
    prediction sets. Unlike APS, RAPS still produces rather parsimonious prediction
    sets for objects involving more uncertainty.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
- en: "![Figure 9\uFEFF.7 – An object from the test set\uFEFF; the prediction set\
    \ produced by RAPS was [‘red wolf’, ‘coyote’, ‘dhole’, ‘gray fox’]](img/B19925_09_07.jpg)"
  id: totrans-207
  prefs: []
  type: TYPE_IMG
- en: Figure 9.7 – An object from the test set; the prediction set produced by RAPS
    was [‘red wolf’, ‘coyote’, ‘dhole’, ‘gray fox’]
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
- en: Let’s summarize the chapter next.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  id: totrans-210
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In the rapidly evolving realm of technology, computer vision has transformed
    from mere image recognition into an integral component of countless real-world
    applications. As these applications span diverse fields such as autonomous vehicles
    and medical diagnostics, the pressure on computer vision models to deliver accurate
    and reliable predictions intensifies. With the growing sophistication of these
    models comes a dire need: quantifying prediction uncertainties.'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
- en: This is where conformal prediction shines. Unlike traditional models that typically
    output a singular prediction, conformal prediction offers a range of potential
    outcomes, each coupled with a confidence measure. This novel approach grants users
    a detailed perspective on model predictions, which is invaluable for applications
    where precision is paramount.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
- en: 'This chapter delved into the symbiotic relationship between conformal prediction
    and computer vision. We started by emphasizing the importance of uncertainty quantification
    in computer vision, citing its pivotal role in areas including autonomous transportation
    and medical imaging. Further, we shed light on a major area for improvement in
    contemporary deep learning models: their tendency to deliver miscalibrated predictions.'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
- en: By working through this chapter, you have acquired the expertise to craft cutting-edge
    computer vision classifiers infused with the capabilities of conformal prediction.
    Additionally, you got experience of the top-tier open source conformal prediction
    tools tailored for computer vision, ensuring you’re well equipped for future endeavors.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
- en: The key achievements in this chapter are to grasp the role of uncertainty quantification
    in computer vision, unravel the reasons behind deep learning’s miscalibrated predictions,
    explore diverse strategies to measure uncertainty in computer vision tasks, comprehend
    the fundamentals and applications of conformal prediction in computer vision,
    and attain mastery of constructing computer vision classifiers powered by conformal
    prediction.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will navigate the world of conformal prediction in NLP,
    understand its significance, and learn how to harness its power for more reliable
    and confident predictions.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
