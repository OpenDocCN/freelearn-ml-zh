["```py\nC9F00168, Kiruna Flip Cover, Accessories, Description of item, compatibility = lumia, hardware type = mobile\n```", "```py\n    00030000D16C4237, C9F00168, 2015/08/04 T 11:02:37, Purchase\n```", "```py\nhttps://<service_name>.azurewebsites.net/api/models\n```", "```py\nhttps://<service_name>.azurewebsites.net/api/models/<model_id>\n```", "```py\n    public class Product { \n        public string Id { get; set; } \n        public string Name { get; set; } \n        public string Category { get; set; }\n        public Product(string id, string name, string category) { \n            Id = id; \n            Name = name; \n            Category = category; \n        } \n    } \n```", "```py\n    public MainViewModel() \n    { \n        _webRequest = new WebRequest (\"https://<YOUR_WEB_SERVICE>.azurewebsites.net/api/models/\", \"API_KEY_HERE\"); \n        RecommendCommand = new DelegateCommand(RecommendBook, CanRecommendBook); \n\n        Initialize(); \n    } \n```", "```py\n    private async void Initialize() { \n        await GetModels(); \n        GetProducts(); \n    } \n```", "```py\n    private async Task GetModels() \n    { \n        List<RecommandationModel> models = await _webRequest.GetModels(HttpMethod.Get); \n```", "```py\n[\n   { \n      \"id\": \"string\",\n      \"description\": \"string\",\n      \"creationTime\": \"string\",\n      \"modelStatus\": \"string\"\n   }\n   {...}\n   {...}\n] \n```", "```py\n        foreach (RecommandationModel model in models) { \n            AvailableModels.Add(model); \n        }          \n        SelectedModel = AvailableModels.FirstOrDefault(); \n    } \n```", "```py\n    private void GetProducts() { \n        try { \n            var reader = new StreamReader (File.OpenRead(\"catalog.csv\")); \n\n            while(!reader.EndOfStream) { \n                string line = reader.ReadLine(); \n                var productInfo = line.Split(','); \n\n                AvailableProducts.Add(new Product(productInfo[0], productInfo[1], productInfo[2])); \n            } \n\n            SelectedProduct = AvailableProducts.FirstOrDefault(); \n        } \n        catch(Exception ex) { \n            Debug.WriteLine(ex.Message); \n        } \n    } \n```", "```py\n    private async void RecommendProduct(object obj) \n    {  \n        List<RecommendedItem> recommendations = await _webRequest.RecommendItem(HttpMethod.Get, $\"{SelectedModel.id}/recommend?item={SelectedProduct.Id}\"); \n```", "```py\n[\n   { \n      \"recommendedItemId\": \"string\",\n      \"score\": \"float\"\n   },\n   {...}\n   {...}\n] \n```", "```py\n        if(recommendations.Count == 0) { \n            Recommendations = \"No recommendations found\"; \n            return; \n        } \n         StringBuilder sb = new StringBuilder(); \n        sb.Append(\"Recommended items:\\n\\n\"); \n```", "```py\n        foreach(RecommendedItem recommendedItem in recommendations)  { \n            sb.AppendFormat(\"Score: {0}n\", recommendedItem.score); \n            sb.AppendFormat(\"Item ID: {0}\\n\", item.id); \n\n            sb.Append(\"n\"); \n        } \n        Recommendations = sb.ToString(); \n    } \n```", "```py\n    $\"{SelectedModel.id}/recommend/user?{queryString.ToString()}\" \n```"]