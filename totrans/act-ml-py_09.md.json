["```py\npip install clearml\npip install pymongo\n```", "```py\nimport os\nfrom clearml import Task, TaskTypes\nimport pymongo\nimport datetime\n```", "```py\nawscli==1.31.6\nultralytics==8.0.145\nlightly==1.4.23\ndocker==6.1.3\nencord==0.1.85\n```", "```py\nmodel_path_in_s3: 's3://my-models-library/my-best-object-detection-model.pt'\ninference_confidence_threshold: 0.3\nproportionSamples: 0.20  # 20% of the samples\nisSSLenabled: true\nmaxSSLepochs: 20\nimportant_classes: {\"person\": 0, \" sports ball\": 32}\nbalance: true\nbalance_strategy:{ 'person': 0.50, 'sports ball': 0.50}\nvideos_folder_in_s3: \"test\"\ns3_bucket_output: 'labeling-queue'\n```", "```py\ndef get_config_yaml(path_to_config_yaml=\"config.yaml\"):\n    # Open the YAML file\n    with open(path_to_config_yaml, \"r\") as file:\n        # Load the YAML content\n        config = yaml.safe_load(file)\n    file.close()\n    return config\n```", "```py\nconfig = get_config_yaml(path_to_config_yaml=\"config.yaml\")\nmodel_path_in_s3 = config[\"model_path_in_s3\"]\ninference_confidence_threshold = config[\"inference_confidence_threshold\"]\nproportionSamples = config[\"proportionSamples\"]\nisSSLenabled = config[\"isSSLenabled\"]\nif isSSLenabled:\n  maxSSLepochs = config['maxSSLepochs']\nimportant_classes = config[\"important_classes\"]\ns3_bucket_output = config[\"s3_bucket_output\"]\nbalance_strategy = config['balance_strategy']\nif balance_strategy:\n  balance = config['balance']\n```", "```py\nactive_learning_runs and initialize a task within it, labeled testing-AL, which corresponds to a specific run. Once implemented, this configuration enables the automatic tracking of the run, as illustrated in *Figure 6**.1*, under the console tab of the ClearML project configured via this code snippet:\n```", "```py\nTask.set_credentials(api_host='https://api.community.clear.ml',\n                    web_host='https://app.community.clear.ml',\n                    key='your_clearml_access_key',\n                    secret='your_clearml_secret_key')\ntask = Task.init(project_name='active_learning_runs',\n                task_name='testing-AL',\n                task_type=TaskTypes.inference)\n```", "```py\nmongodb:\n```", "```py\nusername = 'your_mongodb_username'\npassword = 'your_mongodb_pwd'\ncluster = 'your_mongodb_cluster'\nuri = 'mongodb+srv://' + username + ':' + password + '@' + cluster\nclient = pymongo.MongoClient(uri)\n```", "```py\ndb = client['ml_demo_project']\ncollection = db['ml_labeling_queue_demo']\n```", "```py\ndocument = {'Name dataset': 'demo',\n            'Labeler': 'TBD',\n            'Reviewer': 'TBD',\n            'Labeling status': 'In queue',\n            'Reviewing status': 'None',\n            'date': datetime.datetime.now()}\ncollection.insert_one(document)\n```"]