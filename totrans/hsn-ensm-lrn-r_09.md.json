["```py\n> housing_train <- read.csv(\"../Data/Housing/train.csv\",\n+                           row.names = 1,na.strings = \"NA\",\n+                           stringsAsFactors = TRUE)\n> housing_test <- read.csv(\"../Data/Housing/test.csv\",\n+                           row.names = 1,na.strings = \"NA\",\n+                           stringsAsFactors = TRUE)\n> dim(housing_train)\n[1] 1460   80\n> dim(housing_test)\n[1] 1459   79\n> names(housing_train)\n [1] \"MSSubClass\"    \"MSZoning\"      \"LotFrontage\"   \"LotArea\"      \n [5] \"Street\"        \"Alley\"         \"LotShape\"      \"LandContour\"  \n [9] \"Utilities\"     \"LotConfig\"     \"LandSlope\"     \"Neighborhood\" \n\n[69] \"X3SsnPorch\"    \"ScreenPorch\"   \"PoolArea\"      \"PoolQC\"       \n[73] \"Fence\"         \"MiscFeature\"   \"MiscVal\"       \"MoSold\"       \n[77] \"YrSold\"        \"SaleType\"      \"SaleCondition\" \"SalePrice\" \n> str(housing_train)\n'data.frame':\t1460 obs. of  80 variables:\n $ MSSubClass   : int  60 20 60 70 60 50 20 60 50 190 ...\n $ MSZoning     : Factor w/ 5 levels \"C (all)\",\"FV\",..: 4 4 4 4 4 4 4 4 5 4 ...\n $ LotFrontage  : int  65 80 68 60 84 85 75 NA 51 50 ...\n $ LotArea      : int  8450 9600 11250 9550 14260 14115 10084 10382 6120 7420 ...\n $ Street       : Factor w/ 2 levels \"Grvl\",\"Pave\": 2 2 2 2 2 2 2 2 2 2 ...\n $ Alley        : Factor w/ 2 levels \"Grvl\",\"Pave\": NA NA NA NA NA NA NA NA NA NA ...\n\n $ MiscFeature  : Factor w/ 4 levels \"Gar2\",\"Othr\",..: NA NA NA NA NA 3 NA 3 NA NA ...\n $ MiscVal      : int  0 0 0 0 0 700 0 350 0 0 ...\n $ MoSold       : int  2 5 9 2 12 10 8 11 4 1 ...\n $ YrSold       : int  2008 2007 2008 2006 2008 2009 2007 2009 2008 2008 ...\n $ SaleType     : Factor w/ 9 levels \"COD\",\"Con\",\"ConLD\",..: 9 9 9 9 9 9 9 9 9 9 ...\n $ SaleCondition: Factor w/ 6 levels \"Abnorml\",\"AdjLand\",..: 5 5 5 1 5 5 5 5 1 5 ...\n $ SalePrice    : int  208500 181500 223500 140000 250000 143000 307000 200000 129900 118000 ...\n```", "```py\nread.csv function enabled importing the data from the comma-separated values file. The size of the imported data frame is evaluated using the dim function, while names gives us the variable names as stored in the original file. The str function gives a quick preview of the variable types and also gives a few of the observations.\n```", "```py\n> housing <- rbind(housing_train[,1:79],housing_test)\n> dim(housing)\n[1] 2919   79\n> sort(sapply(housing,function(x) sum(is.na(x))),dec=TRUE)\n       PoolQC   MiscFeature         Alley         Fence   FireplaceQu \n         2909          2814          2721          2348          1420 \n  LotFrontage   GarageYrBlt  GarageFinish    GarageQual    GarageCond \n          486           159           159           159           159 \n   GarageType      BsmtCond  BsmtExposure      BsmtQual  BsmtFinType2 \n          157            82            82            81            80 \n BsmtFinType1    MasVnrType    MasVnrArea      MSZoning     Utilities \n           79            24            23             4             2 \n BsmtFullBath  BsmtHalfBath    Functional   Exterior1st   Exterior2nd \n            2             2             2             1             1 \n   BsmtFinSF1    BsmtFinSF2     BsmtUnfSF   TotalBsmtSF    Electrical \n            1             1             1             1             1 \n  KitchenQual    GarageCars    GarageArea      SaleType    MSSubClass \n            1             1             1             1             0 \n      LotArea        Street      LotShape   LandContour     LotConfig \n            0             0             0             0             0 \n\n  OpenPorchSF EnclosedPorch    X3SsnPorch   ScreenPorch      PoolArea \n            0             0             0             0             0 \n      MiscVal        MoSold        YrSold SaleCondition \n            0             0             0             0 \n```", "```py\n> miss_variables <- names(which(sapply(housing,\n+         function(x) sum(is.na(x)))>0.1*nrow(housing_train)))\n> miss_variables\n [1] \"LotFrontage\"  \"Alley\"        \"FireplaceQu\"  \"GarageType\"  \n [5] \"GarageYrBlt\"  \"GarageFinish\" \"GarageQual\"   \"GarageCond\"  \n [9] \"PoolQC\"       \"Fence\"        \"MiscFeature\" \n> length(miss_variables)\n[1] 11\n> housing[,miss_variables] <- NULL\n> dim(housing)\n[1] 2919   68\n```", "```py\n> find_df <- function(x){\n+   if(class(x)==\"numeric\") mdf <- 1\n+   if(class(x)==\"integer\") mdf <- 1\n+   if(class(x) ==\"factor\") mdf <- length(levels(x))\n+   if(class(x) ==\"character\") mdf <- length(unique(x))\n+   return(mdf)\n+ }\n> sapply(housing,find_df)\n   MSSubClass      MSZoning       LotArea        Street      LotShape \n            1             4             1             2             3 \n  LandContour     Utilities     LotConfig     LandSlope  Neighborhood \n            2             3             4             2            25 \n   Condition1    Condition2      BldgType    HouseStyle   OverallQual \n            3             2             3             4             1 \n\n   X3SsnPorch   ScreenPorch      PoolArea       MiscVal        MoSold \n            1             1             1             1             1 \n       YrSold      SaleType SaleCondition \n            1             4             4 \n> dim(housing)\n[1] 2919   68\n```", "```py\n> round(table(housing$Condition2)/nrow(housing),2)\nArtery  Feedr   Norm   PosA   PosN   RRAe   RRAn   RRNn \n  0.00   0.00   0.99   0.00   0.00   0.00   0.00   0.00 \n> round(table(housing$Exterior1st)/nrow(housing),2)\nAsbShng AsphShn BrkComm BrkFace  CBlock CemntBd HdBoard ImStucc MetalSd \n   0.02    0.00    0.00    0.03    0.00    0.04    0.15    0.00    0.15 \nPlywood   Stone  Stucco VinylSd Wd Sdng WdShing \n   0.08    0.00    0.01    0.35    0.14    0.02 \n```", "```py\n> Truncate_Factor <- function(x,alpha){\n+   xc <- as.character(x); n <- length(x)\n+   if(length(unique(x))<=20) {\n+     critical <- n*alpha\n\t+     xc[xc %in% names(which((prop.table(table(xc)))<alpha))] <- \"Others\"\n+   }\n+   xc <- as.factor(xc)\n+   return(xc)\n+ }\n> for(i in 1:ncol(housing)){\n+   if(any(class(housing[,i]) == c('character','factor'))) \n+     housing[,i] = Truncate_Factor(housing[,i],0.05)\n+ }\n> table(housing$Condition2)/nrow(housing)\n  Norm Others \n  0.99   0.01 \n> table(housing$Exterior1st)/nrow(housing)\nHdBoard MetalSd  Others Plywood VinylSd Wd Sdng \n  0.151   0.154   0.126   0.076   0.351   0.141 \n```", "```py\n> sum(is.na(housing))\n[1] 474\n> prod(dim(housing))\n[1] 198492\n```", "```py\n> housing_impute <- missForest(housing,maxiter = 10,ntree=500,mtry=20)\n  missForest iteration 1 in progress...done!\n  missForest iteration 2 in progress...done!\n  missForest iteration 3 in progress...done!\n  missForest iteration 4 in progress...done!\n  missForest iteration 5 in progress...done!\n  missForest iteration 6 in progress...done!\n  missForest iteration 7 in progress...done!\nThere were 14 warnings (use warnings() to see them)\n> save(housing_impute,file=\n+ '../Data/Housing/housing_covariates_impute.Rdata')\n> ht_imp <- cbind(housing_impute$ximp[1:nrow(housing_train),],\n+ housing_train$SalePrice)\n> save(ht_imp,file='../Data/Housing/ht_imp.Rdata')\n> htest_imp <- housing_impute$ximp[(nrow(housing_train)+1):nrow(\n+ housing),]\n> save(htest_imp,file='../Data/Housing/htest_imp.Rdata')\n```", "```py\n> load(\"../Data/Housing/ht_imp_author.Rdata\")\n> names(ht_imp)[69] <- \"SalePrice\"\n> SP <- ht_imp$SalePrice\n> pdf(\"../Output/Visualizing_Housing_Data.pdf\")\n> for(i in 1:68){\n+   if(class(ht_imp[,i])==\"numeric\") {\n+     plot(ht_imp[,i],SP,xlab=names(ht_imp)[i],ylab=\"Sales Price\")\n+     title(paste(\"Scatter plot of Sales Price against \", \n+ names(ht_imp)[i]))\n+   }\n+   if(class(ht_imp[,i])==\"factor\") {\n+     boxplot(SP~ht_imp[,i],xlab=names(ht_imp)[i],ylab=\n+ \"Sales Price\",notch=TRUE)\n+     title(paste(\"Boxplot of Salesprice by \",names(ht_imp)[i]))\n+   }\n+ }\n> dev.off()\nnull device \n          1 \n```", "```py\n> table(ht_imp$MSSubClass)\n20  30  40  45  50  60  70  75  80  85  90 120 160 180 190 \n536  69   4  12 144 299  60  16  58  20  52  87  63  10  30 \n```", "```py\n> cor(ht_imp[sapply(ht_imp,is.numeric)])[,1]\n   MSSubClass       LotArea   OverallQual   OverallCond     YearBuilt \n       1.0000       -0.1398        0.0326       -0.0593        0.0279 \n YearRemodAdd    MasVnrArea    BsmtFinSF1    BsmtFinSF2     BsmtUnfSF \n       0.0406        0.0206       -0.0698       -0.0656       -0.1408 \n  TotalBsmtSF     X1stFlrSF     X2ndFlrSF  LowQualFinSF     GrLivArea \n      -0.2385       -0.2518        0.3079        0.0465        0.0749 \n BsmtFullBath  BsmtHalfBath      FullBath      HalfBath  BedroomAbvGr \n       0.0035       -0.0023        0.1316        0.1774       -0.0234 \n KitchenAbvGr  TotRmsAbvGrd    Fireplaces    GarageCars    GarageArea \n       0.2817        0.0404       -0.0456       -0.0401       -0.0987 \n   WoodDeckSF   OpenPorchSF EnclosedPorch    X3SsnPorch   ScreenPorch \n      -0.0126       -0.0061       -0.0120       -0.0438       -0.0260 \n     PoolArea       MiscVal        MoSold        YrSold     SalePrice \n       0.0083       -0.0077       -0.0136       -0.0214       -0.0843\n```", "```py\n> load(\"../Data/Housing/housing_covariates_impute.Rdata\")\n> housing_covariates <- housing_impute$ximp\n> housing_cov_famd <- FAMD(housing_covariates,ncp=68,graph=FALSE)\n> colnames(housing_cov_famd$eig) <- c(\"Component\",\"Variance\",\n+    \"Cumulative\")\n> housing_cov_famd$eig\n            Component     Variance Cumulative\ncomp 1  12.2267562274 9.3334017003  9.33340170\ncomp 2   5.4502085801 4.1604645650 13.49386627\ncomp 3   4.5547218487 3.4768869074 16.97075317\ncomp 4   4.0710151565 3.1076451576 20.07839833\ncomp 5   3.1669428163 2.4175136002 22.49591193\ncomp 6   2.8331129142 2.1626816139 24.65859354\ncomp 7   2.6471571767 2.0207306692 26.67932421\ncomp 8   2.1871762983 1.6696002277 28.34892444\ncomp 9   2.1563067109 1.6460356572 29.99496010\ncomp 10  2.0083000432 1.5330534681 31.52801357\n\ncomp 66  0.7691341212 0.5871252834 80.58667899\ncomp 67  0.7648033308 0.5838193365 81.17049833\ncomp 68  0.7559712365 0.5770772798 81.74757561\n> windows(height=100,width=200)\n> pareto.chart(housing_cov_famd$eig[,2])\n```", "```py\n> save(housing_cov_famd,file='../Data/Housing/Housing_FAMD.Rdata')\n> Housing_FAMD_Data <- housing_cov_famd$ind$coord\n> save(Housing_FAMD_Data,file='../Data/Housing/\n+ Housing_FAMD_Data.Rdata')\n```", "```py\n> Housing_VarClust <- kmeansvar(\n+     X.quanti = housing_covariates[sapply(housing_covariates,\n+                     is.numeric)],\n+     X.quali = housing_covariates[sapply(housing_covariates,\n+                       is.factor)],init=4)\nError: Some categorical variables have same names of categories,\n             rename categories or use the option rename.level=TRUE to rename it automatically\n```", "```py\n> hc2 <- housing_covariates\n> for(i in 1:ncol(hc2)){\n+   if(class(hc2[,i])==\"factor\") {\n+     hc2[,i] <- mapvalues(hc2[,i],from=levels(hc2[,i]),\n+     to=paste0(names(hc2)[i],\"_\",levels(hc2[,i])))\n+   }\n+ }\n> Housing_VarClust <- kmeansvar(\n+         X.quanti = hc2[sapply(hc2,is.numeric)],\n+         X.quali = hc2[sapply(hc2,is.factor)], init=4)\n> Housing_VarClust$cluster\n   MSSubClass       LotArea   OverallQual   OverallCond     YearBuilt \n            2             1             1             4             4 \n YearRemodAdd    MasVnrArea    BsmtFinSF1    BsmtFinSF2     BsmtUnfSF \n            4             3             1             2             4 \n\n     BsmtCond  BsmtExposure  BsmtFinType1  BsmtFinType2       Heating \n            3             1             4             2             3 \n    HeatingQC    CentralAir    Electrical   KitchenQual    Functional \n            4             1             4             4             4 \n   PavedDrive      SaleType SaleCondition \n            1             4             4 \n> summary(Housing_VarClust)\n\nCall:\nkmeansvar(X.quanti = hc2[sapply(hc2, is.numeric)], X.quali = hc2[sapply(hc2,     is.factor)], init = 4)\n\nnumber of iterations:  2\n\nData: \n   number of observations:  2919\n   number of  variables:  68\n        number of numerical variables:  34\n        number of categorical variables:  34\n   number of clusters:  4\n\nCluster  1 : \n             squared loading correlation\nX1stFlrSF             0.6059       0.778\nTotalBsmtSF           0.5913       0.769\nOverallQual           0.5676       0.753\n\nPoolArea              0.0166       0.129\nMiscVal               0.0059       0.077\nMoSold                0.0024       0.049\n\nCluster  2 : \n             squared loading correlation\nX2ndFlrSF             0.8584      -0.927\nHouseStyle            0.7734          NA\nTotRmsAbvGrd          0.5185      -0.720\n\nBsmtFinType2          0.0490          NA\nBsmtFinSF2            0.0408       0.202\nX3SsnPorch            0.0039       0.063\n\nCluster  3 : \n           squared loading correlation\nMasVnrType         0.83189          NA\nMasVnrArea         0.82585      -0.909\nHeating            0.03532          NA\nBsmtCond           0.02681          NA\nUtilities          0.00763          NA\nYrSold             0.00084       0.029\n\nCluster  4 : \n              squared loading correlation\nNeighborhood           0.7955          NA\nYearBuilt              0.7314      -0.855\nBsmtQual               0.6792          NA\n\nBsmtHalfBath           0.0087       0.093\nStreet                 0.0041          NA\nCondition2             0.0015          NA\n\nGain in cohesion (in %):  11.56\n```", "```py\n> Housing_VarClust$coef\n$cluster1\n                       [,1]\nconst              -7.1e+00\nLotArea             2.1e-05\nOverallQual         2.2e-01\n\nCentralAir_N       -5.3e-01\nCentralAir_Y        3.8e-02\nPavedDrive_N       -5.2e-01\nPavedDrive_Others  -2.8e-01\nPavedDrive_Y        5.0e-02\n\n$cluster2\n                        [,1]\nconst                3.79789\nMSSubClass          -0.00472\nBsmtFinSF2           0.00066\n\nHouseStyle_1.5Fin   -0.11967\nHouseStyle_1Story    0.41892\nHouseStyle_2Story   -0.69610\nHouseStyle_Others    0.10816\nBsmtFinType2_Others  0.33286\nBsmtFinType2_Unf    -0.04491\n\n$cluster3\n                       [,1]\nconst              -33.1748\nMasVnrArea          -0.0039\nYrSold               0.0167\n\nBsmtCond_TA         -0.0365\nHeating_GasA        -0.0179\nHeating_Others       1.1425\n\n$cluster4\n                          [,1]\nconst                 45.30644\nOverallCond            0.09221\nYearBuilt             -0.01009\n\nSaleCondition_Normal   0.03647\nSaleCondition_Others   0.20598\nSaleCondition_Partial -0.58877\n```", "```py\n> data(galton)\n> cor(galton)\n       child parent\nchild   1.00   0.46\nparent  0.46   1.00\n> plot(galton)\n> head(galton)\n  child parent\n1    62     70\n2    62     68\n3    62     66\n4    62     64\n5    62     64\n6    62     68\n> cp_lm <- lm(child~parent,data=galton)\n> summary(cp_lm)\nCall:\nlm(formula = child ~ parent, data = galton)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-7.805 -1.366  0.049  1.634  5.926 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  23.9415     2.8109    8.52   <2e-16 ***\nparent        0.6463     0.0411   15.71   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 2.2 on 926 degrees of freedom\nMultiple R-squared:  0.21,\tAdjusted R-squared:  0.21 \nF-statistic:  247 on 1 and 926 DF,  p-value: <2e-16\n```", "```py\n> Mantel <- read.csv(\"../Data/Mantel.csv\")\n> Mantel\n   Y  X1   X2   X3\n1  5   1 1004  6.0\n2  6 200  806  7.3\n3  8 -50 1058 11.0\n4  9 909  100 13.0\n5 11 506  505 13.1\n> Mantel_lm <- lm(Y~.,data=Mantel)\n> summary(Mantel_lm)\n\nCall:\nlm(formula = Y ~ ., data = Mantel)\n\nResiduals:\n        1         2         3         4         5 \n-2.49e-13  2.92e-13  3.73e-14 -3.89e-14 -4.14e-14 \n\nCoefficients:\n             Estimate Std. Error   t value Pr(>|t|)    \n(Intercept) -1.00e+03   2.73e-10 -3.67e+12  1.7e-13 ***\nX1           1.00e+00   2.73e-13  3.67e+12  1.7e-13 ***\nX2           1.00e+00   2.73e-13  3.67e+12  1.7e-13 ***\nX3           1.33e-14   2.16e-13  6.00e-02     0.96    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 3.9e-13 on 1 degrees of freedom\nMultiple R-squared:     1,\tAdjusted R-squared:     1 \nF-statistic: 4.99e+25 on 3 and 1 DF,  p-value: 1.04e-13\n```", "```py\n> d2 <- cbind(galton,residuals(cp_lm))\n> names(d2)\n[1] \"child\"            \"parent\"           \"residuals(cp_lm)\"\n> names(d2) <- c(\"child\",\"parent\",\"frankenstein\")\n> cpf_lm <- lm(child~.,d2)\n> summary(cpf_lm)\nCall:\nlm(formula = child ~ ., data = d2)\nResiduals:\n      Min        1Q    Median        3Q       Max \n-2.60e-15 -7.40e-16 -3.00e-16  2.10e-16  1.02e-13 \nCoefficients:\n             Estimate Std. Error  t value Pr(>|t|)    \n(Intercept)  2.39e+01   5.74e-15 4.17e+15   <2e-16 ***\nparent       6.46e-01   8.40e-17 7.69e+15   <2e-16 ***\nfrankenstein 1.00e+00   6.71e-17 1.49e+16   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\nResidual standard error: 4.6e-15 on 925 degrees of freedom\nMultiple R-squared:     1,\tAdjusted R-squared:     1 \nF-statistic: 1.41e+32 on 2 and 925 DF,  p-value: <2e-16\nWarning message:\nIn summary.lm(cpf_lm) : essentially perfect fit: summary may be unreliable\n```", "```py\n> d2$frankenstein <- jitter(d2$frankenstein)\n> summary(lm(child~.,d2))\nCall:\nlm(formula = child ~ ., data = d2)\nResiduals:\n      Min        1Q    Median        3Q       Max \n-0.004072 -0.002052  0.000009  0.001962  0.004121 \nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  2.39e+01   2.92e-03    8210   <2e-16 ***\nparent       6.46e-01   4.27e-05   15143   <2e-16 ***\nfrankenstein 1.00e+00   3.41e-05   29331   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\nResidual standard error: 0.0023 on 925 degrees of freedom\nMultiple R-squared:     1,\tAdjusted R-squared:     1 \nF-statistic: 5.45e+08 on 2 and 925 DF,  p-value: <2e-16\n```", "```py\n> load(\"../Data/Housing/ht_imp_author.Rdata\")\n> load(\"../Data/Housing/htest_imp_author.Rdata\")\n> ls()\n[1] \"ht_imp\"    \"htest_imp\"\n> Y <- \"SalePrice\"\n> X <- names(ht_imp)[-69]\n> set.seed(12345)\n> BV <- sample(c(\"Build\",\"Validate\"),nrow(ht_imp),replace = TRUE,\n+              prob=c(0.7,0.3))\n> HT_Build <- ht_imp[BV==\"Build\",]\n> HT_Validate <- ht_imp[BV==\"Validate\",]\n> HT_Formula <- as.formula(\"SalePrice~.\")\n> HT_LM_01 <- lm(HT_Formula,data=HT_Build)\n> summary(HT_LM_01)\n\nCall:\nlm(formula = HT_Formula, data = HT_Build)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-268498  -12222    -409   11351  240990 \n\nCoefficients: (2 not defined because of singularities)\n                      Estimate Std. Error t value Pr(>|t|)    \n(Intercept)          -2.87e+03   1.53e+06    0.00  0.99850    \nMSSubClass           -1.52e+02   7.95e+01   -1.91  0.05583 .  \nMSZoningRL            8.55e+03   6.27e+03    1.36  0.17317    \nMSZoningRM            1.20e+04   7.50e+03    1.60  0.11011    \nLotArea               4.90e-01   1.21e-01    4.04  5.8e-05 ***\nStreetPave            2.81e+04   1.70e+04    1.65  0.09979 .  \nLotShapeOthers       -3.59e+03   6.12e+03   -0.59  0.55733    \nLotShapeReg           1.25e+03   2.40e+03    0.52  0.60111    \nLandContourOthers    -1.22e+04   3.99e+03   -3.05  0.00236 ** \nUtilitiesOthers      -5.76e+04   3.25e+04   -1.77  0.07637 .  \nLotConfigCulDSac      1.21e+04   4.96e+03    2.44  0.01477 *  \nLotConfigInside      -1.62e+03   2.58e+03   -0.63  0.52972    \nLotConfigOthers      -1.28e+04   5.57e+03   -2.30  0.02144 *  \n\nEnclosedPorch         6.95e+00   1.91e+01    0.36  0.71628    \nX3SsnPorch            3.81e+01   3.87e+01    0.98  0.32497    \nScreenPorch           3.78e+01   2.01e+01    1.88  0.05988 .  \nPoolArea              5.13e+01   2.60e+01    1.98  0.04842 *  \nMiscVal               5.13e-02   6.57e+00    0.01  0.99377    \nMoSold               -4.38e+02   3.67e+02   -1.19  0.23313    \nYrSold               -1.01e+02   7.53e+02   -0.13  0.89376    \nSaleTypeOthers       -4.88e+04   2.19e+04   -2.23  0.02598 *  \nSaleTypeWD           -5.10e+04   2.20e+04   -2.32  0.02061 *  \nSaleConditionNormal   1.93e+03   4.31e+03    0.45  0.65421    \nSaleConditionOthers   1.87e+03   7.42e+03    0.25  0.80168    \nSaleConditionPartial -3.21e+04   2.21e+04   -1.45  0.14641    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 28400 on 861 degrees of freedom\nMultiple R-squared:  0.884,\tAdjusted R-squared:  0.867 \nF-statistic: 51.1 on 129 and 861 DF,  p-value: <2e-16\n```", "```py\n## Start:  AIC=20446.87\n## SalePrice ~ MSSubClass + MSZoning + LotArea + Street + LotShape + \n##     LandContour + Utilities + LotConfig + LandSlope + Neighborhood + \n##     Condition1 + Condition2 + BldgType + HouseStyle + OverallQual + \n##     OverallCond + YearBuilt + YearRemodAdd + RoofStyle + RoofMatl + \n##     Exterior1st + Exterior2nd + MasVnrType + MasVnrArea + ExterQual + \n##     ExterCond + Foundation + BsmtQual + BsmtCond + BsmtExposure + \n##     BsmtFinType1 + BsmtFinSF1 + BsmtFinType2 + BsmtFinSF2 + BsmtUnfSF + \n##     TotalBsmtSF + Heating + HeatingQC + CentralAir + Electrical + \n##     X1stFlrSF + X2ndFlrSF + LowQualFinSF + GrLivArea + BsmtFullBath + \n##     BsmtHalfBath + FullBath + HalfBath + BedroomAbvGr + KitchenAbvGr + \n##     KitchenQual + TotRmsAbvGrd + Functional + Fireplaces + GarageCars + \n##     GarageArea + PavedDrive + WoodDeckSF + OpenPorchSF + EnclosedPorch + \n##     X3SsnPorch + ScreenPorch + PoolArea + MiscVal + MoSold + \n##     YrSold + SaleType + SaleCondition\n## \n## \n## Step:  AIC=20446.87\n## SalePrice ~ MSSubClass + MSZoning + LotArea + Street + LotShape + \n##     LandContour + Utilities + LotConfig + LandSlope + Neighborhood + \n##     Condition1 + Condition2 + BldgType + HouseStyle + OverallQual + \n##     OverallCond + YearBuilt + YearRemodAdd + RoofStyle + RoofMatl + \n##     Exterior1st + Exterior2nd + MasVnrType + MasVnrArea + ExterQual + \n##     ExterCond + Foundation + BsmtQual + BsmtCond + BsmtExposure + \n##     BsmtFinType1 + BsmtFinSF1 + BsmtFinType2 + BsmtFinSF2 + BsmtUnfSF + \n##     TotalBsmtSF + Heating + HeatingQC + CentralAir + Electrical + \n##     X1stFlrSF + X2ndFlrSF + LowQualFinSF + BsmtFullBath + BsmtHalfBath + \n##     FullBath + HalfBath + BedroomAbvGr + KitchenAbvGr + KitchenQual + \n##     TotRmsAbvGrd + Functional + Fireplaces + GarageCars + GarageArea + \n##     PavedDrive + WoodDeckSF + OpenPorchSF + EnclosedPorch + X3SsnPorch + \n##     ScreenPorch + PoolArea + MiscVal + MoSold + YrSold + SaleType + \n##     SaleCondition\n## \n## \n## Step:  AIC=20446.87\n## SalePrice ~ MSSubClass + MSZoning + LotArea + Street + LotShape + \n##     LandContour + Utilities + LotConfig + LandSlope + Neighborhood + \n##     Condition1 + Condition2 + BldgType + HouseStyle + OverallQual + \n##     OverallCond + YearBuilt + YearRemodAdd + RoofStyle + RoofMatl + \n##     Exterior1st + Exterior2nd + MasVnrType + MasVnrArea + ExterQual + \n##     ExterCond + Foundation + BsmtQual + BsmtCond + BsmtExposure + \n##     BsmtFinType1 + BsmtFinSF1 + BsmtFinType2 + BsmtFinSF2 + BsmtUnfSF + \n##     Heating + HeatingQC + CentralAir + Electrical + X1stFlrSF + \n##     X2ndFlrSF + LowQualFinSF + BsmtFullBath + BsmtHalfBath + \n##     FullBath + HalfBath + BedroomAbvGr + KitchenAbvGr + KitchenQual + \n##     TotRmsAbvGrd + Functional + Fireplaces + GarageCars + GarageArea + \n##     PavedDrive + WoodDeckSF + OpenPorchSF + EnclosedPorch + X3SsnPorch + \n##     ScreenPorch + PoolArea + MiscVal + MoSold + YrSold + SaleType + \n##     SaleCondition\n## \n##                 Df  Sum of Sq        RSS   AIC\n## - Exterior2nd    5 2.6926e+09 6.9890e+11 20441\n## - HeatingQC      3 8.4960e+08 6.9706e+11 20442\n## - MasVnrType     3 9.3578e+08 6.9714e+11 20442\n## - OverallQual    1 3.2987e+10 7.2919e+11 20491\n## - X2ndFlrSF      1 3.9790e+10 7.3600e+11 20500\n## - Neighborhood  24 1.6770e+11 8.6391e+11 20613\n## \n## Step:  AIC=20440.69\n## SalePrice ~ MSSubClass + MSZoning + LotArea + Street + LotShape + \n##     LandContour + Utilities + LotConfig + LandSlope + Neighborhood + \n##     Condition1 + Condition2 + BldgType + HouseStyle + OverallQual + \n##     OverallCond + YearBuilt + YearRemodAdd + RoofStyle + RoofMatl + \n##     Exterior1st + MasVnrType + MasVnrArea + ExterQual + ExterCond + \n##     Foundation + BsmtQual + BsmtCond + BsmtExposure + BsmtFinType1 + \n##     BsmtFinSF1 + BsmtFinType2 + BsmtFinSF2 + BsmtUnfSF + Heating + \n##     HeatingQC + CentralAir + Electrical + X1stFlrSF + X2ndFlrSF + \n##     LowQualFinSF + BsmtFullBath + BsmtHalfBath + FullBath + HalfBath + \n##     BedroomAbvGr + KitchenAbvGr + KitchenQual + TotRmsAbvGrd + \n##     Functional + Fireplaces + GarageCars + GarageArea + PavedDrive + \n##     WoodDeckSF + OpenPorchSF + EnclosedPorch + X3SsnPorch + ScreenPorch + \n##     PoolArea + MiscVal + MoSold + YrSold + SaleType + SaleCondition\n\n## Step:  AIC=20386.81\n## SalePrice ~ MSSubClass + LotArea + Street + LandContour + Utilities + \n##     LotConfig + LandSlope + Neighborhood + Condition1 + Condition2 + \n##     BldgType + HouseStyle + OverallQual + OverallCond + YearBuilt + \n##     RoofStyle + RoofMatl + Exterior1st + BsmtQual + BsmtCond + \n##     BsmtExposure + BsmtFinType1 + BsmtFinSF1 + BsmtFinType2 + \n##     X1stFlrSF + X2ndFlrSF + LowQualFinSF + BsmtFullBath + FullBath + \n##     HalfBath + KitchenAbvGr + KitchenQual + TotRmsAbvGrd + Functional + \n##     Fireplaces + GarageCars + WoodDeckSF + ScreenPorch + PoolArea + \n##     MoSold + SaleType\n## \n##                Df  Sum of Sq        RSS   AIC\n## <none>                       7.1467e+11 20387\n## - KitchenAbvGr  1 1.4477e+09 7.1612e+11 20387\n## - MoSold        1 1.6301e+09 7.1630e+11 20387\n## - BldgType      2 3.1228e+09 7.1779e+11 20387\n## - Utilities     1 1.7130e+09 7.1639e+11 20387\n## - BsmtCond      1 1.7554e+09 7.1643e+11 20387\n## - BsmtFinType2  1 1.8708e+09 7.1654e+11 20387\n## - YearBuilt     1 2.0543e+09 7.1673e+11 20388\n## - Street        1 2.1163e+09 7.1679e+11 20388\n## - LowQualFinSF  1 2.1785e+09 7.1685e+11 20388\n## - ScreenPorch   1 2.2387e+09 7.1691e+11 20388\n## - MSSubClass    1 2.2823e+09 7.1695e+11 20388\n## - LandSlope     1 2.5566e+09 7.1723e+11 20388\n## - PoolArea      1 2.6036e+09 7.1728e+11 20388\n## - Exterior1st   5 9.1221e+09 7.2379e+11 20389\n## - Functional    1 3.4117e+09 7.1808e+11 20390\n## - Condition1    2 4.9604e+09 7.1963e+11 20390\n## - BsmtFinSF1    1 3.9442e+09 7.1862e+11 20390\n## - Condition2    1 4.0659e+09 7.1874e+11 20390\n## - RoofStyle     2 6.1817e+09 7.2085e+11 20391\n## - HalfBath      1 5.3010e+09 7.1997e+11 20392\n## - FullBath      1 5.4987e+09 7.2017e+11 20392\n## - Fireplaces    1 6.0438e+09 7.2072e+11 20393\n## - TotRmsAbvGrd  1 7.0166e+09 7.2169e+11 20395\n## - LandContour   1 7.7036e+09 7.2238e+11 20395\n## - WoodDeckSF    1 8.8947e+09 7.2357e+11 20397\n## - LotConfig     3 1.2015e+10 7.2669e+11 20397\n## - RoofMatl      1 9.0967e+09 7.2377e+11 20397\n## - BsmtFullBath  1 9.4178e+09 7.2409e+11 20398\n## - HouseStyle    3 1.2940e+10 7.2761e+11 20399\n## - BsmtFinType1  5 1.7704e+10 7.3238e+11 20401\n## - SaleType      2 1.5305e+10 7.2998e+11 20404\n## - LotArea       1 1.4293e+10 7.2897e+11 20404\n## - OverallCond   1 1.8131e+10 7.3280e+11 20410\n## - BsmtQual      3 2.3916e+10 7.3859e+11 20413\n## - X1stFlrSF     1 2.1106e+10 7.3578e+11 20414\n## - BsmtExposure  3 2.8182e+10 7.4285e+11 20419\n## - GarageCars    1 2.6886e+10 7.4156e+11 20421\n## - KitchenQual   3 3.1267e+10 7.4594e+11 20423\n## - OverallQual   1 3.7361e+10 7.5203e+11 20435\n## - X2ndFlrSF     1 4.3546e+10 7.5822e+11 20443\n## - Neighborhood 24 1.8921e+11 9.0389e+11 20572\n```", "```py\n> summary(HT_LM_Final)\n\nCall:\nlm(formula = SalePrice ~ MSSubClass + LotArea + Street + LandContour + \n    Utilities + LotConfig + LandSlope + Neighborhood + Condition1 + \n    Condition2 + BldgType + HouseStyle + OverallQual + OverallCond + \n    YearBuilt + RoofStyle + RoofMatl + Exterior1st + BsmtQual + \n    BsmtCond + BsmtExposure + BsmtFinType1 + BsmtFinSF1 + BsmtFinType2 + \n    X1stFlrSF + X2ndFlrSF + LowQualFinSF + BsmtFullBath + FullBath + \n    HalfBath + KitchenAbvGr + KitchenQual + TotRmsAbvGrd + Functional + \n    Fireplaces + GarageCars + WoodDeckSF + ScreenPorch + PoolArea + \n    MoSold + SaleType, data = HT_Build)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-272899  -11717     -42   11228  235349 \n\nCoefficients:\n                     Estimate Std. Error t value Pr(>|t|)    \n(Intercept)         -2.64e+05   1.78e+05   -1.48  0.13894    \nMSSubClass          -1.27e+02   7.46e+01   -1.70  0.08965 .  \nLotArea              4.75e-01   1.12e-01    4.25  2.3e-05 ***\n\nMoSold              -4.99e+02   3.48e+02   -1.44  0.15136    \nSaleTypeOthers      -1.69e+04   5.85e+03   -2.89  0.00396 ** \nSaleTypeWD          -1.76e+04   4.00e+03   -4.40  1.2e-05 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 28100 on 904 degrees of freedom\nMultiple R-squared:  0.881,\tAdjusted R-squared:  0.87 \nF-statistic: 78.1 on 86 and 904 DF,  p-value: <2e-16\n```", "```py\n> HT_NN <- nnet(HT_Formula,data=HT_Build,linout=TRUE,maxit=100,size=5)\n# weights:  666\ninitial  value 38535430702344.617187 \nfinal  value 5951814083616.587891 \nconverged\n> summary(HT_NN)\na 131-5-1 network with 666 weights\noptions were - linear output units \n   b->h1   i1->h1   i2->h1   i3->h1   i4->h1   i5->h1   i6->h1   i7->h1 \n-1.0e-02  6.5e-01 -8.0e-02  4.6e-01  5.0e-02 -4.0e-02  3.9e-01  1.3e-01 \n  i8->h1   i9->h1  i10->h1  i11->h1  i12->h1  i13->h1  i14->h1  i15->h1 \n 2.1e-01  4.6e-01  1.9e-01  5.2e-01 -6.6e-01  3.2e-01 -3.0e-02  2.2e-01 \n i16->h1  i17->h1  i18->h1  i19->h1  i20->h1  i21->h1  i22->h1  i23->h1 \n-2.5e-01 -1.2e-01  3.3e-01 -2.8e-01 -4.6e-01 -3.8e-01 -4.1e-01 -3.2e-01 \n\n-4.0e-01 -2.9e-01 -5.1e-01 -2.6e-01  2.5e-01 -6.0e-01  1.0e-02  1.5e-01 \ni120->h5 i121->h5 i122->h5 i123->h5 i124->h5 i125->h5 i126->h5 i127->h5 \n 3.7e-01 -2.0e-01  2.0e-01  1.0e-02 -3.3e-01 -2.4e-01 -1.9e-01  7.0e-01 \ni128->h5 i129->h5 i130->h5 i131->h5 \n-1.3e-01 -3.4e-01 -6.9e-01 -6.6e-01 \n    b->o    h1->o    h2->o    h3->o    h4->o    h5->o \n 6.3e+04  6.3e+04  6.3e+04 -9.1e+04  4.7e-01 -8.4e+03 \n```", "```py\n> pdf(\"../Output/Housing_NN.pdf\",height = 25, width=60)\n> plotnet(HT_NN) # very chaotic network\n> dev.off()\nRStudioGD \n        2\n```", "```py\n> HT_rtree <- rpart(HT_Formula,data=HT_Build)\n> windows(height=100,width=100)\n> plot(HT_rtree,uniform = TRUE); text(HT_rtree)\n> HT_rtree$variable.importance\n OverallQual Neighborhood    YearBuilt    ExterQual  KitchenQual \n     3.2e+12      2.0e+12      1.7e+12      1.7e+12      1.4e+12 \n  Foundation   GarageCars    GrLivArea   GarageArea    X1stFlrSF \n     1.3e+12      8.0e+11      6.9e+11      6.1e+11      3.8e+11 \n   X2ndFlrSF  TotalBsmtSF TotRmsAbvGrd     BsmtQual   MasVnrArea \n     3.8e+11      3.2e+11      2.7e+11      2.7e+11      1.8e+11 \n    FullBath     HalfBath   HouseStyle   BsmtFinSF1 YearRemodAdd \n     1.7e+11      1.3e+11      1.2e+11      1.1e+11      5.3e+10 \n    MSZoning BsmtFinType1 BedroomAbvGr  Exterior1st BsmtFullBath \n     4.6e+10      4.4e+10      4.0e+10      2.4e+10      1.1e+10 \n     LotArea \n     5.7e+09 \n```", "```py\n> barplot(HT_rtree$variable.importance,las=2,yaxt=\"n\")\n```", "```py\n> HT_LM_01_val_hat <- predict(HT_LM_01,newdata = HT_Validate[,-69])\nWarning message:\nIn predict.lm(HT_LM_01, newdata = HT_Validate[, -69]) :\n  prediction from a rank-deficient fit may be misleading\n> mean(abs(HT_LM_01_val_hat - HT_Validate$SalePrice)/HT_Validate$SalePrice)\n[1] 0.11\n> HT_LM_Final_val_hat <- predict(HT_LM_Final,newdata = HT_Validate[,-69])\n> mean(abs(HT_LM_Final_val_hat - HT_Validate$SalePrice)/HT_Validate$SalePrice)\n[1] 0.11\n> HT_NN_val_hat <- predict(HT_NN,newdata = HT_Validate[,-69])\n> mean(abs(HT_NN_val_hat - HT_Validate$SalePrice)/HT_Validate$SalePrice)\n[1] 0.37\n> HT_rtree_val_hat <- predict(HT_rtree,newdata = HT_Validate[,-69])\n> mean(abs(HT_rtree_val_hat - HT_Validate$SalePrice)/HT_Validate$SalePrice)\n[1] 0.17\n```", "```py\n> windows(height = 100,width = 100)\n> plot(HT_Validate$SalePrice,HT_LM_01_val_hat,col=\"blue\",\n+      xlab=\"Sales Price\",ylab=\"Predicted Value\")\n> points(HT_Validate$SalePrice,HT_LM_Final_val_hat,col=\"green\")\n> points(HT_Validate$SalePrice,HT_NN_val_hat,col=\"red\")\n> points(HT_Validate$SalePrice,HT_rtree_val_hat,col=\"yellow\")\n> legend(x=6e+05,y=4e+05,lty=3,\n+        legend=c(\"Linear\",\"Best Linear\",\"Neural Network\",\"Regression Tree\"),\n+        col=c(\"blue\",\"green\",\"red\",\"yellow\"))\n```", "```py\n> housing_bagging <- bagging(formula = HT_Formula,data=ht_imp,nbagg=500,\n+                            coob=TRUE,keepX=TRUE)\n> housing_bagging$err\n[1] 35820\n```", "```py\n> pdf(\"../Output/Housing_Bagging.pdf\")\n> for(i in 1:500){\n+   temp <- housing_bagging$mtrees[[i]]\n+   plot(temp$btree)\n+   text(temp$btree,use.n=TRUE)\n+ }\n> dev.off()\nRStudioGD \n        2 \n```", "```py\n> VI <- data.frame(matrix(0,nrow=500,ncol=ncol(ht_imp)-1))\n> vnames <- names(ht_imp)[-69]\n> names(VI) <- vnames\n> for(i in 1:500){\n+   VI[i,] <- as.numeric(housing_bagging$mtrees[[i]]$btree$variable.importance[vnames])\n+ }\n> Bagging_VI <- colMeans(VI,na.rm = TRUE)\n> Bagging_VI <- sort(Bagging_VI,dec=TRUE)\n> barplot(Bagging_VI,las=2,yaxt=\"n\")\n> title(\"Variable Importance of Bagging\")\n```", "```py\n> HT_bagging_val_hat <- predict(housing_bagging,newdata = HT_Validate[,-69])\n> mean(abs(HT_bagging_val_hat - HT_Validate$SalePrice)/HT_Validate$SalePrice)\n[1] 0.13\n```", "```py\n> housing_RF <- randomForest(formula=HT_Formula,data=ht_imp,ntree=500,\n+                            replace=TRUE,importance=TRUE)\n> pdf(\"../Output/Housing_RF.pdf\",height=100,width=500)\nError in pdf(\"../Output/Housing_RF.pdf\", height = 100, width = 500) : \n  cannot open file '../Output/Housing_RF.pdf'\n> plot_RF(housing_RF)\n[1] 1\n[1] 2\n[1] 3\n\n[1] 498\n[1] 499\n[1] 500\n> dev.off()\nnull device \n          1 \n> windows(height=100,width=200)\n> varImpPlot(housing_RF2)\n```", "```py\n> HT_RF_val_hat <- predict(housing_RF,newdata = HT_Validate[,-69])\n> mean(abs(HT_RF_val_hat - HT_Validate$SalePrice)/HT_Validate$SalePrice)\n[1] 0.038\n```", "```py\n> housing_gbm <- gbm(formula=HT_Formula,data=HT_Build,distribution = \"gaussian\",\n+                    n.trees=1e3,shrinkage = 0.05,keep.data=TRUE,\n+                    interaction.depth=1,\n+                    cv.folds=3,n.cores = 1)\n> summary(housing_gbm)\n                        var     rel.inf\nOverallQual     OverallQual 29.22608012\nGrLivArea         GrLivArea 18.85043432\nNeighborhood   Neighborhood 13.79949556\n\nPoolArea           PoolArea  0.00000000\nMiscVal             MiscVal  0.00000000\nYrSold               YrSold  0.00000000\n```", "```py\n> windows(height=100,width=200)\n> par(mfrow=c(1,2))\n> gbm.perf(housing_gbm,method=\"OOB\",plot.it=TRUE,\n+                              oobag.curve = TRUE,overlay=TRUE)\n[1] 135\n```", "```py\n> HT_gbm_val_hat <- predict(housing_gbm,newdata = HT_Validate[,-69])\nUsing 475 trees...\n> mean(abs(HT_gbm_val_hat - HT_Validate$SalePrice)/HT_Validate$SalePrice)\n[1] 0.11\n```", "```py\n> control <- trainControl(method=\"repeatedcv\", number=10, repeats=3, \n+                         savePredictions=TRUE, classProbs=TRUE)\n> algorithmList <- c('lm', 'rpart')\n> set.seed(12345)\n> Emodels <- caretList(HT_Formula, data=HT_Build, trControl=control, \n+                      methodList=algorithmList,\n+                      tuneList=list(\n+                        nnet=caretModelSpec(method='nnet', trace=FALSE,\n+                                            linout=TRUE)\n+                        \n+                      )\n+                      )\nThere were 37 warnings (use warnings() to see them)\n```", "```py\n> Enresults <- resamples(Emodels)\n> summary(Enresults)\n\nCall:\nsummary.resamples(object = Enresults)\n\nModels: nnet, lm, rpart \nNumber of resamples: 30 \n\nMAE \n       Min. 1st Qu. Median  Mean 3rd Qu.  Max. NA's\nnnet  30462   43466  47098 47879   53335 58286    0\nlm    16153   18878  20348 20138   21337 23865    0\nrpart 30369   33946  35688 35921   37354 42437    0\n\nRMSE \n       Min. 1st Qu. Median  Mean 3rd Qu.  Max. NA's\nnnet  42598   66632  70197 69272   73089 85971    0\nlm    22508   26137  29192 34347   39803 66875    0\nrpart 38721   46508  50528 50980   55705 65337    0\n\nRsquared \n        Min. 1st Qu. Median Mean 3rd Qu. Max. NA's\nnnet  0.0064    0.16   0.32 0.31    0.44 0.74    4\nlm    0.4628    0.77   0.85 0.81    0.88 0.92    0\nrpart 0.4805    0.55   0.57 0.58    0.61 0.69    0\n\n> dotplot(Enresults)\n```", "```py\n> modelCor(Enresults)\n        nnet    lm rpart\nnnet   1.000 0.033 -0.44\nlm     0.033 1.000  0.29\nrpart -0.441 0.288  1.00\n```", "```py\n> HT_Validate_Predictions <- rowMeans(predict(Emodels,newdata = HT_Validate))\nWarning message:\nIn predict.lm(modelFit, newdata) :\n  prediction from a rank-deficient fit may be misleading\n> mean(abs(HT_Validate_Predictions - HT_Validate$SalePrice)/HT_Validate$SalePrice)\n[1] 0.16\n```"]