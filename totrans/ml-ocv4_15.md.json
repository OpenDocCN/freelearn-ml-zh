["```py\ncv::dnn::setPreferableBackend(DNN_BACKEND_INFERENCE_ENGINE); // C++\nsetPreferableBackend(cv2.dnn.DNN_BACKEND_INFERENCE_ENGINE) # Python\n```", "```py\nnet = cv2.dnn.readNetFromCaffe(prototxt,model)\nnet.setPreferableBackend(cv2.dnn.DNN_BACKEND_INFERENCE_ENGINE)\n```", "```py\nNet net = readNetFromCaffe(prototxt, model);\nnet.setPreferableBackend(DNN_BACKEND_INFERENCE_ENGINE);\n```", "```py\n./demo_squeezenet_download_convert_run.sh\n```", "```py\n./demo_security_barrier_camera.sh\n```", "```py\nimport numpy as np\nimport cv2\n```", "```py\nimage = cv2.imread(\"animal-barbaric-brown-1319515.jpg\")\nlabels_file = \"synset_words.txt\"\nprototxt = \"deploy.prototxt\"\ncaffemodel = \"bvlc_reference_caffenet.caffemodel\"\n\n```", "```py\nrows = open(labels_file).read().strip().split(\"\\n\")\nclasses = [r[r.find(\" \") + 1:].split(\",\")[0] for r in rows]\n```", "```py\nnet = cv2.dnn.readNetFromCaffe(prototxt,caffemodel)\nnet.setPreferableBackend(cv2.dnn.DNN_BACKEND_INFERENCE_ENGINE)\nnet.setPreferableTarget(cv2.dnn.DNN_TARGET_CPU)\n```", "```py\nblob = cv2.dnn.blobFromImage(image,1,(224,224),(104,117,123))\n```", "```py\nnet.setInput(blob)\npredictions = net.forward()\n```", "```py\nindices = np.argsort(predictions[0])[::-1][:5]\n```", "```py\nfor index in indices:\n print(\"label: {}, prob.: {:.5}\".format(classes[index], predictions[0][index]))\n```", "```py\nlabel: cheetah, prob.: 0.98357\nlabel: leopard, prob.: 0.016108\nlabel: snow leopard, prob.: 7.2455e-05\nlabel: jaguar, prob.: 4.5286e-05\nlabel: prairie chicken, prob.: 3.8205e-05\n```", "```py\nnet.setPreferableBackend(cv2.dnn.DNN_BACKEND_INFERENCE_ENGINE)\n```", "```py\nnet.setPreferableBackend(cv2.dnn.DNN_BACKEND_OPENCV)\n```"]