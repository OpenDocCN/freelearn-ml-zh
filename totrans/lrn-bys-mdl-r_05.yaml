- en: Chapter 5. Bayesian Regression Models
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the previous chapter, we covered the theory of Bayesian linear regression
    in some detail. In this chapter, we will take a sample problem and illustrate
    how it can be applied to practical situations. For this purpose, we will use the
    **generalized linear model** (**GLM**) packages in R. Firstly, we will give a
    brief introduction to the concept of GLM to the readers.
  prefs: []
  type: TYPE_NORMAL
- en: Generalized linear regression
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Recall that in linear regression, we assume the following functional form between
    the dependent variable *Y* and independent variable *X*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Generalized linear regression](img/image00438.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Here, ![Generalized linear regression](img/image00439.jpeg) is a set of basis
    functions and ![Generalized linear regression](img/image00440.jpeg) is the parameter
    vector. Usually, it is assumed that ![Generalized linear regression](img/image00441.jpeg),
    so ![Generalized linear regression](img/image00442.jpeg) represents an intercept
    or a bias term. Also, it is assumed that ![Generalized linear regression](img/image00443.jpeg)
    is a noise term distributed according to the normal distribution with mean zero
    and variance ![Generalized linear regression](img/image00444.jpeg). We also showed
    that this results in the following equation:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Generalized linear regression](img/image00445.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'One can generalize the preceding equation to incorporate not only the normal
    distribution for noise but any distribution in the exponential family (reference
    1 in the *References* section of this chapter). This is done by defining the following
    equation:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Generalized linear regression](img/image00446.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Here, *g* is called a link function. The well-known models, such as logistic
    regression, log-linear models, Poisson regression, and so on, are special cases
    of GLM. For example, in the case of ordinary linear regression, the link function
    would be ![Generalized linear regression](img/image00447.jpeg). For logistic regression,
    it is ![Generalized linear regression](img/image00448.jpeg), which is the inverse
    of the logistic function, and for Poisson regression, it is ![Generalized linear
    regression](img/image00449.jpeg).
  prefs: []
  type: TYPE_NORMAL
- en: In the Bayesian formulation of GLMs, unlike ordinary linear regression, there
    are no closed-form analytical solutions. One needs to specify prior probabilities
    for the regression coefficients. Then, their posterior probabilities are typically
    obtained through Monte Carlo simulations.
  prefs: []
  type: TYPE_NORMAL
- en: The arm package
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, for the purpose of illustrating Bayesian regression models,
    we will use the **arm** package of R. This package was developed by Andrew Gelman
    and co-workers, and it can be downloaded from the website at [http://CRAN.R-project.org/package=arm](http://CRAN.R-project.org/package=arm).
  prefs: []
  type: TYPE_NORMAL
- en: The arm package has the `bayesglm` function that implements the Bayesian generalized
    linear model with an independent normal, t, or Cauchy prior distributions, for
    the model coefficients. We will use this function to build Bayesian regression
    models.
  prefs: []
  type: TYPE_NORMAL
- en: The Energy efficiency dataset
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We will use the Energy efficiency dataset from the UCI Machine Learning repository
    for the illustration of Bayesian regression (reference 2 in the *References* section
    of this chapter). The dataset can be downloaded from the website at [http://archive.ics.uci.edu/ml/datasets/Energy+efficiency](http://archive.ics.uci.edu/ml/datasets/Energy+efficiency).
    The dataset contains the measurements of energy efficiency of buildings with different
    building parameters. There are two energy efficiency parameters measured: heating
    load (*Y1*) and cooling load (*Y2*).'
  prefs: []
  type: TYPE_NORMAL
- en: 'The building parameters used are: relative compactness (*X1*), surface area
    (*X2*), wall area (*X3*), roof area (*X4*), overall height (*X5*), orientation
    (*X6*), glazing area (*X7*), and glazing area distribution (*X8*). We will try
    to predict heating load as a function of all the building parameters using both
    ordinary regression and Bayesian regression, using the `glm` functions of the
    arm package. We will show that, for the same dataset, Bayesian regression gives
    significantly smaller prediction intervals.'
  prefs: []
  type: TYPE_NORMAL
- en: Regression of energy efficiency with building parameters
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this section, we will do a linear regression of the building''s energy efficiency
    measure, heating load (*Y1*) as a function of the building parameters. It would
    be useful to do a preliminary descriptive analysis to find which building variables
    are statistically significant. For this, we will first create bivariate plots
    of *Y1* and all the *X* variables. We will also compute the Spearman correlation
    between *Y1* and all the *X* variables. The R script for performing these tasks
    is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '![Regression of energy efficiency with building parameters](img/image00450.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: From the b-plots and correlation coefficient values, we can conclude that variables
    X6 and X8 do not have a significant influence on Y1 and, hence, can be dropped
    from the model.
  prefs: []
  type: TYPE_NORMAL
- en: Ordinary regression
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Before we look at the Bayesian linear regression, let''s do an ordinary linear
    regression. The following R code fits the linear regression model using the `lm`
    function in the base R on the training data and predicts the values of *Y1* on
    the test dataset:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Bayesian regression
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: To perform Bayesian linear regression, we use the `bayesglm()` function of the
    arm package. As we described in the introduction, for the GLM, if we choose family
    as `gaussian` (the same as normal distribution) and link function as `identity`,
    then the GLM is equivalent to ordinary linear regression. Hence, if we use the
    `bayesglm()` function with the `gaussian` family and the `identity` link function,
    then we are performing a Bayesian linear regression.
  prefs: []
  type: TYPE_NORMAL
- en: 'For the Bayesian model, we need to specify a prior distribution. For the Gaussian
    distribution, the default settings are `prior.mean = 0`, `prior.scale = NULL`,
    and `prior.df = Inf`. The following R code can be used for Bayesian linear regression:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'To compare the results of the ordinary regression and Bayesian regression,
    we plot the prediction on test data with prediction errors for both methods on
    a single graph. For this purpose, we will use the **ggplot2** package:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '![Bayesian regression](img/image00451.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: One can see that the Bayesian approach gives much more compact, 95% confident
    prediction intervals compared to ordinary regression. This is happening because,
    in the Bayesian approach, one computes a distribution of parameters. The prediction
    is made using a set of values sampled from the posterior distribution and averaged
    to get the final prediction and confidence interval.
  prefs: []
  type: TYPE_NORMAL
- en: Simulation of the posterior distribution
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'If one wants to find out the posterior of the model parameters, the `sim( )`
    function of the arm package becomes handy. The following R script will simulate
    the posterior distribution of parameters and produce a set of histograms:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '![Simulation of the posterior distribution](img/image00452.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Exercises
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Use the multivariate dataset named Auto MPG from the UCI Machine Learning repository
    (reference 3 in the *References* section of this chapter). The dataset can be
    downloaded from the website at [https://archive.ics.uci.edu/ml/datasets/Auto+MPG](https://archive.ics.uci.edu/ml/datasets/Auto+MPG).
    The dataset describes automobile fuel consumption in **miles per gallon** (**mpg**)
    for cars running in American cities. From the folder containing the datasets,
    download two files: `auto-mpg.data` and `auto-mpg.names`. The `auto-mpg.data`
    file contains the data and it is in space-separated format. The `auto-mpg.names`
    file has several details about the dataset, including variable names for each
    column. Build a regression model for the fuel efficiency, as a function displacement
    (*disp*), horse power (*hp*), weight (*wt*), and acceleration (*accel*), using
    both OLS and Bayesian GLM. Predict the values for mpg in the test dataset using
    both the OLS model and Bayesian GLM model (using the `bayesglm` function). Find
    the **Root Mean Square Error** (**RMSE**) values for OLS and Bayesian GLM and
    compare the accuracy and prediction intervals for both the methods.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: References
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Friedman J., Hastie T., and Tibshirani R. *The Elements of Statistical Learning
    – Data Mining, Inference, and Prediction*. Springer Series in Statistics. 2009
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Tsanas A. and Xifara A. "Accurate Quantitative Estimation of Energy Performance
    of Residential Buildings Using Statistical Machine Learning Tools". Energy and
    Buildings. Vol. 49, pp. 560-567\. 2012
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Quinlan R. "Combining Instance-based and Model-based Learning". In: Tenth International
    Conference of Machine Learning. 236-243\. University of Massachusetts, Amherst.
    Morgan Kaufmann. 1993\. Original dataset is from StatLib library maintained by
    Carnegie Mellon University.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we illustrated how Bayesian regression is more useful for prediction
    with a tighter confidence interval using the Energy efficiency dataset and the
    `bayesglm` function of the arm package. We also learned how to simulate the posterior
    distribution using the `sim` function in the same R package. In the next chapter,
    we will learn about Bayesian classification.
  prefs: []
  type: TYPE_NORMAL
