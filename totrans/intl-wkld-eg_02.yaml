- en: '*Chapter 1*: Introduction to the Data-Driven Edge with Machine Learning'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The purpose of this book is to share prescriptive patterns for the **end-to-end**
    (**E2E**) development of solutions that run at the **edge**, the space in the
    computing topology nearest to where the analog interfaces the digital and vice
    versa. Specifically, the book focuses on those edge use cases where **machine
    learning** (**ML**) technologies bring the most value and teaches you how to develop
    these solutions with contemporary tools provided by **Amazon Web Services** (**AWS**).
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, you will learn about the foundations for cyber-physical outcomes
    and the challenges, personas, and tools common to delivering these outcomes. This
    chapter briefly introduces the smart home and industrial **internet of things**
    (**IoT**) settings and sets the scene that will steer the hands-on project built
    throughout the book. It will describe how ML is transforming our ability to accelerate
    decision-making beyond the cloud. You will learn about the scope of the E2E project
    that you will build using AWS services such as **AWS IoT Greengrass** and **Amazon
    SageMaker**. You will also learn what kinds of technical requirements are needed
    before moving on to the first hands-on chapter, [*Chapter 2*](B17595_02_Final_SS_ePub.xhtml#_idTextAnchor032),
    *Foundations of Edge Workloads*.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: 'The following topics will be covered in this chapter:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: Living on the edge
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bringing ML to the edge
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tools to get the job done
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Demand for smart home and industrial IoT
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Setting the scene: A modern smart home solution'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hands-on prerequisites
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Living on the edge
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The **edge** is the space of computing topology nearest to where the analog
    interfaces the digital and vice versa. The edge of the first computing systems,
    such as 1945's **Electronic Numerical Integrator and Computer** (**ENIAC**) general-purpose
    computer, was simply the interfaces used to input instructions and receive printed
    output. You couldn't access these interfaces without being directly in front of
    them. With the advent of remote access mainframe computing in the 1970s, the edge
    of computing moved further out to public terminals that fit on a desk and connected
    to mainframes via coaxial cable. Users could access the common resources of the
    local mainframe from the convenience of a lab or workstation to complete their
    work with advanced capabilities such as word processors or spreadsheets.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
- en: The evolution of humans using the edge for computing continued with increases
    in compute power and decreases in size and cost. The devices we use every day,
    such as personal computers and smartphones, deliver myriad outcomes for us. Some
    outcomes are delivered entirely at the edge (on the device), but many work only
    when connected to the internet and consume remote services. Edge workloads for
    humans tend to be diverse, multipurpose, and handle a range of dynamisms. We could
    not possibly enumerate everything we could do with a smartphone and its web browser!
    These examples of the edge all have in common that humans are both the operator
    and recipient of a computing task. However, the edge is more than the interface
    between humans and silicon.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
- en: 'Another important historical trend of the edge is autonomous functionality.
    We design computing machines to sense and act, then deploy them in environments
    where there may be no human interaction at all. Examples of the autonomous edge
    include robotics used in manufacturing assembly, satellites, and weather stations.
    These edge workloads are distinct from human-driven workloads in that they tend
    to be highly specialized, single-purpose, and handle little dynamism. They perform
    a specific set of functions, perform them consistently, and repeat them until
    obsolescence. The following figure provides a simplistic history of both human-driven
    interfaces and autonomous machines at the edge over time:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 1.1 – A timeline of cyber-physical interfaces at the edge from 1950
    to 2020'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B17595_01_001.jpg)'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
- en: Figure 1.1 – A timeline of cyber-physical interfaces at the edge from 1950 to
    2020
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
- en: 'In today''s technological advances of wireless communications, microcontrollers
    and microprocessors, electrical efficiency, and durability, the edge can be anywhere
    and everywhere. Some of you will be reading this book on an e-reader, a kind of
    edge device, at 10 **km** altitude, cruising at 900 **kph**. The Voyager 1 spacecraft
    is the most distant manmade edge solution, continuing to operate at the time of
    this writing 152 **AU** from Earth! The trend here is that over time, the spectrum
    of capabilities along the path to and at the edge will continue to grow, as will
    the length of that path (and the number of points on it!) and the remoteness of
    where those capabilities can be deployed. The following diagram illustrates the
    scaling of entities, compute power, and capabilities across the topology of computing:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 1.2 – Illustration of computing scale from the cloud to a sensor'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B17595_01_002.jpg)'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
- en: Figure 1.2 – Illustration of computing scale from the cloud to a sensor
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
- en: 'Our world is full of sensors and actuators; over time, more of these devices
    are joining the IoT. A **sensor** is any component that takes a measurement from
    our analog world and converts it to digital data. An **actuator** is any component
    that accepts some digital command and applies some force or change out into the
    analog world. There''s so much information out there to collect, reason about,
    and act upon. Developing edge solutions is an exciting frontier for the following
    reasons:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的世界充满了传感器和执行器；随着时间的推移，越来越多的这些设备正在加入物联网。**传感器**是任何从我们的模拟世界获取测量值并将其转换为数字数据的组件。**执行器**是任何接受一些数字命令并将一些力量或变化应用于模拟世界的组件。有如此多的信息需要收集、推理和采取行动。以下原因使得开发边缘解决方案成为一个令人兴奋的前沿领域：
- en: There is a vast set of possibilities and problems to solve in our world today.
    We need more innovation and solutions to address global outcomes, such as the
    17 sustainable development goals defined by the **United Nations** (**UN**).
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在我们今天的世界中，有大量的可能性和问题需要解决。我们需要更多的创新和解决方案来解决全球问题，例如联合国（**UN**）定义的17个可持续发展目标。
- en: The shrinking cost factor to develop edge solutions lowers the barrier to experiment.
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开发边缘解决方案的成本因素在下降，这降低了实验的门槛。
- en: Tools that put solution development in the reach of anyone with a desire to
    learn are maturing and becoming simpler to use.
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将解决方案开发置于任何有学习愿望的人可触及之处的工具正在成熟并变得更容易使用。
- en: 'This book will teach you how to develop the software of edge solutions using
    modern edge-to-cloud technologies, including how to write software that interacts
    with physical sensors and actuators, how to process and exchange data with other
    local devices and the cloud, and how to get value from advanced ML technologies
    at the edge. More important than the how is the why—in other words: *why do we
    build the solutions this way?* This book will also explain the architectural patterns
    and tips for building well-architected solutions that will last beyond the time
    of particular technologies and tools.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 本书将教你如何使用现代边缘到云技术来开发边缘解决方案的软件，包括如何编写与物理传感器和执行器交互的软件，如何与其他本地设备和云交换数据，以及如何在边缘从先进的机器学习技术中获得价值。比“如何”更重要的是“为什么”——换句话说：*我们为什么以这种方式构建解决方案？*本书还将解释构建良好架构的解决方案的架构模式和技巧，这些解决方案将超越特定技术和工具的时代。
- en: 'Implementation details such as programming languages and frameworks come and
    go with popularity, necessity, and technological breakthroughs. The patterns of
    what we build and why we build them in particular ways stand the test of time
    and will serve you for many of your future projects. For example, the 1995 *Design
    Patterns: Elements of Reusable Object-Oriented Software* by *Gamma*, *Helm*, *Johnson*,
    and *Vlissides* is still guiding software developers today despite the evolution
    of tools that the authors used at the time. We, the authors, cannot liken ourselves
    to these great thinkers or their excellent book, but we refer to it as an example
    of how we approached writing this book.'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 实施细节，如编程语言和框架，随着流行度、必要性和技术突破而出现和消失。我们构建什么以及我们为什么以特定方式构建它们的模式经得起时间的考验，并将为你的许多未来项目提供服务。例如，1995年*设计模式：可重用面向对象软件元素*由*Gamma*、*Helm*、*Johnson*和*Vlissides*所著，尽管作者当时使用的工具已经发展，但至今仍在引导软件开发者。我们，作为作者，不能将自己与这些伟大的思想家或他们的优秀书籍相提并论，但我们将其作为我们如何撰写本书的一个例子。
- en: Common concepts for edge solutions
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 边缘解决方案的常见概念
- en: 'For the purposes of this book, we will expand the definition of the edge as
    any component of a cyber-physical solution operating outside of the cloud, its
    data centers, and away from the internet backbone. Examples of the edge include
    a radio switch controlling a smart light bulb in a household, sensors recording
    duty cycles and engine telemetry of a tractor-trailer at a mining site, a turnstile
    granting access to subway commuters, a weather buoy drifting in the Atlantic,
    a smartphone using a camera in a new **augmented reality** (**AR**) game, and
    of course, Voyager 1\. The environmental control system running in a data center
    to keep servers cool is still an edge solution; our definition intends to highlight
    those components that are distant from the *gravity* of the worldwide computing
    topology. The following diagram shows examples of computing happening at various
    distances further from the gravity of data centers in this computing topology:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 为了本书的目的，我们将扩展边缘的定义，将其定义为任何在云、数据中心和互联网骨干之外运行的物理-数字解决方案的组件。边缘解决方案的例子包括控制家庭中智能灯泡的无线电开关、在采矿地点记录拖拉机拖车的工作周期和发动机遥测数据的传感器、为地铁通勤者提供通道的旋转门、在大西洋中漂流的气象浮标、使用新**增强现实**（**AR**）游戏中的摄像头的智能手机，当然还有旅行者1号。在数据中心运行以保持服务器冷却的环境控制系统仍然是边缘解决方案；我们的定义旨在突出那些远离全球计算拓扑**重力**的组件。以下图表显示了在此计算拓扑中，距离数据中心重力更远的地方发生的计算示例：
- en: '![Figure 1.3 – Examples of the edge at various distances'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '![图1.3 – 不同距离的边缘示例'
- en: '](img/B17595_01_003.jpg)'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/B17595_01_003.jpg]'
- en: Figure 1.3 – Examples of the edge at various distances
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.3 – 不同距离的边缘示例
- en: A **cyber-physical solution** is one that *combines hardware and software for
    interoperating the digital world with the analog world*. If the analog world is
    a set of properties we can measure about reality and enact changes back upon it,
    the digital world is the information we capture about reality that we can store,
    transmit, and reason about. A cyber-physical solution can be self-contained or
    a closed loop such as a **programmable logic controller** (**PLC**) in an industrial
    manufacturing shop or a digital thermostat in the home. It may perform some task
    autonomously or at the direction of a local actor such as a person or switch.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '**物理-数字解决方案**是指将硬件和软件结合在一起，以实现数字世界与模拟世界的互操作。如果模拟世界是我们可以测量现实并对其施加变化的属性集合，那么数字世界就是我们关于现实的捕获信息，我们可以存储、传输和对其推理。物理-数字解决方案可以是自包含的或闭环的，例如工业制造车间中的**可编程逻辑控制器**（**PLC**）或家庭中的数字恒温器。它可能自主执行某些任务，或者在本地行为者（如人或开关）的指导下执行。'
- en: 'An **edge solution** is, then, *a specific extension of a cyber-physical solution
    in that it implies communication or exchange of information with some other entity
    at a point in time*. It can also operate autonomously, at the direction of a local
    actor or a remote actor such as a web server. Sensors deliver autonomous functionality
    in the interest of a person who needs the provided data or are used as input to
    drive a decision through a PLC or code running on a server. Those decisions, whether
    derived by computers or people, are then enacted upon through the use of actuators.
    The analog, human story of reacting to the cold is *I feel cold, so I will start
    a fire to get warm*, while the digital story might look like the following pseudocode
    running a local controller to switch on a furnace:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，**边缘解决方案**是物理-数字解决方案的特定扩展，它意味着在某个时间点与其他实体进行通信或信息交换。它也可以在本地行为者或远程行为者（如网络服务器）的指导下自主运行。传感器为了满足需要提供数据的个人或作为输入驱动PLC或服务器上运行的代码来做出决策，从而提供自主功能。对寒冷的反应的模拟、人类故事是“我感觉冷，所以我将点燃火来取暖”，而数字故事可能看起来像以下在本地控制器上运行的伪代码来切换暖气：
- en: '[PRE0]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: We will further define edge solutions to have some compute capability such as
    a microcontroller or microprocessor to execute instructions. These have at least
    one sensor or actuator to interface with the physical world. Edge solutions will
    at some point in time interact with another entity on a network or in the physical
    world, such as a person or another machine.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将进一步定义边缘解决方案，使其具备一定的计算能力，例如微控制器或微处理器来执行指令。这些解决方案至少包含一个传感器或执行器，用于与物理世界进行接口。边缘解决方案将在某个时间点与网络或物理世界中的另一个实体进行交互，例如人或其他机器。
- en: Based on this definition, what is the edge solution that is nearest to you right
    now?
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 根据这个定义，你现在最近的是什么边缘解决方案？
- en: Sensors, actuators, and compute capability are the most basic building blocks
    for an edge solution. The kinds of solutions that we are interested in developing
    have far more complexity to them. Your responsibility as an IoT architect is to
    ensure that edge solutions are secure, reliable, performant, and cost-effective.
    The high bar of a well-architected solution means you'll need to build proficiency
    in fundamentals such as networking, cryptography, electrical engineering, and
    operating systems. Today's practical production edge solutions incorporate capabilities
    such as processing real-time signals, communicating between systems over multiple
    transmission media, writing firmware updates with redundant failure recovery,
    and self-diagnosing device health.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 传感器、执行器和计算能力是边缘解决方案的最基本构建块。我们感兴趣开发的解决方案具有更多的复杂性。作为物联网架构师，你的责任是确保边缘解决方案安全、可靠、性能良好且成本效益高。良好架构的高标准意味着你需要精通网络、密码学、电气工程和操作系统等基础知识。今天的实际生产边缘解决方案集成了处理实时信号、通过多种传输媒体在系统之间通信、编写具有冗余故障恢复的固件更新以及自我诊断设备健康等功能。
- en: This can all feel overwhelming, and the reality is that building solutions for
    the edge is both complex and complicated. In practice, we use purpose-built tools
    and durable patterns to focus invested efforts on innovation and problem solving
    instead of bootstrapping and reinventing the wheel. The goal of this book is to
    start small with functional outcomes while building up to the big picture of an
    E2E solution. The learnings along the way will serve you on your journey of building
    your next solution. While this book doesn't cover every topic in the field, we
    will take every opportunity to highlight further educational resources to help
    you build proficiency beyond the included focus areas. And that's just about all
    in terms of building solutions for the edge! Next, let's review how ML fits in.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些都可能让人感到不知所措，而现实是，为边缘构建解决方案既复杂又繁琐。在实践中，我们使用专门定制的工具和耐用的模式，将投入的努力集中在创新和解决问题上，而不是从头开始和重新发明轮子。本书的目标是从功能性结果开始，逐步构建到端到端解决方案的全景图。沿途的学习将帮助你在构建下一个解决方案的旅程中受益。虽然本书没有涵盖该领域的每个主题，但我们将会抓住每一个机会，突出更多的教育资源，帮助你超越所涵盖的焦点领域。这就是边缘解决方案构建的全部内容！接下来，让我们回顾一下机器学习是如何融入其中的。
- en: Bringing ML to the edge
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将机器学习带到边缘
- en: '**ML** is an incredible technology making headway in solving today''s problems.
    The ability to train computers to process great quantities of information in service
    of classifying new inputs and predicting results rivals, and in some applications
    exceeds, what the human brain can accomplish. For this reason, *ML defines mechanisms
    for developing artificial intelligence (AI)*.'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '**机器学习**是一项令人难以置信的技术，正在解决当今的问题。训练计算机处理大量信息的能力，用于分类新的输入和预测结果，与人类大脑所能完成的能力相媲美，在某些应用中甚至超过了人类大脑。因此，*机器学习定义了开发人工智能（AI）的机制*。'
- en: The vast computing power made available by the cloud has significantly reduced
    the amount of time it takes to train ML models. Data scientists and data engineers
    can train production models in hours instead of days. Advances in ML algorithms
    have made the models themselves ever more portable, meaning that running the models
    can work on computers with smaller compute and memory profiles. The implications
    of delivering portable ML models cannot be overstated.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 云端提供的强大计算能力显著缩短了训练机器学习模型所需的时间。数据科学家和数据工程师可以在数小时内而不是数天内训练生产模型。机器学习算法的进步使得模型本身变得更加便携，这意味着可以在计算和内存配置较小的计算机上运行模型。交付便携式机器学习模型的影响不容小觑。
- en: 'Operating ML models at the edge helps us as architects deliver optimal edge
    solution design principles. By hosting a portable model at the edge, the proximity
    to the rest of our solution leads to four key benefits, outlined as follows:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在边缘运行机器学习模型有助于我们作为架构师提供最佳的边缘解决方案设计原则。通过在边缘托管一个便携式模型，与整个解决方案的邻近性带来了以下四个关键优势，具体如下：
- en: First, this means the solution can maximize responsiveness for capabilities
    depending on the results of ML inferences by not waiting for the round-trip latency
    of a call to a remote server. The latency to interpret myriad signals from an
    engine about to fail can be made in 10 **milliseconds** (**ms**) instead of 100
    ms. This degree of latency can make the difference between a safe operation and
    a catastrophic failure.
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第一，这意味着解决方案可以通过不等待远程服务器的往返延迟来最大化对依赖于机器学习推理结果的能力的响应速度。对即将发生故障的引擎发出的无数信号的延迟可以缩短到10毫秒（**ms**）而不是100毫秒。这种延迟程度可能决定了安全运行和灾难性故障之间的区别。
- en: Second, it means the functionality of the solution will not be interrupted by
    network congestion and can run in a state where the edge solution is disconnected
    from the public internet. This opens up possibilities for ML solutions to run
    untethered from cloud services. That imminent engine failure can be detected and
    prevented regardless of connection availability.
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第二，这意味着解决方案的功能不会因网络拥塞而中断，并且可以在边缘解决方案与公共互联网断开连接的状态下运行。这为机器学习解决方案独立于云服务运行开辟了可能性。无论连接是否可用，都可以检测并预防即将发生的引擎故障。
- en: Third, anytime we can process data locally with an ML model and reduce the quantity
    of data that ultimately needs to be stored in the cloud, we also get the cost-saving
    benefits on transmission. Think of an expensive satellite internet provider contract;
    across that kind of transmission medium, IoT architects only want to transmit
    data that is absolutely necessary to keep costs down.
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第三，每次我们都可以使用机器学习模型在本地处理数据，并减少最终需要存储在云中的数据量，这样我们也能在传输过程中获得成本节约的好处。想象一下昂贵的卫星互联网服务提供商合同；在这种传输介质中，物联网架构师只想传输绝对必要的、以降低成本的数据。
- en: Fourth, another benefit of local data processing is that it enables use cases
    that must conform to regulation where data must reside in the local country or
    observe privacy concerns such as healthcare data. Hospital equipment used to save
    lives arguably needs as much intelligent monitoring as it can get, but the runtime
    data may not legally be permitted to leave the premises.
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第四，本地数据处理的好处还包括它使得必须符合法规、数据必须存储在本国或关注隐私问题（如医疗数据）的应用场景成为可能。用于挽救生命的医院设备可能需要尽可能多的智能监控，但运行时数据可能法律上不允许离开现场。
- en: 'These four key benefits are illustrated in the following diagram:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 下图展示了这四个关键优势：
- en: '![Figure 1.4 – The four key benefits of ML at the edge'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 1.4 – 边缘机器学习的四个关键优势'
- en: '](img/B17595_01_004.jpg)'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片 B17595_01_004.jpg](img/B17595_01_004.jpg)'
- en: Figure 1.4 – The four key benefits of ML at the edge
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.4 – 边缘机器学习的四个关键优势
- en: Imagine a submersible drone that can bring with it an ML model that can classify
    images coming from a video feed. The drone can operate and make inferences on
    images away from any network connection and can discard any images that don't
    have any value. For example, if the drone's mission is to bring back only images
    of narwhals, then the drone doesn't need extensive quantities of storage to save
    every video clip for later analysis. The drone can use ML to classify images of
    narwhals and only preserve those for the trip back home. The cost of storage continues
    to drop over time, but in the precious bill of materials and space considerations
    of edge solutions such as this one, bringing a portable ML model can ultimately
    lead to significant cost savings.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一个可以携带机器学习模型的水下无人机，该模型可以对视频流中的图像进行分类。无人机可以在没有任何网络连接的情况下操作并对其图像进行推理，并且可以丢弃任何没有价值的图像。例如，如果无人机的任务是只带回独角鲸的图像，那么无人机不需要大量的存储空间来保存每个视频片段以供后续分析。无人机可以使用机器学习来分类独角鲸的图像，并且只保留那些回家的图像。随着存储成本的持续下降，但在宝贵的物料清单和空间考虑因素中，如这种边缘解决方案，携带一个可携带的机器学习模型最终可能导致显著的成本节约。
- en: 'The following diagram illustrates this concept:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 下图说明了这个概念：
- en: '![Figure 1.5 – Illustration of a submersible drone concept processing photographs
    and storing only those where a local ML model identifies a narwhal in the subject'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 1.5 – 潜水无人机概念示意图，处理照片并仅存储那些本地机器学习模型识别出主体为独角鲸的照片'
- en: '](img/B17595_01_005.jpg)'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片 B17595_01_005.jpg](img/B17595_01_005.jpg)'
- en: Figure 1.5 – Illustration of a submersible drone concept processing photographs
    and storing only those where a local ML model identifies a narwhal in the subject
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.5 – 潜水无人机概念示意图，处理照片并仅存储那些本地机器学习模型识别出主体为独角鲸的照片
- en: This book will teach you the basics of training an ML model from the kinds of
    machine data common to edge solutions, as well as how to deploy such models to
    the edge to take advantage of combining ML capabilities with the value proposition
    of running at the edge. We will also teach you about operating ML models at the
    edge, which means analyzing the performance of models, and how to set up infrastructure
    for deploying updates to models retrained in the cloud.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 本书将教授您从边缘解决方案常见的机器数据类型中训练机器学习模型的基础知识，以及如何将这些模型部署到边缘以利用结合机器学习能力和在边缘运行的价值主张。我们还将教授您在边缘操作机器学习模型，这意味着分析模型性能，以及如何设置基础设施以部署在云中重新训练的模型更新。
- en: Outside the scope of this book's lessons are comprehensive deep dives on the
    data science driving the field of ML and AI. You do not need proficiency in that
    field to understand the patterns of ML-powered edge solutions. An understanding
    of how to work with **input/output** (**I/O**) buffers to read and write data
    in software is sufficient to work through the ML tools used in this book.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 本书课程范围之外是对推动机器学习和人工智能领域的机器学习驱动的数据科学的全面深入研究。您不需要在该领域具有专业知识就能理解机器学习驱动的边缘解决方案的模式。了解如何使用软件中的**输入/输出**（**I/O**）缓冲区读取和写入数据就足以使用本书中使用的机器学习工具。
- en: Next, let's review the kinds of tools we need to build and the specific tools
    we will use to build our solution.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们回顾一下我们需要构建和使用的具体工具。
- en: Tools to get the job done
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 完成任务的工具
- en: This book focuses on tools offered by AWS to deliver ML-based solutions at the
    edge. Leading with the 2015 launch of the AWS IoT Core service, AWS has built
    out a suite of IoT services to help developers build cyber-physical solutions
    that benefit from the power of the cloud. These services range from edge software,
    such as the FreeRTOS real-time operating system for microcontrollers, to **command
    and control** (**C2**) of device fleets with IoT Core and IoT Device Management,
    and analytical capabilities for yielding actionable insights from data with services
    such as IoT SiteWise and IoT Events. The IoT services interplay nicely with Amazon's
    suite of ML services, enabling developers to ingest massive quantities of data
    for use in training ML models with services such as Amazon SageMaker. AWS also
    makes it easy to host trained models as endpoints for making inferences against
    real-time data or deploying these models to the edge for local inferencing.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 本书专注于AWS提供的工具，以在边缘提供基于机器学习的解决方案。AWS以2015年推出的AWS IoT Core服务为起点，建立了一套物联网服务，以帮助开发者构建受益于云能力的网络物理解决方案。这些服务范围从边缘软件，如微控制器的FreeRTOS实时操作系统，到使用物联网核心和物联网设备管理的设备编队**指挥与控制**（**C2**），以及通过物联网SiteWise和物联网事件等服务从数据中提取可操作见解的分析能力。物联网服务与亚马逊的机器学习服务套件很好地相互作用，使开发者能够使用亚马逊SageMaker等服务摄取大量数据，用于训练机器学习模型。AWS还使将训练好的模型作为端点托管起来以对实时数据进行推理或将这些模型部署到边缘进行本地推理变得容易。
- en: There are three kinds of software tools you will need to create and operate
    a purposeful, intelligent workload at the edge. Next, we will define each tool
    by its general capabilities and also the specific implementation of the tool we
    are using, provided by AWS, to build the project in this book. There is always
    more complexity to any **information technology** (**IT**), but for our purposes,
    these are the three main kinds of tools this book will focus on in order to deliver
    intelligence to the edge.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要三种软件工具来创建和操作在边缘的有目的、智能的工作负载。接下来，我们将通过其一般能力和我们使用的具体工具（由AWS提供，用于构建本书中的项目）来定义每种工具。任何**信息技术**（**IT**）都总是有更多的复杂性，但就我们的目的而言，这些是本书将重点关注的三种主要工具类型，以便将智能带到边缘。
- en: Edge runtime
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 边缘运行时
- en: The first tool is a *runtime for orchestrating your edge software*. The runtime
    will execute your code and process local events to and from your code. Ideally,
    this runtime is self-healing, meaning that if any service fails, it should automatically
    recover by using failovers or restarting the service. These local events can be
    hardware interrupts that trigger some code to be run, timed events to read inputs
    from an analog sensor, or translating digital commands to change the state of
    a connected actuator such as a switch.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 第一款工具是一个用于编排您边缘软件的运行时。运行时会执行您的代码，并处理来自和您的代码之间的本地事件。理想情况下，这个运行时是自我修复的，这意味着如果任何服务失败，它应该通过故障转移或重启服务来自动恢复。这些本地事件可以是触发某些代码运行的硬件中断，定时事件从模拟传感器读取输入，或将数字命令转换为改变连接的执行器（如开关）的状态。
- en: 'The AWS service that is the star of this book is **IoT Greengrass**. This is
    the service that we will use for the first kind of tool: the runtime for orchestrating
    edge software. IoT Greengrass defines both a packaged runtime for orchestrating
    edge software solutions and a web service for managing fleets of edge deployments
    running on devices such as gateways. In 2020, AWS released a new major version
    of IoT Greengrass, version 2, that rearchitected the edge software package as
    an open source Java project under the Apache 2.0 license. With this version, developers
    got a new software development model for authoring and deploying linked components
    that lets them focus on building business applications instead of worrying about
    the infrastructure of a complex edge-to-cloud solution. We will dive into more
    details of IoT Greengrass and start building our first application with it in
    the next chapter.'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 本书的主角是AWS服务**IoT Greengrass**。这是我们将会用到的第一种工具：边缘软件的运行时。IoT Greengrass定义了一个打包的运行时，用于编排边缘软件解决方案，以及一个网络服务，用于管理运行在网关等设备上的边缘部署的集群。在2020年，AWS发布了IoT
    Greengrass的新版本，即版本2，它将边缘软件包重新架构为一个Apache 2.0许可证下的开源Java项目。在这个版本中，开发者获得了一个新的软件开发模型，用于编写和部署链接组件，使他们能够专注于构建业务应用程序，而不是担心复杂边缘到云解决方案的基础设施。我们将在下一章深入探讨IoT
    Greengrass的更多细节，并开始使用它构建我们的第一个应用程序。
- en: 'The following diagram illustrates how IoT Greengrass plays a role both at the
    edge and in the cloud:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图表说明了物联网Greengrass在边缘和云中发挥的作用：
- en: '![Figure 1.6 – Illustration of how IoT Greengrass plays a role both at the
    edge and in the cloud'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '![图1.6 – 物联网Greengrass在边缘和云中发挥作用的示意图]'
- en: '](img/B17595_01_006.jpg)'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/B17595_01_006.jpg]'
- en: Figure 1.6 – Illustration of how IoT Greengrass plays a role both at the edge
    and in the cloud
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.6 – 物联网Greengrass在边缘和云中发挥作用的示意图
- en: ML
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: ML
- en: The second tool is an ML library and model. The library dictates how to read
    and consume the model and how local code can invoke the model, also called *making
    an inference*. The model is the output of a training job that packages up the
    intelligence into a simpler framework for translating new inputs into inferences.
    We will need a tool to train a new model from a set of data called the training
    set. Then, that trained model will be packaged up and deployed to our edge runtime
    tool. The edge solution will need the corresponding library and code that knows
    how to process new data against the model to yield an inference.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 第二款工具是一个机器学习库和模型。库规定了如何读取和消费模型，以及本地代码如何调用模型，也称为*进行推理*。模型是训练作业的输出，它将智能打包到一个更简单的框架中，用于将新的输入转换为推理。我们需要一个工具从一组称为训练集的数据中训练一个新的模型。然后，该训练模型将被打包并部署到我们的边缘运行时工具。边缘解决方案将需要相应的库和代码，这些代码知道如何处理新数据以对模型进行操作，从而得出推理。
- en: The implementation of our second tool, the ML library and model, is delivered
    by Amazon SageMaker. SageMaker is Amazon's suite of services for the ML developer.
    Included are services for preparing data for use in training, building models
    with built-in or custom algorithms, tuning models, and managing models as **application
    programming interface** (**API**) endpoints or deploying them wherever they need
    to run. You can even train a model without any prior experience, and SageMaker
    will analyze your dataset, select an algorithm, build a set of tuned models, and
    tell you which one is the best fit against your data.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
- en: For some AI use cases, such as forecasting numerical series and interpreting
    human handwriting as text, Amazon offers purpose-built services that have already
    solved the heavy lifting of training ML models. Please note that the teaching
    of data science is beyond the scope of this book. We will use popular ML frameworks
    and algorithms common for delivering outcomes in IoT solutions. We will also provide
    justification for frameworks and algorithms when we use them to give you some
    insight into how we arrived at choosing them. We will introduce the concept of
    deploying ML resources to the edge in [*Chapter 4*](B17595_04_Final_SS_ePub.xhtml#_idTextAnchor073),
    *Extending the Cloud to the Edge*, and dive deeper into ML workloads in [*Chapter
    7*](B17595_07_Final_SS_ePub.xhtml#_idTextAnchor138), *Machine Learning Workloads
    at the Edge*, and [*Chapter 9*](B17595_09_Final_SS_ePub.xhtml#_idTextAnchor182),
    *Fleet Management at Scale*.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
- en: Communicating with the edge
  id: totrans-73
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The third tool is the methodology for communicating with the edge solution.
    This includes deploying the software and updates to the edge hardware and the
    mechanism for exchanging bi-directional data. Since the kinds of edge solutions
    that this book covers are those that interoperate with the cloud, a means of transmitting
    data and commands between the edge and the cloud is needed. This could be any
    number of **Open Systems Interconnection** (**OSI**) model Layer 7 protocols,
    with common examples in IoT being **HyperText Transfer Protocol** (**HTTP**),
    **Message Queuing Telemetry Transport** (**MQTT**), and **Constrained Application
    Protocol** (**CoAP**).
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
- en: The AWS IoT suite of services fits the needs here and acts as a bridge between
    the IoT Greengrass solution running at the edge and the ML capabilities we will
    use in Amazon SageMaker. IoT Core is a service that provides a scalable device
    gateway and message broker for both HTTP and MQTT protocols. It will handle the
    cloud connectivity, authentication and authorization, and routing of messages
    between the edge and the cloud. **IoT Device Management** is a service for operating
    fleets of devices at scale. It will help us define logical groupings of edge devices
    that will run the same software solutions and deploy updates to our fleet. Most
    chapters in this book will rely on tools such as these, and there is a focus on
    the scale of fleet management in [*Chapter 8*](B17595_08_Final_SS_ePub.xhtml#_idTextAnchor163),
    *DevOps and MLOps for the Edge,* and [*Chapter 9*](B17595_09_Final_SS_ePub.xhtml#_idTextAnchor182),
    *Fleet Management at Scale*.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
- en: With these tools in mind, we will next explore the markets, personas, and use
    cases where edge-to-cloud solutions with ML capabilities are driving the most
    demand.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
- en: Demand for smart home and industrial IoT
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Market trends and analysis point to steep growth in the IoT industry, particularly
    in the industrial IoT segment. The 2020 *Mordor Intelligence* report *Smart Homes
    Market – Growth, Trends, COVID-19 Impact, and Forecasts (2021-2026)* projects
    the smart home market to grow from **$79 billion US Dollars** (**USD**) in 2020
    to reach $313 billion by 2026\. Similarly, the 2019 *Grand View Research* report
    *Industrial Internet Of Things Market Size, Share & Trends Analysis Report By
    Component (Solution, Services, Platform) By End Use (Manufacturing, Logistics
    & Transport), By Region, And Segment Forecasts, 2019-2025* projects the industrial
    IoT market to grow from $214 billion in 2018 to reach $949 billion by 2025\. In
    both studies, the estimated **compound annual growth rate** (**CAGR**) is approximately
    25-30%. That means there are big opportunities for new products, solutions, and
    services to find success with businesses and end consumers.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
- en: 'You can see a depiction of market forecasts for smart home and industrial IoT
    here:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 1.7 – Market forecasts for smart home and industrial IoT'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B17595_01_007.jpg)'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
- en: Figure 1.7 – Market forecasts for smart home and industrial IoT
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
- en: 'It''s important to keep in mind that forecasts are just that: forecasts. The
    only way those forecasts become reality is if inventors and problem solvers such
    as you and I get excited and make stuff! The key to understanding the future of
    smart home and industrial IoT solutions is how they are influenced by the value
    propositions of complete edge-to-cloud patterns and local ML inferencing. We can
    reflect on the key benefits of bringing ML to the edge to see how solutions in
    these markets are ripe for innovation.'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
- en: Smart home use cases
  id: totrans-84
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In smart home solutions, the standard for functionality is oriented around environmental
    monitoring (temperature/electrical consumption/luminescence), automating state
    changes (turn this on in the morning and off at night), and introducing convenience
    where it was not previously possible (turn on the air conditioning when you are
    on your way home).
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
- en: The primary persona using the product is the end consumer who lives in the residence
    where the solution is deployed. Secondary personas are guests of the owner, pets,
    public utilities, and home security service providers. At the product design level,
    the chief stakeholders are the IoT architect, security engineer, device manufacturer,
    and data scientist. Smart home products have been exploring and enjoying critical
    success when tapping into the power of AI and ML hosted in the cloud.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
- en: 'Here are three ways that deploying ML capabilities to the edge can benefit
    smart home use cases:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
- en: '**Voice-assisted interfaces**: Smart voice assistants such as Amazon''s Alexa
    rely on the cloud to perform speech-to-text routines in order to process commands
    and generate audio responses. Running speech recognition models at the edge can
    help keep some common commands available for consumers even when the network is
    unavailable. Training models for recognition of who is speaking and incorporating
    that in responses increases the personalization factor and could make these voice
    assistants feel even more believable.'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Home security**: Recognizing a breach of security has traditionally relied
    on binary sensors such as passive infrared for motion or magnetic proximity to
    detect open doors and windows. This simple mechanism can lead to false positives
    and undetected real security events. The next level of smart security will require
    complex event detection that analyzes multivariate inputs and confidence scores
    from trained models. Local models can evaluate whether the consumer is home or
    away automatically, and the solution can use that to calibrate sensitivity to
    events and escalate notifications of events. Video camera feeds are a classic
    example of a high data rate use case that becomes significantly cheaper to use
    with local processing for determining which clips to upload to the cloud for storage
    and further processing.'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Sustainability and convenience**: Simple thermostats that maintain a temperature
    threshold are limited to recognizing when the threshold is breached and reacting
    by engaging a furnace or air conditioning system. Conventional smart home automation
    improves on this by reading weather forecasts, building a schedule profile of
    who is present in the home, and obeying rules for economical operation. ML can
    take us even further by analyzing a wider variety of inputs to determine via a
    recommendation engine how to achieve personal comfort targets most sustainably.
    For example, an ML model might identify and tell us that for your specific home,
    the most sustainable way to cool off in the evenings is to run the air conditioning
    in 5-minute bursts over 2 hours instead of frontloading for 30 minutes.'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Industrial use cases
  id: totrans-91
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In industrial verticals such as manufacturing, power and utilities, and supply
    chain logistics, the common threads to innovating are creating profitable new
    business models and reducing the costs of existing business models. In order to
    innovate with the world of IT, these goals can be achieved through a better understanding
    of customer needs and the operational data generated by the business to test a
    new hypothesis. That understanding comes from using more of the existing data
    already collected and acquiring new streams of data needed to resolve hypotheses
    that lead to valuable new opportunities.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
- en: As per the 2015 *McKinsey Global Institute* report *Unlocking the potential
    of the Internet of Things*, only 1% of data collected by a business's IoT sensors
    is examined. The challenge to using the data is making it accessible to the systems
    and people that can get value from it. Data has little value when it is ingested
    at the edge but stored in an on-premises silo that can't afford to ship it to
    the cloud for analysis. This is where today's edge solutions can turn data into
    actionable insights with local compute and ML.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
- en: 'Here are three use cases for ML at the edge in industrial IoT settings:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
- en: '**Predictive maintenance**: Industrial businesses invest in and deploy expensive
    machinery to perform work. This machinery, such as a sheet metal press, **computer
    numerical control** (**CNC**) router, or an excavator, only performs optimally
    for so many duty cycles before a maintenance operation is needed or, worse, before
    they experience a failure while on the job. The need to keep machinery in top
    condition while minimizing downtime and expenses on unnecessary maintenance is
    a leading use case for industrial IoT and edge solutions. Training models and
    deploying them at the edge for predictive maintenance detection not only saves
    businesses from expensive downtime events but builds on the benefits of local
    ML by ensuring smooth operations in remote environments without high-speed or
    consistent network access.'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Safety and security**: The physical safety and security of employees should
    be the top concern for any business. Safety first, as it goes. ML-powered edge
    solutions raise the bar on workplace safety with applications such as **computer
    vision** (**CV**) models to detect when an employee is about to enter a hazardous
    environment without the required safety equipment, such as a hard hat or safety
    vest. Similar solutions can also be used to detect when unauthorized personnel
    are entering (or trying to enter) a restricted area. When it comes to human safety,
    latency and availability are paramount, so running a fully functional solution
    at the edge means bringing the ML capabilities with it.'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Quality assurance**: When a human operator is inspecting a component or finished
    product on a manufacturing line, they know which aspects of quality to inspect
    based on a trained reference (every batch of cookies should taste like this cookie),
    comparison to a specification (thickness, sheen, strength of aluminum foil), or
    human perception (do these two blocks of wood have reasonably similar wood grain
    to be used together?). ML innovates how manufacturers, for example, can capture
    the intuition of human quality inspectors to increase the scale and precision
    of their operations. With sensors such as cameras and CV models deployed to the
    manufacturing environment, it is feasible to inspect every component or final
    product (instead of an arbitrary sample) with a statistically consistent evaluation
    applied every time. This also brings a benefit to **quality assurance** (**QA**)
    teams by shifting the focus to inspecting solution performance instead of working
    on highly repetitive tasks dependent upon rapid subjective analysis. In other
    words, I''d rather QA a sample of 10,000 items passing inspection from an ML solution
    instead of every one of those 10,000 items. Running such a solution at the edge
    delivers on the key benefits of reducing overall data sent to the cloud and minimizing
    latency for the solution to produce results.'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: These use cases across smart homes and industry highlight the benefits that
    can be achieved with ML-powered edge solutions. Lofty forecasts on market growth
    in IoT are more likely to become reality if there are more developers out there
    bringing innovative new edge solutions to life! Let's review the smart home solution
    (and gratis product idea for someone out there to build) that will drive the hands-on
    material throughout this book.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
- en: 'Setting the scene: A modern smart home solution'
  id: totrans-99
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The solution you will construct over the chapters of this book is one that models
    a gateway device for a modern smart home solution. That means we will use the
    context of a smart home hub for gathering sensor data, analyzing and processing
    that data, and controlling local devices as functions of detected events, schedules,
    and user commands. We selected the smart home context as the basis of our solution
    throughout the book because it is simple to understand and we anticipate many
    of our readers have read about or personally interacted with smart home controllers.
    That enables us to use the context of the smart home as a trope to rapidly move
    through the hands-on chapters and get to the good stuff. If your goals for applying
    the skills learned in this book reach into other domains, such as industrial IoT,
    worry not; the technologies and patterns used in this book are applicable beyond
    the smart home context.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
- en: Now, it's time to put on your imagination hat while we dive deeper into the
    scenario driving our new smart home product! Imagine you are an employee of *Home
    Base Solutions*, a company that specializes in bringing new smart home devices
    to market. *Home Base Solutions* delivers best-in-class features for customers
    outfitting their home with smart products for the first time or for experienced
    customers looking for better service by replacing an older smart home system.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
- en: 'For the next holiday season, *Home Base Solutions* wants to release a new smart
    home hub that offers customers something they haven''t seen before: a product
    that includes sensors for monitoring the health of their existing large appliances
    (such as a furnace or dishwasher) and uses ML to recommend to owners when maintenance
    is needed. A maintenance recommendation is served when the ML model detects an
    anomaly in the data from the attached appliance monitoring kit. This functionality
    must continue to work even when the public internet connection is down or congested,
    so the ML component cannot operate exclusively on a server in the cloud.'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
- en: 'You can see an illustration of the *Home Base Solutions* appliance monitoring
    kit here:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 1.8 – Whiteboard sketch of the Home Base Solutions appliance monitoring
    kit'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B17595_01_008.jpg)'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
- en: Figure 1.8 – Whiteboard sketch of the Home Base Solutions appliance monitoring
    kit
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
- en: Your role in the company is the IoT architect, meaning you are responsible for
    designing the software solution that describes the E2E, edge-to-cloud model of
    data acquisition, ingestion, storage, analysis, and insight. It is up to you to
    design how to deliver upon the company's vision to incorporate ML technologies
    locally in the hub product such that there is no hard dependency on any remote
    service for continuous operation.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
- en: Being the architect also means you are responsible for selecting tools and designing
    how to operate a production fleet of these devices so that the customer service
    and fleet operations teams can manage customer devices at scale. You are not required
    to be a **subject-matter expert** (**SME**) on ML—that's where your team's data
    scientist will step in—but you should design an architecture that is compatible
    with feeding data to power ML training jobs and running built models on the hub
    device.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
- en: 'After spending a few weeks researching available software technologies, tools,
    solution vendors, and cloud services vendors, you decide to try out the following
    architecture using AWS:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 1.9 – Solution architecture diagram for appliance monitoring kit'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B17595_01_009.jpg)'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
- en: Figure 1.9 – Solution architecture diagram for appliance monitoring kit
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
- en: 'It''s just a little bit complicated, right? Don''t worry if none of this makes
    sense yet. We will spend the rest of the book''s chapters going into depth on
    these tools, introducing them at the beginner level, the patterns to use in production,
    and how to combine them to deliver outcomes. Each chapter will focus on one component
    or sub-section, and over time, we will work toward this total concept. The following
    is a breakdown of the individual components and their relationships:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
- en: Sensors and actuators controlled by the smart home hub, such as lights and their
    on/off switches or dimmers. These will be emulated with the Raspberry Pi Sense
    HAT, your own hardware modules compatible with Raspberry Pi, or via software components.
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '*Home Base Solutions* innovative home appliance monitoring kits. The streaming
    data from these kits will be implemented in this book as software components.'
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Stream buffer running on the smart home hub used to process home appliance runtime
    data.
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: ML models (one per home appliance) stored on the hub to invoke against incoming
    telemetry streamed from the home appliance monitoring kits.
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: This is all through an edge software solution running on the *Home Base Solutions*
    hub device and its components that are deployed and run by IoT Greengrass Core
    software.
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Components running inside the IoT Greengrass edge solution exchange messages
    with the AWS cloud via MQTT messages and the AWS IoT Core service.
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The rules engine of AWS IoT Core enables light **extract-transform-load** (**ETL**)
    operations and forwarding of messages throughout the cloud side of the solution.
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Home appliance monitoring data is stored in Amazon **Simple Storage Service**
    (**S3**).
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Amazon SageMaker uses appliance monitoring data as inputs for training and retraining
    ML models.
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The cloud service of IoT Greengrass, using native features of IoT Device Management
    such as groups and jobs, deploys code and resources down to the fleet of smart
    home hubs.
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Trained ML models are deployed as resources back to the edge for local inferences.
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A local feedback mechanism, such as a **light-emitting diode** (**LED**) or
    speaker, signals to customers that an anomaly has been detected and that a maintenance
    activity is suggested.
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A network feedback mechanism, such as a push notification to a mobile application,
    signals to customers that a maintenance activity is suggested and can provide
    further context about the anomalous event.
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Customer support and fleet operations teams use a suite of tools such as Fleet
    Hub, Device Defender, and CloudWatch for monitoring the health of customer devices.
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: By the end of this book, you will have built this entire solution and have the
    skills needed to apply a similar solution to your own business needs. The patterns
    and overall shape of the architecture stay consistent. The implementation details
    of specific devices, networks, and outcomes needed are what vary from project
    to project.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
- en: Hands-on prerequisites
  id: totrans-129
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In order to follow along with the hands-on portions of this book, you will need
    access to two computer systems.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
- en: Note
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
- en: At the time of authoring, AWS IoT Greengrass v2 did not support Windows installation.
    The hands-on portions related to the edge solution are specific to Linux and do
    not run on Windows
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
- en: 'System 1: The edge device'
  id: totrans-133
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The first system will be your **edge device**, also known as a gateway, since
    it will act as the proxy for one or more devices and the cloud component of the
    solution. In IoT Greengrass terminology, this is called a **Greengrass core**.
    This system must be a computer running a Linux operating system, or a **virtual
    machine** (**VM**) of a Linux system. The runtime software for AWS IoT Greengrass
    **version 2** (**v2**) has a dependency on Linux at the time of this writing.
    The recommendation for this book is to use a Raspberry Pi (hardware version 3B
    or later) running the latest version of Raspberry Pi OS. Suitable alternatives
    include a Linux laptop/desktop, a virtualization product such as VirtualBox running
    a Linux image, or a cloud-hosted Linux instance such as Amazon **Elastic Compute
    Cloud** (**EC2**), Azure Virtual Machines, or DigitalOcean Droplets.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
- en: The Raspberry Pi is preferred because it provides the easiest way to interoperate
    with physical sensors and actuators. After all, we are building an IoT project!
    That being said, we will provide code samples to emulate the functionality of
    sensors and actuators for our readers who are using virtual environments to complete
    the hands-on sections. The recommended expansion kit to cover use cases for sensors
    and actuators is the **Raspberry Pi Sense HAT**. There are many kits out there
    of expansion boards and modules compatible with the Raspberry Pi. The use cases
    in this book could be accomplished or modified as necessary to fit what you have,
    though we will not cover alternatives beyond the software samples provided.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
- en: 'You can see a visual representation of the Raspberry Pi 3B with a Sense HAT
    expansion board here:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 1.10 – Raspberry Pi 3B with Sense HAT expansion board'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B17595_01_010.jpg)'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
- en: Figure 1.10 – Raspberry Pi 3B with Sense HAT expansion board
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
- en: In order to keep the **bill of materials** (**BOM**) low for the solution, we
    are setting the border of edge communications at the gateway device itself. This
    means that there are no devices wirelessly communicating with the gateway in this
    book's solution, although a real-world implementation for the smart home product
    would likely use some kind of wireless communication.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
- en: If you are using the recommended components outlined in this section, you will
    have access to an array of sensors, buttons, and feedback mechanisms that emulate
    interoperation between the smart home gateway device and the connected devices
    installed around the home. In that sense, the communication between devices and
    the smart home hub becomes an implementation detail that is orthogonal to the
    software design patterns showcased here.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
- en: 'System 2: Command and control (C2)'
  id: totrans-142
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The second system will be your C2 environment. This system can be a Windows-,
    Mac-, or Unix-based operating system from which you will install and use the **AWS
    Command Line Interface** (**AWS CLI**) to configure, update, and manage your fleet
    of edge solutions. IoT Greengrass supports a local development life cycle, so
    we will use the edge device directly (or via **Secure Shell** (**SSH**) from the
    second system) to get started, and then in later chapters move exclusively to
    the C2 system for remote operation.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is a simple list of requirements:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
- en: An AWS account
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A user in the AWS account with administrator permissions
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'First system (edge device):'
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Linux-based operating system such as Raspberry Pi OS or Ubuntu 18.x
  id: totrans-148
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Recommended: Raspberry Pi (hardware revision 3B or later)'
  id: totrans-149
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Must be of architecture Armv7l, Armv8 (AArch64), or x86_64
  id: totrans-150
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 1 `80`, `443`, and `8883`
  id: totrans-151
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`sudo` access for installing and upgrading packages via package manager'
  id: totrans-152
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: (optional) Raspberry Pi Sense HAT or equivalent expansion modules for sensors
    and actuators
  id: totrans-153
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Second system (C2 system):'
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Windows-, Mac-, or Unix-based operating system
  id: totrans-155
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Keyboard and display
  id: totrans-156
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Python 3.7+ installed
  id: totrans-157
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: AWS CLI v2.2+ installed
  id: totrans-158
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: A network connection that can reach the public internet on TCP ports `80` and
    `443`
  id: totrans-159
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Note
  id: totrans-160
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: If you are creating a new AWS account for this project, you will also need a
    credit card to complete the signup process. It is recommended to use a new developer
    account or sandbox account if provisioned by your company's AWS administrator.
    It is not recommended to experiment with new projects in any account running production
    services.
  id: totrans-161
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: 'All of this is an exhaustive way of saying: if you have a laptop and a Raspberry
    Pi, you are likely ready to proceed! If you just have a laptop, you can still
    complete all of the hands-on exercises with a local VM at no additional cost.'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
- en: Note
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
- en: Installation instructions for Python and the AWS CLI vary per operating system.
    Setup for these tools is not covered in this book. See [https://www.python.org](https://www.python.org)
    and [https://aws.amazon.com/cli/](https://aws.amazon.com/cli/) for installation
    and configuration.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  id: totrans-165
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You should now have a working definition of the edge of computing topology and
    the components of edge solutions such as sensors, actuators, and compute capability.
    You should be able to identify the value proposition of ML technology for smart
    home and industrial use cases running at the edge. We created an imaginary company,
    scoped a new product launch, and described the overall architecture of the solution
    you will deliver throughout the rest of this book.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, you will take your first steps toward developing the edge
    solution by learning how to orchestrate code on your edge device with AWS IoT
    Greengrass. If the prerequisites of your two hands-on systems are ready to go
    and your AWS account is set up, you are ready to go!
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
- en: Knowledge check
  id: totrans-168
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Before moving on to the next chapter, test your knowledge by answering these
    questions. The answers can be found at the end of the book:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
- en: What's the difference between a cyber-physical solution and an edge solution?
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: At the time it was invented, the automobile was a self-contained mechanical
    entity, not a cyber-physical solution or an edge solution. At some point in the
    evolution of the automobile, it started meeting the definition of a cyber-physical
    solution, and then again meeting the definition of an edge solution. What are
    the characteristics of automobiles we can find today that meet our definition
    of an edge solution?
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Has the telephone always been a cyber-physical solution? Why or why not?
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What are the common components of an edge solution?
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What are the three primary types of tools needed to deliver intelligence workloads
    at the edge?
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What are the four key benefits in edge-to-cloud workloads that can be achieved
    with ML models running at the edge?
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Who is the primary persona at the heart of any smart home solution?
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Can you identify one more use case for the smart home vertical that ties in
    with one more of the key benefits for ML-powered edge solutions?
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Who is the primary persona at the heart of any industrial solution?
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Can you identify one more use case for any industrial vertical that ties in
    with one more of the key benefits of ML-powered edge solutions?
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Is the IoT architect of an ML-powered edge solution typically responsible for
    the performance accuracy (for example, confidence scores for a prediction) of
    the models deployed? Why or why not?
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: References
  id: totrans-181
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Take a look at the following resources for additional information on the concepts
    discussed in this chapter:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
- en: '*Erich Gamma*, *Richard Helm*, *Ralph Johnson*, and *John Vlissides*. 1995\.
    *Design Patterns: Elements of Reusable Object-Oriented Software*. *Addison-Wesley
    Longman Publishing Co., Inc., USA*:'
  id: totrans-183
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Smart Homes Market – Growth, Trends, COVID-19 Impact, and Forecasts (2021-2026)*:'
  id: totrans-184
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[https://www.mordorintelligence.com/industry-reports/global-smart-homes-market-industry](https://www.mordorintelligence.com/industry-reports/global-smart-homes-market-industry)'
  id: totrans-185
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '*Industrial Internet Of Things Market Size, Share & Trends Analysis Report
    By Component, (Solution, Services, Platform), By End Use (Manufacturing, Logistics
    and Transport), By Region, And Segment Forecasts, 2019-2025*:'
  id: totrans-186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[https://www.grandviewresearch.com/industry-analysis/industrial-internet-of-things-iiot-market](https://www.grandviewresearch.com/industry-analysis/industrial-internet-of-things-iiot-market)'
  id: totrans-187
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '*Unlocking the potential of the Internet of Things*:'
  id: totrans-188
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[https://www.mckinsey.com/business-functions/mckinsey-digital/our-insights/the-internet-of-things-the-value-of-digitizing-the-physical-world](https://www.mckinsey.com/business-functions/mckinsey-digital/our-insights/the-internet-of-things-the-value-of-digitizing-the-physical-world%0D)'
  id: totrans-189
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '*The 17 Goals*, UN website:'
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[https://sdgs.un.org/goals](https://sdgs.un.org/goals)'
  id: totrans-191
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
