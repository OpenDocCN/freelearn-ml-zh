["```py\n\n    install.packages(\"tidyverse\")\n    library(dplyr)\n    ```", "```py\n\n    >>> data(\"iris\")\n    >>> class(iris)\n    \"data.frame\"\n    ```", "```py\n\n    >>> iris_tbl = as_tibble(iris)\n    >>> class(iris_tbl)\n    \"tbl_df\"     \"tbl\"        \"data.frame\"\n    ```", "```py\n    >>> iris_tbl\n    # A tibble: 150 x 5\n       Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n              <dbl>       <dbl>        <dbl>       <dbl> <fct>\n     1          5.1         3.5          1.4         0.2 setosa\n     2          4.9         3            1.4         0.2 setosa\n     3          4.7         3.2          1.3         0.2 setosa\n     4          4.6         3.1          1.5         0.2 setosa\n     5          5           3.6          1.4         0.2 setosa\n     6          5.4         3.9          1.7         0.4 setosa\n     7          4.6         3.4          1.4         0.3 setosa\n     8          5           3.4          1.5         0.2 setosa\n     9          4.4         2.9          1.4         0.2 setosa\n    10          4.9         3.1          1.5         0.1 setosa\n    # … with 140 more rows\n    ```", "```py\n\n    >>> unique(iris_tbl$Species)\n    setosa     versicolor virginica\n    Levels: setosa versicolor virginica\n    ```", "```py\n\n    iris_tbl_subset = iris_tbl %>%\n      filter(Species == \"setosa\")\n    >>> iris_tbl_subset\n    # A tibble: 50 x 5\n       Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n              <dbl>       <dbl>        <dbl>       <dbl> <fct>\n     1          5.1         3.5          1.4         0.2 setosa\n     2          4.9         3            1.4         0.2 setosa\n     3          4.7         3.2          1.3         0.2 setosa\n     4          4.6         3.1          1.5         0.2 setosa\n     5          5           3.6          1.4         0.2 setosa\n     6          5.4         3.9          1.7         0.4 setosa\n     7          4.6         3.4          1.4         0.3 setosa\n     8          5           3.4          1.5         0.2 setosa\n     9          4.4         2.9          1.4         0.2 setosa\n    10          4.9         3.1          1.5         0.1 setosa\n    # … with 40 more rows\n    ```", "```py\n\n    >>> unique(iris_tbl_subset$Species)\n    setosa\n    Levels: setosa versicolor virginica\n    ```", "```py\n\n    >>> unique(as.character(iris_tbl_subset$Species))\n    \"setosa\"\n    ```", "```py\n\niris_tbl_subset = iris_tbl %>%\n  filter(Species == \"setosa\",\n         Sepal.Length <= 5)\n>>> max(iris_tbl_subset$Sepal.Length)\n5\n>>> dim(iris_tbl_subset)\n28  5\n```", "```py\n\n    iris_tbl_sorted = iris_tbl %>%\n      arrange(Sepal.Length)\n    >>> iris_tbl_sorted\n    # A tibble: 150 x 5\n       Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n              <dbl>       <dbl>        <dbl>       <dbl> <fct>\n     1          4.3         3            1.1         0.1 setosa\n     2          4.4         2.9          1.4         0.2 setosa\n     3          4.4         3            1.3         0.2 setosa\n     4          4.4         3.2          1.3         0.2 setosa\n     5          4.5         2.3          1.3         0.3 setosa\n     6          4.6         3.1          1.5         0.2 setosa\n     7          4.6         3.4          1.4         0.3 setosa\n     8          4.6         3.6          1           0.2 setosa\n     9          4.6         3.2          1.4         0.2 setosa\n    10          4.7         3.2          1.3         0.2 setosa\n    # … with 140 more rows\n    ```", "```py\n\n    iris_tbl_sorted = iris_tbl %>%\n      arrange(desc(Sepal.Length))\n    >>> iris_tbl_sorted\n    # A tibble: 150 x 5\n       Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n              <dbl>       <dbl>        <dbl>       <dbl> <fct>\n     1          7.9         3.8          6.4         2   virginica\n     2          7.7         3.8          6.7         2.2 virginica\n     3          7.7         2.6          6.9         2.3 virginica\n     4          7.7         2.8          6.7         2   virginica\n     5          7.7         3            6.1         2.3 virginica\n     6          7.6         3            6.6         2.1 virginica\n     7          7.4         2.8          6.1         1.9 virginica\n     8          7.3         2.9          6.3         1.8 virginica\n     9          7.2         3.6          6.1         2.5 virginica\n    10          7.2         3.2          6           1.8 virginica\n    # … with 140 more rows\n    ```", "```py\n\n    iris_tbl_subset_sorted = iris_tbl %>%\n      filter(Species == \"setosa\",\n             Sepal.Length <= 5) %>%\n      arrange(desc(Sepal.Length),desc(Sepal.Width))\n    >>> iris_tbl_subset_sorted\n    # A tibble: 28 x 5\n       Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n              <dbl>       <dbl>        <dbl>       <dbl> <fct>\n     1          5           3.6          1.4         0.2 setosa\n     2          5           3.5          1.3         0.3 setosa\n     3          5           3.5          1.6         0.6 setosa\n     4          5           3.4          1.5         0.2 setosa\n     5          5           3.4          1.6         0.4 setosa\n     6          5           3.3          1.4         0.2 setosa\n     7          5           3.2          1.2         0.2 setosa\n     8          5           3            1.6         0.2 setosa\n     9          4.9         3.6          1.4         0.1 setosa\n    10          4.9         3.1          1.5         0.1 setosa\n    # … with 18 more rows\n    ```", "```py\n\n    >>> paste(\"Before:\", class(iris_tbl$Species))\n    iris_tbl = iris_tbl %>%\n      mutate(Species = as.character(Species))\n    >>> paste(\"After:\", class(iris_tbl$Species))\n    \"Before: factor\"\n    \"After: character\"\n    ```", "```py\n\n    iris_tbl = iris_tbl %>%\n      mutate(ind = Sepal.Width > Petal.Length)\n    >>> iris_tbl\n    # A tibble: 150 x 6\n       Sepal.Length Sepal.Width Petal.Length Petal.Width Species ind\n              <dbl>       <dbl>        <dbl>       <dbl> <chr>   <lgl>\n     1          5.1         3.5          1.4         0.2 setosa  TRUE\n     2          4.9         3            1.4         0.2 setosa  TRUE\n     3          4.7         3.2          1.3         0.2 setosa  TRUE\n     4          4.6         3.1          1.5         0.2 setosa  TRUE\n     5          5           3.6          1.4         0.2 setosa  TRUE\n     6          5.4         3.9          1.7         0.4 setosa  TRUE\n     7          4.6         3.4          1.4         0.3 setosa  TRUE\n     8          5           3.4          1.5         0.2 setosa  TRUE\n     9          4.4         2.9          1.4         0.2 setosa  TRUE\n    10          4.9         3.1          1.5         0.1 setosa  TRUE\n    # … with 140 more rows\n    ```", "```py\n    >>> table(iris_tbl$ind)\n    FALSE  TRUE\n    100    50\n    ```", "```py\n\n    iris_tbl_subset = iris_tbl %>%\n      filter(ind==TRUE)\n    >>> table(iris_tbl_subset$ind)\n    TRUE\n    50\n    ```", "```py\n    iris_tbl_subset2 = iris_tbl %>%\n      filter(Sepal.Width > Petal.Length)\n    >>> nrow(iris_tbl_subset2)\n    50\n    ```", "```py\n\n    rst = iris_tbl %>%\n      select(Sepal.Length, Sepal.Width, Petal.Length)\n    >>> rst\n    # A tibble: 150 x 3\n       Sepal.Length Sepal.Width Petal.Length\n              <dbl>       <dbl>        <dbl>\n     1          5.1         3.5          1.4\n     2          4.9         3            1.4\n     3          4.7         3.2          1.3\n     4          4.6         3.1          1.5\n     5          5           3.6          1.4\n     6          5.4         3.9          1.7\n     7          4.6         3.4          1.4\n     8          5           3.4          1.5\n     9          4.4         2.9          1.4\n    10          4.9         3.1          1.5\n    # … with 140 more rows\n    ```", "```py\n    rst = iris_tbl %>%\n      select(Sepal.Length:Petal.Length)\n    >>> rst\n    # A tibble: 150 x 3\n       Sepal.Length Sepal.Width Petal.Length\n              <dbl>       <dbl>        <dbl>\n     1          5.1         3.5          1.4\n     2          4.9         3            1.4\n     3          4.7         3.2          1.3\n     4          4.6         3.1          1.5\n     5          5           3.6          1.4\n     6          5.4         3.9          1.7\n     7          4.6         3.4          1.4\n     8          5           3.4          1.5\n     9          4.4         2.9          1.4\n    10          4.9         3.1          1.5\n    # … with 140 more rows\n    ```", "```py\n\n    rst = iris_tbl %>%\n      select(contains(\"length\"))\n    >>> rst\n    # A tibble: 150 x 2\n       Sepal.Length Petal.Length\n              <dbl>        <dbl>\n     1          5.1          1.4\n     2          4.9          1.4\n     3          4.7          1.3\n     4          4.6          1.5\n     5          5            1.4\n     6          5.4          1.7\n     7          4.6          1.4\n     8          5            1.5\n     9          4.4          1.4\n    10          4.9          1.5\n    # … with 140 more rows\n    ```", "```py\n\n    rst = iris_tbl %>%\n      select(starts_with(\"petal\"))\n    >>> rst\n    # A tibble: 150 x 2\n       Petal.Length Petal.Width\n              <dbl>       <dbl>\n     1          1.4         0.2\n     2          1.4         0.2\n     3          1.3         0.2\n     4          1.5         0.2\n     5          1.4         0.2\n     6          1.7         0.4\n     7          1.4         0.3\n     8          1.5         0.2\n     9          1.4         0.2\n    10          1.5         0.1\n    # … with 140 more rows\n    ```", "```py\n\n    rst = iris_tbl %>%\n      top_n(1, Sepal.Length)\n    >>> rst\n    # A tibble: 1 x 6\n      Sepal.Length Sepal.Width Petal.Length Petal.Width Species   ind\n             <dbl>       <dbl>        <dbl>       <dbl> <chr>     <lgl>\n    1          7.9         3.8          6.4           2 virginica FALSE\n    ```", "```py\n    rst = iris_tbl %>%\n      arrange(desc(Sepal.Length)) %>%\n      head(1)\n    >>> rst\n    # A tibble: 1 x 6\n      Sepal.Length Sepal.Width Petal.Length Petal.Width Species   ind\n             <dbl>       <dbl>        <dbl>       <dbl> <chr>     <lgl>\n    1          7.9         3.8          6.4           2 virginica FALSE\n    ```", "```py\n\n    rst = iris_tbl %>%\n      group_by(Species) %>%\n      top_n(1, Sepal.Length) %>%\n      select(Species, Sepal.Length)\n    >>> rst\n    # A tibble: 3 x 2\n    # Groups:   Species [3]\n      Species    Sepal.Length\n      <chr>             <dbl>\n    1 setosa              5.8\n    2 versicolor          7\n    3 virginica           7.9\n    ```", "```py\n    rst = iris_tbl %>%\n      group_by(Species) %>%\n      summarize(max_sepal_length = max(Sepal.Length))\n    >>> rst\n    # A tibble: 3 x 2\n      Species    max_sepal_length\n      <chr>                 <dbl>\n    1 setosa                  5.8\n    2 versicolor              7\n    3 virginica               7.9\n    ```", "```py\n\n    rst = iris_tbl %>%\n      group_by(Species) %>%\n      summarize(max_sepal_length = max(Sepal.Length)) %>%\n      top_n(1, max_sepal_length)\n    >>> rst\n    # A tibble: 1 x 2\n      Species   max_sepal_length\n      <chr>                <dbl>\n    1 virginica              7.9\n    ```", "```py\n\nrst = iris_tbl %>%\n  top(80, Sepal.Length) %>%\n  filter(Sepal.Width > Petal.Length) %>%\n  mutate(Diff = abs(Sepal.Length - Petal.Length)) %>%\n  select(Diff) %>%\n  colMeans()\n>>> rst\nDiff\n 4.266667\n```", "```py\n\nrst = iris_tbl %>%\n  select(Sepal.Length, Sepal_Width=Sepal.Width)\n>>> rst\n# A tibble: 150 x 2\n   Sepal.Length Sepal_Width\n          <dbl>       <dbl>\n 1          5.1         3.5\n 2          4.9         3\n 3          4.7         3.2\n 4          4.6         3.1\n 5          5           3.6\n 6          5.4         3.9\n 7          4.6         3.4\n 8          5           3.4\n 9          4.4         2.9\n10          4.9         3.1\n# … with 140 more rows\n```", "```py\n\nrst = iris_tbl %>%\n  transmute(Species, Diff = abs(Sepal.Length - Petal.Length))\n>>> rst\n# A tibble: 150 x 2\n   Species  Diff\n   <chr>   <dbl>\n 1 setosa    3.7\n 2 setosa    3.5\n 3 setosa    3.4\n 4 setosa    3.1\n 5 setosa    3.6\n 6 setosa    3.7\n 7 setosa    3.2\n 8 setosa    3.5\n 9 setosa    3\n10 setosa    3.4\n# … with 140 more rows\n```", "```py\n\n    rst = iris_tbl %>%\n      count(Species)\n    >>> rst\n    # A tibble: 3 x 2\n      Species        n\n      <chr>      <int>\n    1 setosa        50\n    2 versicolor    50\n    3 virginica     50\n    ```", "```py\n\n    rst = iris_tbl %>%\n      filter(abs(Sepal.Length-Sepal.Width) > abs(Petal.Length-Petal.Width)) %>%\n      count(Species, sort=TRUE)\n    >>> rst\n    # A tibble: 3 x 2\n      Species        n\n      <chr>      <int>\n    1 setosa        45\n    2 versicolor    33\n    3 virginica     28\n    ```", "```py\n\n    rst = iris_tbl %>%\n      group_by(Species) %>%\n      summarise(n=n())\n    >>> rst\n    # A tibble: 3 x 2\n      Species        n\n      <chr>      <int>\n    1 setosa        50\n    2 versicolor    50\n    3 virginica     50\n    ```", "```py\n\n    rst = iris_tbl %>%\n      filter(abs(Sepal.Length-Sepal.Width) > abs(Petal.Length-Petal.Width)) %>%\n      group_by(Species) %>%\n      summarise(n=n()) %>%\n      arrange(desc(n))\n    >>> rst\n    # A tibble: 3 x 2\n      Species        n\n      <chr>      <int>\n    1 setosa        45\n    2 versicolor    33\n    3 virginica     28\n    ```", "```py\n\n    rst = iris_tbl %>%\n      mutate(ind = abs(Sepal.Length-Sepal.Width) > abs(Petal.Length-Petal.Width)) %>%\n      group_by(Species, ind) %>%\n      summarise(mean_sepal_length=mean(Sepal.Length))\n    >>> rst\n    # A tibble: 6 x 3\n    # Groups:   Species [3]\n      Species    ind   mean_sepal_length\n      <chr>      <lgl>             <dbl>\n    1 setosa     FALSE              5\n    2 setosa     TRUE               5.01\n    3 versicolor FALSE              5.78\n    4 versicolor TRUE               6.02\n    5 virginica  FALSE              6.39\n    6 virginica  TRUE               6.74\n    ```", "```py\n\n    rst = iris_tbl %>%\n      mutate(ind = abs(Sepal.Length-Sepal.Width) > abs(Petal.Length-Petal.Width)) %>%\n      group_by(Species, ind) %>%\n      summarise(mean_sepal_length=mean(Sepal.Length)) %>%\n      ungroup()\n    >>> rst\n    # A tibble: 6 x 3\n      Species    ind   mean_sepal_length\n      <chr>      <lgl>             <dbl>\n    1 setosa     FALSE              5\n    2 setosa     TRUE               5.01\n    3 versicolor FALSE              5.78\n    4 versicolor TRUE               6.02\n    5 virginica  FALSE              6.39\n    6 virginica  TRUE               6.74\n    ```", "```py\n\n    a = 1:3\n    tbl_A = tibble(key_A=a, col_A=2*a)\n    tbl_B = tibble(key_B=a+1, col_B=3*a)\n    >>> tbl_A\n    # A tibble: 3 x 2\n      key_A col_A\n      <int> <dbl>\n    1     1     2\n    2     2     4\n    3     3     6\n    >>> tbl_B\n    # A tibble: 3 x 2\n      key_B col_B\n      <dbl> <dbl>\n    1     2     3\n    2     3     6\n    3     4     9\n    ```", "```py\n\n    rst = tbl_A %>%\n      inner_join(tbl_B, by=c(\"key_A\"=\"key_B\"))\n    >>> rst\n    # A tibble: 2 x 3\n      key_A col_A col_B\n      <dbl> <dbl> <dbl>\n    1     2     4     3\n    2     3     6     6\n    ```", "```py\n\n    rst = tbl_A %>%\n      left_join(tbl_B, by=c(\"key_A\"=\"key_B\"))\n    >>> rst\n    # A tibble: 3 x 3\n      key_A col_A col_B\n      <dbl> <dbl> <dbl>\n    1     1     2    NA\n    2     2     4     3\n    3     3     6     6\n    ```", "```py\n\n    tbl_C = tbl_B %>%\n      bind_rows(tbl_B[1,])\n    tbl_C[nrow(tbl_C),\"col_B\"] = 10\n    >>> tbl_C\n    # A tibble: 4 x 2\n      key_B col_B\n      <dbl> <dbl>\n    1     2     3\n    2     3     6\n    3     4     9\n    4     2    10\n    ```", "```py\n    rst = tbl_A %>%\n      left_join(tbl_C, by=c(\"key_A\"=\"key_B\"))\n    >>> rst\n    # A tibble: 4 x 3\n      key_A col_A col_B\n      <dbl> <dbl> <dbl>\n    1     1     2    NA\n    2     2     4     3\n    3     2     4    10\n    4     3     6     6\n    ```", "```py\n\n    rst = tbl_A %>%\n    right_join(tbl_B, by=c(\"key_A\"=\"key_B\"))\n    >>> rst\n    # A tibble: 3 x 3\n      key_A col_A col_B\n      <dbl> <dbl> <dbl>\n    1     2     4     3\n    2     3     6     6\n    3     4    NA     9\n    ```", "```py\n\n    rst = tbl_A %>%\n      full_join(tbl_B, by=c(\"key_A\"=\"key_B\"))\n    >>> rst\n    # A tibble: 4 x 3\n      key_A col_A col_B\n      <dbl> <dbl> <dbl>\n    1     1     2    NA\n    2     2     4     3\n    3     3     6     6\n    4     4    NA     9\n    ```", "```py\n\nlibrary(tidyr)\nrst = tbl_A %>%\n  full_join(tbl_B, by=c(\"key_A\"=\"key_B\")) %>%\n  drop_na()\n>>> rst\n# A tibble: 2 x 3\n  key_A col_A col_B\n  <dbl> <dbl> <dbl>\n1     2     4     3\n2     3     6     6\n```", "```py\n\nrst = tbl_A %>%\n  full_join(tbl_B, by=c(\"key_A\"=\"key_B\")) %>%\n  replace_na(list(col_A=0, col_B=0))\n>>> rst\n# A tibble: 4 x 3\n  key_A col_A col_B\n  <dbl> <dbl> <dbl>\n1     1     2     0\n2     2     4     3\n3     3     6     6\n4     4     0     9\n```", "```py\n\n    library(readr)\n    df_questions = read_csv(\"https://raw.githubusercontent.com/PacktPublishing/The-Statistics-and-Machine-Learning-with-R-Workshop/main/Chapter_2/data/questions.csv\")\n    >>> df_questions\n    # A tibble: 294,735 x 3\n             id creation_date score\n          <dbl> <date>        <dbl>\n     1 22557677 2014-03-21        1\n     2 22557707 2014-03-21        2\n     3 22558084 2014-03-21        2\n     4 22558395 2014-03-21        2\n     5 22558613 2014-03-21        0\n     6 22558677 2014-03-21        2\n     7 22558887 2014-03-21        8\n     8 22559180 2014-03-21        1\n     9 22559312 2014-03-21        0\n    10 22559322 2014-03-21        2\n    # … with 294,725 more rows\n    ```", "```py\n    >>> summary(df_questions$score)\n        Min.  1st Qu.   Median     Mean  3rd Qu.     Max.\n     -21.000    0.000    1.000    1.904    2.000 2474.000\n\n    ```", "```py\n\n    ```", "```py\n\n    df_all = df_questions %>%\n      left_join(df_question_tags, by=c(\"id\"=\"question_id\"))\n    >>> df_all\n    # A tibble: 545,694 x 4\n             id creation_date score tag_id\n          <dbl> <date>        <dbl>  <dbl>\n     1 22557677 2014-03-21        1     18\n     2 22557677 2014-03-21        1    139\n     3 22557677 2014-03-21        1  16088\n     4 22557677 2014-03-21        1   1672\n     5 22557707 2014-03-21        2     NA\n     6 22558084 2014-03-21        2   6419\n     7 22558084 2014-03-21        2  92764\n     8 22558395 2014-03-21        2   5569\n     9 22558395 2014-03-21        2    134\n    10 22558395 2014-03-21        2   9412\n    # … with 545,684 more rows\n    ```", "```py\n\n    df_all = df_all %>%\n      left_join(df_tags, by=c(\"tag_id\"=\"id\"))\n    >>> df_all\n    # A tibble: 545,694 x 5\n             id creation_date score tag_id tag_name\n          <dbl> <date>        <dbl>  <dbl> <chr>\n     1 22557677 2014-03-21        1     18 regex\n     2 22557677 2014-03-21        1    139 string\n     3 22557677 2014-03-21        1  16088 time-complexity\n     4 22557677 2014-03-21        1   1672 backreference\n     5 22557707 2014-03-21        2     NA NA\n     6 22558084 2014-03-21        2   6419 time-series\n     7 22558084 2014-03-21        2  92764 panel-data\n     8 22558395 2014-03-21        2   5569 function\n     9 22558395 2014-03-21        2    134 sorting\n    10 22558395 2014-03-21        2   9412 vectorization\n    # … with 545,684 more rows\n    ```", "```py\n\n    df_all = df_all %>%\n      filter(!is.na(tag_name))\n    rst = df_all %>%\n      count(tag_name, sort = TRUE)\n    >>> rst\n    # A tibble: 7,840 x 2\n       tag_name       n\n       <chr>      <int>\n     1 ggplot2    28228\n     2 dataframe  18874\n     3 shiny      14219\n     4 dplyr      14039\n     5 plot       11315\n     6 data.table  8809\n     7 matrix      6205\n     8 loops       5149\n     9 regex       4912\n    10 function    4892\n    # … with 7,830 more rows\n    ```", "```py\n\n    library(lubridate)\n    rst = df_all %>%\n      mutate(year = year(creation_date)) %>%\n      count(year)\n    >>> rst\n    # A tibble: 12 x 2\n        year     n\n       <dbl> <int>\n     1  2008    18\n     2  2009   874\n     3  2010  3504\n     4  2011  8787\n     5  2012 18251\n     6  2013 34998\n     7  2014 50749\n     8  2015 66652\n     9  2016 76056\n    10  2017 90462\n    11  2018 96819\n    12  2019 49983\n    ```", "```py\n    >>> max(df_all$creation_date)\n    \"2019-07-01\"\n    ```", "```py\n\n    df_all = df_all %>%\n      mutate(month = month(creation_date),\n             year_month = format(creation_date, \"%Y%m\"))\n    >>> df_all\n    # A tibble: 497,153 x 7\n             id creation_date score tag_id tag_name            month year_month\n          <dbl> <date>        <dbl>  <dbl> <chr>               <dbl> <chr>\n     1 22557677 2014-03-21        1     18 regex                   3 201403\n     2 22557677 2014-03-21        1    139 string                  3 201403\n     3 22557677 2014-03-21        1  16088 time-complexity         3 201403\n     4 22557677 2014-03-21        1   1672 backreference           3 201403\n     5 22558084 2014-03-21        2   6419 time-series             3 201403\n     6 22558084 2014-03-21        2  92764 panel-data              3 201403\n     7 22558395 2014-03-21        2   5569 function                3 201403\n     8 22558395 2014-03-21        2    134 sorting                 3 201403\n     9 22558395 2014-03-21        2   9412 vectorization           3 201403\n    10 22558395 2014-03-21        2  18621 operator-precedence     3 201403\n    # … with 497,143 more rows\n    ```", "```py\n    rst1 = df_all %>%\n      count(year_month, month)\n    >>> rst1\n    # A tibble: 130 x 3\n       year_month month     n\n       <chr>      <dbl> <int>\n     1 200809         9    13\n     2 200811        11     4\n     3 200812        12     1\n     4 200901         1     8\n     5 200902         2    10\n     6 200903         3     7\n     7 200904         4    24\n     8 200905         5     3\n     9 200906         6    12\n    10 200907         7   100\n    # … with 120 more rows\n    ```", "```py\n    rst2 = rst1 %>%\n      group_by(month) %>%\n      summarise(avg_num_tag = mean(n))\n    >>> rst2\n    # A tibble: 12 x 2\n       month avg_num_tag\n       <dbl>       <dbl>\n     1     1       3606.\n     2     2       3860.\n     3     3       4389.\n     4     4       4286.\n     5     5       4178.\n     6     6       4133.\n     7     7       3630.\n     8     8       3835.\n     9     9       3249.\n    10    10       3988.\n    11    11       3628.\n    12    12       3125.\n    ```", "```py\n\n    rst = df_all %>%\n      group_by(tag_name) %>%\n      summarise(count = n(),\n                min_score = min(score),\n                mean_score = mean(score),\n                max_score = max(score)) %>%\n      arrange(desc(count))\n    >>> rst\n    # A tibble: 7,840 x 5\n       tag_name   count min_score mean_score max_score\n       <chr>      <int>     <dbl>      <dbl>     <dbl>\n     1 ggplot2    28228        -9      2.61        666\n     2 dataframe  18874       -11      2.31       1241\n     3 shiny      14219        -7      1.45         79\n     4 dplyr      14039        -9      1.95        685\n     5 plot       11315       -10      2.24        515\n     6 data.table  8809        -8      2.97        685\n     7 matrix      6205       -10      1.66        149\n     8 loops       5149        -8      0.743       180\n     9 regex       4912        -9      2           242\n    10 function    4892       -14      1.39        485\n    # … with 7,830 more rows\n    ```"]