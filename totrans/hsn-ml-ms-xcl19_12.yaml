- en: Visualizing Data in Diagrams, Histograms, and Maps
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'If we are talking about machine learning, why should we care about visualization?
    The answer is simple: if you cannot show what you have analyzed and the outcome
    of your models to somebody without any technical knowledge, then you will not
    be able to show any added value. We have already shown how important data visualization
    is for understanding a dataset and to decide which features will be most useful
    for training our model. We are now going to investigate which type of diagram
    is best suited to tell the story of our data and the new information we got from
    it.'
  prefs: []
  type: TYPE_NORMAL
- en: 'The following topics will be covered in this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: Showing basic comparisons and relationships between variables
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Building data distributions using histograms
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Representing geographical distribution of data in maps
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Showing data that changes over time
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To complete this chapter, the reader will need to download the `1976USpresident.xlsx`
    and `subte.xlsx` files from the GitHub repository at [https://github.com/PacktPublishing/Hands-On-Machine-Learning-with-Microsoft-Excel-2019/tree/master/Chapter08](https://github.com/PacktPublishing/Hands-On-Machine-Learning-with-Microsoft-Excel-2019/tree/master/Chapter08).
  prefs: []
  type: TYPE_NORMAL
- en: Showing basic comparisons and relationships between variables
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Data visualization is extremely important in the context of data analytics
    and machine learning. Some of the reasons for this are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Tell the story of your data and help decision makers with their job.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Predict the future evolution of some variable(s).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Find hidden trends and patterns in the data.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Find outliers, that is, anomalies in the data.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Understand the distribution, composition, and relationships.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Build groups and categories.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'We will show different types of charts used to show different types of data.
    The data used in the example charts is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Year** | **Sales** | **Cost** | **Profit** | **ROI** |'
  prefs: []
  type: TYPE_TB
- en: '| 2015 | 23455 | 18294.9 | 5160.1 | 28.21% |'
  prefs: []
  type: TYPE_TB
- en: '| 2016 | 19226 | 12881.42 | 6344.58 | 49.25% |'
  prefs: []
  type: TYPE_TB
- en: '| 2017 | 34557 | 24881.04 | 9675.96 | 38.89% |'
  prefs: []
  type: TYPE_TB
- en: '| 2018 | 20134 | 14697.82 | 5436.18 | 36.99% |'
  prefs: []
  type: TYPE_TB
- en: '| 2019 | 22314 | 14057.82 | 8256.18 | 58.73% |'
  prefs: []
  type: TYPE_TB
- en: 'Also consider the following data:'
  prefs: []
  type: TYPE_NORMAL
- en: <td">20134
  prefs: []
  type: TYPE_NORMAL
- en: '| **Year** | **SalesA** | **CostA** | **ProfitA** | **SalesB** | **CostB**
    | **ProfitB** |'
  prefs: []
  type: TYPE_TB
- en: '| 2015 | 23455 | 18294.9 | 5160.1 | 23455 | 18294.9 | 5160.1 |'
  prefs: []
  type: TYPE_TB
- en: '| 2016 | 19226 | 12881.42 | 6344.58 | 19226 | 12881.42 | 6344.58 |'
  prefs: []
  type: TYPE_TB
- en: '| 2017 | 34557 | 24881.04 | 9675.96 | 34557 | 24881.04 | 9675.96 |'
  prefs: []
  type: TYPE_TB
- en: '| 2018 | 20134 | 14697.82 | 5436.18 | 14697.82 | 5436.18 |'
  prefs: []
  type: TYPE_TB
- en: '| 2019 | 22314 | 14057.82 | 8256.18 | 22314 | 14057.82 | 8256.18 |'
  prefs: []
  type: TYPE_TB
- en: Type this data into an Excel worksheet so that you can create the charts shown
    in the following sections.
  prefs: []
  type: TYPE_NORMAL
- en: The basic parts of an Excel diagram
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'An Excel chart has different parts and it is important to know their names
    so that we can modify the chart at will. The following chart shows them in detail:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/b2057b21-6468-496e-83da-5fd7ce1ca045.png)'
  prefs: []
  type: TYPE_IMG
- en: The *x* axis represents the data categories and the *y* axis the data series.
  prefs: []
  type: TYPE_NORMAL
- en: All charts shown in the following subsections can be created by selecting the
    data range and navigating to Insert | Recommended Charts. There, we see previews
    and select the one that better tells the story of our data.
  prefs: []
  type: TYPE_NORMAL
- en: Column charts
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Clustered column charts can be used when you want to show between two and four
    different data series in the same chart. To plot only one series does not make
    sense, and more than four might look cluttered. Look at the following example:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/5e0a8d62-948f-49fa-8ad4-f4958504efe5.png)'
  prefs: []
  type: TYPE_IMG
- en: 'In this case, it certainly looks better if we split the data, for example,
    to show a smaller group of years and to switch the time series and categories
    (see the following chart):'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/c127445c-8054-4726-8099-ac04f9ac4a48.png)'
  prefs: []
  type: TYPE_IMG
- en: The series in the column charts should be expressed in the same units, otherwise
    they cannot be compared, or their comparison might be misguiding.
  prefs: []
  type: TYPE_NORMAL
- en: Combination charts
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'If we need to show data series expressed in different units, we can use combination
    charts. The basic difference is that these charts have two vertical axes with
    different units of measurement. The following chart shows an example of this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/e7543c24-c99a-467f-b551-4b18091c506d.png)'
  prefs: []
  type: TYPE_IMG
- en: In this case, the primary vertical axis (left) is expressed in currency units
    and the secondary vertical axis in percentages.
  prefs: []
  type: TYPE_NORMAL
- en: Stacked charts
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'This type of chart is used when it is important to point out the importance
    of the relative values in the data series. For example, *Cost + Profit = Sales*.
    We can see that it is easy to compare the values at first sight, as in the following
    chart:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/e85785d6-8cd8-4b15-ab67-498182a544b7.png)'
  prefs: []
  type: TYPE_IMG
- en: This chart can be created by first including the **Cost** and **Profit** variables
    and then adding **Sales**.
  prefs: []
  type: TYPE_NORMAL
- en: Pie and bar charts
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'A pie chart is useful to compare many series. As an example we will use the
    results of the 2016 US President Election in the state of Oregon, listed in the
    following table:'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Candidate** | **Votes** |'
  prefs: []
  type: TYPE_TB
- en: '| Clinton, Hillary | 1,002,106 |'
  prefs: []
  type: TYPE_TB
- en: '| Trump, Donald J. | 782,403 |'
  prefs: []
  type: TYPE_TB
- en: '| Johnson, Gary | 94,231 |'
  prefs: []
  type: TYPE_TB
- en: '| Other | 72,594 |'
  prefs: []
  type: TYPE_TB
- en: '| Stein, Jill | 50,002 |'
  prefs: []
  type: TYPE_TB
- en: 'The resulting pie chart is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/9fd014e6-3538-4471-aa52-9c4f31b8aa95.png)'
  prefs: []
  type: TYPE_IMG
- en: The same results can be shown in a bar chart, and the differences in the number
    of votes are easier to compare.
  prefs: []
  type: TYPE_NORMAL
- en: Change the chart type to a bar chart by right-clicking on any part of the diagram.
  prefs: []
  type: TYPE_NORMAL
- en: 'The bar chart will look similar to the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/6f8bf82a-45a4-4b35-8dc1-c0832c583ece.png)'
  prefs: []
  type: TYPE_IMG
- en: We know now how to choose the best diagrams for each type of data. In the following
    section, we will study one of the most important and most often used diagrams
    when previewing data using histograms.
  prefs: []
  type: TYPE_NORMAL
- en: Building data distributions using histograms
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We used histograms in [Chapter 5](0da64bd8-0bc9-491b-875c-7ec7c35c6165.xhtml),
    *Correlations and the Importance of Variables*, without formally introducing them.
    This type of chart shows the count of values, either numerical or categorical.
    To show numerical data, we can build categories, as we did with the age of the
    Titanic passengers:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/d5498252-31dc-431f-b6cf-9e003a9b3fe4.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Or, we could have used the age variable as a number and distributed the values
    in bins (groups of data points falling between the same numerical range):'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/dec739e7-a32f-458b-a2cc-2d2218a0aca6.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The preceding histogram was created following these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to Insert | Histogram.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Double-click the *x* axis to set the number of bins to `15`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We can immediately see a large amount of entries in the first bin corresponding
    to the missing age values, which we defined as `-1` to identify them easily. We
    also notice that the larger number of passengers were between 20 and 26 years
    old and that the distribution is not symmetrical; it seems to show an exponential
    decay toward older ages and a much faster decrease in younger ones. This can be
    interpreted by thinking about the fact that not many small children travelled
    in a transatlantic ship (at least at the time of the Titanic sinking).
  prefs: []
  type: TYPE_NORMAL
- en: You will also notice that histograms are an excellent graphical method for spotting
    **outliers***;* that is, data points that do not follow the same distribution
    as the rest. In our current example, missing values are also outliers.
  prefs: []
  type: TYPE_NORMAL
- en: 'Another useful application of histograms is in comparing values when there
    are a large number of items to compare. Let''s suppose that we made a prediction
    using a machine learning model. We are predicting a numerical value and we want
    to compare it with the real one to test our model. We can then, for each set of
    feature values, plot the difference between the real and predicted values. If
    our model is a good predictor, we should see something like the following chart:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/1954a396-c53f-4c9f-bd01-3b44388b24ba.png)'
  prefs: []
  type: TYPE_IMG
- en: The distribution is centered at **0** and is mostly symmetrical, with a few
    large values toward the right. These are, obviously, bad predictions.
  prefs: []
  type: TYPE_NORMAL
- en: We have seen that histograms are a valuable tool for identifying different characteristics
    of the datasets. Let's concentrate now on more complex data representations.
  prefs: []
  type: TYPE_NORMAL
- en: Representing geographical distribution of data in maps
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Localizing information in a map is extremely useful to understand data in the
    spatial dimension, which is often difficult by other means. Excel offers different
    options and we are going to show a couple of them. We will start by using data
    containing geographical coordinates, that is, latitude and longitude. The widespread
    use of the GPS system nowadays makes it easy to obtain this information. In any
    case, if this precise information is not available, we will see that the built-in
    information in Excel will still make it simple to draw maps and show us useful
    information.
  prefs: []
  type: TYPE_NORMAL
- en: In our first example, we will use data from the *Massachusetts Institute of
    Technology Election Data and Science Lab* about the 1976 US presidential election.
    The `1976USpresident.xlsx` file contains, among other information, the list of
    US states and the vote count for each presidential candidate. We would like to
    put this information in a map, resembling those shown in the news with Republican
    states colored in red and Democrat states colored in blue.
  prefs: []
  type: TYPE_NORMAL
- en: 'The input data table is the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/df484c6a-3796-4d6a-bb51-041858bba131.png)'
  prefs: []
  type: TYPE_IMG
- en: From this table, we need to extract the winner party in each state, namely the
    one with more votes. We will use Power Query and its Group By function.
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to Data | From Table/Range.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Open the Power Query window. You should see something similar to the following
    screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/fff0bfff-155b-48b5-b9ee-86b68df4bb36.png)'
  prefs: []
  type: TYPE_IMG
- en: Select Group By | Advanced then select state for the Group by option.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Then, we will add a new column called `Winner`, where we will Sum the values
    of party*.* This will give an error, but will give us the base function to get
    the winner party name later.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The second column we will add is named `Votes`, where we select the maximum
    value of candidatevotes*.* This will show the larger number of votes in each state.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The following screenshot shows how the window should look like after selecting
    the detailed options:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/815bad01-3b77-4ceb-88ca-8701aa8b1aa0.png)'
  prefs: []
  type: TYPE_IMG
- en: 'After clicking OK, the resulting table is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/c5f0dc79-21fd-4639-863b-74cdd8c4eb12.png)'
  prefs: []
  type: TYPE_IMG
- en: 'To fix the error and get the party name in the `Winner` column, we replace
    the function:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '*= Table.Group(#"Changed Type", {"state"}, {{"Winner", each List.**Sum**([party]),
    type text}, {"Votes", each List.Max([candidatevotes]), type number}})*'
  prefs: []
  type: TYPE_NORMAL
- en: 'We replace the preceding function with the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '*= Table.Group(#"Changed Type", {"state"}, {{"Winner", each List.**First**([party]),
    type text}, {"Votes", each List.Max([candidatevotes]), type number}})*'
  prefs: []
  type: TYPE_NORMAL
- en: 'This will show the winning party, like in the following table:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/b83d7488-698f-4d30-bf6d-9951dff8fbca.png)'
  prefs: []
  type: TYPE_IMG
- en: Click on Close & Load.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Use the generated table to create the map. Select any cell in the table and
    then navigate to Insert | Recommended Charts. The first suggestion will be a map
    like the one we want.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click OK.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Change the title and colors by double-clicking on the legends. The resulting
    map is as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/57061ee7-e0e1-41b2-945f-e9fbcb2a1b55.png)'
  prefs: []
  type: TYPE_IMG
- en: Our second example will use data from the Argentinean Government public database
    (`datos.gob.ar`). The latitude and longitude of all underground stations in Buenos
    Aires is listed, together with their names and the lines they belong to.
  prefs: []
  type: TYPE_NORMAL
- en: The nickname of the Buenos Aires underground is **Subte**, a short form of the
    word **subterráneo (underground)**, hence the name of the file.
  prefs: []
  type: TYPE_NORMAL
- en: Geographical coordinates are not accepted as input in regular Excel maps, so
    we are going to show the 3D Maps functions, which also has other advantages.
  prefs: []
  type: TYPE_NORMAL
- en: 'Perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Load the `subte.xlsx` file and you will see the following table (partially
    shown):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/bb3568c2-34a3-4a4a-ae2f-40a5657216d9.png)'
  prefs: []
  type: TYPE_IMG
- en: Select the full data range.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Navigate to Insert | 3D Map. You should see something similar to the following
    screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/3b45695a-6cad-47c2-9986-33c67434dde0.png)'
  prefs: []
  type: TYPE_IMG
- en: Should the icon be greyed out, refer link [https://support.office.com/en-ie/article/get-started-with-3d-maps-6b56a50d-3c3e-4a9e-a527-eea62a387030](https://support.office.com/en-ie/article/get-started-with-3d-maps-6b56a50d-3c3e-4a9e-a527-eea62a387030) for
    step-by-step instructions to activate 3D Maps.
  prefs: []
  type: TYPE_NORMAL
- en: 'Click on New tour as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/7128a2d2-75a5-48a5-bb7e-b357995dfbac.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The 3D Maps window will open, showing the default view of Earth, as seen in
    the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/a465bb88-e5dc-463a-9120-e85e3ea64955.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Add two fields to the Location window: `Long` and `Lat`. They should be automatically
    assigned to the corresponding variables. If not, select them from the menu to
    the right of the names (see the following screenshot).'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The map should now be centered in the city of Buenos Aires, but the zoom might
    still be too far out.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Zoom in by scrolling with your mouse or using the + button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the Category field, add Line, since we want to distinguish between the different
    groups of stations.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The map will look similar to this screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/d752667f-0273-4c09-9c0a-f2b01ccacf06.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Let''s improve it a little. Instead of those large columns representing each
    station, we want small symbols. To achieve this, perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Click on Layer Options.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Set Height to 0% and Thickness to between 50% and 70%.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'You can also change the color for each line (category). As in many other cities,
    the Subte lines are identified by colors. A is light blue, B is red, C is blue,
    D is green, E is purple, and H is yellow (what happened to F and G? They, and
    I, are not yet built). The final result is shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/49ffe5e5-ee94-42dc-ab83-a3df9f852421.png)'
  prefs: []
  type: TYPE_IMG
- en: 'One last thing we can do, since 3D Maps can be used interactively, is to add
    useful information to the data card (or tool tip, as it is usually called in visualizations).
    To do this, perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Click on the Customize button (below Data Card) and you can see that, by default,
    the three variables included so far are there (see the following sample screenshot):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/8320b081-90ed-4d16-94db-647a3c3ab8be.png)'
  prefs: []
  type: TYPE_IMG
- en: Delete Lat and Long by clicking on the red X.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Add Station.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'After this, if we move the mouse over any of the symbols representing the underground
    stations, we will see its name and the line it belongs to, like in the following
    screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/ba7d6320-53cc-4f20-8142-c9f40d5f44b1.png)'
  prefs: []
  type: TYPE_IMG
- en: We now know how to use Excel to usefully represent geographical data, using
    both the names of places or GPS coordinates.
  prefs: []
  type: TYPE_NORMAL
- en: In our last example, we will revisit time series to show the different ways
    of representing them.
  prefs: []
  type: TYPE_NORMAL
- en: Showing data that changes over time
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In previous chapters, we analyzed time series in detail. We mainly used line
    charts to represent the evolution of the data. Can time evolution be represented
    in a different way? We know from experience that lines can be misguiding when
    we want to compare two values, and that other methods are better.
  prefs: []
  type: TYPE_NORMAL
- en: 'Going back to the US election data, suppose we want to compare the time evolution
    of the two major parties, Democrat and Republican, in one state, over several
    years. Perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Load the `1976_2016USpresident.xlsx` file in Excel and you will see the same
    information in the table that we used in the previous section, except that we
    can now see the results corresponding to every election in every state from 1976
    to 2016.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select one state at random (California, in our case) and try to compare how
    the number of votes per party changed with time.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Navigate to Data | From Table/Range.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the Power Query window, click on Choose Columns.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Select only the columns we are interested in: `year`, `state`, `party`, `candidatevotes`,
    and `totalvotes`, as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/c6fd352a-ba0b-40e7-bc77-a2b3d714bcad.png)'
  prefs: []
  type: TYPE_IMG
- en: Add a new column by clicking on Add Column | Custom Column to calculate the
    percentage of votes by party, that is, *[candidatevotes]/[totalvotes]*.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Change the type of that column to Percentage (in Home | Data Type). The result
    is similar to what is shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/ed4b2186-c245-4085-9912-724b589af8ed.png)'
  prefs: []
  type: TYPE_IMG
- en: Filter the rows to leave only `state` as `California` and `party` as `republican`
    or `democrat`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'We need to format the table in such a way that we can compare both time series
    in a meaningful way. To do this, perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Select the `party` column.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Navigate to Transform.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Click on Pivot Column. The pop-up window should look like the following screenshot
    before clicking OK:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/16c9fe33-0ecf-4780-bd78-cf4fb95364d2.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The result is the following table:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/71deb815-90bc-4534-91a9-2bc620b90a55.png)'
  prefs: []
  type: TYPE_IMG
- en: 'We will now repeat some steps that we have used before, so I will explain them
    quickly:'
  prefs: []
  type: TYPE_NORMAL
- en: Select both `%` columns.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Navigate to Transform | Replace Values.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Change all `nulls` to zeroes.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Use Home | Group By to group by state.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select Sum as aggregation.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The last step would be to create another column to account for the difference
    between the percentage of Democrat and Republican votes and the total:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '*100%- % republican -% democrat*'
  prefs: []
  type: TYPE_NORMAL
- en: 'This will give us the percentage of votes going to other parties. The table
    we will use to create the diagram is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/ce0aa87f-4f2c-4179-89e3-a9f532a67d4e.png)'
  prefs: []
  type: TYPE_IMG
- en: Click on any cell in the chart.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Navigate to Insert | Recommended Charts.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Choose Stacked Bars.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The result will be something similar to the following diagram:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/77ce6480-6b90-4c08-9fdd-872eab45712e.png)'
  prefs: []
  type: TYPE_IMG
- en: It is clear that this type of chart is better for comparing the amount of votes
    obtained by each party and other details of the data. For example, we immediately
    see that, in 1992, both parties, but especially Republican, lost votes to other,
    non-traditional parties.
  prefs: []
  type: TYPE_NORMAL
- en: 'Hint: search for `Ross Perot` in Google.'
  prefs: []
  type: TYPE_NORMAL
- en: We have shown there are other ways of showing the information contained in a
    time series beyond the line charts. You can now experiment with other types of
    charts, depending on the information you need to display.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We have discussed different types of diagrams in Excel, which can be used to
    compare variables and show data in meaningful ways, helping us to extract value
    from our results.
  prefs: []
  type: TYPE_NORMAL
- en: We can now go back to the pure machine learning models and take a leap forward
    to the advanced world of neural networks.
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: What types of data can be represented in charts? Make a list and think about
    the best charts to use in each case.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What happens when you try to use a pie chart to show more than five or six data
    series?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What type of chart would be a good alternative to stacked bars?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Try using other geographical data (for example, street addresses) to create
    a diagram.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Can you use the US President election data to predict the results for 2020?
    In principle, it should be possible to forecast the values of the time series.
    Try it and think about the accuracy of the predictions and the possible explanations.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Further reading
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*The Visual Display of Quantitative Information*, by Edward R.Tufte'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Storytelling with Data: A Data Visualization Guide for Business Professionals*,
    by Cole Nussbaumer Knaflic'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
