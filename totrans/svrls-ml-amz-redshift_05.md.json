["```py\n    Create schema chapter5_buildfirstmodel;\n    ```", "```py\n    CREATE TABLE IF NOT EXISTS chapter5_buildfirstmodel.customer_calls_fact (\n    ```", "```py\n    state varchar(2),\n    ```", "```py\n    account_length int,\n    ```", "```py\n    area_code int,\n    ```", "```py\n    phone varchar(8),\n    ```", "```py\n    intl_plan varchar(3),\n    ```", "```py\n    vMail_plan varchar(3),\n    ```", "```py\n    vMail_message int,\n    ```", "```py\n    day_mins float,\n    ```", "```py\n    day_calls int,\n    ```", "```py\n    day_charge float,\n    ```", "```py\n    total_charge float,\n    ```", "```py\n    eve_mins float,\n    ```", "```py\n    eve_calls int,\n    ```", "```py\n    eve_charge float,\n    ```", "```py\n    night_mins float,\n    ```", "```py\n    night_calls int,\n    ```", "```py\n    night_charge float,\n    ```", "```py\n    intl_mins float,\n    ```", "```py\n    intl_calls int,\n    ```", "```py\n    intl_charge float,\n    ```", "```py\n    cust_serv_calls int,\n    ```", "```py\n    churn varchar(6),\n    ```", "```py\n    record_date date)\n    ```", "```py\n    Diststyle AUTO;\n    ```", "```py\n            COPY  chapter5_buildfirstmodel.customer_calls_fact\n    ```", "```py\n    FROM 's3://packt-serverless-ml-redshift/chapter05/customerdime/'\n    ```", "```py\n    IAM_ROLE default\n    ```", "```py\n    delimiter ',' IGNOREHEADER 1\n    ```", "```py\n    region 'eu-west-1';\n    ```", "```py\n    SELECT churn, count(*) Customer_Count FROM chapter5_buildfirstmodel.customer_calls_fact\n    ```", "```py\n    GROUP BY churn\n    ```", "```py\n    ;\n    ```", "```py\nCREATE MODEL model_name\n    FROM { table_name | ( select_query ) }\n    TARGET column_name\n    FUNCTION prediction_function_name\n    IAM_ROLE { default }\n    SETTINGS (\n      S3_BUCKET 'bucket',\n      [ MAX_CELLS integer ]\n    )\n```", "```py\n    select sum(case when record_date <'2020-08-01' then 1 else 0 end) as Training_Data_Set,\n    ```", "```py\n    sum(case when record_date >'2020-07-31' then 1 else 0 end) as Test_Data_Set\n    ```", "```py\n    from chapter5_buildfirstmodel.customer_calls_fact\n    ```", "```py\n    CREATE MODEL chapter5_buildfirstmodel.customer_churn_model\n    ```", "```py\n    FROM (SELECT state,\n    ```", "```py\n                  account_length,\n    ```", "```py\n                  area_code,\n    ```", "```py\n                  phone,\n    ```", "```py\n                  intl_plan,\n    ```", "```py\n                  vMail_plan,\n    ```", "```py\n                  vMail_message,\n    ```", "```py\n                  day_mins,\n    ```", "```py\n                  day_calls,\n    ```", "```py\n                  day_charge,\n    ```", "```py\n                  total_charge,\n    ```", "```py\n                  eve_mins,\n    ```", "```py\n                  eve_calls,\n    ```", "```py\n                  eve_charge,\n    ```", "```py\n                  night_mins,\n    ```", "```py\n                  night_calls,\n    ```", "```py\n                  night_charge,\n    ```", "```py\n                  intl_mins,\n    ```", "```py\n                  intl_calls,\n    ```", "```py\n                  intl_charge,\n    ```", "```py\n                  cust_serv_calls,\n    ```", "```py\n                 replace(churn,'.','') as churn\n    ```", "```py\n          FROM chapter5_buildfirstmodel.customer_calls_fact\n    ```", "```py\n             WHERE record_date < '2020-08-01'\n    ```", "```py\n         )\n    ```", "```py\n    TARGET churn\n    ```", "```py\n    FUNCTION predict_customer_churn\n    ```", "```py\n    IAM_ROLE default\n    ```", "```py\n    SETTINGS (\n    ```", "```py\n      S3_BUCKET 'serverlessmachinelearningwithredshift-<your account id>',\n    ```", "```py\n      MAX_RUNTIME 1800\n    ```", "```py\n    )\n    ```", "```py\n    ;\n    ```", "```py\nSHOW MODEL chapter5_buildfirstmodel.customer_churn_model;\n```", "```py\nSHOW MODEL chapter5_buildfirstmodel.customer_churn_model;\n```", "```py\nSELECT area_code ||phone  accountid, replace(churn,'.','') as Actual_churn_class,\n    chapter5_buildfirstmodel.predict_customer_churn(\n      state,account_length,area_code, phone,intl_plan,\n      vMail_plan, vMail_message, day_mins, day_calls,\n      day_charge, total_charge, eve_mins, eve_calls,\n      eve_charge, night_mins, night_calls,\n      night_charge, intl_mins, intl_calls, intl_charge,\n      cust_serv_calls) AS predicted_class,\n      chapter5_buildfirstmodel.predict_customer_churn_prob(\n      state, account_length, area_code, phone, intl_plan,\n      vMail_plan, vMail_message, day_mins, day_calls,\n      day_charge, total_charge, eve_mins, eve_calls,\n      eve_charge, night_mins, night_calls,night_charge,\n      intl_mins, intl_calls, intl_charge, cust_serv_calls)\n      AS probability_score\n  FROM chapter5_buildfirstmodel.customer_calls_fact\nWHERE record_date > '2020-07-31'\n;\n```", "```py\nWITH infer_data AS (\n  SELECT area_code ||phone  accounted,\n    replace(churn,'.','') as churn,\n    chapter5_buildfirstmodel.predict_customer_churn(\n              state,\n              account_length,\n              area_code,\n              phone,\n              intl_plan,\n              vMail_plan,\n              vMail_message,\n              day_mins,\n              day_calls,\n              day_charge,\n              total_charge,\n              eve_mins,\n              eve_calls,\n              eve_charge,\n              night_mins,\n              night_calls,\n              night_charge,\n              intl_mins,\n              intl_calls,\n              intl_charge,\n              cust_serv_calls) AS predicted\n  FROM chapter5_buildfirstmodel.customer_calls_fact\nWHERE record_date > '2020-07-31'\n)\nSELECT *  FROM infer_data where churn!=predicted;\n```", "```py\nSelect jsondata.featureimp.explanations.kernel_shap.label0.global_shap_values as value\nfrom ( select explain_model( 'chapter5_buildfirstmodel.customer_churn_model')as featureimp) jsondata ;\n```", "```py\nselect t1.feature_imp, t1.value from\n(\nSelect\n'account_length' as feature_imp,\njsondata.featureimp.explanations.kernel_shap.label0.global_shap_values.account_length as value\nfrom ( select explain_model( 'chapter5_buildfirstmodel.customer_churn_model')as featureimp) jsondata\nunion\nselect 'area_code' as feature_imp ,\njsondata.featureimp.explanations.kernel_shap.label0.global_shap_values.area_code as value\nfrom ( select explain_model( 'chapter5_buildfirstmodel.customer_churn_model')as featureimp) jsondata\nunion\nselect 'cust_serv_calls' as feature_imp ,\njsondata.featureimp.explanations.kernel_shap.label0.global_shap_values.cust_serv_calls as value\nfrom ( select explain_model( 'chapter5_buildfirstmodel.customer_churn_model')as featureimp) jsondata\nunion\nselect 'day_calls' as feature_imp ,\njsondata.featureimp.explanations.kernel_shap.label0.global_shap_values.day_calls as value\nfrom ( select explain_model( 'chapter5_buildfirstmodel.customer_churn_model')as featureimp) jsondata\nunion\nselect 'day_charge' as feature_imp ,\njsondata.featureimp.explanations.kernel_shap.label0.global_shap_values.day_charge as value\nfrom ( select explain_model( 'chapter5_buildfirstmodel.customer_churn_model')as featureimp) jsondata \nunion\nselect 'day_mins' as feature_imp ,\njsondata.featureimp.explanations.kernel_shap.label0.global_shap_values.day_mins as value\nfrom ( select explain_model( 'chapter5_buildfirstmodel.customer_churn_model')as featureimp) jsondata\nunion\nselect 'eve_calls' as feature_imp ,\njsondata.featureimp.explanations.kernel_shap.label0.global_shap_values.eve_calls  as value\nfrom ( select explain_model( 'chapter5_buildfirstmodel.customer_churn_model')as featureimp) jsondata\nunion\nselect 'eve_charge' as feature_imp ,\njsondata.featureimp.explanations.kernel_shap.label0.global_shap_values.eve_charge  as value\nfrom ( select explain_model( 'chapter5_buildfirstmodel.customer_churn_model')as featureimp) jsondata\nunion\nselect 'eve_mins' as feature_imp ,\njsondata.featureimp.explanations.kernel_shap.label0.global_shap_values.eve_mins  as value\nfrom ( select explain_model( 'chapter5_buildfirstmodel.customer_churn_model')as featureimp) jsondata\nunion\nselect 'intl_calls' as feature_imp ,\njsondata.featureimp.explanations.kernel_shap.label0.global_shap_values.intl_calls   as value\nfrom ( select explain_model( 'chapter5_buildfirstmodel.customer_churn_model')as featureimp) jsondata\nunion\nselect 'intl_charge' as feature_imp ,\njsondata.featureimp.explanations.kernel_shap.label0.global_shap_values.intl_charge   as value\nfrom ( select explain_model( 'chapter5_buildfirstmodel.customer_churn_model')as featureimp) jsondata\nunion\nselect 'intl_mins' as feature_imp ,\njsondata.featureimp.explanations.kernel_shap.label0.global_shap_values.intl_mins    as value\nfrom ( select explain_model( 'chapter5_buildfirstmodel.customer_churn_model')as featureimp) jsondata\nunion\nselect 'intl_plan' as feature_imp ,\njsondata.featureimp.explanations.kernel_shap.label0.global_shap_values.intl_plan     as value\nfrom ( select explain_model( 'chapter5_buildfirstmodel.customer_churn_model')as featureimp) jsondata\nunion\nselect 'inight_calls' as feature_imp ,\njsondata.featureimp.explanations.kernel_shap.label0.global_shap_values.night_calls     as value\nfrom ( select explain_model( 'chapter5_buildfirstmodel.customer_churn_model')as featureimp) jsondata\nunion\nselect 'night_charge' as feature_imp ,\njsondata.featureimp.explanations.kernel_shap.label0.global_shap_values.night_charge    as value\nfrom ( select explain_model( 'chapter5_buildfirstmodel.customer_churn_model')as featureimp) jsondata\nunion\nselect 'night_mins' as feature_imp ,\njsondata.featureimp.explanations.kernel_shap.label0.global_shap_values.night_mins   as value\nfrom ( select explain_model( 'chapter5_buildfirstmodel.customer_churn_model')as featureimp) jsondata\nunion\nselect 'phone' as feature_imp ,\njsondata.featureimp.explanations.kernel_shap.label0.global_shap_values.phone   as value\nfrom ( select explain_model( 'chapter5_buildfirstmodel.customer_churn_model')as featureimp) jsondata\nunion\nselect 'state' as feature_imp ,\njsondata.featureimp.explanations.kernel_shap.label0.global_shap_values.state   as value\nfrom ( select explain_model( 'chapter5_buildfirstmodel.customer_churn_model')as featureimp) jsondata\nunion\nselect 'total_charge' as feature_imp ,\njsondata.featureimp.explanations.kernel_shap.label0.global_shap_values.total_charge   as value\nfrom ( select explain_model( 'chapter5_buildfirstmodel.customer_churn_model')as featureimp) jsondata\nunion\nselect 'vmail_message' as feature_imp ,\njsondata.featureimp.explanations.kernel_shap.label0.global_shap_values.vmail_message   as value\nfrom ( select explain_model( 'chapter5_buildfirstmodel.customer_churn_model')as featureimp) jsondata\nunion\nselect 'vmail_plan' as feature_imp ,\njsondata.featureimp.explanations.kernel_shap.label0.global_shap_values.vmail_plan  as value\nfrom ( select explain_model( 'chapter5_buildfirstmodel.customer_churn_model')as featureimp) jsondata\n) t1\norder by value desc\n```", "```py\nWITH infer_data AS (\n  SELECT area_code ||phone  accountid, replace(churn,'.','') as churn,\n    chapter5_buildfirstmodel.predict_customer_churn(\n          state,  account_length, area_code, phone,\n          intl_plan, vMail_plan, vMail_message, day_mins,\n          day_calls,  day_charge, total_charge, eve_mins,\n          eve_calls, eve_charge, night_mins, night_calls,\n          night_charge, intl_mins, intl_calls,\n          intl_charge,   cust_serv_calls) AS predicted\n  FROM chapter5_buildfirstmodel.customer_calls_fact\nWHERE record_date > '2020-07-31'),\nconfusionmatrix as\n(\nSELECT case when churn  ='True' and predicted = 'True' then 1 else 0 end TruePositives,\ncase when churn ='False' and predicted = 'False' then 1 else 0 end TrueNegatives,\ncase when churn ='False' and predicted = 'True' then 1 else 0 end FalsePositives,\ncase when churn ='True' and predicted = 'False' then 1 else 0 end FalseNegatives\n  FROM infer_data\n )\nselect\nsum(TruePositives+TrueNegatives)*1.00/(count(*)*1.00) as Accuracy,--accuracy of the model,\nsum(FalsePositives+FalseNegatives)*1.00/count(*)*1.00 as Error_Rate, --how often model is wrong,\nsum(TruePositives)*1.00/sum (TruePositives+FalseNegatives) *1.00 as True_Positive_Rate, --or recall how often corrects are rights,\nsum(FalsePositives)*1.00/sum (FalsePositives+TrueNegatives )*1.00 False_Positive_Rate, --or fall-out how often model said yes when it is no,\nsum(TrueNegatives)*1.00/sum (FalsePositives+TrueNegatives)*1.00 True_Negative_Rate, --or specificity, how often model said no when it is yes,\nsum(TruePositives)*1.00 / (sum (TruePositives+FalsePositives)*1.00) as Precision, -- when said yes how it is correct,\n2*((True_Positive_Rate*Precision)/ (True_Positive_Rate+Precision) ) as F_Score --weighted avg of TPR & FPR\nFrom confusionmatrix\n;\n```"]