["```py\n > install.packages(\"quantmod\")\n > install.packages(\"neuralnet\")\n > library(quantmod)\n > library(neuralnet)\n\n```", "```py\n> startDate = as.Date(\"2009-01-01\")\n\n```", "```py\n> endDate = as.Date(\"2014-01-01\")\n\n```", "```py\n> getSymbols(\"^GSPC\", src=\"img/yahoo\", from=startDate, to=endDate)\n\n```", "```py\n> relativeStrengthIndex3 <- RSI(Op(GSPC),n=3)\n\n```", "```py\n> summary(relativeStrengthIndex3)\n\n```", "```py\n> exponentialMovingAverage5 <- EMA(Op(GSPC),n=5)\n\n```", "```py\n> head(exponentialMovingAverage5)\n\n```", "```py\n> summary(exponentialMovingAverage5)\n\n```", "```py\n> exponentialMovingAverageDiff <- Op(GSPC) - exponentialMovingAverage5\n\n```", "```py\n> head(exponentialMovingAverageDiff)\n\n```", "```py\n> summary(exponentialMovingAverageDiff)\n\n```", "```py\n> MACD <- MACD(Op(GSPC),fast = 12, slow = 26, signal = 9)\n\n```", "```py\n> tail(MACD)\n\n```", "```py\n> summary(MACD)\n\n```", "```py\n> MACDsignal <- MACD[,2]\n\n```", "```py\n> BollingerBands <- BBands(Op(GSPC),n=20,sd=2)\n\n```", "```py\n> tail(BollingerBands)\n\n```", "```py\n> summary(BollingerBands)\n\n```", "```py\n> PercentageChngpctB <- BollingerBands[,4]\n\n```", "```py\n> tail(PercentageChngpctB)\n\n```", "```py\n> summary(PercentageChngpctB)\n\n```", "```py\n> Price <- Cl(GSPC)-Op(GSPC)\n\n```", "```py\n> tail(Price)\n\n```", "```py\n> DataSet <- data.frame(relativeStrengthIndex3, expMvAvg5Cross, MACDsignal, PercentageChngpctB, Price)\n\n```", "```py\n> str(DataSet)\n\n```", "```py\n> DataSet <- DataSet[-c(1:33),]\n\n```", "```py\n> dim(DataSet)\n\n```", "```py\n> colnames(DataSet) <- c(\"RSI3\",\"EMAcross\",\"MACDsignal\",\"BollingerB\",\"Price\")\n\n```", "```py\n> str(DataSet)\n\n```", "```py\n> Normalized <- function(x) {(x-min(x))/(max(x)-min(x))}\n\n```", "```py\n> NormalizedData <- as.data.frame(lapply(DataSet,Normalized))\n\n```", "```py\n> tail(NormalizedData)\n\n```", "```py\n> TrainingSet <- NormalizedData[1:816,]\n\n```", "```py\n> dim(TrainingSet)\n\n```", "```py\n> summary(TrainingSet)\n\n```", "```py\n> TestSet <- NormalizedData[817:1225 ,]\n\n```", "```py\n> dim(TestSet)\n\n```", "```py\n> summary(TestSet)\n\n```", "```py\n> nn1 <- neuralnet(Price~RSI3+EMAcross+MACDsignal+BollingerB,data=TrainingSet, hidden=c(3,3), learningrate=.001,algorithm=\"backprop\")\n\n```", "```py\n> plot(nn1)\n\n```", "```py\n > install.packages(\"forecast \")\n > install.packages(\"lmtest\") \n > install.packages(\"caret \")\n > library(forecast)\n > library(lmtest)\n > library(caret)\n\n```", "```py\n> ud <- read.csv(\"d:/FRED-WIUR.csv\", colClasses=c('Date'='Date'))\n\n```", "```py\n> tail(ud)\n\n```", "```py\n> colnames(ud) <- c('date', 'rate')\n\n```", "```py\n> ud$date <- as.Date(ud$date)\n\n```", "```py\n> summary (ud)\n\n```", "```py\n> ud.b <- ud[1:436,]\n\n```", "```py\n> summary(ud.b)\n\n```", "```py\n> ud.p <- ud[437:448,]\n\n```", "```py\n> summary(ud.p)\n\n```", "```py\n> ud.ts <- ts(ud.b$rate, start=c(1976, 1), frequency=12)\n\n```", "```py\n> ud.ts\n\n```", "```py\n> ud.p.ts <- ts(ud.p$rate, start=c(2012, 5), frequency=12)\n\n```", "```py\n> ud.ts\n\n```", "```py\n> plot.ts(ud.ts)\n\n```", "```py\n> plot.ts(ud.p.ts)\n\n```", "```py\n> mean <- meanf(ud.ts, 12)\n\n```", "```py\n> forecast_randomwalk <- rwf(ud.ts, 12)\n\n```", "```py\n> forecast_arima <- snaive(ud.ts, 12)\n\n```", "```py\n> drift <- rwf(ud.ts, 12, drift=T)\n\n```", "```py\n> m1 <- tslm(ud.ts~trend)\n\n```", "```py\n> m2 <- tslm(ud.ts~trend+season)\n\n```", "```py\n> residual_1 <- residuals(m1)\n\n```", "```py\n> plot(residual_1, ylab=\"Residuals\",xlab=\"Year\", title(\"Residual - Trends\"), col = \"red\")\n\n```", "```py\n> acf(residual_1, main=\"ACF of residuals\")\n\n```", "```py\n> residual_2 <- residuals(m2)\n\n```", "```py\n> plot(residual_2, ylab=\"Residuals\",xlab=\"Year\",title(\"Residual - Trends + Seasonality\"), col = \"red\")\n\n```", "```py\n> acf(residual_2, main=\"ACF of residuals\")\n\n```", "```py\n> dwtest(m1, alt=\"two.sided\")\n\n```", "```py\n > dwtest(m2, alt=\"two.sided\")\n\n```", "```py\n> m3 <- stl(ud.ts, s.window='periodic')\n\n```", "```py\n> plot(m3)\n\n```", "```py\n> m4 <- ets(ud.ts, model='ZZZ')\n\n```", "```py\n> plot(m4)\n\n```", "```py\n> m5 <- auto.arima(ud.ts)\n\n```", "```py\n> plot(forecast(m5, h=12))\n\n```", "```py\n> m6 <- nnetar(ud.ts)\n\n```", "```py\n> m6\n\n```", "```py\n> plot(forecast(m6, h=12))\n\n```", "```py\n> a1 <- accuracy(mean, ud.p.ts)\n\n```", "```py\n> a2 <- accuracy(forecast_randomwalk, ud.p.ts)\n\n```", "```py\n> a3 <- accuracy(forecast_arima, ud.p.ts)\n\n```", "```py\n> a4 <- accuracy(drift, ud.p.ts)\n\n```", "```py\n> a.table <- rbind(a1, a2, a3, a4)\n\n```", "```py\n> a.table\n\n```", "```py\n> f1 <- forecast(m1, h=12)\n\n```", "```py\n> f2 <- forecast(m2, h=12)\n\n```", "```py\n> f3 <- forecast(m3, h=12)\n\n```", "```py\n> f4 <- forecast(m4, h=12)\n\n```", "```py\n> f5 <- forecast(m5, h=12)\n\n```", "```py\n> f6 <- forecast(m6, h=12)\n\n```", "```py\n> a5 <- accuracy(f1, ud.p.ts)\n\n```", "```py\n> a6 <- accuracy(f2, ud.p.ts)\n\n```", "```py\n> a7 <- accuracy(f3, ud.p.ts)\n\n```", "```py\n> a8 <- accuracy(f4, ud.p.ts)\n\n```", "```py\n> a9 <- accuracy(f5, ud.p.ts)\n\n```", "```py\n> a10 <- accuracy(f6, ud.p.ts)\n\n```", "```py\n> a.table.1 <- rbind(a5, a6, a7, a8, a9, a10)\n\n```", "```py\n> a.table.1\n\n```"]