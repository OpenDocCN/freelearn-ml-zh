- en: Chapter 1. Getting Started with R and Machine Learning
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This introductory chapter will get you started with the basics of R which include
    various constructs, useful data structures, loops and vectorization. If you are
    already an R wizard, you can skim through these sections and dive right into the
    next part which talks about what machine learning actually represents as a domain
    and the main areas it encompasses. We will also talk about different machine learning
    techniques and algorithms used in each area. Finally, we will conclude by looking
    at some of the most popular machine learning packages in R, some of which we will
    be using in the subsequent chapters.
  prefs: []
  type: TYPE_NORMAL
- en: If you are a data or machine learning enthusiast, surely you would have heard
    by now that being a data scientist is referred to as the sexiest job of the 21^(st)
    century by Harvard Business Review.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Reference: [https://hbr.org/2012/10/data-scientist-the-sexiest-job-of-the-21st-century/](https://hbr.org/2012/10/data-scientist-the-sexiest-job-of-the-21st-century/)'
  prefs: []
  type: TYPE_NORMAL
- en: There is a huge demand in the current market for data scientists, primarily
    because their main job is to gather crucial insights and information from both
    unstructured and structured data to help their business and organization grow
    strategically.
  prefs: []
  type: TYPE_NORMAL
- en: Some of you might be wondering how machine learning or R relate to all this!
    Well, to be a successful data scientist, one of the major tools you need in your
    toolbox is a powerful language capable of performing complex statistical calculations
    and working with various types of data and building models which help you get
    previously unknown insights and R is the perfect language for that! Machine learning
    forms the foundation of the skills you need to build to become a data analyst
    or data scientist, this includes using various techniques to build models to get
    insights from data.
  prefs: []
  type: TYPE_NORMAL
- en: This book will provide you with some of the essential tools you need to be well
    versed with both R and machine learning by not only looking at concepts but also
    applying those concepts in real-world examples. Enough talk; now let's get started
    on our journey into the world of machine learning with R!
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover the following aspects:'
  prefs: []
  type: TYPE_NORMAL
- en: Delving into the basics of R
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Understanding the data structures in R
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Working with functions
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Controlling code flow
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Taking further steps with R
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Understanding machine learning basics
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Familiarizing yourself with popular machine learning packages in R
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Delving into the basics of R
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: It is assumed here that you are at least familiar with the basics of R or have
    worked with R before. Hence, we won't be talking much about downloading and installations.
    There are plenty of resources on the web which provide a lot of information on
    this. I recommend that you use RStudio which is an **Integrated Development Environment**
    (**IDE**), which is much better than the base R **Graphical User Interface** (**GUI**).
    You can visit [https://www.rstudio.com/](https://www.rstudio.com/) to get more
    information about it.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: For details about the R project, you can visit [https://www.r-project.org/](https://www.r-project.org/)
    to get an overview of the language. Besides this, R has a vast arsenal of wonderful
    packages at its disposal and you can view everything related to R and its packages
    at [https://cran.r-project.org/](https://cran.r-project.org/) which contains all
    the archives.
  prefs: []
  type: TYPE_NORMAL
- en: You must already be familiar with the R interactive interpreter, often called
    a **Read-Evaluate-Print** **Loop** (**REPL**). This interpreter acts like any
    command line interface which asks for input and starts with a `>` character, which
    indicates that R is waiting for your input. If your input spans multiple lines,
    like when you are writing a function, you will see a `+` prompt in each subsequent
    line, which means that you didn't finish typing the complete expression and R
    is asking you to provide the rest of the expression.
  prefs: []
  type: TYPE_NORMAL
- en: It is also possible for R to read and execute complete files containing commands
    and functions which are saved in files with an `.R` extension. Usually, any big
    application consists of several `.R` files. Each file has its own role in the
    application and is often called as a module. We will be exploring some of the
    main features and capabilities of R in the following sections.
  prefs: []
  type: TYPE_NORMAL
- en: Using R as a scientific calculator
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The most basic constructs in R include variables and arithmetic operators which
    can be used to perform simple mathematical operations like a calculator or even
    complex statistical calculations.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: You can also assign values to variables and operate on them just like any other
    programming language.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Operating on vectors
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The most basic data structure in R is a vector. Basically, anything in R is
    a vector, even if it is a single number just like we saw in the earlier example!
    A vector is basically a sequence or a set of values. We can create vectors using
    the `:` operator or the `c` function which concatenates the values to create a
    vector.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '**Output:**'
  prefs: []
  type: TYPE_NORMAL
- en: '![Operating on vectors](img/00002.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: You might be confused with the second operation where we tried to multiply a
    smaller vector with a bigger vector but we still got a result! If you look closely,
    R threw a warning also. What happened in this case is, since the two vectors were
    not equal in size, the smaller vector in this case `c(2, 4)` got recycled or repeated
    to become `c(2, 4, 2, 4, 2)` and then it got multiplied with the first vector
    `c(1, 3, 5, 7 ,9)` to give the final result vector, `c(2, 12, 10, 28, 18)`. The
    other functions mentioned here are standard functions available in base R along
    with several other functions.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Downloading the example code**'
  prefs: []
  type: TYPE_NORMAL
- en: You can download the example code files for this book from your account at [http://www.packtpub.com](http://www.packtpub.com).
    If you purchased this book elsewhere, you can visit [http://www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files e-mailed directly to you.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can download the code files by following these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in or register to our website using your e-mail address and password.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hover the mouse pointer on the **SUPPORT** tab at the top
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Click on **Code Downloads & Errata**
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enter the name of the book in the **Search** box
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Select the book for which you're looking to download the code files
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Choose from the drop-down menu where you purchased this book from
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Click on **Code Download**
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  prefs: []
  type: TYPE_NORMAL
- en: WinRAR / 7-Zip for Windows
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zipeg / iZip / UnRarX for Mac
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 7-Zip / PeaZip for Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Special values
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Since you will be dealing with a lot of messy and dirty data in data analysis
    and machine learning, it is important to remember some of the special values in
    R so that you don't get too surprised later on if one of them pops up.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: The functions are pretty self-explanatory from their names. They clearly indicate
    which values are finite, which are finite and checks for `NaN` and `NA` values
    respectively. Some of these functions are very useful when cleaning dirty data.
  prefs: []
  type: TYPE_NORMAL
- en: Data structures in R
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Here we will be looking at the most useful data structures which exist in R
    and use using them on some fictional examples to get a better grasp on their syntax
    and constructs. The main data structures which we will be covering here include:'
  prefs: []
  type: TYPE_NORMAL
- en: Vectors
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Arrays and matrices
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lists
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Data frames
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: These data structures are used widely inside R as well as by various R packages
    and functions, including machine learning functions and algorithms which we will
    be using in the subsequent chapters. So it is essential to know how to use these
    data structures to work with data efficiently.
  prefs: []
  type: TYPE_NORMAL
