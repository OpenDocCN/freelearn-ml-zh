["```py\n    apiVersion: rbac.istio.io/v1alpha1\n    kind: ServiceRoleBinding\n    metadata:\n    name: bind-ml-pipeline-nb-admin\n    namespace: kubeflow\n    spec:\n    roleRef:\n    kind: ServiceRole\n    name: ml-pipeline-services\n    subjects:\n    - properties:\n    source.principal: cluster.local/ns/admin/sa/default-editor \n    ```", "```py\napiVersion: kubeflow.org/v1beta1\nkind: Profile\nmetadata:\nname: test-user\nspec:\nowner:\nkind: User\nname: test-user@kubeflow.org \n```", "```py\n    apiVersion: batch/v1\n    kind: Job\n    metadata:\n    name: train-churn-job\n    spec:\n    template:\n    spec:\n    containers:\n    - name: train-container\n    imagePullPolicy: Always\n    image: <model training uri>\n    command: [\"python\", \"train.py\"]\n          restartPolicy: Never\n    backoffLimit: 4 \n    ```", "```py\napiVersion: \"kubeflow.org/v1\"\nkind: \"TFJob\"\nmetadata:\nname: \"distributed-tensorflow-job\"\nspec:\ntfReplicaSpecs:\nPS:\nreplicas: 1\nrestartPolicy: Never\ntemplate:\nspec:\ncontainers:\n- name: tensorflow\nimage: <model training image uri>\ncommand:\nWorker:\nreplicas: 2\nrestartPolicy: Never\ntemplate:\nspec:\ncontainers:\n- name: tensorflow\nimage: <model training image uri>\ncommand: \n```", "```py\napiVersion: \"serving.kubeflow.org/v1alpha2\"\nkind: \"InferenceService\"\nmetadata:\nname: \"model-name\"\nspec:\ndefault:\npredictor:\ntensorflow:\nstorageUri: <uri to model storage such as s3> \n```", "```py\napiVersion: machinelearning.seldon.io/v1alpha2\nkind: SeldonDeployment\nmetadata:\nname: sklearn\nspec:\nname: sklearn-model\npredictors:\n- graph:\nchildren: []\n      implementation: SKLEARN_SERVER\nmodelUri: <model uri to model artifacts on the cloud storage>\nname: classifier\nname: default\nreplicas: 1 \n```", "```py\napiVersion: machinelearning.seldon.io/v1alpha2\nkind: SeldonDeployment\nmetadata:\nname: canary-deployment\nspec:\nname: canary-deployment\npredictors:\n- componentSpecs:\n- spec:\ncontainers:\n- name: classifier\nimage: <container uri to model version 1>\ngraph:\nchildren: []\n      endpoint:\ntype: REST\nname: classifier\ntype: MODEL\nname: main\nreplicas: 1\ntraffic: 75\n- componentSpecs:\n- spec:\ncontainers:\n- name: classifier\nimage: <container uri to model version 2>\ngraph:\nchildren: []\n      endpoint:\ntype: REST\nname: classifier\ntype: MODEL\nname: canary\nreplicas: 1\ntraffic: 25 \n```", "```py\nfrom airflow import DAG\nfrom airflow.operators.bash_operator import BashOperator\nfrom datetime import datetime, timedelta\ndefault_args = {\n    'owner': myname,\n}\ndag = DAG('test', default_args=default_args, schedule_interval=timedelta(days=1))\nt1 = BashOperator(\n    task_id='print_date',\n    bash_command='date',\n    dag=dag)\nt2 = BashOperator(\n    task_id='sleep',\n    bash_command='sleep 5',\n    retries=3,\n    dag=dag)\nt2.set_upstream(t1) \n```"]