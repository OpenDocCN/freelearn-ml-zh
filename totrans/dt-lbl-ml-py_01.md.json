["```py\nos.environ['AZURE_OPENAI_KEY'] = 'your_api_key'\nos.environ['AZURE_OPENAI_ENDPOINT\") ='your_azure_openai_endpoint'\n```", "```py\n%pip install -r requirements.txt\n```", "```py\n# import libraries for loading dataset\nimport pandas as pd\nimport numpy as np\n# import libraries for plotting\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom matplotlib import rcParams\n%matplotlib inline\nplt.style.use('dark_background')\n# ignore warnings\nimport warnings\nwarnings.filterwarnings('ignore')\n```", "```py\n# loading the dataset\ndf = pd.read_csv(\"<your file path>/adult_income.csv\", encoding='latin-1)'\n```", "```py\ndf.shape\n```", "```py\ndf.columns\n```", "```py\ndf.head()\n```", "```py\ndf.tail()\n```", "```py\n# As we observe education and education.num both are the same , so we can drop one of the columns\ndf.drop(['education.num'], axis = 1, inplace = True)\ndf.drop(['race'], axis = 1, inplace = True)\n```", "```py\ndf.info()\n```", "```py\n#categorical column\ncatogrical_column = [column for column in df.columns if df[column].\ndtypes=='object']\nprint(catogrical_column)\n```", "```py\n#numerical_column\nnumerical_column = [column for column in df.columns if df[column].dtypes !='object']\nprint(numerical_column)\n```", "```py\ndf.describe().T\n```", "```py\ndf.groupby(\"income\")[\"age\"].mean()\n```", "```py\ndf.groupby(\"income\")[\"hours.per.week\"]. mean()\n```", "```py\ndef get_groupby_stats(categorical, numerical):\n    groupby_df = df[[categorical, numerical]].groupby(categorical). \n        mean().dropna()\n    print(groupby_df.head)\n```", "```py\ncolumns_to_show = [\"age\", \"hours.per.week\"]\ndf.groupby([\"income\"])[columns_to_show].agg(['mean', 'std', 'max', 'min'])\n```", "```py\ndf.nunique()\n```", "```py\ndf[\"age\"].value_counts()\n```", "```py\n#univariate analysis\nsns.histplot(data=df['age'],kde=True)\n```", "```py\ndf['education'].value_counts()\nLet us plot the bar chart for education.\ncolors = [\"white\",\"red\", \"green\", \"blue\", \"orange\", \"yellow\", \"purple\"]\ndf.education.value_counts().plot.bar(color=colors,legend=True)\n```", "```py\ndf['workclass'].value_counts()\n```", "```py\ndf['income'].value_counts()\n```", "```py\n#Bivariate analysis of age and income\nsns.histplot(data=df,kde=True,x='age',hue='income')\n```", "```py\n#Bivariate Analysis of  education and Income\nsns.histplot(data=df,y='education', hue='income',multiple=\"dodge\");\n```", "```py\n#Bivariate Analysis of work class and Income\nsns.histplot(data=df,y='workclass', hue='income',multiple=\"dodge\");\n```", "```py\n#Bivariate Analysis of  Sex and Income\nsns.histplot(data=df,y='sex', hue='income',multiple=\"dodge\");\n```", "```py\n    pip install ydata-profiling\n    ```", "```py\n    from ydata_profiling import ProfileReport\n    ```", "```py\n    upgrade command to make sure we have the latest profiling library:\n\n    ```", "```py\n\n    ```", "```py\n    report = ProfileReport(df)\n    report\n    ```", "```py\n    %pip install langchain\n    %pip install langchain_experimental\n```", "```py\nfrom langchain.chat_models import AzureChatOpenAI\nfrom langchain_experimental.agents import create_pandas_dataframe_agent\nimport os\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport openai\n```", "```py\nopenai.api_type = \"azure\"\nopenai.api_base = \"your_endpoint\"\nopenai.api_version = \"2023-09-15-preview\"\nopenai.api_key = \"your_key\"\n# We are assuming that you have all model deployments on the same Azure OpenAI service resource above.  If not, you can change these settings below to point to different resources.\ngpt4_endpoint = openai.api_base # Your endpoint will look something like this: https://YOUR_AOAI_RESOURCE_NAME.openai.azure.com/\ngpt4_api_key = openai.api_key # Your key will look something like this: 00000000000000000000000000000000\ngpt4_deployment_name=\"your model deployment name\"\n```", "```py\ndf = pd.read_csv(\"adult.csv\")\n```", "```py\ngpt4 = AzureChatOpenAI(\n    openai_api_base=gpt4_endpoint,\n    openai_api_version=\"2023-03-15-preview\",\n    deployment_name=gpt4_deployment_name,\n    openai_api_key=gpt4_api_key,\n    openai_api_type = openai.api_type,\n)\n```", "```py\n    agent = create_pandas_dataframe_agent(gpt4, df, verbose=True)\n```", "```py\nagent(\"how many rows and how many columns are there?\")\n```", "```py\nagent(\"sample first 5 records and display?\")\n```", "```py\nquery = \"draw the bar chart  for the column education\"\nresults = agent(query)\n```", "```py\nquery = \"Compare the income of those have Masters with those have HS-grad using KDE plot\"\nresults = agent(query)\n```", "```py\nquery = \"Are there  any outliers in terms of age. Find out using Box plot.\"\nresults = agent(query)\n```"]