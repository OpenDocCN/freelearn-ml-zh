["```py\n>bbc_folder<- \"~/Downloads/bbc/\"\n>bbcsports_folder<- \"~/Downloads/bbcsport/\"\n>bbc_source<- paste(bbc_folder, \"bbc.mtx\", sep = \"\")\n>bbc_source_terms<- paste(bbc_folder, \"bbc.terms\", sep = \"\")\n>bbc_source_docs<- paste(bbc_folder, \"bbc.docs\", sep = \"\")\n>bbcsports_source<- paste(bbcsports_folder, \"bbcsport.mtx\", sep = \"\")\n>bbcsports_source_terms<- paste(bbcsports_folder, \n\"bbcsport.terms\", sep = \"\")\n>bbcsports_source_docs<- paste(bbcsports_folder, \n\"bbcsport.docs\", sep = \"\")\n```", "```py\n> library(\"tm\")\n> library(\"Matrix\")\n>bbc_matrix<- readMM(bbc_source)\n>bbc_tdm<- as.TermDocumentMatrix(bbc_matrix, weightTf)\n>bbcsports_matrix<- readMM(bbcsports_source)\n>bbcsports_tdm<- as.TermDocumentMatrix(bbcsports_matrix, \nweightTf)\n```", "```py\n>bbc_rows<- scan(bbc_source_terms, what = \"character\")\nRead 9635 items\n>bbc_cols<- scan(bbc_source_docs, what = \"character\")\nRead 2225 items\n>bbc_tdm$dimnames$Terms<- bbc_rows\n>bbc_tdm$dimnames$Docs<- bbc_cols\n> (bbc_dtm<- t(bbc_tdm))\n<<DocumentTermMatrix (documents: 2225, terms: 9635)>>\nNon-/sparse entries: 286774/21151101\nSparsity           : 99%\nMaximal term length: 24\nWeighting          : term frequency (tf)\n>bbcsports_rows<- scan(bbcsports_source_terms, what =  \n\"character\")\nRead 4613 items\n>bbcsports_cols<- scan(bbcsports_source_docs, what =  \n\"character\")\nRead 737 items\n>bbcsports_tdm$dimnames$Terms<- bbcsports_rows\n>bbcsports_tdm$dimnames$Docs<- bbcsports_cols\n> (bbcsports_dtm<- t(bbcsports_tdm))\n<<DocumentTermMatrix (documents: 737, terms: 4613)>>\nNon-/sparse entries: 85576/3314205\nSparsity           : 97%\nMaximal term length: 17\nWeighting          : term frequency (tf)\n```", "```py\n>bbc_cols[1:5]\n[1] \"business.001\"\"business.002\"\"business.003\"\"business.004\"\n[5] \"business.005\"\n>bbcsports_cols[1:5]\n[1] \"athletics.001\"\"athletics.002\"\"athletics.003\"\n[4] \"athletics.004\"\"athletics.005\"\n```", "```py\n>bbc_gold_topics<- sapply(bbc_cols, \n                           function(x) substr(x, 1, nchar(x) - 4))\n>bbc_gold_factor<- factor(bbc_gold_topics)\n> summary(bbc_gold_factor)\n     business entertainment      politics         sport \n          510           386           417           511 \n         tech \n          401 \n>bbcsports_gold_topics<- sapply(bbcsports_cols, \n                           function(x) substr(x, 1, nchar(x) - 4))\n>bbcsports_gold_factor<- factor(bbcsports_gold_topics)\n> summary(bbcsports_gold_factor)\nathletics   cricket  football     rugby    tennis \n      101       124       265       147       100\n```", "```py\ncompute_model_list<- function (k, topic_seed, myDtm){\nLDA_VEM<- LDA(myDtm, k = k, control = list(seed = topic_seed))\nLDA_VEM_a<- LDA(myDtm, k = k, control = list(estimate.alpha = \n                   FALSE, seed = topic_seed))\nLDA_GIB<- LDA(myDtm, k = k, method = \"Gibbs\", control = \n                 list(seed = topic_seed, burnin = 1000, thin = \n                 100, iter = 1000))\nCTM_VEM<- CTM(myDtm, k = k, control = list(seed = topic_seed, \nvar = list(tol = 10^-4), em = list(tol = 10^-3)))\n  return(list(LDA_VEM = LDA_VEM, LDA_VEM_a = LDA_VEM_a, \nLDA_GIB = LDA_GIB, CTM_VEM = CTM_VEM))\n}\n```", "```py\n> library(\"topicmodels\")\n> k <- 5\n>topic_seed<- 5798252\n>bbc_models<- compute_model_list(k, topic_seed,bbc_dtm)\n>bbcsports_models<- compute_model_list(k, topic_seed, \nbbcsports_dtm)\n```", "```py\n>model_topics<- topics(bbc_models$LDA_VEM)\n> table(model_topics, bbc_gold_factor)\nbbc_gold_factor\nmodel_topics business entertainment politics sport tech\n           1       11           174        2     0  176\n           2        4           192        1     0  202\n           3      483             3       10     0    7\n           4        9            17      403     4   15\n           5        3             0        1   507    1\n```", "```py\n>model_topics<- topics(bbc_models$LDA_GIB)\n> table(model_topics, bbc_gold_factor)\nbbc_gold_factor\nmodel_topics business entertainment politics sport tech\n           1      471             2       12     1    5\n           2        0             0        3   506    3\n           3        9             4        1     0  371\n           4       27            16      399     3    9\n           5        3           364        2     1   13\n```", "```py\ncompute_topic_model_accuracy<- function(model, gold_factor) {\nmodel_topics<- topics(model)\nmodel_table<- table(model_topics, gold_factor)\nmodel_matches<- apply(model_table, 1, max)\nmodel_accuracy<- sum(model_matches) / sum(model_table)\n  return(model_accuracy)\n}\n```", "```py\n>sapply(bbc_models, function(x) \ncompute_topic_model_accuracy(x, bbc_gold_factor))\nLDA_VEMLDA_VEM_aLDA_GIBCTM_VEM\n0.7959551 0.7923596 0.9487640 0.6148315 \n>sapply(bbcsports_models, function(x) \ncompute_topic_model_accuracy(x, bbcsports_gold_factor))\nLDA_VEMLDA_VEM_aLDA_GIBCTM_VEM\n0.7924016 0.7788331 0.7856174 0.7503392\n```", "```py\n>sapply(bbc_models, logLik)\nLDA_VEMLDA_VEM_aLDA_GIBCTM_VEM\n -3201542  -3274005  -3017399  -3245828\n>sapply(bbcsports_models, logLik)\nLDA_VEMLDA_VEM_aLDA_GIBCTM_VEM\n-864357.7 -886561.9 -813889.7 -868561.9 \n```", "```py\n>seeded_bbc_models<- lapply(5798252 : 5798256, \n              function(x) compute_model_list(k, x, bbc_dtm))\n>seeded_bbcsports_models<- lapply(5798252 : 5798256, \n              function(x) compute_model_list(k, x, bbcsports_dtm))\n```", "```py\n>seeded_bbc_models_acc<- sapply(seeded_bbc_models, \n  function(x) sapply(x, function(y) \ncompute_topic_model_accuracy(y, bbc_gold_factor)))\n>seeded_bbc_models_acc\n               [,1]      [,2]      [,3]      [,4]      [,5]\nLDA_VEM   0.7959551 0.7959551 0.7065169 0.7065169 0.7757303\nLDA_VEM_a 0.7923596 0.7923596 0.6916854 0.6916854 0.7505618\nLDA_GIB   0.9487640 0.9474157 0.9519101 0.9501124 0.9460674\nCTM_VEM   0.6148315 0.5883146 0.9366292 0.8026966 0.7074157\n>seeded_bbcsports_models_acc<- sapply(seeded_bbcsports_models, \n  function(x) sapply(x, function(y) \ncompute_topic_model_accuracy(y, bbcsports_gold_factor)))\n>seeded_bbcsports_models_acc\n               [,1]      [,2]      [,3]      [,4]      [,5]\nLDA_VEM   0.7924016 0.7924016 0.8616011 0.8616011 0.9050204\nLDA_VEM_a 0.7788331 0.7788331 0.8426052 0.8426052 0.8914518\nLDA_GIB   0.7856174 0.7978290 0.8073270 0.7978290 0.7761194\nCTM_VEM   0.7503392 0.6309362 0.7435550 0.8995929 0.6526459\n```", "```py\ncompute_model_list_r<- function (k, topic_seed, myDtm, nstart) {\nseed_range<- topic_seed : (topic_seed + nstart - 1)\nLDA_VEM<- LDA(myDtm, k = k, control = list(seed = seed_range, \nnstart = nstart))\nLDA_VEM_a<- LDA(myDtm, k = k, control = list(estimate.alpha = \n                 FALSE, seed = seed_range, nstart = nstart))\nLDA_GIB<- LDA(myDtm, k = k, method = \"Gibbs\", control = \n                 list(seed = seed_range, burnin = 1000, thin = \n                 100, iter = 1000, nstart = nstart))\nCTM_VEM<- CTM(myDtm, k = k, control = list(seed = seed_range, \nvar = list(tol = 10^-4), em = list(tol = 10^-3), \nnstart = nstart))\n  return(list(LDA_VEM = LDA_VEM, LDA_VEM_a = LDA_VEM_a, \nLDA_GIB = LDA_GIB, CTM_VEM = CTM_VEM))\n}\n```", "```py\n>nstart<- 5\n>topic_seed<- 5798252\n>nstarted_bbc_models_r<- \ncompute_model_list_r(k, topic_seed, bbc_dtm, nstart)\n>nstarted_bbcsports_models_r<- \ncompute_model_list_r(k, topic_seed, bbcsports_dtm, nstart)\n>sapply(nstarted_bbc_models_r, function(x) \ncompute_topic_model_accuracy(x, bbc_gold_factor))\nLDA_VEMLDA_VEM_aLDA_GIBCTM_VEM\n0.7959551 0.7923596 0.9487640 0.9366292 \n>sapply(nstarted_bbcsports_models_r, function(x) \ncompute_topic_model_accuracy(x, bbcsports_gold_factor))\nLDA_VEMLDA_VEM_aLDA_GIBCTM_VEM\n0.9050204 0.8426052 0.7991859 0.8995929\n```", "```py\n>bbc_models[[1]]@alpha\n[1] 0.04893411\n>bbc_models[[2]]@alpha\n[1] 10\n>bbcsports_models[[1]]@alpha\n[1] 0.04037119\n>bbcsports_models[[2]]@alpha\n[1] 10\n```", "```py\n> options(digits = 4)\n> head(posterior(bbc_models[[1]])$topics)\n                     1         2      3         4         5\nbusiness.001 0.2700360 0.0477374 0.6818 0.0002222 0.0002222\nbusiness.002 0.0002545 0.0002545 0.9990 0.0002545 0.0002545\nbusiness.003 0.0003257 0.0003257 0.9987 0.0003257 0.0003257\nbusiness.004 0.0002153 0.0002153 0.9991 0.0002153 0.0002153\nbusiness.005 0.0337131 0.0004104 0.9651 0.0004104 0.0004104\nbusiness.006 0.0423153 0.0004740 0.9563 0.0004740 0.0004740\n```", "```py\ncompute_entropy<- function(probs) {\n  return(- sum(probs * log(probs)))\n}\ncompute_model_mean_entropy<- function(model) {\n  topics <- posterior(model)$topics\n  return(mean(apply(topics, 1, compute_entropy)))\n}\n```", "```py\n>sapply(bbc_models, compute_model_mean_entropy)\nLDA_VEMLDA_VEM_aLDA_GIBCTM_VEM\n0.3119491 1.2664310 1.2720891 0.8373708 \n>sapply(bbcsports_models, compute_model_mean_entropy)\nLDA_VEMLDA_VEM_aLDA_GIBCTM_VEM\n0.3058856 1.3084006 1.3421798 0.7545975\n```", "```py\n>GIB_bbc_model<- bbc_models[[3]]\n> terms(GIB_bbc_model, 10)\n      Topic 1   Topic 2   Topic 3     Topic 4  Topic 5 \n [1,] \"year\"\"plai\"\"peopl\"\"govern\"\"film\"\n [2,] \"compani\"\"game\"\"game\"\"labour\"\"year\"\n [3,] \"market\"\"win\"\"servic\"\"parti\"\"best\"\n [4,] \"sale\"\"against\"\"technolog\"\"elect\"\"show\"\n [5,] \"firm\"\"england\"\"mobil\"\"minist\"\"includ\"\n [6,] \"expect\"\"first\"\"on\"\"plan\"\"on\"\n [7,] \"share\"\"back\"\"phone\"\"sai\"\"award\"\n [8,] \"month\"\"player\"\"get\"\"told\"\"music\"\n [9,] \"bank\"\"world\"\"work\"\"peopl\"\"top\"\n[10,] \"price\"\"time\"\"wai\"\"public\"\"star\"\n```", "```py\nplot_wordcloud<- function(model, myDtm, index, numTerms) {\nmodel_terms<- terms(model,numTerms)\nmodel_topics<- topics(model)\nterms_i<- model_terms[,index]\ntopic_i<- model_topics == index\ndtm_i<- myDtm[topic_i, terms_i]\nfrequencies_i<- colSums(as.matrix(dtm_i))\nwordcloud(terms_i, frequencies_i, min.freq = 0)\n}\n```"]