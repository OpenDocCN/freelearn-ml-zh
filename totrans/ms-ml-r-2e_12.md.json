["```py\n > library(ggfortify) \n\n > set.seed(123)\n\n    > ar1 <- arima.sim(list(order = c(1, 0, 0), ar = 0.5), n = 200)\n\n    > autoplot(ar1, main = \"AR1\")\n\n```", "```py\n    > autoplot(acf(ar1, plot = F), main = \"AR1 - ACF\")\n\n```", "```py\n    > autoplot(pacf(ar1, plot = F), main = \"AR1 - PACF\")\n\n```", "```py\n    > set.seed(123)\n\n    > ma1 <- arima.sim(list(order = c(0, 0, 1), ma = -0.5), n = 200)\n\n    > autoplot(ma1, main = \"MA1\")\n\n```", "```py\n    > autoplot(acf(ma1, plot = F), main = \"MA1 - ACF\")\n\n```", "```py\n    > autoplot(pacf(ma1, plot = F), main = \"MA1 - PACF\")\n\n```", "```py\n    > climate <- read.csv(\"climate.csv\", stringsAsFactors = F)\n\n    > str(climate)\n     'data.frame': 95 obs. of 3 variables:\n     $ Year: int 1919 1920 1921 1922 1923 1924 1925 1926 1927 1928 ...\n     $ CO2 : int 806 932 803 845 970 963 975 983 1062 1065 ...\n     $ Temp: num -0.272 -0.241 -0.187 -0.301 -0.272 -0.292 -0.214 \n       -0.105 -0.208  -0.206 ...\n\n```", "```py\n    > climate <- ts(climate[, 2:3], frequency = 12,\n       start = 1919, end = 2013)  \n\n    > head(climate)\n         CO2   Temp\n    [1,] 806 -0.272\n    [2,] 932 -0.241\n    [3,] 803 -0.187\n    [4,] 845 -0.301\n    [5,] 970 -0.272\n    [6,] 963 -0.292 \n\n```", "```py\n    > library(forecast)\n\n    > library(tseries)\n\n```", "```py\n    > autoplot(climate)\n\n```", "```py\n    > cor(climate)\n               CO2      Temp\n    CO2  1.0000000 0.8404215\n    Temp 0.8404215 1.0000000\n\n```", "```py\n    > autoplot(acf(climate[, 2], plot = F), main=\"Temp ACF\")\n\n```", "```py\n > autoplot(pacf(climate[, 2], plot = F), main = \"Temp PACF\")\n\n```", "```py\n > autoplot(acf(climate[, 1], plot = F), main = \"CO2 ACF\")\n\n```", "```py\n > autoplot(pacf(climate[, 1], plot = F), main = \"CO2 PACF\")\n\n```", "```py\n    > ccf(climate[, 1], climate[, 2], main = \"CCF\")\n\n```", "```py\n    > adf.test(climate[, 1])\n\n           Augmented Dickey-Fuller Test\n\n    data: climate[, 1]\n    Dickey-Fuller = -1.1519, Lag order = 4, p-value =\n    0.9101\n    alternative hypothesis: stationary\n\n    > adf.test(climate[, 2])\n\n           Augmented Dickey-Fuller Test\n\n    data: climate[, 2]\n    Dickey-Fuller = -1.8106, Lag order = 4, p-value =\n    0.6546\n    alternative hypothesis: stationary\n\n```", "```py\n    > temp <- climate[, 2]\n\n    > temp <- climate[, 2]\n\n    > train <- window(temp, start = 1946, end = 2003)\n\n    > test <- window(temp, start = 2004)\n\n```", "```py\n > fit.holt <- holt(train, h = 10, initial = \"optimal\")\n\n```", "```py\n    > plot(forecast(fit.holt))\n\n    > lines(test, type = \"o\") \n\n```", "```py\n    > fit.holtd <- holt(train, h = 10, initial = \"optimal\", damped = \n      TRUE)\n\n    > plot(forecast(fit.holtd),main = \"Holt Damped\")\n\n > lines(test, type = \"o\") \n\n```", "```py\n    > fit.arima <- auto.arima(train)\n    > summary(fit.arima)\n    Series: train \n    ARIMA(0,1,1) with drift \n\n    Coefficients:\n            ma1  drift\n        -0.6949 0.0094\n    s.e. 0.1041 0.0047\n\n```", "```py\n > plot(forecast(fit.arima, h = 10))\n\n > lines(test, type=\"o\") \n\n```", "```py\n > mapeHOLT <- sum(abs((test - fit.holt$mean)/test))/10\n > mapeHOLT\n [1] 0.105813\n > mapeHOLTD <- sum(abs((test - fit.holtd$mean)/test))/10\n > mapeHOLTD\n [1] 0.2220256\n > mapeARIMA <- sum(abs((test - forecast(fit.arima, h = \n      10)$mean)/test))/10\n > mapeARIMA\n [1] 0.1034813 \n\n```", "```py\n > fit.lm <- lm(Temp ~ CO2, data = climate)\n\n    > summary(fit.lm)\n\n    Call:\n    lm(formula = Temp ~ CO2, data = climate)\n\n    Residuals:\n         Min       1Q  Median      3Q     Max \n    -0.36411 -0.08986 0.00011 0.09475 0.28763 \n\n    Coefficients:\n                  Estimate  Std. Error  t value     Pr(>|t|) \n    (Intercept) -2.430e-01   2.357e-02   -10.31   <2e-16 ***\n    CO2          7.548e-05   5.047e-06    14.96   <2e-16 ***\n    ---\n    Signif. codes: \n    0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n    Residual standard error: 0.1299 on 93 degrees of freedom\n    Multiple R-squared: 0.7063, Adjusted R-squared: 0.7032 \n    F-statistic: 223.7 on 1 and 93 DF, p-value: < 2.2e-16\n\n```", "```py\n > plot.ts(fit.lm$residuals)\n\n```", "```py\n > acf(fit.lm$residuals)\n\n```", "```py\n > dwtest(fit.lm)\n\n Durbin-Watson test\n\n data: fit.lm\n DW = 0.77425, p-value = 4.468e-12\n    alternative hypothesis: true autocorrelation is greater than 0\n\n```", "```py\n > ndiffs(climate[, 1], test = \"adf\")\n [1] 1\n\n > ndiffs(climate[, 2], test = \"adf\")\n [1] 1 \n\n```", "```py\n > library(vars)\n\n > library(aod)\n\n > climateDiff <- diff(climate)\n\n    > climateDiff <- window(climateDiff, start = 1946)\n\n    > head(climateDiff)\n         CO2     Temp\n    [1,]  78   -0.099\n    [2,] 154    0.034\n    [3,]  77    0.001\n    [4,] -50   -0.035\n    [5,] 211   -0.100\n    [6,] 137    0.121\n\n```", "```py\n    > lag.select <- VARselect(climateDiff, lag.max = 12)\n\n    > lag.select$selection\n    AIC(n) HQ(n) SC(n) FPE(n) \n         5     1     1      5\n\n```", "```py\n    > fit1 <- VAR(climateDiff, p = 5)\n\n```", "```py\n > summary(fit1)\n Residual standard error: 0.1006 on 52 degrees of freedom\n    Multiple R-Squared: 0.4509, Adjusted R-squared: 0.3453 \n    F-statistic: 4.27 on 10 and 52 DF, p-value: 0.0002326\n\n```", "```py\n    > serial.test(fit1, type = \"PT.asymptotic\")\n\n        Portmanteau Test (asymptotic)\n\n    data: Residuals of VAR object fit1\n    Chi-squared = 35.912, df = 44, p-value = 0.8021\n\n```", "```py\n    > x2y <- causality(fit1, cause = \"CO2\")\n\n    > y2x <- causality(fit1, cause = \"Temp\")\n\n```", "```py\n    > x2y$Granger\n\n         Granger causality H0: CO2_diff do not Granger-cause\n climate2.temp\n\n data: VAR object fit1\n F-Test = 2.2069, df1 = 5, df2 = 104, p-value = 0.05908\n\n > y2x$Granger\n\n Granger causality H0: climate2.temp do not Granger-cause\n CO2_diff\n\n data: VAR object fit1\n F-Test = 0.66783, df1 = 5, df2 = 104, p-value = 0.6487 \n\n```", "```py\n > climateLevels <- window(climate, start = 1946)\n\n    > level.select <- VARselect(climateLevels, lag.max = 12)\n\n    > level.select$selection\n    AIC(n) HQ(n) SC(n) FPE(n) \n        10     1     1     6 \n\n```", "```py\n fit2 <- VAR(climateLevels, p = 7)   \n    > serial.test(fit2, type = \"PT.asymptotic\")\n\n           Portmanteau Test (asymptotic)\n\n    data: Residuals of VAR object fit2\n    Chi-squared = 35.161, df = 36, p-value = 0.5083\n\n```", "```py\n > CO2terms <- seq(1, 11, 2)\n\n    > Tempterms <- seq(2, 12, 2)\n\n```", "```py\n > wald.test(b = coef(fit2$varresult$Temp),\n    Sigma = vcov(fit2$varresult$Temp),\n    Terms = c(CO2terms))\n       Wald test:\n       ----------\n\n    Chi-squared test:\n    X2 = 11.5, df = 6, P(> X2) = 0.074\n\n```", "```py\n > wald.test(b = coef(fit2$varresult$CO2),\n    Sigma = vcov(fit2$varresult$CO2),\n    Terms = c(Tempterms))\n       Wald test:\n       ----------\n\n    Chi-squared test:\n    X2 = 3.9, df = 6, P(> X2) = 0.69\n\n```", "```py\n    > autoplot(predict(fit2, n.ahead = 25, ci = 0.95))\n\n```"]