- en: '8'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '8'
- en: AWS Application Services for AI/ML
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: AWS 应用服务用于 AI/ML
- en: In this chapter, you will learn about the AWS AI services for building chatbots,
    advanced text analysis, document analysis, transcription, and so on. This chapter
    has been designed in such a way that you can solve different use cases by integrating
    AWS AI services and get an idea of how they work. AWS is growing every day, and
    they are adding new AI services regularly.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你将了解 AWS AI 服务，用于构建聊天机器人、高级文本分析、文档分析、转录等。本章的设计方式使得你可以通过集成 AWS AI 服务来解决不同的用例，并了解它们的工作原理。AWS
    每天都在增长，并且他们定期添加新的 AI 服务。
- en: In this chapter, you will approach different use cases programmatically or from
    the console. This will help you understand different APIs and how to use them.
    You will use S3 for storage and AWS Lambda to execute any code. The examples in
    this chapter are in Python, but you can use other supported languages such as
    Java, Node.js, .NET, PowerShell, Ruby, and so on.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你将通过编程或从控制台处理不同的用例。这将帮助你了解不同的 API 以及如何使用它们。你将使用 S3 进行存储，并使用 AWS Lambda
    执行任何代码。本章中的示例使用 Python 编写，但你也可以使用其他支持的语言，例如 Java、Node.js、.NET、PowerShell、Ruby
    等。
- en: 'You will cover the following topics:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 你将涵盖以下主题：
- en: Analyzing images and videos with Amazon Rekognition
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Amazon Rekognition 分析图像和视频
- en: Text to speech with Amazon Polly
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Amazon Polly 进行文本到语音转换
- en: Speech to text with Amazon Transcribe
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Amazon Transcribe 进行语音转文本
- en: Implementing natural language processing with Amazon Comprehend
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Amazon Comprehend 实施自然语言处理
- en: Translating documents with Amazon Translate
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Amazon Translate 翻译文档
- en: Extracting text from documents with Amazon Textract
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Amazon Textract 从文档中提取文本
- en: Creating chatbots on Amazon Lex
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Amazon Lex 上创建聊天机器人
- en: Time series forecasting with Amazon Forecast
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Amazon Forecast 进行时间序列预测
- en: Technical requirements
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: All you need for this chapter is an AWS account.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 本章所需的所有内容只是一个 AWS 账户。
- en: You can download the code examples for this chapter from GitHub at [https://github.com/PacktPublishing/AWS-Certified-Machine-Learning-Specialty-MLS-C01-Certification-Guide-Second-Edition/tree/main/Chapter08](https://github.com/PacktPublishing/AWS-Certified-Machine-Learning-Specialty-MLS-C01-Certification-Guide-Second-Edition/tree/main/Chapter08).
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以从 GitHub 下载本章的代码示例，网址为 [https://github.com/PacktPublishing/AWS-Certified-Machine-Learning-Specialty-MLS-C01-Certification-Guide-Second-Edition/tree/main/Chapter08](https://github.com/PacktPublishing/AWS-Certified-Machine-Learning-Specialty-MLS-C01-Certification-Guide-Second-Edition/tree/main/Chapter08)。
- en: Analyzing images and videos with Amazon Rekognition
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Amazon Rekognition 分析图像和视频
- en: If you need to add powerful visual analysis to your applications, then **Amazon
    Rekognition** is the service to choose. **Rekognition Image** lets you easily
    build powerful applications to search, verify, and organize millions of images.
    It lets you extract motion-based context from stored or live stream videos, and
    helps you analyze them. Rekognition Video also allows you to index metadata such
    as objects, activities, scenes, celebrities, and faces, making video searches
    easy. Rekognition Image uses deep neural network models to detect and label numerous
    objects and scenes in your images. It helps you capture text in an image, a bit
    like **Optical Character Recognition (OCR)**. A perfect example is a T-shirt with
    quotes on it. If you were to take a picture of one and ask Amazon Rekognition
    to extract the text from it, it would be able to tell you what the text says.
    You can also perform celebrity recognition using Amazon Rekognition. Somebody
    who is not a celebrity won’t use the celebrity recognition API for their face;
    instead, they will use the face comparison API.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你需要为你的应用程序添加强大的视觉分析，那么**Amazon Rekognition**是你要选择的服务。**Rekognition Image**让你轻松构建强大的应用程序来搜索、验证和组织数百万张图像。它让你从存储或实时流视频中提取基于运动的内容，并帮助你分析它们。Rekognition
    Video 还允许你索引诸如对象、活动、场景、名人、面部等元数据，使视频搜索变得容易。Rekognition Image 使用深度神经网络模型来检测和标记你图像中的众多对象和场景。它帮助你捕获图像中的文本，有点像**光学字符识别
    (OCR)**。一个完美的例子是印有引语的T恤。如果你要拍一张照片并让 Amazon Rekognition 从中提取文本，它就能告诉你文本的内容。你也可以使用
    Amazon Rekognition 进行名人识别。不是名人的人不会使用名人识别 API 来处理他们的面部；相反，他们将使用面部比较 API。
- en: 'The official documentation, available at [https://aws.amazon.com/rekognition/faqs/](https://aws.amazon.com/rekognition/faqs/),
    states the following:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 官方文档可在 [https://aws.amazon.com/rekognition/faqs/](https://aws.amazon.com/rekognition/faqs/)
    查找，其中说明了以下内容：
- en: '*“With Rekognition Image, you only pay for the images you analyze and the face
    metadata you store. You will not be charged for the compute resources if, at any
    point of time, your* *training fails.”*'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '*“使用 Rekognition Image，您只需为分析的图像和存储的面部元数据付费。如果您的训练在任何时候失败，您将不会收取计算资源费用。”*'
- en: 'Some common uses of Amazon Rekognition include the following:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon Rekognition 的以下是一些常见用途：
- en: Image and video analysis
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 图像和视频分析
- en: Searchable image library
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可搜索的图像库
- en: Face-based user verification
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基于面部用户验证
- en: Sentiment analysis
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 情感分析
- en: Text in image
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 图像中的文本
- en: Facial recognition
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 面部识别
- en: Image moderation
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 图像审查
- en: Search index for video archives
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 视频存档的搜索索引
- en: Easy filtering of explicit and suggestive content in videos
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在视频中轻松过滤明显的和暗示的内容
- en: Examples of explicit nudity – sexual activity, graphical nudity, adult toys,
    and so on
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 明显裸露的例子——性行为、图形裸露、成人玩具等等
- en: Examples of suggestive content – partial nudity, swimwear or underwear, and
    so on
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 暗示内容的例子——部分裸露、泳装或内衣等等
- en: Exploring the benefits of Amazon Rekognition
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 探索 Amazon Rekognition 的益处
- en: 'Here are some of the benefits of using Amazon Rekognition:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是使用 Amazon Rekognition 的一些好处：
- en: AWS manages the infrastructure it runs on. In short, just use the API for your
    image analysis. You need to only focus on building and managing your deep learning
    pipelines.
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AWS 管理其运行的底层基础设施。简而言之，只需使用 API 进行图像分析。您只需专注于构建和管理您的深度学习管道。
- en: With or without knowledge of image processing, you can perform image and video
    analysis just by using the APIs provided in Amazon Rekognition, which can be used
    for any application or service on several platforms.
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 无论是否了解图像处理，您只需使用 Amazon Rekognition 提供的 API，就可以进行图像和视频分析，这些 API 可用于多个平台上的任何应用程序或服务。
- en: The Labels API’s response will identify real-world entities within an image
    through the DetectLabels API. These labels include city, town, table, home, garden,
    animal, pets, food, drink, electronics, flowers, and more. The entities are classified
    based on their **confidence score**, which indicates the probability that a given
    prediction is correct — the higher the score, the better. Similarly, you can use
    the DetectText API to extract the text in an image. Amazon Rekognition may detect
    multiple lines based on the gap between words. Periods do not represent the end
    of a line.
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 标签 API 的响应将通过 DetectLabels API 识别图像中的真实世界实体。这些标签包括城市、镇、桌子、家庭、花园、动物、宠物、食物、饮料、电子产品、花卉等等。实体根据其
    **置信度分数** 进行分类，该分数表示给定预测正确的概率——分数越高，越好。同样，您可以使用 DetectText API 从图像中提取文本。Amazon
    Rekognition 可能会根据单词之间的间隔检测多行。句点不代表行的结束。
- en: Amazon Rekognition can be integrated with AWS Kinesis Video Stream, AWS S3,
    and AWS Lambda for seamless and affordable image and video analysis. With the
    AWS IAM service, Amazon Rekognition API calls can easily be secured and controlled.
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Amazon Rekognition 可以与 AWS Kinesis Video Stream、AWS S3 和 AWS Lambda 集成，以实现无缝且经济的图像和视频分析。使用
    AWS IAM 服务，Amazon Rekognition API 调用可以轻松地得到保护和控制。
- en: 'Low cost: you only pay for the images and videos that are analyzed.'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 低成本：您只需为分析的图像和视频付费。
- en: Through AWS CloudTrail, all the API calls for Amazon Rekognition can be captured
    as events. It captures all calls made from the console, the CLI, or code calls
    for APIs, which further enables the user to create Amazon SNS notifications based
    on CloudTrail events.
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过 AWS CloudTrail，可以捕获 Amazon Rekognition 的所有 API 调用作为事件。它捕获来自控制台、CLI 或代码对 API
    的调用，这进一步使用户能够根据 CloudTrail 事件创建 Amazon SNS 通知。
- en: You can create a VPC endpoint policy for specific API calls to establish a private
    connection between your VPC and Amazon Rekognition. This helps you leverage enhanced
    security. As per the AWS Shared Responsibility Model, AWS takes care of the security
    of the infrastructure and software, and you have to take care of the security
    of your content in the cloud.
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您可以为特定的 API 调用创建 VPC 端点策略，以在您的 VPC 和 Amazon Rekognition 之间建立私有连接。这有助于您利用增强的安全性。根据
    AWS 共享责任模型，AWS 负责基础设施和软件的安全性，而您必须负责云中内容的安全性。
- en: Getting hands-on with Amazon Rekognition
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 亲身体验 Amazon Rekognition
- en: In this section, you will learn how to integrate AWS Lambda with Amazon Rekognition
    to detect the labels in our image (uploaded at [https://github.com/PacktPublishing/AWS-Certified-Machine-Learning-Specialty-MLS-C01-Certification-Guide-Second-Edition/tree/main/Chapter08/Amazon%20Rekognition%20Demo/images](https://github.com/PacktPublishing/AWS-Certified-Machine-Learning-Specialty-MLS-C01-Certification-Guide-Second-Edition/tree/main/Chapter08/Amazon%20Rekognition%20Demo/images))
    and print the detected objects in the CloudWatch console. You will use the `detect_labels`
    API from Amazon Rekognition in the code.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，您将学习如何将AWS Lambda与Amazon Rekognition集成，以检测我们图像（上传至[https://github.com/PacktPublishing/AWS-Certified-Machine-Learning-Specialty-MLS-C01-Certification-Guide-Second-Edition/tree/main/Chapter08/Amazon%20Rekognition%20Demo/images](https://github.com/PacktPublishing/AWS-Certified-Machine-Learning-Specialty-MLS-C01-Certification-Guide-Second-Edition/tree/main/Chapter08/Amazon%20Rekognition%20Demo/images)）中的标签，并在CloudWatch控制台中打印检测到的对象。您将在代码中使用Amazon
    Rekognition的`detect_labels` API。
- en: 'You will begin by creating an IAM role for Lambda:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 您将首先为Lambda创建一个IAM角色：
- en: Navigate to the IAM console page.
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到IAM控制台页面。
- en: Select **Roles** from the left-hand menu.
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从左侧菜单中选择**角色**。
- en: Select **Create role**.
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**创建角色**。
- en: Select **Lambda** from the **Choose a use** **case** section.
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从**选择一个用例**部分选择**Lambda**。
- en: 'Add the following managed policies:'
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加以下托管策略：
- en: '`AmazonS3ReadOnlyAccess`'
  id: totrans-49
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`AmazonS3ReadOnlyAccess`'
- en: '`AmazonRekognitionFullAccess`'
  id: totrans-50
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`AmazonRekognitionFullAccess`'
- en: '`CloudWatchLogsFullAccess`'
  id: totrans-51
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`CloudWatchLogsFullAccess`'
- en: Name the role `rekognition-lambda-role`:![Figure 8.1 – The Create role dialog](img/B21197_08_01.jpg)
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将角色命名为`rekognition-lambda-role`：![图8.1 – 创建角色的对话框](img/B21197_08_01.jpg)
- en: Figure 8.1 – The Create role dialog
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.1 – 创建角色的对话框
- en: Next, you will create a Lambda function.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，您将创建一个Lambda函数。
- en: Navigate to the AWS Lambda console page.
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到AWS Lambda控制台页面。
- en: Select **Create function**.
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**创建函数**。
- en: 'Create a function:'
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个函数：
- en: Select `lambda-rekognition`.
  id: totrans-58
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 选择`lambda-rekognition`。
- en: 'Choose `Python 3.6` from the `rekognition-lambda-role`:'
  id: totrans-59
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从`rekognition-lambda-role`中选择`Python 3.6`：
- en: '![Figure 8.2 – Creating the Lambda function](img/B21197_08_02.jpg)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![图8.2 – 创建Lambda函数](img/B21197_08_02.jpg)'
- en: Figure 8.2 – Creating the Lambda function
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.2 – 创建Lambda函数
- en: 'Enter the following code in `lambda_function.py`:'
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`lambda_function.py`中输入以下代码：
- en: '[PRE0]'
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[PRE1]'
  id: totrans-64
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[PRE2]'
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[PRE3]'
  id: totrans-66
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[PRE4]'
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '[PRE5]'
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '[PRE6]'
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '[PRE7]'
  id: totrans-70
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '[PRE8]'
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '[PRE9]'
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '[PRE10]'
  id: totrans-73
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '[PRE11]'
  id: totrans-74
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '[PRE12]'
  id: totrans-75
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '[PRE13]'
  id: totrans-76
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '[PRE14]'
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '[PRE15]'
  id: totrans-78
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '[PRE16]'
  id: totrans-79
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '[PRE17]'
  id: totrans-80
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '[PRE18]'
  id: totrans-81
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '[PRE19]'
  id: totrans-82
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '[PRE20]'
  id: totrans-83
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '[PRE21]'
  id: totrans-84
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '[PRE22]'
  id: totrans-85
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '[PRE23]'
  id: totrans-86
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: '[PRE24]'
  id: totrans-87
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: '[PRE25]'
  id: totrans-88
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: '[PRE26]'
  id: totrans-89
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '[PRE27]'
  id: totrans-90
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: '[PRE28]'
  id: totrans-91
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: '[PRE29]'
  id: totrans-92
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: '[PRE30]'
  id: totrans-93
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: '[PRE31]'
  id: totrans-94
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: '[PRE32]'
  id: totrans-95
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: '[PRE33]'
  id: totrans-96
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: '[PRE34]'
  id: totrans-97
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE34]'
- en: '[PRE35]'
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE35]'
- en: '[PRE36]'
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE36]'
- en: '[PRE37]'
  id: totrans-100
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE37]'
- en: '[PRE38]'
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE38]'
- en: '[PRE39]'
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE39]'
- en: Now, you will create a trigger for the Lambda Function.
  id: totrans-103
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在，您将为Lambda函数创建一个触发器。
- en: 'Navigate to the AWS S3 console page. Create a bucket, for example, `rekognition-test-baba`,
    as shown in *Figure 8**.3*:'
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到AWS S3控制台页面。创建一个存储桶，例如，`rekognition-test-baba`，如图*图8**.3*所示：
- en: '![Figure 8.3 – AWS S3 console page](img/B21197_08_03.jpg)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![图8.3 – AWS S3控制台页面](img/B21197_08_03.jpg)'
- en: Figure 8.3 – AWS S3 console page
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.3 – AWS S3控制台页面
- en: Click on `images`. Click **Save**.
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击`images`。点击**保存**。
- en: Click the **Properties** tab of our bucket.
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击我们存储桶的**属性**选项卡。
- en: Scroll to **Events** for that bucket.
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 滚动到该存储桶的**事件**。
- en: Inside the `rekognition_event`
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`rekognition_event`内部
- en: '`All object` `create events`'
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`所有对象` `创建事件`'
- en: '`images`*/*'
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`images`*/*'
- en: '`Lambda Function`'
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`Lambda函数`'
- en: '`lambda-rekognition`:'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`lambda-rekognition`：'
- en: '![Figure 8.4 – S3 bucket Events window](img/B21197_08_04.jpg)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![图8.4 – S3存储桶事件窗口](img/B21197_08_04.jpg)'
- en: Figure 8.4 – S3 bucket Events window
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.4 – S3存储桶事件窗口
- en: Next, you will upload the image from the shared GitHub repository to the S3
    bucket `images` folder.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，您将把从共享GitHub仓库中的图像上传到S3存储桶的`images`文件夹。
- en: 'As soon as you upload, you can check the **Monitoring** tab in the Lambda console
    to monitor the events, as shown in *Figure 8**.5*:'
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦上传，您就可以检查Lambda控制台中的**监控**选项卡来监控事件，如图*图8**.5*所示：
- en: '![Figure 8.5 – CloudWatch monitoring the event in the Lambda console](img/B21197_08_05.jpg)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
  zh: '![图8.5 – CloudWatch在Lambda控制台中监控事件](img/B21197_08_05.jpg)'
- en: Figure 8.5 – CloudWatch monitoring the event in the Lambda console
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.5 – CloudWatch在Lambda控制台中监控事件
- en: Navigate to `CloudWatch > CloudWatch Logs > Log groups > /aws/lambda/lambda-rekognition`.
    Select the latest stream from all the streams listed on the AWS console and scroll
    down in the logs to see your output.
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到`CloudWatch > CloudWatch日志 > 日志组 > /aws/lambda/lambda-rekognition`。从AWS控制台上列出的所有流中选择最新的流，并在日志中向下滚动以查看您的输出。
- en: In this section, you learned how to implement the Amazon Rekognition AI service
    to detect objects in an image and get a confidence score for each. You will see
    more use cases for Amazon Rekognition in the upcoming sections, where you will
    detect text in images. In the next section, you will learn about Amazon’s text-to-speech
    service and implement it.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，你学习了如何实现 Amazon Rekognition 人工智能服务以检测图像中的对象并为每个对象获取置信度分数。你将在接下来的章节中看到 Amazon
    Rekognition 的更多用例，其中你将检测图像中的文本。在下一节中，你将了解 Amazon 的文本到语音服务并实现它。
- en: Text to speech with Amazon Polly
  id: totrans-123
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Amazon Polly 进行文本到语音转换
- en: '**Amazon Polly** is all about converting text into speech, and it does so by
    using pretrained deep learning models. It is a fully managed service, so you do
    not have to do anything. You provide the plain text as input for synthesizing
    or in **Speech Synthesis** **Markup Language (SSML)** format so that an audio
    stream is returned. It also gives you different languages and voices to choose
    from, with both male and female options. The output audio from Amazon Polly can
    be saved in MP3 format for further use in the application (web or mobile) or can
    be a JSON output for written speech.'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '**Amazon Polly** 的一切都是将文本转换为语音，它是通过使用预训练的深度学习模型来实现的。这是一个完全托管的服务，因此你不需要做任何事情。你提供纯文本作为合成输入或在
    **语音合成** **标记语言 (SSML**) 格式下，以便返回音频流。它还提供了不同的语言和声音供你选择，包括男性和女性选项。Amazon Polly
    的输出音频可以保存为 MP3 格式，以便在应用程序（网页或移动）中进一步使用，或者可以是一个 JSON 输出，用于书面语音。'
- en: 'For example, if you were to input the text “Baba went to the library” into
    Amazon Polly, the output speech mark object would look as follows:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果你要将文本“Baba 去了图书馆”输入到 Amazon Polly 中，输出语音标记对象将如下所示：
- en: '`{"``time":370,"type":"word","start":5,"end":9,"value":"went"}`'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: '`{"time":370,"type":"word","start":5,"end":9,"value":"went"}`'
- en: The word `"went"` begins 370 milliseconds after the audio stream begins, and
    starts at byte 5 and ends at byte 9 of the given input text.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 单词 `"went"` 在音频流开始后的 370 毫秒处开始，从给定输入文本的字节 5 开始，到字节 9 结束。
- en: It also returns output in `ogg_vorbis` and `pcm` format. When `pcm` is used,
    the content that is returned as an output is `audio/pcm` in a signed 16-bit, 1-channel
    (mono), little-endian format.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 它还以 `ogg_vorbis` 和 `pcm` 格式返回输出。当使用 `pcm` 时，返回的输出内容是 `audio/pcm`，以有符号 16 位、1
    通道（单声道）、小端格式。
- en: 'Some common uses of Amazon Polly include the following:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon Polly 的常见用途包括以下内容：
- en: Can be used as an accessibility tool for reading web content.
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以用作阅读网络内容的辅助工具。
- en: Can be integrated with Amazon Rekognition to help visually impaired people read
    signs. You can click a picture of the sign with text and feed it to Amazon Rekognition
    to extract text. The output text can be used as input for Polly, and it will return
    a voice as output.
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以与 Amazon Rekognition 集成，帮助视障人士阅读标志。你可以点击带有文本的标志图片并将其提供给 Amazon Rekognition
    以提取文本。输出文本可以用作 Polly 的输入，它将返回语音输出。
- en: Can be used in a public address system, where the admin team can just pass on
    the text to be announced and Amazon Polly does the magic.
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以用于公共广播系统，管理员团队只需传递要宣布的文本，Amazon Polly 就会施展魔法。
- en: By combining Amazon Polly with `audio/video receiver` **(****AVR)** system.
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过将 Amazon Polly 与 `音频/视频接收器` **(AVR**) 系统结合使用。
- en: Smart devices such as smart TVs, smart watches, and **Internet of Things (IoT)**
    devices can use this for audio output.
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 智能设备，如智能电视、智能手表和 **物联网 (IoT**) 设备，可以使用它进行音频输出。
- en: Narration generation.
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 叙述生成。
- en: When combined with Amazon Lex, full-blown voice user interfaces for applications
    can be developed.
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当与 Amazon Lex 结合使用时，可以开发应用程序的完整语音用户界面。
- en: Now, let’s explore the benefits of Amazon Polly.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们探索 Amazon Polly 的优势。
- en: Exploring the benefits of Amazon Polly
  id: totrans-138
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 探索 Amazon Polly 的优势
- en: 'Some of the benefits of using Amazon Polly include the following:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Amazon Polly 的好处包括以下内容：
- en: This service is fully managed and does not require any admin cost to maintain
    or manage resources.
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 此服务完全托管，无需任何管理成本来维护或管理资源。
- en: It provides an instant speech correction and enhancement facility.
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它提供即时语音校正和增强功能。
- en: You can develop your own access layer using the HTTP API from Amazon Polly.
    Development is easy due to the huge amount of language support that’s available,
    such as Python, Ruby, Go, C++, Java, and Node.js.
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可以使用 Amazon Polly 的 HTTP API 开发自己的访问层。由于有大量的语言支持，如 Python、Ruby、Go、C++、Java
    和 Node.js，因此开发变得非常容易。
- en: For certain neural voices, speech can be synthesized using the Newscaster style,
    to make them sound like a TV or radio broadcaster.
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于某些神经网络语音，可以使用新闻主播风格进行语音合成，使其听起来像电视或广播电台的广播员。
- en: Amazon Polly also allows you to modify the pronunciation of particular words
    or the use of new words.
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Amazon Polly 还允许您修改特定单词的发音或使用新单词。
- en: Next, you’ll get hands-on with Amazon Polly.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，您将亲身体验 Amazon Polly。
- en: Getting hands-on with Amazon Polly
  id: totrans-146
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 亲身体验 Amazon Polly
- en: In this section, you will build a pipeline where you can integrate AWS Lambda
    with Amazon Polly. The pipeline reads a text file and generates an MP3 file, saving
    it to another folder in the same bucket. You will monitor the task’s progress
    in CloudWatch logs.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，您将构建一个管道，其中可以集成 AWS Lambda 与 Amazon Polly。该管道读取文本文件并生成 MP3 文件，将其保存到同一存储桶中的另一个文件夹。您将在
    CloudWatch 日志中监控任务的进度。
- en: 'You will begin by creating an IAM role for Lambda. Let’s get started:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 您将首先为 Lambda 创建一个 IAM 角色。让我们开始吧：
- en: Navigate to the IAM console page.
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到 IAM 控制台页面。
- en: Select **Roles** from the left-hand menu.
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从左侧菜单中选择 **角色**。
- en: Select **Create role**.
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择 **创建角色**。
- en: Select **Lambda** as the trusted entity.
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择 **Lambda** 作为受信任实体。
- en: 'Add the following managed policies:'
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加以下托管策略：
- en: '`AmazonS3FullAccess`'
  id: totrans-154
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`AmazonS3FullAccess`'
- en: '`AmazonPollyFullAccess`'
  id: totrans-155
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`AmazonPollyFullAccess`'
- en: '`CloudWatchFullAccess`'
  id: totrans-156
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`CloudWatchFullAccess`'
- en: Save the role as `polly-lambda-role`.
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将角色保存为 `polly-lambda-role`。
- en: 'Next, you will create a Lambda function:'
  id: totrans-158
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 接下来，您将创建一个 Lambda 函数：
- en: Navigate to `Lambda > Functions >` `Create Function`.
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到 `Lambda > 函数 >` `创建函数`。
- en: Name the function `polly-lambda`
  id: totrans-160
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将函数命名为 `polly-lambda`
- en: Set the runtime to `python 3.6`.
  id: totrans-161
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将运行时设置为 `python 3.6`。
- en: Use an existing role; that is, `polly-lambda-role`.
  id: totrans-162
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用现有角色；即 `polly-lambda-role`。
- en: Paste the code at [https://github.com/PacktPublishing/AWS-Certified-Machine-Learning-Specialty-MLS-C01-Certification-Guide-Second-Edition/tree/main/Chapter08/Amazon%20Rekognition%20Demo/lambda_code](https://github.com/PacktPublishing/AWS-Certified-Machine-Learning-Specialty-MLS-C01-Certification-Guide-Second-Edition/tree/main/Chapter08/Amazon%20Rekognition%20Demo/lambda_code)
    into your Lambda function and check its progress in the CloudWatch console. You
    will be using the `start_speech_synthesis_task` API from Amazon Polly for this
    code; it is an asynchronous synthesis task.
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将代码粘贴到 [https://github.com/PacktPublishing/AWS-Certified-Machine-Learning-Specialty-MLS-C01-Certification-Guide-Second-Edition/tree/main/Chapter08/Amazon%20Rekognition%20Demo/lambda_code](https://github.com/PacktPublishing/AWS-Certified-Machine-Learning-Specialty-MLS-C01-Certification-Guide-Second-Edition/tree/main/Chapter08/Amazon%20Rekognition%20Demo/lambda_code)
    并在 Lambda 函数中检查其在 CloudWatch 控制台中的进度。您将使用 Amazon Polly 的 `start_speech_synthesis_task`
    API 来执行此代码；它是一个异步合成任务。
- en: 'Scroll down and in the `59` `sec`, as shown in *Figure 8**.6*, and click **Save**:'
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 滚动到 `59` 秒，如图 *图 8**.6* 所示，然后点击 **保存**：
- en: Important note
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: The default is 3 seconds. Since this is an asynchronous operation, any retried
    attempts will create more files.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 默认值为 3 秒。由于这是一个异步操作，任何重试尝试都会创建更多文件。
- en: '![Figure 8.6 – Edit basic settings window](img/B21197_08_06.jpg)'
  id: totrans-167
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.6 – 编辑基本设置窗口](img/B21197_08_06.jpg)'
- en: Figure 8.6 – Edit basic settings window
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.6 – 编辑基本设置窗口
- en: Now, you will create a bucket to trigger an event.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您将创建一个存储桶以触发事件。
- en: Navigate to the AWS S3 console and create a bucket called `polly-test-baba`.
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到 AWS S3 控制台并创建一个名为 `polly-test-baba` 的存储桶。
- en: Create a folder called `input-text` (in this example, you will only upload .`txt`
    files).
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为 `input-text` 的文件夹（在这个例子中，您将只上传 `.txt` 文件）。
- en: Navigate to `Properties > Events > Add notification`. Fill in the required fields,
    as shown here, and click on `polly_event`
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到 `属性 > 事件 > 添加通知`。填写所需字段，如图所示，然后点击 `polly_event`
- en: '`All object` `create events`'
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`All object` `create events`'
- en: '`input-text/`'
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`input-text/`'
- en: '`.txt`'
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`.txt`'
- en: '`Lambda Function`'
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`Lambda Function`'
- en: '`polly-lambda`'
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`polly-lambda`'
- en: 'Next, you will upload a file to trigger an event and check its progress in
    CloudWatchUpload, in this case, a file called `test_file.txt` in `input-text`,
    as shown in *Figure 8**.7*. You can download the sample file from this book’s
    GitHub repository at [https://github.com/PacktPublishing/AWS-Certified-Machine-Learning-Specialty-MLS-C01-Certification-Guide-Second-Edition/tree/main/Chapter08/Amazon%20Polly%20Demo/text_file](https://github.com/PacktPublishing/AWS-Certified-Machine-Learning-Specialty-MLS-C01-Certification-Guide-Second-Edition/tree/main/Chapter08/Amazon%20Polly%20Demo/text_file):'
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，您将上传一个文件以触发事件，并在CloudWatchUpload中检查其进度，在这种情况下，一个名为`test_file.txt`的文件位于`input-text`中，如图*8.7*所示。您可以从本书的GitHub存储库中下载示例文件，网址为[https://github.com/PacktPublishing/AWS-Certified-Machine-Learning-Specialty-MLS-C01-Certification-Guide-Second-Edition/tree/main/Chapter08/Amazon%20Polly%20Demo/text_file](https://github.com/PacktPublishing/AWS-Certified-Machine-Learning-Specialty-MLS-C01-Certification-Guide-Second-Edition/tree/main/Chapter08/Amazon%20Polly%20Demo/text_file)：
- en: '![Figure 8.7 – The S3 bucket after uploading a text file for further processing](img/B21197_08_07.jpg)'
  id: totrans-179
  prefs: []
  type: TYPE_IMG
  zh: '![图8.7 – 上传文本文件以进行进一步处理后的S3存储桶](img/B21197_08_07.jpg)'
- en: Figure 8.7 – The S3 bucket after uploading a text file for further processing
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.7 – 上传文本文件以进行进一步处理后的S3存储桶
- en: This will trigger the Lambda function. You can monitor your logs by going to
    `CloudWatch> CloudWatch Logs> Log` `groups> /aws/lambda/polly-lambda`.
  id: totrans-181
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将触发Lambda函数。您可以通过访问`CloudWatch> CloudWatch Logs> 日志组> /aws/lambda/polly-lambda`来监控您的日志。
- en: 'Click on the latest stream; the log will look as follows:'
  id: totrans-182
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击最新的流；日志将如下所示：
- en: '[PRE40]'
  id: totrans-183
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE40]'
- en: '[PRE41]'
  id: totrans-184
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE41]'
- en: '[PRE42]'
  id: totrans-185
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE42]'
- en: '[PRE43]'
  id: totrans-186
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE43]'
- en: '[PRE44]'
  id: totrans-187
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE44]'
- en: '[PRE45]'
  id: totrans-188
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE45]'
- en: '[PRE46]'
  id: totrans-189
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE46]'
- en: '[PRE47]'
  id: totrans-190
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE47]'
- en: '[PRE48]'
  id: totrans-191
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE48]'
- en: '[PRE49]'
  id: totrans-192
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE49]'
- en: '[PRE50]'
  id: totrans-193
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE50]'
- en: '[PRE51]'
  id: totrans-194
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE51]'
- en: '[PRE52]'
  id: totrans-195
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE52]'
- en: '[PRE53]'
  id: totrans-196
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE53]'
- en: '[PRE54]'
  id: totrans-197
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE54]'
- en: '[PRE55]'
  id: totrans-198
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE55]'
- en: '[PRE56]'
  id: totrans-199
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE56]'
- en: 'The logs sample is shown in *Figure 8**.8*:'
  id: totrans-200
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 日志样本如图*8.8*所示：
- en: '![Figure 8.8 – The logs in the CloudWatch console](img/B21197_08_08.jpg)'
  id: totrans-201
  prefs: []
  type: TYPE_IMG
  zh: '![图8.8 – CloudWatch控制台中的日志](img/B21197_08_08.jpg)'
- en: Figure 8.8 – The logs in the CloudWatch console
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.8 – CloudWatch控制台中的日志
- en: 'It will create output in MP3 format, as shown in *Figure 8**.9*. Download and
    listen to it:'
  id: totrans-203
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它将以MP3格式创建输出，如图*8.9*所示。下载并收听它：
- en: '![Figure 8.9 – The output file that was created in the S3 bucket](img/B21197_08_09.jpg)'
  id: totrans-204
  prefs: []
  type: TYPE_IMG
  zh: '![图8.9 – 在S3存储桶中创建的输出文件](img/B21197_08_09.jpg)'
- en: Figure 8.9 – The output file that was created in the S3 bucket
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.9 – 在S3存储桶中创建的输出文件
- en: Important note
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 重要注意事项
- en: The most scalable and cost-effective way for your mobile apps or web apps is
    to generate an AWS pre-signed URL for S3 buckets and provide it to your users.
    These S3 Put events asynchronously invoke downstream AI workflows to generate
    results and send a response to the end users. Many users can be served at the
    same time through this approach, and it may increase performance and throughput.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 对于您的移动应用或Web应用来说，最具可扩展性和成本效益的方式是生成AWS预签名URL以供S3存储桶使用，并将其提供给您的用户。这些S3 Put事件异步调用下游AI工作流程以生成结果，并向最终用户发送响应。通过这种方式，可以同时为许多用户提供服务，并且可能会提高性能和吞吐量。
- en: In this section, you learned how to implement text to speech. In the next section,
    you will learn about Amazon Transcribe, a speech-to-text AI service.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，您学习了如何实现文本到语音。在下一节中，您将学习关于Amazon Transcribe，这是一种语音到文本的AI服务。
- en: Speech to text with Amazon Transcribe
  id: totrans-209
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Amazon Transcribe进行语音到文本
- en: 'In the previous section, you learned about text to speech. In this section,
    you will learn about speech to text and the service that provides it: **Amazon
    Transcribe**. It is an automatic speech recognition service that uses pre-trained
    deep learning models, which means that you do not have to train on petabytes of
    data to produce a model; Amazon does this for us. You just have to use the APIs
    that are available to transcribe audio files or video files; it supports a number
    of different languages and custom vocabulary too. Accuracy is the key, and through
    custom vocabulary, you can enhance it based on the desired domain or industry:'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一节中，您学习了关于文本到语音的内容。在本节中，您将学习关于语音到文本及其提供的服务：**Amazon Transcribe**。它是一个自动语音识别服务，使用预训练的深度学习模型，这意味着您不需要在PB级数据上进行训练以生成模型；亚马逊为我们完成这项工作。您只需使用可用的API来转录音频文件或视频文件；它还支持多种不同的语言和自定义词汇。准确性是关键，并且通过自定义词汇，您可以根据所需的领域或行业进行增强：
- en: '![Figure 8.10 – Block diagram of Amazon Transcribe’s input and output](img/B21197_08_10.jpg)'
  id: totrans-211
  prefs: []
  type: TYPE_IMG
  zh: '![图8.10 – Amazon Transcribe输入和输出的框图](img/B21197_08_10.jpg)'
- en: Figure 8.10 – Block diagram of Amazon Transcribe’s input and output
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.10 – Amazon Transcribe输入和输出的框图
- en: 'Some common uses of Amazon Transcribe include the following:'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon Transcribe的一些常见用途包括以下内容：
- en: Real-time audio streaming and transcription
  id: totrans-214
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实时音频流和转录
- en: Transcripting pre-recorded audio files
  id: totrans-215
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 转录预录制的音频文件
- en: Enable text searching from a media file by combining AWS Elasticsearch and Amazon
    Transcribe
  id: totrans-216
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过结合 AWS Elasticsearch 和 Amazon Transcribe 启用从媒体文件中进行文本搜索
- en: Performing sentiment analysis on recorded audio files for voice helpdesk (contact
    center analytics)
  id: totrans-217
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对录音音频文件进行情感分析以帮助语音帮助台（接触中心分析）
- en: Channel identification separation
  id: totrans-218
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 频道识别分离
- en: Next, you will explore the benefits of Amazon Transcribe.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，你将探索 Amazon Transcribe 的好处。
- en: Exploring the benefits of Amazon Transcribe
  id: totrans-220
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 探索 Amazon Transcribe 的好处
- en: 'Let’s look at some of the benefits of using Amazon Transcribe:'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看使用 Amazon Transcribe 的一些好处：
- en: '`VocabularyFilterName` and `VocabularyFilterMethod`, which are provided by
    the `StratTranscriptionJob` operation. For example, in financial organizations,
    this can be used to redact a caller’s details.'
  id: totrans-222
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`VocabularyFilterName` 和 `VocabularyFilterMethod`，这些是由 `StratTranscriptionJob`
    操作提供的。例如，在金融机构中，这可以用来编辑呼叫者的详细信息。'
- en: '**Language identification**: It can automatically identify the most used language
    in an audio file and generate transcriptions. If you have several audio files,
    then this service will help you classify them by language.'
  id: totrans-223
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**语言识别**：它可以自动识别音频文件中最常用的语言并生成转录文本。如果你有多个音频文件，这项服务将帮助你按语言对它们进行分类。'
- en: '**Streaming transcription**: You can send recorded audio files or live audio
    streams to Amazon Transcribe and output a stream of text in real time.'
  id: totrans-224
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**流式转录**：你可以将记录的音频文件或实时音频流发送到 Amazon Transcribe，并实时输出文本流。'
- en: '**Custom vocabulary or customized transcription**: You can use your custom
    vocabulary list as per your custom needs to generate accurate transcriptions.'
  id: totrans-225
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**自定义词汇或定制转录**：你可以根据你的特定需求使用自定义词汇表来生成准确的转录文本。'
- en: '**Timestamp generation**: If you want to build or add subtitles to your videos,
    then Amazon Transcribe can return the timestamp for each word or phrase from the
    audio.'
  id: totrans-226
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**时间戳生成**：如果你想为视频创建或添加字幕，那么 Amazon Transcribe 可以从音频中返回每个单词或短语的时戳。'
- en: '**Cost effectiveness**: Being a managed service, there is no infrastructure
    cost.'
  id: totrans-227
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**成本效益**：作为一个托管服务，没有基础设施成本。'
- en: Now, let’s get hands-on with Amazon Transcribe.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们亲自动手使用 Amazon Transcribe。
- en: Getting hands-on with Amazon Transcribe
  id: totrans-229
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 亲自动手使用 Amazon Transcribe
- en: 'In this section, you will build a pipeline where you can integrate AWS Lambda
    with Amazon Transcribe to read an audio file stored in a folder in an S3 bucket,
    and then store the output JSON file in another S3 bucket. You will monitor the
    task’s progress in CloudWatch Logs too. You will use the `start_transcription_job`
    asynchronous function to start our job and you will constantly monitor the job
    through `get_transcription_job` until its status becomes `COMPLETED`. Let’s get
    started:'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，你将构建一个管道，其中你可以将 AWS Lambda 与 Amazon Transcribe 集成，以读取存储在 S3 桶中文件夹中的音频文件，然后将输出
    JSON 文件存储在另一个 S3 桶中。你还将通过 CloudWatch 日志监控任务的进度。你将使用 `start_transcription_job`
    异步函数来启动我们的工作，并通过 `get_transcription_job` 持续监控工作，直到其状态变为 `COMPLETED`。让我们开始吧：
- en: 'First, create an IAM role called `transcribe-demo-role` for the Lambda function
    to execute. Ensure that it can read and write from/to S3, use Amazon Transcribe,
    and print the output in CloudWatch logs. Add the following policies to the IAM
    role:'
  id: totrans-231
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，为 Lambda 函数创建一个名为 `transcribe-demo-role` 的 IAM 角色，以确保它可以读取和写入 S3，使用 Amazon
    Transcribe，并在 CloudWatch 日志中打印输出。将以下策略添加到 IAM 角色中：
- en: '`AmazonS3FullAccess`'
  id: totrans-232
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`AmazonS3FullAccess`'
- en: '`CloudWatchFullAccess`'
  id: totrans-233
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`CloudWatchFullAccess`'
- en: '`AmazonTranscribeFullAccess`'
  id: totrans-234
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`AmazonTranscribeFullAccess`'
- en: Now, you will create a Lambda function called `transcribe-lambda` with our existing
    IAM role, `transcribe-demo-role`, and save it.
  id: totrans-235
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，你将使用现有的 IAM 角色 `transcribe-demo-role` 创建一个名为 `transcribe-lambda` 的 Lambda
    函数，并将其保存。
- en: Please make sure you change the default timeout to a higher value in the `start_transcription_job`
    to start the task and monitor it by using the `get_transcription_job` API.
  id: totrans-236
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 请确保将 `start_transcription_job` 中的默认超时时间更改为更高的值，以使用 `get_transcription_job` API
    启动任务并监控它。
- en: Paste the code available at [https://github.com/PacktPublishing/AWS-Certified-Machine-Learning-Specialty-MLS-C01-Certification-Guide-Second-Edition/blob/main/Chapter08/Amazon%20Transcribe%20Demo/lambda_function/lambda_function.py](https://github.com/PacktPublishing/AWS-Certified-Machine-Learning-Specialty-MLS-C01-Certification-Guide-Second-Edition/blob/main/Chapter08/Amazon%20Transcribe%20Demo/lambda_function/lambda_function.py)
    and click on **Deploy**.
  id: totrans-237
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将可用的代码粘贴到[https://github.com/PacktPublishing/AWS-Certified-Machine-Learning-Specialty-MLS-C01-Certification-Guide-Second-Edition/blob/main/Chapter08/Amazon%20Transcribe%20Demo/lambda_function/lambda_function.py](https://github.com/PacktPublishing/AWS-Certified-Machine-Learning-Specialty-MLS-C01-Certification-Guide-Second-Edition/blob/main/Chapter08/Amazon%20Transcribe%20Demo/lambda_function/lambda_function.py)，然后点击**部署**。
- en: 'This should give us the following output:'
  id: totrans-238
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这应该会给我们以下输出：
- en: '![Figure 8.11 – The Basic settings section of our created lambda function](img/B21197_08_11.jpg)'
  id: totrans-239
  prefs: []
  type: TYPE_IMG
  zh: '![图8.11 – 我们创建的Lambda函数的基本设置部分](img/B21197_08_11.jpg)'
- en: Figure 8.11 – The Basic settings section of our created lambda function
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.11 – 我们创建的Lambda函数的基本设置部分
- en: Next, you will be creating an S3 bucket called `transcribe-demo-101` and a folder
    called `input`. Create an event by going to the `audio-event`
  id: totrans-241
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，你将创建一个名为`transcribe-demo-101`的S3存储桶和一个名为`input`的文件夹。通过访问`audio-event`创建一个事件
- en: '`All object` `create events`'
  id: totrans-242
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`所有对象` `创建事件`'
- en: '`input/`'
  id: totrans-243
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`input/`'
- en: '`Lambda Function`'
  id: totrans-244
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`Lambda 函数`'
- en: '`transcribe-lambda`'
  id: totrans-245
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`transcribe-lambda`'
- en: Upload the audio file in `.mp4` format to the `input` folder. This will trigger
    the Lambda function. As per the code, the output will be stored in the S3 bucket
    in JSON format, which you can then use to read the contents of the file.
  id: totrans-246
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`.mp4`格式的音频文件上传到`input`文件夹。这将触发Lambda函数。根据代码，输出将以JSON格式存储在S3存储桶中，然后你可以用它来读取文件内容。
- en: 'Navigate to `CloudWatch > CloudWatch Logs > Log groups > aws/lambda/transcribe-lambda`.
    Choose the latest stream from the list. It will look as follows:'
  id: totrans-247
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到`CloudWatch > CloudWatch Logs > Log groups > aws/lambda/transcribe-lambda`。从列表中选择最新的流。它看起来如下：
- en: '![Figure 8.12 – The logs in a Log Stream for the specified log groups in the
    CloudWatch console](img/B21197_08_12.jpg)'
  id: totrans-248
  prefs: []
  type: TYPE_IMG
  zh: '![图8.12 – 在CloudWatch控制台中指定日志组中的日志记录](img/B21197_08_12.jpg)'
- en: Figure 8.12 – The logs in a Log Stream for the specified log groups in the CloudWatch
    console
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.12 – 在CloudWatch控制台中指定日志组中的日志记录
- en: 'The output is saved to the S3 bucket in JSON format, as per the job name mentioned
    in your code (you can use the S3 `getObject` API to download and read it):'
  id: totrans-250
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输出以JSON格式保存到S3存储桶中，如代码中提到的作业名称（你可以使用S3的`getObject` API下载和读取它）：
- en: '![Figure 8.13 – The output JSON file in an S3 bucket](img/B21197_08_13.jpg)'
  id: totrans-251
  prefs: []
  type: TYPE_IMG
  zh: '![图8.13 – S3存储桶中的输出JSON文件](img/B21197_08_13.jpg)'
- en: Figure 8.13 – The output JSON file in an S3 bucket
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.13 – S3存储桶中的输出JSON文件
- en: Important note
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: It is a best practice not to overprovision your function’s timeout settings.
    Always understand your code performance and set a function timeout accordingly.
    Overprovisioning a function timeout results in Lambda functions running longer,
    causing unexpected costs. If you are using asynchronous API calls in your Lambda
    function, then it is good to write them into SNS topics on success and trigger
    another Lambda function from that. If it needs human intervention, then it is
    suggested that you use AWS Step Functions.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 不要过度配置函数的超时设置是一个最佳实践。始终了解你的代码性能，并相应地设置函数超时。过度配置函数超时会导致Lambda函数运行时间更长，造成意外的成本。如果你在Lambda函数中使用异步API调用，那么在成功时将它们写入SNS主题，并从那里触发另一个Lambda函数是个好主意。如果需要人工干预，建议使用AWS
    Step Functions。
- en: In this section, you learned and applied Amazon Transcribe to convert speech
    into text. In the next section, you will learn about one of the most powerful
    AWS AI services you can use to get the maximum amount of insight from our text
    data.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，你学习了并应用了Amazon Transcribe将语音转换为文本。在下一节中，你将了解你可以使用的最强大的AWS AI服务之一，以从我们的文本数据中获得最大洞察力。
- en: Implementing natural language processing with Amazon Comprehend
  id: totrans-256
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Amazon Comprehend实现自然语言处理
- en: 'This service helps you extract insights from unstructured text. Unstructured
    text information is growing exponentially. A few data source examples are as follows:'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 此服务帮助你从非结构化文本中提取洞察力。非结构化文本信息呈指数增长。以下是一些数据源示例：
- en: '**Customer engagement**: Call center, issue triage, customer surveys, and product
    reviews'
  id: totrans-258
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**客户参与度**：呼叫中心、问题分类、客户调查和产品评论'
- en: '**Business processes**: Customer/vendor emails, product support messages, and
    operation support feedback'
  id: totrans-259
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**业务流程**：客户/供应商电子邮件、产品支持消息和运营支持反馈'
- en: '**Records and research**: Whitepapers and medical records'
  id: totrans-260
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**记录和研究**：白皮书和医疗记录'
- en: '**News and social media**: Social media analytics, brand trends, and correlated
    events'
  id: totrans-261
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**新闻和社交媒体**：社交媒体分析、品牌趋势和关联事件'
- en: Now, the question is, what can you do with this data? How can you analyze it
    and extract any value out of it? The answer is Amazon Comprehend, which is used
    to get insights from unstructured data.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，问题是，你能用这些数据做什么？你如何分析它并从中提取任何价值？答案是亚马逊理解，它用于从非结构化数据中获取洞察。
- en: 'Some common uses of Amazon Comprehend include the following:'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 亚马逊理解的一些常见用途包括以下内容：
- en: Information management system
  id: totrans-264
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 信息管理系统
- en: More accurate search system on organized topics
  id: totrans-265
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有组织的主题上的更精确的搜索系统
- en: Sentiment analysis of users
  id: totrans-266
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户情感分析
- en: Support ticket classification
  id: totrans-267
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持票分类
- en: Language detection from a document and then translating it into English using
    Amazon Translate
  id: totrans-268
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从文档中检测语言并将其翻译成英语使用亚马逊翻译
- en: Creating a system to label unstructured clinical data to assist in research
    and analysis purposes
  id: totrans-269
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建一个系统来标记非结构化临床数据，以协助研究和分析目的
- en: Extracting topics from saved audio files of company meetings or TV news
  id: totrans-270
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从公司会议或电视新闻的保存音频文件中提取主题
- en: Next, you’ll explore the benefits of Amazon Comprehend.
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，你将探索亚马逊理解的益处。
- en: Exploring the benefits of Amazon Comprehend
  id: totrans-272
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 探索亚马逊理解的益处
- en: 'Some of the advantages of using Comprehend can be seen in the following image:'
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Comprehend 的某些优势可以在以下图像中看到：
- en: '![Figure 8.14 – A block diagram showing Amazon Comprehend’s capabilities](img/B21197_08_14.jpg)'
  id: totrans-274
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.14 – 显示亚马逊理解功能的框图](img/B21197_08_14.jpg)'
- en: Figure 8.14 – A block diagram showing Amazon Comprehend’s capabilities
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.14 – 显示亚马逊理解功能的框图
- en: 'Let’s look at these in more detail:'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们更详细地看看这些：
- en: It detects the language of the text and extracts key phrases. Amazon Comprehend
    can be used for sentiment analysis and topic modeling too.
  id: totrans-277
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它检测文本的语言并提取关键短语。亚马逊理解也可用于情感分析和主题建模。
- en: Amazon Comprehend Medical can be used to extract medical information.
  id: totrans-278
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 亚马逊理解医疗可用于提取医疗信息。
- en: You pay for what you use since this is a fully managed service; you do not have
    to pay for the infrastructure. You do not need to train, develop, and deploy your
    own model.
  id: totrans-279
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由于这是一个完全管理的服务，你只需为使用付费；你不需要为基础设施付费。你不需要训练、开发和部署自己的模型。
- en: The topic modeling service works by extracting up to 100 topics. A topic is
    a keyword bucket so that you can see what is in the actual corpus of documents.
  id: totrans-280
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 主题建模服务通过提取最多 100 个主题来工作。主题是一个关键词桶，这样你就可以看到实际文档语料库中的内容。
- en: It is accurate, continuously trained, and easy to use.
  id: totrans-281
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它是准确的、持续训练的，并且易于使用。
- en: Next, you’ll get hands-on with Amazon Comprehend.
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，你将亲身体验亚马逊理解。
- en: Getting hands-on with Amazon Comprehend
  id: totrans-283
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 亲身体验亚马逊理解
- en: 'In this section, you will build a pipeline where you can integrate AWS Lambda
    with Amazon Rekognition and Amazon Comprehend. You will then read an image file
    stored in an S3 bucket and detect the language of the text that has been extracted
    from the image. You will also use CloudWatch to print out the output. The following
    is a diagram of our use case:'
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，你将构建一个管道，其中你可以将 AWS Lambda 与亚马逊识别和亚马逊理解集成。然后，你将读取存储在 S3 存储桶中的图像文件，并检测从图像中提取的文本的语言。你还将使用
    CloudWatch 打印输出。以下是我们用例的图示：
- en: '![Figure 8.15 – Architecture diagram of the required use case](img/B21197_08_15.jpg)'
  id: totrans-285
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.15 – 所需用例的架构图](img/B21197_08_15.jpg)'
- en: Figure 8.15 – Architecture diagram of the required use case
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.15 – 所需用例的架构图
- en: 'Let’s begin by creating an IAM role:'
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们首先创建一个 IAM 角色：
- en: Navigate to the IAM console page.
  id: totrans-288
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到 IAM 控制台页面。
- en: Select **Roles** from the left-hand menu.
  id: totrans-289
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从左侧菜单中选择**角色**。
- en: Select **Create role.**
  id: totrans-290
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**创建角色**。
- en: Select **Lambda** as the trusted entity.
  id: totrans-291
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**Lambda**作为受信任实体。
- en: 'Add the following managed `policies`:'
  id: totrans-292
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加以下管理`策略`：
- en: '`AmazonS3ReadOnlyAccess`'
  id: totrans-293
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`AmazonS3ReadOnlyAccess`'
- en: '`AmazonRekognitionFullAccess`'
  id: totrans-294
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`AmazonRekognitionFullAccess`'
- en: '`ComprehendFullAccess`'
  id: totrans-295
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ComprehendFullAccess`'
- en: '`CloudWatchFullAccess`'
  id: totrans-296
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`CloudWatchFullAccess`'
- en: Save the role as `language-detection-from-image-role`.
  id: totrans-297
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将角色保存为 `language-detection-from-image-role`。
- en: Now, let’s create the Lambda function. Navigate to `Lambda > Functions >` `Create
    Function`.
  id: totrans-298
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让我们创建 Lambda 函数。导航到 `Lambda > 函数 >` `创建函数`。
- en: Name the function `language-detection-from-image`.
  id: totrans-299
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将函数命名为`language-detection-from-image`。
- en: Set the runtime to `Python 3.6`.
  id: totrans-300
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将运行时设置为 `Python 3.6`。
- en: Use our existing role; that is, `language-detection-from-image-role`.
  id: totrans-301
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用我们现有的角色；即，`language-detection-from-image-role`。
- en: Download the code from [https://github.com/PacktPublishing/AWS-Certified-Machine-Learning-Specialty-MLS-C01-Certification-Guide-Second-Edition/tree/main/Chapter08/Amazon%20Transcribe%20Demo/lambda_function](https://github.com/PacktPublishing/AWS-Certified-Machine-Learning-Specialty-MLS-C01-Certification-Guide-Second-Edition/tree/main/Chapter08/Amazon%20Transcribe%20Demo/lambda_function),
    paste it into the function, and click `detect_text` API from Amazon Rekognition
    to detect text from an image and the `batch_detect_dominant_language` API from
    Amazon Comprehend to detect the language of the text.
  id: totrans-302
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从[https://github.com/PacktPublishing/AWS-Certified-Machine-Learning-Specialty-MLS-C01-Certification-Guide-Second-Edition/tree/main/Chapter08/Amazon%20Transcribe%20Demo/lambda_function](https://github.com/PacktPublishing/AWS-Certified-Machine-Learning-Specialty-MLS-C01-Certification-Guide-Second-Edition/tree/main/Chapter08/Amazon%20Transcribe%20Demo/lambda_function)下载代码，将其粘贴到函数中，然后从Amazon
    Rekognition点击`detect_text` API以从图像中检测文本，并从Amazon Comprehend点击`batch_detect_dominant_language`
    API以检测文本的语言。
- en: Now, go to your AWS S3 console and create a bucket called *language-detection-image*.
  id: totrans-303
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，前往你的AWS S3控制台，创建一个名为*language-detection-image*的存储桶。
- en: Create a folder called `input-image` (in this example, you will only upload
    `.``jpg` files).
  id: totrans-304
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`input-image`的文件夹（在这个例子中，你将只上传`.jpg`文件）。
- en: Navigate to `Properties > Events>` `Add notification`.
  id: totrans-305
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到`属性 > 事件 > 添加通知`。
- en: Fill in the required fields in the `image-upload-event`
  id: totrans-306
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`image-upload-event`中填写所需的字段。
- en: '`All object` `create events`'
  id: totrans-307
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`所有对象` `创建事件`'
- en: '`input-image/`'
  id: totrans-308
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`input-image/`'
- en: '`.jpg`'
  id: totrans-309
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`.jpg`'
- en: '`Lambda Function`'
  id: totrans-310
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`Lambda 函数`'
- en: '`language-detection-from-image`'
  id: totrans-311
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`language-detection-from-image`'
- en: Navigate to `Amazon S3>language-detection-image>input-image`. Upload the `sign-image.jpg`
    image in the folder. (This file is available in this book’s GitHub repository
    at [https://github.com/PacktPublishing/AWS-Certified-Machine-Learning-Specialty-MLS-C01-Certification-Guide-Second-Edition/tree/main/Chapter08/Amazon%20Comprehend%20Demo/input_image](https://github.com/PacktPublishing/AWS-Certified-Machine-Learning-Specialty-MLS-C01-Certification-Guide-Second-Edition/tree/main/Chapter08/Amazon%20Comprehend%20Demo/input_image)).
  id: totrans-312
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到`Amazon S3 > language-detection-image > input-image`。将文件夹中的`sign-image.jpg`图像上传。
    (此文件可在本书的GitHub存储库中找到，地址为[https://github.com/PacktPublishing/AWS-Certified-Machine-Learning-Specialty-MLS-C01-Certification-Guide-Second-Edition/tree/main/Chapter08/Amazon%20Comprehend%20Demo/input_image](https://github.com/PacktPublishing/AWS-Certified-Machine-Learning-Specialty-MLS-C01-Certification-Guide-Second-Edition/tree/main/Chapter08/Amazon%20Comprehend%20Demo/input_image))。
- en: This file upload will trigger the Lambda function. You can monitor the logs
    from `CloudWatch> CloudWatch Logs> Log` `groups> /aws/lambda/language-detection-from-image`.
  id: totrans-313
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此文件上传将触发Lambda函数。你可以从`CloudWatch > CloudWatch Logs > 日志组 > /aws/lambda/language-detection-from-image`监控日志。
- en: 'Click on the streams and select the latest one. The detected language is printed
    in the logs, as shown in *Figure 8**.16*:'
  id: totrans-314
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击流并选择最新的一个。检测到的语言将在日志中打印出来，如图*图8.16*所示：
- en: '![Figure 8.16 – The logs in CloudWatch for verifying the output](img/B21197_08_16.jpg)'
  id: totrans-315
  prefs: []
  type: TYPE_IMG
  zh: '![图8.16 – 用于验证输出的CloudWatch日志](img/B21197_08_16.jpg)'
- en: Figure 8.16 – The logs in CloudWatch for verifying the output
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.16 – 用于验证输出的CloudWatch日志
- en: Important note
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: 'It is suggested that you use batch operations such as `BatchDetectSentiment`or
    `BatchDetectDominantLanguage` in your production environment. This is because
    single API operations can cause API-level throttling. More details are available
    here: [https://docs.aws.amazon.com/comprehend/latest/dg/functionality.html](https://docs.aws.amazon.com/comprehend/latest/dg/functionality.html).'
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 建议你在生产环境中使用批量操作，例如`BatchDetectSentiment`或`BatchDetectDominantLanguage`。这是因为单个API操作可能会引起API级别的限制。更多详情请参阅[https://docs.aws.amazon.com/comprehend/latest/dg/functionality.html](https://docs.aws.amazon.com/comprehend/latest/dg/functionality.html)。
- en: In this section, you learned how to use Amazon Comprehend to detect the language
    of texts. The text is extracted into our Lambda function using Amazon Rekognition.
    In the next section, you will learn about translating the same text into English
    via Amazon Translate.
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，你学习了如何使用Amazon Comprehend检测文本的语言。文本通过Amazon Rekognition提取到我们的Lambda函数中。在下一节中，你将学习如何通过Amazon
    Translate将相同的文本翻译成英文。
- en: Translating documents with Amazon Translate
  id: totrans-320
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Amazon Translate翻译文档
- en: Most of the time, people prefer to communicate in their own language, even on
    digital platforms. Amazon Translate is a text translation service. You can provide
    documents or strings of text in various languages and get it back in a different
    language. It uses pre-trained deep learning techniques, so you should not be worried
    about the models, nor how they are managed. You can make API requests and get
    the results back.
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数时候，人们更喜欢用他们自己的语言进行沟通，即使在数字平台上。Amazon Translate是一种文本翻译服务。您可以在各种语言中提供文档或文本字符串，并得到不同语言的翻译。它使用预训练的深度学习技术，因此您不必担心模型，也不必担心它们的管理。您可以发出API请求并获取结果。
- en: 'Some common uses of Amazon Translate include the following:'
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon Translate的一些常见用途包括以下内容：
- en: If there is an organization-wide requirement to prepare documents in different
    languages, then Translate is the solution for converting one language into many.
  id: totrans-323
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果有组织范围内的需求需要准备不同语言文档，那么Translate是将一种语言转换为多种语言的解决方案。
- en: Online chat applications can be translated in real time to provide a better
    customer experience.
  id: totrans-324
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在线聊天应用可以实时翻译，以提供更好的客户体验。
- en: To localize website content faster and more affordably into more languages.
  id: totrans-325
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更快、更经济地将网站内容本地化到更多语言。
- en: Sentiment analysis can be applied to different languages once they have been
    translated.
  id: totrans-326
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一旦翻译成不同语言，就可以对它们应用情感分析。
- en: To provide non-English language support for a news publishing website.
  id: totrans-327
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为新闻发布网站提供非英语语言支持。
- en: Next, you will explore the benefits of Amazon Translate.
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，您将探索Amazon Translate的好处。
- en: Exploring the benefits of Amazon Translate
  id: totrans-329
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 探索Amazon Translate的好处
- en: 'Some of the benefits of using Amazon Translate include the following:'
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Amazon Translate的一些好处包括以下内容：
- en: It uses neural machine translation, which mimics the way the human brain works.
  id: totrans-331
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它使用神经机器翻译，模仿人脑的工作方式。
- en: You do not need to maintain resources or infrastructures for the Translation
    action.
  id: totrans-332
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您不需要维护翻译操作的资源或基础设施。
- en: Produces high-quality results and maintains their consistency.
  id: totrans-333
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 产生高质量的结果并保持其一致性。
- en: You can customize brand names and model names. Other unique terms too can get
    translated using the custom terminology feature.
  id: totrans-334
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您可以自定义品牌名称和型号名称。其他独特术语也可以通过自定义术语功能进行翻译。
- en: Can be easily integrated with applications through APIs.
  id: totrans-335
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以通过API轻松集成到应用程序中。
- en: Amazon Translate scales itself when you need it to do more.
  id: totrans-336
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当您需要Amazon Translate执行更多任务时，它会自动扩展。
- en: Next, you will get hands-on with Amazon Translate.
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，您将亲身体验Amazon Translate。
- en: Getting hands-on with Amazon Translate
  id: totrans-338
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 亲身体验Amazon Translate
- en: 'In this section, you will build a product by integrating AWS Lambda with Amazon
    Rekognition, Amazon Comprehend, and Amazon Translate to read an image file stored
    in an S3 bucket. Then, you will detect the language of the text that has been
    extracted from the image so that you can translate it into English. You will also
    use CloudWatch to print the translated output. The following is a diagram of our
    use case:'
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，您将通过将AWS Lambda与Amazon Rekognition、Amazon Comprehend和Amazon Translate集成来构建一个产品，以读取存储在S3存储桶中的图像文件。然后，您将检测从图像中提取的文本的语言，以便将其翻译成英语。您还将使用CloudWatch打印翻译后的输出。以下是我们用例的示意图：
- en: '![Figure 8.17 – Architecture diagram of the required use case](img/B21197_08_17.jpg)'
  id: totrans-340
  prefs: []
  type: TYPE_IMG
  zh: '![图8.17 – 所需用例的架构图](img/B21197_08_17.jpg)'
- en: Figure 8.17 – Architecture diagram of the required use case
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.17 – 所需用例的架构图
- en: 'Let’s start by creating an IAM role:'
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从创建一个IAM角色开始：
- en: Navigate to the IAM console page.
  id: totrans-343
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到IAM控制台页面。
- en: Select **Roles** from the left-hand menu.
  id: totrans-344
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从左侧菜单中选择**Roles**。
- en: Select **Create role**.
  id: totrans-345
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**创建角色**。
- en: Select **Lambda** as the trusted entity.
  id: totrans-346
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**Lambda**作为受信任实体。
- en: 'Add the following managed policies:'
  id: totrans-347
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加以下管理策略：
- en: '`AmazonS3ReadOnlyAccess`'
  id: totrans-348
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`AmazonS3ReadOnlyAccess`'
- en: '`AmazonRekognitionFullAccess`'
  id: totrans-349
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`AmazonRekognitionFullAccess`'
- en: '`ComprehendFullAccess`'
  id: totrans-350
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ComprehendFullAccess`'
- en: '`CloudWatchFullAccess`'
  id: totrans-351
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`CloudWatchFullAccess`'
- en: '`TranslateFullAccess`'
  id: totrans-352
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TranslateFullAccess`'
- en: Save the role as `language-translation-from-image`.
  id: totrans-353
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将角色保存为`language-translation-from-image`。
- en: The next immediate step is to create a Lambda function. Navigate to `Lambda
    > Functions >` `Create Function`.
  id: totrans-354
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下一个直接步骤是创建一个Lambda函数。导航到`Lambda > Functions >` `Create Function`。
- en: Name the function `language-detection-from-image`.
  id: totrans-355
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将函数命名为`language-detection-from-image`。
- en: Set the runtime to `Python 3.6`.
  id: totrans-356
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置运行时为`Python 3.6`。
- en: Use an existing role; that is, `language-detection-from-image-role`.
  id: totrans-357
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用现有的角色；即`language-detection-from-image-role`。
- en: Paste the code available at [https://github.com/PacktPublishing/AWS-Certified-Machine-Learning-Specialty-MLS-C01-Certification-Guide-Second-Edition/blob/main/Chapter08/Amazon%20Translate%20Demo/lambda_function/lambda_function.py](https://github.com/PacktPublishing/AWS-Certified-Machine-Learning-Specialty-MLS-C01-Certification-Guide-Second-Edition/blob/main/Chapter08/Amazon%20Translate%20Demo/lambda_function/lambda_function.py)
    and click `translate_text` API to translate the input text.
  id: totrans-358
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将可用的代码粘贴到 [https://github.com/PacktPublishing/AWS-Certified-Machine-Learning-Specialty-MLS-C01-Certification-Guide-Second-Edition/blob/main/Chapter08/Amazon%20Translate%20Demo/lambda_function/lambda_function.py](https://github.com/PacktPublishing/AWS-Certified-Machine-Learning-Specialty-MLS-C01-Certification-Guide-Second-Edition/blob/main/Chapter08/Amazon%20Translate%20Demo/lambda_function/lambda_function.py)
    并点击 `translate_text` API 来翻译输入文本。
- en: The next step is to create a bucket called `language-translation-from-image`.
  id: totrans-359
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下一步是创建一个名为 `language-translation-from-image` 的存储桶。
- en: Create a folder named `image`. Then, navigate to `Properties > Events>` `Add
    notification`.
  id: totrans-360
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 创建一个名为 `image` 的文件夹。然后，导航到 `属性 > 事件 > 添加通知`。
- en: 'Fill in the required fields, as shown here, and click on Save (please make
    sure you select `.jpg` as the suffix; otherwise, it will trigger the Lambda function
    for any object creation process):'
  id: totrans-361
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 填写此处所示所需字段，然后点击保存（请确保你选择 `.jpg` 作为后缀；否则，它将触发任何对象创建过程的 Lambda 函数）：
- en: '`All object` `create events`'
  id: totrans-362
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`所有对象` `创建事件`'
- en: '`image/`'
  id: totrans-363
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`image/`'
- en: '`.jpg`'
  id: totrans-364
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.jpg`'
- en: '`Lambda Function`'
  id: totrans-365
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Lambda 函数`'
- en: '`language-translation-from-image`'
  id: totrans-366
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`language-translation-from-image`'
- en: 'Navigate to `Amazon S3 > language-detection-image > input-image`. Upload the
    `sign-image.jpg` image into the folder. This file is available in this book’s
    GitHub repository: [https://github.com/PacktPublishing/AWS-Certified-Machine-Learning-Specialty-MLS-C01-Certification-Guide-Second-Edition/tree/main/Chapter08/Amazon%20Translate%20Demo/input_image](https://github.com/PacktPublishing/AWS-Certified-Machine-Learning-Specialty-MLS-C01-Certification-Guide-Second-Edition/tree/main/Chapter08/Amazon%20Translate%20Demo/input_image).'
  id: totrans-367
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到 `Amazon S3 > language-detection-image > input-image`。将 `sign-image.jpg`
    图像上传到文件夹。此文件可在本书的 GitHub 仓库中找到：[https://github.com/PacktPublishing/AWS-Certified-Machine-Learning-Specialty-MLS-C01-Certification-Guide-Second-Edition/tree/main/Chapter08/Amazon%20Translate%20Demo/input_image](https://github.com/PacktPublishing/AWS-Certified-Machine-Learning-Specialty-MLS-C01-Certification-Guide-Second-Edition/tree/main/Chapter08/Amazon%20Translate%20Demo/input_image)。
- en: Uploading this image will trigger the Lambda function. You can monitor the logs
    by going to `CloudWatch > CloudWatch Logs > Log groups > /``aws/lambda/language-translation-from-image`.
  id: totrans-368
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 上传此图像将触发 Lambda 函数。你可以通过转到 `CloudWatch > CloudWatch 日志 > 日志组 > /aws/lambda/language-translation-from-image`
    来监控日志。
- en: 'Click on the streams and select the latest one. It will look as follows:'
  id: totrans-369
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击流并选择最新的一个。它看起来如下所示：
- en: '![Figure 8.18 – The logs in CloudWatch for verifying the output](img/B21197_08_18.jpg)'
  id: totrans-370
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.18 – 用于验证输出的 CloudWatch 日志](img/B21197_08_18.jpg)'
- en: Figure 8.18 – The logs in CloudWatch for verifying the output
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.18 – 用于验证输出的 CloudWatch 日志
- en: 'The translation is as follows:'
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: 翻译如下：
- en: '[PRE57]'
  id: totrans-373
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: '[PRE58]'
  id: totrans-374
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: '[PRE59]'
  id: totrans-375
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: '[PRE60]'
  id: totrans-376
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: '[PRE61]'
  id: totrans-377
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: '[PRE62]'
  id: totrans-378
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: '[PRE63]'
  id: totrans-379
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: '[PRE64]'
  id: totrans-380
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: '[PRE65]'
  id: totrans-381
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: '[PRE66]'
  id: totrans-382
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: '[PRE67]'
  id: totrans-383
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: Important note
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: For production use cases, it is recommended to use AWS Lambda with AWS Step
    Functions if you have dependent services or a chain of services.
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
  zh: 对于生产用例，如果你有依赖服务或服务链，建议使用 AWS Lambda 与 AWS Step Functions。
- en: Using the same S3 bucket to store input and output objects is not recommended.
    Output object creation in the same bucket may trigger recursive Lambda invocation.
    If you are using the same bucket, then you recommend that you use a prefix and
    suffix to trigger events. Similarly, you recommend using a prefix to store output
    objects.
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
  zh: 不建议使用相同的 S3 桶来存储输入和输出对象。在同一个桶中创建输出对象可能会触发递归 Lambda 调用。如果你使用的是同一个桶，那么建议你使用前缀和后缀来触发事件。同样，建议使用前缀来存储输出对象。
- en: In this section, you learned how to combine multiple services and chain their
    output to achieve a particular use case outcome. You learned how to integrate
    Amazon Rekognition to detect text in an image. The language can then be detected
    by using Amazon Comprehend. Then, you used the same input and translated it into
    English with the help of Amazon Translate. The translated output was then printed
    on CloudWatch logs for verification. In the next section, you will learn about
    Amazon Textract, which can be used to extract text from a document.
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，你学习了如何组合多个服务并将它们的输出链式连接以实现特定的用例结果。你学习了如何集成 Amazon Rekognition 以检测图像中的文本。然后，你可以使用
    Amazon Comprehend 来检测语言。然后，你使用相同的输入并在 Amazon Translate 的帮助下将其翻译成英语。翻译后的输出随后打印在
    CloudWatch 日志中进行验证。在下一节中，你将了解 Amazon Textract，它可以用于从文档中提取文本。
- en: Extracting text from documents with Amazon Textract
  id: totrans-388
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Amazon Textract 从文档中提取文本
- en: Manually extracting information from documents is slow, expensive, and prone
    to errors. Traditional optical character recognition software needs a lot of customization,
    and it will still give erroneous output. To avoid such manual processes and errors,
    you should use **Amazon Textract**. Generally, you convert the documents into
    images to detect bounding boxes around the texts in images. You then apply character
    recognition to read the text from it. Textract does all this for you, and also
    extracts text, tables, forms, and other data for you with minimal effort. If you
    get low-confidence results from Amazon Textract, then Amazon A2I is the best solution.
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
  zh: 手动从文档中提取信息既慢又贵，且容易出错。传统的光学字符识别软件需要大量定制，并且仍然会给出错误输出。为了避免此类手动过程和错误，您应该使用**Amazon
    Textract**。通常，您将文档转换为图像以检测图像中文本的边界框。然后，您应用字符识别来读取文本。Textract 会为您完成所有这些工作，并为您提取文本、表格、表单和其他数据，而无需付出太多努力。如果您从
    Amazon Textract 获得低置信度结果，那么 Amazon A2I 是最佳解决方案。
- en: 'Textract reduces the manual effort of extracting text from millions of scanned
    document pages. Once the information has been captured, actions can be taken on
    the text, such as storing it in different data stores, analyzing sentiments, or
    searching for keywords. The following diagram shows how Amazon Textract works:'
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
  zh: Textract 减少了从数百万扫描的文档页中提取文本的手动工作量。一旦信息被捕获，就可以对文本采取行动，例如将其存储在不同的数据存储中、分析情感或搜索关键词。以下图示显示了
    Amazon Textract 的工作原理：
- en: '![Figure 8.19 – Block diagram representation of Amazon Textract and how it
    stores its output](img/B21197_08_19.jpg)'
  id: totrans-391
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.19 – Amazon Textract 的框图表示及其输出存储方式](img/B21197_08_19.jpg)'
- en: Figure 8.19 – Block diagram representation of Amazon Textract and how it stores
    its output
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.19 – Amazon Textract 的框图表示及其输出存储方式
- en: 'Some common uses of Amazon Textract include the following:'
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon Textract 的常见用途包括以下内容：
- en: Documenting processing workflows to extract tables or forms
  id: totrans-394
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 记录处理工作流程以提取表格或表单
- en: Creating search indexes from documents using Amazon Elasticsearch
  id: totrans-395
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Amazon Elasticsearch 从文档中创建搜索索引
- en: Redacting personally identifiable information in a workflow; Textract identifies
    data types and form labels automatically
  id: totrans-396
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在工作流程中删除个人身份信息；Textract 自动识别数据类型和表单标签
- en: Next, you will explore the benefits of Amazon Textract.
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，您将探索 Amazon Textract 的优势。
- en: Exploring the benefits of Amazon Textract
  id: totrans-398
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 探索 Amazon Textract 的优势
- en: 'There are several reasons to use Textract:'
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Textract 的几个原因：
- en: Zero infrastructure cost
  id: totrans-400
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 零基础设施成本
- en: Fully managed service (reduced development and management overhead)
  id: totrans-401
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 完全托管服务（减少开发和管理工作量）
- en: Helps you extract both structured and unstructured data
  id: totrans-402
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 帮助您提取结构化和非结构化数据
- en: Handwritten reviews can be analyzed
  id: totrans-403
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以分析手写评论
- en: Amazon Textract performs better than OCR apps, which use a flat bag of words
  id: totrans-404
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Amazon Textract 的性能优于使用扁平词袋的 OCR 应用程序
- en: Next, you will get hands-on with Amazon Textract.
  id: totrans-405
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 接下来，您将通过实践掌握 Amazon Textract。
- en: Getting hands-on with Amazon Textract
  id: totrans-406
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 通过实践掌握 Amazon Textract
- en: 'In this section, you will use the Amazon Textract API to read an image file
    from our S3 bucket and print the FORM details on Cloudwatch. The same can be stored
    in S3 in your desired format for further use or can be stored in DynamoDB as a
    key-value pair. Let’s get started:'
  id: totrans-407
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，您将使用 Amazon Textract API 从我们的 S3 存储桶中读取图像文件，并在 Cloudwatch 上打印表单详情。这些信息可以以您希望的格式存储在
    S3 中以供进一步使用，也可以作为键值对存储在 DynamoDB 中。让我们开始吧：
- en: 'First, create an IAM role called `textract-use-case-role` with the following
    policies. This will allow the Lambda function to execute so that it can read from
    S3, use Amazon Textract, and print the output in CloudWatch logs:'
  id: totrans-408
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，创建一个名为 `textract-use-case-role` 的 IAM 角色，并应用以下策略。这将允许 Lambda 函数执行，以便它可以读取
    S3、使用 Amazon Textract 并在 CloudWatch 日志中打印输出：
- en: '`CloudWatchFullAccess`'
  id: totrans-409
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`CloudWatchFullAccess`'
- en: '`AmazonTextractFullAccess`'
  id: totrans-410
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`AmazonTextractFullAccess`'
- en: '`AmazonS3ReadOnlyAccess`'
  id: totrans-411
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`AmazonS3ReadOnlyAccess`'
- en: 'Let’s create an S3 bucket called `textract-document-analysis` and upload the
    `receipt.png` image file. This will be used to contain the FORM details that will
    be extracted. The image file is available at [https://github.com/PacktPublishing/AWS-Certified-Machine-Learning-Specialty-MLS-C01-Certification-Guide-Second-Edition/tree/main/Chapter08/Amazon%20Textract%20Demo/input_doc](https://github.com/PacktPublishing/AWS-Certified-Machine-Learning-Specialty-MLS-C01-Certification-Guide-Second-Edition/tree/main/Chapter08/Amazon%20Textract%20Demo/input_doc):'
  id: totrans-412
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们创建一个名为`textract-document-analysis`的S3存储桶，并上传`receipt.png`图像文件。这将用于包含将要提取的表单详情。图像文件可在[https://github.com/PacktPublishing/AWS-Certified-Machine-Learning-Specialty-MLS-C01-Certification-Guide-Second-Edition/tree/main/Chapter08/Amazon%20Textract%20Demo/input_doc](https://github.com/PacktPublishing/AWS-Certified-Machine-Learning-Specialty-MLS-C01-Certification-Guide-Second-Edition/tree/main/Chapter08/Amazon%20Textract%20Demo/input_doc)找到：
- en: '![Figure 8.20 – An S3 bucket with an image (.png) file uploaded to the input
    folder](img/B21197_08_20.jpg)'
  id: totrans-413
  prefs: []
  type: TYPE_IMG
  zh: '![图8.20 – 一个包含上传到输入文件夹的图像文件（.png）的S3存储桶](img/B21197_08_20.jpg)'
- en: Figure 8.20 – An S3 bucket with an image (.png) file uploaded to the input folder
  id: totrans-414
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.20 – 一个包含上传到输入文件夹的图像文件（.png）的S3存储桶
- en: 'The next step is to create a Lambda function called `read-scanned-doc`, as
    shown in *Figure 8**.21*, with an existing execution role called `textract-use-case-role`:'
  id: totrans-415
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下一步是创建一个名为`read-scanned-doc`的Lambda函数，如图8.21所示，使用现有的执行角色`textract-use-case-role`：
- en: '![Figure 8.21 – The AWS Lambda Create function dialog](img/B21197_08_21.jpg)'
  id: totrans-416
  prefs: []
  type: TYPE_IMG
  zh: '![图8.21 – AWS Lambda创建函数对话框](img/B21197_08_21.jpg)'
- en: Figure 8.21 – The AWS Lambda Create function dialog
  id: totrans-417
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.21 – AWS Lambda创建函数对话框
- en: 'Once the function has been created, paste the following code and deploy it.
    Scroll down to `analyze_document` API from Amazon Textract to get the `Table and
    Form` details via the `FeatureTypes` parameter of the API:'
  id: totrans-418
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 函数创建完成后，粘贴以下代码并部署。滚动到Amazon Textract的`analyze_document` API，通过API的`FeatureTypes`参数获取`Table
    and Form`详细信息：
- en: '[PRE68]'
  id: totrans-419
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE68]'
- en: '[PRE69]'
  id: totrans-420
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE69]'
- en: '[PRE70]'
  id: totrans-421
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE70]'
- en: '[PRE71]'
  id: totrans-422
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE71]'
- en: '[PRE72]'
  id: totrans-423
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE72]'
- en: '[PRE73]'
  id: totrans-424
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE73]'
- en: '[PRE74]'
  id: totrans-425
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE74]'
- en: '[PRE75]'
  id: totrans-426
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE75]'
- en: '[PRE76]'
  id: totrans-427
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE76]'
- en: '[PRE77]'
  id: totrans-428
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE77]'
- en: '[PRE78]'
  id: totrans-429
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE78]'
- en: '[PRE79]'
  id: totrans-430
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE79]'
- en: '[PRE80]'
  id: totrans-431
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE80]'
- en: '[PRE81]'
  id: totrans-432
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE81]'
- en: '[PRE82]'
  id: totrans-433
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE82]'
- en: '[PRE83]'
  id: totrans-434
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE83]'
- en: '[PRE84]'
  id: totrans-435
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE84]'
- en: '[PRE85]'
  id: totrans-436
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE85]'
- en: '[PRE86]'
  id: totrans-437
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE86]'
- en: '[PRE87]'
  id: totrans-438
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE87]'
- en: '[PRE88]'
  id: totrans-439
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE88]'
- en: '[PRE89]'
  id: totrans-440
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE89]'
- en: '[PRE90]'
  id: totrans-441
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE90]'
- en: '[PRE91]'
  id: totrans-442
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE91]'
- en: '[PRE92]'
  id: totrans-443
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE92]'
- en: '[PRE93]'
  id: totrans-444
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE93]'
- en: '[PRE94]'
  id: totrans-445
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE94]'
- en: '[PRE95]'
  id: totrans-446
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE95]'
- en: '[PRE96]'
  id: totrans-447
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE96]'
- en: '[PRE97]'
  id: totrans-448
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE97]'
- en: '[PRE98]'
  id: totrans-449
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE98]'
- en: Unlike the previous examples, you will create a test configuration to run our
    code.
  id: totrans-450
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 与前面的示例不同，您将创建一个测试配置来运行我们的代码。
- en: Click on the dropdown left of the **Test** button.
  id: totrans-451
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**测试**按钮左边的下拉菜单。
- en: Select **Configure test events** and choose **Create new** **test event**.
  id: totrans-452
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**配置测试事件**并选择**创建新****测试事件**。
- en: Select **Amazon S3 Put** from the **Event** **template** dropdown.
  id: totrans-453
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从**事件****模板**下拉菜单中选择**Amazon S3 Put**。
- en: 'In the JSON body, change the highlighted values as per our bucket name and
    key, as shown here:'
  id: totrans-454
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在JSON体中，根据我们的存储桶名称和键更改高亮显示的值，如图所示：
- en: '![Figure 8.22 – The Event template for testing the Lambda function](img/B21197_08_22.jpg)'
  id: totrans-455
  prefs: []
  type: TYPE_IMG
  zh: '![图8.22 – 测试Lambda函数的事件模板](img/B21197_08_22.jpg)'
- en: Figure 8.22 – The Event template for testing the Lambda function
  id: totrans-456
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.22 – 测试Lambda函数的事件模板
- en: In the `TextractDemo`.
  id: totrans-457
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`TextractDemo`中。
- en: Click **Save**.
  id: totrans-458
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**保存**。
- en: 'Select your test configuration (`TextractDemo`) and click on **Test**:'
  id: totrans-459
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择您的测试配置（`TextractDemo`）并点击**测试**：
- en: '![Figure 8.23 – Selecting the test configuration before running your test](img/B21197_08_23.jpg)'
  id: totrans-460
  prefs: []
  type: TYPE_IMG
  zh: '![图8.23 – 在运行测试前选择测试配置](img/B21197_08_23.jpg)'
- en: Figure 8.23 – Selecting the test configuration before running your test
  id: totrans-461
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.23 – 在运行测试前选择测试配置
- en: This will trigger the Lambda function. You can monitor the logs from `CloudWatch
    > CloudWatch Logs > Log groups > /``aws/lambda/ read-scanned-doc`.
  id: totrans-462
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将触发Lambda函数。您可以通过`CloudWatch > CloudWatch Logs > Log groups > /aws/lambda/read-scanned-doc`监控日志。
- en: 'Click on the streams and select the latest one. It will look as follows; the
    key-value pairs can be seen in *Figure 8**.24*:'
  id: totrans-463
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击流并选择最新的一个。它看起来如下；键值对可在图8.24中看到：
- en: '![Figure 8.24 – The logs in CloudWatch for verifying the output](img/B21197_08_24.jpg)'
  id: totrans-464
  prefs: []
  type: TYPE_IMG
  zh: '![图8.24 – 验证输出的CloudWatch日志](img/B21197_08_24.jpg)'
- en: Figure 8.24 – The logs in CloudWatch for verifying the output
  id: totrans-465
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.24 – 验证输出的CloudWatch日志
- en: Important note
  id: totrans-466
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: The most scalable and cost-effective way to generate S3 PJUT events for asynchronously
    invocating downstream AI workflows via Lambda is to generate an AWS pre-signed
    URL, and then provide it to your mobile or web application users. Many users can
    be served at the same time via this approach, and it may increase performance
    and throughput.
  id: totrans-467
  prefs: []
  type: TYPE_NORMAL
  zh: 通过Lambda异步调用下游AI工作流的最可扩展和最具成本效益的方式是生成AWS预签名URL，并将其提供给您的移动或Web应用程序用户。这种方法可以同时为许多用户提供服务，并可能提高性能和吞吐量。
- en: Considering the same region for your AWS AI services and S3 bucket may improve
    performance and reduce network latency. AWS VPC endpoints can leverage enhanced
    security without using the public internet. You can store the AWS AI results in
    an AWS S3 bucket and encrypt the rest to attain better security.
  id: totrans-468
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑为你的AWS AI服务和S3存储桶使用相同的区域可能会提高性能并减少网络延迟。AWS VPC端点可以在不使用公共互联网的情况下利用增强的安全性。你可以将AWS
    AI结果存储在AWS S3存储桶中，并对其他数据进行加密以获得更好的安全性。
- en: In this section, you learned how to extract text from a scanned document and
    print the form data out of it. Unlike the other sections, you used the testing
    feature of a Lambda function by creating a test configuration that includes an
    event template. In the next section, you will learn about creating a chatbot for
    organizations and learn how to use it.
  id: totrans-469
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，你学习了如何从扫描的文档中提取文本并打印出表单数据。与其他章节不同，你通过创建包含事件模板的测试配置来使用Lambda函数的测试功能。在下一节中，你将了解如何为组织创建聊天机器人以及如何使用它。
- en: Creating chatbots on Amazon Lex
  id: totrans-470
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Amazon Lex上创建聊天机器人
- en: Most of the features that are available in Alexa are powered by **Amazon Lex**.
    You can easily build a chatbot using Amazon Lex. It uses natural language understanding
    and automatic speech recognition behind the scenes. An Amazon Lex bot can be created
    either from the console or via APIs. Its basic requirements are shown in the upcoming
    diagram.
  id: totrans-471
  prefs: []
  type: TYPE_NORMAL
  zh: Alexa中大多数可用的功能都是由**Amazon Lex**驱动的。你可以轻松地使用Amazon Lex构建聊天机器人。它在幕后使用自然语言理解和自动语音识别。Amazon
    Lex机器人可以从控制台或通过API创建。其基本要求将在下面的图表中展示。
- en: 'Some common uses of Amazon Lex include the following:'
  id: totrans-472
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon Lex的一些常见用途包括以下内容：
- en: Apps that both listen and take input as text
  id: totrans-473
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 既能听又能接收文本输入的应用
- en: Chatbots
  id: totrans-474
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 聊天机器人
- en: Conversational AI products to provide a better customer and sales experience
  id: totrans-475
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提供更好的客户和销售体验的对话式AI产品
- en: Custom business bots for assistance through AWS Lambda functions
  id: totrans-476
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过AWS Lambda函数提供帮助的定制业务机器人
- en: Voice assistants for your call center, which can speak to a user, schedule a
    meeting, or request the details of your account
  id: totrans-477
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为呼叫中心提供的语音助手，可以与用户交谈、安排会议或请求账户详情
- en: By integrating with Amazon Cognito, a few aspects such as user management, authentication,
    and sync across all your devices can be controlled
  id: totrans-478
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过与Amazon Cognito集成，可以控制一些方面，如用户管理、身份验证和跨所有设备的同步
- en: Next, you will explore the benefits of Amazon Lex.
  id: totrans-479
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，你将探索Amazon Lex的优势。
- en: Exploring the benefits of Amazon Lex
  id: totrans-480
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 探索Amazon Lex的优势
- en: 'Some reasons for using Lex include the following:'
  id: totrans-481
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Lex的一些原因包括以下内容：
- en: Chatbots can be directly built and tested from the AWS Management Console. These
    chatbots can be easily integrated into Facebook Messenger, Slack, and Twilio SMS
    via its rich formatting capabilities.
  id: totrans-482
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 聊天机器人可以直接从AWS管理控制台构建和测试。这些聊天机器人可以通过其丰富的格式化功能轻松集成到Facebook Messenger、Slack和Twilio
    SMS。
- en: Conversation logs can be stored in Amazon CloudWatch for further analysis. You
    can use them to monitor your bot and derive insights to improve your user experience.
  id: totrans-483
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以将对话日志存储在Amazon CloudWatch中进行进一步分析。你可以使用它们来监控你的机器人并从中获得见解，以改善用户体验。
- en: Amazon Lex can be integrated into other AWS services such as Amazon Cognito,
    AWS Lambda, Amazon DynamoDB, Amazon CloudWatch, and AWS Mobile Hub to leverage
    application security, monitoring, user authentication, business logic, storage,
    and mobile app development in AWS platforms.
  id: totrans-484
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Amazon Lex可以集成到其他AWS服务中，例如Amazon Cognito、AWS Lambda、Amazon DynamoDB、Amazon CloudWatch和AWS
    Mobile Hub，以利用AWS平台上的应用安全、监控、用户身份验证、业务逻辑、存储和移动应用开发。
- en: Amazon Lex chatbots can be integrated into your custom web applications too.
    You just need to build a chatbot widget and integrate it into your UI.
  id: totrans-485
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Amazon Lex聊天机器人也可以集成到你的自定义Web应用程序中。你只需构建一个聊天机器人小部件并将其集成到你的用户界面中。
- en: Next, you’ll get hands-on with Amazon Lex.
  id: totrans-486
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，你将亲自动手操作Amazon Lex。
- en: Getting hands-on with Amazon Lex
  id: totrans-487
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 通过Amazon Lex进行实践操作
- en: 'Let’s get started:'
  id: totrans-488
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始吧：
- en: Log in to [https://console.aws.amazon.com/lex/](https://console.aws.amazon.com/lex/).
  id: totrans-489
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录到[https://console.aws.amazon.com/lex/](https://console.aws.amazon.com/lex/)。
- en: Click on **Get Started** and select **Custom bot**.
  id: totrans-490
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**开始**并选择**自定义机器人**。
- en: 'Fill in the following details and click on **Create**:'
  id: totrans-491
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 填写以下详细信息并点击**创建**：
- en: '![Figure 8.25 – The Create dialog of Amazon Lex](img/B21197_08_25.jpg)'
  id: totrans-492
  prefs: []
  type: TYPE_IMG
  zh: '![图8.25 – Amazon Lex的创建对话框](img/B21197_08_25.jpg)'
- en: Figure 8.25 – The Create dialog of Amazon Lex
  id: totrans-493
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.25 – Amazon Lex的创建对话框
- en: Click on **Create Intent**. A dialog will appear. Select **Create Intent**.
  id: totrans-494
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**创建意图**。将出现一个对话框。选择**创建意图**。
- en: Name the new intent `MovieIntent` and click on **Add**.
  id: totrans-495
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将新的意图命名为 `MovieIntent` 并点击 **添加**。
- en: Go to the `movie_type`
  id: totrans-496
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到 `movie_type`
- en: 'Slot type: `AMAZON.Genre`'
  id: totrans-497
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 插槽类型：`AMAZON.Genre`
- en: 'Prompt: `Which movie do` `you like?`'
  id: totrans-498
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 提示：`你喜欢哪部电影？`
- en: 'Click on the `movie_type` is my variable:'
  id: totrans-499
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 `movie_type` 是我的变量：
- en: '![Figure 8.26 – The Sample utterances section](img/B21197_08_26.jpg)'
  id: totrans-500
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.26 – 样例语句部分](img/B21197_08_26.jpg)'
- en: Figure 8.26 – The Sample utterances section
  id: totrans-501
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.26 – 样例语句部分
- en: 'Scroll down to the **Response** section to add a message:'
  id: totrans-502
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 滚动到 **响应** 部分以添加消息：
- en: '![Figure 8.27 – The Response section of Amazon Lex](img/B21197_08_27.jpg)'
  id: totrans-503
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.27 – Amazon Lex 的响应部分](img/B21197_08_27.jpg)'
- en: Figure 8.27 – The Response section of Amazon Lex
  id: totrans-504
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.27 – Amazon Lex 的响应部分
- en: 'Scroll down to **Save Intent** and click on **Build**. Upon successfully building
    the prompt, the following success message will appear:'
  id: totrans-505
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 滚动到 **保存意图** 并点击 **构建**。在成功构建提示后，将显示以下成功消息：
- en: '![Figure 8.28 – The Response section of Amazon Lex](img/B21197_08_28.jpg)'
  id: totrans-506
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.28 – Amazon Lex 的响应部分](img/B21197_08_28.jpg)'
- en: Figure 8.28 – The Response section of Amazon Lex
  id: totrans-507
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.28 – Amazon Lex 的响应部分
- en: 'Now, you can test your bot, as shown in *Figure 8**.29*:'
  id: totrans-508
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，你可以测试你的机器人，如图 *图 8**.29* 所示：
- en: '![Figure 8.29 – The Test bot dialog](img/B21197_08_29.jpg)'
  id: totrans-509
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.29 – 测试机器人对话](img/B21197_08_29.jpg)'
- en: Figure 8.29 – The Test bot dialog
  id: totrans-510
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.29 – 测试机器人对话
- en: In the next section, you will learn about Amazon Forecast and learn how to use
    it for different use cases.
  id: totrans-511
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，你将了解 Amazon Forecast 并学习如何将其用于不同的用例。
- en: Amazon Forecast
  id: totrans-512
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Amazon Forecast
- en: Amazon Forecast is a powerful service that enables you to build highly accurate
    time-series forecasting models without the need for deep expertise in machine
    learning. Whether you are predicting sales, demand for inventory, or any time-dependent
    metric, Amazon Forecast simplifies the process, making it accessible to a broader
    audience.
  id: totrans-513
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon Forecast 是一项强大的服务，它使你能够在不需要深度机器学习专业知识的情况下构建高度准确的时间序列预测模型。无论你是预测销售、库存需求还是任何时间相关的指标，Amazon
    Forecast 都简化了这一过程，使其对更广泛的受众变得可访问。
- en: 'Amazon Forecast is designed to tackle a variety of forecasting challenges,
    including:'
  id: totrans-514
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon Forecast 设计用于解决各种预测挑战，包括：
- en: '**Demand forecasting**: Predict future demand for products or services based
    on historical data, helping optimize inventory and supply chain management.'
  id: totrans-515
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**需求预测**：根据历史数据预测产品或服务的未来需求，帮助优化库存和供应链管理。'
- en: '**Financial planning**: Forecast financial metrics, such as revenue and expenses,
    aiding in budgeting and financial decision-making.'
  id: totrans-516
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**财务规划**：预测财务指标，如收入和支出，有助于预算和财务决策。'
- en: '**Resource planning**: Efficiently plan resources like workforce scheduling
    based on predicted demand patterns.'
  id: totrans-517
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**资源规划**：根据预测的需求模式有效地规划资源，如员工排班。'
- en: '**Traffic and user engagement**: Predict website or application traffic, enhancing
    resource allocation and user experience.'
  id: totrans-518
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**流量和用户参与度**：预测网站或应用程序的流量，增强资源分配和用户体验。'
- en: Next, you will explore the benefits of Amazon Lex.
  id: totrans-519
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，你将探索 Amazon Lex 的好处。
- en: Exploring the benefits of Amazon Forecast
  id: totrans-520
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 探索 Amazon Forecast 的好处
- en: 'Some reasons for using Amazon Forecast are as follows:'
  id: totrans-521
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Amazon Forecast 的原因如下：
- en: '**Ease of use**: Amazon Forecast abstracts the complexity of building accurate
    forecasting models. With just a few clicks, you can create, train, and deploy
    models without deep machine learning expertise.'
  id: totrans-522
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**易用性**：Amazon Forecast 抽象了构建准确预测模型的复杂性。只需几点击，你就可以创建、训练和部署模型，无需深度机器学习专业知识。'
- en: '**Automated machine learning**: Amazon Forecast employs advanced machine learning
    techniques, automating the selection of algorithms and hyperparameter tuning to
    deliver the best possible model.'
  id: totrans-523
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**自动机器学习**：Amazon Forecast 采用先进的机器学习技术，自动选择算法和超参数调整，以提供最佳模型。'
- en: '**Forecast backtesting**: Enhance the reliability of your forecasts through
    backtesting. Amazon Forecast enables you to assess the accuracy of your models
    by comparing predictions against historical data. This iterative process helps
    fine-tune your models, adjusting hyperparameters and algorithms to achieve optimal
    forecasting performance.'
  id: totrans-524
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**预测回测**：通过回测增强预测的可靠性。Amazon Forecast 允许你通过将预测与历史数据比较来评估你模型的准确性。这一迭代过程有助于微调你的模型，调整超参数和算法以实现最佳的预测性能。'
- en: '**Scalability**: Amazon Forecast seamlessly scales with your data, ensuring
    accurate predictions even with vast datasets.'
  id: totrans-525
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可扩展性**：Amazon Forecast 与你的数据无缝扩展，确保即使在大数据集上也能进行准确的预测。'
- en: '**Integration with AWS**: Leverage the power of integration with other AWS
    services like Amazon S3, AWS Lambda, and Amazon CloudWatch to create end-to-end
    forecasting solutions. Easily integrate Amazon Forecast into your existing applications
    and workflows, ensuring a seamless forecasting experience.'
  id: totrans-526
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**与 AWS 集成**：利用与其他 AWS 服务（如 Amazon S3、AWS Lambda 和 Amazon CloudWatch）集成的力量，创建端到端的预测解决方案。轻松将
    Amazon Forecast 集成到现有的应用程序和工作流程中，确保预测体验的无缝性。'
- en: '**Accuracy and precision**: Amazon Forecast utilizes cutting-edge forecasting
    algorithms to deliver accurate and precise predictions, minimizing errors in your
    forecasts.'
  id: totrans-527
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**准确性和精确度**：Amazon Forecast 利用先进的预测算法提供准确和精确的预测，最小化预测中的错误。'
- en: '**Cost-effective**: Pay only for what you use. The pay-as-you-go pricing model
    ensures cost-effectiveness, especially for businesses with varying forecasting
    needs.'
  id: totrans-528
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**经济高效**：仅为您使用的部分付费。按需付费的定价模式确保了成本效益，特别是对于有不同预测需求的企业。'
- en: '**Customization**: Tailor forecasting models to your specific business needs,
    accommodating various forecasting scenarios.'
  id: totrans-529
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**定制化**：根据您的特定业务需求定制预测模型，适应各种预测场景。'
- en: Next, you’ll get hands-on with Amazon Lex.
  id: totrans-530
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，你将亲自动手使用 Amazon Lex。
- en: Sales Forecasting Model with Amazon Forecast
  id: totrans-531
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 Amazon Forecast 的销售预测模型
- en: Let’s dive into a hands-on example of using Amazon Forecast to build a sales
    forecasting model. In this example, you’ll predict future sales based on historical
    data.
  id: totrans-532
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过一个使用 Amazon Forecast 构建销售预测模型的实际例子来深入了解。在这个例子中，你将根据历史数据预测未来的销售。
- en: '**Set up your dataset**: Prepare a dataset containing historical sales data,
    ensuring it includes relevant timestamps and corresponding sales figures.'
  id: totrans-533
  prefs: []
  type: TYPE_NORMAL
  zh: '**设置您的数据集**：准备一个包含历史销售数据的数据集，确保它包括相关的日期和时间戳以及相应的销售数字。'
- en: '**Create a dataset group**: Use the Amazon Forecast console or API to create
    a dataset group, grouping related datasets for forecasting.'
  id: totrans-534
  prefs: []
  type: TYPE_NORMAL
  zh: '**创建数据集组**：使用 Amazon Forecast 控制台或 API 创建数据集组，将相关的数据集分组用于预测。'
- en: '**Import your data**: Upload your historical sales dataset to Amazon Forecast,
    allowing the service to learn patterns from the provided data.'
  id: totrans-535
  prefs: []
  type: TYPE_NORMAL
  zh: '**导入您的数据**：将您的历史销售数据集上传到 Amazon Forecast，让服务从提供的数据中学习模式。'
- en: '**Train your model**: Initiate model training using the Forecast console or
    API. Amazon Forecast will automatically select suitable algorithms and optimize
    hyperparameters.'
  id: totrans-536
  prefs: []
  type: TYPE_NORMAL
  zh: '**训练您的模型**：使用 Forecast 控制台或 API 启动模型训练。Amazon Forecast 将自动选择合适的算法并优化超参数。'
- en: '**Generate forecasts**: Once the model is trained, generate forecasts for future
    sales based on the patterns identified in your historical data.'
  id: totrans-537
  prefs: []
  type: TYPE_NORMAL
  zh: '**生成预测**：一旦模型训练完成，根据您历史数据中识别出的模式生成未来的销售预测。'
- en: By leveraging advanced features and implementing optimization strategies, you
    can elevate your Amazon Forecast experience. The flexibility and adaptability
    of the service allow you to tailor forecasting solutions to the specific needs
    of your business. For example, you can improve the precision of your forecasts
    by integrating external variables. Amazon Forecast allows you to include additional
    information, such as promotions, holidays, or economic indicators, that might
    impact the time series you are forecasting. By considering these external factors,
    your models can adapt to changing circumstances and provide more nuanced predictions.
  id: totrans-538
  prefs: []
  type: TYPE_NORMAL
  zh: 通过利用高级功能和实施优化策略，您可以提升您的 Amazon Forecast 体验。服务的灵活性和适应性允许您根据您业务的特定需求定制预测解决方案。例如，您可以通过集成外部变量来提高预测的精确度。Amazon
    Forecast 允许您包括可能影响您预测的时间序列的其他信息，例如促销活动、节假日或经济指标。通过考虑这些外部因素，您的模型可以适应不断变化的情况并提供更细微的预测。
- en: Summary
  id: totrans-539
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, you learned about a few of the AWS AI services that can be
    used to solve various problems. You used the Amazon Rekognition service, which
    detects objects and faces (including celebrity faces), and can also extract text
    from images. For text to speech, you used Amazon Polly, while for speech to text,
    you used Amazon Transcribe. Toward the end of this chapter, you built a chatbot
    in Amazon Lex and learned the usage and benefits of Amazon Forecast.
  id: totrans-540
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你了解了一些 AWS 人工智能服务，这些服务可以用来解决各种问题。你使用了 Amazon Rekognition 服务，它可以检测对象和面部（包括名人面部），还可以从图像中提取文本。对于文本到语音，你使用了
    Amazon Polly，而对于语音到文本，你使用了 Amazon Transcribe。在本章的末尾，你在 Amazon Lex 中构建了一个聊天机器人，并学习了
    Amazon Forecast 的使用方法和好处。
- en: For language detection and translation in an image, you used Amazon Rekognition,
    Amazon Comprehend, and Amazon Translate. You learned how to combine all of them
    into one Lambda function to solve our problem.
  id: totrans-541
  prefs: []
  type: TYPE_NORMAL
  zh: 对于图像中的语言检测和翻译，您使用了Amazon Rekognition、Amazon Comprehend和Amazon Translate。您学习了如何将它们组合成一个Lambda函数来解决我们的问题。
- en: For the certification exam, you do not need to remember all the APIs you used
    in this chapter. There may be questions on a few of the best practices that you
    learned or on the names of services that solve a specific problem. It is always
    good to practice using these AWS AI services as it will enhance your architecting
    skills.
  id: totrans-542
  prefs: []
  type: TYPE_NORMAL
  zh: 对于认证考试，您不需要记住本章中使用的所有API。可能会有关于您学到的最佳实践或解决特定问题的服务名称的问题。始终练习使用这些AWS AI服务是很好的，因为它将增强您的架构技能。
- en: In the next chapter, you will learn about data preparation and transformation,
    which is the most important aspect of machine learning.
  id: totrans-543
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，您将学习数据准备和转换，这是机器学习最重要的方面。
- en: Exam Readiness Drill – Chapter Review Questions
  id: totrans-544
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 考试准备练习 – 复习题
- en: Apart from a solid understanding of key concepts, being able to think quickly
    under time pressure is a skill that will help you ace your certification exam.
    That is why working on these skills early on in your learning journey is key.
  id: totrans-545
  prefs: []
  type: TYPE_NORMAL
  zh: 除了对关键概念有扎实的理解外，能够在时间压力下快速思考是一项有助于您通过认证考试的技能。这就是为什么在您的学习旅程早期就培养这些技能是关键。
- en: Chapter review questions are designed to improve your test-taking skills progressively
    with each chapter you learn and review your understanding of key concepts in the
    chapter at the same time. You’ll find these at the end of each chapter.
  id: totrans-546
  prefs: []
  type: TYPE_NORMAL
  zh: 复习题旨在通过学习并复习每个章节来逐步提高您的考试技巧，同时同时检查您对章节中关键概念的理解。您将在每个章节的末尾找到这些内容。
- en: How To Access These Resources
  id: totrans-547
  prefs: []
  type: TYPE_NORMAL
  zh: 如何访问这些资源
- en: To learn how to access these resources, head over to the chapter titled [*Chapter
    11*](B21197_11.xhtml#_idTextAnchor1477), *Accessing the Online* *Practice Resources*.
  id: totrans-548
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解如何访问这些资源，请转到名为[*第11章*](B21197_11.xhtml#_idTextAnchor1477)的章节，*访问在线练习资源*。
- en: 'To open the Chapter Review Questions for this chapter, perform the following
    steps:'
  id: totrans-549
  prefs: []
  type: TYPE_NORMAL
  zh: 要打开本章的复习题，请执行以下步骤：
- en: Click the link – [https://packt.link/MLSC01E2_CH08](https://packt.link/MLSC01E2_CH08).
  id: totrans-550
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击链接 – [https://packt.link/MLSC01E2_CH08](https://packt.link/MLSC01E2_CH08).
- en: 'Alternatively, you can scan the following **QR code** (*Figure 8**.30*):'
  id: totrans-551
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 或者，您可以扫描以下**二维码**（*图8.30*）：
- en: '![Figure 8.30 – QR code that opens Chapter Review Questions for logged-in users](img/B21197_08_30.jpg)'
  id: totrans-552
  prefs: []
  type: TYPE_IMG
  zh: '![图8.30 – 为登录用户打开第8章复习题的二维码](img/B21197_08_30.jpg)'
- en: Figure 8.30 – QR code that opens Chapter Review Questions for logged-in users
  id: totrans-553
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.30 – 为登录用户打开第8章复习题的二维码
- en: 'Once you log in, you’ll see a page similar to the one shown in *Figure 8**.31*:'
  id: totrans-554
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦登录，您将看到一个类似于*图8.31*所示的页面：
- en: '![Figure 8.31 – Chapter Review Questions for Chapter 8](img/B21197_08_31.jpg)'
  id: totrans-555
  prefs: []
  type: TYPE_IMG
  zh: '![图8.31 – 第8章的复习题](img/B21197_08_31.jpg)'
- en: Figure 8.31 – Chapter Review Questions for Chapter 8
  id: totrans-556
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.31 – 第8章的复习题
- en: Once ready, start the following practice drills, re-attempting the quiz multiple
    times.
  id: totrans-557
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 准备就绪后，开始以下练习，多次重新尝试测验。
- en: Exam Readiness Drill
  id: totrans-558
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 考试准备练习
- en: For the first three attempts, don’t worry about the time limit.
  id: totrans-559
  prefs: []
  type: TYPE_NORMAL
  zh: 对于前三次尝试，不要担心时间限制。
- en: ATTEMPT 1
  id: totrans-560
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 第一次尝试
- en: The first time, aim for at least **40%**. Look at the answers you got wrong
    and read the relevant sections in the chapter again to fix your learning gaps.
  id: totrans-561
  prefs: []
  type: TYPE_NORMAL
  zh: 第一次尝试，目标至少达到**40%**。查看您答错的答案，并再次阅读章节中的相关部分，以修复您的学习差距。
- en: ATTEMPT 2
  id: totrans-562
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 第二次尝试
- en: The second time, aim for at least **60%**. Look at the answers you got wrong
    and read the relevant sections in the chapter again to fix any remaining learning
    gaps.
  id: totrans-563
  prefs: []
  type: TYPE_NORMAL
  zh: 第二次尝试，目标至少达到**60%**。查看您答错的答案，并再次阅读章节中的相关部分，以修复任何剩余的学习差距。
- en: ATTEMPT 3
  id: totrans-564
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 第三次尝试
- en: The third time, aim for at least **75%**. Once you score 75% or more, you start
    working on your timing.
  id: totrans-565
  prefs: []
  type: TYPE_NORMAL
  zh: 第三次尝试，目标至少达到**75%**。一旦得分达到75%或更高，您就开始关注您的计时。
- en: Tip
  id: totrans-566
  prefs: []
  type: TYPE_NORMAL
  zh: 小贴士
- en: You may take more than **three** attempts to reach 75%. That’s okay. Just review
    the relevant sections in the chapter till you get there.
  id: totrans-567
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能需要超过**三次**尝试才能达到75%。没关系。只需复习章节中的相关部分，直到达到目标。
- en: Working On Timing
  id: totrans-568
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工作在计时上
- en: 'Target: Your aim is to keep the score the same while trying to answer these
    questions as quickly as possible. Here’s an example of how your next attempts
    should look like:'
  id: totrans-569
  prefs: []
  type: TYPE_NORMAL
  zh: 目标：您的目标是保持分数不变，同时尽可能快地回答这些问题。以下是如何进行下一次尝试的示例：
- en: '| **Attempt** | **Score** | **Time Taken** |'
  id: totrans-570
  prefs: []
  type: TYPE_TB
  zh: '| **尝试** | **分数** | **用时** |'
- en: '| Attempt 5 | 77% | 21 mins 30 seconds |'
  id: totrans-571
  prefs: []
  type: TYPE_TB
  zh: '| 尝试 5 | 77% | 21 分 30 秒 |'
- en: '| Attempt 6 | 78% | 18 mins 34 seconds |'
  id: totrans-572
  prefs: []
  type: TYPE_TB
  zh: '| 尝试 6 | 78% | 18 分 34 秒 |'
- en: '| Attempt 7 | 76% | 14 mins 44 seconds |'
  id: totrans-573
  prefs: []
  type: TYPE_TB
  zh: '| 尝试 7 | 76% | 14 分 44 秒 |'
- en: Table 8.1 – Sample timing practice drills on the online platform
  id: totrans-574
  prefs: []
  type: TYPE_NORMAL
  zh: 表 8.1 – 在线平台上的样本时间练习练习
- en: Note
  id: totrans-575
  prefs: []
  type: TYPE_NORMAL
  zh: 备注
- en: The time limits shown in the above table are just examples. Set your own time
    limits with each attempt based on the time limit of the quiz on the website.
  id: totrans-576
  prefs: []
  type: TYPE_NORMAL
  zh: 上表中显示的时间限制只是示例。根据网站上的测验时间限制，每次尝试时为自己设定时间限制。
- en: With each new attempt, your score should stay above **75%** while your “time
    taken” to complete should “decrease”. Repeat as many attempts as you want till
    you feel confident dealing with the time pressure.
  id: totrans-577
  prefs: []
  type: TYPE_NORMAL
  zh: 每次新的尝试，你的分数应保持在 **75%** 以上，而完成所需的时间“应减少”。重复尝试，直到你觉得自己能够自信地应对时间压力。
