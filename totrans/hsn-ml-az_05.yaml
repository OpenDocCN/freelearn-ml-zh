- en: Azure Machine Learning Studio
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Azure机器学习工作室
- en: '**Azure Machine Learning Studio** is an ML-as-a-Service platform for creating
    custom **machine learning** (**ML**) models. Azure ML Studio is a great tool for
    beginners who perhaps have some experience of consuming machine learning models
    and who would like to gain a deeper understanding of the training process. It
    offers more flexibility than the Cognitive Services APIs and an easy-to-learn
    development environment. The GUI does not require any programming and allows the
    user to concentrate on building ML models as efficiently as possible. Azure ML
    Studio is also a useful tool for more experienced AI developers who have a fairly
    simple problem at hand and need to get results quickly.'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '**Azure机器学习工作室**是一个机器学习即服务（ML-as-a-Service）平台，用于创建定制的**机器学习**（**ML**）模型。Azure
    ML Studio是初学者的一款优秀工具，他们可能有一些使用机器学习模型的经验，并希望更深入地了解训练过程。它比认知服务API提供了更多的灵活性，并且拥有易于学习的开发环境。图形用户界面无需任何编程，使用户能够尽可能高效地构建ML模型。Azure
    ML Studio也是经验丰富的AI开发者的一款有用工具，他们手头有一个相对简单的问题，并需要快速得到结果。'
- en: 'Azure ML Studio consists of two separate services: a Studio Workspace and Studio
    Web Services. Both of these services also include the backend computational resources
    needed for processing, so the user does not have to worry about the maintenance
    of the underlying operating system or hardware. The difference between the two
    services is clear: the Studio Workspace is used to train ML models and experiment
    with different configurations, while Studio Web Services provide a REST API interface
    for scoring examples, using the models published from the Workspace.'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: Azure ML Studio由两个独立的服务组成：工作室工作空间和工作室网络服务。这两个服务还包括处理所需的底层计算资源，因此用户无需担心操作系统或硬件的维护。这两个服务之间的区别很明显：工作室工作空间用于训练ML模型和尝试不同的配置，而工作室网络服务提供REST
    API接口，用于对从工作空间发布的模型进行评分。
- en: Azure ML Studio is designed for collaborative development. It integrates with
    Azure Active Directory, so users from the same organization can be added to the
    Workspace with a few clicks. All ML models in the ML Studio Workspace are visible
    to all members of the Workspace. Workspace members can also edit models created
    by others, so developers can try to improve each other's results iteratively.
    Therefore, it is a great tool when developers are following the **Team Data Science
    Process** (**TDSP**), for example.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: Azure ML Studio旨在支持协作开发。它集成了Azure Active Directory，因此可以通过几点击将来自同一组织的用户添加到工作空间。ML
    Studio工作空间中的所有ML模型对所有工作空间成员都是可见的。工作空间成员还可以编辑他人创建的模型，因此开发者可以迭代地尝试改进彼此的结果。因此，当开发者遵循**团队数据科学流程**（**TDSP**）时，它是一款非常棒的工具。
- en: ML models are developed inside *experiments*. An experiment contains all the
    steps required to produce an ML model, beginning with the input dataset. Experiments
    can be used to compare different ML models and parameter configurations. ML Studio
    provides a wide range of modules that can be added to an experiment to perform
    different tasks, such as preprocessing data or evaluating training results. By
    combining these modules, the experiment is built step by step, resulting in a
    training pipeline that can be run to produce a trained ML model. ML Studio also
    includes a wide experiment template collection, with ready-to-run examples from
    many different areas. In the next section, we will show how to deploy these templates
    to an ML Studio Workspace.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ML模型是在*实验*中开发的。一个实验包含生成ML模型所需的所有步骤，从输入数据集开始。实验可以用来比较不同的ML模型和参数配置。ML Studio提供了一系列可以添加到实验中的模块，以执行不同的任务，例如预处理数据或评估训练结果。通过组合这些模块，实验逐步构建，最终形成一个可以运行以生成训练ML模型的训练管道。ML
    Studio还包括广泛的实验模板集合，其中包含来自许多不同领域的可运行示例。在下一节中，我们将展示如何将这些模板部署到ML Studio工作空间。
- en: The pricing of Workspaces and web services is based on the use of computational
    resources. Workspace resources are consumed when new ML models are trained in
    ML Studio. Workspace billing is also based on the number of users, but using the
    ML Studio UI and building experiments does not incur any extra costs; only the
    experiment runtime is calculated.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 工作空间和网络服务的定价基于计算资源的使用。在ML Studio中训练新的ML模型时，会消耗工作空间资源。工作空间的计费还基于用户数量，但使用ML Studio
    UI和构建实验不会产生任何额外费用；只有实验运行时间会被计算。
- en: When creating a new ML Studio Workspace, a new web service plan resource is
    created automatically. Web service resources are consumed when external applications
    call the ML Studio Web Services API. A web services pricing tier must be chosen
    when creating a web service resource in the Azure portal. The pricing tier determines
    the maximum amount of requests that can be handled in a month. If this limit is
    exceeded, each request is billed on top of the flat monthly price.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 当创建一个新的 ML Studio 工作区时，会自动创建一个新的 Web 服务计划资源。当外部应用程序调用 ML Studio Web 服务 API 时，会消耗
    Web 服务资源。在 Azure 门户中创建 Web 服务资源时，必须选择 Web 服务定价层。定价层决定了每月可以处理的最大请求数量。如果超出此限制，每个请求都会在固定月费之外计费。
- en: 'To use Azure ML Studio, you need a Workspace account. There are two types of
    Workspace accounts: *Free Tier* and *Standard* *T*ier. The Free Tier is an independent
    account that is not connected to an Azure subscription. It has more limitations
    in terms of use and does not include a production-scale web API, like the Standard
    Tier does. The Standard Tier requires an Azure subscription and the costs of the
    ML Studio resources are added to the subscription bill. The Workspace and web
    services appear as independent items in the resource group, and they can be managed
    in the Azure portal just like any other Azure resource.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用 Azure ML Studio，您需要一个工作区账户。有两种类型的工作区账户：*免费层*和*标准层*。免费层是一个独立的账户，不与 Azure
    订阅相关联。它在使用方面有更多限制，并且不包括标准层那样的生产规模 Web API。标准层需要 Azure 订阅，ML Studio 资源的成本将添加到订阅账单中。工作区和
    Web 服务在资源组中作为独立项出现，并且可以在 Azure 门户中像管理任何其他 Azure 资源一样进行管理。
- en: 'To access the ML Studio UI, go to the ML Studio Workspace blade in the Azure
    portal and click on Launch Machine Learning Studio. You can also enter the portal
    address in the browser directly: [https://studio.azureml.net/](https://studio.azureml.net/).'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 要访问 ML Studio UI，请转到 Azure 门户中的 ML Studio 工作区选项卡并单击启动机器学习工作室。您也可以直接在浏览器中输入门户地址：[https://studio.azureml.net/](https://studio.azureml.net/)。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将介绍以下主题：
- en: Deploying an Azure AI Gallery template
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 部署 Azure AI 画廊模板
- en: Building an experiment in Azure ML Studio
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Azure ML Studio 中构建实验
- en: Deploying a model as a web service in ML Studio
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 ML Studio 中将模型作为 Web 服务部署
- en: Deploying an Azure AI Gallery template
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 部署 Azure AI 画廊模板
- en: Developing models with ML Studio does not have to be done from scratch. Azure
    AI Gallery contains a wide selection of templates for many different scenarios.
    These scenarios include many common use cases for ML, such as credit risk prediction,
    demand estimation, and text sentiment analysis. Templates can be imported to an
    Azure ML Studio Workspace with a few clicks and they contain all the steps needed
    to produce a working ML model. Studying templates is a great way to learn about
    different use cases and the steps required to produce an ML model. Some templates
    are prepared by Microsoft, but users can also submit their own experiments to
    the gallery.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 ML Studio 开发模型不必从头开始。Azure AI 画廊包含许多不同场景的模板。这些场景包括许多常见的机器学习用例，例如信用风险预测、需求估计和文本情感分析。只需几步即可将模板导入
    Azure ML Studio 工作区，并且它们包含生成工作 ML 模型所需的所有步骤。研究模板是了解不同用例和生成 ML 模型所需步骤的绝佳方式。一些模板由微软准备，但用户也可以将他们自己的实验提交到画廊。
- en: The template gallery can be accessed directly from ...
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 模板画廊可以直接从 ...
- en: Building an experiment
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建实验
- en: In this section, we'll show how to build an experiment from scratch using a
    custom dataset. With the GUI, creating new experiments is very fast and results
    can be viewed immediately. Azure ML Studio contains modules for all common ML
    and data-processing tasks, so it is a great tool for testing ideas quickly and
    iteratively. If the built-in modules are not sufficient for the task at hand,
    the script modules can be used for improved extensibility, explained as follows.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将展示如何使用自定义数据集从头开始构建实验。使用 GUI，创建新实验非常快，结果可以立即查看。Azure ML Studio 包含所有常见
    ML 和数据处理任务的模块，因此它是快速测试和迭代想法的绝佳工具。如果内置模块不足以完成当前任务，可以使用脚本模块进行改进的可扩展性，如下所述。
- en: Importing and preprocessing data
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 导入和预处理数据
- en: As already discussed, Azure ML Studio is a complete ML tool that takes care
    of every step in the ML model development process. The only input needed is a
    raw dataset in a format understood by ML Studio; if the original data format is
    not recognized, then a file conversion is required, using either an external tool
    or the custom script modules in ML Studio. For raw files, the data formats currently
    recognized by ML Studio are CSV, TSV, ARFF, SvmLight, and R objects. Datasets
    can also be saved in zipped format to save storage space and bandwidth.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，Azure ML Studio 是一个完整的机器学习工具，负责机器学习模型开发过程中的每一步。所需输入是 ML Studio 可理解的原始数据集格式；如果原始数据格式不被识别，则需要使用外部工具或
    ML Studio 中的自定义脚本模块进行文件转换。对于原始文件，ML Studio 当前识别的数据格式包括 CSV、TSV、ARFF、SvmLight 和
    R 对象。数据集也可以以压缩格式保存，以节省存储空间和带宽。
- en: 'Datasets can be imported to ML Studio in two ways: by uploading a local file
    from the user''s computer, or using cloud storage in Azure. To import data from
    your local ...'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 数据集可以通过两种方式导入到 ML Studio：通过从用户的计算机上传本地文件，或者使用 Azure 中的云存储。要从本地导入数据...
- en: Choosing and configuring algorithms
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 选择和配置算法
- en: Choosing the right models and tuning the parameters for the model are at the
    core of AI application development. In most cases, there are several algorithms
    that are applicable to the task, and it may not be clear from the beginning which
    algorithm will perform best. For example, some algorithms might perform better
    for small datasets, while others excel on big data. Usually, there are also other
    constraints to think about, such as runtime or the amount of computational resources
    available. The best model is the one that achieves a sufficient level of accuracy
    with the minimum amount of computational resources.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 选择合适的模型并调整模型的参数是人工智能应用开发的核心。在大多数情况下，有几个算法适用于该任务，并且一开始可能不清楚哪个算法会表现最好。例如，某些算法可能在小数据集上表现更好，而其他算法在大数据集上表现更出色。通常，还需要考虑其他约束条件，例如运行时间或可用的计算资源量。最佳模型是在最小计算资源量的情况下实现足够准确度的模型。
- en: The first step when solving an ML problem is to identify which family of algorithms
    should be used. The algorithm family depends mostly on the type of the *predicted* value,
    such as if predicting a number, the possible algorithms are different than when
    predicting a *categorical* value. A categorical value is one where the number
    of possible outcomes is finite. The simplest categorical value is a Boolean variable,
    which can take two values (true/false). The number of possible outcomes can also
    restrict which types of algorithms can be used for the problem, since not all
    algorithms handle very high-dimensional data well. One example of high-dimensional
    categorical data is encountered in text analysis, where each word might represent
    a different category and the number of categories is equal to the size of the
    dictionary. For such high-dimensional data, it is often best to use neural network
    models, which can handle a large number of output values.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 解决机器学习问题时的第一步是确定应该使用哪种算法系列。算法系列主要取决于预测值的类型，例如，如果预测一个数字，可能使用的算法与预测一个**分类**值时不同。分类值是指可能结果数量有限的情况。最简单的分类值是布尔变量，它可以取两个值（真/假）。可能结果的数量也可能限制可用于问题的算法类型，因为并非所有算法都能很好地处理高维数据。在文本分析中遇到的一个高维分类数据示例是，每个单词可能代表一个不同的类别，而类别的数量等于字典的大小。对于这类高维数据，通常最好使用神经网络模型，这些模型可以处理大量的输出值。
- en: Azure ML Studio contains a selection of the most commonly used ML algorithms
    that can be dragged and dropped to an experiment canvas. The algorithms are listed
    in the Initialize model section, under the Machine Learning menu. The algorithms
    are grouped into four categories. The anomaly detection modules are meant for
    detecting outliers in datasets where most of the values are similar to each other,
    but there are some exceptions that we want to identify. These models are widely
    used in predictive fault detection, for example, in the manufacturing and processing
    industries, where machines usually operate normally, but may sometimes produce
    anomalous values, indicating that the machine is about to break. The classification
    modules are used for training supervised algorithms that classify inputs to exclusive
    categories. The clustering modules provide unsupervised algorithms to find similar
    items in a dataset. Regression algorithms predict numerical values (but inputs
    can also be categorical variables). In addition to these ML algorithms, ML Studio
    provides modules for other common ML-related tasks, such as **P****rincipal Component
    Analysis** (**PCA**) and text tokenization.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: Azure ML Studio包含一组最常用的机器学习算法，可以拖放到实验画布中。算法在“初始化模型”部分列出，位于机器学习菜单下。算法分为四个类别。异常检测模块旨在检测数据集中大多数值相似但有一些异常值的情况，这些异常值是我们想要识别的。这些模型在预测故障检测中得到了广泛应用，例如在制造和加工行业中，机器通常正常运行，但有时可能会产生异常值，表明机器即将损坏。分类模块用于训练监督算法，以将输入分类到特定的类别。聚类模块提供无监督算法，用于在数据集中找到相似项。回归算法预测数值（但输入也可以是分类变量）。除了这些机器学习算法外，ML
    Studio还提供用于其他常见机器学习相关任务的模块，例如**主成分分析**（**PCA**）和文本分词。
- en: In this section, we'll show an example of how to train a regression model. The
    input dataset is a record of flight delay information from multiple airports,
    available as a built-in dataset in ML Studio. The dataset includes information
    on the time of the flight, its origin, and its destination airports, and the airline
    that operates the flight. The label column, the value that we want to predict,
    is the departure delay in minutes (column `DepDelay`). A positive value for `DepDelay`
    means that the flight has been delayed, and a negative value means that it has
    departed ahead of schedule. This is a fairly large dataset, containing over 2.7
    million rows and 14 columns. To get more detailed information about the dataset,
    see the full description in the documentation available at [https://docs.microsoft.com/en-us/azure/machine-learning/studio/use-sample-datasets](https://docs.microsoft.com/en-us/azure/machine-learning/studio/use-sample-datasets).
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将展示如何训练一个回归模型的示例。输入数据集是来自多个机场的航班延误信息记录，作为ML Studio内置数据集可用。该数据集包括航班时间、出发机场和目的地机场以及运营航班的航空公司信息。标签列，我们想要预测的值，是出发延误的分钟数（列`DepDelay`）。`DepDelay`的正值表示航班已延误，负值表示航班提前起飞。这是一个相当大的数据集，包含超过270万行和14列。要获取更多关于数据集的详细信息，请参阅文档中的完整描述，文档可在[https://docs.microsoft.com/en-us/azure/machine-learning/studio/use-sample-datasets](https://docs.microsoft.com/en-us/azure/machine-learning/studio/use-sample-datasets)找到。
- en: 'The training process consists of the following steps:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 训练过程包括以下步骤：
- en: Import data
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入数据
- en: Preprocess data (choose which columns are used)
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 预处理数据（选择要使用的列）
- en: Split data into training and test datasets
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将数据分为训练集和测试集
- en: Pick an ML algorithm and train it using the training dataset
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择一个机器学习算法并使用训练数据集对其进行训练
- en: Use the trained model to create predictions for the test dataset
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用训练好的模型为测试数据集创建预测
- en: Compare the predicted values to the actual values in the test dataset
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将测试数据集中的预测值与实际值进行比较
- en: 'The input dataset contains mostly numerical data that does not require much
    preprocessing. The `Carrier` column contains categorical values in text format,
    but ML Studio converts these values into numeric values automatically. The only
    preprocessing step is choosing the columns to be used to train the model. In this
    example, the following columns are chosen as the features of the model:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 输入数据集主要包含数值数据，不需要太多预处理。`Carrier`列包含文本格式的分类值，但ML Studio会自动将这些值转换为数值。唯一的预处理步骤是选择用于训练模型的列。在本例中，以下列被选为模型的特征：
- en: '| **Column** | **Description** |'
  id: totrans-34
  prefs: []
  type: TYPE_TB
  zh: '| **列** | **描述** |'
- en: '| `Month` | Month (categorical numeric, 1-12) |'
  id: totrans-35
  prefs: []
  type: TYPE_TB
  zh: '| `Month` | 月份（分类数值，1-12） |'
- en: '| `DayOfWeek` | Day of week (categorical numeric, 1-7) |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '| `DayOfWeek` | 星期几（分类数值，1-7）|'
- en: '| `OriginAirportID` | Airport—departure (categorical numeric, 70 unique values)
    |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '| `OriginAirportID` | 出发机场ID（分类数值，70个唯一值）|'
- en: '| `Carrier` | Airline (categorical string, 16 unique values) |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '| `Carrier` | 航空公司（分类字符串，16个唯一值）|'
- en: '| `CRSDepTime` | Time of day (categorical numeric, 1-2359, 1440 possible values)
    |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '| `CRSDepTime` | 白天时间（分类数值，1-2359，1440个可能值）|'
- en: Note that the time of departure is given in numeric format, where the number
    101 corresponds to 01:01, for example. The Select Columns in Dataset module can
    be used to pick these columns and the label column (`DepDelay`) is to be used
    in the training process.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，出发时间是以数字格式给出的，例如，数字101对应01:01。可以使用“在数据集中选择列”模块来选择这些列，标签列（`DepDelay`）将在训练过程中使用。
- en: 'Before the model is trained, the data must be separated into training and test
    datasets. This is a crucial step in the training process: it is important that
    the accuracy of the model is measured with examples that the model has not seen
    during the training process. The Split Data module is meant for this purpose.
    By setting the Fraction of rows in the first output dataset property of the module
    to `0.75`, for example, the first output port of the module will contain 75% of
    the rows and the second output will contain 25%, selected randomly from the input
    dataset. We will use this splitting to divide the data into the training and test
    datasets, respectively.'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在模型训练之前，必须将数据分为训练集和测试集。这是训练过程中的关键步骤：重要的是要确保模型的准确性是通过在训练过程中模型未曾见过的示例来衡量的。用于此目的的“分割数据”模块。例如，通过将模块的“第一个输出数据集的行数比例”属性设置为`0.75`，模块的第一个输出端口将包含75%的行，第二个输出将包含25%，从输入数据集中随机选择。我们将使用这种分割来分别将数据分为训练集和测试集。
- en: 'Once the data has been processed and divided into training and test datasets,
    the model is trained with the training dataset. The Train Model module in ML Studio
    requires two inputs: an uninitialized ML model and the training dataset. The output
    of the module is the trained ML model that can be used to make predictions. In
    this example, the aim is to predict a numerical variable (the flight delay in
    minutes). As discussed previously, this type of problem requires a regression
    model. For simple testing, it is usually best to start with linear regression.
    This model does not often produce the best results, but it runs fast and gives
    a baseline for accuracy when evaluating more advanced models. Here is an example
    of a full training pipeline:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦数据被处理并分为训练集和测试集，模型将使用训练集进行训练。ML Studio中的“训练模型”模块需要两个输入：一个未初始化的ML模型和训练集。该模块的输出是经过训练的ML模型，可用于进行预测。在本例中，目标是预测一个数值变量（分钟的航班延误）。如前所述，这类问题需要回归模型。对于简单的测试，通常最好从线性回归开始。这种模型并不总是产生最佳结果，但它运行速度快，为评估更高级模型提供了准确性的基准。以下是一个完整的训练流程示例：
- en: '![](img/4e14730c-4ed6-4ab7-903d-c6384a3368b3.png)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/4e14730c-4ed6-4ab7-903d-c6384a3368b3.png)'
- en: In this case, the Decision Forest Regression model was trained with 75% of the
    input data. This model can produce accurate results, but the training time can
    be long if the dataset contains many rows. Training this model with a little over
    2 million rows took about 1 hour, while the linear regression model was trained
    in less than 1 minute. Although some algorithms may perform better in certain
    situations, it is usually difficult to predict beforehand which algorithm will
    produce the best results for a given problem. The best approach is to experiment
    with different algorithms and parameters to find the best model. We will show
    how this can be done in an organized manner using the modules in ML Studio, as
    follows.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，决策森林回归模型使用了75%的输入数据进行训练。该模型可以产生准确的结果，但如果数据集包含许多行，训练时间可能会很长。使用略超过200万行的数据集训练此模型大约需要1小时，而线性回归模型训练时间不到1分钟。尽管某些算法可能在某些情况下表现更好，但通常很难事先预测哪种算法将产生给定问题的最佳结果。最佳方法是尝试不同的算法和参数，以找到最佳模型。我们将展示如何使用ML
    Studio中的模块有组织地进行实验，如下所示。
- en: To get more information about each module, click on the module so that the configuration
    panel appears on the right-hand side of the canvas. Follow the link at the bottom
    of the panel under Quick Help. The module documentation includes detailed information
    about each module and how to configure it.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 要获取每个模块的更多信息，请点击模块，以便在画布的右侧显示配置面板。在快速帮助面板底部跟随链接。模块文档包括每个模块的详细信息以及如何配置它。
- en: After the Train Model module has been connected with an ML module and an input
    dataset, its output can be taken to the Score Model module to make predictions.
    To understand how well our model is performing, the test dataset is scored and
    the predictions for the model are compared to the true values (labels). The Score
    Model module will add a new column to the output data, containing the predicted
    values. The predicted values are then plotted against the actual values as a scatter
    plot to see how well they match up against each other.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在将“训练模型”模块与ML模块和输入数据集连接后，其输出可以传递到“评分模型”模块进行预测。为了了解我们的模型表现如何，测试数据集被评分，并且模型的预测与真实值（标签）进行比较。评分模型模块将在输出数据中添加一个新列，包含预测值。然后，将预测值与实际值作为散点图绘制，以查看它们之间的匹配程度。
- en: 'Although ML Studio does not provide any native visualization modules, the Execute
    R Script module can produce R graphics as output. The `plot` command is suitable
    for simple figures and is supported natively in the R module. The `ggplot2` library
    is also available in the R module. This library is widely used and produces high
    quality pictures. Here is an example of how to plot the `DepDelay` (actual values)
    on the *x* axis and the `Scored Label Mean` (predicted value) on the *y* axis:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管ML Studio没有提供任何原生可视化模块，但“执行R脚本”模块可以生成R图形作为输出。`plot`命令适用于简单的图形，并且在R模块中是原生支持的。`ggplot2`库也存在于R模块中。这个库被广泛使用，并生成高质量的图片。以下是如何在*x*轴上绘制`DepDelay`（实际值）和在*y*轴上绘制`Scored
    Label Mean`（预测值）的示例：
- en: '[PRE0]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Note that if the linear regression model was used, the predicted values would
    be in a different column (`Scored Labels`).
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，如果使用了线性回归模型，预测值将位于不同的列（“评分标签”）。
- en: 'These are all the steps needed to train the model and analyze the results in
    a single pipeline. The model can now be trained by clicking the Run button in
    the toolbar at the bottom in ML Studio. After the run has finished, the results
    can be viewed by right-clicking the second output (R Device) and choosing Visualize.
    The plotting output can be viewed under the Graphics section, as demonstrated
    in the following diagram:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 这些都是在单个管道中训练模型和分析结果所需的全部步骤。现在可以通过在ML Studio底部的工具栏中点击运行按钮来训练模型。运行完成后，可以通过在第二个输出（R设备）上右键单击并选择可视化来查看结果。绘图输出可以在图形部分查看，如下面的图示所示：
- en: '![](img/38837ea6-5f12-4b49-9df3-b355c609c855.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/38837ea6-5f12-4b49-9df3-b355c609c855.png)'
- en: In an ideal scenario, each predicted value would be equal to the actual value
    and there would be a straight line from the bottom-left corner to the upper-right
    corner. The preceding screenshot is therefore far from ideal. It seems that the
    model predicts some high values when the actual values are low, and vice versa;
    it is not able to predict high values when it should. We can already see from
    this screenshot that the *variance* of the results is high. The conclusion is
    that the features that were given to the model are not conclusive enough to predict
    delays accurately. The selected features (see the preceding list) do not contain
    sufficient information to explain the variation in the label variable.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在理想情况下，每个预测值都应等于实际值，并且从左下角到右上角将是一条直线。因此，前面的截图远非理想。看起来模型在实际值低时预测了一些高值，反之亦然；它无法在应该预测高值时预测。从这张截图我们可以看出，结果的*方差*很高。结论是，提供给模型的特征不足以准确预测延迟。所选特征（见前面的列表）不包含足够的信息来解释标签变量的变化。
- en: 'Since the initial results do not seem convincing, what should the next step
    be? Instead of continuing to experiment with different configurations, it might
    be more productive to take a step back and consider whether there is some additional
    data that gives more information about when delays might occur. For example, weather
    conditions might correlate well with flight delays, so it could be a good idea
    to include weather data in the model. To see an example of this, navigate to Azure
    AI Gallery and search for the `Binary Classification: Flight delay prediction`
    template.'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 由于初始结果似乎并不令人信服，下一步应该做什么？与其继续尝试不同的配置，不如退一步考虑是否有额外的数据可以提供更多关于延误可能发生的信息。例如，天气条件可能与航班延误高度相关，因此将天气数据包含在模型中可能是个好主意。要查看此示例，请导航到
    Azure AI 画廊并搜索“二元分类：航班延误预测”模板。
- en: In the following subsections, we'll examine how different feature variables
    contribute to the variation in the label variable. We'll also show how to use
    ML Studio modules to evaluate different models and explore different parameter
    configurations.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下小节中，我们将探讨不同的特征变量如何影响标签变量的变化。我们还将展示如何使用 ML Studio 模块评估不同的模型和探索不同的参数配置。
- en: 'To a beginner, the wide selection of different ML algorithms may feel overwhelming.
    Which algorithm gives quick results, and which is good for large datasets? To
    help answer these and other questions, Microsoft has published an Azure ML algorithm
    cheat sheet: [https://docs.microsoft.com/en-us/azure/machine-learning/studio/algorithm-cheat-sheet](https://docs.microsoft.com/en-us/azure/machine-learning/studio/algorithm-cheat-sheet).
    The cheat sheet shows the pros and cons of each algorithm at a quick glance.'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 对于初学者来说，不同机器学习算法的广泛选择可能会感到不知所措。哪种算法能快速得到结果，哪种适合大数据集？为了帮助回答这些问题以及其他问题，微软已发布了一个
    Azure ML 算法速查表：[https://docs.microsoft.com/en-us/azure/machine-learning/studio/algorithm-cheat-sheet](https://docs.microsoft.com/en-us/azure/machine-learning/studio/algorithm-cheat-sheet)。速查表可以快速查看每个算法的优缺点。
- en: More advanced users will know that the algorithms in ML Studio are just a small
    portion of all of the available models. The algorithm selection can be extended
    with R libraries by using the Create R Model module. This is a code-based alternative
    for developing ML models in ML Studio.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 更高级的用户会知道，ML Studio 中的算法只是所有可用模型的一小部分。可以通过使用创建 R 模型模块来扩展算法选择，使用 R 库。这是在 ML Studio
    中开发机器学习模型的基于代码的替代方案。
- en: Feature selection
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 特征选择
- en: 'A common problem when developing ML models is deciding which features should
    be used when training a model. For a supervised learning algorithm, the best features
    are those that are highly correlated with the label variable. This means, broadly
    speaking, that changing one of the variables induces a change in the other variable
    as well. An example of highly correlated variables could be the time of day and
    the amount of road traffic: traffic jams usually occur during the rush hour, while
    the amount of traffic during the night is particularly low.'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在开发机器学习模型时，一个常见的问题是在训练模型时决定应该使用哪些特征。对于监督学习算法，最佳特征是与标签变量高度相关的特征。这意味着，从广义上讲，改变其中一个变量也会导致另一个变量的变化。高度相关的变量示例可以是白天的时间和道路交通量：交通堵塞通常发生在高峰时段，而夜间交通量特别低。
- en: The general aim of feature selection is to discover the variables that have
    the largest impact on the target variable. If the input dataset contains a large
    amount of columns, it ...
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 特征选择的总体目标是发现对目标变量影响最大的变量。如果输入数据集包含大量列，那么 ...
- en: Comparing models and parameters
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 模型和参数比较
- en: One of the core tasks in developing ML models is choosing the ML algorithm and
    configuring the parameters of the algorithm. ML Studio provides modules for both
    of these tasks, allowing you to compare multiple models, or parameter values in
    a single run.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 在开发机器学习模型的核心任务之一是选择机器学习算法并配置算法的参数。ML Studio 为这两个任务都提供了模块，允许你在单次运行中比较多个模型或参数值。
- en: 'To train multiple models in one experiment, the training and test datasets
    can be reused by directing the datasets to multiple training branches as follows:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 要在一个实验中训练多个模型，可以通过将数据集指向多个训练分支来重复使用训练和测试数据集，如下所示：
- en: '![](img/c1dc845b-3c5f-4b61-9d28-35925b2117b5.png)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/c1dc845b-3c5f-4b61-9d28-35925b2117b5.png)'
- en: The preceding experiment is similar to the earlier training experiment, except
    that there are two Train Model modules with different algorithms as inputs. The
    results of the Score Model module are also directed to the Evaluate Model module,
    instead of visualizing the raw prediction results, as was done earlier. The evaluation
    module takes two datasets as inputs, each dataset containing the original labels
    and the predicted values from the scoring module.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 先前的实验与早期的训练实验类似，不同之处在于有两个不同的算法作为输入的Train Model模块。Score Model模块的结果也指向Evaluate
    Model模块，而不是像之前那样可视化原始预测结果。评估模块接受两个数据集作为输入，每个数据集包含来自评分模块的原始标签和预测值。
- en: 'The output of the evaluation module contains the summary statistics of the
    predicted values (the first input dataset is shown on the first row):'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 评估模块的输出包含预测值的汇总统计信息（第一个输入数据集显示在第一行）：
- en: '![](img/f2c2b8df-2081-4cda-9d8c-19a428d066d0.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/f2c2b8df-2081-4cda-9d8c-19a428d066d0.png)'
- en: The columns of the evaluation results depend on the nature of the algorithms.
    The accuracy metrics that are used to evaluate regression models are different
    than those used for the evaluation of classification models, for example. As seen
    in the preceding screenshot, the evaluation module calculates several different
    metrics for a regression model. The different accuracy metrics capture different
    aspects of the errors. The Root Mean Squared Error is probably the most widely
    used metric for regression models. This metric indicates the confidence interval
    containing 95% of the examples in the test dataset.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 评估结果的列取决于算法的性质。用于评估回归模型的准确性指标与用于评估分类模型的指标不同，例如。如图所示，评估模块为回归模型计算了几个不同的指标。不同的准确性指标捕捉到错误的不同方面。均方根误差可能是回归模型中最广泛使用的指标。此指标表示包含测试数据集中95%示例的置信区间。
- en: Sometimes, different metrics can give contradicting results. In the preceding
    example, the second model has a lower Root Mean Squared Error, while other metrics,
    such as the Mean Absolute Error, are better in the first model. Therefore, it
    is important to choose the accuracy metric carefully when comparing results for
    different models. Different metrics emphasize different aspects of the error distribution,
    so the best metric depends on the problem and the input data. The properties of
    each metric is beyond the scope of this book, and we refer the reader to the ML
    Studio documentation and general statistics literature for details about the accuracy
    metrics.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，不同的指标可能会给出矛盾的结果。在先前的例子中，第二个模型的均方根误差较低，而其他指标，如平均绝对误差，在第一个模型中表现更好。因此，在比较不同模型的输出结果时，选择准确的指标非常重要。不同的指标强调错误分布的不同方面，因此最佳指标取决于问题和输入数据。每个指标的性质超出了本书的范围，我们建议读者参考
    ML Studio 文档和一般统计学文献，以获取有关准确性指标的详细信息。
- en: 'As already mentioned, ML algorithms include parameters that affect how the
    model is trained. These parameters are often called **hyperparameters**. While
    the default values of the hyperparameters are chosen to work well in most cases,
    sometimes the accuracy of a model can be improved by choosing different values
    for the parameters. The Tune Model Hyperparameters module enables you to train
    a model multiple times in a single run using different parameter values. This
    module can be used instead of the Train Model module to create a trained model,
    as in the following experiment:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，机器学习算法包括影响模型训练方式的参数。这些参数通常被称为**超参数**。虽然超参数的默认值在大多数情况下都选择得很好，但有时通过选择不同的参数值可以提高模型的准确性。调整模型超参数模块允许您在单次运行中多次使用不同的参数值来训练模型。此模块可以用作替代训练模型模块来创建训练好的模型，如下面的实验所示：
- en: '![](img/557405e5-7dfe-4a29-8d7d-3854c6cb26da.png)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/557405e5-7dfe-4a29-8d7d-3854c6cb26da.png)'
- en: The inputs to Tune Model Hyperparameters are the same as for Train Model, except
    that the former accepts a validation dataset as a third optional input. Using
    the validation dataset means that the accuracy between different parameter values
    is evaluated with examples that were not used for training the model.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 调整模型超参数的输入与训练模型相同，只是前者接受一个验证数据集作为第三个可选输入。使用验证数据集意味着不同参数值之间的准确性是通过未用于训练模型的示例来评估的。
- en: 'Each algorithm has its own set of parameters and the parameters used for training
    must be specified in the algorithm module. To enable multiple values for the parameters,
    switch the Create trainer mode option of the algorithm module to Parameter Range.
    Note that some algorithms, such as linear regression, do not allow hyperparameter
    tuning. The possible values of the parameters can be given as a comma-separated
    list or by specifying a range using the range builder, as follows:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 每个算法都有自己的参数集，用于训练的参数必须在算法模块中指定。为了使参数具有多个值，将算法模块的创建训练模式选项切换到参数范围。请注意，某些算法，如线性回归，不允许超参数调整。参数的可能值可以以逗号分隔的列表形式给出，或者通过使用范围构建器指定范围，如下所示：
- en: '![](img/9c76f184-025b-4631-a584-acf16fc80471.png)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/9c76f184-025b-4631-a584-acf16fc80471.png)'
- en: 'The Tune Model Hyperparameters module does not necessarily try out all of the
    possible combinations of the parameters. The module supports the following parameter
    sweep modes: entire grid, random grid, and random sweep. If entire grid mode is
    selected, all combinations will be tried. The random grid mode uses only a subset
    of all possible combinations, selected randomly. The total amount of runs in a
    random grid sweep can be controlled by setting the maximum number of runs on random
    sweep to a suitable value. This is particularly useful if there is a large number
    of combinations and it would take a very long time to sweep over the whole parameter
    space. Similarly, the random sweep mode can be used to run a subset of all possible
    combinations. The difference between the random grid and the random sweep modes
    is that the latter chooses the parameter values randomly within the specified
    range, while the former uses only the exact values defined in the algorithm module.'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 调整模型超参数模块并不一定尝试所有可能的参数组合。该模块支持以下参数扫描模式：完整网格、随机网格和随机扫描。如果选择完整网格模式，将尝试所有组合。随机网格模式仅使用所有可能组合的子集，随机选择。可以通过将随机扫描的最大运行次数设置为合适的值来控制随机网格扫描中的运行总数。这在组合数量很多且扫描整个参数空间需要非常长时间的情况下特别有用。同样，随机扫描模式也可以用来运行所有可能组合的子集。随机网格和随机扫描模式之间的区别在于，后者在指定范围内随机选择参数值，而前者仅使用算法模块中定义的确切值。
- en: Before running the example, set the label column similarly, as for Train Model.
    The accuracy metric must also be defined, depending on the nature of the model
    (classification or regression). The accuracy metric determines which measure is
    used when selecting the best model. As already discussed, different metrics can
    disagree about the best model, so it is important to decide which metric is used
    to evaluate the performance of the model.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在运行示例之前，将标签列设置得与训练模型类似。还必须定义准确度指标，具体取决于模型的性质（分类或回归）。准确度指标确定在选择最佳模型时使用哪种度量。如前所述，不同的指标可能在最佳模型上产生分歧，因此决定使用哪种指标来评估模型性能是很重要的。
- en: 'After the experiment has finished running, the results of the evaluation can
    be viewed in the first output of the Tune Model Hyperparameters module, as follows:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 实验完成后，可以在调整模型超参数模块的第一个输出中查看评估结果，如下所示：
- en: '![](img/99ff6a2d-8c95-45f8-8345-2042309d77d4.png)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/99ff6a2d-8c95-45f8-8345-2042309d77d4.png)'
- en: 'Each row in the results corresponds to an independent model, trained with different
    parameters. The columns show which parameter values were used in each case and
    the corresponding values of the accuracy metrics. The results are organized in
    decreasing order of accuracy, as defined by the metric chosen (here: Mean Absolute
    Error). The second output of Tune Model Hyperparameters contains the best trained
    model, also defined by the metric. This model can be used for scoring, similar
    to the output of the Train Model module.'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 结果中的每一行对应一个独立的模型，该模型使用不同的参数进行训练。列显示每个情况下使用的参数值以及相应的准确度指标值。结果按准确度降序排列，按所选指标定义（此处：平均绝对误差）。调整模型超参数模块的第二个输出包含最佳训练模型，也由指标定义。此模型可用于评分，类似于训练模型模块的输出。
- en: In conclusion, Azure ML Studio includes many built-in modules to evaluate the
    accuracy of ML models, and to test different models and configurations. It must,
    however, be borne in mind that even the best models cannot perform well on poor
    data. If the values to be predicted are not correlated with the feature variables,
    the algorithm will not be able to make good predictions. Moreover, the algorithm
    that produces the best accuracy is not always the best model in practice. Particularly
    with large datasets, it is often necessary to consider the runtime of the training
    process. If the complexity of the training process grows uncontrollably as the
    amount of data grows, training the algorithm can become impossible in practice.
    These aspects must also be taken into account when choosing ML algorithms for
    any given problem.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 总之，Azure ML Studio 包含许多内置模块来评估机器学习模型的准确性，以及测试不同的模型和配置。然而，必须记住，即使是最好的模型在处理差数据时也可能表现不佳。如果要预测的值与特征变量不相关，算法将无法做出良好的预测。此外，产生最佳准确率的算法并不总是实践中最好的模型。特别是对于大型数据集，通常需要考虑训练过程的运行时间。如果训练过程的复杂性随着数据量的增加而无法控制地增长，实际上训练算法可能变得不可能。在选择任何给定问题的机器学习算法时，也必须考虑这些方面。
- en: Deploying a model as a web service
  id: totrans-80
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将模型部署为网络服务
- en: One of the biggest strengths of Azure ML Studio is the ease with which you can
    deploy models to the cloud, to be consumed by other applications. Once an ML model
    is trained, as demonstrated in the previous section, it can be exported to ML
    Studio Web Services with just a few clicks. Deployment creates a web API for the
    model, which can be called from any internet-connected application. The model
    takes the features as input data and produces a predicted value as output. By
    deploying models to the ML Studio Web Service, there is no need to worry about
    the underlying server infrastructure. The computing resources and maintenance
    are handled entirely by Azure.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: Azure ML Studio 最大的优势之一是部署模型到云端的便捷性，以便其他应用程序使用。一旦机器学习模型被训练，如前节所示，只需几点击即可将其导出到
    ML Studio 网络服务。部署为模型创建了一个网络 API，可以从任何互联网连接的应用程序调用。模型以特征作为输入数据，并产生预测值作为输出。通过将模型部署到
    ML Studio 网络服务，无需担心底层服务器基础设施。计算资源和维护完全由 Azure 处理。
- en: The following subsections show how to deploy an ...
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的子节将展示如何部署 ...
- en: Creating a predictive experiment
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建预测实验
- en: Before a trained model can be exported to the web service, the training experiment
    that created the model must be converted into a predictive experiment. A predictive
    experiment defines the scoring pipeline for creating predictions based on web
    service input. It does not contain any training modules, since the model is already
    trained. Instead, the model is just loaded from the list of trained models and
    imported as input to the Score Model module.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 在将训练好的模型导出为网络服务之前，创建该模型的训练实验必须转换为预测实验。预测实验定义了基于网络服务输入创建预测的评分管道。它不包含任何训练模块，因为模型已经训练好了。相反，模型只是从训练模型列表中加载，并作为输入导入到评分模型模块。
- en: 'To create a predictive experiment, open a training experiment that has been
    previously run, or run the training experiment once to create a trained model.
    The experiment does not need to include a Score Model module—this will be added
    to the predictive experiment automatically. Click on Set up Web Service | Create
    Predictive experiment. This leads to a new view that shows the new predictive
    experiment, as follows:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建预测实验，打开之前运行过的训练实验，或者运行一次训练实验以创建一个训练好的模型。实验不需要包含评分模型模块——这将在预测实验中自动添加。点击“设置网络服务
    | 创建预测实验”。这将引导到一个新视图，显示新的预测实验，如下所示：
- en: '![](img/f117bdc4-05ce-44cf-858c-91d6f02c2387.png)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/f117bdc4-05ce-44cf-858c-91d6f02c2387.png)'
- en: This example uses the same flight delay prediction experiment that was trained
    earlier. Note that the Split Data module has been removed from the predictive
    experiment and the training modules have now been replaced with the trained model.
    The Split Data module was only used to divide the data into training and test
    datasets, so ML Studio has inferred that it can be removed from the predictive
    experiment along with the training modules.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 本例使用的是之前训练过的相同的航班延误预测实验。请注意，分割数据模块已经从预测实验中移除，并且训练模块现在已经被训练好的模型所取代。分割数据模块仅用于将数据分割成训练集和测试集，因此
    ML Studio 推断出它可以与训练模块一起从预测实验中移除。
- en: Run the experiment once before deploying it. The predictive experiment cannot
    be deployed as a web service before it has been run at least once. For instructions
    on how to deploy the model, skip to the next subsection.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 在部署之前先运行一次实验。在至少运行一次之前，预测性实验不能作为 Web 服务部署。有关如何部署模型的说明，请跳转到下一小节。
- en: 'In some cases, it might be useful to provide some of the module parameters
    as input from the web service. For example, the data preprocessing steps might
    depend on the input data. For this purpose, most of the module configurations
    can be parameterized so that the configuration values are supplied in the request
    as input. To parameterize a certain module parameter, go back to the training
    experiment and click on the module to be configured. In the configuration panel
    on the right-hand side of the canvas, click on the menu next to the field to be
    configured and select Set as web service parameter, as follows:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些情况下，可能有用将一些模块参数作为来自 Web 服务的输入。例如，数据预处理步骤可能取决于输入数据。为此目的，大多数模块配置都可以参数化，以便配置值作为输入在请求中提供。要参数化某个模块参数，请返回到训练实验并点击要配置的模块。在画布右侧的配置面板中，点击要配置的字段旁边的菜单并选择设置为
    Web 服务参数，如下所示：
- en: '![](img/e801e72b-8904-4b16-b1c3-4a661b0dc417.png)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/e801e72b-8904-4b16-b1c3-4a661b0dc417.png)'
- en: This will add the parameter to the list of Web Services parameters for the module.
    It is also possible to set a default value for the parameter, in case there is
    no value supplied in the request. Not all module parameters can be set as Web
    Service parameters, however. Those parameters that cannot be set do not have the
    context menu next to the field (see, for example, Cleaning mode in the preceding
    screenshot).
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 这将把参数添加到模块的 Web 服务参数列表中。如果请求中没有提供值，也可以为该参数设置一个默认值。然而，并非所有模块参数都可以设置为 Web 服务参数。那些不能设置的参数在字段旁边没有上下文菜单（例如，参见前一个截图中的清洁模式）。
- en: Sometimes, the deployed models might give poor predictions and we may wish to
    revert back to a previous version of the model. The previous runs can always be
    viewed from the Run History, which is found in the bottom panel of the experiment.
    The Run History shows every execution of the experiment, and clicking a version
    of the experiment will open it with the respective configuration and results.
    This version of the experiment will be locked and cannot be edited or deployed
    any more, but it can be saved as a new training experiment and retrained to create
    a new predictive experiment. This is useful if the model has been retrained several
    times and the optimal parameters for the model have been forgotten.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，部署的模型可能会给出较差的预测，我们可能希望回退到模型的先前版本。可以从运行历史记录中查看以前的运行，该历史记录位于实验的底部面板中。运行历史记录显示了实验的每一次执行，点击实验的某个版本将使用相应的配置和结果打开它。这个版本的实验将被锁定，无法编辑或部署，但可以将其保存为新的训练实验并重新训练以创建新的预测性实验。如果模型已经重新训练多次并且忘记了模型的最佳参数，这很有用。
- en: Deploying and testing a web service
  id: totrans-93
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 部署和测试 Web 服务
- en: The final step after creating the predictive experiment is to deploy the model
    to the cloud. Open the predictive experiment and make sure that it has been run
    successfully at least once, as discussed previously. From the bottom panel, choose
    Deploy Web Service | Deploy Web Service [New]. This brings up the deployment configuration
    view. Choose a name and the price plan for the web service. The price plan determines
    how many requests the service can handle in a month. The price plan is created
    at the same time as when a new ML Studio Web Service is created in the Azure portal.
    If there is no existing price plan, a new one can also be created by choosing
    Create new... from the menu.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 创建预测性实验后的最后一步是将模型部署到云端。打开预测性实验，确保它至少已经成功运行一次，如前所述。从底部面板中选择部署 Web 服务 | 部署 Web
    服务 [新建]。这将打开部署配置视图。选择 Web 服务的名称和价格计划。价格计划决定了服务每月可以处理多少请求。价格计划是在 Azure 门户中创建新的
    ML Studio Web 服务时创建的。如果没有现有的价格计划，也可以通过从菜单中选择创建新...来创建一个新的价格计划。
- en: When the configuration ...
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 当配置 ...
- en: Summary
  id: totrans-96
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: Azure Machine Learning Studio is a fully managed platform for developing machine
    learning models, enabling the user to concentrate on the essential tasks and problems
    in machine learning development. The graphical user interface is easy to learn
    and its usage requires no programming skills. Even users who have no prior experience
    in programming or machine learning can learn to use it, and the Experiment template
    collection contains many real-world examples of ML models to start with. ML Studio
    is a great way to start learning to develop ML models, and the sample datasets
    in ML Studio make it possible to develop your own models, even if you don't have
    your own data to start with.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: Azure Machine Learning Studio 是一个用于开发机器学习模型的完全托管平台，使用户能够专注于机器学习开发中的关键任务和问题。其图形用户界面易于学习，使用它不需要编程技能。即使是没有任何编程或机器学习经验的用户也可以学会使用它，并且实验模板集合包含许多真实的机器学习模型示例，可以作为起点。ML
    Studio 是学习开发机器学习模型的好方法，ML Studio 中的样本数据集使得在没有自己的数据开始的情况下开发自己的模型成为可能。
- en: Machine Learning Studio contains modules for all the most common ML-related
    tasks, such as data preprocessing, tuning hyperparameters, and evaluating the
    performance of ML algorithms. If the module collection is not sufficient for the
    task at hand, the R and Python script modules can be used to customize tasks and
    visualize the results, for example.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: Machine Learning Studio 包含了所有最常见与机器学习相关的任务模块，例如数据预处理、调整超参数以及评估机器学习算法的性能。如果当前任务所需的模块集合不足以满足需求，可以使用
    R 和 Python 脚本模块来自定义任务并可视化结果，例如。
- en: Machine Learning Studio is a complete environment for developing ML models,
    including all the steps from data ingestion to serving models in the cloud. Once
    the models have been trained in ML Studio Workspace, they can be converted to
    Predictive Experiments and deployed to the ML Studio Web Services for serving
    with a few clicks. The user does not need to worry about managing the underlying
    infrastructure behind the web services API, as this is managed entirely by the
    service. The web services portal contains comprehensive documentation and examples
    for integrating with the service, making it very easy to begin consuming the ML
    models from external applications. In the next chapter we will see how to use
    Azure in data science.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: Machine Learning Studio 是一个用于开发机器学习模型的完整环境，包括从数据摄取到在云中部署模型的所有步骤。一旦模型在 ML Studio
    工作区中训练完成，它们可以被转换为预测实验，并通过几点击部署到 ML Studio 网络服务中进行服务。用户无需担心管理网络服务 API 后面的底层基础设施，因为这完全由服务管理。网络服务门户包含与该服务集成的全面文档和示例，使得从外部应用程序开始消费机器学习模型变得非常容易。在下一章中，我们将看到如何使用
    Azure 进行数据科学。
