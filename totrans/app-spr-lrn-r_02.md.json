["```py\n    library(dplyr)\n    library(ggplot2)\n    library(repr)\n    library(cowplot)\n    ```", "```py\n    options(repr.plot.width=12, repr.plot.height=4)\n    ```", "```py\n    df <- read.csv(\"/Chapter 2/Data/bank-additional/bank-additional-full.csv\",sep=';')\n    ```", "```py\n    str(df)\n    ```", "```py\n    library(ggplot2)\n    ```", "```py\n    df <- read.csv(\"/Chapter 2/Data/bank-additional/bank-additional-full.csv\",sep=';')\n    ```", "```py\n    print(summary(df$age))\n    ```", "```py\n    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n    17.00   32.00   38.00   40.02   47.00   98.00\n    ```", "```py\n    print(paste(\"Std.Dev:\",round(sd(df$age),2)))\n    ```", "```py\n    [1] \"Std.Dev: 10.42\"\n    ```", "```py\n    ggplot(data=df,aes(y=age)) + geom_boxplot(outlier.colour=\"black\")\n    ```", "```py\n    library(ggplot2)\n    ```", "```py\n    df <- read.csv(\"/Chapter 2/Data/bank-additional/bank-additional-full.csv\",sep=';')\n    ```", "```py\n    ggplot(data=df,aes(x=age)) + \n           geom_histogram(bins=10,fill=\"blue\", color=\"black\", alpha =0.5)  + \n           ggtitle(\"Histogram for Age\") + \n           theme_bw()  \n    ```", "```py\n    library(ggplot2)\n    ```", "```py\n    df <- read.csv(\"/Chapter 2/Data/bank-additional/bank-additional-full.csv\",sep=';')\n    ```", "```py\n    ggplot(data=df,aes(x=age)) + geom_density(fill=\"red\",alpha =0.5) + \n                                 ggtitle(\"Density Plot for Age\") + \n                                 theme_bw()\n    ```", "```py\n    library(cowplot)\n    ```", "```py\n    plot_grid_numeric <- function(df,list_of_variables,ncols=2){\n        plt_matrix<-list()\n        i<-1\n        for(column in list_of_variables){\n            plt_matrix[[i]]<-ggplot(data=df,aes_string(x=column)) + \n                geom_histogram(binwidth=2,fill=\"blue\", color=\"black\", \n                               alpha =0.5)  +\n                ggtitle(paste(\"Histogram for variable: \",column)) + theme_bw()\n                i<-i+1\n                }\n        plot_grid(plotlist=plt_matrix,ncol=2)\n    }\n    ```", "```py\n    summary(df[,c(\"campaign\",\"pdays\",\"previous\",\"emp.var.rate\")])\n    ```", "```py\n       campaign          pdays          previous      emp.var.rate     \n    Min.   : 1.000   Min.   :  0.0   Min.   :0.000   Min.   :-3.40000  \n    1st Qu.: 1.000   1st Qu.:999.0   1st Qu.:0.000   1st Qu.:-1.80000  \n    Median : 2.000   Median :999.0   Median :0.000   Median : 1.10000  \n    Mean   : 2.568   Mean   :962.5   Mean   :0.173   Mean   : 0.08189  \n    3rd Qu.: 3.000   3rd Qu.:999.0   3rd Qu.:0.000   3rd Qu.: 1.40000  \n    Max.   :56.000   Max.   :999.0   Max.   :7.000   Max.   : 1.40000\n    ```", "```py\n    plot_grid_numeric(df,c(\"campaign\",\"pdays\",\"previous\",\"emp.var.rate\"),2)\n    ```", "```py\n    plot_grid_numeric <- function(df,list_of_variables,ncols=2){\n      plt_matrix<-list()\n      i<-1\n      }\n      plot_grid(plotlist=plt_matrix,ncol=2)\n    }\n    ```", "```py\n    plot_grid_numeric <- function(df,list_of_variables,ncols=2){\n      plt_matrix<-list()\n      i<-1\n    }\n    plot_grid_numeric(df,c(\"campaign\",\"pdays\",\"previous\",\"emp.var.rate\"),2)\n    ```", "```py\n    library(cowplot)\n    ```", "```py\n    df <- read.csv(\"/Chapter 2/Data/bank-additional/bank-additional-full.csv\",sep=';')\n    ```", "```py\n    summary(df[,c(\"nr.employed\",\"euribor3m\",\"cons.conf.idx\",\"duration\")])\n    ```", "```py\n     nr.employed     euribor3m     cons.conf.idx      duration     \n    Min.   :4964   Min.   :0.634   Min.   :-50.8   Min.   :   0.0  \n    1st Qu.:5099   1st Qu.:1.344   1st Qu.:-42.7   1st Qu.: 102.0  \n    Median :5191   Median :4.857   Median :-41.8   Median : 180.0  \n    Mean   :5167   Mean   :3.621   Mean   :-40.5   Mean   : 258.3  \n    3rd Qu.:5228   3rd Qu.:4.961   3rd Qu.:-36.4   3rd Qu.: 319.0  \n    Max.   :5228   Max.   :5.045   Max.   :-26.9   Max.   :4918.0\n    ```", "```py\n    plot_grid_numeric(df,c(\"nr.employed\",\"euribor3m\",\"cons.conf.idx\",\"duration\"),2)\n    ```", "```py\n    library(dplyr)\n    ```", "```py\n    marital_distribution <- df %>% group_by(marital) %>% \n                                   summarize(Count = n()) %>% \n                                   mutate(Perc.Count = round(Count/sum(Count)*100))\n    ```", "```py\n    print(marital_distribution)\n    ```", "```py\n    # A tibble: 4 x 3\n      marital  Count Perc.Count\n      <fct>    <int>      <dbl>\n    1 divorced  4612         11\n    2 married  24928         61\n    3 single   11568         28\n    4 unknown     80          0\n    ```", "```py\n    library(ggplot2)\n    ```", "```py\n    df <- read.csv(\"/Chapter 2/Data/bank-additional/bank-additional-full.csv\",sep=';')\n    ```", "```py\n    ggplot(data = marital_distribution,aes(x=marital,y=Perc.Count)) + \n                  geom_bar(stat=\"identity\",fill=\"blue\",alpha=0.6) + \n                  geom_text(aes(label=marital_distribution$Perc.Count, vjust = -0.3))\n    ```", "```py\n    library(ggplot2)\n    ```", "```py\n    df <- read.csv(\"/Chapter 2/Data/bank-additional/bank-additional-full.csv\",sep=';')\n    ```", "```py\n    plot_breaks = 100 - (cumsum(marital_distribution$Perc.Count) - \n                       marital_distribution$Perc.Count/2)\n    ```", "```py\n    plot_labels = paste0(marital_distribution$marital,\"-\",marital_distribution$Perc.Count,\"%\")\n    ```", "```py\n    options(repr.plot.width=12, repr.plot.height=8)\n    ```", "```py\n    ggplot(data = marital_distribution,aes(x=1,y=Perc.Count, fill=marital)) + \n                  geom_bar(stat=\"identity\") + #Creates the base bar visual\n                  coord_polar(theta =\"y\")  + #Creates the pie chart\n                  scale_y_continuous(breaks=plot_breaks, labels = plot_labels,position = \"left\") + \n                  theme(axis.text.x = element_text(angle = 30, hjust =1)) + #rotates the labels\n                  theme(text = element_text(size=15)) + #increases the font size for the legend\n                  ggtitle(\"Percentage Distribution of Marital Status\") #Adds the plot title\n    ```", "```py\n    library(cowplot)\n    ```", "```py\n    plot_grid_categorical <- function(df,list_of_variables,ncols=2){\n        plt_matrix <- list()\n        i<-1\n        #Iterate for each variable\n        for(column in list_of_variables){\n            #Creating a temporary DataFrame with the aggregation\n            var.dist <- df %>% group_by_(column) %>% \n                               summarize(Count = n()) %>% \n                               mutate(Perc.Count = round(Count/sum(Count)*100,1))\n            options(repr.plot.width=12, repr.plot.height=10)\n            plt_matrix[[i]]<-ggplot(data = var.dist,aes_string(x=column,y=\"Perc.Count\")) +\n                geom_bar(stat=\"identity\",fill=\"blue\",alpha=0.6) + #Defines the bar plot\n                geom_text(label=var.dist$Perc.Count,vjust=-0.3)+  #Adds the labels\n                theme(axis.text.x = element_text(angle = 90, vjust = 1)) + #rotates the labels\n                ggtitle(paste(\"Percentage Distribution of variable: \",column))  #Creates the title +\n                i<-i+1\n        }\n            plot_grid(plotlist=plt_matrix,ncol=ncols) #plots the grid\n    }\n    ```", "```py\n    summary(df[,c(\"job\",\"education\",\"default\",\"contact\")])\n    ```", "```py\n              job                      education        default           contact     \n     admin.     :10422   university.degree  :12168   no     :32588   cellular :26144  \n     blue-collar: 9254   high.school        : 9515   unknown: 8597   telephone:15044  \n     technician : 6743   basic.9y           : 6045   yes    :    3\n     services   : 3969   professional.course: 5243\n     management : 2924   basic.4y           : 4176\n     retired    : 1720   basic.6y           : 2292\n     (Other)    : 6156   (Other)            : 1749\n    ```", "```py\n    plot_grid_categorical(df,c(\"job\",\"education\",\"default\",\"contact\"),2)\n    ```", "```py\n    library(cowplot)\n    ```", "```py\n    df <- read.csv(\"/Chapter 2/Data/bank-additional/bank-additional-full.csv\",sep=';')\n    ```", "```py\n    summary(df[,c(\"loan\",\"month\",\"day_of_week\",\"poutcome\")])\n    ```", "```py\n          loan           month       day_of_week        poutcome    \n     no     :33950   may    :13769   fri:7827    failure    : 4252  \n     unknown:  990   jul    : 7174   mon:8514    nonexistent:35563  \n     yes    : 6248   aug    : 6178   thu:8623    success    : 1373  \n                     jun    : 5318   tue:8090                       \n                     nov    : 4101   wed:8134                       \n                     apr    : 2632                                  \n                     (Other): 2016\n    ```", "```py\n    plot_grid_categorical(df,c(\"loan\",\"month\",\"day_of_week\",\"poutcome\"),2)\n    ```", "```py\n    summary(df[,c(\"y\",\"housing\")])\n    ```", "```py\n       y            housing     \n     no :36548   no     :18622  \n     yes: 4640   unknown:  990  \n                 yes    :21576\n    ```", "```py\n    plot_grid_categorical(df,c(\"y\",\"housing\"),2)\n    ```", "```py\n    library(ggplot2)\n    ```", "```py\n    df <- read.csv(\"/Chapter 2/Data/bank-additional/bank-additional-full.csv\",sep=';')\n    ```", "```py\n    ggplot(data=df,aes(x=emp.var.rate,y=nr.employed)) + geom_point(size=4) + \n    ggtitle(\"Scatterplot of Employment variation rate v/s Number of Employees\")\n    ```", "```py\n    library(ggplot2)\n    ```", "```py\n    df <- read.csv(\"/Chapter 2/Data/bank-additional/bank-additional-full.csv\",sep=';')\n    ```", "```py\n    temp <- df %>% group_by(y) %>% \n                               summarize(Avg.Age = round(mean(age),2),\n                                         Num.Records = n())\n    ```", "```py\n    print(temp)\n    ```", "```py\n    # A tibble: 2 x 3\n      y     Avg.Age Num.Records\n      <fct>   <dbl>       <int>\n    1 no       39.9       36548\n    2 yes      40.9        4640\n    ```", "```py\n    ggplot(data= temp, aes(x=y, y=Avg.Age)) + \n           geom_bar(stat=\"identity\",fill=\"blue\",alpha= 0.5) +   #Creates the bar plot\n           geom_text(label=temp$Avg.Age,vjust=-0.3)+  #Adds the label\n           ggtitle(paste(\"Average Age across target outcome\"))  #Creates the title\n    ```", "```py\n    plot_bivariate_numeric_and_categorical <- function(df,target,list_of_variables,ncols=2){\n        target<-sym(target) #Defined for converting text to column names\n        plt_matrix <- list()\n        i<-1\n    for(column in list_of_variables){\n            col <-sym(column) #defined for converting text to column name\n            temp <- df %>% group_by(!!sym(target)) %>% \n                           summarize(Avg.Val = round(mean(!!sym(col)),2))\n            options(repr.plot.width=12, repr.plot.height=8) #Defines plot size\n               plt_matrix[[i]]<-ggplot(data= temp, aes(x=!!sym(target), y=Avg.Val)) + \n               geom_bar(stat=\"identity\",fill=\"blue\",alpha= 0.5) +   \n               geom_text(label=temp$Avg.Val,vjust=-0.3)+  #Adds the labels\n               ggtitle(paste(\"Average\",column,\"across target outcomes\"))  #Creates the title \n                i<-i+1\n        }\n        plot_grid(plotlist = plt_matrix,ncol=ncols)\n    }\n    ```", "```py\n    print(\"Distribution of records across target outcomes-\")\n    print(table(df$y))\n    ```", "```py\n    [1] \"Distribution of records across target outcomes-\"\n       no   yes \n    36548  4640\n    ```", "```py\n    plot_bivariate_numeric_and_categorical(df,\"y\",c(\"campaign\",\"pdays\",\"previous\",\"emp.var.rate\"),2)\n    ```", "```py\n    plot_bivariate_numeric_and_categorical(df,\"y\",\n                   c(\"cons.price.idx\",\"cons.conf.idx\", \"euribor3m\", \"nr.employed\"),2)\n    ```", "```py\n    library(ggplot2)\n    ```", "```py\n    df <- read.csv(\"/Chapter 2/Data/bank-additional/bank-additional-full.csv\",sep=';')\n    ```", "```py\n    temp <- df %>% group_by(y,marital) %>% summarize(Count = n()) \n    ```", "```py\n    options(repr.plot.width=12, repr.plot.height=4)\n    ```", "```py\n    ggplot(data = temp,aes(x=marital,y=Count,fill=y)) + \n           geom_bar(stat=\"identity\") + \n           ggtitle(\"Distribution of target 'y' across Marital Status\")\n    ```", "```py\n    temp <- df %>% group_by(y,marital) %>% \n                   summarize(Count = n()) %>% \n                   ungroup() %>%  #This function ungroups the previously grouped dataframe\n                   group_by(marital) %>%\n                   mutate(Perc = round(Count/sum(Count)*100)) %>%\n                   arrange(marital)\n    ```", "```py\n    options(repr.plot.width=12, repr.plot.height=4)\n    ```", "```py\n    ggplot(data = temp,aes(x=marital,y=Perc,fill=y)) + \n        geom_bar(stat=\"identity\") + \n        geom_text(aes(label = Perc), size = 5, hjust = 0.5, vjust = 0.3, position = \"stack\") + \n        ggtitle(\"Distribution of target 'y' percentage across Marital Status\")\n    ```", "```py\n    library(ggplot2)\n    ```", "```py\n    df <- read.csv(\"/Chapter 2/Data/bank-additional/bank-additional-full.csv\",sep=';')\n    ```", "```py\n    plot_bivariate_categorical <-  function(df, target, list_of_variables){\n        target <- sym(target) #Converting the string to a column reference\n        i <-1 \n        plt_matrix <- list()\n        for(column in list_of_variables){\n            col <- sym(column) \n            temp <- df %>% group_by(!!sym(target),!!sym(col)) %>% \n               summarize(Count = n()) %>% \n               ungroup() %>% #This fucntion ungroups the previously grouped dataframe\n               group_by(!!sym(col)) %>%\n               mutate(Perc = round(Count/sum(Count)*100)) %>%\n               arrange(!!sym(col))\n    ```", "```py\n    options(repr.plot.width=14, repr.plot.height=12)\n    ```", "```py\n        plt_matrix[[i]]<- ggplot(data = temp,aes(x=!!sym(col),y=Count,fill=!!sym(target))) + \n            geom_bar(stat=\"identity\") + \n            geom_text(aes(label = Count), size = 3, hjust = 0.5, vjust = -0.3, position = \"stack\") + \n            theme(axis.text.x = element_text(angle = 90, vjust = 1)) + #rotates the labels\n            ggtitle(paste(\"Distribution of target 'y'  frequency across\",column))\n        i<-i+1\n    ```", "```py\n        plt_matrix[[i]] <- ggplot(data = temp,aes(x=!!sym(col),y=Perc,fill=!!sym(target))) + \n            geom_bar(stat=\"identity\") + \n            geom_text(aes(label = Perc), size = 3, hjust = 0.5, vjust = -1, position = \"stack\") + \n            theme(axis.text.x = element_text(angle = 90, vjust = 1)) + #rotates the labels\n            ggtitle(paste(\"Distribution of target 'y' percentage across\",column))\n        i <- i+1\n        }\n        plot_grid(plotlist = plt_matrix, ncol=2)\n    }\n    ```", "```py\n    plot_bivariate_categorical(df,\"y\",c(\"job\",\"education\"))\n    ```", "```py\n    plot_bivariate_categorical(df,\"y\",c(\"default\",\"housing\"))\n    ```", "```py\n    plot_bivariate_categorical(df,\"y\",c(\"loan\",\"contact\"))\n    ```", "```py\n    df$y <- factor(df$y)\n    ```", "```py\n    h.test <- glm(y ~ emp.var.rate, data = df, family = \"binomial\")\n    ```", "```py\n    summary(h.test)\n    ```", "```py\n    Call:\n    glm(formula = y ~ emp.var.rate, family = \"binomial\", data = df)\n    Deviance Residuals: \n        Min       1Q   Median       3Q      Max  \n    -1.0047  -0.4422  -0.3193  -0.2941   2.5150  \n    Coefficients:\n                 Estimate Std. Error z value Pr(>|z|)    \n    (Intercept)  -2.33228    0.01939 -120.31   <2e-16 ***\n    emp.var.rate -0.56222    0.01018  -55.25   <2e-16 ***\n    ---\n    Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n    (Dispersion parameter for binomial family taken to be 1)\n        Null deviance: 28999  on 41187  degrees of freedom\n    Residual deviance: 25597  on 41186  degrees of freedom\n    AIC: 25601\n    Number of Fisher Scoring iterations: 5\n    ```", "```py\n    df$y <- factor(df$y)\n    ```", "```py\n    h.test2 <- glm(y ~ euribor3m, data = df, family = \"binomial\")\n    ```", "```py\n    summary(h.test2)\n    ```", "```py\n    Call:\n    glm(formula = y ~ euribor3m, family = \"binomial\", data = df)\n    Deviance Residuals: \n        Min       1Q   Median       3Q      Max  \n    -0.8568  -0.3730  -0.2997  -0.2917   2.5380  \n    Coefficients:\n                 Estimate Std. Error z value Pr(>|z|)    \n    (Intercept) -0.472940   0.027521  -17.18   <2e-16 ***\n    euribor3m   -0.536582   0.009547  -56.21   <2e-16 ***\n    ---\n    Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n    (Dispersion parameter for binomial family taken to be 1)\n        Null deviance: 28999  on 41187  degrees of freedom\n    Residual deviance: 25343  on 41186  degrees of freedom\n    AIC: 25347\n    Number of Fisher Scoring iterations: 5\n    ```", "```py\n    df$y <- factor(df$y)\n    ```", "```py\n    df$single_flag <- as.factor(ifelse(df$marital == \"single\",\"single\",\"other\"))\n    ```", "```py\n    sample <- table(df$y, df$single_flag)\n    print(sample)\n    ```", "```py\n      other single\n    no  26600   9948\n    yes  3020   1620\n    ```", "```py\n    h.test3 <- chisq.test(sample)\n    ```", "```py\n    print(h.test3)\n    ```", "```py\n    Pearson's Chi-squared test with Yates' continuity correction\n    data:  sample\n    X-squared = 120.32, df = 1, p-value < 2.2e-16\n    ```", "```py\n    df$y <- factor(df$y)\n    ```", "```py\n    df$job_flag <- as.factor(ifelse(df$job %in% c(\"student\",\"retired\"),as.character(df$job),\"other\"))\n    df$contact <- as.factor(df$contact)\n    ```", "```py\n    sample4 <- table(df$y, df$job_flag)\n    print(\"Frequency table for Job\")\n    print(sample4)\n    ```", "```py\n    [1] \"Frequency table for Job\"\n      other retired student\n    no  34662    1286     600\n    yes  3931     434     275\n    ```", "```py\n    h.test4 <- chisq.test(sample4)\n    ```", "```py\n    print(\"Hypothesis #4 results\")\n    print(h.test4)\n    ```", "```py\n    [1] \"Hypothesis #4 results\"\n    Pearson's Chi-squared test\n    data:  sample4\n    X-squared = 736.53, df = 2, p-value < 2.2e-16\n    ```", "```py\n    print(\"Frequency table for Contact\")\n    sample5 <- table(df$y, df$contact)\n    print(sample5)\n    ```", "```py\n    [1] \"Frequency table for Contact\"\n      cellular telephone\n    no     22291     14257\n    yes     3853       787\n    ```", "```py\n    h.test5 <- chisq.test(sample5)\n    ```", "```py\n    print(\"Hypothesis #5 results\")\n    print(h.test5)\n    ```", "```py\n    [1] \"Hypothesis #5 results\"\n    Pearson's Chi-squared test with Yates' continuity correction\n    data:  sample5\n    X-squared = 862.32, df = 1, p-value < 2.2e-16\n    ```"]