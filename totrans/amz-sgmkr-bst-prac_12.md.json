["```py\n### Create production variant\nfrom sagemaker.session import production_variant\nvariant1 = production_variant(model_name=model_name_1,\n                              instance_type=\"ml.m5.xlarge\",\n                              initial_instance_count=1,\n                              variant_name='VariantA',\n                              initial_weight=1)\n```", "```py\n### Create the endpoint with a production variants\nfrom sagemaker.session import Session\n#Variable for endpoint name\nendpoint_name=f\"abtest-{datetime.now():%Y-%m-%d-%H-%M-%S}\"\nsmsession = Session()\nsmsession.endpoint_from_production_variants(\n            name=endpoint_name,\n           production_variants=[variant1]\n)\n```", "```py\n#Create production variant 2\nvariant2 = production_variant(model_name=model_name_2,\n                              instance_type=\"ml.m5.xlarge\",\n                                   initial_instance_count=1,\n                                   variant_name='Variant2',\n                                   initial_weight=1)\n\n#Create a new endpoint configuration\nendpoint_config_new =f\"abtest-b-config-{datetime.now():%Y-%m-%d-%H-%M-%S}\"\n\nsmsession.create_endpoint_config_from_existing (\n            existing_config_name=endpoint_name,\n            new_config_name=endpoint_config_new,\n            new_production_variants=[variant2]\n)\n##Update the endpoint to point to the new endpoint configuration\nsmsession.update_endpoint(\n  endpoint_name=endpoint_name, endpoint_config_name=endpoint_config_new, wait=False)\n```", "```py\n#Create production variant A\nvariantA = production_variant(model_name=model_name_1,\n                                  instance_type=\"ml.m5.xlarge\",\n                                  initial_instance_count=1,\n                                    variant_name='VariantA',\n                                    initial_weight=1)\n```", "```py\n#Variable for endpoint name\nendpoint_name=f\"abtest-{datetime.now():%Y-%m-%d-%H-%M-%S}\"\n#Create an endpoint with a single production variant\nsmsession.endpoint_from_production_variants(\n            name=endpoint_name,\n            production_variants=[variantA]\n)\n```", "```py\n#Create production variant B\nvariantB = production_variant(model_name=model_name_2,\n                                  instance_type=\"ml.m5.xlarge\",\n                                  initial_instance_count=1,\n                                  variant_name='VariantB',\n                                  initial_weight=1)\n\n##Next update the endpoint to include both production variants\nendpoint_config_new =f\"abtest-new-config-{datetime.now():%Y-%m-%d-%H-%M-%S}\"\n\nsmsession.create_endpoint_config_from_existing (\n            existing_config_name=endpoint_name,\n            new_config_name=endpoint_config_new,\n            new_production_variants=[variantA,variantB]  ## Two production variants\n)\n\n##Update the endpoint\nsmsession.update_endpoint(endpoint_name=endpoint_name, endpoint_config_name=endpoint_config_new, wait=False)\n```", "```py\nresult = smrt.invoke_endpoint(EndpointName=endpoint_name,\n                                  ContentType=\"text/csv\",\n                                 Body=test_string)\nrbody = \\ StreamingBody(raw_stream=result['Body'],content_length=int(result['ResponseMetadata']['HTTPHeaders']['content-length']))\nprint(f\"Result from {result['InvokedProductionVariant']} = {rbody.read().decode('utf-8')}\")\n```", "```py\nResult from VariantA = 0.17167794704437256\nResult from VariantB = 0.14226064085960388\nResult from VariantA = 0.10094326734542847\nResult from VariantA = 0.17167794704437256\nResult from VariantB = 0.050961822271347046\nResult from VariantB = -0.2118145227432251\nResult from VariantB = 0.16735368967056274\nResult from VariantA = 0.17314249277114868\nResult from VariantB = 0.16769883036613464\nResult from VariantA = 0.17314249277114868\n```", "```py\n#Update the product variant weight to route 60% of traffic to VariantB\nsm.update_endpoint_weights_and_capacities(\n           EndpointName=endpoint_name,\n           DesiredWeightsAndCapacities=[\n          {\"DesiredWeight\": 4, \"VariantName\": variantA[\"VariantName\"]},\n          {\"DesiredWeight\": 6, \"VariantName\": variantB[\"VariantName\"]},\n          ],\n)\n```", "```py\n##Update the endpoint to point to VariantB\nendpoint_config_new =f\"abtest-b-config-{datetime.now():%Y-%m-%d-%H-%M-%S}\"\n\nsmsession.create_endpoint_config_from_existing (\n            existing_config_name=endpoint_name,\n            new_config_name=endpoint_config_new,\n            new_production_variants=[variantB]\n)\n##Update the endpoint\nsmsession.update_endpoint(endpoint_name=endpoint_name, endpoint_config_name=endpoint_config_new, wait=False)\n```"]