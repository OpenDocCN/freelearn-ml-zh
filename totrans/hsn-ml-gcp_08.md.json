["```py\nfirebase login --reauth\n```", "```py\nfirebase init\n```", "```py\nconst functions = require('firebase-functions');\nconst Translate = require('@google-cloud/translate');\nconst admin = require(\"firebase-admin\")\n\n//setting connection to db\nadmin.initializeApp();\n\nconst translate = new Translate({\n    projectId: 'mytranslator-c656d'\n});\n//Extract the most searched term\n\nexports.getMessageStats=functions.https.onRequest((req,res) =>\n {\n var output;\n var db = admin.database();\n var ref = db.ref(\"/translateMessageStats\");\n\n// Attach an asynchronous callback to read the data at our posts reference\n ref.orderByChild(\"count\").limitToLast(1).on(\"value\", function(snapshot) {\n\nconsole.log(snapshot.forEach(element => {\n output=element.key+\" : \"+element.val().count + 'times'\n }))\n res.header(\"Access-Control-Allow-Origin\", \"*\");\n return res.send(JSON.stringify(output));\n }, function (errorObject) {\n console.log(\"The read failed: \" + errorObject.code);\n });\n})\n\n// create a public API method of name \"translateMessage\"\n\nexports.translateMessage=functions.https.onRequest((req,res) =>\n {\n const input = req.query.text;\n\ntranslate.translate(input,'en').then(results =>\n {\n const output = results[0];\n console.log(output);\n\nconst db = admin.database();\nvar ref = db.ref(\"/translateMessageStats\");\n\n//update database\n var dataRef= ref.child(input);\n\ndataRef.once('value', function(snapshot) {\n if (snapshot.exists()) {\n dataRef.update({\"count\":snapshot.val().count+1});\n console.log(\"data exists\")\n }\n else\n {\n console.log(\"data does not exist\")\n dataRef.update({\"count\":1});\n }\n });\n\nres.header(\"Access-Control-Allow-Origin\", \"*\");\n return res.send(JSON.stringify(output));\n })\n});\n```", "```py\nconst functions = require('firebase-functions');\nconst Translate = require('@google-cloud/translate');\nconst admin = require(\"firebase-admin\")\n```", "```py\nadmin.initializeApp();\n```", "```py\nconst translate = new Translate({\n    projectId: 'mytranslator-c656d'\n});\n```", "```py\nexports.translateMessage=functions.https.onRequest((req,res) =>\n```", "```py\nconst input = req.query.text;\n```", "```py\ntranslate.translate(input,'en').then(results =>\n{\n    const output = results[0];\n```", "```py\nconst db = admin.database();\n var ref = db.ref(\"/translateMessageStats\");\n```", "```py\nvar dataRef= ref.child(input);\n```", "```py\ndataRef.once('value', function(snapshot) {\n    if (snapshot.exists()) {\n        dataRef.update({\"count\":snapshot.val().count+1});\n        console.log(\"data exists\")\n    }\n    else\n    {\n        console.log(\"data does not exist\")\n        dataRef.update({\"count\":1});\n    }\n  });\n```", "```py\n<html>\n  <script src=\"img/jquery.min.js\">  </script>\n  <script>\n\n    $(document).ready(\n      getMessageStats()\n    );\n<!-- The following code extracts the most searched term from the database that we create in the next function -->\n\n    function getMessageStats(){\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', \"https://us-central1-mytranslator-c656d.cloudfunctions.net/getMessageStats\", true);\n      xhr.send();\n\n      xhr.onreadystatechange = processRequest;\n\n      function processRequest(e) {\n        if (xhr.readyState == 4) {\n          var response = JSON.parse(xhr.responseText);\n          document.getElementById(\"mostSearched\").innerHTML=response;\n        }\n      }\n    }\n<!-- the following function translates the input value into english -->\n    function translateText()\n    {\n      var textInput= document.getElementById(\"input\").value;\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', \"https://us-central1-mytranslator-c656d.cloudfunctions.net/translateMessage?text=\"+textInput, true);\n      xhr.send();\n\n      xhr.onreadystatechange = processRequest;\n      function processRequest(e) {\n\n        if (xhr.readyState == 4) {\n          var response = JSON.parse(xhr.responseText);\n          document.getElementById(\"output\").innerHTML=response;\n          getMessageStats();\n        }\n      }\n    }\n  </script>\n<!-- the following code creates the layout of web application, with input text box and output-->\n  <body>\n    <label>Enter Input Text</label>\n    <input id=\"input\" type=\"text-area\"></input>\n    <button onclick=\"translateText()\" id=\"btnTrans\">Translate</button>\n    <label id=\"output\"></label>\n    <br/>\n    <div>\n      <h1>Most Searched element</h1>\n      <label id=\"mostSearched\"></label>\n    </div>\n  </body>\n</html>\n```", "```py\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n <android.support.constraint.ConstraintLayout \n\n     android:layout_width=\"match_parent\"\n     android:layout_height=\"match_parent\"\n     tools:context=\".MainActivity\">\n\n     <Button\n         android:id=\"@+id/button\"\n         android:layout_width=\"wrap_content\"\n         android:layout_height=\"wrap_content\"\n         android:layout_marginStart=\"148dp\"\n         android:layout_marginTop=\"56dp\"\n         android:text=\"Translate\"\n         app:layout_constraintStart_toStartOf=\"parent\"\n         app:layout_constraintTop_toBottomOf=\"@+id/input\" />\n\n     <EditText\n         android:id=\"@+id/input\"\n         android:layout_width=\"wrap_content\"\n         android:layout_height=\"wrap_content\"\n         android:layout_marginStart=\"84dp\"\n         android:layout_marginTop=\"84dp\"\n         android:ems=\"10\"\n         android:inputType=\"textPersonName\"\n         app:layout_constraintStart_toStartOf=\"parent\"\n         app:layout_constraintTop_toTopOf=\"parent\" />\n\n     <TextView\n         android:id=\"@+id/out\"\n         android:layout_width=\"197dp\"\n         android:layout_height=\"80dp\"\n         android:layout_marginStart=\"92dp\"\n         android:layout_marginTop=\"56dp\"\n         app:layout_constraintStart_toStartOf=\"parent\"\n         app:layout_constraintTop_toBottomOf=\"@+id/button\" />\n\n </android.support.constraint.ConstraintLayout>\n```", "```py\npackage com.example.admin.translateapp;\n\n import android.os.AsyncTask;\n import android.support.v7.app.AppCompatActivity;\n import android.os.Bundle;\n import android.view.View;\n import android.widget.Button;\n import android.widget.EditText;\n import android.widget.TextView;\n\n import java.io.BufferedReader;\n import java.io.IOException;\n import java.io.InputStreamReader;\n import java.net.HttpURLConnection;\n import java.net.URL;\n\n import javax.net.ssl.HttpsURLConnection;\n\n public class MainActivity extends AppCompatActivity {\n     public String myurl;\n     public String result;\n     public String response;\n     public EditText inp;\n     public TextView out;\n     public Button btn;\n\n     @Override\n     protected void onCreate(Bundle savedInstanceState) {\n         super.onCreate(savedInstanceState);\n         setContentView(R.layout.activity_main);\n         inp = (EditText) findViewById(R.id.input);\n         out = (TextView) findViewById(R.id.out);\n         btn = (Button) findViewById(R.id.button);\n         myurl = \"http://us-central1-mytranslator-c656d.cloudfunctions.net/translateMessage?text=\";\n\n         btn.setOnClickListener(new View.OnClickListener() {\n             public void onClick(View v) {\n                 RequestTask task = new RequestTask();\n                 task.execute(inp.getText().toString());\n             }\n         });\n     }\n\n     private class RequestTask extends AsyncTask<String, String, String> {\n\n         @Override\n         protected String doInBackground(String... uri) {\n             try {\n                 URL url = new URL(myurl+uri[0].toString());\n                 HttpURLConnection conn = (HttpURLConnection) url.openConnection();\n                 conn.setRequestMethod(\"GET\");\n                 conn.connect();\n                 if (conn.getResponseCode() == HttpURLConnection.HTTP_OK) {\n                     InputStreamReader streamReader = new\n                             InputStreamReader(conn.getInputStream());\n                     //Create a new buffered reader and String Builder\n                     BufferedReader reader = new BufferedReader(streamReader);\n                     StringBuilder stringBuilder = new StringBuilder();\n                     //Check if the line we are reading is not null\n                     String inputLine;\n                     while((inputLine = reader.readLine()) != null){\n                         stringBuilder.append(inputLine);\n                     }\n                     //Close our InputStream and Buffered reader\n                     reader.close();\n                     streamReader.close();\n                     //Set our result equal to our stringBuilder\n                     result = stringBuilder.toString();\n                     //result = conn.getResponseMessage();\n                 } else {\n                 }\n             } catch (IOException e) {\n                 //TODO Handle problems..\n             }\n             return result;\n         }\n\n         @Override\n         protected void onPostExecute(String result1) {\n             super.onPostExecute(result1);\n             out.setText(result1); }\n     }\n }\n```", "```py\nimport android.os.AsyncTask;\n import android.support.v7.app.AppCompatActivity;\n import android.os.Bundle;\n import android.view.View;\n import android.widget.Button;\n import android.widget.EditText;\n import android.widget.TextView;\n\n import java.io.BufferedReader;\n import java.io.IOException;\n import java.io.InputStreamReader;\n import java.net.HttpURLConnection;\n import java.net.URL;\n```", "```py\npublic String myurl;\n public String result;\n public String response;\n public EditText inp;\n public TextView out;\n public Button btn;\n```", "```py\ninp = (EditText) findViewById(R.id.*input*);\n out = (TextView) findViewById(R.id.*out*);\n btn = (Button) findViewById(R.id.*button*);\n```", "```py\nbtn.setOnClickListener(new View.OnClickListener() {\n     public void onClick(View v) {\n         RequestTask task = new RequestTask();\n         task.execute(inp.getText().toString());\n```", "```py\nURL url = new URL(myurl+uri[0].toString());\n HttpURLConnection conn = (HttpURLConnection) url.openConnection();\n conn.setRequestMethod(\"GET\");\n conn.connect();\n if (conn.getResponseCode() == HttpURLConnection.*HTTP_OK*) {\n     InputStreamReader streamReader = new\n             InputStreamReader(conn.getInputStream());\n     //Create a new buffered reader and String Builder\n     BufferedReader reader = new BufferedReader(streamReader);\n     StringBuilder stringBuilder = new StringBuilder();\n     //Check if the line we are reading is not null\n     String inputLine;\n     while((inputLine = reader.readLine()) != null){\n         stringBuilder.append(inputLine);\n     }\n     //Close our InputStream and Buffered reader\n     reader.close();\n     streamReader.close();\n     //Set our result equal to our stringBuilder\n     result = stringBuilder.toString();\n```"]