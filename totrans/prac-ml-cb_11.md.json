["```py\n > install.packages(\"rnn\")\n > library(rnn)\n\n```", "```py\n> set.seed(10)\n\n```", "```py\n> f <- 5\n\n```", "```py\n> w <- 2*pi*f\n\n```", "```py\n> t <- seq(0.005,2,by=0.005)\n\n```", "```py\n > x <- sin(t*w) + rnorm(200, 0, 0.25)\n > y <- cos(t*w)\n\n```", "```py\n > X <- matrix(x, nrow = 40)\n > Y <- matrix(y, nrow = 40)\n\n```", "```py\n> plot(as.vector(X), col='blue', type='l', ylab = \"x-matrix, y-matrix\", main = \"Noisy waves\")\n\n```", "```py\n> lines(as.vector(Y), col = \"red\")\n\n```", "```py\n> X <- (X - min(X)) / (max(X) - min(X))\n\n```", "```py\n> X\n\n```", "```py\n> X <- (X - min(X)) / (max(X) - min(X))\n\n```", "```py\n> X\n\n```", "```py\n > X <- t(X)\n > Y <- t(Y)\n\n```", "```py\n > train <- 1:8\n > test <- 9:10\n\n```", "```py\n> model <- trainr(Y = Y[train,],X = X[train,],learningrate = 0.05,hidden_dim = 16,numepochs = 1500)\n\n```", "```py\n> Y_predicted <- predictr(model, X)\n\n```", "```py\n> plot(as.vector(t(Y)), col = 'red', type = 'l', main = \"Actual values vs Predicted values\", ylab = \"Y, Y-predicted\")\n\n```", "```py\n> lines(as.vector(t(Y_predicted)), type = 'l', col = 'blue')\n\n```", "```py\n> plot(as.vector(t(Y[test,])), col = 'red', type='l', main = \"Actual vs predicted: testing set\", ylab = \"Y,Y-predicted\")\n\n```", "```py\n> lines(as.vector(t(Y_predicted[test,])), type = 'l', col = 'blue')\n\n```"]