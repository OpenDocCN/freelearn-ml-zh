- en: '*Chapter 4*: H2O Model Building at Scale – Capability Articulation'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: So far, we have learned the fundamental workflow of how to build H2O models
    at scale, but that was done using H2O at its barest minimum. In this chapter,
    we will survey the extremely broad capability set of H2O model building at scale.
    We will then use our knowledge from this chapter and move on to part two, *Building
    State-of-the-Art Models on Large Data Volumes Using H2O*, where we will get down
    to business and use advanced techniques to build and explain highly predictive
    models at scale.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
- en: 'To conduct this survey, we will break down the chapter into the following main
    topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: Articulating the H2O data capabilities during model building
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Overviewing the H2O machine learning algorithms
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Understanding the H2O modeling capabilities
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: H2O data capabilities during model building
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Recall that H2O model building at scale is performed by using H2O 3 or its
    extension, Sparkling Water, which wraps H2O 3 with Spark capabilities. The H2O
    3 API has extensive data capabilities used in the model building process, and
    the Sparkling Water API inherits these and adds additional capabilities from Spark.
    These capabilities are broken down into the following three broad categories:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
- en: '**Ingesting data** from the source to the H2O cluster'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Manipulating data** on the H2O cluster'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Exporting data** from the H2O cluster to an external destination'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: As emphasized in previous chapters, the H2O cluster architecture (H2O 3 or Sparkling
    Water) allows model building at an unlimited scale but is abstracted from the
    data scientist who builds models by coding H2O in the IDE.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
- en: 'H2O data capabilities are overviewed in the following diagram and elaborated
    subsequently:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B17065_04_01.jpg)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
- en: Figure 4.1 – The H2O data capabilities
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
- en: Let's start with data ingestion.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
- en: Ingesting data from the source to the H2O cluster
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The following data sources are supported:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
- en: '**Local file**'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Remote file**'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**AWS S3**'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**MinIO cloud storage**'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Azure Blob and Data Lake**'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Google Cloud Storage**'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**HDFS**'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**HDFS-like**: Alluxio FS and IBM HDFS'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Hive** (via Metastore/HDFS or JDBC)'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**JDBC**'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The supported file formats of source data are as follows:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
- en: '**CSV** (a file with any delimiter, auto-detected or specified)'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**GZipped CSV**'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**XLS** or **XLSX**'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**ORC**'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Parquet**'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Avro**'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**ARFF**'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**SVMLight**'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Some important characteristics of data ingestion to H2O are as follows:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
- en: Data is ingested directly from the source to the H2O cluster memory and does
    not pass through the IDE client.
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In all cases, data is partitioned in-memory across the H2O cluster.
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Except for the local file, the remote file, and JDBC sources, data is ingested
    in parallel to each partition.
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Data on the H2O cluster is represented to the user in the IDE as a two-dimensional
    **H2OFrame**.
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let's now see how we can manipulate data now that it is ingested into H2O and
    represented as an H2OFrame.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
- en: Manipulating data in the H2O cluster
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The H2O 3 API provides extensive data manipulation capabilities. As mentioned
    in the previous bullet list, datasets in memory are distributed on the H2O cluster
    and represented in the IDE specifically as an H2OFrame after data load and subsequent
    data manipulations.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
- en: H2OFrames have an extensive list of methods to perform mathematical, logical,
    and introspection operations at the value, column, row, and full dataset levels.
    An H2OFrame is similar in experience to the **pandas DataFrame** or **R data frame**.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
- en: 'The following examples are just a few data manipulations that can be done on
    H2Oframes:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
- en: 'Operations on **data columns**:'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Change the data type (for example, integers from 0 to 7 as categorical values).
  id: totrans-48
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Aggregate a column (group by) by applying mathematical functions.
  id: totrans-49
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Display column names and use as features in a model.
  id: totrans-50
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Operations on **data rows**:'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Combine rows from one or more datasets.
  id: totrans-52
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Slice out (filter) rows of a dataset by specifying the row index, the range
    of rows, or the logical condition.
  id: totrans-53
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Operations on **datasets**:'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Merge two datasets on common values of shared column names.
  id: totrans-55
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Transform a dataset by pivoting on a column.
  id: totrans-56
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Split a dataset into two or more datasets (for example, train, validate, and
    test).
  id: totrans-57
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Operations on **data values**:'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fill missing values forward or backward with adjacent row or column values.
  id: totrans-59
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Fill missing values by imputing with aggregate results (for example, the mean
    for the column).
  id: totrans-60
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Replace numerical values based on logical conditions.
  id: totrans-61
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Trim values, manipulate strings, return a numerical value sign, and test whether
    a value is N/A.
  id: totrans-62
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Feature engineering** operations:'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Date parsing, for example, parsing one date column into separate columns for
    year, month, day.
  id: totrans-64
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Derive a new column mathematically and conditionally from other columns, including
    the use of lambda expressions.
  id: totrans-65
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Perform target encoding (that is, replace a categorical value with the mean
    of the target variable).
  id: totrans-66
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: For **Natural Language Processing (NLP)** problems, perform **string tokenizing**,
    **Term Frequency-Inverse Document Frequency (TF-IDF)** calculations, and convert
    a **Word2vec** model into an H2OFrame for data manipulations.
  id: totrans-67
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: For full details of H2O data manipulation possibilities, see the H2O Python
    documentation ([http://docs.h2o.ai/h2o/latest-stable/h2o-py/docs/frame.html](http://docs.h2o.ai/h2o/latest-stable/h2o-py/docs/frame.html))
    or R documentation ([http://docs.h2o.ai/h2o/latest-stable/h2o-r/docs/reference/index.html](http://docs.h2o.ai/h2o/latest-stable/h2o-r/docs/reference/index.html)).
    Also, refer to the fourth section of *Machine Learning with Python and H2O* ([http://h2o-release.s3.amazonaws.com/h2o/rel-wheeler/2/docs-website/h2o-docs/booklets/PythonBooklet.pdf](http://h2o-release.s3.amazonaws.com/h2o/rel-wheeler/2/docs-website/h2o-docs/booklets/PythonBooklet.pdf))
    for examples of data manipulation.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
- en: Manipulating data is key for preparing it as an input for model building. We
    may also want to export our manipulated data for future use. The next section
    lists the H2O data export capabilities.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 操作数据是将其作为模型构建输入准备的关键。我们可能还希望导出我们的操作数据以供将来使用。下一节列出了H2O数据导出功能。
- en: Exporting data out of the H2O cluster
  id: totrans-70
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将数据从H2O集群导出
- en: 'H2OFrames in memory can be exported to external targets. These target systems
    are as follows:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 内存中的H2OFrames可以导出到外部目标。这些目标系统如下：
- en: '**Local client memory**'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**本地客户端内存**'
- en: '**Local filesystem**'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**本地文件系统**'
- en: '**AWS S3**'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**AWS S3**'
- en: '**MinIO cloud storage**'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**MinIO云存储**'
- en: '**Azure Blob and Data Lake**'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Azure Blob和Data Lake**'
- en: '**Google Cloud Storage**'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Google Cloud Storage**'
- en: '**HDFS**'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**HDFS**'
- en: '**HDFS-like**: Alluxio FS and IBM HDFS'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**类似HDFS的**：Alluxio FS和IBM HDFS'
- en: '**Hive tables** (CSV or Parquet, via JDBC)'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Hive表**（通过JDBC的CSV或Parquet）'
- en: The volume of exported data must, of course, be considered. Large volumes of
    data will not, for example, fit into a local client memory or filesystem.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，必须考虑导出数据的量。例如，大量数据将无法适应本地客户端内存或文件系统。
- en: Let's now see what additional data capabilities Sparkling Water adds.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们来看看Sparkling Water添加了哪些额外的数据功能。
- en: Additional data capabilities provided by Sparkling Water
  id: totrans-83
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Sparkling Water提供的附加数据功能
- en: 'Sparkling Water inherits all data capabilities from H2O 3\. Importantly, Sparkling
    Water adds additional data capabilities by leveraging the Spark DataFrame and
    Spark SQL APIs, and thus can import, manipulate, and export data accordingly.
    See the following reference for full Spark DataFrame and Spark SQL capabilities:
    [https://spark.apache.org/docs/latest/sql-programming-guide.html](https://spark.apache.org/docs/latest/sql-programming-guide.html).'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: Sparkling Water继承了H2O 3的所有数据功能。重要的是，Sparkling Water通过利用Spark DataFrame和Spark
    SQL API添加了额外的数据功能，因此可以相应地导入、操作和导出数据。有关完整的Spark DataFrame和Spark SQL功能的参考，请参阅以下链接：[https://spark.apache.org/docs/latest/sql-programming-guide.html](https://spark.apache.org/docs/latest/sql-programming-guide.html)。
- en: A key pattern in using Sparkling Water is to leverage Spark for advanced data
    munging capabilities, then convert the resulting Spark DataFrame to an H2Oframe,
    and then build state-of-the-art models using H2O's machine learning algorithms,
    as covered in the next section. These algorithms can be used in either H2O 3 or
    Sparkling Water.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Sparkling Water的一个关键模式是利用Spark的高级数据处理功能，然后将生成的Spark DataFrame转换为H2Oframe，然后使用H2O的机器学习算法构建最先进的模型，如下一节所述。这些算法可以在H2O
    3或Sparkling Water中使用。
- en: H2O machine learning algorithms
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: H2O机器学习算法
- en: 'H2O has extensive **unsupervised** and **supervised** learning algorithms with
    similar reusable API constructs – for example, similar ways to set hyperparameters
    or invoke explainability capabilities. These algorithms are identical from an
    H2O 3 or Sparkling Water perspective and are overviewed in the following diagram:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: H2O拥有广泛的**无监督**和**监督**学习算法，具有类似的可重用API结构 – 例如，设置超参数或调用可解释性功能的方式相似。从H2O 3或Sparkling
    Water的角度来看，这些算法是相同的，并在以下图中概述：
- en: '![](img/B17065_04_02.jpg)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B17065_04_02.jpg)'
- en: Figure 4.2 – H2O algorithms
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.2 – H2O算法
- en: Each algorithm has an extensive set of parameters and hyperparameters to set
    or leverage as defaults. The algorithms accept H2OFrames as data inputs. Remember
    that an H2OFrame is simply a handle on the IDE client to the distributed in-memory
    data on the remote H2O cluster where the algorithm processes it.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 每个算法都有广泛的参数和超参数可以设置或利用作为默认值。算法接受H2OFrames作为数据输入。请记住，H2OFrame只是IDE客户端对远程H2O集群中分布式内存数据的引用，其中算法对其进行处理。
- en: Let's take a look at H2O's distributed machine learning algorithms.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看H2O的分布式机器学习算法。
- en: H2O unsupervised learning algorithms
  id: totrans-92
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: H2O无监督学习算法
- en: 'Unsupervised algorithms do not predict but rather attempt to find clusters
    and anomalies in data, or to reduce the dimensionality of a dataset. H2O has the
    following unsupervised learning algorithms to run at scale:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 无监督算法不进行预测，而是试图在数据中找到簇和异常，或者减少数据集的维度。H2O有以下无监督学习算法，可以在大规模上运行：
- en: '**Aggregator**'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**聚合器**'
- en: '**Generalized Low Rank Models (GLRM)**'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**广义低秩模型 (GLRM**)'
- en: '**Isolation Forest**'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**隔离森林**'
- en: '**Extended Isolation Forest**'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**扩展隔离森林**'
- en: '**K-Means Clustering**'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**K-Means聚类**'
- en: '**Principal Component Analysis (PCA)**'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**主成分分析 (PCA**)'
- en: H2O supervised learning algorithms
  id: totrans-100
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: H2O监督学习算法
- en: 'Supervised learning algorithms predict outcomes by learning from a training
    dataset labeled with those outcomes. H2O has the following supervised learning
    algorithms to run at scale:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
- en: '**Cox Proportional Hazards (CoxPH)**'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Deep Learning (Artificial Neural Network, or ANN)**'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Distributed Random Forest (DRF)**'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Generalized Linear Model (GLM)**'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Maximum R Square Improvements (MAXR)**'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Generalized Additive Models (GAM)**'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**ANOVA GLM**'
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Gradient Boosting Machine (GBM)**'
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Naïve Bayes Classifier**'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**RuleFit**'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Support Vector Machine (SVM)**'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**XGBoost**'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Parameters and hyperparameters
  id: totrans-114
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Each algorithm has a deep set of parameters and hyperparameters for configuration
    and tuning. Specifying most parameters is optional; if not specified, the default
    will be used. Parameters include the specification of cross-validation parameters,
    learning rates, tree depths, weights columns, ignored columns, early stopping
    parameters, the distribution of response column (for example, Bernoulli), categorical
    encoding schemes, and many other specifications.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
- en: You can dive deeper into H2O's algorithms and their parameters in H2O's documentation
    at [http://docs.h2o.ai/h2o/latest-stable/h2o-docs/data-science.html#algorithms](http://docs.h2o.ai/h2o/latest-stable/h2o-docs/data-science.html#algorithms).
    The H2O website also lists tutorials and booklets for its algorithms at [http://docs.h2o.ai/#h2o](http://docs.h2o.ai/#h2o).
    A full list of algorithm parameters, each with a description, status as a hyperparameter
    or not, and mapping to algorithms that use the parameter, are found in H2O's documentation
    [*Appendix*](B16721_Appendix_Final_SK_ePub.xhtml#_idTextAnchor268) at [http://docs.h2o.ai/h2o/latest-stable/h2o-docs/parameters.html](http://docs.h2o.ai/h2o/latest-stable/h2o-docs/parameters.html).
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
- en: H2O extensions of supervised learning
  id: totrans-117
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: H2O extends its supervised learning algorithms by providing **Automatic Machine
    Learning (AutoML)** and **Stacked Ensemble** capabilities. We will take a closer
    look` at these in the next section, where we will place H2O algorithms in the
    larger context of model capabilities.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
- en: Miscellaneous
  id: totrans-119
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: H2O provides utilities to enhance work with its algorithms. **Target encoding**
    helps you handle categorical values and has many configurable parameters to make
    this easy. **TF-IDF** and **Word2vec** are commonly used in NLP problems, and
    they also are nicely configurable. Finally, **permutation variable importance**
    is a method to help understand how strongly your features contribute to the model
    and can help in evaluating which features to use in your final training dataset.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
- en: H2O modeling capabilities
  id: totrans-121
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'H2O''s supervised learning algorithms are used to train models on training
    data, tune them on validation data, and score or predict with them on test or
    live production data. H2O has extensive capabilities to train, evaluate, explain,
    score, and inspect models. These are summarized in the following diagram:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.3 – The H2O supervised learning capabilities'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B17065_04_03.jpg)'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/B17065_04_03.jpg)'
- en: Figure 4.3 – The H2O supervised learning capabilities
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.3 – H2O监督学习能力
- en: Let's take a closer look at the model training capabilities.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们更详细地看看模型训练的能力。
- en: H2O model training capabilities
  id: totrans-127
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: H2O模型训练能力
- en: 'Algorithms are at the heart of model training, but there are a larger set of
    capabilities to consider beyond the algorithms themselves. H2O provides the following
    model training capabilities:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 算法是模型训练的核心，但除了算法本身之外，还有更广泛的考虑能力。H2O提供了以下模型训练能力：
- en: '**AutoML**: An easy-to-use interface and parameter set that automates the process
    of training and tuning many different models, using multiple algorithms, to create
    a large number of models in a short amount of time.'
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**AutoML**：一个易于使用的界面和参数集，可以自动化训练和调整许多不同模型的过程，使用多个算法在短时间内创建大量模型。'
- en: '**Cross-validation**: K-fold validation is used to generate performance metrics
    against folds of the validation split, and parameters such as the number of folds
    can be specified in the algorithm''s training parameters.'
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**交叉验证**：使用K折验证来生成针对验证分割的折叠的性能指标，可以在算法的训练参数中指定折数等参数。'
- en: '**Checkpointing**: A new model is built as a continuation from a previously
    trained, checkpointed model as opposed to building the model from scratch; this
    is useful, for example, in retraining a model with new data.'
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**检查点**：新模型作为之前训练的、已检查点的模型的延续来构建，而不是从头开始构建模型；这在用新数据重新训练模型时非常有用。'
- en: '**Early stopping**: The parameters to define when an algorithm stops model
    building early, determined by which of many stopping metrics is specified.'
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**提前停止**：定义算法何时停止模型构建的参数，取决于指定的许多停止指标中的哪一个。'
- en: '**Grid search**: Build models for each combination of a range of hyperparameters
    that are specified and sort the resulting models by a performance metric.'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**网格搜索**：为指定的超参数范围的每个组合构建模型，并按性能指标对结果模型进行排序。'
- en: '**Regularization**: Most algorithms have parameter settings to specify regularization
    techniques to prevent overfitting and increase explainability.'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**正则化**：大多数算法都有参数设置，可以指定正则化技术以防止过拟合并提高可解释性。'
- en: '**Segmented training**: Training data is partitioned into segments based on
    the same column values, and a separate model is built for each segment.'
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分段训练**：训练数据根据相同的列值分成段，并为每个段构建一个单独的模型。'
- en: '**Stacked ensembles**: Combines the results of multiple base models that use
    the same or different algorithms into a better-performing single model.'
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**堆叠集成**：将使用相同或不同算法的多个基础模型的输出组合成一个性能更好的单一模型。'
- en: After training a model, we want to evaluate it to determine whether its predictive
    performance meets our needs. Let's see what H2O offers in this regard.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 在训练好一个模型后，我们希望评估它，以确定其预测性能是否符合我们的需求。让我们看看H2O在这方面提供了什么。
- en: H2O model evaluation capabilities
  id: totrans-138
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: H2O模型评估能力
- en: 'H2O exposes many model attributes to evaluate model performance. These are
    summarized as follows:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: H2O公开了许多模型属性以评估模型性能。以下是对这些属性的总结：
- en: 'The **leaderboard for AutoML**: The AutoML model results ranked by configured
    performance metrics or other attributes, such as average prediction speed, with
    additional metrics shown.'
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**AutoML的排行榜**：根据配置的性能指标或其他属性（如平均预测速度）对AutoML模型结果进行排名，并显示其他指标。'
- en: '**Performance metrics for classification problems**: For classification problems,
    H2O calculates **GINI coefficient**, **Absolute Matthew Correlation Coefficient
    (MCC)**, **F1,** **F0.5**, **F2**, **Accuracy**, **Logloss**, **Area Under the
    ROC Curve (AUC)**, **Area Under the Precision-Recall Curve (AUCPR)**, and **Kolmogorov-Smirnov
    (KS)** metrics.'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分类问题的性能指标**：对于分类问题，H2O计算**基尼系数**、**绝对马修相关系数（MCC）**、**F1**、**F0.5**、**F2**、**准确率**、**对数损失**、**ROC曲线下面积（AUC）**、**精确率-召回率曲线下面积（AUCPR）**和**科尔莫哥洛夫-斯米尔诺夫（KS）**指标。'
- en: '**Performance metrics for regression problems**: For regression problems, H2O
    calculates **R Squared (R²)**, **Mean Squared Error (MSE)**, **Root Mean Squared
    Error (RMSE)**, **Root Mean Squared Logarithmic Error (RMSLE)**, and **Mean Absolute
    Error (MAE)** metrics.'
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**回归问题的性能指标**：对于回归问题，H2O计算**R平方（R²）**、**均方误差（MSE）**、**均方根误差（RMSE）**、**均方根对数误差（RMSLE）**和**平均绝对误差（MAE）**指标。'
- en: '**Prediction metrics**: After a model is built, H2O allows you to predict a
    leaf node assignment (tree-based models), feature contributions, class probabilities
    for each stage (GBM models), and feature frequencies on a prediction path (GBM
    and DRF).'
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**预测指标**：在构建模型后，H2O允许你预测叶节点分配（基于树的模型）、特征贡献、每个阶段的类别概率（GBM模型），以及预测路径上的特征频率（GBM和DRF）。'
- en: '**Learning curve plot**: This shows a model performance metric as learning
    progresses to help diagnose overfitting or underfitting.'
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**学习曲线图**：这显示了随着学习的进展，模型性能指标的变化，有助于诊断过拟合或欠拟合。'
- en: Let's now explore ways to explain H2O models.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们来探讨解释H2O模型的方法。
- en: H2O model explainability capabilities
  id: totrans-146
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: H2O模型可解释性能力
- en: H2O presents a simple and uniform interface to explain either single models
    or multiple models, which can be a list of separately built models or a reference
    to those generated from AutoML. On top of that, H2O allows you to generate global
    (that is, model-level) and local (row- or individual-level) explanations. H2O's
    explainability capabilities are configurable to your specifications. Output is
    tabular, graphical, or both, depending on the explanation.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: H2O提供了一个简单且统一的接口来解释单个模型或多个模型，这可以是单独构建的模型列表或是对AutoML生成的那些模型的引用。在此基础上，H2O允许你生成全局（即模型级别）和局部（行或个体级别）的解释。H2O的可解释性能力可以根据您的规格进行配置。输出可以是表格、图形或两者兼而有之，具体取决于解释。
- en: 'We will dedicate all of *Chapter 6*, *Advanced Model Building – Part II*, to
    explore this important topic in greater detail, but for now, here is a quick list
    of capabilities:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在*第6章*，*高级模型构建 – 第II部分*中，将所有内容都用于更详细地探讨这个重要主题，但就目前而言，这里是一个快速的功能列表：
- en: '**Residual analysis for regression**'
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**回归的残差分析**'
- en: '**Confusion matrix for classification**'
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分类混淆矩阵**'
- en: '**Variable importance table and heatmap**'
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**变量重要性表和热图**'
- en: '**Model correlation heatmap**'
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**模型相关性热图**'
- en: '**Shapley values**'
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Shapley值**'
- en: '**Partial Dependency Plots (PDPs)**'
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**部分依赖图（PDPs**）'
- en: '**Individual Conditional Expectation (ICE)**'
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**个体条件期望（ICE**）'
- en: Let's now complete our survey of H2O's capabilities for modeling at scale by
    seeing what we can do once our model is trained, evaluated, and explained.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们通过查看模型训练、评估和解释后我们能做什么，来完成对H2O大规模建模能力的调查。
- en: H2O trained model artifacts
  id: totrans-157
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: H2O训练模型工件
- en: 'Once a model is trained, it can be exported and saved as a scoring artifact.
    The larger topic of deploying your artifact for production scoring will be treated
    in *Part 3: Deploying Your Model to Production Environments*. Here are the fundamental
    capabilities of the exported scoring artifact:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦模型训练完成，就可以将其导出并保存为评分工件。关于将工件部署到生产评分环境的大主题将在*第3部分：将模型部署到生产环境*中讨论。以下是导出评分工件的基本功能：
- en: '**Predicting with a MOJO**: Models can be saved as self-contained binary Java
    objects called MOJOs that can be flexibly implemented as low-latency production
    scoring artifacts on diverse systems (for example, a REST server, batch database
    scoring, and Hive UDFs). MOJOs also can be reimported into H2O clusters for purposes
    described in the next bullet point.'
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**使用MOJO进行预测**：模型可以保存为自包含的二进制Java对象，称为MOJO，可以在不同的系统上灵活实现为低延迟的生产评分工件（例如，REST服务器、批量数据库评分和Hive
    UDFs）。MOJO还可以重新导入到H2O集群中，用于下一项所述的目的。'
- en: '**Inspecting the model with a MOJO**: An exported MOJO can be re-imported into
    the H2O cluster and used to score against a dataset, inspect hyperparameters used
    to train the original model, see the scoring history, and show feature importances.'
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**使用MOJO检查模型**：导出的MOJO可以重新导入到H2O集群中，并用于对数据集进行评分，检查用于训练原始模型的超参数，查看评分历史，并显示特征重要性。'
- en: '**A MOJO compared to a POJO**: The POJO is the precursor to the MOJO and is
    being deprecated by H2O but is still required for some algorithms.'
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**MOJO与POJO的比较**：POJO是MOJO的前身，正在被H2O弃用，但对于某些算法仍然是必需的。'
- en: Summary
  id: totrans-162
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we conducted a wide survey of H2O capabilities for model building
    at scale. We learned about the data sources we can ingest into our H2O clusters
    and the file formats that are supported. We learned how this data moves from the
    source to the H2O cluster, and how the H2OFrame API provides a single handle in
    the IDE to represent the distributed in-memory data on the H2O cluster as a single
    two-dimensional data structure. We then learned the many ways in which we can
    manipulate data through the H2OFrame API and how to export it to external systems
    if need be.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们对H2O在规模构建模型方面的能力进行了广泛调查。我们了解了我们可以摄入到H2O集群中的数据源和受支持的文件格式。我们学习了这些数据如何从源头移动到H2O集群，以及H2OFrame
    API如何提供一个IDE中的单一处理程序来表示H2O集群上的分布式内存数据作为一个单一的两维数据结构。然后，我们学习了我们可以通过H2OFrame API进行数据操作的各种方式，以及如果需要的话，如何将其导出到外部系统。
- en: We then surveyed the core of H2O model building at scale – H2O's many state-of-the-art
    distributed unsupervised and supervised learning algorithms. Then, we put those
    into context by surveying model capabilities around them, from training, evaluating,
    and explaining the models, to using model artifacts to retrain, score and inspect
    models.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们调查了大规模H2O模型构建的核心——H2O的许多最先进的分布式无监督和监督学习算法。接着，我们通过调查围绕这些算法的模型能力，从训练、评估和解释模型，到使用模型工件重新训练、评分和检查模型，来将这些算法置于上下文中。
- en: With this map of the landscape firmly in hand, we can now roll up our sleeves
    and start building state-of-the-art H2O models at scale. In the next chapter,
    we will start by implementing the advanced model building topics one by one, before
    later putting it all together in a fully developed use case.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 拿着这幅景观图，我们现在可以卷起袖子，开始大规模构建最先进的H2O模型。在下一章中，我们将逐一实现高级模型构建主题，然后再在完全开发的使用案例中将它们全部整合。
