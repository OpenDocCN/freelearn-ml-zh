["```py\n    {\n    ```", "```py\n        \"Version\": \"2012-10-17\",\n    ```", "```py\n        \"Statement\": [\n    ```", "```py\n            {\n    ```", "```py\n                \"Effect\": \"Allow\",\n    ```", "```py\n                \"Action\": [\n    ```", "```py\n                    \"s3:ListBucket\",\n    ```", "```py\n                    \"s3:GetBucketLocation\"\n    ```", "```py\n                ],\n    ```", "```py\n                \"Resource\": [\n    ```", "```py\n                    \"arn:aws:s3:::<staging-bucket-name>\"\n    ```", "```py\n                ]\n    ```", "```py\n            },\n    ```", "```py\n            {\n    ```", "```py\n                \"Effect\": \"Allow\",\n    ```", "```py\n                \"Action\": [\n    ```", "```py\n                    \"s3:PutObject\",\n    ```", "```py\n                    \"s3:GetObject\",\n    ```", "```py\n                    \"s3:DeleteObject\"\n    ```", "```py\n                ],\n    ```", "```py\n                \"Resource\": [\n    ```", "```py\n                    \"arn:aws:s3:::<staging-bucket-name>[/<optional-prefix>]/${aws:userid}/*\"\n    ```", "```py\n                ]\n    ```", "```py\n            }\n    ```", "```py\n        ]\n    ```", "```py\n    }\n    ```", "```py\nCREATE TABLE chapter2.supplier (\n    s_suppkey integer NOT NULL ENCODE raw distkey,\n    s_name character(25) NOT NULL ENCODE lzo,\n    s_address character varying(40) NOT NULL ENCODE lzo,\n    s_nationkey integer NOT NULL ENCODE az64,\n    s_phone character(15) NOT NULL ENCODE lzo,\n    s_acctbal numeric(12, 2) NOT NULL ENCODE az64,\n    s_comment character varying(101) NOT NULL ENCODE lzo,\n    PRIMARY KEY (s_suppkey)\n) DISTSTYLE KEY\nSORTKEY (s_suppkey);\n```", "```py\nselect * from chapter2.supplier;\n```", "```py\nCOPY table-name\n[ column-list ]\nFROM data_source\nauthorization\n[ [ FORMAT ] [ AS ] data_format ]\n[ parameter [ argument ] [, ... ] ]\n```", "```py\n    -- Create lineitem table\n    ```", "```py\n    CREATE TABLE chapter2.lineitem\n    ```", "```py\n    (l_orderkey     bigint,\n    ```", "```py\n    l_partkey       bigint,\n    ```", "```py\n    l_suppkey       integer,\n    ```", "```py\n    l_linenumber    integer,\n    ```", "```py\n    l_quantity      numeric(12,2),\n    ```", "```py\n    l_extendedprice numeric(12,2),\n    ```", "```py\n    l_discount      numeric(12,2),\n    ```", "```py\n    l_tax           numeric(12,2),\n    ```", "```py\n    l_returnflag    character(1),\n    ```", "```py\n    l_linestatus    character(1),\n    ```", "```py\n    l_shipdate      date,\n    ```", "```py\n    l_commitdate    date,\n    ```", "```py\n    l_receiptdate   date,\n    ```", "```py\n    l_shipinstruct  character(25),\n    ```", "```py\n    l_shipmode      character(10),\n    ```", "```py\n    l_comment       varchar(44))\n    ```", "```py\n    distkey(l_orderkey) compound sortkey(l_orderkey,l_shipdate);\n    ```", "```py\n    COPY chapter2.lineitem\n    ```", "```py\n    FROM 's3://packt-serverless-ml-redshift/chapter02/lineitem.parquet'\n    ```", "```py\n    IAM_ROLE default\n    ```", "```py\n    FORMAT AS PARQUET;\n    ```", "```py\nCOPY <table-name>\nFROM 's3://<s3-object-path>'\n[COPY PARAMETERS...]\nJOB CREATE <job-name> [AUTO ON | OFF];\n```", "```py\nCOPY JOB RUN job-name\n```", "```py\n    copy <table_name> from 's3://<bucket_name>/<manifest_file>'\n    ```", "```py\n    authorization\n    ```", "```py\n    manifest;\n    ```", "```py\naws redshift-data execute-statement\n--WorkgroupName redshift-workgroup-name\n--database dev\n--sql 'select * from redshift_table';\n```", "```py\nredshift-serverless:GetCredentials\n```", "```py\npip install boto3==1.26.35\n```", "```py\n        import boto3\n        ```", "```py\n        import time\n        ```", "```py\n        import pandas as pd\n        ```", "```py\n        import numpy as np\n        ```", "```py\n        session = boto3.session.Session()\n        ```", "```py\n        region = session.region_name\n        ```", "```py\n        REDSHIFT_WORKGROUP = '<workgroup name>'\n        ```", "```py\n        S3_DATA_FILE='s3://packt-serverless-ml-redshift/chapter2/orders.parquet'\n        ```", "```py\n    table_ddl = \"\"\"\n    ```", "```py\n    DROP TABLE IF EXISTS chapter2.orders CASCADE;\n    ```", "```py\n    CREATE TABLE chapter2.orders\n    ```", "```py\n    (o_orderkey     bigint NOT NULL,\n    ```", "```py\n    o_custkey       bigint NOT NULL encode az64,\n    ```", "```py\n    o_orderstatus   character(1) NOT NULL encode lzo,\n    ```", "```py\n    o_totalprice    numeric(12,2) NOT NULL encode az64,\n    ```", "```py\n    o_orderdate     date NOT NULL,\n    ```", "```py\n    o_orderpriority character(15) NOT NULL encode lzo,\n    ```", "```py\n    o_clerk         character(15) NOT NULL encode lzo,\n    ```", "```py\n    o_shippriority  integer NOT NULL encode az64,\n    ```", "```py\n    o_comment       character varying(79) NOT NULL encode lzo\n    ```", "```py\n    )\n    ```", "```py\n    distkey(o_orderkey) compound sortkey(o_orderkey,o_orderdate);\"\"\"\n    ```", "```py\n    client = boto3.client(\"redshift-data\")\n    ```", "```py\n    client = boto3.client(\"redshift-data\")\n    ```", "```py\n    res = client.execute_statement(Database='dev', Sql=table_ddl,                                   WorkgroupName=REDSHIFT_WORKGROUP)\n    ```", "```py\n    query_id = res[\"Id\"]\n    ```", "```py\n    print(query_id)\n    ```", "```py\n    load_data = f\"\"\"COPY chapter2.orders\n    ```", "```py\n    FROM '{S3_DATA_FILE}'\n    ```", "```py\n    IAM_ROLE default\n    ```", "```py\n    FORMAT AS PARQUET;\"\"\"\n    ```", "```py\n    res = client.execute_statement(Database='dev', Sql=load_data,\n    ```", "```py\n                                  WorkgroupName=REDSHIFT WORKGROUP)\n    ```", "```py\n    query_id = res[\"Id\"]\n    ```", "```py\n    print(query_id)\n    ```", "```py\n    cnt = client.execute_statement(Database='dev', Sql='Select count(1) from chapter2.orders ;', WorkgroupName=REDSHIFT_WORKGROUP)\n    ```", "```py\n    query_id = cnt[\"Id\"]\n    ```"]