["```py\n    CREATE TABLE\n      `bigqueryml-packt.03_bigquery_syntax.first_table` \n      ( id_key INT64,\n        description STRING);\n    ```", "```py\n    INSERT INTO\n      `bigqueryml-packt.03_bigquery_syntax.first_table` VALUES\n      ( 1,\n        'This is my first record inserted in BigQuery' );\n    ```", "```py\nSELECT\n  *\nFROM\n  `bigqueryml-packt.03_bigquery_syntax.first_table`\nWHERE\n  id_key=1;\n```", "```py\n    SELECT COUNT(*) FROM (\n        SELECT\n          *\n        FROM\n          `bigqueryml-packt.03_bigquery_syntax.first_table`\n        WHERE\n          id_key=1\n      );\n    ```", "```py\n    WITH records_with_clause AS (SELECT *\n        FROM\n          `bigqueryml-packt.03_bigquery_syntax.first_table`\n        WHERE\n          id_key=1)\n\n    SELECT COUNT(*) FROM records_with_clause;\n    ```", "```py\nUPDATE\n    `bigqueryml-packt.03_bigquery_syntax.first_table`\nSET\n    description= 'This is my updated description'\nWHERE \n    id_key=1;\n```", "```py\n    DELETE\n        `bigqueryml-packt.03_bigquery_syntax.first_table`\n    WHERE \n        id_key=1;\n    ```", "```py\n    TRUNCATE TABLE \n      `bigqueryml-packt.03_bigquery_syntax.first_table`;\n    ```", "```py\n    DROP TABLE \n      `bigqueryml-packt.03_bigquery_syntax.first_table`;\n    ```", "```py\n    DROP VIEW \n      `bigqueryml-packt.03_bigquery_syntax.first_view`;\n    ```", "```py\nCREATE MODEL`<project_name>.<dataset_name>.<ml_model_name>`\nTRANSFORM (<list_of_features_transformed>\nOPTIONS(<list_of_options>)\nAS <select_statement>;\n```", "```py\nSELECT *\nFROM ML.EVALUATE(\n    MODEL `<project_name>.<dataset_name>.<ml_model_name>`,\n          `<project_name>.<dataset_name>.<evaluation_table>`\n    , STRUCT(<threshold> AS threshold));\n```", "```py\nSELECT *\nFROM ML.CONFUSION_MATRIX(\n    MODEL `<project_name>.<dataset_name>.<ml_model_name>`,\n          `<project_name>.<dataset_name>.<evaluation_table>`\n    , STRUCT(<treshold> AS threshold));\n```", "```py\nSELECT *\nFROM ML.ROC_CURVE(\n    MODEL `<project_name>.<dataset_name>.<ml_model_name>`,\n          `<project_name>.<dataset_name>.<evaluation_table>`\n    , GENERATE_ARRAY(<treshold_1>, <treshold_2>, <treshold_n> ));\n```", "```py\nSELECT *\nFROM ML.PREDICT(\n    MODEL `<project_name>.<dataset_name>.<ml_model_name>`,\n          `<project_name>.<dataset_name>.<features_table>`\n    , STRUCT(<treshold> AS threshold));\n```", "```py\nSELECT *\nFROM ML.FORECAST(\n    MODEL `<project_name>.<dataset_name>.<ml_model_name>`,\n    STRUCT(<horizon_value> AS horizon, \n           <confidence_value> AS confidence_level));\n```", "```py\nSELECT *\nFROM ML.RECOMMEND(\n     MODEL `<project_name>.<dataset_name>.<ml_model_name>`,\n          (`<project_name>.<dataset_name>.<user_item_table>`));\n```", "```py\nDROP MODEL `<project_name>.<dataset_name>.<ml_model_name>`;\n```", "```py\nDROP MODEL IF EXISTS\n`<project_name>.<dataset_name>.<ml_model_name>`;\n```"]