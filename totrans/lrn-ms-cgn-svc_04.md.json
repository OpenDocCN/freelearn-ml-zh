["```py\n    public class LuisUtteranceResultEventArgs : EventArgs {\n        public string Status { get; set; }\n        public string Message { get; set; }\n        public bool RequiresReply { get; set; }\n    }\n```", "```py\n    public event EventHandler<LuisUtteranceResultEventArgs> OnLuisUtteranceResultUpdated;\n\n    private LuisClient _luisClient;\n```", "```py\n    public Luis(LuisClientluisClient) {\n        _luisClient = luisClient;\n    }\n```", "```py\nprivate void RaiseOnLuisUtteranceResultUpdated( LuisUtteranceResultEventArgsargs)\n{\n    OnLuisUtteranceResultUpdated?.Invoke(this, args);\n}\n```", "```py\n    public async Task RequestAsync(string input) {\n        try {\n            LuisResult result = await _luisClient.Predict(input);\n```", "```py\n            ProcessResult(result);\n        }\n        catch(Exception ex) {\n            RaiseOnLuisUtteranceResultUpdated(new LuisUtteranceResultEventArgs\n            {\n                Status = \"Failed\",\n                Message = ex.Message\n            });\n        }\n    }\n```", "```py\n    private void ProcessResult(LuisResult result) {\n        LuisUtteranceResultEventArgsargs = new LuisUtteranceResultEventArgs();\n\n        args.Result = result;\n        args.Status = \"Succeeded\";\n        args.Message = $\"Top intent is {result.TopScoringIntent.Name} with score {result.TopScoringIntent.Score}. Found {result.Entities.Count} entities.\";\n\n        RaiseOnLuisUtteranceResultUpdated(args);\n    }\n```", "```py\n    private Luis _luis;\n```", "```py\n    public LuisViewModel() {\n        _luis = new Luis(new LuisClient(\"APP_ID_HERE\", \"API_KEY_HERE\"));\n```", "```py\n    _luis.OnLuisUtteranceResultUpdated += OnLuisUtteranceResultUpdated;\n    ExecuteUtteranceCommand = new DelegateCommand(ExecuteUtterance, CanExecuteUtterance);\n}\n```", "```py\n    private async void ExecuteUtterance(object obj) {\n        await _luis.RequestAsync(InputText);\n    }\n```", "```py\nprivate void OnLuisUtteranceResultUpdated(object sender, LuisUtteranceResultEventArgs e) {\n    Application.Current.Dispatcher.Invoke(() => {\n        StringBuilder sb = new StringBuilder();\n```", "```py\n    sb.AppendFormat(\"Status: {0}\\n\", e.Status);\n    sb.AppendFormat(\"Summary: {0}\\n\\n\", e.Message);\n\n    if(e.Result.Entities != null&&e.Result.Entities.Count != 0) {\n        sb.AppendFormat(\"Entities found: {0}\\n\", e.Result.Entities.Count);\n        sb.Append(\"Entities:\\n\");\n```", "```py\n        foreach(var entities in e.Result.Entities) {\n            foreach(var entity in entities.Value) {\n                sb.AppendFormat(\"Name: {0}\\tValue: {1}\\n\",\n                                 entity.Name, entity.Value);\n            }\n        }\n        sb.Append(\"\\n\");\n    }\n```", "```py\n            ResultText = sb.ToString();\n        });\n    }\n```"]