["```py\n    Create schema chapter6_supervisedclassification;\n    ```", "```py\n    CREATE TABLE chapter6_supervisedclassification.bank_details_training(\n    ```", "```py\n       age numeric, \"job\" varchar marital varchar, education varchar,\n    ```", "```py\n       \"default\" varchar, housing varchar, loan varchar,\n    ```", "```py\n       contact varchar, month varchar, day_of_week varchar,\n    ```", "```py\n       …,\n    ```", "```py\n       y boolean ) ;\n    ```", "```py\n    --create table to store data for running predictions\n    ```", "```py\n    CREATE TABLE chapter6_supervisedclassification.bank_details_inference(\n    ```", "```py\n       age numeric, \"job\" varchar marital varchar, education varchar,\n    ```", "```py\n       \"default\" varchar, housing varchar, loan varchar,\n    ```", "```py\n       contact varchar, month varchar, day_of_week varchar,\n    ```", "```py\n       …,\n    ```", "```py\n       y boolean ) ;\n    ```", "```py\n    --load data into  bank_details_inference\n    ```", "```py\n    TRUNCATE chapter6_supervisedclassification.bank_details_inference;\n    ```", "```py\n     COPY chapter6_supervisedclassification.bank_details_inference from 's3://packt-serverless-ml-redshift/chapter06/bank-marketing-data/inference-data/inference.csv' REGION 'eu-west-1' IAM_ROLE default CSV IGNOREHEADER 1 delimiter ';';\n    ```", "```py\n    -- load data into bank_details_training\n    ```", "```py\n    TRUNCATE chapter6_supervisedclassification.bank_details_training;\n    ```", "```py\n     COPY chapter6_supervisedclassification.bank_details_training from 's3://packt-serverless-ml-redshift/chapter06/bank-marketing-data/training-data/training.csv' REGION 'eu-west-1' IAM_ROLE default CSV IGNOREHEADER 1 delimiter ';';\n    ```", "```py\n    SELECT y, COUNT(*) Customer_Count FROM chapter6_supervisedclassification.bank_details_training\n    ```", "```py\n    GROUP BY y\n    ```", "```py\n    ;\n    ```", "```py\nDROP MODEL chapter6_supervisedclassification.banking_termdeposit;\nCREATE  MODEL chapter6_supervisedclassification.banking_termdeposit\nFROM (\nSELECT\n   age ,\n   \"job\" ,\n   marital ,\n   education ,\n   \"default\" ,\n   housing ,\n   loan ,\n   contact ,\n   month ,\n   day_of_week ,\n   duration,\n   campaign ,\n   pdays ,\n   previous ,\n   poutcome ,\n   emp_var_rate ,\n   cons_price_idx ,\n   cons_conf_idx ,\n   euribor3m ,\n   nr_employed ,\n   y\nFROM\n    chapter6_supervisedclassification.bank_details_training )\n    TARGET y\nFUNCTION predict_term_deposit\nIAM_ROLE default\nMODEL_TYPE XGBoost\nPROBLEM_TYPE BINARY_CLASSIFICATION\nSETTINGS (\n  S3_BUCKET '<<your-S3-Bucket',\n  MAX_RUNTIME 9600\n  )\n;\n```", "```py\nSHOW MODEL chapter6_supervisedclassification.banking_termdeposit;\n```", "```py\nWITH infer_data\n AS (\n    SELECT  y as actual, chapter6_supervisedclassification.predict_term_deposit(\n   age ,   \"job\" ,   marital ,   education ,   \"default\" ,   housing ,   loan ,   contact ,   month ,   day_of_week ,   duration ,   campaign ,   pdays ,   previous ,   poutcome ,   emp_var_rate ,   cons_price_idx ,        cons_conf_idx ,        euribor3m ,   nr_employed\n) AS predicted,\n     CASE WHEN actual = predicted THEN 1::INT\n         ELSE 0::INT END AS correct\n    FROM chapter6_supervisedclassification.bank_details_training\n    ),\n aggr_data AS (\n     SELECT SUM(correct) as num_correct, COUNT(*) as total FROM infer_data\n )\n SELECT (num_correct::float/total::float) AS accuracy FROM aggr_data;\n```", "```py\nWITH term_data AS ( SELECT chapter6_supervisedclassification.predict_term_deposit( age,\"job\" ,marital,education,\"default\",housing,loan,contact,month,day_of_week,duration,campaign,pdays,previous,poutcome,emp_var_rate,cons_price_idx,cons_conf_idx,euribor3m,nr_employed) AS predicted\nFROM chapter6_supervisedclassification.bank_details_inference )\nSELECT\nCASE WHEN predicted = 'Y'  THEN 'Yes-will-do-a-term-deposit'\n     WHEN predicted = 'N'  THEN 'No-term-deposit'\n     ELSE 'Neither' END as deposit_prediction,\nCOUNT(1) AS count\nfrom term_data GROUP BY 1;\n```", "```py\nSELECT\nage,\"job\" ,marital ,\nchapter6_supervisedclassification.predict_term_deposit_prob( age,\"job\" ,marital,education,\"default\",housing,loan,contact,month,day_of_week,duration,campaign,pdays,previous,poutcome,emp_var_rate,cons_price_idx,cons_conf_idx,euribor3m,nr_employed) AS predicted\nFROM chapter6_supervisedclassification.bank_details_inference\nwhere marital = 'married'\n  and \"job\" = 'management'\n  and age between 35 and 40;\n```", "```py\nSELECT age, \"job\", marital, predicted.labels[0], predicted.probabilities[0]\nfrom\n (select\nage,\"job\" ,marital ,\nchapter6_supervisedclassification.predict_term_deposit_prob( age,\"job\" ,marital,education,\"default\",housing,loan,contact,month,day_of_week,duration,campaign,pdays,previous,poutcome,emp_var_rate,cons_price_idx,cons_conf_idx,euribor3m,nr_employed) AS predicted\nFROM chapter6_supervisedclassification.bank_details_inference\nwhere marital = 'married'\n  and \"job\" = 'management'\n  and age between 35 and 40) t1\nwhere predicted.labels[0] = 't';\n```", "```py\nselect json_table.report.explanations.kernel_shap.label0.global_shap_values from\n (select explain_model('chapter6_supervisedclassification.banking_termdeposit') as report) as json_table;\n```", "```py\nCREATE TABLE chapter6_supervisedclassification.cust_segmentation_train (\n    id numeric,\n    gender varchar,\n    ever_married  varchar,\n    age numeric,\n    graduated varchar,\n    profession varchar,\n    work_experience numeric,\n    spending_score  varchar,\n    family_size numeric,\n    var_1 varchar,\n    segmentation varchar\n)\nDISTSTYLE AUTO;\nCOPY chapter6_supervisedclassification.cust_segmentation_train FROM 's3://packt-serverless-ml-redshift/chapter06/Train.csv' IAM_ROLE DEFAULT FORMAT AS CSV DELIMITER ',' QUOTE '\"' IGNOREHEADER 1 REGION AS 'eu-west-1';\nCREATE TABLE chapter6_supervisedclassification.cust_segmentation_test (\n    id numeric,\n    gender varchar,\n    ever_married  varchar,\n    age numeric,\n    graduated varchar,\n    profession varchar,\n    work_experience numeric,\n    spending_score  varchar,\n    family_size numeric,\n    var_1 varchar\n)\nDISTSTYLE AUTO;\nCOPY chapter6_supervisedclassification.cust_segmentation_test FROM 's3://packt-serverless-ml-redshift/chapter06/Test.csv' IAM_ROLE DEFAULT FORMAT AS CSV DELIMITER ',' QUOTE '\"' IGNOREHEADER 1 REGION AS 'eu-west-1';\n```", "```py\n    select segmentation, count(*)  from chapter6_supervisedclassification.cust_segmentation_train\n    ```", "```py\n    group by 1;\n    ```", "```py\nCREATE  MODEL chapter6_supervisedclassification.cust_segmentation_model_ll\nFROM (\nSELECT\n    id, gender, ever_married, age, graduated,profession,\n    work_experience, spending_score,family_size,\n    var_1,segmentation\nFROM chapter6_supervisedclassification.cust_segmentation_train\n)\nTARGET segmentation\nFUNCTION predict_cust_segment_ll   IAM_ROLE default\nMODEL_TYPE LINEAR_LEARNER\nPROBLEM_TYPE MULTICLASS_CLASSIFICATION\nOBJECTIVE 'accuracy'\nSETTINGS (\n  S3_BUCKET '<<your-s3-bucket>>',\n  S3_GARBAGE_COLLECT OFF,\n  MAX_RUNTIME 9600\n  );\n```", "```py\nSHOW MODEL chapter6_supervisedclassification.cust_segmentation_model_ll;\n```", "```py\n select\n cast(sum(t1.match)as decimal(7,2)) as predicted_matches\n,cast(sum(t1.nonmatch) as decimal(7,2)) as predicted_non_matches\n,cast(sum(t1.match + t1.nonmatch) as decimal(7,2))  as total_predictions\n,predicted_matches / total_predictions as pct_accuracy\nfrom\n(SELECT\n    id,\n    gender,\n    ever_married,\n    age,\n    graduated,\n    profession,\n    work_experience,\n    spending_score,\n    family_size,\n    var_1,\n    segmentation as actual_segmentation,\n    chapter6_supervisedclassification.predict_cust_segment_ll\n(id,gender,ever_married,age,graduated,profession,work_experience,\nspending_score,family_size,var_1) as predicted_segmentation,\n    case when actual_segmentation = predicted_segmentation then 1\n      else 0 end as match,\n  case when actual_segmentation <> predicted_segmentation then 1\n    else 0 end as nonmatch\n    FROM chapter6_supervisedclassification.cust_segmentation_train\n) t1;\n```", "```py\nSELECT\nid,\nchapter6_supervisedclassification.predict_cust_segment_ll\n(id,gender,ever_married,age,graduated,profession,work_experience,spending_score,family_size,var_1) as  segmentation\nFROM chapter6_supervisedclassification.cust_segmentation_test;\n```", "```py\nSELECT\n    chapter6_supervisedclassification.predict_cust_segment_ll\n    (id,gender,ever_married,age,graduated,profession,work_experience,spending_score,family_size,var_1) as  segmentation,\n    count(*)\n    FROM chapter6_supervisedclassification.cust_segmentation_test\n   group by 1;\n```", "```py\nCREATE MODEL chapter6_supervisedclassification.cust_segmentation_model\nFROM (\nSELECT\n    id,\n    gender,\n    ever_married,\n    age,\n    graduated,\n    profession,\n    work_experience,\n    spending_score,\n    family_size,\n    var_1,\n    segmentation\nFROM chapter6_supervisedclassification.cust_segmentation_train\n)\nTARGET segmentation\nFUNCTION predict_cust_segment  IAM_ROLE default\nSETTINGS (\n  S3_BUCKET '<<your S3 Bucket>>',\n  S3_GARBAGE_COLLECT OFF,\n  MAX_RUNTIME 9600\n);\n```", "```py\nCREATE MODEL chapter6_supervisedclassification.cust_segmentation_model_ug\nFROM (\nSELECT\n    id,\n    gender,\n    ever_married,\n    age,\n    graduated,\n    profession,\n    work_experience,\n    spending_score,\n    family_size,\n    var_1,\n    segmentation\nFROM chapter6_supervisedclassification.cust_segmentation_train\n)\nTARGET segmentation\nFUNCTION predict_cust_segment_ug  IAM_ROLE default\nPROBLEM_TYPE MULTICLASS_CLASSIFICATION\nOBJECTIVE 'accuracy'\nSETTINGS (\n  S3_BUCKET '<<your S3 Bucket>>',\n  S3_GARBAGE_COLLECT OFF,\n  MAX_RUNTIME 9600\n  );\n```"]