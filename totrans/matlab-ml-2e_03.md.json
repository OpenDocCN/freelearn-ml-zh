["```py\n    load fisheriris\n    ```", "```py\n    tabulate(species)\n           Value    Count   Percent\n          setosa       50     33.33%\n      versicolor       50     33.33%\n       virginica       50     33.33%\n    ```", "```py\n    gplotmatrix(meas, meas, species);\n    ```", "```py\ngscatter(meas(:,3), meas(:,4), species,'rgb','osd');\nxlabel('Petal length');\nylabel('Petal width');\n```", "```py\n    ClassTree= fitctree(meas,species);\n    view(ClassTree)\n    ```", "```py\n    Decision tree for classification\n    1  if x3<2.45 then node 2 elseif x3>=2.45 then node 3 else setosa\n    2  class = setosa\n    3  if x4<1.75 then node 4 elseif x4>=1.75 then node 5 else versicolor\n    4  if x3<4.95 then node 6 elseif x3>=4.95 then node 7 else versicolor\n    5  class = virginica\n    6  if x4<1.65 then node 8 elseif x4>=1.65 then node 9 else versicolor\n    7  class = virginica\n    8  class = versicolor\n    9  class = virginica\n    view(ClassTree,'mode','graph')\n    ```", "```py\n    predict(ClassTree,meas)\n    ans =\n      1×1 cell array\n        {'setosa'}\n    ```", "```py\n    resuberror = resubLoss(ClassTree)\n    resuberror =\n        0.0200\n    ```", "```py\n    cvrtree = crossval(ClassTree)\n    cvrtree =\n      ClassificationPartitionedModel\n        CrossValidatedModel: 'Tree'\n             PredictorNames: {'x1'  'x2'  'x3'  'x4'}\n               ResponseName: 'Y'\n            NumObservations: 150\n                      KFold: 10\n                  Partition: [1×1 cvpartition]\n                 ClassNames: {'setosa'  'versicolor'  'virginica'}\n             ScoreTransform: 'none'\n    ```", "```py\n    cvloss = kfoldLoss(cvrtree)\n    cvloss =\n        0.0533\n    ```", "```py\n    opts = detectImportOptions('datatraining.txt');\n    opts.SelectedVariableNames = [3:8];\n    ```", "```py\n    DataMatrix = readtable('datatraining.txt',opts);\n    ```", "```py\n    SVMClassifier =  fitcsvm(DataMatrix(:,1:5),DataMatrix(:,6));\n    ```", "```py\n    SVMClassifier\n    SVMClassifier =\n      ClassificationSVM\n               PredictorNames: {'Temperature'  'Humidity'  'Light'  'CO2'  'HumidityRatio'}\n                 ResponseName: 'Occupancy'\n        CategoricalPredictors: []\n                   ClassNames: [0 1]\n               ScoreTransform: 'none'\n              NumObservations: 8143\n                        Alpha: [256×1 double]\n                         Bias: -7.1986\n             KernelParameters: [1×1 struct]\n               BoxConstraints: [8143×1 double]\n              ConvergenceInfo: [1×1 struct]\n              IsSupportVector: [8143×1 logical]\n                       Solver: 'SMO'\n    ```", "```py\n    ResubError = resubLoss(SVMClassifier);\n    ResubError = 0.1459\n    ```", "```py\n    RbfSVMClassifier = fitcsvm(DataMatrix(:,1:5),DataMatrix(:,6),'Standardize',true,'KernelFunction','RBF','KernelScale','auto');\n    ResubError = resubLoss(RbfSVMClassifier);\n    ResubError = 0.0061\n    ```", "```py\n    VehicleData = readtable('VehiclesItaly.xlsx');\n    ```", "```py\n    LRModel = fitlm(VehicleData,'Registrations~Population');\n    disp(LRModel)\n    ```", "```py\n    Linear regression model:\n        Registrations ~ 1 + Population\n    Estimated Coefficients:\n               Estimate       SE       tStat       pValue\n              ________    ________    ______    __________\n    (Intercept) 70549        41016      1.72       0.10258\n    Population 0.59212    0.010488    56.458    1.0323e-21\n    Number of observations: 20, Error degrees of freedom: 18\n    Root Mean Squared Error: 1.16e+05\n    R-squared: 0.994, Adjusted R-Squared: 0.994\n    F-statistic vs. constant model: 3.19e+03, p-value = 1.03e-21\n    ```", "```py\n    EmployeesSalary = readtable('employees.xlsx');\n    summary(EmployeesSalary)\n    ```", "```py\n    Variables:\n        YearsExperience: 120×1 double\n            Values:\n                Min            1\n                Median      20.5\n                Max           40\n        Salary: 120×1 double\n            Values:\n                Min          20\n                Median       41\n                Max          82\n        LevelOfEmployee: 120×1 cell array of character vectors\n    EmployeesSalary.LevelOfEmployee=categorical(EmployeesSalary.LevelOfEmployee);\n    ```", "```py\n    class(EmployeesSalary.LevelOfEmployee)\n    ans =\n        'categorical'\n    ```", "```py\n    LRModelCat = fitlm(EmployeesSalary,'Salary~YearsExperience*LevelOfEmployee');\n    ```", "```py\nSalary =\n  20.2\n+ 0.25 * YearsExperience\n+ 30.2 * LevelOfEmployee(Management)\n+ 10.4 * LevelOfEmployee(TechnicalStaff)\n+ 0.49 * YearsExperience * LevelOfEmployee(Management)\n+ 0.24 * YearsExperience * LevelOfEmployee(TechnicalStaff)\n```", "```py\nLevelOfEmployee(GeneralStaff):\nSalary = 20.2 + 0.25 * YearsExperience\nLevelOfEmployee(TechnicalStaff):\nSalary = (20.2 + 10.4) + (0.25 + 0.24) * YearsExperience\nLevelOfEmployee(Management):\nSalary = (20.2 + 30.2) + (0.25 + 0.49) * YearsExperience\n```", "```py\n    Xvalues = linspace(min(EmployeesSalary.YearsExperience),max(EmployeesSalary.YearsExperience));\n    figure()\n    gscatter(EmployeesSalary.YearsExperience, EmployeesSalary.Salary, EmployeesSalary.LevelOfEmployee,'bgr','x.o')\n    title('Salary of  Employees versus Years of the Experience, Grouped by Level of Employee')\n    line(Xvalues,feval(LRModelCat,Xvalues,'GeneralStaff'),'Color','b','LineWidth',2)\n    line(Xvalues,feval(LRModelCat,Xvalues,'TechnicalStaff'),'Color','r','LineWidth',2)\n    line(Xvalues,feval(LRModelCat,Xvalues,'Management'),'Color','g','LineWidth',2)\n    ```", "```py\n    VehicleData = readtable('VehiclesItaly.xlsx');\n    LRModel = fitlm(VehicleData,'Registrations~Population');\n    ```", "```py\n    LRModel.Rsquared\n    ```", "```py\n    Ordinary: 0.9944\n    Adjusted: 0.9941\n    LRModel.MSE\n    1.3407e+10\n    ```", "```py\n    plotResiduals(LRModel)\n    ```", "```py\n    outliers = find(LRModel.Residuals.Raw < -1.5*10^5)\n    ```", "```py\n    outliers =\n         9\n        13\n        18\n    ```", "```py\n    LRModel2 = fitlm(VehicleData,'Registrations~Population','Exclude',outliers)\n    LRModel2.Rsquared\n    ```", "```py\n    Ordinary: 0.9974\n    Adjusted: 0.9972\n    ```", "```py\n    LRModel2.MSE\n    ans =\n       6.8047e+09\n    ```", "```py\n    AirfoilSelfNoise = readtable('AirfoilSelfNoise.xlsx');\n    ```"]