["```py\n      try {\n        switch (event.routeKey) {\n          case \"GET /items/{device_id}\":\n            var nid = String(event.pathParameters.id);\n            body = await dynamo\n              .query({\n                TableName: \"<table-name>\",\n                KeyConditionExpression: \"id = :nid\",\n                ExpressionAttributeValues: {\n                  \":nid\" : nid\n                }\n              })\n              .promise();\n            break;\n          case \"GET /items\":\n            body = await dynamo.scan({ TableName: \"<table-name>\" }).promise();\n            break;\n          case \"PUT /items\":\n            let requestJSON = JSON.parse(event.body);\n            await dynamo\n              .put({\n                TableName: \"<table-name>\",\n                Item: {\n                  device_id: requestJSON.id,\n                  temperature: requestJSON.temperature,\n                  humidity: requestJSON.humidity,\n                  device_name: requestJSON.device_name\n                }\n              })\n              .promise();\n            body = `Put item ${requestJSON.id}`;\n            break;\n          default:\n            throw new Error(`Unsupported route: \"${event.routeKey}\"`);\n        }\n      } catch (err) {\n        statusCode = 400;\n        body = err.message;\n      } finally {\n        body = JSON.stringify(body);\n      }\n      return {\n        statusCode,\n        body,\n        headers\n      };};\n    ```", "```py\n    /items GET – allows accessing all the items on the DynamoDB table (can be an expensive operation)\n    ```", "```py\n    a. Query all items from the table \n    curl https://xxxxxxxx.executeapi.<region>.amazonaws.com/items\n    ```"]