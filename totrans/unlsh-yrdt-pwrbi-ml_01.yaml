- en: '1'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Requirements, Data Modeling, and Planning
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You begin your journey by assessing the requirements and data for your project.
    The use case will be a fictional scenario, but everything will be built using
    real data from the **Federal Aviation Administration’s (FAA) Wildlife Strike Database**.
    The data is real, the topic can be understood by anyone, and the findings within
    the data are interesting and fun. According to the FAA’s website, about 47 animal
    strikes are reported daily by aircraft. These incidents can damage airplanes,
    potentially endanger passengers, and negatively impact wild animal (especially
    bird) populations.
  prefs: []
  type: TYPE_NORMAL
- en: For the use case, you have been assigned to provide your leadership with tools
    to do an interactive analysis of the FAA Wildlife Strike data, find insights about
    factors that influence the incidents, and also make predictions about future wildlife
    strike incidents and the associated costs. The primary goal of your project, predicting
    the future impact of FAA Wildlife Strikes, will require building some Power BI
    machine learning models.
  prefs: []
  type: TYPE_NORMAL
- en: 'Before uploading data to Power BI’s **machine learning** (**ML**) tools, you’ll
    need to create tables of data that will train the ML models. There is an old saying
    about data and analytics: *“Garbage in, garbage out.”* **Software as a Service**
    (**SaaS**) machine learning tools are easy to use, but you still need to feed
    them good-quality curated data. Identifying the right training data and getting
    it into the right format are crucial steps in an ML project.'
  prefs: []
  type: TYPE_NORMAL
- en: This project will encompass data exploration, data transformation, data analysis,
    and additional downstream data transformations before you begin working with Power
    BI ML tools. You are already an experienced **business intelligence** (**BI**)
    professional and Power BI user, and now you are ready to take your skills to the
    next level with ML in Power BI!
  prefs: []
  type: TYPE_NORMAL
- en: '**Power BI** supports connections to source data in many different formats,
    ranging from relational databases to unstructured sources to big flat tables of
    raw data. Countless books have been written about the best ways to structure and
    model data for different use cases. Rather than dive into the specifics of data
    modeling, for this book, we will begin with two simple assumptions:'
  prefs: []
  type: TYPE_NORMAL
- en: Most of the time, a **star schema** design will provide the most efficient storage
    and query performance for business intelligence data models
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Basic ML models, such as the ones you will build in this book, are usually created
    with a **flattened table**
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Just to be clear, not every solution will follow these assumptions. Rather,
    these assumptions are generalizations that can provide you with a starting point
    as you approach the design of a new data model. Quite often, there will not be
    a perfect answer, and the optimal design will be dictated by the types of queries
    and business logic that are generated by the end consumers of the data model.
  prefs: []
  type: TYPE_NORMAL
- en: If you’ve never heard the terms star schema and flattened data before, don’t
    worry! The book will progress at a pace that is intended to help you learn and
    will also stay at a level that makes sense when you review the FAA data. Let’s
    browse the FAA Wildlife Strike data and decide upon the best data modeling strategy
    for your new project!
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will take the following steps so that you can understand
    the data, think through how it will be used, and then formulate a preliminary
    plan for the data model:'
  prefs: []
  type: TYPE_NORMAL
- en: Reviewing the source data
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reviewing the requirements for the solution
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Designing a preliminary data model
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Considerations for ML
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'For this chapter, you will need the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Power BI Desktop April 2023 or later (no licenses required)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'FAA Wildlife Strike data files from either the FAA website or the Packt GitHub
    repo: [https://github.com/PacktPublishing/Unleashing-Your-Data-with-Power-BI-Machine-Learning-and-OpenAI/tree/main/Chapter-01](https://github.com/PacktPublishing/Unleashing-Your-Data-with-Power-BI-Machine-Learning-and-OpenAI/tree/main/Chapter-01)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reviewing the source data
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You begin your journey by digging into the source data that you will be using
    for your project. Let’s get started!
  prefs: []
  type: TYPE_NORMAL
- en: Accessing the data
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The source data that you will be using for this book is real data from the
    United States **FAA**. The data contains reports filed when aircraft struck wildlife.
    There is a website providing details, documentation, updates, and access instructions
    at this URL: [https://wildlife.faa.gov/home](https://wildlife.faa.gov/home). The
    URL (and all URLs) will also be linked from the affiliated GitHub site at [https://github.com/PacktPublishing/Unleashing-Your-Data-with-Power-BI-Machine-Learning-and-OpenAI](https://github.com/PacktPublishing/Unleashing-Your-Data-with-Power-BI-Machine-Learning-and-OpenAI)
    in case changes are made after this book has been published.'
  prefs: []
  type: TYPE_NORMAL
- en: 'If you’d prefer to follow along using the finished version of the content from
    this chapter rather than building it all step by step, you can download the PBIT
    version of the file at the Packt GitHub site folder for [*Chapter* *1*](B19500_01.xhtml#_idTextAnchor015):
    [https://github.com/PacktPublishing/Unleashing-Your-Data-with-Power-BI-Machine-Learning-and-OpenAI/tree/main/Chapter-01](https://github.com/PacktPublishing/Unleashing-Your-Data-with-Power-BI-Machine-Learning-and-OpenAI/tree/main/Chapter-01).'
  prefs: []
  type: TYPE_NORMAL
- en: 'Within the FAA Wildlife Strike Database website, you can navigate to this link
    and run basic queries against the data and familiarize yourself with the content:
    [https://wildlife.faa.gov/search](https://wildlife.faa.gov/search). There are
    also two files linked from this page that you can reference while reviewing the
    source data.'
  prefs: []
  type: TYPE_NORMAL
- en: At the time of this book’s writing, the second heading on the web page is titled
    **Download the FAA Wildlife Strike Database**, and it has a link titled **Download**
    that allows you to download the entire historical database along with a reference
    file. You can download the files from the FAA site for the purposes of this book.
    There will also be a Power BI PBIT file containing the results of the efforts
    of this chapter at the GitHub repository. A PBIT file is a Power BI template that
    can be populated with the files that you download from the Packt GitHub site.
    If the FAA data ever becomes unavailable, you can still proceed with the contents
    from the GitHub site to recreate the contents of every chapter.
  prefs: []
  type: TYPE_NORMAL
- en: 'The files you will be using from the FAA are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '`wildlife.accdb`: This contains all of the historical FAA Wildlife Strike reports.
    You can also download a copy of the file that is identical to the book from the
    Packt GitHub site: [https://github.com/PacktPublishing/Unleashing-Your-Data-with-Power-BI-Machine-Learning-and-OpenAI/tree/main/Chapter-01](https://github.com/PacktPublishing/Unleashing-Your-Data-with-Power-BI-Machine-Learning-and-OpenAI/tree/main/Chapter-01).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`read_me.xls`: This contains descriptive information about the data in the
    `wildlife.accdb` database file. An `.xlsx` version of the file is available on
    the Packt GitHub site, too.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Exploring the FAA Wildlife Strike report data
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The `wildlife.accdb` file is in an Access file format that can be opened with
    many different tools including Microsoft Access, Microsoft Excel, Power BI, and
    many more. For the purpose of this book, you will open it using **Power BI Desktop**.
    Power BI Desktop is available as a free download at this link: [https://powerbi.microsoft.com/en-us/downloads/](https://powerbi.microsoft.com/en-us/downloads/).'
  prefs: []
  type: TYPE_NORMAL
- en: 'First, open up Power BI Desktop. Once it is open on your desktop, select the
    **Get data** drop-down menu from the ribbon and click on **More…** as shown in
    the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 1.1 – Connecting to data with Power BI Desktop](img/Figure_1.01_B19500.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1.1 – Connecting to data with Power BI Desktop
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, within the **Get data** window, select **Access database** and click
    **Connect**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 1.2 – Access database connector in Power BI](img/Figure_1.02_B19500.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1.2 – Access database connector in Power BI
  prefs: []
  type: TYPE_NORMAL
- en: 'Select the **Access database** file that was downloaded and unzipped from the
    FAA Wildlife Strike Database, named **wildlife**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 1.3 – The wildlife file shows up in Power BI](img/Figure_1.03_B19500.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1.3 – The wildlife file shows up in Power BI
  prefs: []
  type: TYPE_NORMAL
- en: 'Select the **STRIKE_REPORTS** table and click **Transform Data**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 1.4 – Preview of the data before making transformations](img/Figure_1.04_B19500.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1.4 – Preview of the data before making transformations
  prefs: []
  type: TYPE_NORMAL
- en: 'The Power Query window will open in Power BI Desktop with a preview of the
    FAA Wildlife Strike data. On the ribbon, select the **View** header for **Data
    Preview**, and then check the boxes for **Column quality**, **Column distribution**,
    and **Column profile**. These features will provide some insights for the data
    preview, that helps you explore and understand the data:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 1.5 – Data Preview features in Power Query](img/Figure_1.05_B19500.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1.5 – Data Preview features in Power Query
  prefs: []
  type: TYPE_NORMAL
- en: In *Figure 1**.5*, notice that the first column, **INDEX_NR**, is highlighted.
    You can see that none of the values are empty, none have errors, and in **Column
    statistics** at the bottom of *Figure 1**.6*, every value is a unique integer.
    The name **INDEX_NR** gives it away, but this column is the unique identifier
    for each row of data.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s review another column in Power Query. Go ahead and highlight **TIME_OF_DAY**.
    As you can see in *Figure 1**.6*, there are four distinct values and about 12%
    are blank. Blank values are an important consideration for this solution. Non-empty
    values include terms such as **Day**, **Dawn**, **Dusk**, and **Night**. What
    does an empty value mean? Was the field left blank by the person filing the report?
    Was it not entered properly into the system? You’ll revisit this topic later in
    the book.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 1.6 – Column statistics help with understanding data](img/Figure_1.06_B19500.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1.6 – Column statistics help with understanding data
  prefs: []
  type: TYPE_NORMAL
- en: 'Since there are over 100 columns in the FAA Wildlife Strike reports’ data,
    we won’t discuss all of them in this chapter. That being said, reviewing each
    and every column would be a great way to review the data for errors, empty fields,
    distribution of values, and more. For the purposes of this chapter, go ahead and
    open up the `read_me.xls` file that was included with the ZIP file from the FAA.
    The first sheet is `wildlife.accdb` file. Most of the columns fall into one of
    the following categories:'
  prefs: []
  type: TYPE_NORMAL
- en: Date and time fields detailing the dates, times, and years for different events
    related to each report
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Descriptive information about the event such as height of contact, latitudes
    and longitudes, originating airports, and flight numbers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Descriptive information about the aircraft such as ownership, aircraft type
    and manufacturer, number of engines, location of engines, and so on
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Estimates of the damage due to the strike such as costs, costs adjusted for
    inflation, damage location on the aircraft, and more
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Information about the wildlife struck by the aircraft including species, size,
    quantities hit, and so on
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Once you’ve finished browsing the report data, close the `read_me.xlsx` document
    on your desktop, and then connect to it from Power BI per the following steps.
    The document version used in this book can be downloaded from the Packt GitHub
    site here: [https://github.com/PacktPublishing/Unleashing-Your-Data-with-Power-BI-Machine-Learning-and-OpenAI/tree/main/Chapter-01](https://github.com/PacktPublishing/Unleashing-Your-Data-with-Power-BI-Machine-Learning-and-OpenAI/tree/main/Chapter-01).'
  prefs: []
  type: TYPE_NORMAL
- en: 'Click on **Excel Workbook** in the left-hand panel:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 1.7 – Excel Workbook is a new source of data](img/Figure_1.07_B19500.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1.7 – Excel Workbook is a new source of data
  prefs: []
  type: TYPE_NORMAL
- en: 'Select the **read_me** file from the browser and click **Open**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 1.8 – Excel file ready to open in Power Query](img/Figure_1.08_B19500.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1.8 – Excel file ready to open in Power Query
  prefs: []
  type: TYPE_NORMAL
- en: Tick the **Aircraft Type**, **Engine Codes**, and **Engine Position** boxes.
    Then, click **OK**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 1.9 – Sheets in Power Query can be individually selected](img/Figure_1.09_B19500.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1.9 – Sheets in Power Query can be individually selected
  prefs: []
  type: TYPE_NORMAL
- en: 'After clicking **OK** and importing the three sheets, notice that **Aircraft
    Type**, **Engine Codes**, and **Engine Position** are now available in Power Query
    as three separate tables of data:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 1.10 – Three new tables are previewed in Power Query](img/Figure_1.10_B19500.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1.10 – Three new tables are previewed in Power Query
  prefs: []
  type: TYPE_NORMAL
- en: 'The three tables contain descriptive information about values that exist in
    the FAA Wildlife Strike reports’ data:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Aircraft Type**: A table that maps the Aircraft Code to a description such
    as Airplane, Helicopter, or Glider'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Engine Codes**: Information about engine manufacturer and model numbers'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Engine Position**: Details about the location of an engine on the aircraft'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For all three of these tables, you’ll notice that there are some unnecessary
    rows and blank values. You will address these later in the book, so there is no
    need to make any modifications in Power Query at this time.
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you’ve browsed the different columns from all the different tables in
    Power Query, click **Close & Apply** to import the data into Power BI and save
    it, per the following diagram:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 1.11 – The Close & Apply button will import data into Power BI](img/Figure_1.11_B19500.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1.11 – The Close & Apply button will import data into Power BI
  prefs: []
  type: TYPE_NORMAL
- en: 'Once the data is imported, you can save your Power BI Desktop file as a `.pbix`
    file. A copy of the PBIT file named [*Chapter 1*](B19500_01.xhtml#_idTextAnchor015)
    `Template.pbit`, which can be populated with the data and then saved as a PBIX,
    can be found at this GitHub link: [https://github.com/PacktPublishing/Unleashing-Your-Data-with-Power-BI-Machine-Learning-and-OpenAI/tree/main/Chapter-01](https://github.com/PacktPublishing/Unleashing-Your-Data-with-Power-BI-Machine-Learning-and-OpenAI/tree/main/Chapter-01).'
  prefs: []
  type: TYPE_NORMAL
- en: Reviewing the requirements for the solution
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Now that you’ve explored the FAA Wildlife Strike data, you have a better understanding
    of what data is available for your solution. The original assignment that you
    were given by your stakeholders was as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Provide leadership with tools to do interactive analysis of the FAA Wildlife
    Strike data
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Find insights about factors that influence the incidents
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Make predictions about future wildlife strike incidents
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Those requirements sound pretty vague! Now that you have a better understanding
    of the available data, it’s a good time to circle back with the stakeholders and
    clarify those requirements. You ask them questions such as the following:'
  prefs: []
  type: TYPE_NORMAL
- en: What types of interactive analysis do you want to do?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Are you interested in the impact on endangered bird species?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Maybe you’d like to view trends due to wildlife strikes and compare airports
    and regions?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Perhaps you’d like to see the height and frequency of wildlife strikes at different
    times of the year?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Would understanding correlations to factors such as aircraft size, time of day,
    season, geography, and height be useful?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Are you interested in predicting specific risks or outcomes?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Entire books have been written about gathering requirements for data and analytics
    projects, and discussions on this particular topic could also be extensive. For
    the sake of keeping this book consumable, let’s assume that your discussions with
    the stakeholders led to prioritizing the following deliverables for the project:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Analytic report**: Viewing trends over time such as number of incidents,
    location of incidents, height, and details such as types of aircraft and wildlife
    species'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Predict damage**: When a strike is reported, make a prediction as to whether
    there will be a cost associated with any damage'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Predict size**: When a strike is reported, make a prediction about the size
    of the wildlife that struck the aircraft'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Predict height**: For wildlife strikes, predict the height of the incidents'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Now, you review the notes you took about the FAA Wildlife Strike data during
    your data exploration efforts. In doing so, you can think about how the data might
    match up to the use cases. Based on the requirements and your initial exploration
    of the data, you decide that the FAA Wildlife Strike data from the `wildlife.accdb`
    file and the tables from the `read_me.xls` file (**Engine Codes**, **Aircraft
    Type**, and **Engine Position**) are appropriate content to include during the
    initial phases of your project.
  prefs: []
  type: TYPE_NORMAL
- en: Designing a preliminary data model
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Earlier in this chapter, we made two simple assumptions about data modeling:'
  prefs: []
  type: TYPE_NORMAL
- en: Most of the time, a *star schema* design will provide the most efficient storage
    and query performance for business intelligence data models
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Basic ML models, such as the ones you can build in this book, are usually created
    with a *flattened table*
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Now that you have a grasp of the underlying data and requirements, it is time
    to think about the data model for your FAA Wildlife Strike data solution. Logically,
    you can describe your tables of data as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '`wildlife.accdb`): Each row represents a report that was filed. The table of
    data contains both descriptive values (date, location, and type) along with values
    that can be summed up and averaged (height and costs).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`read-me.xls`): This contains information about the aircraft engines that can
    be tied to **STRIKE_REPORTS**.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`read-me.xls`): This contains information about the aircraft that can be tied
    to **STRIKE_REPORTS**.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`read-me.xls`): This contains information about the aircraft engine positions
    that can be tied to **STRIKE_REPORTS**.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'At this point, you are faced with some data model choices. No matter what decision
    you make, some people might question your architecture, since there is no perfect
    design. Depending on how end users will use the data, the data model design may
    change. This book will demonstrate some of the differences in data model designs
    for ML models versus traditional BI designs. At a high level, there are three
    basic approaches you can take in Power BI:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Flatten**: You can flatten all the data onto a single table by joining **Engine
    Codes**, **Aircraft Type**, and **Engine Position** onto **STRIKE_REPORTS**.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Star schema**: You can build out a true star schema with **STRIKE_REPORTS**
    as a fact table and **Engine Codes**, **Aircraft Type**, and **Engine Position**
    as dimension tables. Some additional data from **STRIKE_REPORTS** would also be
    broken out into separate dimension tables. For example, **AIRPORT_ID**, **AIRPORT**,
    **STATE**, and **FAAREGION** could be separate dimension tables.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Hybrid design**: You can build out a hybrid design using both a flattened
    and star schema design pattern for the sake of practicality and ease of use.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let’s look at each of these in turn.
  prefs: []
  type: TYPE_NORMAL
- en: Flattening the data
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Flattening the FAA Wildlife Strike reports’ data would require joining the
    **Engine Codes**, **Aircraft Type**, and **Engine Position** tables onto the **STRIKE_REPORTS**
    table so that everything is on one big flat table of data. The result would be
    something that looks like this:'
  prefs: []
  type: TYPE_NORMAL
- en: "![Figure 1.12 – Tables on the left are combined to form a si\uFEFFngle table\
    \ on the right](img/Figure_1.12_B19500.jpg)"
  prefs: []
  type: TYPE_IMG
- en: Figure 1.12 – Tables on the left are combined to form a single table on the
    right
  prefs: []
  type: TYPE_NORMAL
- en: 'The following table contains some, but not all, of the pros and cons of a flattened
    table of data:'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Pros** | **Cons** |'
  prefs: []
  type: TYPE_TB
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: Simplicity
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: No joins needed for code
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Commonly used by data scientists
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Can compress well with columnar databases
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: No relational data models for business users
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: Repetitive data can lead to an inefficient storage footprint
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Limitations for queries with advanced logic
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Less flexibility for future change and evolution of solution
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Complex logical queries can be less efficient
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 1.13 – Pros and cons of a flattened table for BI
  prefs: []
  type: TYPE_NORMAL
- en: Next, let’s look at the star schema.
  prefs: []
  type: TYPE_NORMAL
- en: Star schema
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'A true star schema built to best practices would include relationships between
    **Engine Codes**, **Aircraft Type**, and **Engine Position** with the **STRIKE_REPORTS**
    table. It would also break off parts of the **STRIKE_REPORTS** table into smaller
    dimension tables. The following figure is a representation of the approach for
    a true star schema. There may be more dimension tables that would need to be broken
    off of the **STRIKE_REPORTS** table in addition to **Location** and **Species**,
    but this is an example of how it might look:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 1.14 – Tables on the left are combined into a star schema, and some
    data is split off into new dimension tables](img/Figure_1.14_B19500.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1.14 – Tables on the left are combined into a star schema, and some data
    is split off into new dimension tables
  prefs: []
  type: TYPE_NORMAL
- en: 'The following table contains some, but not all, of the pros and cons of a true
    star schema design:'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Pros** | **Cons** |'
  prefs: []
  type: TYPE_TB
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: Tables often line up with business logic
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Balance of minimal data duplication and efficient queries
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Usually expandable if the scope of the solution grows and new data is introduced
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Traditionally considered the gold standard for BI data models
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: With modern tools, the benefits of reducing data duplication are less impactful
    versus older tools
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Complicated ETL
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Machine learning models are usually trained with flat tables of data
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Don’t always scale well with very large data volumes having tens of billions
    of rows
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 1.15 – Pros and cons of a star schema for BI
  prefs: []
  type: TYPE_NORMAL
- en: Hybrid design
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'For the FAA Wildlife Strike data, combining aspects of a flattened design and
    a star schema is also an option. At the time of this book’s writing, the entire
    **STRIKE_REPORTS** table is fewer than 300,000 rows and has fewer than 100 columns.
    Only two columns contain verbose free text, so data volume is not an issue when
    using Power BI. For this particular use case, the differences in data storage
    requirements between flattened and star schema data models are minimal. With data
    volumes of this small size, you can design the data model to meet the needs of
    the solution without some of the performance concerns that would be introduced
    for data sources with tens of millions of rows or hundreds of columns containing
    free text fields. Columns of data left on a transaction table that will be used
    as categories are technically called **degenerate dimensions**. A hybrid design
    could look something like the following example:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 1.16 – Tables from the left are enhanced and combined into a star
    schema with some descriptive data still in the fact table](img/Figure_1.16_B19500.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1.16 – Tables from the left are enhanced and combined into a star schema
    with some descriptive data still in the fact table
  prefs: []
  type: TYPE_NORMAL
- en: 'The following table contains some, but not all, of the pros and cons of a hybrid
    design:'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Pros** | **Cons** |'
  prefs: []
  type: TYPE_TB
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: Rapid prototyping
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Less logic in the data transformation layer
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Flexible design
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: Possibly less performant than a star schema for traditional BI
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Additional logical complexity for users versus a big flat table
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Data will still need to be flattened out for machine learning
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Not perfect for either BI or ML, but a compromise between the two
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 1.17 – Pros and cons of a hybrid design and considerations for additional
    data
  prefs: []
  type: TYPE_NORMAL
- en: Before finalizing a preliminary logical design for your FAA Wildlife Strike
    solution, take a step back to think about the data and the requirements. You can
    review the expected deliverables from earlier in the chapter, including an analytic
    report and predictions of damage, size, and height.
  prefs: []
  type: TYPE_NORMAL
- en: 'In addition to the FAA Wildlife Strike data you’ve been using, what other data
    might be useful for the solution? Also, what is the effort to get the data? Here
    are a few examples that you could research:'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Additional** **Data Sources** | **Level** **of Effort** |'
  prefs: []
  type: TYPE_TB
- en: '| Date-based table of aggregations such as Month, Quarter, Season, and Holidays
    | Easy |'
  prefs: []
  type: TYPE_TB
- en: '| Time-based table of aggregations such as hour, AM/PM, and so on | Easy |'
  prefs: []
  type: TYPE_TB
- en: '| Data for flights that didn’t have a wildlife strike could provide a baseline
    for the percentage of flights with strikes | Difficult |'
  prefs: []
  type: TYPE_TB
- en: '| Weather data that could be mapped to the date and time of wildlife strikes
    | Difficult |'
  prefs: []
  type: TYPE_TB
- en: '| Additional data about wildlife species such as weight ranges, habitat ranges,
    and so on | Difficult |'
  prefs: []
  type: TYPE_TB
- en: Figure 1.18 – Additional potential data sources for the solution
  prefs: []
  type: TYPE_NORMAL
- en: Additional flight, weather, and wildlife data could provide greater analytic
    and predictive value for the solution. However, adding those sources would require
    quite a bit of effort that exceeds the scope of your project and the length of
    this book. If the initial project goes well, you can circle back to these options
    for future enhancements.
  prefs: []
  type: TYPE_NORMAL
- en: 'There may be value in adding a Time table to the solution, so open up Power
    Query and take another look at the **TIME** column. Notice that 95% of the entries
    are empty:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 1.19 – 95% of the values for TIME are empty](img/Figure_1.19_B19500.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1.19 – 95% of the values for TIME are empty
  prefs: []
  type: TYPE_NORMAL
- en: Due to a lack of complete data, you decide to leave a Time table out of the
    initial build.
  prefs: []
  type: TYPE_NORMAL
- en: 'How about a Date table so that you can roll up data by week, month, quarter,
    year, holidays, weekends, and more? Looking at the **INCIDENT_DATE** column in
    Power Query, it is populated for every entry in the preview:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 1.20 – INCIDENT_DATE is fully populated with date values](img/Figure_1.20_B19500.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1.20 – INCIDENT_DATE is fully populated with date values
  prefs: []
  type: TYPE_NORMAL
- en: '**INCIDENT_DATE** can be used as a key for connecting to a Date table containing
    many different date-based aggregations. You decide to pull in a Date table for
    the architecture. The resulting preliminary data model will now look as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 1.21 – A Date table is added to the preliminary data model](img/Figure_1.21_B19500.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1.21 – A Date table is added to the preliminary data model
  prefs: []
  type: TYPE_NORMAL
- en: The Date table was not present in the source data, but in your reporting model,
    it will allow you to slice and dice data by day, week, month, quarter, year, weekend,
    and more. When you explore data in future chapters, it will add new ways to dive
    into and explore date-based trends. The Date table will be added in [*Chapter
    2*](B19500_02.xhtml#_idTextAnchor030).
  prefs: []
  type: TYPE_NORMAL
- en: In the final section of the chapter, we’ll look at what else we need to take
    into account for ML.
  prefs: []
  type: TYPE_NORMAL
- en: Considerations for ML
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now that you’ve created a preliminary data model that will serve as the basis
    for analytic reporting in Power BI, you start thinking about a process for creating
    tables of data to be used with Power BI machine learning. You will need to create
    a single table of flattened data for each machine learning model that you train,
    test, and deploy.
  prefs: []
  type: TYPE_NORMAL
- en: Creating tables of data to train a machine learning model entails treating each
    column as a feature of the algorithm that you will be training and then using
    to make predictions. For example, if you wanted to create a machine learning algorithm
    that predicts whether something is an insect, the `[Six Legs Y/N?]`, `[Life Form
    Y/N?]`, `[Count of Eyes]`, and `[Weight]`, and then a column that will be predicted,
    such as `[Insect Y/N?]`. Each row would represent something that is being evaluated
    for a prediction to answer the question, “Is this an insect?”
  prefs: []
  type: TYPE_NORMAL
- en: 'You decide to take the following approach, in the following order, so that
    you can do everything within Power BI:'
  prefs: []
  type: TYPE_NORMAL
- en: Data exploration and initial data model creation in Power BI Desktop Power Query.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Analytic report created in Power BI.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Feature discovery in Power BI.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Create training data sets in Power Query.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Move training data sets to Power BI dataflows.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Train, test, deploy a Power BI machine learning model in Power BI dataflows.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: This process is shown in *Figure 1**.22*.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 1.22 – All of the ETL (extract, transform, load) will happen in Power
    BI Power Query and Power BI dataflows](img/Figure_1.22_B19500.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1.22 – All of the ETL (extract, transform, load) will happen in Power
    BI Power Query and Power BI dataflows
  prefs: []
  type: TYPE_NORMAL
- en: 'Power BI ML offers three different types of predictive model types. Those types,
    as defined in the Power BI service, are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: A **binary prediction** model predicts whether an outcome will be achieved.
    Effectively, a prediction of “Yes” or “No” is returned.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**General classification** models predict more than two possible outcomes such
    as *A*, *B*, *C*, or *D*.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A **regression** model will predict a numeric value along a spectrum of possible
    values. For example, it will predict the costs of an event based on similar past
    events.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'As part of your preliminary planning, you consider how these options could
    map to the deliverables that were prioritized by your stakeholders:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Analytic report**: This deliverable will be a Power BI analytic report and
    could use some Power BI AI features, but it will not be a Power BI ML model. The
    analytic report will help you explore and identify the right data for Power BI
    machine learning models.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Predict damage**: Predicting whether or not damage will result from a wildlife
    strike is a good match for a binary prediction model since the answer will have
    two possible outcomes: yes or no.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Predict size**: Predicting the size of the wildlife that struck an aircraft
    based upon factors such as damage cost, damage location, height, time of year,
    and airport location will probably have multiple values that can be predicted
    such as *Large*, *Medium*, and *Small*. This requirement could be a good fit for
    a general classification model.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Predict height**: This deliverable predicts the height at which wildlife
    strikes will happen and provides that prediction as a numeric value representing
    height above ground level in feet. It is likely a good fit for a regression model,
    which predicts numeric values.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: There is no way of knowing with certainty whether the FAA Wildlife Strike data
    will support these specific use cases, but you won’t know until you try! Discovery
    is a key part of the process. First, you must identify features in the data that
    might have predictive value, and then train and test the machine learning models
    in Power BI. Only then will you know what types of predictions might be possible
    for your project.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, you explored the data available for your project and reviewed
    subsequent options for mapping data to the requirements of your stakeholders.
    You reviewed data architecture options to meet both business intelligence and
    ML requirements in Power BI and decided upon a hybrid approach that blends a star
    schema design with flattened data. You also formulated a plan to explore, analyze,
    design, build, and deploy your solution. Finally, you decided upon three use cases
    for predictive ML models in Power BI.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, you will ingest and prep data from the FAA Wildlife Strike
    database using Power Query within Power BI. You’ll deep dive into data characteristics,
    decide what is needed for your design, and build out a flexible foundation that
    will support both the current project and future iterations and changes. Your
    approach in Power Query will support both business intelligence analytics in Power
    BI and predictive analytics in Power BI ML.
  prefs: []
  type: TYPE_NORMAL
