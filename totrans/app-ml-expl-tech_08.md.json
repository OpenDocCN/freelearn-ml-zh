["```py\npip install shap\n```", "```py\n!pip install --upgrade pandas numpy matplotlib seaborn scikit-learn shap\n```", "```py\nimport shap\n```", "```py\nprint(f\"Shap version used: {shap.__version__}\")\n```", "```py\ndata = pd.read_csv('dataset/winequality-red.csv')\n```", "```py\ndata.head()\n```", "```py\ndata.info()\n```", "```py\nRangeIndex: 1599 entries, 0 to 1598\n```", "```py\nData columns (total 12 columns):\n```", "```py\n #   Column                Non-Null Count  Dtype  \n```", "```py\n---  ------                --------------  -----  \n```", "```py\n 0   fixed acidity         1599 non-null   float64\n```", "```py\n 1   volatile acidity      1599 non-null   float64\n```", "```py\n 2   citric acid           1599 non-null   float64\n```", "```py\n 3   residual sugar        1599 non-null   float64\n```", "```py\n 4   chlorides             1599 non-null   float64\n```", "```py\n 5   free sulfur dioxide   1599 non-null   float64\n```", "```py\n 6   total sulfur dioxide  1599 non-null   float64\n```", "```py\n 7   density               1599 non-null   float64\n```", "```py\n 8   pH                    1599 non-null   float64\n```", "```py\n 9   sulphates             1599 non-null   float64\n```", "```py\n 10  alcohol               1599 non-null   float64\n```", "```py\n 11  quality               1599 non-null   int64  \n```", "```py\ndtypes: float64(11), int64(1)\n```", "```py\nmemory usage: 150.0 KB\n```", "```py\nsns.displot(\n```", "```py\n    data=data.isna().melt(value_name=\"missing\"),\n```", "```py\n    y=\"variable\",\n```", "```py\n    hue=\"missing\",\n```", "```py\n    multiple=\"fill\",\n```", "```py\n    aspect=1.5\n```", "```py\n)\n```", "```py\nplt.show()\n```", "```py\nfeatures = data.drop(columns=['quality'])\n```", "```py\nlabels = data['quality']\n```", "```py\n# Dividing the data into training-test set with 80:20 split ratio\n```", "```py\nx_train,x_test,y_train,y_test = train_test_split(\n```", "```py\n    features,labels,test_size=0.2, random_state=123)\n```", "```py\nfrom sklearn.ensemble import RandomForestRegressor\n```", "```py\nmodel = RandomForestRegressor(n_estimators=2000, \n```", "```py\n                              max_depth=30, \n```", "```py\n                              random_state=123)\n```", "```py\nmodel.fit(x_train, y_train)\n```", "```py\nmodel.score(x_test, y_test)\n```", "```py\nexplainer = shap.Explainer(model)\n```", "```py\nshap_values = explainer(x_test)\n```", "```py\nplt.title('Feature Importance using SHAP')\n```", "```py\nshap.plots.bar(shap_values, show=True, max_display=12)\n```", "```py\nexpected_value = explainer.expected_value\n```", "```py\nshap_values = explainer.shap_values(x_test)[0]\n```", "```py\nshap.decision_plot(expected_value, shap_values, x_test)\n```", "```py\nexplainer = shap.TreeExplainer(model)\n```", "```py\nshap_values = explainer.shap_values(x_test)\n```"]