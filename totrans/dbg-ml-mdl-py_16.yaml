- en: '16'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '16'
- en: Security and Privacy in Machine Learning
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 机器学习中的安全和隐私
- en: In the digital world that we live in, preserving the privacy of users’ data
    and their personal information, as well as ensuring the security of their digital
    information and assets, are of great importance in technology development. This
    is not an exception for technologies built on top of machine learning models.
    We briefly talked about this topic in [*Chapter 3*](B16369_03.xhtml#_idTextAnchor119),
    *Debugging* *t**oward Responsible AI*. In this chapter, we will provide you with
    more details to help you start your journey in learning more about privacy preservation
    and ensuring security in developing machine learning models and technologies.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们生活的数字世界中，保护用户数据和个人隐私，以及确保他们的数字信息和资产的安全，在技术发展中具有重要意义。这对于建立在机器学习模型之上的技术也不例外。我们在[*第3章*](B16369_03.xhtml#_idTextAnchor119)中简要讨论了这一主题，即*调试*
    *向负责任的人工智能*迈进。在本章中，我们将为您提供更多详细信息，以帮助您开始学习更多关于在开发机器学习模型和技术中保护隐私和确保安全的知识。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Encryption techniques and their use in machine learning
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 加密技术及其在机器学习中的应用
- en: Homomorphic encryption
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 同态加密
- en: Differential privacy
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 差分隐私
- en: Federated learning
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 联邦学习
- en: By the end of this chapter, you will understand the challenges in preserving
    privacy and ensuring security in machine learning settings, and learn a few techniques
    to tackle those challenges.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 到本章结束时，您将了解在机器学习环境中保护隐私和确保安全所面临的挑战，并学习一些应对这些挑战的技术。
- en: Technical requirements
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'The following requirements are applicable to this chapter as they will help
    you better understand the concepts, be able to use them in your projects, and
    practice with the provided code:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 以下要求适用于本章，因为它们将帮助您更好地理解概念，能够在项目中使用它们，并使用提供的代码进行实践：
- en: 'Python library requirements:'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python库要求：
- en: '`numpy` >= 1.22.4'
  id: totrans-12
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`numpy` >= 1.22.4'
- en: '`matplotlib` >= 3.7.1'
  id: totrans-13
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`matplotlib` >= 3.7.1'
- en: '`tenseal` >= 0.3.14'
  id: totrans-14
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`tenseal` >= 0.3.14'
- en: '`pycryptodome` = 3.18.0'
  id: totrans-15
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pycryptodome` = 3.18.0'
- en: '`pycryptodomex` = 3.18.0'
  id: totrans-16
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pycryptodomex` = 3.18.0'
- en: If you are a Mac user and run into issues with `tenseal` installation, you can
    install it directly by cloning its repository, as explained at [https://github.com/OpenMined/TenSEAL/issues](https://github.com/OpenMined/TenSEAL/issues).
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您是Mac用户并且遇到`tenseal`安装问题，您可以按照[https://github.com/OpenMined/TenSEAL/issues](https://github.com/OpenMined/TenSEAL/issues)中解释的方法直接克隆其存储库进行安装。
- en: The code files for this chapter are available on GitHub at [https://github.com/PacktPublishing/Debugging-Machine-Learning-Models-with-Python/tree/main/Chapter16](https://github.com/PacktPublishing/Debugging-Machine-Learning-Models-with-Python/tree/main/Chapter16).
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的代码文件可在GitHub上找到，网址为[https://github.com/PacktPublishing/Debugging-Machine-Learning-Models-with-Python/tree/main/Chapter16](https://github.com/PacktPublishing/Debugging-Machine-Learning-Models-with-Python/tree/main/Chapter16)。
- en: Encryption techniques and their use in machine learning
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 加密技术及其在机器学习中的应用
- en: 'We can use different encryption techniques to encrypt raw data, processed data
    for model training and inference, model parameters, or other sensitive information
    that needs to be secured. There is a term called *key*, usually a string of numbers
    or letters, which is important in the majority of encryption techniques. The key
    gets processed by encryption algorithms for encoding and decoding data. There
    are several encryption techniques, some of which include the following (Bhanot
    et al., 2015; Dibas et al., 2021):'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用不同的加密技术来加密原始数据、用于模型训练和推理的处理数据、模型参数或需要保护的其他敏感信息。有一个术语叫做*密钥*，通常是一串数字或字母，在大多数加密技术中都很重要。密钥通过加密算法进行编码和解码数据的处理。有几种加密技术，其中一些如下（Bhanot等人，2015；Dibas等人，2021）：
- en: '**Advanced Encryption Standard** (**AES**): AES is one of the strongest encryption
    algorithms that protects data. AES accepts different key sizes: 128, 192, or 256
    bits.'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**高级加密标准**（**AES**）：AES是保护数据的最强大的加密算法之一。AES接受不同的密钥大小：128位、192位或256位。'
- en: '**Rivest-Shamir-Adleman (RSA) security**: RSA, which is one of the most secure
    encryption algorithms, is a public-key encryption algorithm that is widely used
    for secure data transmission.'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Rivest-Shamir-Adleman (RSA) 安全性**：RSA是安全性最高的加密算法之一，是一种广泛用于安全数据传输的公钥加密算法。'
- en: '**Triple Data Encryption Standard (DES)**: Triple DES is an encryption method
    that uses a 56-bit key to encrypt data blocks.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**三重数据加密标准 (DES)**：三重DES是一种使用56位密钥加密数据块的加密方法。'
- en: '**Blowfish**: Blowfish is a symmetric-key encryption technique used as an alternative
    to the DES encryption algorithm. Blowfish is fast and highly effective for data
    encryption. It splits data, for example, strings and messages, into blocks of
    64 bits and encrypts them individually.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Blowfish**：Blowfish是一种对称密钥加密技术，用作DES加密算法的替代方案。Blowfish速度快，在数据加密方面非常有效。它将数据，例如字符串和消息，分割成64位的块，并分别加密它们。'
- en: '**Twofish**: Twofish, which is Blowfish’s successor, is a symmetric encryption
    algorithm that deciphers 128-bit data blocks.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Twofish**：Twofish是Blowfish的后继者，是一种对称加密算法，可以解密128位数据块。'
- en: Next, we are going to use Python to practice the use of AES for data encryption,
    which is one of the most common encryption techniques.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将使用Python来练习使用AES进行数据加密，这是最常见的加密技术之一。
- en: Implementing AES encryption in Python
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在Python中实现AES加密
- en: Here we want to practice with AES for data encryption in Python. The sole purpose
    of this practice is to help you better understand how you can benefit from Python
    for data encryption, how easy it is to encrypt and decrypt data in Python, and
    how you can benefit from it to preserve data privacy and ensure security in machine
    learning settings.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们希望通过Python练习AES在数据加密中的应用。这次练习的唯一目的是帮助您更好地了解如何从Python中受益于数据加密，以及如何在Python中加密和解密数据是多么容易，以及您如何从中受益以保护数据隐私并在机器学习环境中确保安全性。
- en: 'We first import `Cryptodome.Cipher.AES()` for ciphering (encrypting) and deciphering
    (decrypting) and `Cryptodome.Random.get_random_bytes()` for key generation:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先导入`Cryptodome.Cipher.AES()`进行加密（加密）和解密，以及`Cryptodome.Random.get_random_bytes()`用于密钥生成：
- en: '[PRE0]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'We can use AES for encryption of text such as `My name is Ali` or other types
    of information. Here, we want to use it for encrypting what is called SMILES,
    which is a sequence representing a chemical compound. For example, `CC(=O)NC1=CC=C(C=C1)O`
    represents a famous drug called Acetaminophen (source: [https://pubchem.ncbi.nlm.nih.gov/compound/Acetaminophen](https://pubchem.ncbi.nlm.nih.gov/compound/Acetaminophen)):'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用AES加密文本，如`我的名字是Ali`或其他类型的信息。在这里，我们希望用它来加密所谓的SMILES，这是一种表示化学化合物的序列。例如，`CC(=O)NC1=CC=C(C=C1)O`代表一种著名的药物叫做对乙酰氨基酚（来源：[https://pubchem.ncbi.nlm.nih.gov/compound/Acetaminophen](https://pubchem.ncbi.nlm.nih.gov/compound/Acetaminophen)）：
- en: '[PRE1]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'We can then decrypt and securely load the data back if we have the key:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们有密钥，我们可以解密并安全地加载数据：
- en: '[PRE2]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: This regenerates the sequence we encrypted, `CC(=O)NC1=CC=C(C=C1)O`.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 这将重新生成我们加密的序列`CC(=O)NC1=CC=C(C=C1)O`。
- en: In this example, AES helped us to encrypt information about drugs, which could
    be important for pharmaceutical and biotechnology companies in the process of
    developing a new drug. However, you can use AES via Python to encrypt other types
    of data.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，AES帮助我们加密有关药物的信息，这对于制药和生物技术公司在开发新药的过程中可能很重要。然而，您可以通过Python使用AES加密其他类型的数据。
- en: Next, we want to talk about another technique called homomorphic encryption.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将讨论另一种称为同态加密的技术。
- en: Homomorphic encryption
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 同态加密
- en: Another technique that lets us implement computations on encrypted data is called
    **homomorphic encryption**. This capability is helpful in machine learning settings,
    for example, in using a model for inference on encrypted data without the need
    for decryption. However, implementing fully homomorphic encryption can be complex,
    computationally expensive, and memory-inefficient (Armknecht et al., 2015; Gentry
    et al., 2009; Yousuf et al., 2020).
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种允许我们在加密数据上执行计算的技术称为**同态加密**。这种能力在机器学习环境中非常有用，例如，在不需要解密的情况下使用模型对加密数据进行推理。然而，实现全同态加密可能很复杂，计算成本高，内存效率低（Armknecht等人，2015；Gentry等人，2009；Yousuf等人，2020）。
- en: 'There are a few Python libraries that can help us practice with homomorphic
    encryption schemes, such as the following:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 有几个Python库可以帮助我们练习同态加密方案，如下所示：
- en: '`TenSEAL` ([https://github.com/OpenMined/TenSEAL](https://github.com/OpenMined/TenSEAL)),
    which can be integrated with PyTorch and NumPy'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TenSEAL` ([https://github.com/OpenMined/TenSEAL](https://github.com/OpenMined/TenSEAL))，它可以与PyTorch和NumPy集成'
- en: '`PySEAL` ([https://github.com/Huelse/PySEAL](https://github.com/Huelse/PySEAL))'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`PySEAL` ([https://github.com/Huelse/PySEAL](https://github.com/Huelse/PySEAL))'
- en: '`HElib` (https://github.com/homenc/HElib)'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`HElib` (https://github.com/homenc/HElib)'
- en: Let’s see a simple example of using homomorphic encryption using TenSEAL.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看使用TenSEAL进行同态加密的一个简单示例。
- en: 'We first import the `TenSEAL` library and generate a `context` object using
    `tenseal.context()`. The `context` object generates and stores the necessary keys
    required by an encrypted computation:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先导入`TenSEAL`库，并使用`tenseal.context()`生成一个`context`对象。`context`对象生成并存储加密计算所需的必要密钥：
- en: '[PRE3]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The `poly_modulus_degree` parameter is used to determine the degree of the polynomial
    modulus, which is a polynomial with integer coefficients. The `plain_modulus`
    parameter is used to specify the modulus for encoding plaintext messages into
    polynomials that can be encrypted and processed homomorphically. If the `plain_modulus`
    parameter is too small, the messages may overflow and cause incorrect results,
    while if it is too large, the ciphertexts may become too large and slow down the
    homomorphic operations.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '`poly_modulus_degree`参数用于确定多项式模的次数，这是一个具有整数系数的多项式。`plain_modulus`参数用于指定编码明文消息到可以加密和同态处理的多项式的模数。如果`plain_modulus`参数太小，消息可能会溢出并导致错误的结果，而如果太大，密文可能会变得过大并减慢同态操作的速度。'
- en: In the previous code, we used the **Brakerski-Fan-Vercauteren** (**BFV**) scheme.
    BFV is a homomorphic encryption scheme that supports integer arithmetic. It consists
    of different polynomial-time algorithms for generating the public and secret keys,
    encrypting a plaintext message, decrypting a ciphertext message, adding and subtracting
    two ciphertexts, and multiplying two ciphertexts. The ciphertext is encrypted
    information that is unreadable by us or a computer without the proper cipher,
    or algorithm for performing encryption or decryption, to decrypt it.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在之前的代码中，我们使用了**Brakerski-Fan-Vercauteren**（**BFV**）方案。BFV是一种支持整数算术的同态加密方案。它包括不同的多项式时间算法，用于生成公钥和私钥、加密明文消息、解密密文消息、对两个密文进行加法和减法以及乘法运算。密文是加密信息，在没有适当的密钥或执行加密或解密算法的情况下，我们或计算机无法读取，或者算法无法解密它。
- en: 'Now we define a list of three numbers:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们定义一个包含三个数字的列表：
- en: '[PRE4]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'We then implement decryption using the `context` object defined before:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们使用之前定义的`context`对象实现解密：
- en: '[PRE5]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'We then first implement an operation process as follows:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们首先实现以下操作过程：
- en: '[PRE6]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The resulting `add_result` list would be `[51, 62, 73]`, which is an element-wise
    summation of the original list of values `[50, 60, 70]` and `[1,` `2, 3]`.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 生成的`add_result`列表将是`[51, 62, 73]`，这是原始值列表`[50, 60, 70]`和`[1, 2, 3]`逐元素求和的结果。
- en: Although homomorphic encryption, or other encryption techniques, seems to be
    very secure, it still requires access to secret keys, for example, on the cloud
    server, which could lead to security concerns. There are solutions to reduce such
    risks, for example, by using key management services such as AWS KMS ([https://aws.amazon.com/kms/](https://aws.amazon.com/kms/))
    or **Multi-Factor** **Authentication** (**MFA**).
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然同态加密或其他加密技术看起来非常安全，但它仍然需要访问密钥，例如在云服务器上，这可能导致安全担忧。有解决方案可以降低这种风险，例如使用密钥管理服务，如AWS
    KMS（[https://aws.amazon.com/kms/](https://aws.amazon.com/kms/)) 或**多因素认证**（**MFA**）。
- en: Next, we will briefly review **differential privacy** (**DP**) as a technique
    for preserving the privacy of individual data points.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将简要回顾**差分隐私**（**DP**）作为一种保护单个数据点隐私的技术。
- en: Differential privacy
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 差分隐私
- en: The objective of **differential privacy** is to ensure that the removal or addition
    of individual data points does not affect the outcome of the modeling. For example,
    by adding random noise to a normal distribution, it tries to make the features
    of individual data points obscure. The effect of noise in learning could be eliminated
    based on the *law of large numbers* (Dekking et al., 2005) if a large number of
    data points is accessible. To better understand this concept, we want to generate
    a random list of numbers and add noise to them from a normal distribution to help
    you better understand why this technique works. In this process, we will also
    define some widely used technical terminology.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '**差分隐私**的目标是确保删除或添加单个数据点不会影响建模的结果。例如，通过向正态分布添加随机噪声，它试图使单个数据点的特征变得模糊。如果可以访问大量数据点，基于**大数定律**（Dekking
    et al., 2005），可以消除噪声在学习中的影响。为了更好地理解这个概念，我们想要生成一个随机数字列表，并从正态分布中向它们添加噪声，以帮助您更好地理解为什么这种技术有效。在这个过程中，我们还将定义一些广泛使用的技术术语。'
- en: 'We first define a function called `gaussian_add_noise()` to add *Gaussian*
    noise to a query list of values:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先定义一个名为`gaussian_add_noise()`的函数，用于向查询值列表添加**高斯**噪声：
- en: '[PRE7]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'In the previous function, we used `sensitivity` and `epsilon` as input arguments
    of the function, whose meaning we can simplify as follows:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的函数中，我们使用了`sensitivity`和`epsilon`作为函数的输入参数，其意义可以简化如下：
- en: '`sensitivity`: The level of noise that is needed in the DP mechanism get determined
    by sensitivity parametrizes. Sensitivity tells us about the impact of a change
    on the result of the query. Larger `sensitivity` values result in better privacy
    but a less accurate response.'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sensitivity`: DP机制中所需的噪声水平由灵敏度参数确定。灵敏度告诉我们查询结果对变化的影响。较大的`sensitivity`值将导致更好的隐私，但响应的准确性较低。'
- en: '`epsilon (Privacy budget)`: The privacy budget is a parameter that limits the
    extent of the deviation between the noisy and query data. A smaller `epsilon`
    value will result in better privacy but a less accurate response.'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`epsilon (隐私预算)`: 隐私预算是一个参数，它限制了噪声数据和查询数据之间偏差的程度。较小的`epsilon`值将导致更好的隐私，但响应的准确性较低。'
- en: 'We then use a simple `for` loop to generate random values following a normal
    distribution as query values and then add noise to them using the defined `gaussian_mechanism()`
    function:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们使用一个简单的`for`循环来生成符合正态分布的随机值作为查询值，然后使用定义的`gaussian_mechanism()`函数向它们添加噪声：
- en: '[PRE8]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: The resulting noisy and query distributions are very similar, with an average
    of 0.78 and 0.82 and a standard deviation of 99.32 and 99.67, respectively. *Figure
    16**.1* shows the scatter plot of the two lists of values. You can change the
    distance between the query and noisy values by playing with the `sensitivity`
    and `epsilon` parameters.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 结果的噪声和查询分布非常相似，平均值为0.78和0.82，标准差分别为99.32和99.67。*图16**.1*显示了这两组值的散点图。你可以通过调整`sensitivity`和`epsilon`参数来改变查询值和噪声值之间的距离。
- en: '![Figure 16.1 – Comparison of the values of variables before and after noise
    addition](img/B16369_16_01.jpg)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![图16.1 – 添加噪声前后变量值的比较](img/B16369_16_01.jpg)'
- en: Figure 16.1 – Comparison of the values of variables before and after noise addition
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 图16.1 – 添加噪声前后变量值的比较
- en: 'There are also Python libraries that you can use to implement DP, such as the
    following:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，还有一些Python库可以帮助你实现DP，如下所示：
- en: '`Diffprivlib`) ([https://github.com/IBM/differential-privacy-library](https://github.com/IBM/differential-privacy-library))'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Diffprivlib`) ([https://github.com/IBM/differential-privacy-library](https://github.com/IBM/differential-privacy-library))'
- en: '`PyDP` ([https://github.com/OpenMined/PyDP](https://github.com/OpenMined/PyDP))'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`PyDP`([https://github.com/OpenMined/PyDP](https://github.com/OpenMined/PyDP))'
- en: '`Opacus` ([https://github.com/pytorch/opacus](https://github.com/pytorch/opacus))'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Opacus`([https://github.com/pytorch/opacus](https://github.com/pytorch/opacus))'
- en: The last topic we want to introduce in this chapter is called **federated learning**,
    which helps us to go beyond privacy preservation for a central storage system.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 本章最后要介绍的主题被称为**联邦学习**，它帮助我们超越中央存储系统的隐私保护。
- en: Federated learning
  id: totrans-75
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 联邦学习
- en: '**Federated learning** (**FL**) relies on the idea of decentralizing learning,
    data analysis, and inference, therefore allowing the user data to be kept within
    individual devices or local databases (Kaissis et al., 2020; Yang et al., 2019).
    Through FL, we can benefit from the data of local devices and users, which cannot
    be stored in a centralized data storage system, to train and improve our machine
    learning models. As shown in *Figure 16**.2*, a local device or user can provide
    local data to update the global model and the model we are training and improve
    the central server. The global model then gets updated and improved and provides
    updated inferences to the local users and devices.'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '**联邦学习**（**FL**）依赖于去中心化学习、数据分析和解推理的想法，因此允许用户数据保持在单个设备或本地数据库中（Kaissis等人，2020年；Yang等人，2019年）。通过FL，我们可以从无法存储在集中式数据存储系统中的本地设备和用户数据中受益，以训练和改进我们的机器学习模型。如图*图16**.2*所示，本地设备或用户可以提供本地数据以更新全局模型和我们正在训练的模型，并改善中心服务器。然后全局模型得到更新和改进，并向本地用户和设备提供更新的推理。'
- en: '![Figure 16.2 – Schematic representation of updating a model using local data
    and feeding the global model back to the local devices and users](img/B16369_16_02.jpg)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![图16.2 – 使用本地数据更新模型并反馈全局模型到本地设备和用户的示意图](img/B16369_16_02.jpg)'
- en: Figure 16.2 – Schematic representation of updating a model using local data
    and feeding the global model back to the local devices and users
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 图16.2 – 使用本地数据更新模型并反馈全局模型到本地设备和用户的示意图
- en: 'There are several Python libraries you can benefit from in implementing FL,
    such as the following:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 在实现联邦学习（FL）时，你可以从以下Python库中受益：
- en: '`PySyft` (`https://github.com/OpenMined/PySyft`)'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`PySyft` (`https://github.com/OpenMined/PySyft`)'
- en: TensorFlow `Federated` ([https://www.tensorflow.org/federated](https://www.tensorflow.org/federated))
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: TensorFlow `Federated` ([https://www.tensorflow.org/federated](https://www.tensorflow.org/federated))
- en: '`FedML` ([https://github.com/FedML-AI/FedML](https://github.com/FedML-AI/FedML))'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`FedML` ([https://github.com/FedML-AI/FedML](https://github.com/FedML-AI/FedML))'
- en: '`Flower` ([https://github.com/adap/flower](https://github.com/adap/flower))'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Flower` ([https://github.com/adap/flower](https://github.com/adap/flower))'
- en: '`FATE` ([https://github.com/FederatedAI/FATE](https://github.com/FederatedAI/FATE))'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`FATE` ([https://github.com/FederatedAI/FATE](https://github.com/FederatedAI/FATE))'
- en: However, the challenge of using FL in practice is beyond programming or infrastructure
    design. In spite of this great alternative to storing user data locally, there
    are still ethical, legal, and business challenges in benefitting from FL in different
    applications. Healthcare is a great example of a domain where FL can benefit the
    most but legal and ethical challenges still exist, slowing down its implementation
    in practice. Many institutes, hospitals, pharmaceutical companies, and government
    agencies still require the data used for modeling, even through FL, to go through
    the usual ethics, legal, and business approval processes that exist for full access
    to the data, without the need for FL. However, there is hope that as FL algorithms
    and the associated infrastructure get better, agencies, hospitals, and institutions
    will also come up with solutions to benefit from this technique.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在实践中使用联邦学习的挑战超出了编程或基础设施设计。尽管这是存储用户数据本地化的绝佳替代方案，但在不同应用中从联邦学习中受益仍存在伦理、法律和商业挑战。医疗保健是一个联邦学习可以带来最大利益的领域，但法律和伦理挑战仍然存在，这减缓了其实际应用的实施。许多机构、医院、制药公司和政府机构仍然要求用于建模的数据，即使通过联邦学习，也需要经过通常用于完全访问数据的伦理、法律和商业审批流程。然而，随着联邦学习算法和相关基础设施的改进，机构、医院和机构也将提出解决方案，以利用这项技术。
- en: 'In addition to what we covered in this chapter on data privacy and security,
    you can review the important topics of attacks in machine learning settings in
    [*Chapter 3*](B16369_03.xhtml#_idTextAnchor119), *Debugging toward Responsible
    AI*. You can also check other resources such as the great article by Papernot
    et al., 2018 titled *Sok: Security and privacy in machine learning* to learn more
    about these important topics'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 除了本章中关于数据隐私和安全的讨论，你还可以在[*第3章*](B16369_03.xhtml#_idTextAnchor119) *向负责任的人工智能调试*中回顾机器学习设置中的重要攻击主题。你还可以检查其他资源，如Papernot等人2018年发表的优秀文章《Sok：机器学习中的安全和隐私》以了解更多关于这些重要主题的信息。
- en: Summary
  id: totrans-87
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, you learned about some of the most important concepts and techniques
    that help you in preserving privacy and ensuring security including data encryption
    techniques, homomorphic encryption, differential privacy, and federated learning.
    You learned how homomorphic encryption provides the possibility of different types
    of operation and machine learning inference compared to traditional data encryption
    techniques. You also learned how we can ensure data privacy by adding noise to
    the data, in differential privacy, or work with decentralized data and omit the
    need to transfer raw data, as in federated learning. You also practiced some of
    them in Python. This knowledge could be a starting point for you to learn about
    these concepts further and benefit from them in your machine learning projects.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你了解了一些帮助你保护隐私和确保安全的重要概念和技术，包括数据加密技术、同态加密、差分隐私和联邦学习。你学习了同态加密如何提供与传统数据加密技术相比不同类型操作和机器学习推理的可能性。你还学习了如何通过向数据添加噪声、在差分隐私中，或者与去中心化数据合作并省略传输原始数据的需求，如在联邦学习中，来确保数据隐私。你还在Python中实践了一些这些技术。这些知识可以成为你进一步了解这些概念并从你的机器学习项目中受益的起点。
- en: In the next chapter, you will learn about the importance of integrating human
    feedback into machine learning modeling and the techniques that will help you
    on this topic.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，你将了解将人类反馈整合到机器学习建模中的重要性以及有助于这一主题的技术。
- en: Questions
  id: totrans-90
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: Explain three encryption techniques that could help you in your machine learning
    projects.
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 解释三种可以帮助你在机器学习项目中使用的加密技术。
- en: What is the benefit of homomorphic encryption in a machine learning setting?
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在机器学习设置中，同态加密有什么好处？
- en: What is differential privacy?
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 什么是差分隐私？
- en: What are the non-technical challenges in the use of federated learning or differential
    privacy?
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用联邦学习或差分隐私时有哪些非技术挑战？
- en: References
  id: totrans-95
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考文献
- en: Shafahi, Ali, et al. “*Adversarial training for free!*.” *Advances in Neural
    Information Processing Systems* 32 (2019).
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Shafahi, Ali, 等人. “*免费对抗训练!*.” *神经信息处理系统进展* 32 (2019).
- en: 'Gaur, Shailendra Singh, Hemanpreet Singh Kalsi, and Shivani Gautam. “*A Comparative
    Study and Analysis of Cryptographic Algorithms: RSA, DES, AES, BLOWFISH, 3-DES,*
    *and TWOFISH*.”'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Gaur, Shailendra Singh, Hemanpreet Singh Kalsi, 和 Shivani Gautam. “*加密算法的比较研究和分析：RSA,
    DES, AES, BLOWFISH, 3-DES, 和 TWOFISH*。”
- en: 'Bhanot, Rajdeep, and Rahul Hans. “*A review and comparative analysis of various
    encryption algorithms*.” *International Journal of Security and Its Applications*
    9.4 (2015): 289-306.'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Bhanot, Rajdeep, 和 Rahul Hans. “*各种加密算法的综述和比较分析*.” *国际安全与应用杂志* 9.4 (2015):
    289-306.'
- en: 'Dibas, Hasan, and Khair Eddin Sabri. “*A comprehensive performance empirical
    study of the symmetric algorithms: AES, 3DES, Blowfish and Twofish*.” *International
    Conference on Information Technology (ICIT)*. IEEE (2021).'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Dibas, Hasan, 和 Khair Eddin Sabri. “*对称算法（AES, 3DES, Blowfish 和 Twofish）的全面性能实证研究*.”
    *信息技术国际会议 (ICIT)*. IEEE (2021).
- en: Armknecht, Frederik, et al. “*A guide to fully homomorphic encryption*.” Cryptology
    ePrint Archive (2015).
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Armknecht, Frederik, 等人. “*完全同态加密指南*.” 密码学电子档案 (2015).
- en: Gentry, Craig. *A fully homomorphic encryption scheme*. Stanford University,
    2009.
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Gentry, Craig. *全同态加密方案*. 斯坦福大学，2009.
- en: 'Yousuf, Hana, et al. “*Systematic review on fully homomorphic encryption scheme
    and its application*.” *Recent Advances in Intelligent Systems and Smart Applications*
    (2020): 537-551.'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Yousuf, Hana, 等人. “*关于全同态加密方案及其应用的系统综述*.” *智能系统和智能应用最新进展* (2020): 537-551.'
- en: 'Yang, Qiang, et al. “*Federated machine learning: Concept and applications*.”
    *ACM Transactions on Intelligent Systems and Technology (TIST)* 10.2 (2019): 1-19.'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Yang, Qiang, 等人. “*联邦机器学习：概念和应用*.” *ACM智能系统与技术交易 (TIST)* 10.2 (2019): 1-19.'
- en: Abadi, Martin, et al. “*Deep learning with differential privacy*.” *Proceedings
    of the 2016 ACM SIGSAC conference on computer and communications* *security* (2016).
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Abadi, Martin, 等人. “*具有差分隐私的深度学习*.” *2016年ACM SIGSAC计算机和通信安全会议论文集* (2016).
- en: 'Dekking, Frederik Michel, et al. *A Modern Introduction to Probability and
    Statistics: Understanding why and how*. Vol. 488\. London: Springer (2005).'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Dekking, Frederik Michel, 等人. *现代概率与统计导论：理解为什么以及如何*. 第488卷. 伦敦：Springer (2005).
- en: 'Kaissis, Georgios A., et al. “*Secure, privacy-preserving and federated machine
    learning in medical imaging*.” *Nature Machine Intelligence* 2.6 (2020): 305-311.'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Kaissis, Georgios A., 等人. “*医学图像中的安全、隐私保护和联邦机器学习*.” *自然机器智能* 2.6 (2020): 305-311.'
- en: 'Yang, Qiang, et al. “*Federated machine learning: Concept and applications*.”
    *ACM Transactions on Intelligent Systems and Technology (TIST)* 10.2 (2019): 1-19.'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Yang, Qiang, 等人. “*联邦机器学习：概念和应用*.” *ACM智能系统与技术交易 (TIST)* 10.2 (2019): 1-19.'
- en: 'Papernot, Nicolas, et al. “*Sok: Security and privacy in machine learning*.”
    *IEEE European Symposium on Security and Privacy (EuroS&P)*. IEEE (2018).'
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Papernot, Nicolas, 等人. “*机器学习中的安全和隐私（Sok）*.” *IEEE欧洲安全与隐私研讨会 (EuroS&P)*. IEEE
    (2018).
