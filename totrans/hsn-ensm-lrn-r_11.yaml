- en: Chapter 11. Ensembling Time Series Models
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第11章. 时间序列模型的集成
- en: All of the models developed in this book so far have dealt with situations that
    arise when observations are independent of each other. The example of overseas
    visitors explains a time series in which the observations are dependent on the
    previously observed data. In a brief discussion of this example, it was established
    that it is necessary to develop time series models. Since the time series is sequential
    in nature, the time stamp may be displayed in nanoseconds, seconds, minutes, hours,
    days, or months.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本书迄今为止开发的模型都处理了观测值相互独立的情况。海外游客的例子解释了一个时间序列，其中观测值依赖于先前观测到的数据。在简要讨论这个例子时，我们确定有必要开发时间序列模型。由于时间序列具有序列性质，时间戳可能以纳秒、秒、分钟、小时、天或月为单位显示。
- en: This chapter will open with a quick review of the important concepts of time
    series in autocorrelation and partial autocorrelation functions, as well as fitted
    model assessment measures. Much like the classification and regression models,
    a host of methods are available for analyzing time series data. An important class
    of time series models in seasonal decomposition includes LOESS (STL), exponential
    smoothing state space models (ets), Box-Jenkins (ARIMA) models, and autoregressive
    neural network models. These will be discussed and illustrated in the following
    section. The ensembling of time series models will be illustrated in the final
    section of the chapter.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将首先简要回顾时间序列自相关和偏自相关函数的重要概念，以及拟合模型评估指标。与分类和回归模型类似，有许多方法可用于分析时间序列数据。季节分解中的时间序列模型的一个重要类别包括LOESS（STL）、指数平滑状态空间模型（ets）、Box-Jenkins（ARIMA）模型和自回归神经网络模型。这些将在下一节中进行讨论和说明。本章的最后部分将展示时间序列模型的集成。
- en: 'The main areas that will be covered in this chapter include the following:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主要内容：
- en: Time series datasets
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 时间序列数据集
- en: Time series visualization
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 时间序列可视化
- en: Core concepts
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 核心概念
- en: Time series models
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 时间序列模型
- en: Bagging time series
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 时间序列的Bagging
- en: Ensembling time series models
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 集成时间序列模型
- en: Technical requirements
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'In this chapter, we will be using the following R libraries:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将使用以下R库：
- en: '`forecast`'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`forecast`'
- en: '`forecastHybrid`'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`forecastHybrid`'
- en: Time series datasets
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 时间序列数据集
- en: Time series data is structurally different from the data discussed up until
    now. A glimpse of time series data was seen in *Overseas Visitor* in *section
    1* of [Chapter 1](part0012_split_000.html#BE6O2-2006c10fab20488594398dc4871637ee
    "Chapter 1. Introduction to Ensemble Techniques"), *Introduction to Ensemble Techniques*,
    and the bootstrapping of the time series models was briefly touched on in [Chapter
    2](part0018_split_000.html#H5A41-2006c10fab20488594398dc4871637ee "Chapter 2. Bootstrapping"),
    *Bootstrapping*. The complexity that arises in the analysis of time series data
    is that the observations are not independent and, consequently, we need to specify
    the dependence. Box et al. (2015) is the benchmark book for the statistical analysis
    of time series, and its first edition was published in 1970\. The class of models
    invented and popularized in Box and Jenkins is the popular autoregressive integrated
    moving average, famously abbreviated as ARIMA. This is also often known as the
    Box-Jenkins model.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 时间序列数据在结构上与之前讨论的数据不同。在[第1章](part0012_split_000.html#BE6O2-2006c10fab20488594398dc4871637ee
    "第1章. 集成技术简介")的*海外游客*部分1中，以及[第1章](https://wiki.example.org/feynmans_learning_method)的*集成技术简介*中，我们看到了时间序列数据的一瞥。在[第2章](part0018_split_000.html#H5A41-2006c10fab20488594398dc4871637ee
    "第2章. 重抽样")的*重抽样*中，时间序列模型的重抽样被简要提及。分析时间序列数据时产生的复杂性在于，观测值不是独立的，因此我们需要指定依赖关系。Box等人（2015年）的《时间序列统计分析基准书》首次于1970年出版。Box和Jenkins发明并普及的模型类别是流行的自回归积分移动平均，通常缩写为ARIMA。这也常被称为Box-Jenkins模型。
- en: '*Table 1* summarizes twenty-one time series datasets. The Length column gives
    the number of observations/data points of the series, while the **Frequency**
    column gives the periodicity of the time series, and the remaining six columns
    are simply the summaries obtained by applying the summary function to a numeric
    object. The first column, of course, gives the names of the datasets as they are
    available in R, and hence we have not changed the cases, upper or lower. The numbers
    of observations in the datasets range from 19 to 7980.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '*表1*总结了二十一个时间序列数据集。长度列给出了序列的观测值/数据点的数量，而频率列给出了时间序列的周期性，其余六列是通过对数值对象应用汇总函数得到的总结。第一列，当然，给出了数据集在R中的名称，因此我们没有改变大小写。数据集中的观测值数量从19到7980不等。'
- en: But what does frequency or periodicity mean? In a dataset which includes periodicity,
    the associated time index gets repeated. For instance, we might have yearly, quarterly,
    monthly, or weekly data, and thus, in the middle two cases, the frequency will
    be **4** and **12** respectively. The frequency need not be an integer and can
    also be a fractional value. For example, carcinogenesis tests will have values
    in nanoseconds. The summary of the time series data is simply the result of applying
    the summary function to a numeric dataset. Consequently, we implicitly assume
    that time series data is numeric. The variation as seen in the summaries also
    shows that different datasets will require different handling. A quick introduction
    to a time series application can be found in Chapter 10 of Tattar et al. (2017).
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 但频率或周期性究竟是什么意思呢？在一个包含周期性的数据集中，相关的时间索引会被重复。例如，我们可能会有年度、季度、月度或周度数据，因此，在后两种情况下，频率将分别是**4**和**12**。频率不一定是整数，也可以是分数值。例如，致癌性测试将具有纳秒值。时间序列数据的总结就是将汇总函数应用于数值数据集的结果。因此，我们隐含地假设时间序列数据是数值的。总结中看到的变异也表明，不同的数据集将需要不同的处理。Tattar等人（2017）的第10章中可以找到时间序列应用的简要介绍。
- en: 'A description of the datasets used in this chapter can be found in the following
    table:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 本章所使用的数据集的描述可以在下表中找到：
- en: '| Dataset | Length | Frequency | Minimum | Q1 | Median | Mean | Q3 | Maximum
    |'
  id: totrans-19
  prefs: []
  type: TYPE_TB
  zh: '| Dataset | Length | Frequency | Minimum | Q1 | Median | Mean | Q3 | Maximum
    |'
- en: '| --- | --- | --- | --- | --- | --- | --- | --- | --- |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- | --- | --- | --- | --- |'
- en: '| `AirPassengers` | 144 | 12 | 104.00 | 180.00 | 265.50 | 280.30 | 360.50 |
    622.00 |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '| `AirPassengers` | 144 | 12 | 104.00 | 180.00 | 265.50 | 280.30 | 360.50 |
    622.00 |'
- en: '| `BJsales` | 150 | 1 | 198.60 | 212.58 | 220.65 | 229.98 | 254.68 | 263.30
    |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '| `BJsales` | 150 | 1 | 198.60 | 212.58 | 220.65 | 229.98 | 254.68 | 263.30
    |'
- en: '| `JohnsonJohnson` | 84 | 4 | 0.44 | 1.25 | 3.51 | 4.80 | 7.13 | 16.20 |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| `JohnsonJohnson` | 84 | 4 | 0.44 | 1.25 | 3.51 | 4.80 | 7.13 | 16.20 |'
- en: '| `LakeHuron` | 98 | 1 | 575.96 | 578.14 | 579.12 | 579.00 | 579.88 | 581.86
    |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '| `LakeHuron` | 98 | 1 | 575.96 | 578.14 | 579.12 | 579.00 | 579.88 | 581.86
    |'
- en: '| `Nile` | 100 | 1 | 456.00 | 798.50 | 893.50 | 919.35 | 1032.50 | 1370.00
    |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
  zh: '| `Nile` | 100 | 1 | 456.00 | 798.50 | 893.50 | 919.35 | 1032.50 | 1370.00
    |'
- en: '| `UKgas` | 108 | 4 | 84.80 | 153.30 | 220.90 | 337.63 | 469.90 | 1163.90 |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '| `UKgas` | 108 | 4 | 84.80 | 153.30 | 220.90 | 337.63 | 469.90 | 1163.90 |'
- en: '| `UKDriverDeaths` | 192 | 12 | 1057.00 | 1461.75 | 1631.00 | 1670.31 | 1850.75
    | 2654.00 |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
  zh: '| `UKDriverDeaths` | 192 | 12 | 1057.00 | 1461.75 | 1631.00 | 1670.31 | 1850.75
    | 2654.00 |'
- en: '| `USAccDeaths` | 72 | 12 | 6892.00 | 8089.00 | 8728.50 | 8788.79 | 9323.25
    | 11317.00 |'
  id: totrans-28
  prefs: []
  type: TYPE_TB
  zh: '| `USAccDeaths` | 72 | 12 | 6892.00 | 8089.00 | 8728.50 | 8788.79 | 9323.25
    | 11317.00 |'
- en: '| `WWWusage` | 100 | 1 | 83.00 | 99.00 | 138.50 | 137.08 | 167.50 | 228.00
    |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
  zh: '| `WWWusage` | 100 | 1 | 83.00 | 99.00 | 138.50 | 137.08 | 167.50 | 228.00
    |'
- en: '| `airmiles` | 24 | 1 | 412.00 | 1580.00 | 6431.00 | 10527.83 | 17531.50 |
    30514.00 |'
  id: totrans-30
  prefs: []
  type: TYPE_TB
  zh: '| `airmiles` | 24 | 1 | 412.00 | 1580.00 | 6431.00 | 10527.83 | 17531.50 |
    30514.00 |'
- en: '| `austres` | 89 | 4 | 13067.30 | 14110.10 | 15184.20 | 15273.45 | 16398.90
    | 17661.50 |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
  zh: '| `austres` | 89 | 4 | 13067.30 | 14110.10 | 15184.20 | 15273.45 | 16398.90
    | 17661.50 |'
- en: '| `co2` | 468 | 12 | 313.18 | 323.53 | 335.17 | 337.05 | 350.26 | 366.84 |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '| `co2` | 468 | 12 | 313.18 | 323.53 | 335.17 | 337.05 | 350.26 | 366.84 |'
- en: '| `discoveries` | 100 | 1 | 0.00 | 2.00 | 3.00 | 3.10 | 4.00 | 12.00 |'
  id: totrans-33
  prefs: []
  type: TYPE_TB
  zh: '| `discoveries` | 100 | 1 | 0.00 | 2.00 | 3.00 | 3.10 | 4.00 | 12.00 |'
- en: '| `lynx` | 114 | 1 | 39.00 | 348.25 | 771.00 | 1538.02 | 2566.75 | 6991.00
    |'
  id: totrans-34
  prefs: []
  type: TYPE_TB
  zh: '| `lynx` | 114 | 1 | 39.00 | 348.25 | 771.00 | 1538.02 | 2566.75 | 6991.00
    |'
- en: '| `nhtemp` | 60 | 1 | 47.90 | 50.58 | 51.20 | 51.16 | 51.90 | 54.60 |'
  id: totrans-35
  prefs: []
  type: TYPE_TB
  zh: '| `nhtemp` | 60 | 1 | 47.90 | 50.58 | 51.20 | 51.16 | 51.90 | 54.60 |'
- en: '| `nottem` | 240 | 12 | 31.30 | 41.55 | 47.35 | 49.04 | 57.00 | 66.50 |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '| `nottem` | 240 | 12 | 31.30 | 41.55 | 47.35 | 49.04 | 57.00 | 66.50 |'
- en: '| `presidents` | 120 | 4 | 23.00 | 46.00 | 59.00 | 56.31 | 69.00 | 87.00 |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '| `presidents` | 120 | 4 | 23.00 | 46.00 | 59.00 | 56.31 | 69.00 | 87.00 |'
- en: '| `treering` | 7980 | 1 | 0.00 | 0.84 | 1.03 | 1.00 | 1.20 | 1.91 |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '| `treering` | 7980 | 1 | 0.00 | 0.84 | 1.03 | 1.00 | 1.20 | 1.91 |'
- en: '| `gas` | 476 | 12 | 1646.00 | 2674.75 | 16787.50 | 21415.27 | 38628.50 | 66600.00
    |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '| `气体` | 476 | 12 | 1646.00 | 2674.75 | 16787.50 | 21415.27 | 38628.50 | 66600.00
    |'
- en: '| `uspop` | 19 | 0.1 | 3.93 | 15.00 | 50.20 | 69.77 | 114.25 | 203.20 |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
  zh: '| `uspop` | 19 | 0.1 | 3.93 | 15.00 | 50.20 | 69.77 | 114.25 | 203.20 |'
- en: '| `sunspots` | 2820 | 12 | 0.00 | 15.70 | 42.00 | 51.27 | 74.93 | 253.80 |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
  zh: '| `太阳黑子` | 2820 | 12 | 0.00 | 15.70 | 42.00 | 51.27 | 74.93 | 253.80 |'
- en: 'Table 1: Time Series Datasets in R'
  id: totrans-42
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 表1：R中的时间序列数据集
- en: AirPassengers
  id: totrans-43
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: AirPassengers
- en: The `AirPassengers` dataset contains the monthly totals of international airline
    passengers from 1949 to 1960\. The monthly count numbers are in thousands. Over
    twelve years, the monthly data accumulated 144 observations. Since we have multiple
    observations across the years for the months, the seasonality aspect of the travelers
    count can be captured from the data. This was popularized in Box et al. (2015).
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '`AirPassengers`数据集包含1949年至1960年每月的国际航空公司乘客总数。每月计数数字以千为单位。在十二年的时间里，每月数据累积了144个观测值。由于我们在多年的月份中有多于一个的观测值，因此可以从数据中捕捉到旅客计数的季节性方面。这在Box等人（2015）中得到了普及。'
- en: co2
  id: totrans-45
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 二氧化碳
- en: The `co2` time series data is related to atmospheric concentrations of carbon
    dioxide. The concentration is expressed in parts per million (ppm), and this dataset
    is reported in the preliminary 1997 SIO manometric mole fraction scale. This time
    series was captured on a monthly basis for the period of 1959–97\. On the help
    page of `co2`, it is noted that the missing values for the months of February,
    March, and April, 1964 are obtained by linearly interpolating between the values
    for January and May of 1964.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '`二氧化碳`时间序列数据与大气中二氧化碳的浓度相关。浓度以百万分之一（ppm）表示，该数据集报告在1997年SIO压力计摩尔分数初步尺度上。这个时间序列在1959-97年期间按月捕捉。在`co2`的帮助页面上，指出1964年2月、3月和4月的缺失值是通过在1964年1月和5月之间的值进行线性插值获得的。'
- en: uspop
  id: totrans-47
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: uspop
- en: The US census population (in millions), `uspop`, was recorded by the decennial
    census between 1790 and 1970\. This was made available in a small time series
    dataset and, accordingly, it only consists of 19 data points. Seasonality is not
    captured in this dataset.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 美国人口普查（以百万为单位），`uspop`，在1790年至1970年间的十年人口普查中被记录。这些数据以小时间序列数据集的形式提供，因此它只包含19个数据点。该数据集未捕捉到季节性。
- en: gas
  id: totrans-49
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 气体
- en: The `gas` time series data contains Australian monthly gas production. The data
    available here is for the period of 1956–95\. Consequently, we have 476 observations
    here. This dataset is drawn from the `forecast` package.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '`气体`时间序列数据包含澳大利亚每月的天然气产量。这里提供的数据是1956-95年期间的数据。因此，我们有476个观测值。这个数据集来自`forecast`包。'
- en: Car Sales
  id: totrans-51
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 汽车销售
- en: The `car sales` data is adapted from Abraham and Ledolter (1983). For more information,
    refer to Table 2.7, page 68 of the book. The sales and advertising data is available
    for a period of 36 months. Here, we have additional information on the amount
    spent on advertisements each week. This is the first instance of additional variables
    availability, and it calls for specialized treatment, which we will explore further
    later in the chapter. The data is available in the `Car_Sales.csv` file and this
    is available in the code bundle.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '`汽车销售`数据来自亚伯拉罕和莱德尔特（1983）。更多信息，请参阅书中第68页的表2.7。销售和广告数据可用期为36个月。在这里，我们还有每周广告支出金额的额外信息。这是额外变量可用性的第一个实例，需要专门处理，我们将在本章后面进一步探讨。数据可在`Car_Sales.csv`文件中找到，并在代码包中提供。'
- en: austres
  id: totrans-53
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: austres
- en: The `austres` time series dataset consists of a quarterly number of Australian
    residents for the period March 1971 to March 1994.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '`austres`时间序列数据集包括1971年3月至1994年3月期间澳大利亚居民的季度数据。'
- en: WWWusage
  id: totrans-55
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: WWW使用情况
- en: The `WWWusage` time series dataset consists of the number of users connected
    to the internet through a server. The data is collected at a time interval of
    one minute. The time series values are collected for 100 observations.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '`WWWusage`时间序列数据集包括通过服务器连接到互联网的用户数量。数据以一分钟的时间间隔收集。时间序列值收集了100个观测值。'
- en: Visualization gives invaluable insights and we will plot some of the time series
    next.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 可视化提供了宝贵的见解，我们将绘制一些时间序列。
- en: Time series visualization
  id: totrans-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 时间序列可视化
- en: The main characteristic of time series data is that the observations are taken
    at regular intervals. A plot of the time series values (the *y* axis) against
    the time itself (*x* axis) is of great importance and gives away many structural
    insights. A time series plot is not merely a scatterplot with time as the *x*
    axis. The time is non-decreasing and hence it has more importance and meaning
    in a time series plot than the mere *x* axis in a scatterplot. For instance, lines
    can connect the points of a time series plot that will indicate the path of the
    time series, and such a connection would be meaningless in the scatterplot, which
    would be all over the place. The path will generally indicate the trend and as
    such, shows in which direction the series will go next. Changes in time series
    are easily depicted in the plot. We will now visualize the different time series.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 时间序列数据的主要特征是观测值是在固定的时间间隔内进行的。时间序列值（*y*轴）与时间本身（*x*轴）的图表非常重要，并提供了许多结构性的见解。时间序列图不仅仅是带有时间作为*x*轴的散点图。时间是单调递增的，因此在时间序列图中比散点图中的*x*轴有更多的意义和重要性。例如，线条可以连接时间序列图中的点，这将指示时间序列的路径，而在散点图中这样的连接是没有意义的，因为它们会散布在各个地方。路径通常表示趋势，并表明序列将向哪个方向移动。时间序列的变化很容易在图表中描绘出来。我们现在将可视化不同的时间序列。
- en: 'The `plot.ts` function is central to the scheme of visualization here. An external
    graphical device of appropriate size is first invoked with the `windows` function.
    The `X11` function can be used in Ubuntu/Linux. Next, we run the `plot.ts` function
    on the `AirPassengers` dataset:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '`plot.ts`函数是这里可视化方案的核心。首先使用`windows`函数调用一个适当大小的外部图形设备。在Ubuntu/Linux中可以使用`X11`函数。接下来，我们在`AirPassengers`数据集上运行`plot.ts`函数：'
- en: '[PRE0]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The following plot shows an increase in the number of monthly passengers across
    the years, on average:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图表显示了多年间每月乘客数量的增加，平均情况如下：
- en: '![Time series visualization](img/00467.jpeg)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![时间序列可视化](img/00467.jpeg)'
- en: 'Figure 1: Monthly airline passenger count'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 图1：每月航空公司乘客计数
- en: 'We can see here that a pattern seems to be repeating itself after a cycle of
    12 months, which indicates a seasonal trend across the months. It would be nice
    to obtain a plot where we select the first year and look at the plot across the
    months, then move to the next year and impose the next year''s monthly data and
    visualize it, and so on until the entire data is displayed. A `plotts` function
    is created which achieves a plot of this description, and its structure is given
    in *Figure 3*:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到，在12个月的周期之后，似乎有一个模式在重复，这表明了月份间的季节性趋势。如果能得到一个图表，我们选择第一年，查看月份的图表，然后转到下一年，并展示下一年每月的数据并可视化，以此类推，直到显示完整的数据集，那就太好了。一个名为`plotts`的函数实现了这种描述的图表，其结构在*图3*中给出：
- en: '![Time series visualization](img/00468.jpeg)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![时间序列可视化](img/00468.jpeg)'
- en: 'Figure 2: The time series frequency plot function'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 图2：时间序列频率图函数
- en: 'The `plotts` function is now applied on the `AirPassengers` data. The function
    is available in the `Utilities.R` file of the companion chapter code bundle, and
    it is invoked in the beginning of the `C11.R` file using the `source` command.
    The data has 12 years of data, and thus we will have 12 curves on the resulting
    time series plots. The `legend` of the plot will require more than the usual area,
    and hence we plot it on the right-hand side of the graph. The required manipulations
    are accomplished with the `par`, `mar`, and `legend` functions as follows:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '`plotts`函数现在被应用于`AirPassengers`数据集。该函数位于配套章节代码包的`Utilities.R`文件中，并在`C11.R`文件的开始处使用`source`命令调用。数据包含12年的数据，因此结果的时间序列图将包含12条曲线。图表的`legend`需要比通常的区域更大，因此我们将它绘制在图表的右侧。所需的操作通过`par`、`mar`和`legend`函数完成，如下所示：'
- en: '[PRE1]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'We can now clearly see the seasonal impact in the following figure:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在可以清楚地看到以下图中的季节性影响：
- en: '![Time series visualization](img/00469.jpeg)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![时间序列可视化](img/00469.jpeg)'
- en: 'Figure 3: Seasonal plot for the AirPassengers dataset'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 图3：`AirPassengers`数据集的季节性图
- en: The monthly passenger count visit hits a low in the months of February and November.
    The monthly passenger count increases steadily from February to July, remains
    at a similar level for August, and then decreases steeply until November. A slight
    increase can be seen for the months of December and January. Consequently, the
    seasonal plots give more insights, and they should be used complementarily with
    the `plot.ts` function. Hyndman's forecast package contains a function named `seasonalplot`
    which accomplishes the same result as the `plotts` function defined here.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 每月乘客计数在二月和十一月达到低点。从二月到七月，每月乘客计数稳步增加，八月保持在相似的水平，然后急剧下降至十一月。十二月和一月可以看到轻微的增加。因此，季节性图提供了更多的见解，它们应该与
    `plot.ts` 函数互补使用。Hyndman 的预测包包含一个名为 `seasonalplot` 的函数，它实现了与这里定义的 `plotts` 函数相同的结果。
- en: 'The Australian residents dataset `austres` is covered next. The `plotts` function
    and legend will be used to enhance the display:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 澳大利亚居民数据集 `austres` 将在下一部分进行介绍。我们将使用 `plotts` 函数和图例来增强显示效果：
- en: '[PRE2]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The following plot is a quarterly time series of the number of Australian residents:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的图是澳大利亚居民数量的季度时间序列：
- en: '![Time series visualization](img/00470.jpeg)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![时间序列可视化](img/00470.jpeg)'
- en: 'Figure 4: Quarterly time series of the number of Australian residents'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 图4：澳大利亚居民数量的季度时间序列
- en: What is the difference between the seasonal plots of *Figure 4* and *Figure
    5*? Of course, we are looking for differences other than the trivial monthly and
    quarterly periodicity. In *Figure 5*, we can see that, although there is an increase
    in the quarterly number of monthly residents, it is hardly a seasonal factor;
    it appears to be more of a trend factor than a seasonal one. Thus, the seasonal
    contribution appears less in comparison with the `AirPassengers` dataset.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 图4和图5的季节性图有什么不同？当然，我们寻找的是除了平凡的月度和季度周期性之外的不同之处。在图5中，我们可以看到，尽管月度居民数量在季度中有所增加，但这几乎不是一个季节性因素；它似乎更多的是趋势因素而不是季节性因素。因此，与
    `AirPassengers` 数据集相比，季节性贡献似乎较小。
- en: 'The time series plot for the carbon dioxide concentrations is visualized next.
    We use the `plot.ts` function on the `co2` dataset:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来将可视化二氧化碳浓度的时序图。我们在 `co2` 数据集上使用 `plot.ts` 函数：
- en: '[PRE3]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The result of running the `plot.ts` function is the next output:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 运行 `plot.ts` 函数的结果是下一个输出：
- en: '![Time series visualization](img/00471.jpeg)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![时间序列可视化](img/00471.jpeg)'
- en: 'Figure 5: Visualization of the Mauna Loa atmospheric CO2 concentration'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 图5：莫纳罗亚大气二氧化碳浓度可视化
- en: 'A seasonal impact is easily seen in the time series plot of the carbon dioxide
    concentrations. A seasonal plot might provide more insight, and we will use the
    `plotts` function next:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 在二氧化碳浓度的时序图中，季节性影响很容易看到。季节性图可能提供更多的见解，我们将在下一步使用 `plotts` 函数：
- en: '[PRE4]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The `plotts` and `legend` functions have been used in the same way as previously.
    The result of the program is shown in *Figure 7*, and we can clearly see the seasonal
    impact in the time series display:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '`plotts` 和 `legend` 函数的使用方式与之前相同。程序的结果显示在 *图7* 中，我们可以清楚地看到时间序列显示中的季节性影响：'
- en: '![Time series visualization](img/00472.jpeg)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![时间序列可视化](img/00472.jpeg)'
- en: 'Figure 6: Seasonal plot of the Mauna Loa Atmospheric CO2 concentration'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 图6：莫纳罗亚大气二氧化碳浓度的季节性图
- en: '**Exercise**: Use the `seasonalplot` function from the `forecast` package and
    replicate the seasonal plots. What is the difference here, if any?'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '**练习**：使用 `forecast` 包中的 `seasonalplot` 函数复制季节性图。这里有什么不同吗？'
- en: 'The seasonality is an important aspect of the time series. It is important
    to identify it early so that an appropriate model is chosen for analysis of the
    time series. We will visualize three more time series datasets, `UKDriverDeaths`,
    `gas`, and `uspop`:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 季节性是时间序列的一个重要方面。及早识别它对于选择适当的时间序列分析模型非常重要。我们将可视化另外三个时间序列数据集，`UKDriverDeaths`、`gas`
    和 `uspop`：
- en: '[PRE5]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: The three displays in *Figure 7* are unlike any seen thus far. It seems unlikely
    that the models that fit well earlier will perform similarly here. We see a lot
    of variability for the `UKDriverDeaths` and `gas` datasets. For `UKDriverDeaths`,
    it appears that there was a decline in fatalities after the year `1983`. For the
    gas dataset, we can see that there was a regular seasonal impact until the year
    `1970`, and following that year, the `gas` productivity shot up drastically. It
    might be an indication of some technological breakthrough or some other phenomenological
    changes. The variability also increases, and barely appears constant across the
    time horizon. The `uspop` shows an exponential growth.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '*图7*中的三个显示与迄今为止所见的不同。看起来之前拟合良好的模型在这里可能不会表现相似。我们看到`UKDriverDeaths`和`gas`数据集有很多可变性。对于`UKDriverDeaths`，看起来在1983年之后，死亡人数有所下降。对于`gas`数据集，我们可以看到在1970年之前有一个规律的季节性影响，在那之后，`gas`的生产力急剧上升。这可能是一些技术突破或其他现象性变化的迹象。可变性也增加了，并且几乎在整个时间范围内都不稳定。`uspop`显示出指数增长。'
- en: '**Exercise**: Visually inspect if there is a seasonal impact for the `UKDriverDeaths`
    and `gas` datasets:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '**练习**：视觉检查`UKDriverDeaths`和`gas`数据集是否存在季节性影响：'
- en: '![Time series visualization](img/00473.jpeg)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![时间序列可视化](img/00473.jpeg)'
- en: 'Figure 7: Three time series plots: UKDriverDeaths, gas, and uspop'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 图7：三个时间序列图：UKDriverDeaths、gas和uspop
- en: Core concepts and metrics
  id: totrans-97
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 核心概念和指标
- en: The visualization of the time series data has conveyed a similar story in all
    the examples, from *Figure 1* to *Figure 7*. The trend and seasonality of the
    observations imply that the future values of the time series are dependent on
    the current values, and thus we can't assume that the observations are independent
    of each other. But what does this mean? To reiterate the point, consider the simpler
    `uspop` (US population) dataset, the third-right panel display of *Figure 7*.
    Here, we don't have a seasonal influence. Now, consider the census year 1900\.
    The population at the next census is certainly not less than in the year 1890,
    and it is not well beyond the same number of the same year. A similar narrative
    holds for most time series; for example, if we are recording the maximum temperature
    of the day. Here, if today's maximum temperature is 42°C, the next day's maximum
    temperature is highly influenced by this number and it is almost completely ruled
    out that the next day's maximum temperature will be either 55°C or 25°C. Although
    it is easily seen that the observations are dependent on each other, the formal
    specification is also a challenge in itself. Let us formally introduce a time
    series.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 时间序列数据的可视化在所有示例中都传达了类似的故事，从*图1*到*图7*。观察到的趋势和季节性表明，时间序列的未来值依赖于当前值，因此我们不能假设观察值之间是独立的。但这意味着什么呢？为了重申这一点，考虑更简单的`uspop`（美国人口）数据集，*图7*的第三右面板显示。在这里，我们没有季节性影响。现在，考虑1900年的普查年份。下一次普查的人口肯定不会少于1890年，也不会远低于同年的同一数量。对于大多数时间序列也是如此；例如，如果我们正在记录一天的最高温度。在这里，如果今天的最高温度是42°C，那么第二天最高温度将高度受这个数字的影响，并且几乎可以肯定地说，第二天的最高温度不会是55°C或25°C。虽然很容易看出观察值是相互依赖的，但正式的规范本身也是一个挑战。让我们正式介绍时间序列。
- en: 'We will denote a time series by ![Core concepts and metrics](img/00474.jpeg)that
    is observed at times ![Core concepts and metrics](img/00475.jpeg). An alternative
    notation for a time series observed up to time T is ![Core concepts and metrics](img/00476.jpeg).
    A time series may be conceptualized as a stochastic process Y observed at times
    t =1, 2, 3, …. Associated with the time series process ![Core concepts and metrics](img/00474.jpeg)
    is the error process ![Core concepts and metrics](img/00477.jpeg). The error process
    is generally assumed to be a white noise process with zero mean and some constant
    variance. The error process is often referred to as the innovation process. Note
    that the time series ![Core concepts and metrics](img/00478.jpeg) might depend
    on the past values of the process in ![Core concepts and metrics](img/00479.jpeg),
    as well as the values of error ![Core concepts and metrics](img/00480.jpeg) and
    the past values of the error process ![Core concepts and metrics](img/00481.jpeg).
    The value ![Core concepts and metrics](img/00482.jpeg) is also referred to as
    the first lag value of ![Core concepts and metrics](img/00478.jpeg), ![Core concepts
    and metrics](img/00483.jpeg) the second lag value of ![Core concepts and metrics](img/00478.jpeg),
    and so on. Now, if the observations are dependent on each other, the specification
    of the relationship between them is the biggest challenge. Of course, we can''t
    go into detail here. However, if we believe that the first-order lagged terms
    are dependent, there must be a relationship here, and we can obtain a scatterplot
    with the observations ![Core concepts and metrics](img/00478.jpeg) on the y-axis
    and the first-order lagged terms on the x-axis. The first-order lagged scatterplot
    for the `AirPassengers` dataset is obtained as follows:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将用![核心概念和度量](img/00474.jpeg)表示在时间![核心概念和度量](img/00475.jpeg)观察到的时序。对于观察到时间T的时序，另一种表示方法是![核心概念和度量](img/00476.jpeg)。时序可以被视为在时间t=1,
    2, 3, …观察到的随机过程Y。与时序过程![核心概念和度量](img/00474.jpeg)相关的是误差过程![核心概念和度量](img/00477.jpeg)。误差过程通常假设为具有零均值和一些常数方差的白噪声过程。误差过程通常被称为创新过程。请注意，时序![核心概念和度量](img/00478.jpeg)可能依赖于![核心概念和度量](img/00479.jpeg)过程中的过去值，以及误差![核心概念和度量](img/00480.jpeg)的值和误差过程的过去值![核心概念和度量](img/00481.jpeg)。值![核心概念和度量](img/00482.jpeg)也被称为![核心概念和度量](img/00478.jpeg)的第一滞后值，![核心概念和度量](img/00483.jpeg)是![核心概念和度量](img/00478.jpeg)的第二滞后值，依此类推。现在，如果观测值相互依赖，那么它们之间关系的指定就是最大的挑战。当然，我们无法在这里详细说明。然而，如果我们认为一阶滞后项是相关的，那么这里必须存在某种关系，我们可以获得一个散点图，其中![核心概念和度量](img/00478.jpeg)的观测值位于y轴上，一阶滞后项位于x轴上。`AirPassengers`数据集的一阶滞后散点图如下获得：
- en: '[PRE6]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The use of indexing changes the class of time series objects to a numeric object:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 使用索引将时序对象的类别更改为数值对象：
- en: '![Core concepts and metrics](img/00484.jpeg)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![核心概念和度量](img/00484.jpeg)'
- en: 'Figure 8: Lag plot of the AirPassengers dataset'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 图8：`AirPassengers`数据集的滞后图
- en: 'In the preceding graphical display, we can clearly see that there is (almost)
    a linear relationship between the lagged observations, and thus a model might
    be of the form ![Core concepts and metrics](img/00485.jpeg). Can the scatterplot
    help in determining the order of the dependency? Hardly! We will obtain a plot
    of the `WWWusage` dataset next and look at the lagged plots:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 在先前的图形显示中，我们可以清楚地看到滞后观测值之间存在（几乎）线性关系，因此模型可能的形式为![核心概念和度量](img/00485.jpeg)。散点图能否帮助确定依赖的阶数？几乎不能！我们将获得`WWWusage`数据集的下一个图，并查看滞后图：
- en: '[PRE7]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Following are the lagged plots for `WWWUsage`:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是`WWWUsage`的滞后图：
- en: '![Core concepts and metrics](img/00486.jpeg)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![核心概念和度量](img/00486.jpeg)'
- en: 'Figure 9: Lagged plots for WWWUsage'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 图9：`WWWUsage`的滞后图
- en: The first lagged plot might give the impression that the observations are correlated.
    However, the higher-order lagged plots barely make any sense, and going back to
    the first-order lagged plot creates more confusion. As a consequence, we need
    a more formal method of obtaining insights on the order of lags.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 第一阶滞后图可能会给人留下观测值相关的印象。然而，更高阶的滞后图几乎没有任何意义，回到第一阶滞后图只会造成更多的困惑。因此，我们需要一种更正式的方法来获得滞后阶数上的洞察。
- en: 'The two measures that are useful for understanding the nature of dependency
    in time series data are **auto-correlation function** (**ACF**) and **partial
    auto-correlation function** (**PACF**). As the name suggests, ACF is the correlation
    of a time series with its own lagged values. The PACF''s partial nomenclature
    accounts for removing the impact of intermediate variables from the lagged one.
    In simple terms, the PACF for lag 3 will include only the first ![Core concepts
    and metrics](img/00478.jpeg); third lagged variables ![Core concepts and metrics](img/00487.jpeg)
    and the ![Core concepts and metrics](img/00488.jpeg) variables are not allowed
    to influence the PACF. The lag-k ACF is defined as the correlation between the
    random variable *Y* *t* and the k-th lagged variable *Y* *t-k*:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 对于理解时间序列数据中依赖性的本质，有两个有用的度量：**自相关函数**（**ACF**）和**偏自相关函数**（**PACF**）。正如其名称所示，ACF是时间序列与其滞后值之间的相关性。PACF的偏命名法解释了从滞后值中去除中间变量的影响。简单来说，滞后3的PACF将只包括第一个
    ![核心概念和度量](img/00478.jpeg)；第三个滞后变量 ![核心概念和度量](img/00487.jpeg) 和 ![核心概念和度量](img/00488.jpeg)
    变量不允许影响PACF。滞后-k ACF定义为随机变量*Y* *t*与第k滞后变量*Y* *t-k*之间的相关性：
- en: '![Core concepts and metrics](img/00489.jpeg)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
  zh: '![核心概念和度量](img/00489.jpeg)'
- en: 'Where ![Core concepts and metrics](img/00490.jpeg) is the variance of the time
    series. The partial autocorrelation function PACF between *Yt* and its k-th lag
    *Yt-k* is the partial correlation of the time series when controlling the values
    at shorter lags *Y* *t-1*, *Y* *t-2*, *…,* *Y* *t-k+1*. It is not possible to
    go into the mathematical details of the PACF concept; the reader may refer to
    Box et al. (2015) for more information. The sample ACF formula, based on *n* observations,
    is given using the following:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 其中 ![核心概念和度量](img/00490.jpeg) 是时间序列的方差。时间序列的偏自相关函数PACF是*Yt*与其第k滞后*Yt-k*之间的偏相关。无法深入探讨PACF概念的数学细节；读者可以参考Box等人（2015）以获取更多信息。基于*n*个观察值的样本ACF公式如下：
- en: '![Core concepts and metrics](img/00491.jpeg)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![核心概念和度量](img/00491.jpeg)'
- en: For an explicit formula of the PACF, we refer the reader to the document available
    on the web at [http://mondi.web.elte.hu/spssdoku/algoritmusok/acf_pacf.pdf](http://mondi.web.elte.hu/spssdoku/algoritmusok/acf_pacf.pdf).
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 对于PACF的显式公式，我们建议读者参考网络上可用的文档，网址为[http://mondi.web.elte.hu/spssdoku/algoritmusok/acf_pacf.pdf](http://mondi.web.elte.hu/spssdoku/algoritmusok/acf_pacf.pdf)。
- en: 'In spite of the intimidating formula, we have an easy getaway by simply using
    the `acf` and `pacf` functions on two datasets, `austres` and `uspop`:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管公式看起来令人畏惧，但我们可以通过在两个数据集`austres`和`uspop`上简单地使用`acf`和`pacf`函数来轻松地解决这个问题：
- en: '[PRE8]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'We will keep the interpretation of ACF and PACF plots simpler. The important
    guideline in ACF and PACF plots are the horizontal blue lines. Any lagged ACF
    and PACF plots beyond the two lines are significant, and those within the limits
    are insignificant:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将保持ACF和PACF图的解释更加简单。在ACF和PACF图中，重要的指导原则是水平蓝色线条。任何超出两条线的滞后ACF和PACF图都是显著的，而那些在限制范围内的则是无关紧要的：
- en: '![Core concepts and metrics](img/00492.jpeg)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![核心概念和度量](img/00492.jpeg)'
- en: 'Figure 10: ACF and PACF plots for austres and uspop datasets'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 图10：austres和uspop数据集的ACF和PACF图
- en: We can see from *Figure 10* for the `austres` time series that we need to extend
    the ACF plot to include more lags. This is because all plotted lags are beyond
    the horizontal blue lines. For the `uspop` time series, the first time series,
    the first four lags are significant and the rest are within the horizontal blue
    lines. The PACF plots can be interpreted in a similar way.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 从*图10*中我们可以看到，对于`austres`时间序列，我们需要扩展ACF图以包括更多的滞后。这是因为所有绘制的滞后都超出了水平蓝色线条。对于`uspop`时间序列，第一个时间序列的前四个滞后是显著的，其余的都在水平蓝色线条内。PACF图可以以类似的方式进行解释。
- en: The ACF and PACF plots play an important role in the identification of the ARMA
    models. Even if the plots reveal information about the lag for the case of AR,
    it can be used to specify the number of previous values of the time series as
    part of the input vector for a neural network adapted for the time series data.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: ACF和PACF图在ARMA模型识别中起着重要作用。即使对于AR的情况，这些图揭示了滞后信息，也可以用来指定时间序列作为神经网络输入向量的前几个值。
- en: 'In many practical problems, we have additional variables, and we might refer
    to these as covariate time series or exogenous variables. Let us denote the covariate
    time series by ![Core concepts and metrics](img/00493.jpeg), where ![Core concepts
    and metrics](img/00494.jpeg) might be a scalar or vector time series. We adopt
    the convention that only the current and past values of ![Core concepts and metrics](img/00495.jpeg),
    will influence ![Core concepts and metrics](img/00478.jpeg) and that the future
    values of ![Core concepts and metrics](img/00496.jpeg) will not impact ![Core
    concepts and metrics](img/00478.jpeg) in any manner. That is, only the lagged
    values of the covariates will have influence, as opposed to their lead values.
    In the `Car Sales` dataset, the sales are the time series of interest, and it
    is the advertising aspect that we believe impacts the sales; sales can''t possibly
    explain the advertisement amount! The `ccf` function is used to obtain the cross-correlation
    coefficients as follows:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 在许多实际问题中，我们还有额外的变量，我们可能将这些称为协变量时间序列或外生变量。让我们用![核心概念和度量](img/00493.jpeg)表示协变量时间序列，其中![核心概念和度量](img/00494.jpeg)可能是一个标量或向量时间序列。我们采用惯例，只有![核心概念和度量](img/00495.jpeg)的当前和过去值会影响![核心概念和度量](img/00478.jpeg)，而![核心概念和度量](img/00496.jpeg)的未来值不会以任何方式影响![核心概念和度量](img/00478.jpeg)。也就是说，只有协变量的滞后值会有影响，而不是它们的先行值。在
    `Car Sales` 数据集中，销售是我们感兴趣的时间序列，我们认为广告方面影响了销售；销售不可能解释广告金额！`ccf` 函数用于以下方式获取交叉相关系数：
- en: '[PRE9]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The following figure shows the cross correlation between sales and advertising:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 下图展示了销售和广告之间的交叉相关性：
- en: '![Core concepts and metrics](img/00497.jpeg)'
  id: totrans-125
  prefs: []
  type: TYPE_IMG
  zh: '![核心概念和度量](img/00497.jpeg)'
- en: 'Figure 11: Cross-correlation coefficients for advertising spend and car sales'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11：广告支出和汽车销售的交叉相关系数
- en: Should we look at the positive lag values or the negative lag values? Note that
    the `ccf` plot is not symmetrical, and hence we can't be absolved for ignoring
    the signs of the lag values. On running `?ccf` at the R terminal, we get `The
    lag k value returned by ccf(x, y) from the help file, which estimates the correlation
    between x[t+k] and y[t]`. Consequently, the positive lags are the lead-ins, while
    the negative lags are of interest to us. In this example, only the previous lags
    of ![Core concepts and metrics](img/00494.jpeg), (that is, ![Core concepts and
    metrics](img/00494.jpeg) and ![Core concepts and metrics](img/00498.jpeg)) are
    significant.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 我们应该关注正滞后值还是负滞后值？请注意，`ccf` 图并不是对称的，因此我们不能因为忽略了滞后值的符号而免责。在 R 终端运行 `?ccf`，我们得到
    `ccf(x, y)` 返回的滞后 k 值来自帮助文件，该文件估计了 x[t+k] 和 y[t] 之间的相关性。因此，正滞后是先行指标，而负滞后对我们来说更有兴趣。在这个例子中，只有![核心概念和度量](img/00494.jpeg)的前置滞后（即![核心概念和度量](img/00494.jpeg)和![核心概念和度量](img/00498.jpeg)）是显著的。
- en: 'We close this section with a brief discussion of the accuracy measurements.
    As with earlier learning problems, we will have a slew of models available for
    us. This is the main topic of discussion in the next section, and we need to define
    certain assessment metrics accordingly. Let ![Core concepts and metrics](img/00474.jpeg)
    denote the time series and, as a consequence of using a certain model, the fitted
    values will be ![Core concepts and metrics](img/00499.jpeg). We can access the
    accuracy of the models through various methods; some of the accuracy measurements
    include the following:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在本节结束时简要讨论了准确度测量。与早期学习问题一样，我们将有一系列模型可供我们选择。这是下一节讨论的主题，我们需要相应地定义某些评估指标。让![核心概念和度量](img/00474.jpeg)表示时间序列，由于使用某种模型，拟合值将是![核心概念和度量](img/00499.jpeg)。我们可以通过各种方法访问模型的准确性；一些准确性测量包括以下内容：
- en: '![Core concepts and metrics](img/00500.jpeg)'
  id: totrans-129
  prefs: []
  type: TYPE_IMG
  zh: '![核心概念和度量](img/00500.jpeg)'
- en: 'For the moment, we will not concern ourselves with the model. Instead, we will
    use it as a main tool to extract fitted values and help in obtaining the defined
    metrics. Using the `subset` function, we will define the training dataset and
    fit a model using the `auto.arima` function from the `forecast` package. Using
    the `accuracy` and `forecast` functions, we will then obtain the different accuracies:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，我们不会关注模型。相反，我们将使用它作为主要工具来提取拟合值并帮助获取定义的指标。使用 `subset` 函数，我们将定义训练数据集，并使用 `forecast`
    包中的 `auto.arima` 函数拟合模型。然后，使用 `accuracy` 和 `forecast` 函数，我们将获得不同的准确性：
- en: '[PRE10]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: The `forecast` function is a very important one. Given a fitted time series,
    it will provide predictions for the future periods as requested, and the accuracy
    function computes the required accuracy for the seven different criteria. The
    mean error criteria is often useless, and for near unbiased models, its numerical
    value will be in the vicinity of 0\. The metrics RMSE, MAE, MPE, and MAPE are
    often useful, and the lower their values, the better the model fit is. Furthermore,
    the training set error and test set error must be comparable. If they are very
    different from one other, then the model is not useful for forecasts. In the following
    section, we will review a class of useful time series models.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '`forecast`函数是一个非常重要的函数。给定一个拟合的时序，它将提供所需未来期间的预测，并且准确度函数计算了七个不同标准所需的准确度。平均误差标准通常是无用的，对于几乎无偏的模型，其数值将接近0。RMSE、MAE、MPE和MAPE指标通常很有用，它们的值越低，模型拟合得越好。此外，训练集误差和测试集误差必须可以比较。如果它们彼此差异很大，那么该模型对预测来说就没有用了。在下一节中，我们将回顾一类有用的时序模型。'
- en: Essential time series models
  id: totrans-133
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 重要的时序模型
- en: We have encountered a set of models for the different regression models thus
    far. Time series data brings additional complexity, and hence we have even more
    models to choose from (or rather, ensemble from). A quick review of the important
    models is provided here. Most of the models discussed here deal with univariate
    time series ![Essential time series models](img/00474.jpeg), and we need even
    more specialized models and methods to incorporate ![Essential time series models](img/00493.jpeg).
    We will begin with the simplest possible time series model and then move up to
    the neural network implementations.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经遇到了不同回归模型的一系列模型。时间序列数据带来了额外的复杂性，因此我们有更多的模型可供选择（或者更确切地说，是从中集成）。这里提供了一个重要模型的快速回顾。这里讨论的大多数模型都处理单变量时间序列![重要的时序模型](img/00474.jpeg)，我们需要更多专业化的模型和方法来包含![重要的时序模型](img/00493.jpeg)。我们将从最简单可能的时间序列模型开始，然后逐步过渡到神经网络实现。
- en: Naïve forecasting
  id: totrans-135
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 简单预测
- en: 'Suppose that we have the data ![Naïve forecasting](img/00501.jpeg), and we
    need forecasts for the next *h* time points ![Naïve forecasting](img/00502.jpeg).
    The naïve forecast model does not require any modeling exercises or computations,
    it simply returns the current value as future predictions, and thus ![Naïve forecasting](img/00503.jpeg).
    It''s that simple. Even for this simple task, we will use the naïve function from
    the forecast package and ask it to provide the forecast for the next `25` observations
    with `h=25`:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们拥有![简单预测](img/00501.jpeg)的数据，并且我们需要预测下一个*h*个时间点![简单预测](img/00502.jpeg)。简单预测模型不需要任何建模练习或计算，它只是简单地返回当前值作为未来的预测，因此![简单预测](img/00503.jpeg)。就这么简单。即使是这个简单的任务，我们也会使用forecast包中的简单函数，并要求它提供下一个`25`个观察值的预测，其中`h=25`：
- en: '[PRE11]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'As anticipated, the forecast values remain the same throughout the period.
    They can be visualized easily, and the accuracies can also be easily computed
    as follows:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 如预期的那样，预测值在整个期间保持不变。它们可以很容易地可视化，准确度也可以很容易地按以下方式计算：
- en: '[PRE12]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: The natural question that arises is whether the naïve forecasts are any good.
    An answer to this can be provided in other ways. Complex and sophisticated models
    will always claim to have advantages and merits. The models might indeed have
    advantages, but the reference and benchmarking should be clear. The naïve forecasts
    provide this important benchmark. Note that, for the training period, the accuracy
    values are different for the naïve forecasts, and it is important that the proposed
    models are at least better than the metrics of the naïve forecasts. This is the
    main purpose of the naïve forecasts.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 自然会出现的疑问是简单预测是否有效。对此的回答可以通过其他方式提供。复杂和精密的模型总是声称具有优势。模型确实可能具有优势，但参考和基准应该是清晰的。简单预测提供了这个重要的基准。请注意，对于训练期，简单预测的准确度值是不同的，并且重要的是所提出的模型至少要比简单预测的指标更好。这就是简单预测的主要目的。
- en: Seasonal, trend, and loess fitting
  id: totrans-141
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 季节性、趋势和局部加权回归拟合
- en: Season, trend, and loess are the three technical words that are combined to
    form the stl model. Earlier, we saw in the visual displays of the time series
    that some of them depict seasonal effects, some show a trend, some show a combination
    of both seasonal and trend, and some are simply irregular time series. The displays
    thus indicate the presence or absence of the specific nature of the underlying
    phenomenon. In this section, we will look at how to make use of the seasonal and
    trend part of the time series. The third component of the stl model in loess is
    not explained at all. Loess is a nonparametric regression technique, and stands
    for local polynomial regression, which generalizes the weighted least squares
    criteria to a p-th order polynomial. The loess method also consists of a vital
    component known as kernel. Kernel is a smoothing method, but we will not go into
    too much detail about this.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 季节、趋势和局部加权回归是三个技术术语的组合，形成了stl模型。之前，我们在时间序列的视觉显示中看到，其中一些描绘了季节性效应，一些显示了趋势，一些显示了季节性和趋势的组合，还有一些是简单的非规律性时间序列。这些显示因此表明了底层现象的具体性质的存在或不存在。在本节中，我们将探讨如何利用时间序列的季节性和趋势部分。在loess中的stl模型的第三个组成部分完全没有解释。局部加权回归是一种非参数回归技术，代表局部多项式回归，它将加权最小二乘准则推广到p次多项式。局部加权回归方法还包括一个称为核的重要组件。核是一种平滑方法，但我们将不会对此进行过多细节的讨论。
- en: 'Cleveland et al. (1990) proposed a seasonal-trend decomposition based on the
    loess, and the full details of the procedure can be obtained from the following
    source: [http://www.scb.se/contentassets/ca21efb41fee47d293bbee5bf7be7fb3/stl-a-seasonal-trend-decomposition-procedure-based-on-loess.pdf](http://www.scb.se/contentassets/ca21efb41fee47d293bbee5bf7be7fb3/stl-a-seasonal-trend-decomposition-procedure-based-on-loess.pdf).
    This paper is readable, intuitive, and insightful, and the reader should truly
    follow it. The stl model is a filtering method that decomposes a seasonal time
    series in three parts: trend, seasonal, and remainder. Let ![Seasonal, trend,
    and loess fitting](img/00501.jpeg) be the time series, and we denote trend, seasonal,
    and remainder parts by ![Seasonal, trend, and loess fitting](img/00504.jpeg),
    ![Seasonal, trend, and loess fitting](img/00505.jpeg), and ![Seasonal, trend,
    and loess fitting](img/00506.jpeg); then we will have the following:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: Cleveland等人（1990年）提出了基于局部加权回归的季节性-趋势分解，该过程的全部细节可以从以下来源获得：[http://www.scb.se/contentassets/ca21efb41fee47d293bbee5bf7be7fb3/stl-a-seasonal-trend-decomposition-procedure-based-on-loess.pdf](http://www.scb.se/contentassets/ca21efb41fee47d293bbee5bf7be7fb3/stl-a-seasonal-trend-decomposition-procedure-based-on-loess.pdf)。这篇论文易于阅读，直观且富有洞察力，读者应该真正地跟随它。stl模型是一种分解季节性时间序列的滤波方法，分为三个部分：趋势、季节性和剩余部分。设![季节性、趋势和局部加权回归拟合](img/00501.jpeg)为时间序列，我们用![季节性、趋势和局部加权回归拟合](img/00504.jpeg)、![季节性、趋势和局部加权回归拟合](img/00505.jpeg)和![季节性、趋势和局部加权回归拟合](img/00506.jpeg)分别表示趋势、季节性和剩余部分；那么我们将有如下：
- en: '![Seasonal, trend, and loess fitting](img/00507.jpeg)'
  id: totrans-144
  prefs: []
  type: TYPE_IMG
  zh: '![季节性、趋势和局部加权回归拟合](img/00507.jpeg)'
- en: Refer to Cleveland et al.'s paper for complete details.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 请参阅Cleveland等人发表的论文以获取完整细节。
- en: 'Using the `stl` function from the `stats` package, we decompose the `AirPassengers`
    data as follows:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`stats`包中的`stl`函数，我们将`AirPassengers`数据分解如下：
- en: '[PRE13]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'By executing the preceding code, the following graph plot is obtained:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 执行前面的代码后，可以得到以下图形：
- en: '![Seasonal, trend, and loess fitting](img/00508.jpeg)'
  id: totrans-149
  prefs: []
  type: TYPE_IMG
  zh: '![季节性、趋势和局部加权回归拟合](img/00508.jpeg)'
- en: 'Figure 12: STL decompose of AirPassengers'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 图12：AirPassengers的STL分解
- en: It is important to specify the seasonality through the `s.window` option in
    the `stl` function. From the seasonal plot, we can see that each component increases
    with time. However, we get a clear picture of the different components of the
    passenger count over time. Though the seasonal part increases in magnitude, the
    pattern remains the same throughout the period. The trend shows a linear increase,
    which indicates the direction in which the series is headed. It is clear that
    seasonality plays an important role in this context.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 在`stl`函数中通过`s.window`选项指定季节性是很重要的。从季节性图中，我们可以看到每个成分随时间增加。然而，我们可以清楚地看到乘客数量随时间变化的各个组成部分。尽管季节性部分在幅度上增加，但整个期间的模式保持不变。趋势显示线性增加，这表明序列前进的方向。很明显，季节性在这个背景下起着重要作用。
- en: '**Exercise**: It has been previously remarked that seasonality does not appear
    to be a useful factor in the analysis of the `austres` dataset. Use the `stl`
    decomposition and check whether the observation holds true.'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: '**练习**：之前已经提到，季节性似乎不是`austres`数据集分析中的一个有用的因素。使用`stl`分解并检查这一观察结果是否成立。'
- en: A more parametric model will be considered next, in the form of an exponential
    smoothing model.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来将考虑一个更参数化的模型，形式为指数平滑模型。
- en: Exponential smoothing state space model
  id: totrans-154
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 指数平滑状态空间模型
- en: 'The basic exponential smoothing model can be clearly defined. Denote the smoothing
    factor by ![Exponential smoothing state space model](img/00509.jpeg), and initialize
    ![Exponential smoothing state space model](img/00510.jpeg). The basic exponential
    smoothing model is defined as follows:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 基本指数平滑模型可以明确定义。用![指数平滑状态空间模型](img/00509.jpeg)表示平滑因子，并初始化![指数平滑状态空间模型](img/00510.jpeg)。基本指数平滑模型定义为以下：
- en: '![Exponential smoothing state space model](img/00511.jpeg)'
  id: totrans-156
  prefs: []
  type: TYPE_IMG
  zh: '![指数平滑状态空间模型](img/00511.jpeg)'
- en: 'The details of the exponential models can be found at [https://labs.omniti.com/people/jesus/papers/holtwinters.pdf](https://labs.omniti.com/people/jesus/papers/holtwinters.pdf).
    A more general model form is the **exponential smoothing state space model**.
    Here, a model is specified on three fronts, as in the stl model: the error component,
    the trend component, and the third is the seasonal component. In the `ets` function
    of the forecast package, the component can have **additive** effect denoted by
    **A**, it can have a **multiplicative** effect, denoted by M, or it might be asked
    to be automatically selected (Z), and this specification is possible for each
    of the components. The effect can be specified to be neither additive nor multiplicative
    with the letter N. A model in the `ets` function is thus specified with the first
    letter for error component, the second letter for the trend component, and the
    third letter for the seasonal component. Consequently, the notation `model="ZZZ"`
    means that each of the three components is selected automatically. `model="AMZ"`
    means that the error component is additive, the trend is multiplicative, the seasonal
    component is automatically chosen, and so on. Hyndman et al. (2008) provides a
    comprehensive account of the details of exponential smoothing methods. Next, we
    will use the `ets` function from the `forecast` package to fit the exponential
    smoothing model:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 指数模型的详细信息可以在[https://labs.omniti.com/people/jesus/papers/holtwinters.pdf](https://labs.omniti.com/people/jesus/papers/holtwinters.pdf)找到。一个更通用的模型形式是**指数平滑状态空间模型**。在这里，模型在三个方面被指定，就像stl模型一样：误差成分、趋势成分，第三个是季节成分。在forecast包的`ets`函数中，成分可以具有**加性**效应，用**A**表示，它可以具有**乘性**效应，用M表示，或者可能要求自动选择（Z），并且这种指定适用于每个成分。效应可以指定为既不是加性的也不是乘性的，用字母N表示。因此，`ets`函数中的模型是用第一个字母表示误差成分，第二个字母表示趋势成分，第三个字母表示季节成分来指定的。因此，表示`model="ZZZ"`意味着三个成分都是自动选择的。`model="AMZ"`意味着误差成分是加性的，趋势是乘性的，季节成分是自动选择的，等等。Hyndman等人（2008年）提供了指数平滑方法详细情况的全面概述。接下来，我们将使用`forecast`包中的`ets`函数来拟合指数平滑模型：
- en: '[PRE14]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'The `ets` function has fit an additive error for the error and trend component,
    while choosing not to add any of it for the seasonal factor. This makes sense
    because there is no seasonal component for the `uspop` dataset. Using this fitted
    model, we will `forecast` the US population for the period of 1940–70, calculate
    the accuracies for the training and test dataset with the `accuracy` function,
    and also compare with the `naive` forecasts:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: '`ets`函数为误差和趋势成分拟合了加性误差，而选择不对季节因子添加任何内容。这是有意义的，因为`uspop`数据集没有季节成分。使用这个拟合模型，我们将预测1940-70年间的美国人口，使用`accuracy`函数计算训练和测试数据集的准确性，并与`naive`预测进行比较：'
- en: '[PRE15]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Following is a plot depicting exponential smoothing for US population data:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 下图展示了美国人口数据的指数平滑：
- en: '![Exponential smoothing state space model](img/00512.jpeg)'
  id: totrans-162
  prefs: []
  type: TYPE_IMG
  zh: '![指数平滑状态空间模型](img/00512.jpeg)'
- en: 'Figure 13: Exponential smoothing for US population data'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 图13：美国人口数据的指数平滑
- en: The accuracy comparison is performed with the naïve forecasts, and we find that
    there is a significant improvement with the `ets` forecasts. Consequently, the
    `ets` forecasts are useful, and we can use them for future predictions.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 准确性比较是与简单预测进行的，我们发现`ets`预测有显著的改进。因此，`ets`预测是有用的，我们可以使用它们进行未来预测。
- en: Next, we will move on to the popular Box-Jenkins/ARIMA models.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将继续介绍流行的Box-Jenkins/ARIMA模型。
- en: Auto-regressive Integrated Moving Average (ARIMA) models
  id: totrans-166
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 自回归积分移动平均（ARIMA）模型
- en: 'Box and Jenkins'' approach to time series with the ARIMA models changed the
    way analysis and forecasts of time series data is performed. The ARIMA model is
    a special case of the more general linear process model, and for the time series
    ![Auto-regressive Integrated Moving Average (ARIMA) models](img/00474.jpeg) with
    the innovation process ![Auto-regressive Integrated Moving Average (ARIMA) models](img/00477.jpeg),
    it is given as follows:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: Box和Jenkins使用ARIMA模型对时间序列的分析和预测方法产生了变化。ARIMA模型是更一般线性过程模型的一个特例，对于具有创新过程 ![自回归积分移动平均（ARIMA）模型](img/00474.jpeg)
    的时间序列 ![自回归积分移动平均（ARIMA）模型](img/00477.jpeg)，其表达式如下：
- en: '![Auto-regressive Integrated Moving Average (ARIMA) models](img/00513.jpeg)'
  id: totrans-168
  prefs: []
  type: TYPE_IMG
  zh: '![自回归积分移动平均（ARIMA）模型](img/00513.jpeg)'
- en: 'Here, ![Auto-regressive Integrated Moving Average (ARIMA) models](img/00514.jpeg)
    are the coefficients of the linear process. Note that there is no restriction
    on the lagged values of the innovation process and we indeed mean that there are
    infinite terms in this linear process model. In the popular autoregressive AR(p)
    model, p is the order of the AR model. This is given using the following:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，![自回归积分移动平均（ARIMA）模型](img/00514.jpeg) 是线性过程的系数。请注意，对创新过程的滞后值没有限制，我们确实意味着在这个线性过程模型中有无限项。在流行的自回归AR(p)模型中，p
    是AR模型的阶数。这可以用以下方式表示：
- en: '![Auto-regressive Integrated Moving Average (ARIMA) models](img/00515.jpeg)'
  id: totrans-170
  prefs: []
  type: TYPE_IMG
  zh: '![自回归积分移动平均（ARIMA）模型](img/00515.jpeg)'
- en: 'The AR model can be shown to be a particular case of the linear process model.
    When the time series is expressed in terms of the innovation process, another
    useful model is the moving average MA(q) model of order q:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: AR模型可以证明是线性过程模型的一个特例。当时间序列用创新过程表示时，另一个有用的模型是阶数为 q 的移动平均 MA(q) 模型：
- en: '![Auto-regressive Integrated Moving Average (ARIMA) models](img/00516.jpeg)'
  id: totrans-172
  prefs: []
  type: TYPE_IMG
  zh: '![自回归积分移动平均（ARIMA）模型](img/00516.jpeg)'
- en: 'A time series might depend on past errors as well as past values, and such
    a structural dependency is captured in an autoregressive moving average `ARMA(p,q)`
    model of order `(p,q)`:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 时间序列可能不仅依赖于过去值，还依赖于过去的误差，这种结构依赖性在自回归移动平均 `ARMA(p,q)` 模型中得以捕捉，其阶数为 `(p,q)`：
- en: '![Auto-regressive Integrated Moving Average (ARIMA) models](img/00517.jpeg)'
  id: totrans-174
  prefs: []
  type: TYPE_IMG
  zh: '![自回归积分移动平均（ARIMA）模型](img/00517.jpeg)'
- en: 'The order of *p* and *q* can be decided by the rule of thumb related through
    ACF and PACF in *Table 2*:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: '*p* 和 *q* 的阶数可以通过 *表2* 中ACF和PACF相关的经验规则来确定：'
- en: '![Auto-regressive Integrated Moving Average (ARIMA) models](img/00518.jpeg)'
  id: totrans-176
  prefs: []
  type: TYPE_IMG
  zh: '![自回归积分移动平均（ARIMA）模型](img/00518.jpeg)'
- en: 'Table 2: ACF and PACF for ARMA models'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 表2：ARMA模型的ACF和PACF
- en: The ARMA models work well with stationary time series data, and here stationary
    loosely means that the variability of the series is constant throughout. It is
    a restrictive assumption, and for many time series phenomena, it does not hold
    true. In many practical scenarios, it has been that stationary can be obtained
    by differencing the series ![Auto-regressive Integrated Moving Average (ARIMA)
    models](img/00474.jpeg), that is, we can consider the difference ![Auto-regressive
    Integrated Moving Average (ARIMA) models](img/00519.jpeg). The difference ![Auto-regressive
    Integrated Moving Average (ARIMA) models](img/00520.jpeg) is a first-order difference,
    and sometimes, one may require higher order difference. In most practical scenarios,
    differencing up to order 4 has been known to bring stationarity. The order of
    differencing is generally denoted by the letter d, and applying ARMA models on
    the difference is referred to as an autoregressive integrated moving average model,
    or ARIMA model. A succinct abbreviation is `ARIMA(p,d,q)`.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: ARMA模型与平稳时间序列数据配合良好，这里的平稳大致意味着序列的变异性在整个过程中保持恒定。这是一个限制性假设，对于许多时间序列现象，这个假设并不成立。在许多实际场景中，通过差分序列
    ![自回归积分移动平均（ARIMA）模型](img/00474.jpeg) 可以获得平稳性，也就是说，我们可以考虑差分 ![自回归积分移动平均（ARIMA）模型](img/00519.jpeg)。差分
    ![自回归积分移动平均（ARIMA）模型](img/00520.jpeg) 是一阶差分，有时可能需要更高阶的差分。在大多数实际场景中，差分到4阶已被证明可以带来平稳性。差分的阶数通常用字母
    d 表示，将ARMA模型应用于差分被称为自回归积分移动平均模型，或ARIMA模型。简写为 `ARIMA(p,d,q)`。
- en: 'We have come across the seasonal component too often in this chapter, and it
    is accommodated in ARIMA through seasonal ARIMA models. The motivated reader can
    go through Chapter 10 of Tattar et al. (2017) for more details. We will simply
    add here that we have further notation in capital letters (P, D, Q) for the seasonal
    parameters, along with the frequency term. We are now in a position to understand
    the fitted model at the end of the previous section. The `co2_arima` accuracy
    had been accessed, and we will now look at the summary:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们多次遇到了季节成分，它通过季节ARIMA模型在ARIMA中得到解决。有动机的读者可以通过Tattar等人（2017）的第10章了解更多细节。我们在这里简单地补充说，我们还有大写字母（P,
    D, Q）的进一步符号表示季节参数，以及频率项。我们现在能够理解上一节末尾拟合的模型。`co2_arima`的准确性已经评估，我们现在将查看摘要：
- en: '[PRE16]'
  id: totrans-180
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'The best fit ARIMA model order is `(2,1,2)(1,1,2)[12]`, which means that the
    seasonal frequency is at `12` (something we already knew), and that the seasonal
    order (P,D,Q) is `(1,1,2)` and the ARIMA order (p,d,q) is `(2,1,2)`. It is this
    differencing order that achieves stationarity. The forecasts are obtained and
    then visualized:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 最佳拟合的ARIMA模型阶数是`(2,1,2)(1,1,2)[12]`，这意味着季节频率为`12`（这是我们已知的事情），季节阶数（P,D,Q）为`(1,1,2)`，ARIMA阶数（p,d,q）为`(2,1,2)`。正是这种差分阶数实现了平稳性。预测结果已获得并进行了可视化：
- en: '[PRE17]'
  id: totrans-182
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'The following figure shows the output:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 下图显示了输出：
- en: '![Auto-regressive Integrated Moving Average (ARIMA) models](img/00521.jpeg)'
  id: totrans-184
  prefs: []
  type: TYPE_IMG
  zh: '![自回归积分移动平均（ARIMA）模型](img/00521.jpeg)'
- en: 'Figure 14: CO2 forecast'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 图14：二氧化碳浓度预测
- en: Consequently, we have fitted the ARIMA models for the carbon dioxide concentration
    levels.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们已经为二氧化碳浓度水平拟合了ARIMA模型。
- en: Next, we will look at the nonlinear neural network time series models.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将探讨非线性神经网络时间序列模型。
- en: Auto-regressive neural networks
  id: totrans-188
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 自回归神经网络
- en: 'Neural networks have previously been seen in action for classification as well
    as regression problems. Since the time series are dependent observations, we need
    to tweak the architecture of neural networks to incorporate the dependency. The
    tweaking is to allow the lagged values of the time series as the members of the
    input layer. The rest of the architecture follows the same structure as the usual
    neural network. The `nnetar` function in the `forecast` stands for neural network
    autoregressive, and the `p=` option allows the lagged values of the time series,
    which we apply to the `gas` problem:'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 神经网络之前已被用于分类以及回归问题。由于时间序列是依赖性观测值，我们需要调整神经网络的架构以包含这种依赖性。调整是为了允许时间序列的滞后值作为输入层的成员。其余的架构遵循与常规神经网络相同的结构。`forecast`中的`nnetar`函数代表神经网络自回归，`p=`选项允许时间序列的滞后值，我们将这些值应用于`gas`问题：
- en: '[PRE18]'
  id: totrans-190
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '![Auto-regressive neural networks](img/00522.jpeg)'
  id: totrans-191
  prefs: []
  type: TYPE_IMG
  zh: '![自回归神经网络](img/00522.jpeg)'
- en: 'Figure 15: Gas forecast using auto-regressive neural network'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 图15：使用自回归神经网络的气体预测
- en: We have now seen the autoregressive neural network in action.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在已经看到了自回归神经网络的实际应用。
- en: Messing it all up
  id: totrans-194
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 一团糟
- en: 'We began the chapter with a brief introduction of seven datasets and a mention
    of 21 datasets in *Table 1*. The data visualization provides moderate insight,
    and the accuracy metrics are useful in analyzing the usefulness of the models.
    A series of models have been introduced in this section up to now, and now we
    will mess it all up. A `get_Accuracy` function, which will fit six different time
    series models, is defined. The **LM**, which stands for **linear model**, has
    not been explained; neither has the TBATS model. The linear model is very simple,
    in that the time index is taken as a covariate. In general, if a time series has
    T observations, the covariate vector simply consists of the values 1, 2, 3, …,
    T. We expect the linear model to perform poorly. The TBATS model won''t be explained
    in further detail here and so it is recommended to do some extra reading in order
    to get more information on this. The `get_Accuracy` model fits each of the six
    models to the 21 datasets, names the model, and enlists its performance over the
    entire dataset. The following program gets the desired results:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在本章开头简要介绍了七个数据集，并在*表1*中提到了21个数据集。数据可视化提供了适度的洞察力，而准确度指标有助于分析模型的有用性。到目前为止，本节已经介绍了一系列模型，现在我们将把一切都搞乱。定义了一个`get_Accuracy`函数，该函数将拟合六个不同的时间序列模型。代表**线性模型**的**LM**尚未解释；TBATS模型也没有解释。线性模型非常简单，因为时间索引被用作协变量。一般来说，如果一个时间序列有T个观测值，协变量向量简单地由值1，2，3，…，T组成。我们预计线性模型的表现会不佳。TBATS模型在此不再详细解释，因此建议阅读一些额外的资料以获取更多相关信息。`get_Accuracy`模型将每个模型拟合到21个数据集，命名模型，并列出其在整个数据集上的性能。以下程序得到所需的结果：
- en: '[PRE19]'
  id: totrans-196
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'The output of the preceding code block is the following table:'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 前述代码块输出的表格如下：
- en: '| TSName | Model | ME | RMSE | MAE | MPE | MAPE | MASE |'
  id: totrans-198
  prefs: []
  type: TYPE_TB
  zh: '| TSName | Model | ME | RMSE | MAE | MPE | MAPE | MASE |'
- en: '| --- | --- | --- | --- | --- | --- | --- | --- |'
  id: totrans-199
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- | --- | --- | --- |'
- en: '| `AirPassengers` | ETS | 1.5807 | 10.6683 | 7.7281 | 0.4426 | 2.8502 | 0.0164
    |'
  id: totrans-200
  prefs: []
  type: TYPE_TB
  zh: '| `AirPassengers` | ETS | 1.5807 | 10.6683 | 7.7281 | 0.4426 | 2.8502 | 0.0164
    |'
- en: '| `AirPassengers` | STL | -0.1613 | 11.9379 | 8.5595 | -0.0662 | 3.4242 | 0.5515
    |'
  id: totrans-201
  prefs: []
  type: TYPE_TB
  zh: '| `AirPassengers` | STL | -0.1613 | 11.9379 | 8.5595 | -0.0662 | 3.4242 | 0.5515
    |'
- en: '| `AirPassengers` | LM | 0.0000 | 45.7362 | 34.4055 | -1.2910 | 12.3190 | 0.7282
    |'
  id: totrans-202
  prefs: []
  type: TYPE_TB
  zh: '| `AirPassengers` | LM | 0.0000 | 45.7362 | 34.4055 | -1.2910 | 12.3190 | 0.7282
    |'
- en: '| `AirPassengers` | ARIMA | 1.3423 | 10.8462 | 7.8675 | 0.4207 | 2.8005 | -0.0012
    |'
  id: totrans-203
  prefs: []
  type: TYPE_TB
  zh: '| `AirPassengers` | ARIMA | 1.3423 | 10.8462 | 7.8675 | 0.4207 | 2.8005 | -0.0012
    |'
- en: '| `AirPassengers` | NNETAR | -0.0118 | 14.3765 | 11.4899 | -0.2964 | 4.2425
    | 0.5567 |'
  id: totrans-204
  prefs: []
  type: TYPE_TB
  zh: '| `AirPassengers` | NNETAR | -0.0118 | 14.3765 | 11.4899 | -0.2964 | 4.2425
    | 0.5567 |'
- en: '| `AirPassengers` | TBATS | 0.4655 | 10.6614 | 7.7206 | 0.2468 | 2.8519 | 0.0215
    |'
  id: totrans-205
  prefs: []
  type: TYPE_TB
  zh: '| `AirPassengers` | TBATS | 0.4655 | 10.6614 | 7.7206 | 0.2468 | 2.8519 | 0.0215
    |'
- en: '| `BJsales` | ETS | 0.1466 | 1.3272 | 1.0418 | 0.0657 | 0.4587 | -0.0110 |'
  id: totrans-206
  prefs: []
  type: TYPE_TB
  zh: '| `BJsales` | ETS | 0.1466 | 1.3272 | 1.0418 | 0.0657 | 0.4587 | -0.0110 |'
- en: '| `BJsales` | STL | NA | NA | NA | NA | NA | NA |'
  id: totrans-207
  prefs: []
  type: TYPE_TB
  zh: '| `BJsales` | STL | NA | NA | NA | NA | NA | NA |'
- en: '| `BJsales` | LM | 0.0000 | 9.1504 | 7.1133 | -0.1563 | 3.1686 | 0.9872 |'
  id: totrans-208
  prefs: []
  type: TYPE_TB
  zh: '| `BJsales` | LM | 0.0000 | 9.1504 | 7.1133 | -0.1563 | 3.1686 | 0.9872 |'
- en: '| `BJsales` | ARIMA | 0.1458 | 1.3281 | 1.0447 | 0.0651 | 0.4601 | -0.0262
    |'
  id: totrans-209
  prefs: []
  type: TYPE_TB
  zh: '| `BJsales` | ARIMA | 0.1458 | 1.3281 | 1.0447 | 0.0651 | 0.4601 | -0.0262
    |'
- en: '| `BJsales` | NNETAR | -0.0001 | 1.4111 | 1.0849 | -0.0040 | 0.4798 | 0.2888
    |'
  id: totrans-210
  prefs: []
  type: TYPE_TB
  zh: '| `BJsales` | NNETAR | -0.0001 | 1.4111 | 1.0849 | -0.0040 | 0.4798 | 0.2888
    |'
- en: '| `BJsales` | TBATS | 0.1622 | 1.3566 | 1.0666 | 0.0732 | 0.4712 | -0.0113
    |'
  id: totrans-211
  prefs: []
  type: TYPE_TB
  zh: '| `BJsales` | TBATS | 0.1622 | 1.3566 | 1.0666 | 0.0732 | 0.4712 | -0.0113
    |'
- en: '| `JohnsonJohnson` | ETS | 0.0495 | 0.4274 | 0.2850 | 1.0917 | 7.0339 | -0.2948
    |'
  id: totrans-212
  prefs: []
  type: TYPE_TB
  zh: '| `JohnsonJohnson` | ETS | 0.0495 | 0.4274 | 0.2850 | 1.0917 | 7.0339 | -0.2948
    |'
- en: '| `JohnsonJohnson` | STL | -0.0088 | 0.1653 | 0.1080 | -0.5953 | 2.8056 | -0.4155
    |'
  id: totrans-213
  prefs: []
  type: TYPE_TB
  zh: '| `JohnsonJohnson` | STL | -0.0088 | 0.1653 | 0.1080 | -0.5953 | 2.8056 | -0.4155
    |'
- en: '| `JohnsonJohnson` | LM | 0.0000 | 1.6508 | 1.3287 | 22.6663 | 66.3896 | 0.6207
    |'
  id: totrans-214
  prefs: []
  type: TYPE_TB
  zh: '| `JohnsonJohnson` | LM | 0.0000 | 1.6508 | 1.3287 | 22.6663 | 66.3896 | 0.6207
    |'
- en: '| `JohnsonJohnson` | ARIMA | 0.0677 | 0.4074 | 0.2676 | 2.0526 | 6.5007 | 0.0101
    |'
  id: totrans-215
  prefs: []
  type: TYPE_TB
  zh: '| `JohnsonJohnson` | ARIMA | 0.0677 | 0.4074 | 0.2676 | 2.0526 | 6.5007 | 0.0101
    |'
- en: '| `JohnsonJohnson` | NNETAR | 0.0003 | 0.3501 | 0.2293 | -0.6856 | 5.8778 |
    -0.0347 |'
  id: totrans-216
  prefs: []
  type: TYPE_TB
  zh: '| `JohnsonJohnson` | NNETAR | 0.0003 | 0.3501 | 0.2293 | -0.6856 | 5.8778 |
    -0.0347 |'
- en: '| `JohnsonJohnson` | TBATS | 0.0099 | 0.4996 | 0.3115 | 0.9550 | 7.5277 | -0.1084
    |'
  id: totrans-217
  prefs: []
  type: TYPE_TB
  zh: '| `JohnsonJohnson` | TBATS | 0.0099 | 0.4996 | 0.3115 | 0.9550 | 7.5277 | -0.1084
    |'
- en: '| `sunspots` | ETS | -0.0153 | 15.9356 | 11.2451 | #NAME? | Inf | 0.0615 |'
  id: totrans-218
  prefs: []
  type: TYPE_TB
  zh: '| `sunspots` | ETS | -0.0153 | 15.9356 | 11.2451 | #NAME? | Inf | 0.0615 |'
- en: '| `sunspots` | STL | 0.0219 | 12.2612 | 8.7973 | NA | Inf | 0.18 |'
  id: totrans-219
  prefs: []
  type: TYPE_TB
  zh: '| `sunspots` | STL | 0.0219 | 12.2612 | 8.7973 | NA | Inf | 0.18 |'
- en: '| `sunspots` | LM | 0 | 42.9054 | 34.1212 | #NAME? | Inf | 0.9196 |'
  id: totrans-220
  prefs: []
  type: TYPE_TB
  zh: '| `sunspots` | LM | 0 | 42.9054 | 34.1212 | #NAME? | Inf | 0.9196 |'
- en: '| `sunspots` | ARIMA | -0.0267 | 15.6006 | 11.0258 | NA | Inf | -0.0106 |'
  id: totrans-221
  prefs: []
  type: TYPE_TB
  zh: '| `sunspots` | ARIMA | -0.0267 | 15.6006 | 11.0258 | NA | Inf | -0.0106 |'
- en: '| `sunspots` | NNETAR | -0.0672 | 10.3105 | 7.6878 | NA | Inf | 0.0108 |'
  id: totrans-222
  prefs: []
  type: TYPE_TB
  zh: '| `太阳黑子` | NNETAR | -0.0672 | 10.3105 | 7.6878 | NA | Inf | 0.0108 |'
- en: '| `sunspots` | TBATS | -0.0514 | 15.5788 | 11.0119 | NA | Inf | -0.0013 |'
  id: totrans-223
  prefs: []
  type: TYPE_TB
  zh: '| `太阳黑子` | TBATS | -0.0514 | 15.5788 | 11.0119 | NA | Inf | -0.0013 |'
- en: 'Table 3: Accuracy for six models across 21 datasets'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 表 3：21 个数据集上六个模型的准确度
- en: The overall message is the same as what was obtained in the introductory chapter
    for the classification problem. Since it is not always possible for us to carry
    out the inspection of the results all the time, it is desirable to combine the
    results of multiple models to put across a unified story of greater accuracy.
    We begin this task with the simple idea of bagging the exponential time series
    models.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 整体信息与分类问题介绍章节中得到的结果相同。由于我们并不总是能够持续进行结果检查，因此将多个模型的结果结合起来，以传达一个更准确的整体故事是很有吸引力的。我们从这个简单的想法开始，即对指数时间序列模型进行袋装。
- en: Bagging and time series
  id: totrans-226
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 袋装和时间序列
- en: 'In this section, we will only illustrate the bagging technique for the ETS
    model. The main purpose of bagging is to stabilize the predictions or forecasts.
    Here, we will base the bagging on the Box-Cox and Loess-based decomposition. Using
    500 such bootstrap samples, the bagging model for ETS will be obtained:'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们只将说明袋装技术用于 ETS 模型。袋装的主要目的是稳定预测或预报。在这里，我们将基于 Box-Cox 和基于 Loess 的分解进行袋装。使用
    500 个这样的自助样本，我们将获得 ETS 的袋装模型：
- en: '[PRE20]'
  id: totrans-228
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Is there an advantage to using the bagging method? We can quickly check this
    using the confidence intervals:'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 使用袋装方法是否有优势？我们可以通过置信区间快速检查这一点：
- en: '[PRE21]'
  id: totrans-230
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'The confidence intervals of the bagged ETS are clearly shorter, and hence reflect
    the decrease in the variance, which is the main purpose of bagging:'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 袋装 ETS 的置信区间明显更短，因此反映了方差的减少，这是袋装的主要目的：
- en: '![Bagging and time series](img/00523.jpeg)'
  id: totrans-232
  prefs: []
  type: TYPE_IMG
  zh: '![袋装和时间序列](img/00523.jpeg)'
- en: 'Figure 16: Bagging forecasts for US population'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 图 16：美国人口袋装预测
- en: 'The accuracy comparison is also easily performed here:'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 准确度比较也容易在这里进行：
- en: '[PRE22]'
  id: totrans-235
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: The advantage of ensembling homogeneous base learners is clearly seen here.
    Next, we move to the heterogeneous base learners and their ensemble.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 这里清楚地显示了集成同质基学习者的优势。接下来，我们将转向异质基学习者和它们的集成。
- en: Ensemble time series models
  id: totrans-237
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 集成时间序列模型
- en: 'The `forecastHybrid` R package gives a platform to ensemble heterogeneous time
    series models. The main function that enables this task is the `hybridModel` function.
    The core function provides the option referred to as `models`. It takes as input
    a string of up to six characters, and the characters are representatives of the
    models: `a` for the `auto.arima` model, `e` for `ets`, `f` for `thetam`, `n` denoting
    `nnetar`, `s` for `stlm`, and finally, `t` represents `tbats`. Consequently, if
    we give a character string of `ae` to models, it will combine results from the
    ARIMA and ets models. This is illustrated on the `co2` dataset for different combinations
    of the time series models:'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: '`forecastHybrid` R 包提供了一个平台来集成异构时间序列模型。实现这一任务的主要功能是 `hybridModel` 函数。核心函数提供了称为
    `models` 的选项。它接受一个最多六个字符的字符串，这些字符是模型的代表：`a` 代表 `auto.arima` 模型，`e` 代表 `ets`，`f`
    代表 `thetam`，`n` 表示 `nnetar`，`s` 代表 `stlm`，最后，`t` 代表 `tbats`。因此，如果我们给 `models`
    一个 `ae` 字符串，它将结合 ARIMA 和 ets 模型的结果。这可以在 `co2` 数据集上对不同时间序列模型的组合进行说明：'
- en: '[PRE23]'
  id: totrans-239
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Though the discussion of the ensemble is very brief here, time series literature
    has only recently begun to adapt to ensembling techniques.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然这里的集成讨论非常简短，但时间序列文献最近才开始适应集成技术。
- en: '**Exercise**: The options of `weights` and `errorMethod` are crucial to put
    different time series models together. Explore these options for the different
    datasets introduced and discussed in the chapter.'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: '**练习**：`weights` 和 `errorMethod` 选项对于将不同的时间序列模型组合在一起至关重要。探索章节中介绍和讨论的不同数据集的这些选项。'
- en: Summary
  id: totrans-242
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: Time series data poses new challenges and complexities. The chapter began with
    an introduction to important and popular datasets. We looked at different time
    series and their intricacies. Visualization of time series provides great insight,
    and the time series plots, along with the seasonal plot, are complementarily used
    for clear ideas and niche implementations. Accuracy metrics are different for
    the time series, and we looked at more than a handful of these. The concepts of
    ACF and PACF are vital in model identification, and seasonal components are also
    important to the modeling of time series. We also saw that different models express
    different datasets, and the degree of variation is something similar to the usual
    regression problems. The bagging of time series (ets only) reduces the variance
    of the forecasts. Combining heterogeneous base learners was discussed in the concluding
    section. The next chapter is the concluding chapter. We will summarize the main
    takeaways from the first eleven chapters and outline some shortcomings and further
    scope.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 时间序列数据带来了新的挑战和复杂性。本章从介绍重要且流行的数据集开始。我们探讨了不同的时间序列及其复杂性。时间序列的可视化提供了深刻的洞察，时间序列图以及季节性图互补地用于清晰的想法和特定实施。时间序列的准确度指标各不相同，我们探讨了其中的一些。自相关函数（ACF）和偏自相关函数（PACF）的概念在模型识别中至关重要，季节性成分对于时间序列建模也同样重要。我们还看到，不同的模型可以表达不同的数据集，变化的程度类似于常规回归问题。时间序列的袋装（仅ets）减少了预测的方差。在结论部分讨论了结合异构基学习器。下一章是结论章节。我们将总结前十一章的主要收获，并概述一些不足和进一步的研究范围。
