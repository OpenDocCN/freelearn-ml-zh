- en: '5'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '5'
- en: Working with Outliers
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 与异常值一起工作
- en: An outlier is a data point that diverges notably from other values within a
    variable. Outliers may stem from the inherent variability of the feature itself,
    manifesting as extreme values that occur infrequently within the distribution
    (typically found in the tails). They can be the result of experimental errors
    or inaccuracies in data collection processes, or they can signal important events.
    For instance, an unusually high expense in a card transaction may indicate fraudulent
    activity, warranting flagging and potentially blocking the card to safeguard customers.
    Similarly, unusually distinct tumor morphologies can suggest malignancy, prompting
    further examination.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 异常值是指与变量中其他值显著不同的数据点。异常值可能源于特征本身的固有变异性，表现为在分布中不常出现的极端值（通常出现在尾部）。它们可能是实验误差或数据收集过程中的不准确性的结果，或者它们可能表明重要事件。例如，信用卡交易中异常高的费用可能表明欺诈活动，需要标记并可能阻止卡片以保护客户。同样，异常不同的肿瘤形态可能表明恶性，需要进一步检查。
- en: Outliers can exert a disproportionately large impact on a statistical analysis.
    For example, a small number of outliers can reverse the statistical significance
    of a test in either direction (think A/B testing) or directly influence the estimation
    of the parameters of the statistical model (think coefficients). Some machine
    learning models are well known for being susceptible to outliers, such as linear
    regression. Other models are known for being robust to outliers, such as decision-tree-based
    models. AdaBoost is said to be sensitive to outliers in the target variable, and
    in principle, distance-based models, such as PCA and KNN, could also be affected
    by the presence of outliers.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 异常值可以对统计分析产生不成比例的巨大影响。例如，少数异常值可以逆转测试的统计显著性（例如A/B测试）或直接影响统计模型参数的估计（例如系数）。一些机器学习模型因其对异常值的敏感性而闻名，如线性回归。其他模型因其对异常值的鲁棒性而闻名，如基于决策树的模型。AdaBoost据说对目标变量的异常值敏感，原则上，基于距离的模型，如PCA和KNN，也可能受到异常值存在的影响。
- en: There isn’t a strict mathematical definition for what qualifies as an outlier,
    and there is also no consensus on how to handle outliers in statistical or machine
    learning models. If outliers stem from flawed data collection, discarding them
    seems like a safe option. However, in many datasets, pinpointing the exact nature
    of outliers is challenging. Ultimately, detecting and handling outliers remains
    a subjective exercise, reliant on domain knowledge and an understanding of their
    potential impact on models.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 并没有严格的数学定义来界定什么算是异常值，也没有关于如何在统计或机器学习模型中处理异常值的共识。如果异常值源于数据收集的缺陷，丢弃它们似乎是一个安全的选择。然而，在许多数据集中，确定异常值的准确性质是具有挑战性的。最终，检测和处理异常值仍然是一项主观的练习，依赖于领域知识和对它们对模型潜在影响的了解。
- en: In this chapter, we will begin by discussing methods to identify potential outliers,
    or more precisely, observations that significantly deviate from the rest. Then,
    we’ll proceed under the assumption that these observations are not relevant for
    the analysis, and show how to either remove them or reduce their impact on models
    through truncation.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将首先讨论识别潜在异常值的方法，或者更确切地说，识别那些与整体显著不同的观察结果。然后，我们将在假设这些观察结果对分析不相关的前提下继续讨论，并展示如何通过截断移除它们或减少它们对模型的影响。
- en: 'This chapter contains the following recipes:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 本章包含以下食谱：
- en: Visualizing outliers with boxplots and the inter-quartile proximity rule
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用箱线图和四分位数间距规则可视化异常值
- en: Finding outliers using the mean and standard deviation
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用均值和标准差查找异常值
- en: Using the median absolute deviation to find outliers
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用中位数绝对偏差查找异常值
- en: Removing outliers
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 移除异常值
- en: Bringing outliers back within acceptable limits
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将异常值拉回到可接受的范围内
- en: Applying winsorization
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用winsorization
- en: Technical requirements
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: In this chapter, we will use the Python `numpy`, `pandas`, `matplotlib`, `seaborn`,
    and `feature-engine` libraries.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将使用Python的`numpy`、`pandas`、`matplotlib`、`seaborn`和`feature-engine`库。
- en: Visualizing outliers with boxplots and the inter-quartile proximity rule
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用箱线图和四分位数间距规则可视化异常值
- en: 'A common way to visualize outliers is by using boxplots. Boxplots provide a
    standardized display of the variable’s distribution based on quartiles. The box
    contains the observations within the first and third quartiles, known as the **Inter-Quartile
    Range**(**IQR**). The first quartile is the value below which 25% of the observations
    lie (equivalent to the 25th percentile), while the third quartile is the value
    below which 75% of the observations lie (equivalent to the 75th percentile). The
    IQR is calculated as follows:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 可视化异常值的一种常见方法是使用箱线图。箱线图基于四分位数提供变量的标准化分布显示。箱子包含第一和第三四分位数内的观测值，称为**四分位距**（**IQR**）。第一四分位数是低于该值的观测值占25%（相当于第25百分位数），而第三四分位数是低于该值的观测值占75%（相当于第75百分位数）。IQR的计算如下：
- en: '![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"
    display="block"><mml:mi>I</mml:mi><mml:mi>Q</mml:mi><mml:mi>R</mml:mi><mml:mo>=</mml:mo><mml:mn>3</mml:mn><mml:mi>r</mml:mi><mml:mi>d</mml:mi><mml:mo> </mml:mo><mml:mi>q</mml:mi><mml:mi>u</mml:mi><mml:mi>a</mml:mi><mml:mi>r</mml:mi><mml:mi>t</mml:mi><mml:mi>i</mml:mi><mml:mi>l</mml:mi><mml:mi>e</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn><mml:mi>s</mml:mi><mml:mi>t</mml:mi><mml:mo> </mml:mo><mml:mi>q</mml:mi><mml:mi>u</mml:mi><mml:mi>a</mml:mi><mml:mi>r</mml:mi><mml:mi>t</mml:mi><mml:mi>i</mml:mi><mml:mi>l</mml:mi><mml:mi>e</mml:mi></mml:math>](img/21.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"
    display="block"><mml:mi>I</mml:mi><mml:mi>Q</mml:mi><mml:mi>R</mml:mi><mml:mo>=</mml:mo><mml:mn>3</mml:mn><mml:mi>r</mml:mi><mml:mi>d</mml:mi><mml:mo> </mml:mo><mml:mi>q</mml:mi><mml:mi>u</mml:mi><mml:mi>a</mml:mi><mml:mi>r</mml:mi><mml:mi>t</mml:mi><mml:mi>i</mml:mi><mml:mi>l</mml:mi><mml:mi>e</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn><mml:mi>s</mml:mi><mml:mi>t</mml:mi><mml:mo> </mml:mo><mml:mi>q</mml:mi><mml:mi>u</mml:mi><mml:mi>a</mml:mi><mml:mi>r</mml:mi><mml:mi>t</mml:mi><mml:mi>i</mml:mi><mml:mi>l</mml:mi><mml:mi>e</mml:mi></mml:math>](img/21.png)'
- en: 'Boxplots also display whiskers, which are lines that protrude from each end
    of the box toward the minimum and maximum values and up to a limit. These limits
    are given by the minimum or maximum value of the distribution or, in the presence
    of extreme values, by the following equations:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 箱线图也显示须须，这些须须是从箱子的两端向外延伸到最小值和最大值的线条，并延伸到一个极限。这些极限由分布的最小值或最大值给出，或者在存在极端值的情况下，由以下方程给出：
- en: '![<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow><mrow><mi>u</mi><mi>p</mi><mi>p</mi><mi>e</mi><mi>r</mi><mi>l</mi><mi>i</mi><mi>m</mi><mi>i</mi><mi>t</mi><mo>=</mo><mn>3</mn><mi>r</mi><mi>d</mi><mi>q</mi><mi>u</mi><mi>a</mi><mi>r</mi><mi>t</mi><mi>i</mi><mi>l</mi><mi>e</mi><mo>+</mo><mi>I</mi><mi>Q</mi><mi>R</mi><mo>×</mo><mn>1.5</mn></mrow></mrow></math>](img/22.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow><mrow><mi>u</mi><mi>p</mi><mi>p</mi><mi>e</mi><mi>r</mi><mi>l</mi><mi>i</mi><mi>m</mi><mi>i</mi><mi>t</mi><mo>=</mo><mn>3</mn><mi>r</mi><mi>d</mi><mi>q</mi><mi>u</mi><mi>a</mi><mi>r</mi><mi>t</mi><mi>i</mi><mi>l</mi><mi>e</mi><mo>+</mo><mi>I</mi><mi>Q</mi><mi>R</mi><mo>×</mo><mn>1.5</mn></mrow></mrow></math>](img/22.png)'
- en: '![<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow><mrow><mi>l</mi><mi>o</mi><mi>w</mi><mi>e</mi><mi>r</mi><mi>l</mi><mi>i</mi><mi>m</mi><mi>i</mi><mi>t</mi><mo>=</mo><mn>1</mn><mi>s</mi><mi>t</mi><mi>q</mi><mi>u</mi><mi>a</mi><mi>r</mi><mi>t</mi><mi>i</mi><mi>l</mi><mi>e</mi><mo>−</mo><mi>I</mi><mi>Q</mi><mi>R</mi><mo>×</mo><mn>1.5</mn></mrow></mrow></math>](img/23.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow><mrow><mi>l</mi><mi>o</mi><mi>w</mi><mi>e</mi><mi>r</mi><mi>l</mi><mi>i</mi><mi>m</mi><mi>i</mi><mi>t</mi><mo>=</mo><mn>1</mn><mi>s</mi><mi>t</mi><mi>q</mi><mi>u</mi><mi>a</mi><mi>r</mi><mi>t</mi><mi>i</mi><mi>l</mi><mi>e</mi><mo>−</mo><mi>I</mi><mi>Q</mi><mi>R</mi><mo>×</mo><mn>1.5</mn></mrow></mrow></math>](img/23.png)'
- en: According to the **IQR proximity rule**, we can consider a value an outlier
    if it falls beyond the whisker limits determined by the previous equations. In
    boxplots, outliers are indicated as dots.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 根据四分位数间距规则（**IQR proximity rule**），如果值落在由前述方程确定的须须极限之外，我们可以将其视为异常值。在箱线图中，异常值用点表示。
- en: Note
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: If the variable has a normal distribution, about 99% of the observations will
    be located within the interval delimited by the whiskers. Hence, we can treat
    values beyond the whiskers as outliers. Boxplots are, however, non-parametric,
    which is why we also use them to visualize outliers in skewed variables.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 如果变量服从正态分布，大约99%的观测值将位于由须须定义的区间内。因此，我们可以将须须之外的值视为异常值。然而，箱线图是非参数的，这就是为什么我们也使用它们来可视化偏斜变量的异常值。
- en: In this recipe, we’ll begin by visualizing the variable distribution with boxplots,
    and then we’ll calculate the whisker’s limits manually to identify the points
    beyond which we could consider a value as an outlier.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个菜谱中，我们将首先使用箱线图可视化变量分布，然后我们将手动计算触须的极限来识别那些我们可以将其视为异常值的点。
- en: How to do it...
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到这一点...
- en: 'We will create boxplots utilizing the `seaborn` library. Let’s begin by importing
    the Python libraries and loading the dataset:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用`seaborn`库创建箱线图。让我们首先导入Python库并加载数据集：
- en: 'Let’s import the Python libraries and the dataset:'
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们导入Python库和数据集：
- en: '[PRE0]'
  id: totrans-28
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Modify the default background from `seaborn` (it makes prettier plots, but
    that’s subjective, of course):'
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 修改`seaborn`的默认背景（它使图表更美观，但这当然是主观的）：
- en: '[PRE1]'
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Load the California house prices dataset from scikit-learn:'
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从scikit-learn加载加利福尼亚房价数据集：
- en: '[PRE2]'
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Make a boxplot of the `MedInc` variable to visualize its distribution:'
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 绘制`MedInc`变量的箱线图以可视化其分布：
- en: '[PRE3]'
  id: totrans-34
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'In the following boxplot, we identify the box containing the observations within
    the IQR, that is, the observations between the first and third quartiles. We also
    see the whiskers. On the left, the whisker extends to the minimum value of `MedInc`;
    on the right, the whisker goes up to the third quartile plus 1.5 times the IQR.
    Values beyond the right whisker are represented as dots and could constitute outliers:'
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在下面的箱线图中，我们识别出包含在四分位数范围（IQR）内的观测值所在的箱子，即第一和第三四分位数之间的观测值。我们还可以看到触须。在左侧，触须延伸到`MedInc`的最小值；在右侧，触须延伸到第三四分位数加上1.5倍的四分位数范围。超出右侧触须的值用点表示，可能构成异常值：
- en: '![Figure 5.1 – Boxplot of the MedInc variable highlighting potential outliers
    on the right tail of the distribution](img/B22396_05_1.jpg)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![图5.1 – 突出显示分布右侧尾部的潜在异常值的`MedInc`变量的箱线图](img/B22396_05_1.jpg)'
- en: Figure 5.1 – Boxplot of the MedInc variable highlighting potential outliers
    on the right tail of the distribution
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.1 – 突出显示分布右侧尾部的潜在异常值的`MedInc`变量的箱线图
- en: Note
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: As shown in *Figure 5**.1*, the boxplot returns asymmetric boundaries denoted
    by the varying lengths of the left and right whiskers. This makes boxplots a suitable
    method for identifying outliers in highly skewed distributions. As we’ll see in
    the coming recipes, alternative methods to identify outliers create symmetric
    boundaries around the center of the distribution, which may not be the best option
    for asymmetric distributions.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 如*图5.1*所示，箱线图返回不对称的边界，由左右触须的长度变化表示。这使得箱线图成为识别高度偏斜分布中异常值的合适方法。正如我们将在接下来的菜谱中看到，识别异常值的替代方法在分布中心周围创建对称边界，这可能不是不对称分布的最佳选择。
- en: 'Let’s now create a function to plot a boxplot next to a histogram:'
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在让我们创建一个函数来在直方图旁边绘制箱线图：
- en: '[PRE4]'
  id: totrans-41
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Let’s use the previous function to create the plots for the `MedInc` variable:'
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们使用之前的函数来创建`MedInc`变量的绘图：
- en: '[PRE5]'
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'In the following figure, we can see the relationship between the boxplot and
    the variable’s distribution shown in the histogram. Note how most of `MedInc`’s
    observations are located within the IQR box. `MedInc`’s potential outliers lie
    on the right tail, corresponding to people with unusually high-income salaries:'
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在下面的图中，我们可以看到箱线图和变量分布在直方图中的关系。注意`MedInc`的大多数观测值都位于四分位数范围内。`MedInc`的潜在异常值位于右侧尾部，对应于收入异常高的个人：
- en: '![Figure 5.2 – Boxplot and histogram – two ways of displaying a variable’s
    distribution](img/B22396_05_2.jpg)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![图5.2 – 箱线图和直方图 – 显示变量分布的两种方式](img/B22396_05_2.jpg)'
- en: Figure 5.2 – Boxplot and histogram – two ways of displaying a variable’s distribution
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.2 – 箱线图和直方图 – 显示变量分布的两种方式
- en: Now that we’ve seen how we can visualize outliers, let’s see how to calculate
    the limits beyond which we find outliers at each side of the distribution.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经看到了如何可视化异常值，接下来让我们看看如何计算分布两侧的异常值所在的极限。
- en: 'Let’s create a function that returns the limits based on the IQR proximity
    rule:'
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们创建一个函数，该函数根据IQR邻近规则返回极限：
- en: '[PRE6]'
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Note
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Remember that the first and third quartiles are equivalent to the 25th and 75th
    percentiles. That’s why we use pandas’ `quantile` to determine those values.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 记住，第一和第三四分位数等同于第25和第75百分位数。这就是为什么我们使用pandas的`quantile`函数来确定这些值。
- en: 'With the function from *step 7*, we’ll calculate the extreme limits for `MedInc`:'
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用第7步中的函数，我们将计算`MedInc`的极端极限：
- en: '[PRE7]'
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: If we now execute `lower_limit` and `upper_limit`, we will see the values `-0.7063`
    and `8.013`. The lower limit is beyond `MedInc`’s minimum value, hence in the
    boxplot, the whisker only goes up to the minimum value. The upper limit, on the
    other hand, coincides with the right whisker’s limit.
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果我们现在执行 `lower_limit` 和 `upper_limit`，我们将看到 `-0.7063` 和 `8.013` 这两个值。下限超出了
    `MedInc` 的最小值，因此在箱线图中，触须只延伸到最小值。另一方面，上限与右触须的极限相吻合。
- en: Note
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Common values to multiply the IQR are `1.5`, which is the default value in boxplots,
    or `3` if we want to be more conservative.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 乘以 IQR 的常见值是 `1.5`，这是箱线图中的默认值，或者如果我们想更保守一些，是 `3`。
- en: 'Let’s display the box plot and histogram for the `HouseAge` variable:'
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们显示 `HouseAge` 变量的箱线图和直方图：
- en: '[PRE8]'
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'We can see that this variable does not seem to contain outliers, and hence
    the whiskers in the box plot extend to the minimum and maximum values:'
  id: totrans-59
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们可以看到，这个变量似乎不包含异常值，因此箱线图中的触须延伸到最小值和最大值：
- en: '![Figure 5.3 – Boxplot and histogram of the HouseAge variable](img/B22396_05_3.jpg)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.3 – HouseAge 变量的箱线图和直方图](img/B22396_05_3.jpg)'
- en: Figure 5.3 – Boxplot and histogram of the HouseAge variable
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.3 – HouseAge 变量的箱线图和直方图
- en: 'Let’s find the variable’s limits according to the IQR proximity rule:'
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们根据四分位数间距规则找到变量的极限：
- en: '[PRE9]'
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: If we execute `lower_limit` and `upper_limit`, we will see the values `-10.5`
    and `65.5`, which are beyond the edges of the plots, and hence we don’t see any
    outliers.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们执行 `lower_limit` 和 `upper_limit`，我们将看到 `-10.5` 和 `65.5` 这两个值，它们超出了图表的边缘，因此我们没有看到任何异常值。
- en: How it works…
  id: totrans-65
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: In this recipe, we used the `boxplot` method from Seaborn to create the boxplots
    and then we calculated the limits beyond which a value could be considered an
    outlier based on the IQR proximity rule.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个菜谱中，我们使用了 Seaborn 的 `boxplot` 方法来创建箱线图，然后我们根据四分位数间距规则计算了可以被认为是异常值的极限。
- en: In *Figure 5**.2*, we saw that the box in the boxplot for `MedInc` extended
    from approximately 2 to 5, corresponding to the first and third quantiles (you
    can determine these values precisely by executing `X[`“`MedInc`”`].quantile(0.25)`
    and `X[`“`MedInc`”`].quantile(0.75)`). We also saw that the whiskers start at
    `MedInc`’s minimum on the left and extend up to `8.013` on the right (we know
    this value exactly because we calculated it in *step 8*). `MedInc` showed values
    greater than `8.013`, which were displayed in the boxplot as dots. Those are the
    values that could be considered outliers.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在 *图 5*.2 中，我们看到了 `MedInc` 的箱线图中的箱子从大约 2 延伸到 5，对应于第一和第三分位数（你可以通过执行 `X["MedInc"].quantile(0.25)`
    和 `X["MedInc"].quantile(0.75)` 来精确确定这些值）。我们还看到，触须从左边的 `MedInc` 的最小值开始，延伸到右边的 `8.013`（我们知道这个值，因为我们已经在
    *步骤 8* 中计算了它）。`MedInc` 显示了大于 `8.013` 的值，这些值在箱线图中以点表示。这些是可以被认为是异常值的值。
- en: In *Figure 5**.3*, we displayed the boxplot for the `HouseAge` variable. The
    box included values ranging from approximately 18 to 35 (you can determine the
    precise values by executing `X[`“`HouseAge`”`].quantile(0.25)` and `X[`“`HouseAge`”`].quantile(0.75)`).
    The whiskers extended to the minimum and maximum values of the distribution. The
    limits of the whiskers in the plot did not coincide with those based on the IQR
    proximity rule (which we calculated in *step 10*) because these limits were far
    beyond the value range observed for this variable.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 在 *图 5*.3 中，我们展示了 `HouseAge` 变量的箱线图。箱子包含了从大约 18 到 35 的值（你可以通过执行 `X["HouseAge"].quantile(0.25)`
    和 `X["HouseAge"].quantile(0.75)` 来确定精确值）。触须延伸到分布的最小值和最大值。图表中触须的极限与基于四分位数间距规则（我们在
    *步骤 10* 中计算的）的极限不一致，因为这些极限远远超出了这个变量观察到的值范围。
- en: Finding outliers using the mean and standard deviation
  id: totrans-69
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用均值和标准差查找异常值
- en: In normally distributed variables, around 99.8% of the observations lie within
    the interval comprising the mean plus and minus three times the standard deviation.
    Thus, values beyond those limits can be considered outliers; they are rare.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 在正态分布的变量中，大约 99.8% 的观测值位于均值加减三倍标准差的区间内。因此，超出这些极限的值可以被认为是异常值；它们是罕见的。
- en: Note
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Using the mean and standard deviation to detect outliers has some drawbacks.
    Firstly, it assumes a normal distribution, including outliers. Secondly, outliers
    strongly influence the mean and standard deviation. Therefore, a recommended alternative
    is the **Median Absolute Deviation** (**MAD**), which we’ll discuss in the next
    recipe.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 使用均值和标准差来检测异常值有一些缺点。首先，它假设包括异常值在内的正态分布。其次，异常值强烈影响均值和标准差。因此，一个推荐的替代方案是**中位数绝对偏差**（**MAD**），我们将在下一个菜谱中讨论。
- en: In this recipe, we will identify outliers as those observations that lie outside
    the interval delimited by the mean plus and minus three times the standard deviation.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个菜谱中，我们将识别异常值为那些位于均值加减三倍标准差定义的区间之外的观测值。
- en: How to do it...
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到...
- en: 'Let’s begin the recipe by importing the Python libraries and loading the dataset:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始菜谱，导入 Python 库并加载数据集：
- en: 'Let’s import the Python libraries and dataset:'
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们导入 Python 库和数据集：
- en: '[PRE10]'
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Load the breast cancer dataset from scikit-learn:'
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 scikit-learn 加载乳腺癌数据集：
- en: '[PRE11]'
  id: totrans-79
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Create a function to plot a boxplot next to a histogram:'
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个函数来在直方图旁边绘制箱线图：
- en: '[PRE12]'
  id: totrans-81
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Note
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: We discussed the function from *step 3* in the previous recipe, *Visualizing
    outliers with boxplots and the inter-quartile* *proximity rule*.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在先前的菜谱中讨论了 *步骤 3* 的函数，*使用箱线图和四分位数接近规则可视化异常值*。
- en: 'Let’s plot the distribution of the `mean` `smoothness` variable:'
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们绘制 `mean` `smoothness` 变量的分布：
- en: '[PRE13]'
  id: totrans-85
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'In the following boxplot, we see that the variable’s values show a distribution
    like the normal distribution, and it has six outliers – one on the left and five
    on the right tail:'
  id: totrans-86
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在下面的箱线图中，我们看到变量的值显示出类似于正态分布的分布，并且它有六个异常值——一个在左侧，五个在右侧尾部：
- en: '![Figure 5.4 – Boxplot and histogram of the variable mean smoothness](img/B22396_05_4.jpg)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.4 – 变量均值平滑度的箱线图和直方图](img/B22396_05_4.jpg)'
- en: Figure 5.4 – Boxplot and histogram of the variable mean smoothness
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.4 – 变量均值平滑度的箱线图和直方图
- en: 'Create a function that returns the mean plus and minus `fold` times the standard
    deviation, where `fold` is a parameter to the function:'
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个函数，该函数返回均值加减 `fold` 倍标准差，其中 `fold` 是函数的参数：
- en: '[PRE14]'
  id: totrans-90
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Use the function to identify the extreme limits of the `mean` `smoothness`
    variable:'
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用该函数来识别 `mean` `smoothness` 变量的极端限制：
- en: '[PRE15]'
  id: totrans-92
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: If we now execute `lower_limit` or `upper_limit`, we will see the values `0.0541`
    and `0.13855`, corresponding to the limits beyond which we can consider a value
    an outlier.
  id: totrans-93
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果我们现在执行 `lower_limit` 或 `upper_limit`，我们会看到值 `0.0541` 和 `0.13855`，这对应于我们可以考虑值为异常值的限制之外的范围。
- en: Note
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The interval between the mean plus and minus three times the standard deviation
    encloses 99.87% of the observations if the variable is normally distributed. For
    less conservative limits, we could multiply the standard deviation by 2 or 2.5,
    which would produce intervals that enclose 95.4% and 97.6% of the observations,
    respectively.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 如果变量是正态分布的，均值加减三倍标准差之间的区间包含了 99.87% 的观测值。对于不那么保守的限制，我们可以将标准差乘以 2 或 2.5，这将产生包含
    95.4% 和 97.6% 观测值的区间。
- en: 'Create a Boolean vector that flags observations with values beyond the limits
    determined in *step 6*:'
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个布尔向量，标记超出在 *步骤 6* 中确定的限制的观测值：
- en: '[PRE16]'
  id: totrans-97
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: If we now execute `outliers.sum()`, we will see the value `5`, indicating that
    there are five outliers or observations that are smaller or greater than the extreme
    values found with the mean and the standard deviation. According to these limits,
    we’d identify one outlier less compared to the IQR rule.
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果我们现在执行 `outliers.sum()`，我们会看到值 `5`，这表明有五个异常值或观测值比使用均值和标准差找到的极端值小或大。根据这些限制，我们将比
    IQR 规则少识别一个异常值。
- en: 'Let’s add red vertical lines to the histogram from *step 3* to highlight the
    limits determined by using the mean and the standard deviation:'
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们在 *步骤 3* 的直方图中添加红色垂直线，以突出显示使用均值和标准差确定的限制：
- en: '[PRE17]'
  id: totrans-100
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'And now let’s make the plots:'
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在让我们制作这些图表：
- en: '[PRE18]'
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'In the following plot, we see that the limits observed by the IQR proximity
    rule in the box plot are less conservative than those identified by the mean and
    the standard deviation. Hence why we observe six potential outliers in the boxplot,
    but only five based on the mean and standard deviation calculations:'
  id: totrans-103
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在下面的图中，我们看到箱线图中 IQR 接近规则观察到的限制比均值和标准差识别的限制更保守。因此，我们在箱线图中观察到六个潜在的异常值，但根据均值和标准差计算只有五个：
- en: '![Figure 5.5 – Comparison of the limits between the whiskers in the boxplot
    and those determined by using the mean and the standard deviation (vertical lines
    in the histogram)](img/B22396_05_5.jpg)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![图5.5 – 比较箱线图中触须的极限与使用平均值和标准差确定的极限（直方图中的垂直线）](img/B22396_05_5.jpg)'
- en: Figure 5.5 – Comparison of the limits between the whiskers in the boxplot and
    those determined by using the mean and the standard deviation (vertical lines
    in the histogram)
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.5 – 比较箱线图中触须的极限与使用平均值和标准差确定的极限（直方图中的垂直线）
- en: The boundaries derived from the mean and standard deviation are symmetric. They
    extend equidistantly from the center of the distribution toward both tails. As
    previously mentioned, these boundaries are only suitable for normally distributed
    variables.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 由平均值和标准差推导出的边界是对称的。它们从分布的中心向两侧等距离延伸。如前所述，这些边界仅适用于正态分布的变量。
- en: How it works…
  id: totrans-107
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: With pandas’ `mean()` and `std()`, we captured the mean and standard deviation
    of the variable. We determined the limits as the mean plus and minus three times
    the standard deviation. To highlight the outliers, we used NumPy’s `where()`.
    The `where()` function scanned the rows of the variable, and if the value was
    greater than the upper limit or smaller than the lower limit, it was assigned
    `True`, and alternatively `False`. Finally, we used pandas’ `sum()` over this
    Boolean vector to calculate the total number of outliers.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 使用pandas的`mean()`和`std()`，我们捕捉了变量的平均值和标准差。我们将极限确定为平均值加减三倍的标准差。为了突出异常值，我们使用了NumPy的`where()`。`where()`函数扫描变量的行，如果值大于上限或小于下限，则被分配`True`，否则分配`False`。最后，我们使用pandas的`sum()`对这个布尔向量进行求和，以计算异常值的总数。
- en: Finally, we compared the boundaries to determine outliers returned by the IQR
    proximity rule, which we discussed in the previous recipe, *Visualizing outliers
    with boxplots and the inter-quartile proximity rule*, and the mean and the standard
    deviation. We observed that the limits of the IQR rule are less conservative.
    That means that with the IQR rule, we’d flag more outliers in this particular
    variable.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们比较了边界，以确定由IQR邻近规则返回的异常值，我们在之前的配方中讨论了该规则，即*使用箱线图和四分位数邻近规则可视化异常值*，以及平均值和标准差。我们观察到IQR规则的极限更为保守。这意味着使用IQR规则，我们会在这个特定变量中标记出更多的异常值。
- en: Using the median absolute deviation to find outliers
  id: totrans-110
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用中位数绝对偏差来寻找异常值
- en: 'The mean and the standard deviation are heavily impacted by outliers. Hence,
    using these parameters to identify outliers can defeat the purpose. A better way
    to identify outliers is by using MAD. MAD is the median of the absolute deviation
    between each observation and the median value of the variable:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 平均值和标准差受到异常值的影响很大。因此，使用这些参数来识别异常值可能会适得其反。一种更好的识别异常值的方法是使用MAD。MAD是每个观测值与变量中位数绝对偏差的中位数：
- en: '![<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow><mrow><mrow><mi>M</mi><mi>A</mi><mi>D</mi><mo>=</mo><mi>b</mi><mo>×</mo><mi>M</mi><mi>e</mi><mi>d</mi><mi>i</mi><mi>a</mi><mi>n</mi><mo>(</mo><mfenced
    open="|" close="|"><mrow><mi>x</mi><mi>i</mi><mo>−</mo><mi>M</mi><mi>e</mi><mi>d</mi><mi>i</mi><mi>a</mi><mi>n</mi><mfenced
    open="(" close=")"><mi>X</mi></mfenced></mrow></mfenced><mo>)</mo></mrow></mrow></mrow></math>](img/24.png)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow><mrow><mrow><mi>M</mi><mi>A</mi><mi>D</mi><mo>=</mo><mi>b</mi><mo>×</mo><mi>M</mi><mi>e</mi><mi>d</mi><mi>i</mi><mi>a</mi><mi>n</mi><mo>(</mo><mfenced
    open="|" close="|"><mrow><mi>x</mi><mi>i</mi><mo>−</mo><mi>M</mi><mi>e</mi><mi>d</mi><mi>i</mi><mi>a</mi><mi>n</mi><mfenced
    open="(" close=")"><mi>X</mi></mfenced></mrow></mfenced><mo>)</mo></mrow></mrow></mrow></math>](img/24.png)'
- en: In the previous equation, `xi` is each observation in the `X` variable. The
    beauty of MAD is that it uses the median instead of the mean, which is robust
    to outliers. The `b` constant is used to estimate the standard deviation from
    MAD, and if we assume normality, then `b =` `1.4826`.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 在前一个方程中，`xi`是变量`X`中的每个观测值。MAD的美丽之处在于它使用中位数而不是平均值，这使得它对异常值具有鲁棒性。`b`常数用于从MAD估计标准差，如果我们假设正态性，那么`b
    =` `1.4826`。
- en: Note
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: If the variable is assumed to have a different distribution, `b` is then calculated
    as 1 divided by the 75th percentile. In the case of normality, 1/75th percentile
    = 1.4826.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 如果假设变量具有不同的分布，则`b`的计算为75百分位数除以1。在正态分布的情况下，1/75百分位数 = 1.4826。
- en: After computing MAD, we use the median and MAD to establish distribution limits,
    designating values beyond these limits as outliers. The limits are set as the
    median plus and minus a multiple of MAD, typically ranging from 2 to 3.5\. The
    multiplication factor we choose reflects how stringent we want to be (the higher,
    the more conservative). In this recipe, we will identify outliers using MAD.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 在计算MAD之后，我们使用中位数和MAD来建立分布极限，将超出这些极限的值指定为异常值。这些极限被设置为中位数加减MAD的倍数，通常在2到3.5之间。我们选择的乘数反映了我们希望有多严格（越高，越保守）。在这个菜谱中，我们将使用MAD来识别异常值。
- en: How to do it...
  id: totrans-117
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Let’s begin the recipe by importing the Python libraries and loading the dataset:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从导入Python库和加载数据集开始这个菜谱：
- en: 'Let’s import the Python libraries and dataset:'
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们导入Python库和数据集：
- en: '[PRE19]'
  id: totrans-120
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Load the breast cancer dataset from scikit-learn:'
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从scikit-learn加载乳腺癌数据集：
- en: '[PRE20]'
  id: totrans-122
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Create a function that returns the limits based on MAD:'
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个函数，根据MAD返回极限：
- en: '[PRE21]'
  id: totrans-124
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Let’s use the function to capture the extreme limits of the `mean` `smoothness`
    variable:'
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们使用该函数来捕获`mean` `smoothness`变量的极端极限：
- en: '[PRE22]'
  id: totrans-126
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: If we execute `lower_limit` or `upper_limit`, we will see the values `0.0536`
    and `0.13812`, corresponding to the limits beyond which we can consider a value
    an outlier.
  id: totrans-127
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果我们执行`lower_limit`或`upper_limit`，我们将看到`0.0536`和`0.13812`的值，这对应于我们可以考虑值为异常值的极限。
- en: 'Let’s create a Boolean vector that flags observations with values beyond the
    limits:'
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们创建一个布尔向量，标记超出极限的观测值：
- en: '[PRE23]'
  id: totrans-129
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: If we now execute `outliers.sum()`, we will see the value `5`, indicating that
    there are five outliers or observations that are smaller or greater than the extreme
    values found with MAD.
  id: totrans-130
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果我们现在执行`outliers.sum()`，我们将看到`5`的值，这表明有五个异常值或观测值，这些值小于或大于使用MAD找到的极端值。
- en: 'Let’s make a function to plot a boxplot next to a histogram of a variable,
    highlighting in the histogram the limits calculated in *step 4*:'
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们编写一个函数，在变量的直方图旁边绘制箱线图，突出显示在直方图中计算的*步骤4*的极限：
- en: '[PRE24]'
  id: totrans-132
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'And now let’s make the plots:'
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在让我们制作这些图表：
- en: '[PRE25]'
  id: totrans-134
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'In the following plot, we see that the limits observed by the IQR proximity
    rule in the box plot are less conservative than those identified by using MAD.
    MAD returns symmetric boundaries, while the boxplot generates asymmetric boundaries,
    which are more suitable for highly skewed distributions:'
  id: totrans-135
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在下面的图中，我们可以看到，箱线图中IQR邻近规则观察到的极限比使用MAD确定的极限更为保守。MAD返回对称边界，而箱线图生成非对称边界，这对于高度偏斜的分布更为合适：
- en: '![Figure 5.6 – Comparison of the limits between the whiskers in the boxplot
    and those determined by using MAD](img/B22396_05_6.jpg)'
  id: totrans-136
  prefs: []
  type: TYPE_IMG
  zh: '![图5.6 – 箱线图中触须与使用MAD确定的极限之间的比较](img/B22396_05_6.jpg)'
- en: Figure 5.6 – Comparison of the limits between the whiskers in the boxplot and
    those determined by using MAD
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.6 – 箱线图中触须与使用MAD确定的极限之间的比较
- en: Note
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Detecting outliers with MAD requires that the variable has certain variability.
    If more than 50% of the values in a variable are identical, the median coincides
    with the most frequent value, and MAD=0\. This means that all values different
    from the median will be flagged as outliers. This constitutes another limitation
    of using MAD in outlier detection.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 使用MAD检测异常值需要变量具有一定的变异性。如果一个变量中超过50%的值是相同的，中位数将与最频繁的值一致，MAD=0。这意味着所有与中位数不同的值将被标记为异常值。这构成了使用MAD进行异常检测的另一个限制。
- en: That’s it! You now know how to identify outliers using the median and MAD.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 就这样！你现在知道如何使用中位数和MAD来识别异常值。
- en: How it works…
  id: totrans-141
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: We determined the median with pandas’ `median()` and the absolute difference
    with pandas’ `abs()`. Next, we used the NumPy `where()` function to create a Boolean
    vector with `True` if a value was greater than the upper limit or smaller than
    the lower limit, otherwise `False`. Finally, we used pandas’ `sum()` over this
    Boolean vector to calculate the total number of outliers.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用pandas的`median()`确定了中位数，使用pandas的`abs()`确定了绝对差异。接下来，我们使用NumPy的`where()`函数创建一个布尔向量，如果值大于上限或小于下限，则为`True`，否则为`False`。最后，我们使用pandas的`sum()`在这个布尔向量上计算异常值的总数。
- en: Finally, we compared the boundaries to determine outliers returned by the IQR
    proximity rule, which we discussed in the *Visualizing outliers with boxplots
    and the inter-quartile range proximity rule* recipe, and those returned by using
    MAD. The limits returned by the IQR rule were less conservative. This behavior
    can be changed by multiplying the IQR by 3 instead of 1.5, which is the default
    value in boxplots. In addition, we noted that MAD returns symmetric boundaries,
    whereas the boxplot provided asymmetric limits, which could be better suited for
    asymmetric distributions.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们将边界与 IQR 接近规则返回的异常值进行比较，我们在 *使用箱线图和四分位数范围接近规则可视化异常值* 烹饪法中讨论了这一点，以及使用 MAD
    返回的异常值。IQR 规则返回的边界不太保守。通过将 IQR 乘以 3 而不是默认的 1.5（箱线图中的默认值）来改变这种行为。此外，我们注意到 MAD 返回对称边界，而箱线图提供了不对称的边界，这可能更适合不对称分布。
- en: See also
  id: totrans-144
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 参见
- en: 'For a thorough discussion of the advantages and limitations of the different
    methods to detect outliers, check out the following resources:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 要彻底讨论检测异常值的不同方法的优缺点，请查看以下资源：
- en: Rousseeuw PJ, Croux C. *Alternatives to the Median Absolute deviation*. Journal
    of the American Statistical Association, 1993\. [http://www.jstor.org/stable/2291267](https://www.jstor.org/stable/2291267).
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Rousseeuw PJ, Croux C. *中位数绝对偏差的替代方案*。美国统计学会杂志，1993\. [http://www.jstor.org/stable/2291267](https://www.jstor.org/stable/2291267)。
- en: 'Leys C, et. al. *Detecting outliers: Do not use standard deviation around the
    mean, use absolute deviation around the median*. Journal of Experimental Social
    Psychology, 2013\. http://dx.doi.org/10.1016/j.jesp.2013.03.013.'
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Leys C, et. al. *检测异常值：不要使用围绕平均值的标准差，而要使用围绕中位数的绝对差分*。实验社会心理学杂志，2013\. http://dx.doi.org/10.1016/j.jesp.2013.03.013。
- en: Thériault R, et. al. *Check your outliers**! An introduction to identifying
    statistical outliers in R with easystats*. Behavior Research Methods, 2024\. [https://doi.org/10.3758/s13428-024-02356-w](https://link.springer.com/article/10.3758/s13428-024-02356-w).
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Thériault R, et. al. *检查你的异常值**！使用 easystats 在 R 中识别统计异常值入门*。行为研究方法，2024\. [https://doi.org/10.3758/s13428-024-02356-w](https://link.springer.com/article/10.3758/s13428-024-02356-w)。
- en: Removing outliers
  id: totrans-149
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 移除异常值
- en: 'Recent studies distinguish three types of outliers: error outliers, interesting
    outliers, and random outliers. Error outliers are likely due to human or methodological
    errors and should be either corrected or removed from the data analysis. In this
    recipe, we’ll assume outliers are errors (you don’t want to remove interesting
    or random outliers) and remove them from the dataset.'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 近期研究区分了三种类型的异常值：错误异常值、有趣异常值和随机异常值。错误异常值可能是由人为或方法错误引起的，应该纠正或从数据分析中删除。在这个烹饪法中，我们假设异常值是错误（你不想删除有趣或随机异常值）并从数据集中删除它们。
- en: How to do it...
  id: totrans-151
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'We’ll use the IQR proximity rule to find the outliers and then remove them
    from the data using pandas and Feature-engine:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用 IQR 接近规则来查找异常值，然后使用 pandas 和 Feature-engine 从数据中移除它们。
- en: 'Let’s import the Python libraries, functions, and classes:'
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们导入 Python 库、函数和类：
- en: '[PRE26]'
  id: totrans-154
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Load the California housing dataset from scikit-learn and separate it into
    train and test sets:'
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 scikit-learn 加载加利福尼亚住房数据集并将其分为训练集和测试集：
- en: '[PRE27]'
  id: totrans-156
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Let’s create a function to find the limits beyond which we’ll consider a data
    point an outlier using the IQR proximity rule:'
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们创建一个函数，使用 IQR 接近规则找到我们将将其视为异常值的极限：
- en: '[PRE28]'
  id: totrans-158
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Note
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: In *step 3*, we use the IQR proximity rule to find the limits beyond which data
    points will be considered outliers, which we discussed in the *Visualizing outliers
    with boxplots and the inter-quartile proximity rule* recipe. Alternatively, you
    can identify outliers with the mean and the standard deviation or MAD, as we covered
    in the *Finding outliers using the mean and standard deviation* and *Using the
    median absolute deviation to find* *outliers* recipes.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 在 *第 3* 步中，我们使用 IQR 接近规则找到将数据点视为异常值的极限，我们在 *使用箱线图和四分位数接近规则可视化异常值* 烹饪法中讨论了这一点。或者，你可以使用均值和标准差或
    MAD 来识别异常值，正如我们在 *使用均值和标准差查找异常值* 和 *使用中位数绝对偏差查找异常值* 烹饪法中所涵盖的。
- en: 'Using the function from *step 3* , let’s determine the limits of the `MedInc`
    variable:'
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用第 *3* 步中的函数，让我们确定 `MedInc` 变量的范围：
- en: '[PRE29]'
  id: totrans-162
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'If you execute `print(lower_limit, upper_limit)`, you’ll see the result of
    the previous command: `(-``3.925900000000002, 11.232600000000001)`.'
  id: totrans-163
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果你执行 `print(lower_limit, upper_limit)`，你会看到上一个命令的结果：`(-3.925900000000002, 11.232600000000001)`。
- en: 'Let’s retain the observations in the train and test sets whose values are greater
    than or equal to (`ge`) the lower limit:'
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE30]'
  id: totrans-165
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Let’s retain the observations whose values are lower than or equal to (`le`)
    the upper limit:'
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE31]'
  id: totrans-167
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: Go ahead and execute `X_train.shape` followed by `train_t.shape` to corroborate
    that the transformed DataFrame contains fewer observations than the original one
    after removing the outliers.
  id: totrans-168
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: We can remove outliers across multiple variables simultaneously with `feature-engine`.
  id: totrans-169
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Set up a transformer to identify outliers in three variables by using the IQR
    rule:'
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE32]'
  id: totrans-171
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: Note
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
- en: '`OutlierTrimmer` can identify boundaries using the IQR, as we show in this
    recipe, as well as by using the mean and standard deviation, or MAD. You need
    to change `capping_method` to `gaussian` or `mad`, respectively.'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
- en: 'Fit the transformer to the training set so that it learns those limits:'
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE33]'
  id: totrans-175
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: Note
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
- en: 'By executing `trimmer.left_tail_caps_`, we can visualize the lower limits for
    the three variables: `{''MedInc'': -0.6776500000000012, ''HouseAge'': -10.5, ''Population'':
    -626.0}`. By executing `trimmer.right_tail_caps_`, we can see the variables’ upper
    limits: `{''MedInc'': 7.984350000000001, ''HouseAge'': 65.5, ''``Population'':
    3134.0}`.'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
- en: 'Finally, let’s remove outliers from the train and test sets:'
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE34]'
  id: totrans-179
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE34]'
- en: To finish with the recipe, let’s compare the distribution of a variable before
    and after removing outliers.
  id: totrans-180
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Let’s create a function to display a boxplot on top of a histogram:'
  id: totrans-181
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE35]'
  id: totrans-182
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE35]'
- en: Note
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
- en: We discussed the code in *step 10* in the *Visualizing outliers with boxplots*
    recipe earlier in this chapter.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s plot the distribution of `MedInc` before removing the outliers:'
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE36]'
  id: totrans-186
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'In the following plot, we see that `MedInc` is skewed and observations greater
    than 8 are marked as outliers:'
  id: totrans-187
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 5.7– Boxplot and the histogram of MedInc before removing outliers.](img/B22396_05_7.jpg)'
  id: totrans-188
  prefs: []
  type: TYPE_IMG
- en: Figure 5.7– Boxplot and the histogram of MedInc before removing outliers.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
- en: 'Finally, let’s plot the distribution of `MedInc` after removing the outliers:'
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE37]'
  id: totrans-191
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'After removing outliers, `MedInc` seems less skewed and its values more evenly
    distributed:'
  id: totrans-192
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 5.8 – Boxplot and the histogram of MedInc after removing outliers](img/B22396_05_8.jpg)'
  id: totrans-193
  prefs: []
  type: TYPE_IMG
- en: Figure 5.8 – Boxplot and the histogram of MedInc after removing outliers
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
- en: Note
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
- en: 'Using the IQR rule over the transformed variable reveals new outliers. This
    is not surprising; removing observations at the extremes of the distribution alters
    parameters such as the median and quartile values, which in turn determine the
    length of the whiskers, potentially identifying additional observations as outliers.
    The tools that we use to identify outliers are just that: tools. To unequivocally
    identify outliers, we need to support these tools with additional data analysis.'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
- en: If thinking of removing error outliers from the dataset, make sure to compare
    and report the results with and without outliers, to see the extent of their impact
    on the models.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
- en: How it works...
  id: totrans-198
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The `ge()` and `le()` methods from pandas created Boolean vectors identifying
    observations exceeding or falling below thresholds set by the IQR proximity rule.
    We used these vectors with pandas `loc` to retain observations within the interval
    defined by the IQR.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: pandas中的`ge()`和`le()`方法创建了布尔向量，用于识别超过或低于由IQR接近规则设定的阈值的观测值。我们使用这些向量与pandas的`loc`一起保留在IQR定义的区间内的观测值。
- en: The `feature-engine` library’s `OutlierTrimmer()` automates the procedure of
    removing outliers for multiple variables. `OutlierTrimmer()` can identify outliers
    based on the mean and standard deviation, IQR proximity rule, MAD, or quantiles.
    We can modify this behavior through the `capping_method` parameter.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: '`feature-engine`库的`OutlierTrimmer()`自动化了为多个变量移除异常值的程序。`OutlierTrimmer()`可以根据均值和标准差、IQR接近规则、MAD或分位数来识别异常值。我们可以通过`capping_method`参数修改这种行为。'
- en: The methods to identify outliers can be made more or less conservative by changing
    the factor by which we multiply the IQR, the standard deviation, or MAD. With
    `OutlierTrimmer()`, we can control the strength of the methods through the `fold`
    parameter.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 通过改变我们乘以IQR、标准差或MAD的系数，可以使得识别异常值的方法更加或更加保守。通过`OutlierTrimmer()`，我们可以通过`fold`参数控制方法的强度。
- en: With `tails` set to `"both"`, `OutlierTrimmer()` found and removed outliers
    at both ends of the variables’ distribution. To remove outliers just on one of
    the tails, we can pass `"left"` or `"right"` to the `tails` parameter.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 将`tails`设置为`"both"`时，`OutlierTrimmer()`在变量的分布两端找到了并移除了异常值。要仅移除一端的异常值，我们可以将`"left"`或`"right"`传递给`tails`参数。
- en: '`OutlierTrimmer()` adopts the scikit-learn functionality with the `fit()` method,
    to learn parameters, and `transform()` to modify the dataset. With `fit()`, the
    transformer learned and stored the limits for each variable. With `transform()`,
    it removed the outliers from the data, returning `pandas` DataFrames.'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: '`OutlierTrimmer()`采用scikit-learn的`fit()`方法来学习参数，并使用`transform()`来修改数据集。通过`fit()`，转换器学习并存储了每个变量的限制。通过`transform()`，它从数据中移除了异常值，返回`pandas`数据框。'
- en: See also
  id: totrans-204
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参考内容
- en: 'This is the study that I mentioned earlier that classifies outliers into errors;
    it is interesting and random: Leys C, et.al. 2019\. *How to Classify, Detect,
    and Manage Univariate and Multivariate Outliers, with Emphasis on Pre-Registration*.
    International Review of Social Psychology. [https://doi.org/10.5334/irsp.289](https://rips-irsp.com/articles/10.5334/irsp.289).'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我之前提到的研究，它将异常值分类为错误；它很有趣且随机：Leys C, et.al. 2019\. *如何分类、检测和管理单变量和多变量异常，重点在于预注册*。国际社会心理学评论。[https://doi.org/10.5334/irsp.289](https://rips-irsp.com/articles/10.5334/irsp.289).
- en: Bringing outliers back within acceptable limits
  id: totrans-206
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将异常值恢复到可接受的范围内
- en: Removing error outliers can be a valid strategy. However, this approach can
    reduce statistical power, in particular when there are outliers across many variables,
    because we end up removing big parts of the dataset. An alternative way to handle
    error outliers is by bringing outliers back within acceptable limits. In practice,
    what this means is replacing the value of the outliers with some thresholds identified
    with the IQR proximity rule, the mean and standard deviation, or MAD. In this
    recipe, we’ll replace outlier values using `pandas` and `feature-engine`.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 移除错误异常值可能是一种有效的策略。然而，这种方法可能会降低统计功效，特别是在许多变量都有异常值的情况下，因为我们最终移除了数据集的大部分内容。处理错误异常值的另一种方法是将其恢复到可接受的范围内。在实践中，这意味着用IQR接近规则、均值和标准差或MAD识别的某些阈值替换异常值的值。在这个菜谱中，我们将使用`pandas`和`feature-engine`替换异常值。
- en: How to do it...
  id: totrans-208
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到这一点...
- en: 'We’ll use the mean and standard deviation to find outliers and then replace
    their values using `pandas` and `feature-engine`:'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用均值和标准差来查找异常值，然后使用`pandas`和`feature-engine`替换它们的值：
- en: 'Let’s import the required Python libraries and functions:'
  id: totrans-210
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们导入所需的Python库和函数：
- en: '[PRE38]'
  id: totrans-211
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'Load the breast cancer dataset from scikit-learn and separate it into train
    and test sets:'
  id: totrans-212
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从scikit-learn加载乳腺癌数据集并将其分为训练集和测试集：
- en: '[PRE39]'
  id: totrans-213
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'Let’s create a function to find outliers using the mean and standard deviation:'
  id: totrans-214
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们创建一个函数来使用均值和标准差查找异常值：
- en: '[PRE40]'
  id: totrans-215
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE40]'
- en: Note
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: In *step 3*, we use the mean and standard deviation to find the limits beyond
    which data points will be considered outliers, as discussed in the *Finding outliers
    using the mean and standard deviation* recipe. Alternatively, you can identify
    outliers with the IQR rule or MAD, as we covered in the *Visualizing outliers
    with boxplots and the inter-quartile proximity rule* and *Using the median absolute
    deviation to find* *outliers* recipes.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 在第3步中，我们使用平均值和标准差来找到数据点将被视为异常值的极限，正如我们在*使用平均值和标准差查找异常值*配方中讨论的那样。或者，您可以使用IQR规则或MAD来识别异常值，正如我们在*使用箱线图和四分位数间距规则可视化异常值*和*使用中位数绝对偏差查找异常值*配方中所述。
- en: 'Using the function from *step 3*, let’s determine the limits of the `mean smoothness`
    variable, which follows approximately a Gaussian distribution:'
  id: totrans-218
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用第3步中的函数，让我们确定`mean smoothness`变量的极限，该变量大约遵循高斯分布：
- en: '[PRE41]'
  id: totrans-219
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'Let’s make a copy of the original datasets:'
  id: totrans-220
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们复制原始数据集：
- en: '[PRE42]'
  id: totrans-221
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'Now, replace outliers with the lower or upper limits from *step 4* in the new
    DataFrames:'
  id: totrans-222
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，在新DataFrame中将异常值替换为第4步中的下限或上限：
- en: '[PRE43]'
  id: totrans-223
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE43]'
- en: To corroborate that the outliers were replaced with the values determined in
    *step 4*, execute `train_t["worst smoothness"].agg(["min", "max"])` to obtain
    the new maximum and minimum values. They should coincide with the minimum and
    maximum values of the variable, or the limits returned in *step 4*.
  id: totrans-224
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 为了证实异常值已被第4步中确定的值替换，执行`train_t["worst smoothness"].agg(["min", "max"])`以获取新的最大值和最小值。它们应该与变量的最小值和最大值或第4步中返回的极限相一致。
- en: We can replace outliers in multiple variables simultaneously by utilizing `feature-engine`.
  id: totrans-225
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们可以通过利用`feature-engine`同时替换多个变量的异常值。
- en: 'Let’s set up a transformer to replace outliers in two variables, using limits
    determined with the mean and standard deviation:'
  id: totrans-226
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们设置一个转换器，用平均值和标准差确定的极限替换两个变量中的异常值：
- en: '[PRE44]'
  id: totrans-227
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE44]'
- en: Note
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: '`Winsorizer` can identify boundaries using the mean and standard deviation,
    as we show in this recipe, as well as the IQR proximity rule and MAD. You need
    to change `capping_method` to `iqr` or `mad`, respectively.'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: '`Winsorizer`可以使用平均值和标准差识别边界，正如我们在本配方中所示，以及IQR间距规则和MAD。您需要将`capping_method`更改为`iqr`或`mad`。'
- en: 'Let’s fit the transformer to the data so that it learns those limits:'
  id: totrans-230
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们将转换器拟合到数据中，以便它学习这些极限：
- en: '[PRE45]'
  id: totrans-231
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'By executing `capper.left_tail_caps_`, we can visualize the lower limits for
    the two variables: `{''worst smoothness'': 0.06364743973736293, ''worst texture'':
    7.115307053129349}`. By executing `capper.right_tail_caps_`, we can see the variables’
    upper limits: `{''worst smoothness'': 0.20149734880520967, ''worst` `texture'':
    43.97692158753917}`.'
  id: totrans-232
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '通过执行`capper.left_tail_caps_`，我们可以可视化两个变量的下限：`{''worst smoothness'': 0.06364743973736293,
    ''worst texture'': 7.115307053129349}`。通过执行`capper.right_tail_caps_`，我们可以看到变量的上限：`{''worst
    smoothness'': 0.20149734880520967, ''worst texture'': 43.97692158753917}`。'
- en: 'Finally, let’s replace the outliers with the limits from *step 8*:'
  id: totrans-233
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，让我们用第8步的极限值替换异常值：
- en: '[PRE46]'
  id: totrans-234
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'If we now execute `train_t[capper.variables_].agg(["min", "max"])`, we’ll see
    that the maximum and minimum values of the transformed DataFrame coincide with
    either the maximum and minimum values of the variables or the identified limits,
    whatever comes first:'
  id: totrans-235
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果我们现在执行`train_t[capper.variables_].agg(["min", "max"])`，我们将看到转换后的DataFrame的最大值和最小值与变量的最大值和最小值或识别的极限相一致，以先到者为准：
- en: '[PRE47]'
  id: totrans-236
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE47]'
- en: If you are planning to cap variables, make sure you compare the performance
    of your models or the results of your analysis before and after replacing outliers.
  id: totrans-237
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果您计划对变量进行上限处理，确保在替换异常值前后比较您模型的性能或分析结果。
- en: How it works...
  id: totrans-238
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: The `clip()` function from pandas is used to cap values at lower or upper specified
    limits. In this recipe, we found those limits using the mean and standard deviation,
    and then clipped the variable so that all observations took values within those
    limits. The minimum value of the `worst smoothness` variable was actually greater
    than the lower limit we found in *step 4*, so no values were replaced at the left
    of its distribution. However, there were values greater than the upper limit from
    *step 4*, and those were replaced with the limit. This means that the minimum
    value of the transformed variable and the original variable coincide, but the
    maximum values do not.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: pandas 的 `clip()` 函数用于将值限制在指定的上下限。在这个菜谱中，我们使用均值和标准差找到了这些界限，然后剪切变量，使得所有观测值都位于这些界限内。`worst
    smoothness` 变量的最小值实际上大于我们在 *步骤 4* 中找到的下限，因此在其分布的左侧没有替换任何值。然而，有值大于 *步骤 4* 中的上限，这些值被替换为上限。这意味着转换变量的最小值与原始变量的最小值相同，但最大值不同。
- en: We used `feature-engine` to replace outliers in multiple variables simultaneously.
    `Winsorizer()` can identify outliers based on the mean and standard deviation,
    the IQR proximity rule, MAD, or by using percentiles. We can modify this behavior
    through the `capping_method` parameter.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用 `feature-engine` 同时替换多个变量的异常值。`Winsorizer()` 可以根据均值和标准差、IQR 接近规则、MAD 或使用百分位数来识别异常值。我们可以通过
    `capping_method` 参数修改这种行为。
- en: The methods to identify outliers can be made more or less conservative by changing
    the factor by which we multiply the IQR, the standard deviation, or MAD. With
    `Winsorizer()`, we can control the strength of the methods through the `fold`
    parameter.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 通过改变我们乘以 IQR、标准差或 MAD 的因子，可以使得识别异常值的方法更加或更加保守。在 `Winsorizer()` 中，我们可以通过 `fold`
    参数控制方法的强度。
- en: With `tails` set to `"both"`, `Winsorizer()` found and replaced outliers at
    both ends of the variables’ distribution. To replace outliers at either end, we
    can pass `"left"` or `"right"` to the `tails` parameter.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 当 `tails` 设置为 `"both"` 时，`Winsorizer()` 在变量的分布两端找到并替换了异常值。要替换任一端的异常值，我们可以将 `"left"`
    或 `"right"` 传递给 `tails` 参数。
- en: '`Winsorizer()` adopts the scikit-learn functionality with the `fit()` method,
    to learn parameters, and `transform()` to modify the dataset. With `fit()`, the
    transformer learned and stored the limits for each variable. With `transform()`,
    it replaced the values of the outliers, returning pandas DataFrames.'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: '`Winsorizer()` 方法采用了 scikit-learn 的 `fit()` 方法来学习参数，以及 `transform()` 方法来修改数据集。通过
    `fit()`，转换器学习并存储了每个变量的界限。通过 `transform()`，它替换了异常值，返回 pandas DataFrame。'
- en: See also
  id: totrans-244
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: '`feature-engine` has `ArbitraryOutlierCapper()`, which caps variables at arbitrary
    minimum and maximum values: [https://feature-engine.readthedocs.io/en/latest/api_doc/outliers/ArbitraryOutlierCapper.html](https://feature-engine.readthedocs.io/en/latest/api_doc/outliers/ArbitraryOutlierCapper.html).'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: '`feature-engine` 有 `ArbitraryOutlierCapper()`，可以在任意最小和最大值处限制变量：[https://feature-engine.readthedocs.io/en/latest/api_doc/outliers/ArbitraryOutlierCapper.html](https://feature-engine.readthedocs.io/en/latest/api_doc/outliers/ArbitraryOutlierCapper.html)。'
- en: Applying winsorization
  id: totrans-246
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 应用 Winsorizing
- en: Winsorizing, or winsorization, consists of replacing extreme, poorly known observations,
    that is, outliers, with the magnitude of the next largest (or smallest) observation.
    It’s similar to the procedure described in the previous recipe, *Bringing outliers
    back within acceptable limits*, but not exactly the same. Winsorization involves
    replacing the *same number of outliers* at both ends of the distribution, which
    makes Winsorization a symmetric process. This guarantees that the **Winsorized
    mean**, that is, the mean estimated after replacing outliers, remains a robust
    estimator of the central tendency of the variable.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: Winsorizing 或 winsorization，包括用下一个最大（或最小）观测值的幅度替换极端、不太知名的观测值，即异常值。它与之前菜谱中描述的程序类似，*将异常值拉回到可接受的范围内*，但并不完全相同。Winsorization
    涉及在分布两端替换相同数量的异常值，这使得 Winsorization 成为一个对称过程。这保证了 **Winsorized mean**，即替换异常值后的均值，仍然是变量中心趋势的稳健估计器。
- en: In practice, to remove a similar number of observations at both tails, we’d
    use percentiles. For example, the 5th percentile is the value below which 5% of
    the observations lie and the 95th percentile is the value beyond which 5% of the
    observations lie. Using these values as replacements might result in replacing
    a similar number of observations on both tails, but it’s not guaranteed. If the
    dataset contains repeated values, obtaining reliable percentiles is challenging
    and can lead to an uneven replacement of values at each tail. If this happens,
    then the winsorized mean is not a good estimator of the central tendency. In this
    recipe, we will apply winsorization.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，为了在两端移除相似数量的观测值，我们会使用百分位数。例如，第5百分位数是低于5%观测值的值，第95百分位数是高于5%观测值的值。使用这些值作为替换可能会在两端替换相似数量的观测值，但这并不保证。如果数据集中包含重复值，获得可靠的百分位数具有挑战性，并且可能导致每个尾端值的不均匀替换。如果发生这种情况，则winsorized平均值不是中心趋势的良好估计量。在本配方中，我们将应用winsorization。
- en: How to do it...
  id: totrans-249
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'We will cap all variables of the breast cancer dataset at their 5th and 95th
    percentiles:'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将把乳腺癌数据集的所有变量限制在其第5和第95百分位数：
- en: 'Let’s import the required Python libraries and functions:'
  id: totrans-251
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们导入所需的Python库和函数：
- en: '[PRE48]'
  id: totrans-252
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'Load the breast cancer dataset from scikit-learn:'
  id: totrans-253
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从scikit-learn加载乳腺癌数据集：
- en: '[PRE49]'
  id: totrans-254
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'Separate the data into a train and test sets:'
  id: totrans-255
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将数据分为训练集和测试集：
- en: '[PRE50]'
  id: totrans-256
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'Capture the 5th and 95th percentiles of each variable in dictionaries:'
  id: totrans-257
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在字典中捕获每个变量的第5和第95百分位数：
- en: '[PRE51]'
  id: totrans-258
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'Let’s now replace values beyond those percentiles with the respective percentiles
    for all variables at once:'
  id: totrans-259
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们将所有变量的值替换为相应的百分位数，超出这些百分位数：
- en: '[PRE52]'
  id: totrans-260
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE52]'
- en: 'Let’s display the minimum, maximum, and mean values of one variable before
    winsorization:'
  id: totrans-261
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们显示winsorization之前一个变量的最小值、最大值和平均值：
- en: '[PRE53]'
  id: totrans-262
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'We can see the values in the following output:'
  id: totrans-263
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们可以在以下输出中看到值：
- en: '[PRE54]'
  id: totrans-264
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE54]'
- en: 'Display the minimum, maximum, and mean values of the same variable after winsorization:'
  id: totrans-265
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 显示winsorization后相同变量的最小值、最大值和平均值：
- en: '[PRE55]'
  id: totrans-266
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE55]'
- en: 'In the following output, we can see that the minimum and maximum values correspond
    to the percentiles. However, the mean is quite similar to the original mean of
    the variable:'
  id: totrans-267
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在以下输出中，我们可以看到最小值和最大值对应于百分位数。然而，平均值与变量的原始平均值相当相似：
- en: '[PRE56]'
  id: totrans-268
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE56]'
- en: Note
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'If you want to use winsorization as part of a scikit-learn pipeline, you can
    use the `feature-engine` library’s `Winsorizer()`, by setting it up as follows:'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想将winsorization作为scikit-learn管道的一部分使用，可以使用`feature-engine`库的`Winsorizer()`，设置如下：
- en: '`capper =` `Winsorizer(`'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: '`capper =` `Winsorizer(`'
- en: '`capping_method="quantiles",`'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: '`capping_method="quantiles",`'
- en: '`tail="both",`'
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: '`tail="both",`'
- en: '`fold=0.05,`'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: '`fold=0.05,`'
- en: '`)`'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: '`)`'
- en: After this, proceed with the `fit()` and `transform()` methods as described
    in the *Bringing outliers back within acceptable* *limits* recipe.
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 在此之后，按照*将异常值拉回到可接受* *范围内*配方中描述的`fit()`和`transform()`方法进行操作。
- en: It’s worth noting that despite employing percentiles, the procedure didn’t precisely
    replace the same number of observations on both sides of the distribution. If
    you intend to winsorize your variables, compare the outcomes of your analyses
    before and after winsorization.
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 值得注意的是，尽管使用了百分位数，但该程序并没有精确地替换分布两边的相同数量的观测值。如果您打算winsorize您的变量，请在winsorization前后比较您分析的结果。
- en: How it works...
  id: totrans-278
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: We used pandas’ `quantiles()` to obtain the 5th and 95th percentiles of all
    the variables in the dataset, and combined it with `to_dict()` to retain those
    percentiles in dictionaries, where the keys were the variables and the values
    were the percentiles. We then passed these dictionaries to pandas’ `clip()` to
    replace values smaller or larger than those percentiles by the percentiles. By
    using dictionaries, we capped multiple variables at once.
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用pandas的`quantiles()`获取数据集中所有变量的第5和第95百分位数，并将其与`to_dict()`结合，以保留这些百分位数在字典中，其中键是变量，值是百分位数。然后我们将这些字典传递给pandas的`clip()`，用百分位数替换小于或大于这些百分位数的值。通过使用字典，我们一次限制了多个变量。
- en: See also
  id: totrans-280
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参考以下内容
- en: 'For more details about how winsorization affects the mean and standard deviation
    in symmetric and asymmetric replacements, check out the original article:'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 更多关于winsorization如何影响对称和不对称替换中的平均值和标准差详情，请查看原始文章：
- en: Dixon W. *Simplified Estimation from Censored Normal Samples. The Annals of
    Mathematical Statistics*, 1960\. [http://www.jstor.org/stable/2237953](https://www.jstor.org/stable/2237953)
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: Dixon W. *从截尾正态样本中简化的估计。数学统计年鉴*，1960年。[http://www.jstor.org/stable/2237953](https://www.jstor.org/stable/2237953)
