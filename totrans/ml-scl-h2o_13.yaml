- en: '*Chapter 10*: H2O Model Deployment Patterns'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the previous chapter, we learned how easy it is to generate a ready-to-deploy
    scoring artifact from our model-building step and how this artifact, called a
    MOJO, is designed to flexibly deploy to a wide diversity of production systems.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, we explore this flexibility of MOJO deployment by surveying
    a wide range of MOJO deployment patterns and digging down into the details of
    each deployment pattern. We will see how MOJOs are implemented for scoring on
    either H2O software, third-party software including **business intelligence**
    (**BI**) tools, and your own software. These implementations will include scoring
    on real-time, batch, and streaming data.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: Recall from [*Chapter 1*](B16721_01_Final_SK_ePub.xhtml#_idTextAnchor015), *Opportunities
    and Challenges*, how **machine learning** (**ML**) models achieve business value
    when deployed to production systems. The knowledge you gain in this chapter will
    allow you to find the appropriate MOJO deployment pattern for a particular business
    case.  For example, it will allow analysts to perform time-series forecasting
    from a **Microsoft Excel** spreadsheet, technicians to respond to predictions
    of product defects made on data streaming from a manufacturing process, or business
    stakeholders to respond to fraud predictions scored directly on Snowflake tables.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: The goal of this chapter is for you to implement your own H2O model scoring,
    whether from these examples, your web search, or your imagination, inspired by
    these examples.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
- en: 'So, in this chapter, we''re going to cover the following main topics:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
- en: Surveying a sample of MOJO deployment patterns
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Exploring examples of MOJO scoring on H2O software
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Exploring examples of MOJO scoring on third-party software
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Exploring examples of MOJO scoring on your target-system software
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Exploring examples of accelerators based on H2O Driverless AI integrations
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Technical requirements
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are no technical requirements for this chapter, though we will be highlighting
    the technical steps to implement and execute MOJO deployment patterns.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
- en: Surveying a sample of MOJO deployment patterns
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The purpose of this chapter is to overview the diverse ways in which MOJOs can
    be deployed for making predictions. Enough detail is given to provide an understanding
    of the context of MOJO deployment and scoring. Links are provided to find low-level
    details.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
- en: First, let's summarize our sample of MOJO scoring patterns in table form to
    get a sense of the many different ways you can deploy MOJOs. After this sample
    overview, we will elaborate on each table entry more fully.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
- en: 'Note that the table columns for our deployment-pattern summaries are represented
    as follows:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
- en: '**Data Velocity**: This refers to the size and speed of data that is scored
    and is categorized as either **real-time** (single record scored, typically in
    less than 100 milliseconds), **batch** (large numbers of records scored at one
    time), and **streaming** (a continuous flow of records that are scored).'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据速度**：这指的是评分数据的规模和速度，分为 **实时**（单条记录评分，通常在 100 毫秒以下）、**批量**（一次评分大量记录）和 **流式**（连续的记录流，这些记录被评分）。'
- en: '**Scoring Communication**: This refers to how the scoring is triggered and
    communicated—for example, via a **REpresentational State Transfer** (**REST**)
    call or a **Structured Query Language** (**SQL**) statement.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**评分通信**：这指的是评分是如何被触发和通信的——例如，通过 **REpresentational State Transfer** (**REST**)
    调用或 **Structured Query Language** (**SQL**) 语句。'
- en: '**MOJO Deployment**: This is a brief description of how the MOJO is deployed
    on the scoring system.'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**MOJO 部署**：这是关于 MOJO 在评分系统上部署的简要描述。'
- en: Let's take a look at some of the deployment patterns. We will break these patterns
    into four categories.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看一些部署模式。我们将把这些模式分为四个类别。
- en: H2O software
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: H2O 软件
- en: 'This is a sample of ways you can deploy and score MOJOs on software provided
    and supported by H2O.ai. The following table provides a summary of this:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 这是您可以在 H2O.ai 提供和支持的软件上部署和评分 MOJO 的示例方法。以下表格提供了这一点的总结：
- en: '![](img/B16721_10_Table_01.jpg)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B16721_10_Table_01.jpg)'
- en: We will see that deploying to H2O software is super easy since all you have
    to do is upload the MOJO (manually or programmatically).
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将看到部署到 H2O 软件非常简单，因为你只需上传 MOJO（手动或通过程序）即可。
- en: Third-party software integrations
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第三方软件集成
- en: 'Here are a few examples of MOJO scoring with third-party software:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一些使用第三方软件进行 MOJO 评分的示例：
- en: '![](img/B16721_10_Table_02.jpg)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B16721_10_Table_02.jpg)'
- en: Note that some third-party integrations are done by consuming scoring from MOJOs
    deployed to a REST server. This has the advantage of centralizing your deployment
    in one place (the REST server) and consuming it from many places (for example,
    dozens of Tableau or MS Excel instances deployed on employee personal computers).
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，一些第三方集成是通过从部署到 REST 服务器的 MOJO 中消费评分来完成的。这有一个优点，就是可以将您的部署集中在一个地方（REST 服务器），并从许多地方消费（例如，在员工个人电脑上部署的数十个
    Tableau 或 MS Excel 实例）。
- en: Other third-party integrations are accomplished by deploying MOJOs directly
    on the third-party software system. The Snowflake integration, for example, is
    implemented on the Snowflake architecture and allows batch scoring that performs
    at a Snowflake scale (it can score hundreds of thousands of rows per second).
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 其他第三方集成是通过在第三方软件系统上直接部署 MOJO 来完成的。例如，Snowflake 集成是在 Snowflake 架构上实现的，允许以 Snowflake
    规模进行批量评分（每秒可以评分数十万行）。
- en: Your software integrations
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 您的软件集成
- en: 'We will explore the following patterns for integrating MOJOs directly into
    your own software:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将探讨以下将 MOJO 直接集成到您自己的软件中的模式：
- en: '![](img/B16721_10_Table_03.jpg)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B16721_10_Table_03.jpg)'
- en: MOJO integration into your software requires a MOJO wrapper class. We learned
    how to do this in [*Chapter 9*](B16721_09_Final_SK_ePub.xhtml#_idTextAnchor159),
    *Production Scoring and the H2O MOJO*. Of course, you can take the alternative
    approach and integrate your software with MOJO scoring consumed from a REST endpoint.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 将 MOJO 集成到您的软件中需要一个 MOJO 包装类。我们已经在 [*第 9 章*](B16721_09_Final_SK_ePub.xhtml#_idTextAnchor159)，*生产评分和
    H2O MOJO* 中学习了如何做这件事。当然，您也可以采取替代方法，将您的软件与从 REST 端点消费的 MOJO 评分集成。
- en: Accelerators based on H2O Driverless AI integrations
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 基于 H2O Driverless AI 集成的加速器
- en: This book focuses on H2O Core (H2O-3 and Sparkling Water) model-building technology
    for building models against large data volumes. H2O provides an alternative model-building
    technology called Driverless AI. Driverless AI is a specialized, **automated ML**
    (**AutoML**) engine that allows users to find highly accurate and trusted models
    in extremely short amounts of time. Driverless AI cannot train on the massive
    datasets that H2O Core can, though. However, Driverless AI also produces a MOJO,
    and its flavor of MOJO deploys similarly to the H2O Core MOJO. These similarities
    were covered in [*Chapter 9*](B16721_09_Final_SK_ePub.xhtml#_idTextAnchor159),
    *Production Scoring and the H2O MOJO*.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 本书专注于 H2O Core（H2O-3 和 Sparkling Water）模型构建技术，用于构建针对大量数据的模型。H2O 提供了一种名为 Driverless
    AI 的替代模型构建技术。Driverless AI 是一个专门的、**自动化机器学习**（**AutoML**）引擎，允许用户在极短的时间内找到高度准确和可信的模型。尽管
    Driverless AI 无法在 H2O Core 可以处理的巨大数据集上进行训练。然而，Driverless AI 也会生成一个 MOJO，其 MOJO
    风格的部署与 H2O Core MOJO 类似。这些相似性已在 [*第 9 章*](B16721_09_Final_SK_ePub.xhtml#_idTextAnchor159)
    中介绍，*生产评分和 H2O MOJO*。
- en: 'There are many examples available online for deploying Driverless AI MOJOs.
    These examples can be followed as a guide to deploying H2O Core MOJOs in the same
    pattern.  Consider the following Driverless AI examples therefore as accelerators
    that can get you most of the way to deploying your H2O Core MOJOs, but some implementation
    details will differ:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 在线有许多部署 Driverless AI MOJO 的示例。这些示例可以作为部署 H2O Core MOJO 的指南。因此，以下 Driverless
    AI 示例可以作为加速器，帮助你快速部署你的 H2O Core MOJO，但某些实现细节可能会有所不同：
- en: '![](img/B16721_10_Table_04.jpg)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B16721_10_Table_04.jpg)'
- en: The patterns shown in these four tables should provide a good sense of the many
    ways you can deploy MOJOs. They do not, however, represent the total set of possibilities.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 这四个表格中显示的图案应该能给你一个很好的感觉，了解你可以以多种方式部署 MOJO。然而，它们并不代表所有可能性的全集。
- en: A Note on Possibilities
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 关于可能性的说明
- en: The patterns shown here are merely a sample of H2O MOJO scoring patterns that
    exist or are possible. Other MOJO scoring patterns can be found through a web
    search, and you can use your imagination to integrate MOJO scoring in diverse
    ways into your own software. Additionally, H2O.ai is rapidly expanding its third-party
    partner integrations for scoring, as well as expanding its own MOJO deployment,
    monitoring, and management capabilities. This is a rapidly moving space.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 这里显示的图案仅仅是 H2O MOJO 分数评分模式的一个样本，这些模式存在或可能存在。其他 MOJO 分数模式可以通过网络搜索找到，并且你可以发挥想象力，以多种方式将
    MOJO 分数集成到自己的软件中。此外，H2O.ai 正在快速扩展其第三方合作伙伴的评分集成，以及扩展其自身的 MOJO 部署、监控和管理能力。这是一个快速发展的领域。
- en: Now that we have surveyed a landscape of MOJO deployment patterns, let's jump
    in and look at each example in detail.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经调查了 MOJO 部署模式的格局，让我们深入探讨每个示例的细节。
- en: Exploring examples of MOJO scoring with H2O software
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索使用 H2O 软件进行 MOJO 分数评分的示例
- en: The patterns in this section represent MOJOs deployed to H2O software. There
    are many advantages to deploying to H2O software. First, the software is supported
    by H2O and their team of ML experts. Second, this deployment workflow is greatly
    streamlined for H2O software since all you have to do is supply the MOJO in a
    simple upload (via a **user interface** (**UI**), an API, or a transfer method
    such as remote copy). Third, H2O scoring software has additional capabilities—such
    as monitoring for prediction and data drift—that are important for models deployed
    to production systems.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 本节中的模式代表部署到 H2O 软件的 MOJO。部署到 H2O 软件有许多优点。首先，该软件由 H2O 和他们的机器学习专家团队支持。其次，由于所有你需要的只是提供
    MOJO（通过用户界面（**UI**）、API 或远程复制等传输方式）进行简单上传，因此该部署工作流程对 H2O 软件进行了大幅简化。第三，H2O 评分软件具有额外的功能——例如，对预测和数据漂移进行监控——这对于部署到生产系统的模型非常重要。
- en: Let's start by looking at H2O's flagship model-scoring platform.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从查看 H2O 的旗舰模型评分平台开始。
- en: H2O MLOps
  id: totrans-45
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: H2O MLOps
- en: H2O MLOps is a full-featured platform for deploying, monitoring, managing, and
    governing ML models. H2O MLOps is dedicated to deploying models at scale (many
    models and model versions, enterprise-grade throughput and performance, **high
    availability**, and so on), and addressing monitoring, management, and governance
    concerns around models in production.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: H2O MLOps 是一个功能齐全的平台，用于部署、监控、管理和治理机器学习模型。H2O MLOps 致力于大规模部署模型（许多模型和模型版本、企业级吞吐量和性能、**高可用性**等），并解决生产中模型周围的监控、管理和治理问题。
- en: H2O MLOps and its relation to H2O's larger **end-to-end** ML platform will be
    reviewed in [*Chapter 13*](B16721_13_Final_SK_ePub.xhtml#_idTextAnchor241), *Introducing
    H2O AI Cloud*. See also [https://docs.h2o.ai/mlops-release/latest-stable/docs/userguide/index.html](https://docs.h2o.ai/mlops-release/latest-stable/docs/userguide/index.html)
    for the MLOps user guide to better understand H2O MLOps.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: H2O MLOps 及其与 H2O 更大 **端到端** 机器学习平台的关系将在 [*第 13 章*](B16721_13_Final_SK_ePub.xhtml#_idTextAnchor241)，“介绍
    H2O AI Cloud” 中进行回顾。有关 MLOps 用户指南，请参阅 [https://docs.h2o.ai/mlops-release/latest-stable/docs/userguide/index.html](https://docs.h2o.ai/mlops-release/latest-stable/docs/userguide/index.html)
    以更好地了解 H2O MLOps。
- en: Pattern overview
  id: totrans-48
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 模式概述
- en: 'The H2O MLOps scoring pattern is shown in the following diagram:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 下图展示了 H2O MLOps 的评分模式：
- en: '![Figure 10.1 – Model-scoring pattern for H2O MLOps'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 10.1 – H2O MLOps 的模型评分模式'
- en: '](img/B16721_10_001.jpg)'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16721_10_001.jpg)'
- en: Figure 10.1 – Model-scoring pattern for H2O MLOps
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.1 – H2O MLOps 的模型评分模式
- en: We'll elaborate on this next.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在下一部分详细阐述。
- en: Scoring context
  id: totrans-54
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 评分上下文
- en: This is H2O.ai's flagship model-deployment, model-monitoring, and model-governance
    platform. It can be used to host and score both H2O and third-party (non-H2O)
    models.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 这是 H2O.ai 的旗舰模型部署、模型监控和模型治理平台。它可以用来托管和评分 H2O 和第三方（非 H2O）模型。
- en: H2O MLOps scores models in real time and in batches. Predictions optionally
    return reason codes. Models are deployed as single-model, champion/challenger,
    and A/B. See the *Additional notes* section for a full description of its capabilities.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: H2O MLOps 实时和批量评分模型。预测可选地返回原因代码。模型以单个模型、冠军/挑战者和 A/B 的形式部署。有关其功能的完整描述，请参阅 *其他注意事项*
    部分。
- en: Implementation
  id: totrans-57
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 实现
- en: H2O MLOps is a modern Kubernetes-based implementation deployed using Terraform
    scripts and Helm charts.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: H2O MLOps 是一个基于 Kubernetes 的现代实现，使用 Terraform 脚本和 Helm 图表进行部署。
- en: Scoring example
  id: totrans-59
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 评分示例
- en: 'The following code snippet shows a real-time scoring request sent using the
    `curl` command:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码片段显示了使用 `curl` 命令发送的实时评分请求：
- en: '[PRE0]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'And here is the result:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是结果：
- en: '[PRE1]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: From here, we see the probability of a loan default (`bad_loan` value of `1`)
    is `0.2269841747572997`. The `id` field is used to identify the REST endpoint,
    which is useful when models are deployed in champion/challenger or A/B test modes.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 从这里，我们看到贷款违约的概率（`bad_loan` 值为 `1`）为 `0.2269841747572997`。`id` 字段用于标识 REST 端点，当模型以冠军/挑战者或
    A/B 测试模式部署时，这很有用。
- en: Additional notes
  id: totrans-65
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 其他注意事项
- en: 'Here is a brief summary of key H2O MLOps capabilities:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是 H2O MLOps 关键功能的简要总结：
- en: '**Multiple deployment models**: Standalone; champion/challenger; A/B models'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**多种部署模型**：独立；冠军/挑战者；A/B 模型'
- en: '**Multiple model problems**: Tabular; time-series; image; language models'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**多种模型问题**：表格；时间序列；图像；语言模型'
- en: '**Shapley values**: On deployment, specify whether to return Shapley values
    (reason codes) with the prediction'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Shapley 值**：在部署时，指定是否与预测一起返回 Shapley 值（原因代码）'
- en: '**Third-party models**: Scores and monitors non-H2O models—for example, scikit-learn
    models'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**第三方模型**：评分和监控非 H2O 模型——例如，scikit-learn 模型'
- en: '**Model management**: Model registry; versioning; model metadata; promotion
    and approval workflow'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**模型管理**：模型注册；版本控制；模型元数据；晋升和审批工作流程'
- en: '**APIs**: APIs and **continuous integration and continuous delivery** (**CI/CD**)
    integration'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**APIs**：API 和 **持续集成和持续交付**（**CI/CD**）集成'
- en: '**Analytics**: Optionally push scoring data to your system for your own analytics'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分析**：可选地将评分数据推送到您的系统进行自己的分析'
- en: '**Lineage**: Understand the lineage of data, experiment, and model'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**血缘**：了解数据、实验和模型的血缘关系'
- en: '**Model monitoring**: Data drift and prediction monitoring with alert management
    (bias and other types of monitoring are on the MLOps roadmap)'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**模型监控**：数据漂移和预测监控，带有警报管理（偏差和其他类型的监控在 MLOps 路线上）'
- en: H2O MLOps versus Other H2O Model-Scoring Software
  id: totrans-76
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: H2O MLOps 与其他 H2O 模型评分软件的比较
- en: MLOps is H2O's flagship full-featured platform to deploy, monitor, and govern
    models for scoring. H2O supplies other software (overviewed next) that is specialized
    to address needs or constraints where MLOps may not fit.
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: MLOps 是 H2O 的旗舰全功能平台，用于部署、监控和管理评分模型。H2O 提供其他软件（将在下一部分概述），这些软件专门用于解决 MLOps 可能不适用的情况。
- en: Next, let's have a look at the H2O REST scorer.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们看看 H2O REST 评分器。
- en: H2O eScorer
  id: totrans-79
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: H2O eScorer
- en: H2O has a lightweight but powerful REST server to score MOJOs, called the H2O
    eScorer. This is a good alternative for serving MOJOs as REST endpoints without
    committing to larger infrastructure requirements of the H2O MLOps platform and
    therefore freeing deployment options to on-premises and lightweight deployments.  Recall
    that third-party software often integrates with MOJOs by way of REST endpoint
    integration, so this is an effective way to achieve that.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: H2O有一个轻量级但功能强大的REST服务器来评分MOJOs，称为H2O eScorer。这是一个很好的替代方案，用于作为REST端点提供服务MOJOs，而不必承诺更大的H2O
    MLOps平台的基础设施要求，因此可以自由选择本地和轻量级部署。  回想一下，第三方软件通常通过REST端点集成与MOJOs集成，因此这是一种有效的方法。
- en: Pattern overview
  id: totrans-81
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 模式概述
- en: 'The H2O REST scorer pattern is shown in the following diagram:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: H2O REST评分器的评分模式如下所示：
- en: '![Figure 10.2 – MOJO scoring pattern for H2O REST scorer'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '![图10.2 – H2O REST评分器的MOJO评分模式'
- en: '](img/B16721_10_002.jpg)'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16721_10_002.jpg)'
- en: Figure 10.2 – MOJO scoring pattern for H2O REST scorer
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.2 – H2O REST评分器的MOJO评分模式
- en: Here is an elaboration.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一些详细说明。
- en: Scoring context
  id: totrans-87
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 评分上下文
- en: The H2O REST scorer makes real-time and batch predictions to a REST endpoint.
    Predictions optionally include reason codes.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: H2O REST评分器对REST端点进行实时和批量预测。预测可选地包括原因代码。
- en: Implementation
  id: totrans-89
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 实现
- en: The H2O Rest scorer is a single **Java ARchive** (**JAR**) file holding an Apache
    Tomcat server hosting a Spring REST services framework. A properties file configures
    the application to host multiple REST scoring endpoints. MOJOs are loaded either
    by REST itself or by other means of transferring the MOJO to the server.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: H2O Rest评分器是一个包含Apache Tomcat服务器的单个**Java ARchive**（**JAR**）文件，该服务器托管一个Spring
    REST服务框架。一个属性文件配置应用程序以托管多个REST评分端点。MOJOs可以通过REST本身或其他方式将MOJO传输到服务器加载。
- en: High throughput is achieved by placing multiple H2O REST scorers behind a load
    balancer.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 通过将多个H2O REST评分器放置在负载均衡器后面，可以实现高吞吐量。
- en: Scoring example
  id: totrans-92
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 评分示例
- en: 'Here are some examples of REST endpoints for real-time scoring:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一些实时评分的REST端点示例：
- en: '[PRE2]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The REST scorer's REST API is quite flexible. For example, it includes multiple
    ways to structure the payload (for example, an observation input can be sent as
    **comma-separated values** (**CSV**), **JavaScript Object Notation** (**JSON**),
    or other structures with the scorer output returned in the same format, which
    is convenient when integrating with a BI tool).
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: REST评分器的REST API非常灵活。例如，它包括多种结构有效载荷的方式（例如，观测输入可以发送为**逗号分隔值**（**CSV**）、**JavaScript对象表示法**（**JSON**）或其他结构，评分输出以相同格式返回，这对于与BI工具集成来说很方便）。
- en: Additional notes
  id: totrans-96
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 其他注意事项
- en: 'Here is a summary of the H2O REST Scorer''s set of capabilities:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是H2O REST评分器功能集的总结：
- en: Each H2O Rest scorer can score multiple models (that is, MOJOs), each with its
    own REST endpoint.
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个H2O Rest评分器可以评分多个模型（即MOJOs），每个模型都有自己的REST端点。
- en: Typically, 1,000 scores per second are achieved for each CPU on an H2O REST
    scorer server.
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通常，每个H2O REST评分器服务器上的每个CPU每秒可以完成1,000个评分。
- en: Security, monitoring, and logging settings are configurable in a properties
    file.
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安全、监控和日志设置可以在属性文件中配置。
- en: '**Java Monitoring Beans** (**JMX**) can be configured so that your own monitoring
    tool can collect and analyze runtime statistics. Monitoring includes scoring errors,
    scoring latency, and data drift.'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Java监控Bean**（**JMX**）可以配置，以便您的监控工具可以收集和分析运行时统计信息。监控包括评分错误、评分延迟和数据漂移。'
- en: Security features include **HTTPS**, administrator authentication, authenticated
    endpoint **URIs** and limited access from IP prefix.
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安全功能包括**HTTPS**、管理员身份验证、经过身份验证的端点**URI**和来自IP前缀的有限访问。
- en: There is extensive logging.
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有大量的日志记录。
- en: There are extensive capabilities via the REST API, including obtaining model
    metadata, defining prediction output formats, defining logging verbosity, and
    managing MOJOs on the server.
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过REST API提供了广泛的功能，包括获取模型元数据、定义预测输出格式、定义日志详细程度以及管理服务器上的MOJOs。
- en: The REST API can generate an example request sent from different BI tools to
    score a model on the H2O REST scorer—for example, sample Python code to call a
    model for Power BI.
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: REST API可以生成来自不同BI工具发送到H2O REST评分器评分模型的示例请求——例如，用于调用Power BI模型的Python代码示例。
- en: Next, we will have a look at the H2O batch database scorer.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将查看H2O批处理数据库评分器。
- en: H2O batch database scorer
  id: totrans-107
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: H2O批处理数据库评分器
- en: The H2O batch database scorer is a client application that can perform batch
    predictions against tables using a **Java Database Connectivity** (**JDBC**) connection.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: H2O 批处理数据库评分器是一个客户端应用程序，它可以通过 **Java 数据库连接** (**JDBC**) 连接对表执行批量预测。
- en: Pattern overview
  id: totrans-109
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 模式概述
- en: 'The H2O batch database scorer pattern is shown in the following diagram:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: H2O 批处理数据库评分器模式如图所示：
- en: '![Figure 10.3 – MOJO scoring pattern for H2O batch database scorer'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 10.3 – H2O 批处理数据库评分器的 MOJO 评分模式'
- en: '](img/B16721_10_003.jpg)'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16721_10_003.jpg)'
- en: Figure 10.3 – MOJO scoring pattern for H2O batch database scorer
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.3 – H2O 批处理数据库评分器的 MOJO 评分模式
- en: We'll elaborate on this next.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在下面详细说明。
- en: Scoring context
  id: totrans-115
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 评分上下文
- en: The H2O batch database scorer performs batch predictions against database tables.
    Predictions optionally include reason codes. Depending on how it is configured,
    predictions against table rows can be inserted into a new table or updated into
    the same table being scored. Alternatively, it can generate a CSV file of the
    prediction's outcome. This CSV output can be used to manually update tables or
    for other downstream processing.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: H2O 批处理数据库评分器对数据库表执行批量预测。预测可以包含原因代码。根据配置方式的不同，对表行的预测可以插入到新的表中，或者更新到正在评分的同一表中。或者，它可以生成预测结果的
    CSV 文件。此 CSV 输出可用于手动更新表或其他下游处理。
- en: Details of the processing sequence for H2O batch database scoring are shown
    in *Figure 10.3*.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: H2O 批处理数据库评分处理的详细序列显示在 *图 10.3* 中。
- en: Implementation
  id: totrans-118
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 实现
- en: The H2O batch database scorer is a single JAR file that is available from H2O.ai.
    The JAR file uses a properties file to configure aspects of the database workflow.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: H2O 批处理数据库评分器是一个单独的 JAR 文件，可以从 H2O.ai 获取。该 JAR 文件使用属性文件来配置数据库工作流程的各个方面。
- en: 'More specifically, the property file contains the following:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 更具体地说，属性文件包含以下内容：
- en: SQL connection string
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SQL 连接字符串
- en: SQL `SELECT` statement to batch-score
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 批量评分的 SQL `SELECT` 语句
- en: SQL `INSERT` or `UPDATE` statement to write prediction results
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 写入预测结果的 SQL `INSERT` 或 `UPDATE` 语句
- en: Number of threads during batch scoring
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 批量评分时的线程数
- en: Path to MOJO
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MOJO 路径
- en: Flag to write results to CSV or not
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 标志以写入 CSV 或不写入
- en: Security settings
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安全设置
- en: Other settings
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 其他设置
- en: Scoring example
  id: totrans-129
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 评分示例
- en: 'The following command shows how a batch job is run from the command line:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 以下命令显示了如何从命令行运行批量作业：
- en: '[PRE3]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: This, of course, can be integrated into a scheduler or a script to schedule
    and automate batch scores.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，这可以集成到调度器或脚本中，以安排和自动化批量评分。
- en: Note that this command does not include anything about the database or table.
    The program that is kicked off from this command finds the properties file, as
    described in the previous *Implementation* subsection, and uses the information
    there to drive batch scoring.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，此命令不包含有关数据库或表的信息。从该命令启动的程序会找到属性文件，如前一个 *实现* 小节所述，并使用那里的信息来驱动批量评分。
- en: Additional notes
  id: totrans-134
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 其他注意事项
- en: A single properties file holds all the information needed to run a single batch-scoring
    job (the properties file maps to a SQL statement against a table that will be
    scored).
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 单个属性文件包含运行单个批量评分作业所需的所有信息（属性文件映射到将要评分的表的 SQL 语句）。
- en: If no properties file is stated in the Java command to score (see the *Scoring
    example* section), then the default properties file is used. Alternatively, a
    specific properties file can be specified in the Java command line to run a non-default
    scoring job.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在评分的 Java 命令中没有指定属性文件（请参阅 *评分示例* 部分），则使用默认的属性文件。或者，可以在 Java 命令行中指定特定的属性文件以运行非默认评分作业。
- en: Next, let's have a look at the H2O batch file scorer.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们看看 H2O 批处理文件评分器。
- en: H2O batch file scorer
  id: totrans-138
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: H2O 批处理文件评分器
- en: The H2O batch file scorer is an application that can perform batch predictions
    against records in a file.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: H2O 批处理文件评分器是一个可以对文件中的记录执行批量预测的应用程序。
- en: Pattern overview
  id: totrans-140
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 模式概述
- en: 'The H2O batch file scorer pattern is shown in the following diagram:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: H2O 批处理文件评分模式如图所示：
- en: '![Figure 10.4 – MOJO scoring pattern for H2O batch file scorer'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 10.4 – H2O 批处理文件评分器的 MOJO 评分模式'
- en: '](img/B16721_10_004.jpg)'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16721_10_004.jpg)'
- en: Figure 10.4 – MOJO scoring pattern for H2O batch file scorer
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.4 – H2O 批处理文件评分器的 MOJO 评分模式
- en: This is how it is used.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是它的使用方法。
- en: Scoring context
  id: totrans-146
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 评分上下文
- en: Scoring is batch against records in a file, and the output will be a file identical
    to the input file but with a scored field appended to each record. The output
    file remains on the H2O batch-scorer system until processed by another system
    (for example, copied to a downstream system for processing).
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 评分是对文件中的记录进行批处理，输出将是一个与输入文件相同的文件，但每个记录都附加了一个评分字段。输出文件保留在H2O批处理评分器系统中，直到由另一个系统（例如，复制到下游系统进行处理）处理。
- en: Implementation
  id: totrans-148
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 实现
- en: The H2O batch file scorer is a single JAR file that is available from H2O.ai.
    Command-line arguments are used to specify the location of the model and input
    file, as well as any runtime parameters such as skipping the column head if one
    exists in the file.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: H2O批处理文件评分器是一个单JAR文件，由H2O.ai提供。使用命令行参数指定模型的存储位置和输入文件，以及任何运行时参数，例如跳过文件中存在的列标题。
- en: Scoring example
  id: totrans-150
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 评分示例
- en: 'The following command shows how a batch-file job is run from the command line:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 以下命令显示了如何从命令行运行批处理文件作业：
- en: '[PRE4]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: A few notes are worth mentioning.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 有几点值得注意。
- en: Additional notes
  id: totrans-154
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 其他注意事项
- en: This scorer is ideal for processing extremely large files (> GB) as a single
    task, making it easy to use in a traditional batch-processing workflow. If the
    input file contains a header, then the scorer will select the correct columns
    to pass to the model, and if a header is not present, then the columns can be
    passed as command-line parameters.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 此评分器非常适合作为单个任务处理极大的文件（> GB），使其在传统批处理工作流程中易于使用。如果输入文件包含标题，则评分器将选择正确的列传递给模型；如果没有标题，则可以将列作为命令行参数传递。
- en: Let's now take a look at the H2O Kafka scorer.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们看看H2O Kafka评分器。
- en: H2O Kafka scorer
  id: totrans-157
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: H2O Kafka评分器
- en: The H2O Kafka scorer is an application that integrates with the score from Kafka
    streams.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: H2O Kafka评分器是一个与Kafka流评分集成的应用程序。
- en: Pattern overview
  id: totrans-159
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 模式概述
- en: 'The H2O Kafka scorer pattern is shown in the following diagram:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: H2O Kafka评分器模式如图所示：
- en: '![Figure 10.5 – MOJO scoring pattern for H2O Kafka scorer'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: '![图10.5 – H2O Kafka评分器的MOJO评分模式'
- en: '](img/B16721_10_005.jpg)'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/B16721_10_005.jpg](img/B16721_10_005.jpg)'
- en: Figure 10.5 – MOJO scoring pattern for H2O Kafka scorer
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.5 – H2O Kafka评分器的MOJO评分模式
- en: Scoring context
  id: totrans-164
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 评分上下文
- en: Scoring against streaming data is shown in *Figure 10.5*. Specifically, the
    H2O Kafka scorer pulls messages from a topic queue and publishes the score outcome
    to another topic.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 评分对流的展示如图*10.5*所示。具体来说，H2O Kafka评分器从主题队列中拉取消息并将评分结果发布到另一个主题。
- en: Implementation
  id: totrans-166
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 实现
- en: The H2O Kafka scorer is a JAR file that is implemented on the Kafka system.
    A properties file is used to configure which topic to consume (and thus which
    messages to score) and which to publish to (where to send the results). When the
    H2O Kafka scorer JAR file is started, it loads the MOJO and then listens for incoming
    messages from the topic.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: H2O Kafka评分器是一个在Kafka系统上实现的JAR文件。使用属性文件配置要消费的主题（因此要评分的消息）以及要发布到哪个主题（将结果发送到何处）。当H2O
    Kafka评分器JAR文件启动时，它加载MOJO并监听来自该主题的传入消息。
- en: Scoring example
  id: totrans-168
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 评分示例
- en: Scoring is done when a message arrives at the upstream topic. A prediction is
    appended to the last field of the original message. This new message is then sent
    to a topic for downstream processing.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 当消息到达上游主题时进行评分。将预测附加到原始消息的最后一个字段。然后将这个新消息发送到另一个主题进行下游处理。
- en: Additional notes
  id: totrans-170
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 其他注意事项
- en: Scaling throughput is done using native Kafka scaling techniques inherent in
    its distributed parallelized architecture.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用其分布式并行化架构中固有的原生Kafka扩展技术来实现扩展吞吐量。
- en: Finally, let's look at H2O batch scoring on Spark.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，让我们看看Spark上的H2O批处理评分。
- en: H2O batch scoring on Spark
  id: totrans-173
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Spark上的H2O批处理评分
- en: H2O MOJOs can be deployed as native Spark jobs.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: H2O MOJO可以作为原生Spark作业部署。
- en: Pattern overview
  id: totrans-175
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 模式概述
- en: 'The H2O batch scoring on Spark pattern is shown in the following diagram:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: Spark上的H2O批处理评分模式如图所示：
- en: '![Figure 10.6 – MOJO scoring pattern for H2O batch scoring on Spark'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: '![图10.6 – Spark上H2O批处理评分的MOJO评分模式'
- en: '](img/B16721_10_006.jpg)'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/B16721_10_006.jpg](img/B16721_10_006.jpg)'
- en: Figure 10.6 – MOJO scoring pattern for H2O batch scoring on Spark
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.6 – Spark上H2O批处理评分的MOJO评分模式
- en: Scoring context
  id: totrans-180
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 评分上下文
- en: Scoring is batch and on a Spark cluster. As such, the batch scoring is distributed
    and thus scales well to massive batch sizes.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 评分是批处理并在Spark集群上进行的。因此，批处理评分是分布式的，因此可以很好地扩展到巨大的批处理大小。
- en: Implementation
  id: totrans-182
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 实现
- en: The required dependency to score MOJOs on the Spark cluster is distributed with
    the `spark-submit` command, as shown in the following section.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Spark 集群上评分 MOJO 所需的依赖项与以下部分中显示的 `spark-submit` 命令一起分发。
- en: Scoring example
  id: totrans-184
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 评分示例
- en: 'First, we''ll create a `myRiskScoring.py`. The code is illustrated in the following
    snippet:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将创建一个 `myRiskScoring.py`。代码如下所示：
- en: '[PRE5]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '[PRE6]'
  id: totrans-187
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '[PRE7]'
  id: totrans-188
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '[PRE8]'
  id: totrans-189
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '[PRE9]'
  id: totrans-190
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '[PRE10]'
  id: totrans-191
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Then, submit your Spark job with the H2O scoring library, as follows:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，使用 H2O 评分库提交您的 Spark 作业，如下所示：
- en: '[PRE11]'
  id: totrans-193
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Note that the `h2o_pysparkling_scoring.zip` dependency will be distributed to
    the cluster with the job. This library is available from H2O.ai.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，`h2o_pysparkling_scoring.zip` 依赖项将与作业一起分发到集群中。此库由 H2O.ai 提供。
- en: Additional notes
  id: totrans-195
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 补充说明
- en: 'There are other scoring settings available in addition to those shown in the
    previous code sample. The following link will provide more details: [https://docs.h2o.ai/sparkling-water/3.1/latest-stable/doc/deployment/load_mojo.html](https://docs.h2o.ai/sparkling-water/3.1/latest-stable/doc/deployment/load_mojo.html).'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 除了之前代码示例中显示的评分设置外，还有其他评分设置可用。以下链接将提供更多详细信息：[https://docs.h2o.ai/sparkling-water/3.1/latest-stable/doc/deployment/load_mojo.html](https://docs.h2o.ai/sparkling-water/3.1/latest-stable/doc/deployment/load_mojo.html)。
- en: We have finished our review of some scoring patterns on H2O software. Let's
    now transition to scoring patterns on third-party software.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经完成了对 H2O 软件上一些评分模式的审查。现在让我们过渡到第三方软件上的评分模式。
- en: Exploring examples of MOJO scoring with third-party software
  id: totrans-198
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索使用第三方软件的 MOJO 评分示例
- en: Let's now look at some examples of scoring that involve third-party software.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们来看一些涉及第三方软件的评分示例。
- en: Snowflake integration
  id: totrans-200
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Snowflake 集成
- en: H2O.ai has partnered with Snowflake to integrate MOJO scoring against Snowflake
    tables. It is important to note that the MOJO in this integration is deployed
    on the Snowflake architecture and therefore achieves Snowflake's native scalability
    benefits. Combined with the low latency of MOJO scoring, the result is batch scoring
    on massive Snowflake tables in mere seconds, though real-time scoring on a smaller
    number of records is achievable as well.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: H2O.ai 与 Snowflake 合作，将 MOJO 评分集成到 Snowflake 表中。需要注意的是，在此集成中部署的 MOJO 是在 Snowflake
    架构上，因此实现了 Snowflake 的原生可扩展性优势。结合 MOJO 评分的低延迟，可以在几秒钟内对大量 Snowflake 表进行批量评分，尽管对少量记录的实时评分也是可行的。
- en: Pattern overview
  id: totrans-202
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 模式概述
- en: 'The Snowflake integration pattern is shown in the following diagram:'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: Snowflake 集成模式在以下图中显示：
- en: '![Figure 10.7 – MOJO scoring pattern for Snowflake Java user-defined function
    (UDF) integration'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 10.7 – Snowflake Java 用户自定义函数 (UDF) 集成的 MOJO 评分模式](img/B16721_10_007.jpg)'
- en: '](img/B16721_10_007.jpg)'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16721_10_007.jpg)'
- en: Figure 10.7 – MOJO scoring pattern for Snowflake Java user-defined function
    (UDF) integration
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.7 – Snowflake Java 用户自定义函数 (UDF) 集成的 MOJO 评分模式
- en: Let's elaborate.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们详细说明。
- en: Scoring context
  id: totrans-208
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 评分上下文
- en: Scoring is batch against Snowflake tables and leverages the scalability of the
    Snowflake platform. Thus, scoring can be made against any Snowflake table, including
    those holding massive datasets.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 评分是针对 Snowflake 表的批量操作，并利用 Snowflake 平台的扩展性。因此，评分可以对任何 Snowflake 表进行，包括那些包含大量数据集的表。
- en: Scoring is done by running a SQL statement from a Snowflake client. This can
    be either a native Snowflake worksheet, SnowSQL, or a SQL client with a Snowflake
    connector.Alternatively, scoring can be done programmatically using Snowflake's
    Snowpark API.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 评分是通过从 Snowflake 客户端运行 SQL 语句来完成的。这可以是本机 Snowflake 工作表、SnowSQL 或具有 Snowflake
    连接器的 SQL 客户端。或者，评分可以通过使用 Snowflake 的 Snowpark API 编程来完成。
- en: Implementation
  id: totrans-211
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 实现
- en: To implement your score, create a staging table and grant permissions against
    it. You then copy your MOJO and H2O JAR file dependencies to the staging table.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 要实现评分，创建一个临时表并对其授予权限。然后，将您的 MOJO 和 H2O JAR 文件依赖项复制到临时表中。
- en: You can then use SQL to create a Java UDF that imports these dependencies and
    assigns a handler to the H2O dependency that does the scoring. This UDF is then
    referenced when making a SQL scoring statement, as shown next.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，您可以使用 SQL 创建一个 Java UDF，导入这些依赖项并将处理评分的 H2O 依赖项分配给处理器。然后，在创建 SQL 评分语句时引用此
    UDF，如下所示。
- en: 'You can find H2O dependencies and instructions here: [https://s3.amazonaws.com/artifacts.h2o.ai/releases/ai/h2o/dai-snowflake-integration/java-udf/download/index.html](https://s3.amazonaws.com/artifacts.h2o.ai/releases/ai/h2o/dai-snowflake-integration/java-udf/download/index.html).'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在这里找到 H2O 依赖项和说明：[https://s3.amazonaws.com/artifacts.h2o.ai/releases/ai/h2o/dai-snowflake-integration/java-udf/download/index.html](https://s3.amazonaws.com/artifacts.h2o.ai/releases/ai/h2o/dai-snowflake-integration/java-udf/download/index.html)。
- en: An integrated experience of using the UDF with Snowflake is also available online
    at [https://cloud.h2o.ai/v1/latestapp/wave-snowflake](https://cloud.h2o.ai/v1/latestapp/wave-snowflake).
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 UDF 与 Snowflake 集成的集成体验也在线上提供，请访问 [https://cloud.h2o.ai/v1/latestapp/wave-snowflake](https://cloud.h2o.ai/v1/latestapp/wave-snowflake)。
- en: Scoring example
  id: totrans-216
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 评分示例
- en: 'This is an example of a SQL statement that performs batch scoring against a
    table:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个执行批量评分的 SQL 语句的示例：
- en: '[PRE12]'
  id: totrans-218
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Notice that the H2O Scoring UDF (loaded as shown in the *Implementation* section)
    is run and that the model name (the MOJO name) is referenced.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，H2O 评分 UDF（如*实现*部分所示加载）正在运行，并且引用了模型名称（MOJO 名称）。
- en: Additional notes
  id: totrans-220
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 其他注意事项
- en: For a more programmatic approach, you can use the Snowpark API instead of a
    SQL statement to batch-score.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更程序化的方法，你可以使用 Snowpark API 而不是 SQL 语句来进行批量评分。
- en: Alternative implementation – Scoring via a Snowflake external function
  id: totrans-222
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 替代实现 – 通过 Snowflake 外部函数进行评分
- en: 'For cases where you do not want to deploy MOJOs directly to the Snowflake environment,
    you can implement an external function on Snowflake and then pass the scoring
    to an H2O eScorer implementation. Note that scoring itself is external to Snowflake,
    and batch throughput rates are determined by the H2O eScorer and not the Snowflake
    architecture. This is shown in the following diagram:'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 对于你不想直接将 MOJO 部署到 Snowflake 环境的情况，你可以在 Snowflake 上实现一个外部函数，然后将评分传递给 H2O eScorer
    实现。请注意，评分本身是外部于 Snowflake 的，批处理吞吐量由 H2O eScorer 决定，而不是 Snowflake 架构。这在下图中显示：
- en: '![Figure 10.8 – MOJO scoring pattern for Snowflake external function integration'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 10.8 – MOJO 评分模式用于 Snowflake 外部函数集成'
- en: '](img/B16721_10_008.jpg)'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片 B16721_10_008.jpg]'
- en: Figure 10.8 – MOJO scoring pattern for Snowflake external function integration
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.8 – MOJO 评分模式用于 Snowflake 外部函数集成
- en: 'To implement this, we will use Snowflake on AWS as an example. Follow these
    steps:'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 为了实现这一点，我们将以 AWS 上的 Snowflake 为例。请按照以下步骤操作：
- en: First, use the Snowflake client to create  `api_integration` to `aws_api_gateway`.
    A gateway is required to secure the external function when communicating to the
    H2O eScorer, which will be outside Snowflake. You will need to have the correct
    role to create this.
  id: totrans-228
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，使用 Snowflake 客户端将 `api_integration` 创建为 `aws_api_gateway`。需要一个网关来在向 H2O eScorer（它将位于
    Snowflake 之外）通信时保护外部函数。你需要有正确的角色来创建此网关。
- en: Then, use SQL to create an external function on Snowflake—for example, named
    H2OPredict. The external function will reference the `api_integration`.
  id: totrans-229
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，使用 SQL 在 Snowflake 上创建一个外部函数，例如命名为 H2OPredict。外部函数将引用 `api_integration`。
- en: 'You are now ready to batch score a Snowflake table via an external function
    pass-through to an H2O eScorer. Here is a sample SQL statement:'
  id: totrans-230
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，你已经准备好通过外部函数传递到 H2O eScorer 来批量评分 Snowflake 表。以下是一个示例 SQL 语句：
- en: '[PRE13]'
  id: totrans-231
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Let's have a look at Teradata integration.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看 Teradata 集成。
- en: Teradata integration
  id: totrans-233
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Teradata 集成
- en: 'H2O.ai has partnered with Teradata to implement batch or real-time scoring
    directly against Teradata tables. This is done as shown in the following diagram:'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: H2O.ai 与 Teradata 合作，直接针对 Teradata 表实现批量或实时评分。这如下所示：
- en: '![Figure 10.9 – MOJO scoring pattern for Teradata integration'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 10.9 – MOJO 评分模式用于 Teradata 集成'
- en: '](img/B16721_10_009.jpg)'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片 B16721_10_009.jpg]'
- en: Figure 10.9 – MOJO scoring pattern for Teradata integration
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.9 – 与 Teradata 集成的 MOJO 评分模式
- en: Scoring context
  id: totrans-238
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 评分上下文
- en: 'Scoring is batch against Teradata tables and leverages the scalability of the
    Teradata platform. Thus, scoring can be made against any Teradata table, including
    those holding massive datasets. This is similar in concept to the Snowflake UDF
    integration, but only in concept: the underlying architectures and implementations
    are fundamentally different.'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 评分是针对 Teradata 表进行批处理，并利用了 Teradata 平台的扩展性。因此，可以对任何 Teradata 表进行评分，包括那些包含大量数据集的表。在概念上与
    Snowflake UDF 集成相似，但仅在概念上：底层架构和实现是根本不同的。
- en: Scoring against Teradata tables is done by running a SQL statement from a Teradata
    client. This can be either a native Teradata Studio client or a SQL client with
    a Teradata connector.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 通过Teradata客户端运行SQL语句来对Teradata表进行评分。这可以是本机Teradata Studio客户端或具有Teradata连接器的SQL客户端。
- en: Implementation
  id: totrans-241
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 实现
- en: To implement, you first must install Teradata Vantage **Bring Your Own Model**
    (**BYOM**). Then, you use SQL to create a Vantage table to store H2O MOJOs. You
    then use SQL to load MOJOs into the Vantage table. Details can be found at [https://docs.teradata.com/r/CYNuZkahMT3u2Q~mX35YxA/WC6Ku8fmrVnx4cmPEqYoXA](https://docs.teradata.com/r/CYNuZkahMT3u2Q~mX35YxA/WC6Ku8fmrVnx4cmPEqYoXA).
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 要实现，您首先必须安装Teradata Vantage **Bring Your Own Model** (**BYOM**)。然后，您使用SQL创建一个Vantage表来存储H2O
    MOJOs。然后，您使用SQL将MOJOs加载到Vantage表中。详细信息请参阅[https://docs.teradata.com/r/CYNuZkahMT3u2Q~mX35YxA/WC6Ku8fmrVnx4cmPEqYoXA](https://docs.teradata.com/r/CYNuZkahMT3u2Q~mX35YxA/WC6Ku8fmrVnx4cmPEqYoXA)。
- en: Scoring example
  id: totrans-243
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 评分示例
- en: 'Here is an example SQL statement to batch score a Teradata table:'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是一个用于批量评分Teradata表的SQL语句示例：
- en: '[PRE14]'
  id: totrans-245
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '[PRE15]'
  id: totrans-246
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '[PRE16]'
  id: totrans-247
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '[PRE17]'
  id: totrans-248
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '[PRE18]'
  id: totrans-249
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: In this case, the code assumes all `risk_table` fields are used as input into
    the MOJO.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，代码假设所有`risk_table`字段都作为输入传递给MOJO。
- en: Additional notes
  id: totrans-251
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 其他注意事项
- en: Your SQL statement to batch score may include options to return reason codes,
    stage probabilities, and leaf-node assignments.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 您的批量评分SQL语句可能包括返回原因代码、阶段概率和叶节点分配的选项。
- en: BI tool integration
  id: totrans-253
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: BI工具集成
- en: 'A powerful use of MOJO scoring is to integrate into BI tools. The most common
    way is to implement MOJO scoring either on a REST server or against a database,
    as shown in the following diagram. Note that in this pattern, MOJOs are not deployed
    on the BI tool itself, but rather, the tool integrates with an external scoring
    system. The low-latency nature of MOJO scoring allows users to interact in real
    time with MOJO predictions through this pattern:'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: MOJO评分的一个强大用途是集成到BI工具中。最常见的方法是在REST服务器或数据库上实现MOJO评分，如下面的图所示。请注意，在此模式中，MOJO没有部署在BI工具本身上，而是工具与外部评分系统集成。MOJO评分的低延迟特性允许用户通过此模式实时与MOJO预测进行交互：
- en: '![Figure 10.10 – MOJO scoring patterns for BI tool integration'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: '![图10.10 – MOJO评分模式用于BI工具集成'
- en: '](img/B16721_10_010.jpg)'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16721_10_010.jpg)'
- en: Figure 10.10 – MOJO scoring patterns for BI tool integration
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.10 – MOJO评分模式用于BI工具集成
- en: Scoring context
  id: totrans-258
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 评分上下文
- en: BI tools integrate real-time predictions from external scorers.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: BI工具集成了外部评分器的实时预测。
- en: Implementation
  id: totrans-260
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 实现
- en: An external REST or database MOJO scoring system is implemented. Integration
    with the external scorer is implemented in the BI tool. These integrations are
    specific to each BI tool, and often, a single BI tool has multiple ways to make
    this integration.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 实现外部REST或数据库MOJO评分系统。在BI工具中实现与外部评分器的集成。这些集成针对每个BI工具都是特定的，通常，单个BI工具有多种方法来实现这种集成。
- en: Scoring example – Excel
  id: totrans-262
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 评分示例 – Excel
- en: 'The following code block shows a formula created in a cell of an Excel spreadsheet:'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的代码块显示了在Excel电子表格的单元格中创建的公式：
- en: '[PRE19]'
  id: totrans-264
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: This web service is called when the formula is applied to the target cell, or
    whenever a value changes in any of the cells referenced in the formula. A user
    can then drag the formula down a column and have predictions fill the column.
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 当公式应用于目标单元格，或者公式中引用的任何单元格的值发生变化时，都会调用此网络服务。然后，用户可以将公式向下拖动到列中，让预测填充该列。
- en: Note in the preceding formula that the REST call composes the observation to
    be scored as CSV and not as JSON. The structuring of this payload is specific
    to the REST API and its endpoint.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 注意在先前的公式中，REST调用将待评分的观察结果组成CSV而不是JSON。此有效负载的结构特定于REST API及其端点。
- en: We can integrate MOJO scoring into other third-party software using REST endpoints
    in a similar fashion, though the semantics of the endpoint construction differ.
    Let's see how to do it in Tableau.
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用类似的方式将MOJO评分集成到其他第三方软件中，尽管端点构造的语义不同。让我们看看如何在Tableau中实现它。
- en: Scoring example – Tableau
  id: totrans-268
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 评分示例 – Tableau
- en: Tableau is a common dashboarding tool used within enterprises to present information
    to a variety of different users within the organization.
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: Tableau是企业内部常用的仪表板工具，用于向组织内的各种不同用户展示信息。
- en: 'Using the Tableau script syntax, a model can be invoked from the dashboard.
    This is very powerful as now, a business user can get current prediction results
    directly in the dashboard on demand. You can see an example script here:'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Tableau脚本语法，可以从仪表板调用模型。这非常强大，因为现在，业务用户可以直接在仪表板上按需获取当前的预测结果。您可以在以下示例脚本中看到示例：
- en: '[PRE20]'
  id: totrans-271
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '[PRE21]'
  id: totrans-272
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '[PRE22]'
  id: totrans-273
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '[PRE23]'
  id: totrans-274
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: '[PRE24]'
  id: totrans-275
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: '[PRE25]'
  id: totrans-276
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: '[PRE26]'
  id: totrans-277
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '[PRE27]'
  id: totrans-278
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: '[PRE28]'
  id: totrans-279
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: '[PRE29]'
  id: totrans-280
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: '[PRE30]'
  id: totrans-281
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: '[PRE31]'
  id: totrans-282
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: '[PRE32]'
  id: totrans-283
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: '[PRE33]'
  id: totrans-284
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: '[PRE34]'
  id: totrans-285
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: '[PRE35]'
  id: totrans-286
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: '[PRE36]'
  id: totrans-287
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: The script reads the values as attributes (`ATTR` keyword) and passes them to
    a script in the Tableau environment when a REST call is made to the model. Using
    the REST call allows a centralized model to be deployed and managed, but different
    applications and consumers invoke the model based on their specific needs.
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 脚本将值作为属性（`ATTR` 关键字）读取，并在对模型进行 REST 调用时将它们传递到 Tableau 环境中的脚本。使用 REST 调用允许集中部署和管理模型，但不同的应用程序和消费者根据其特定需求调用模型。
- en: Now, let's see how to build a REST endpoint in Power BI.
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们看看如何在 Power BI 中构建 REST 端点。
- en: Scoring example – Power BI
  id: totrans-290
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 评分示例 – Power BI
- en: 'Here is a scoring example for Power BI. In this case, we are using a `Web.Contents`
    Power Query M function. This function is pasted to the desired Power BI element
    in your Power BI dashboard:'
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是一个 Power BI 的评分示例。在这种情况下，我们使用了一个 `Web.Contents` Power Query M 函数。此函数粘贴到您
    Power BI 仪表板中的所需元素：
- en: '[PRE37]'
  id: totrans-292
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: '[PRE38]'
  id: totrans-293
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: '[PRE39]'
  id: totrans-294
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: '[PRE40]'
  id: totrans-295
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: '[PRE41]'
  id: totrans-296
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: '[PRE42]'
  id: totrans-297
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: '[PRE43]'
  id: totrans-298
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: '[PRE44]'
  id: totrans-299
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: '[PRE45]'
  id: totrans-300
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: '[PRE46]'
  id: totrans-301
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: '[PRE47]'
  id: totrans-302
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: '[PRE48]'
  id: totrans-303
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: '[PRE49]'
  id: totrans-304
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: '[PRE50]'
  id: totrans-305
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: '[PRE51]'
  id: totrans-306
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: '[PRE52]'
  id: totrans-307
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: '[PRE53]'
  id: totrans-308
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: '[PRE54]'
  id: totrans-309
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: '[PRE55]'
  id: totrans-310
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: '[PRE56]'
  id: totrans-311
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: '[PRE57]'
  id: totrans-312
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: '[PRE58]'
  id: totrans-313
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: '[PRE59]'
  id: totrans-314
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: Let's generalize a bit from these specific examples.
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从这些具体示例中概括一下。
- en: Additional notes
  id: totrans-316
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 其他注意事项
- en: Each BI tool integrates with a REST endpoint or database in its own way and
    often provides multiple ways to do so. See your BI tool documentation for details.
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 每个 BI 工具都以自己的方式与 REST 端点或数据库集成，并且通常提供多种集成方式。有关详细信息，请参阅您的 BI 工具文档。
- en: UiPath integration
  id: totrans-318
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: UiPath 集成
- en: '**UiPath** is an RPA platform that automates workflows based on human actions.
    Making predictions and responding to these predictions is a powerful part of this
    automation, and thus scoring models during these workflow steps is a perfect fit.
    You can see an example of this in the following diagram:'
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: '**UiPath** 是一个基于人类行为的自动化工作流的 RPA 平台。做出预测并对这些预测做出响应是这一自动化的重要组成部分，因此在这些工作流步骤中进行评分模型是一个完美的选择。您可以在以下图中看到这个示例：'
- en: '![Figure 10.11 – MOJO scoring pattern for UiPath integration'
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 10.11 – UiPath 集成 MOJO 评分模式'
- en: '](img/B16721_10_011.jpg)'
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16721_10_011.jpg)'
- en: Figure 10.11 – MOJO scoring pattern for UiPath integration
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.11 – UiPath 集成 MOJO 评分模式
- en: Scoring context
  id: totrans-323
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 评分上下文
- en: UiPath integrates with external MOJO scoring similar to what was shown for BI
    tools in the previous section. In the case of UiPath, a workflow step is configured
    to make a REST call, receive a prediction, and respond to that prediction.
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: UiPath 与外部 MOJO 评分的集成方式与上一节中展示的 BI 工具类似。在 UiPath 的情况下，配置了一个工作流步骤来执行 REST 调用，接收预测，并对该预测做出响应。
- en: Implementation
  id: totrans-325
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 实现
- en: 'MOJO scoring is implemented externally on a REST server, and the UiPath Request
    Builder wizard is used to configure a REST endpoint to return a prediction. Details
    can be seen here: [https://www.uipath.com/learning/video-tutorials/application-integration-rest-web-service-json](https://www.uipath.com/learning/video-tutorials/application-integration-rest-web-service-json).'
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: MOJO 评分在外部 REST 服务器上实现，并使用 UiPath Request Builder 向导配置 REST 端点以返回预测。详细信息请见此处：[https://www.uipath.com/learning/video-tutorials/application-integration-rest-web-service-json](https://www.uipath.com/learning/video-tutorials/application-integration-rest-web-service-json)。
- en: Scoring example
  id: totrans-327
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 评分示例
- en: 'This video shows how to automate a workflow using H2O MOJO scoring: [https://www.youtube.com/watch?v=LRlGjphraTY](https://www.youtube.com/watch?v=LRlGjphraTY).'
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: 这段视频展示了如何使用 H2O MOJO 评分自动化工作流：[https://www.youtube.com/watch?v=LRlGjphraTY](https://www.youtube.com/watch?v=LRlGjphraTY)。
- en: We have just finished our survey of some MOJO scoring patterns for third-party
    software. Let's look at a few scoring patterns with software that your organization
    builds itself.
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 我们刚刚完成了一些第三方软件 MOJO 评分模式的调查。让我们看看一些您组织自行构建的软件的评分模式。
- en: Exploring examples of MOJO scoring with your target-system software
  id: totrans-330
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用目标系统软件探索 MOJO 评分示例
- en: In addition to deploying MOJOs for scoring on H2O and third-party software,
    you can also take a **Do-It-Yourself** (**DIY**) approach and deploy scoring in
    your own software. Let's see how to do this.
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 除了在 H2O 和第三方软件上部署 MOJO 进行评分外，您还可以采取**DIY**（**DIY**）方法，在自己的软件中部署评分。让我们看看如何做这件事。
- en: Your software application
  id: totrans-332
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 您的软件应用程序
- en: 'There are two ways to score from your own software: integrate with an external
    scoring system or embed scoring directly in your software system.'
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 从您的软件中评分有两种方式：集成外部评分系统或直接在软件系统中嵌入评分。
- en: 'The following diagram shows the pattern of integrating with an external scoring
    system:'
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图显示了与外部评分系统集成模式的示例：
- en: '![Figure 10.12 – MOJO application-scoring pattern for external scoring'
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 10.12 – 外部评分的 MOJO 应用评分模式'
- en: '](img/B16721_10_012.jpg)'
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16721_10_012.jpg)'
- en: Figure 10.12 – MOJO application-scoring pattern for external scoring
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.12 – 外部评分的 MOJO 应用评分模式
- en: 'This pattern should look familiar because it is fundamentally the same as what
    we saw with scoring from BI tools: your software acts as a client to consume MOJO
    predictions made from another system. The external prediction system can be a
    MOJO deployed on a REST server (for example, an H2O REST scorer) or batch database
    scorer (for example, a Snowflake Java UDF or an H2O batch database scorer) or
    another external system, and your application needs to implement the libraries
    to connect to that system.'
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: 这种模式应该看起来很熟悉，因为它与我们之前在 BI 工具中看到的评分方式在本质上是一样的：您的软件作为客户端来消费另一个系统生成的 MOJO 预测。外部预测系统可以是部署在
    REST 服务器上的 MOJO（例如，H2O REST 评分器）或批量数据库评分器（例如，Snowflake Java UDF 或 H2O 批量数据库评分器）或另一个外部系统，而您的应用程序需要实现连接到该系统的库。
- en: 'In contrast, the following diagram shows the pattern of embedding MOJO scoring
    directly into your application itself:'
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: 与此相反，以下图表显示了将 MOJO 评分直接嵌入到您应用程序本身的模式：
- en: '![Figure 10.13 – MOJO application-scoring pattern for embedded scoring'
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 10.13 – 嵌入式评分的 MOJO 应用评分模式'
- en: '](img/B16721_10_013.jpg)'
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16721_10_013.jpg)'
- en: Figure 10.13 – MOJO application-scoring pattern for embedded scoring
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.13 – 嵌入式评分的 MOJO 应用评分模式
- en: Doing so requires your application to implement a Java wrapper class that uses
    the H2O MOJO API to load the MOJO and score data with it. This was shown in detail
    in [*Chapter 9*](B16721_09_Final_SK_ePub.xhtml#_idTextAnchor159), *Production
    Scoring and the H2O MOJO*.
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: 这样做需要您的应用程序实现一个使用 H2O MOJO API 加载 MOJO 并用其评分数据的 Java 包装类。这在[*第 9 章*](B16721_09_Final_SK_ePub.xhtml#_idTextAnchor159)中详细展示，*生产评分和
    H2O MOJO*。
- en: When should you use the external versus embedded scoring pattern? There are,
    of course, advantages and disadvantages to each pattern.
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该在何时使用外部评分模式与嵌入式评分模式？当然，每种模式都有其优点和缺点。
- en: The external scoring pattern decouples scoring from the application and thus
    allows each component and the personas around it to focus on what it does best. Application
    developers, for example, can focus on developing the application and not deploying
    and monitoring models. Additionally, an external scoring component can be reused
    so that many applications and clients can connect to the same deployed model.
    Finally, particularly in the case of on-database scoring (for example, Java UDF
    and Teradata integration) and streaming scoring with extreme batch size or throughput,
    it would be difficult or foolish to attempt to build this on your own.
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: 外部评分模式将评分与应用程序解耦，因此允许每个组件及其相关角色专注于其最擅长的事情。例如，应用程序开发者可以专注于开发应用程序，而不是部署和监控模型。此外，外部评分组件可以重用，以便许多应用程序和客户端可以连接到同一部署的模型。最后，尤其是在数据库端评分（例如，Java
    UDF 和 Teradata 集成）以及具有极端批量大小或吞吐量的流评分的情况下，尝试自行构建这将是困难的或愚蠢的。
- en: The embedded scoring pattern has the advantage of eliminating the time cost
    of sending observations and predictions across the network. This may or may not
    be important depending on your **service-level agreements** (**SLAs**). It certainly
    simplifies the infrastructure requirements to perform scoring, especially when
    network infrastructure is unavailable or unreliable. Finally, and often for regulatory
    reasons, it may be desirable or necessary to manage the model deployment and the
    application as a single entity, thus demanding the coupling of the two.
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 嵌入式评分模式的优势在于消除了发送观察和预测到网络的时间成本。这取决于您的**服务级别协议**（**SLA**）是否重要。它确实简化了执行评分的基础设施需求，尤其是在网络基础设施不可用或不稳定的情况下。最后，出于监管原因，可能希望或有必要将模型部署和应用程序作为一个单一实体来管理，从而要求两者耦合。
- en: On-device scoring
  id: totrans-347
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设备端评分
- en: MOJOs can be deployed to devices, whether they be an office scanner/printer,
    a medical device, or a sensor. These can be viewed as mini-applications, and the
    same decision for external or embedded scoring applies to devices as with applications,
    as discussed previously. In the case of devices, however, the advantages and disadvantages
    of external versus embedded scoring can be magnified greatly. For example, devices
    such as **internet of things** (**IoT**) sensors may number in the thousands,
    and the cost of deploying and managing models on each of these may outweigh the
    cost of greater latency resulting from network communication to a central external
    scorer.
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: MOJO 可以部署到设备上，无论是办公室扫描仪/打印机、医疗设备还是传感器。这些可以被视为小型应用程序，对于外部或嵌入式评分的决定，设备与应用程序一样，如前所述。然而，在设备的情况下，外部与嵌入式评分的优缺点可能会被放大很多。例如，**物联网**（**IoT**）传感器可能成千上万，在这些设备上部署和管理模型的开销可能超过由于网络通信到中央外部评分器的延迟增加所带来的成本。
- en: Important Note
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: A rule of thumb is that the available device memory needs to be over two times
    the size of the MOJO.
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: 一个经验法则是可用设备内存需要超过 MOJO 大小的两倍。
- en: Exploring examples of accelerators based on H2O Driverless AI integrations
  id: totrans-351
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索基于 H2O Driverless AI 集成的加速器示例
- en: This book thus far has focused on building models at scale using H2O. We have
    been doing this with H2O Core (often called H2O Open Source), a distributed ML
    framework that scales to massive datasets. We will see in [*Chapter 13*](B16721_13_Final_SK_ePub.xhtml#_idTextAnchor241),
    *Introducing H2O AI Cloud,* that H2O offers a broader set of capabilities represented
    by an end-to-end platform called H2O AI Cloud. One of these capabilities is a
    highly focused AI-based AutoML component called Driverless AI, and we will distinguish
    this from H2O Core in [*Chapter 13*](B16721_13_Final_SK_ePub.xhtml#_idTextAnchor241)*,
    Introducing H2O AI Cloud*.
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，本书主要关注使用 H2O 构建大规模模型。我们一直使用 H2O Core（通常称为 H2O 开源版），这是一个可以扩展到海量数据集的分布式机器学习框架。在第
    13 章[*介绍 H2O AI Cloud*](B16721_13_Final_SK_ePub.xhtml#_idTextAnchor241)中，我们将看到
    H2O 提供了一个更广泛的由端到端平台 H2O AI Cloud 表示的功能集。其中一项功能是一个高度专注的基于 AI 的 AutoML 组件，称为 Driverless
    AI，我们将在[*第 13 章*](B16721_13_Final_SK_ePub.xhtml#_idTextAnchor241)*介绍 H2O AI Cloud*中区分这一点。
- en: Driverless AI is like H2O Core because it also generates ready-to-deploy MOJOs
    with a generic MOJO runtime and API, though for Driverless AI a license file is
    required for MOJO deployment, and the MOJO and runtime are named differently than
    for H2O Core.
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: Driverless AI 与 H2O Core 类似，因为它也使用通用的 MOJO 运行时和 API 生成可部署的 MOJO，尽管对于 Driverless
    AI，MOJO 部署需要许可证文件，并且 MOJO 和运行时命名与 H2O Core 不同。
- en: The reason for mentioning this here is that several integrations of Driverless
    AI have been built and are well documented but have not analogously been built
    for H2O Core. These integrations and their documentation can be used as accelerators
    to do the same for H2O Core. Just bear in mind the lack of license requirement
    for deploying H2O Core MOJOs, and the differently named MOJOs and runtime.
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: 提及这一点的原因是，已经构建了几个 Driverless AI 的集成，并且有很好的文档记录，但并没有为 H2O Core 建立类似的集成。这些集成及其文档可以用作加速器，以对
    H2O Core 执行相同的操作。请记住，部署 H2O Core MOJO 不需要许可证要求，并且 MOJO 和运行时命名不同。
- en: Approach to Describing Accelerators
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: 描述加速器的方法
- en: Accelerators are overviewed here and links are provided to allow you to understand
    their implementation details. As noted, these accelerators represent the deployment
    of MOJOs generated from the H2O Driverless AI AutoML tool. Please review [*Chapter
    9*](B16721_09_Final_SK_ePub.xhtml#_idTextAnchor159), *Production Scoring and the
    H2O MOJO* to understand how MOJOs generated from H2O Core (H2O-3 or Sparkling
    Water) are essentially the same as those generated from Driverless AI but with
    differences in naming and the MOJO API. This knowledge will allow you to implement
    the Driverless AI MOJO details shown in the links for H2O Core MOJOs.
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: 这里概述了加速器，并提供了链接，以便您了解其实施细节。正如所提到的，这些加速器代表了从 H2O Driverless AI AutoML 工具生成的 MOJO
    的部署。请参阅[*第 9 章*](B16721_09_Final_SK_ePub.xhtml#_idTextAnchor159)*生产评分和 H2O MOJO*，了解从
    H2O Core（H2O-3 或 Sparkling Water）生成的 MOJO 与从 Driverless AI 生成的 MOJO 基本相同，但在命名和
    MOJO API 方面有所不同。这些知识将使您能够实现链接中显示的 H2O Core MOJO 的 Driverless AI MOJO 细节。
- en: Let's take a look at some examples.
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看一些示例。
- en: Apache NiFi
  id: totrans-358
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Apache NiFi
- en: 'Apache NiFi is an **open source software** (**OSS**) designed to program the
    flow of data in a UI and drag-and-drop fashion. It is built around the concept
    of moving data through different configurable processors that act on the data
    in specialized ways. The resulting data flows allow forking, merging, and nesting
    of sub-flows of processor sequences and generally resemble complex **directed
    acyclic graphs** (**DAGs**). The project''s home page can be found here: [https://nifi.apache.org/index.html](https://nifi.apache.org/index.html).'
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: Apache NiFi 是一种 **开源软件**（**OSS**），旨在以 UI 和拖放方式编程数据的流动。它围绕通过不同可配置的处理器移动数据的概念构建，这些处理器以特殊的方式处理数据。结果数据流允许处理器序列的子流分支、合并和嵌套，通常类似于复杂的
    **有向无环图**（**DAGs**）。项目主页可在此处找到：[https://nifi.apache.org/index.html](https://nifi.apache.org/index.html)。
- en: NiFi processors can be used to communicate with external REST, JDBC, and Kafka
    systems and thus can leverage the pattern of scoring MOJOs from external systems.
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: NiFi 处理器可以用于与外部的 REST、JDBC 和 Kafka 系统进行通信，从而可以利用来自外部系统的评分 MOJOs 模式。
- en: 'You can, however, build your own processor that embeds the MOJO in the processor
    to score real-time or batch. This processor requires only configurations to point
    to the MOJO and its dependencies. The following link shows how to do this for
    Driverless AI and can be used as an accelerator for doing the same with H2O Core:
    [https://github.com/h2oai/dai-deployment-examples/tree/master/mojo-nifi](https://github.com/h2oai/dai-deployment-examples/tree/master/mojo-nifi).'
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，您可以为处理器构建自己的处理器，将 MOJO 嵌入其中以进行实时或批量评分。此处理器只需要配置以指向 MOJO 及其依赖项。以下链接展示了如何为
    Driverless AI 做这件事，并可作为使用 H2O Core 进行相同操作的加速器：[https://github.com/h2oai/dai-deployment-examples/tree/master/mojo-nifi](https://github.com/h2oai/dai-deployment-examples/tree/master/mojo-nifi)。
- en: Apache Flink
  id: totrans-362
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Apache Flink
- en: Apache Flink is a high throughput distributed stream- and batch-processing engine
    with an extensive feature set to run event-driven, data analytics, and data pipeline
    applications in a fault-tolerant way.
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: Apache Flink 是一个高吞吐量的分布式流和批量处理引擎，具有丰富的功能集，可以以容错的方式运行事件驱动、数据分析和数据管道应用程序。
- en: 'The following link shows how to embed Driverless AI MOJOs to score data directly
    against Flink data streams and can be used as an accelerator for doing the same
    with H2O Core: [https://github.com/h2oai/dai-deployment-examples/tree/master/mojo-flink](https://github.com/h2oai/dai-deployment-examples/tree/master/mojo-flink).'
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: 以下链接展示了如何将 Driverless AI MOJOs 嵌入以直接对 Flink 数据流进行评分，并可作为使用 H2O Core 进行相同操作的加速器：[https://github.com/h2oai/dai-deployment-examples/tree/master/mojo-flink](https://github.com/h2oai/dai-deployment-examples/tree/master/mojo-flink)。
- en: AWS Lambda
  id: totrans-365
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: AWS Lambda
- en: 'AWS Lambda is a serverless computing service that lets you run code without
    the need to stand up, manage, and pay for underlying server infrastructure. It
    can perform any computing task that is short-lived and stateless, and thus is
    a nice fit for processing scoring requests. The following accelerator shows how
    to implement an AWS Lambda as a REST endpoint for real-time or batch MOJO scoring:
    [https://h2oai.github.io/dai-deployment-templates/aws_lambda_scorer/](https://h2oai.github.io/dai-deployment-templates/aws_lambda_scorer/).'
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: AWS Lambda 是一种无服务器计算服务，允许您在不建立、管理和支付底层服务器基础设施的情况下运行代码。它可以执行任何短暂且无状态的计算任务，因此非常适合处理评分请求。以下加速器展示了如何实现
    AWS Lambda 作为 REST 端点进行实时或批量 MOJO 评分：[https://h2oai.github.io/dai-deployment-templates/aws_lambda_scorer/](https://h2oai.github.io/dai-deployment-templates/aws_lambda_scorer/)。
- en: AWS SageMaker
  id: totrans-367
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: AWS SageMaker
- en: 'AWS SageMaker can be used to host and monitor model scoring. The following
    accelerator shows how to implement a REST endpoint for real-time MOJO scoring:
    [https://h2oai.github.io/dai-deployment-templates/aws-sagemaker-hosted-scorer/](https://h2oai.github.io/dai-deployment-templates/aws-sagemaker-hosted-scorer/).'
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: AWS SageMaker 可以用于托管和监控模型评分。以下加速器展示了如何实现 REST 端点进行实时 MOJO 评分：[https://h2oai.github.io/dai-deployment-templates/aws-sagemaker-hosted-scorer/](https://h2oai.github.io/dai-deployment-templates/aws-sagemaker-hosted-scorer/)。
- en: And now, we have finished our survey of scoring and deployment patterns for
    H2O MOJOs. The business value of your H2O-at-scale models is achieved when they
    are deployed to production systems. The examples shown here are just a few possibilities,
    but they should give you an idea of how diverse MOJO deployments and scoring can
    be.
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们已经完成了对 H2O MOJOs 评分和部署模式的调查。当您的 H2O-at-scale 模型部署到生产系统时，它们实现了业务价值。这里展示的例子只是几种可能性，但它们应该能给您一个关于
    MOJO 部署和评分多样性的概念。
- en: Let's summarize what we've learned in this chapter.
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们总结一下本章所学的内容。
- en: Summary
  id: totrans-371
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we explored a wide diversity of ways to deploy MOJOs and consume
    predictions. This included scoring against real-time, batch, and streaming data
    and scoring with H2O software, third-party software (such as BI tools and Snowflake
    tables), and your own software and devices. It should be evident from these examples
    that the H2O model-deployment possibilities are extremely diverse and therefore
    able to fit your specific scoring needs.
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们探讨了多种部署 MOJOs 和消费预测的方法。这包括对实时、批量以及流式数据进行评分，以及使用 H2O 软件、第三方软件（例如 BI 工具和
    Snowflake 表）以及您自己的软件和设备进行评分。从这些示例中可以明显看出，H2O 模型部署的可能性极为多样，因此能够满足您特定的评分需求。
- en: Now that we have learned how to deploy H2O models to production-scoring environments,
    let's take a step back and start seeing through the eyes of enterprise stakeholders
    who participate in all the steps needed to achieve success with ML at scale with
    H2O. In the next section, we will view H2O at scale through the needs and concerns
    of these stakeholders.
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经学会了如何将 H2O 模型部署到生产评分环境中，让我们退后一步，以参与实现 H2O 在大规模机器学习成功所需的全部步骤的企业利益相关者的视角来看待问题。在下一节中，我们将从这些利益相关者的需求和关注点出发，来观察大规模的
    H2O。
