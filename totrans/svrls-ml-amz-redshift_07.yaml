- en: '7'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '7'
- en: Building Regression Models
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建回归模型
- en: In the previous chapter, we learned about classification models. In this chapter,
    we will learn about building **linear regression** models where we predict numeric
    variables. Unlike classification models, linear regression models are used to
    predict a **continuous numeric value**. Similar to the previous chapter, here
    also you will learn about various methods that Redshift provides for creating
    linear regression models.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们学习了关于分类模型的内容。在本章中，我们将学习构建**线性回归**模型，其中我们预测数值变量。与分类模型不同，线性回归模型用于预测**连续数值**。与上一章类似，你也将学习Redshift提供的创建线性回归模型的多种方法。
- en: This chapter will provide several detailed examples of business problems that
    can be solved with these modeling techniques. In this chapter, we will walk through
    how you can try different algorithms to get the best regression model.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将提供几个使用这些建模技术的商业问题的详细示例。在本章中，我们将介绍如何尝试不同的算法以获得最佳的回归模型。
- en: By the end of this chapter, you will be in a position to identify whether a
    business problem is a linear regression or not and then be able to identify the
    right method that Redshift provides to train and build the model.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 到本章结束时，你将能够确定一个商业问题是否是线性回归，然后能够识别Redshift提供的正确方法来训练和构建模型。
- en: 'In this chapter, we will go through the following main topics:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将探讨以下主要主题：
- en: Introducing regression algorithms
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 介绍回归算法
- en: Creating a simple regression model using the XGBoost algorithm
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用XGBoost算法创建简单的回归模型
- en: Creating multi-input regression models
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建多输入回归模型
- en: Technical requirements
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'This chapter requires a web browser and access to the following:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 本章需要网络浏览器和访问以下内容：
- en: AWS account
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AWS账户
- en: Amazon Redshift Serverless endpoint
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Amazon Redshift无服务器端点
- en: Amazon Redshift Query Editor v2
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Amazon Redshift查询编辑器v2
- en: 'You can find the code used in this chapter here:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在此处找到本章使用的代码：
- en: '[https://github.com/PacktPublishing/Serverless-Machine-Learning-with-Amazon-Redshift/blob/main/CodeFiles/chapter7/chapter7.sql](https://github.com/PacktPublishing/Serverless-Machine-Learning-with-Amazon-Redshift/blob/main/CodeFiles/chapter7/chapter7.sql)'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/PacktPublishing/Serverless-Machine-Learning-with-Amazon-Redshift/blob/main/CodeFiles/chapter7/chapter7.sql](https://github.com/PacktPublishing/Serverless-Machine-Learning-with-Amazon-Redshift/blob/main/CodeFiles/chapter7/chapter7.sql)'
- en: Introducing regression algorithms
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍回归算法
- en: Regression models are used where you are trying to predict a numeric outcome
    such as what price an item will sell for. The outcome variable is your target
    and your input variables are used to determine the relationship between the variables
    so that you can predict the unknown target on sets of data without the target
    variable.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 回归模型用于尝试预测数值结果，例如预测某件商品的售价。结果变量是你的目标，输入变量用于确定变量之间的关系，以便你可以在没有目标变量的数据集上预测未知的目标。
- en: You can have a single input variable, also known as **simple linear regression**.
    For example, years of experience and salary usually have a relationship.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以有一个单一输入变量，也称为**简单线性回归**。例如，工作经验和薪水通常存在关联。
- en: '**Multiple linear regression** is when you have multiple input variables. For
    example, predicting the selling price of homes in a particular zip code by using
    the relationship between the target (price) and various inputs such as square
    footage, number of bedrooms, pool, basement, lot size, and year built.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '**多元线性回归**是指你有多个输入变量。例如，通过使用目标（价格）与各种输入（如面积、卧室数量、游泳池、地下室、地块大小和建造年份）之间的关系来预测特定邮编区房屋的售价。'
- en: 'A good linear regression model has a small amount of vertical distance between
    the line and the data points. Refer to the following figure:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 一个好的线性回归模型在直线和数据点之间有很小的垂直距离。请参考以下图示：
- en: '![Figure 7.1 – Linear regression line](img/B19071_07_01.jpg)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![图7.1 – 线性回归线](img/B19071_07_01.jpg)'
- en: Figure 7.1 – Linear regression line
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.1 – 线性回归线
- en: 'Common use cases where regression models are useful are as follows:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些回归模型有用的常见用例：
- en: Price and revenue prediction
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 价格和收入预测
- en: Predicting customer lifetime value
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 预测客户终身价值
- en: Predicting the weather
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 预测天气
- en: Measuring the effectiveness of marketing campaigns
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测量营销活动的有效性
- en: This chapter will show you how to build regression models in Amazon Redshift
    ML using the XGBoost and Linear Learner algorithms, which you used in [*Chapter
    6*](B19071_06.xhtml#_idTextAnchor083). As you will see, you can use the same algorithms
    on different machine learning problems.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将向您展示如何使用XGBoost和线性学习器算法在Amazon Redshift ML中构建回归模型，这些算法您在[*第6章*](B19071_06.xhtml#_idTextAnchor083)中使用过。正如您将看到的，您可以在不同的机器学习问题上使用相同的算法。
- en: We have looked at the regression problem; now let’s look at the Redshift `CREATE
    MODEL` command to create a regression model.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经研究了回归问题；现在让我们看看Redshift的`CREATE MODEL`命令来创建回归模型。
- en: Redshift’s CREATE MODEL with user guidance
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 带有用户指导的Redshift的CREATE MODEL
- en: When using the `CREATE MODEL` command in Redshift, the system will automatically
    search for the best combination of preprocessing and model for your specific dataset.
    However, in some cases, you may want additional control over the model creation
    process or to incorporate domain-specific knowledge.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 当在Redshift中使用`CREATE MODEL`命令时，系统将自动搜索最适合您特定数据集的预处理和模型组合。然而，在某些情况下，您可能希望对模型创建过程有更多的控制，或者希望结合领域特定的知识。
- en: Redshift offers flexibility to guide the `CREATE MODEL` process so the time
    taken by the AutoML job is reduced.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: Redshift提供了灵活性，以指导`CREATE MODEL`过程，从而减少AutoML作业所需的时间。
- en: We are going to explore the model type and problem type parameters of the `CREATE
    MODEL` statement in this chapter. As part of `CREATE MODEL` with user guidance,
    you also have the option of setting a preprocessor, but we will leave that topic
    for [*Chapter 10*](B19071_10.xhtml#_idTextAnchor178).
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将探讨`CREATE MODEL`语句的模型类型和问题类型参数。作为带有用户指导的`CREATE MODEL`的一部分，您还可以选择设置预处理程序，但我们将把这个话题留到[*第10章*](B19071_10.xhtml#_idTextAnchor178)中。
- en: When you are guiding the AutoML job, as a machine learning model creator, you
    are going to decide what algorithm to use and what problem type to address. Redshift
    ML still performs the feature engineering of independent variables behind the
    scenes – for example, out of 20 features, Redshift ML will automatically identify
    the categorical variables and numeric variables and create a one-hot-encoded value
    or standardization of numerical variables where applicable, along with various
    other tasks required to complete the model training.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 当您指导AutoML作业时，作为机器学习模型创建者，您将决定使用哪种算法以及解决哪种问题类型。Redshift ML仍然在幕后执行独立变量的特征工程——例如，在20个特征中，Redshift
    ML将自动识别分类变量和数值变量，并在适用的情况下创建一个热编码值或数值变量的标准化，以及完成模型训练所需的各种其他任务。
- en: In summary, you are letting Redshift ML handle the bulk of data preparation
    tasks for machine learning. As a model creator, you have the option to specify
    the algorithm and problem type to be used in the `CREATE MODEL` statement, which
    has the benefit of reduced training time, since SageMaker does not need to spend
    time determining which algorithm or problem type to use.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 总结来说，您让Redshift ML处理机器学习的大部分数据准备任务。作为模型创建者，您有选择在`CREATE MODEL`语句中使用哪种算法和问题类型的选项，这有助于减少训练时间，因为SageMaker不需要花费时间确定使用哪种算法或问题类型。
- en: Now that we have learned what `CREATE MODEL` with user guidance is, let’s start
    creating a simple regression model.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经了解了带有用户指导的`CREATE MODEL`是什么，让我们开始创建一个简单的回归模型。
- en: Creating a simple linear regression model using XGBoost
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用XGBoost创建简单的线性回归模型
- en: To build our simple linear regression problem, we are going to take a look at
    a dataset that includes predicting weight based on height. This dataset has only
    one independent variable, which is height in inches, and is used to predict weight
    in pounds. Since there is only one independent variable, we call this the **simple
    linear** **regression** model.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 为了构建我们的简单线性回归问题，我们将查看一个包括根据身高预测体重的数据集。这个数据集只有一个自变量，即英寸中的身高，用于预测磅重的体重。由于只有一个自变量，我们称这个模型为**简单线性**
    **回归**模型。
- en: In this section, we will upload the data, analyze it, prepare it for training
    the model, and then lastly, we will create the model and run prediction queries
    using the function created by the model.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将上传数据，分析它，为训练模型做准备，最后，我们将创建模型并使用模型创建的函数运行预测查询。
- en: Uploading and analyzing the data
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 上传和分析数据
- en: We are going to work on a height and weight dataset in this section.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将处理身高和体重数据集。
- en: The dataset contains 25,000 synthetic records of human heights and weights of
    18-year-old participants. This data was generated based on a 1993 Growth Survey,
    which was conducted on 25,000 children from their birth to 18 years of age. The
    participants were recruited from **Maternal and Child Health Centers** (**MCHCs**)
    and schools, and the data collected was used to develop Hong Kong’s current growth
    charts for weight, height, weight-for-age, weight-for-height, and **body mass**
    **index** (**BMI**).
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 该数据集包含25,000名18岁参与者的合成身高和体重记录。这些数据基于1993年的成长调查，该调查对从出生到18岁的25,000名儿童进行了调查。参与者来自**母婴健康中心**（**MCHCs**）和学校，收集的数据被用于开发香港当前的体重、身高、体重/年龄、体重/身高和**体质指数**（**BMI**）的生长曲线。
- en: 'More details about this dataset can be found here: [http://wiki.stat.ucla.edu/socr/index.php/SOCR_Data_Dinov_020108_HeightsWeights](http://wiki.stat.ucla.edu/socr/index.php/SOCR_Data_Dinov_020108_HeightsWeights).'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 更多关于此数据集的详细信息可以在以下链接找到：[http://wiki.stat.ucla.edu/socr/index.php/SOCR_Data_Dinov_020108_HeightsWeights](http://wiki.stat.ucla.edu/socr/index.php/SOCR_Data_Dinov_020108_HeightsWeights)。
- en: Dataset citation
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 数据集引用
- en: 'Hung-Kwan So, Edmund AS Nelson, Albert M Li, Eric MC Wong, Joseph TF Lau, Georgia
    S Guldan, Kwok-Hang Mak, Youfa Wang, Tai-Fai Fok, and Rita YT Sung. (2008) *Secular
    changes in height, weight, and body mass index in Hong Kong Children*. BMC Public
    Health. 2008; 8: 320\. doi: 10.1186/1471-2458-8-320\. PMCID: PMC2572616'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 'Hung-Kwan So, Edmund AS Nelson, Albert M Li, Eric MC Wong, Joseph TF Lau, Georgia
    S Guldan, Kwok-Hang Mak, Youfa Wang, Tai-Fai Fok, 和 Rita YT Sung. (2008) *香港儿童身高、体重和体质指数的长期变化*。BMC
    Public Health. 2008; 8: 320\. doi: 10.1186/1471-2458-8-320\. PMCID: PMC2572616'
- en: 'Leung SS, Lau JT, Tse LY, Oppenheimer SJ. *Weight-for-age and weight-for-height
    references for Hong Kong children from birth to 18 years*. J Paediatr Child Health.
    1996;32:103–109\. doi: 10.1111/j.1440-1754.1996.tb00904.x.'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 'Leung SS, Lau JT, Tse LY, Oppenheimer SJ。*香港儿童从出生到18岁的体重和身高参考值*。J Paediatr
    Child Health. 1996;32:103–109\. doi: 10.1111/j.1440-1754.1996.tb00904.x.'
- en: 'Leung SS, Lau JT, Xu YY, Tse LY, Huen KF, Wong GW, Law WY, Yeung VT, Yeung
    WK, et al. *Secular changes in standing height, sitting height and sexual maturation
    of Chinese–the Hong Kong Growth Study, 1993*. Ann Hum Biol. 1996;23:297–306\.
    doi: 10.1080/03014469600004532.'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 'Leung SS, Lau JT, Xu YY, Tse LY, Huen KF, Wong GW, Law WY, Yeung VT, Yeung
    WK, 等人。*中国香港人站立身高、坐高和性成熟的长期变化——香港成长研究，1993*。Ann Hum Biol. 1996;23:297–306\. doi:
    10.1080/03014469600004532.'
- en: In the following subsections, we will discuss the prediction goals we are trying
    to achieve using this dataset and then analyze the data.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下小节中，我们将讨论我们试图使用此数据集实现的预测目标，然后分析数据。
- en: Prediction goal
  id: totrans-49
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 预测目标
- en: The goal is to predict the weight of children as a numeric value based on supplied
    height as a numeric value.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 目标是根据提供的身高作为数值预测儿童的体重。
- en: 'The dataset has the following columns:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 该数据集包含以下列：
- en: '| **Column** | **Description** |'
  id: totrans-52
  prefs: []
  type: TYPE_TB
  zh: '| **列** | **描述** |'
- en: '| Index | Sequential number |'
  id: totrans-53
  prefs: []
  type: TYPE_TB
  zh: '| 索引 | 顺序号 |'
- en: '| Height in Inches | Height of a child as a numerical value |'
  id: totrans-54
  prefs: []
  type: TYPE_TB
  zh: '| 英寸高的身高 | 儿童的身高数值 |'
- en: '| Weight in Pounds | Weight of a child as a numerical value |'
  id: totrans-55
  prefs: []
  type: TYPE_TB
  zh: '| 磅重的体重 | 儿童的体重数值 |'
- en: Table 7.1 – Data definition
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 表7.1 – 数据定义
- en: Analyzing the data
  id: totrans-57
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 数据分析
- en: 'After successfully connecting to Redshift as an admin or database developer,
    create the schema and load data into Amazon Redshift as follows:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在成功连接到Redshift作为管理员或数据库开发者后，按照以下步骤创建模式和加载数据到Amazon Redshift：
- en: Navigate to **Redshift query editor v2** and connect to the **Serverless** endpoint
    and then the **dev** database.
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到**Redshift查询编辑器v2**并连接到**无服务器**端点，然后连接到**dev**数据库。
- en: Name the untitled query editor by saving it as `Chapter7`.
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将未命名的查询编辑器保存为`Chapter7`来命名。
- en: 'The following screenshot shows a serverless connection, the database set to
    `Chapter7`:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了无服务器连接，数据库设置为`Chapter7`：
- en: '![Figure 7.2 – Connecting to the Serverless endpoint](img/B19071_07_02.jpg)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![图7.2 – 连接到无服务器端点](img/B19071_07_02.jpg)'
- en: Figure 7.2 – Connecting to the Serverless endpoint
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.2 – 连接到无服务器端点
- en: 'Create the schema as follows:'
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照以下步骤创建模式：
- en: '[PRE0]'
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Create a table using the following code:'
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码创建一个表：
- en: '[PRE1]'
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[PRE2]'
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[PRE3]'
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[PRE4]'
  id: totrans-70
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '[PRE5]'
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '[PRE6]'
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '[PRE7]'
  id: totrans-73
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '[PRE8]'
  id: totrans-74
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '[PRE9]'
  id: totrans-75
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Load the sample data by using the following command:'
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令加载数据：
- en: '[PRE10]'
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '[PRE11]'
  id: totrans-78
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '[PRE12]'
  id: totrans-79
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '[PRE13]'
  id: totrans-80
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '[PRE14]'
  id: totrans-81
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '[PRE15]'
  id: totrans-82
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '[PRE16]'
  id: totrans-83
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Analyze the height and weight dataset table by creating a histogram chart.
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过创建直方图来分析身高和体重数据集表。
- en: 'Use the Query Editor v2 **Chart** feature to create a graph. First, run the
    following command and then click on the **Chart** option found on the right-hand
    side in the **Results** pane:'
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用Query Editor v2的**图表**功能创建一个图表。首先，运行以下命令，然后点击**结果**窗格右侧的**图表**选项：
- en: '[PRE17]'
  id: totrans-86
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '[PRE18]'
  id: totrans-87
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '[PRE19]'
  id: totrans-88
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: To generate the following chart, you need to add two traces to your chart. By
    default, the chart is loaded with one trace, so you need to add one additional
    trace. You can add it by clicking on the **+** **Trace** button.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 要生成以下图表，您需要向图表中添加两个轨迹。默认情况下，图表已加载一个轨迹，因此您需要添加一个额外的轨迹。您可以通过点击**+** **轨迹**按钮来添加它。
- en: 'The following chart shows both variables. For *trace 1*, select **heightinches**
    on the *y* axis, leaving the *x* axis empty. For *trace 2*, select **weightpounds**
    on the *y* axis, leaving the *x* axis empty. The resulting chart should look like
    this:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图表显示了两个变量。对于*轨迹1*，在*y*轴上选择**heightinches**，将*x*轴留空。对于*轨迹2*，在*y*轴上选择**weightpounds**，将*x*轴留空。生成的图表应该看起来像这样：
- en: '![Figure 7.3 – Weights and heights](img/B19071_07_03.jpg)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![图7.3 – 权重和身高](img/B19071_07_03.jpg)'
- en: Figure 7.3 – Weights and heights
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.3 – 权重和身高
- en: As you can see, there is a slight upward trend in weights along with heights.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，随着身高的增加，权重呈现轻微的上升趋势。
- en: Now that we have analyzed our dataset, we will split it into training and validation
    sets. The training set will be used to train our model and the validation set
    will be used to evaluate the model’s accuracy.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经分析了我们的数据集，我们将将其分割成训练集和验证集。训练集将用于训练我们的模型，验证集将用于评估模型的准确性。
- en: Splitting data into training and validation sets
  id: totrans-95
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将数据分割成训练集和验证集
- en: 'Since we have only one dataset, let’s write a query that splits data into two
    logical sets: training and validation.'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们只有一个数据集，让我们编写一个查询，将数据分割成两个逻辑集：训练集和验证集。
- en: 'To train the model, let’s use the syntax *where id%8 is not equal* *to 0*:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 为了训练模型，让我们使用以下语法*where id%8 不等于 0*：
- en: '[PRE20]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'To validate the model, let’s use *where id%8 is equal* *to 0*:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 为了验证模型，让我们使用*where id%8 等于 0*：
- en: '[PRE21]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: We have analyzed and prepared our input data, now let’s create a machine learning
    model.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经分析和准备了我们的输入数据，现在让我们创建一个机器学习模型。
- en: Creating a simple linear regression model
  id: totrans-102
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建一个简单的线性回归模型
- en: In this section, you will use `CREATE MODEL` with user guidance to create a
    simple linear regression model using the XGBoost algorithm. We will address the
    weight prediction problem by training a machine learning model. The goal of this
    model is to predict a weight based on a given height.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，您将使用带有用户指导的`CREATE MODEL`来创建一个简单的线性回归模型，使用XGBoost算法。我们将通过训练机器学习模型来解决重量预测问题。该模型的目标是根据给定的高度预测重量。
- en: 'We set `MODEL_TYPE` as `xgboost` and `PROBLEM_TYPE` as `regression`. We leave
    other options as default:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将`MODEL_TYPE`设置为`xgboost`，将`PROBLEM_TYPE`设置为`regression`。我们将其他选项保留为默认值：
- en: '[PRE22]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Let’s take a look at the options we provided in the `CREATE MODEL` statement
    and discuss how they affect the actions taken by Amazon SageMaker
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看我们在`CREATE MODEL`语句中提供的选项，并讨论它们如何影响Amazon SageMaker采取的行动。
- en: In the `CREATE MODEL` statement, we are guiding Redshift ML to use XGBoost as
    an algorithm by setting `MODEL_TYPE`. The Amazon SageMaker Autopilot job will
    not train the model using other supported algorithms – for example, **Linear Learner**
    or **multilayer perceptron** (**MLP**). When this option is left as default, Amazon
    SageMaker will train the model using all the algorithms supported by Autopilot.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 在`CREATE MODEL`语句中，我们通过设置`MODEL_TYPE`来指导Redshift ML使用XGBoost算法。Amazon SageMaker
    Autopilot作业不会使用其他支持的算法来训练模型 – 例如，**线性学习器**或**多层感知器**（**MLP**）。当此选项保留为默认值时，Amazon
    SageMaker将使用Autopilot支持的所有算法来训练模型。
- en: Next, when we set `PROBLEM_TYPE` to `regression`, we are guiding Redshift ML
    to search for a model to solve a regression problem type.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，当我们把`PROBLEM_TYPE`设置为`regression`时，我们正在指导Redshift ML寻找一个模型来解决回归问题类型。
- en: We set `OBJECTIVE` to `mse` (**mean squared error**), which is commonly used
    to evaluate the performance of a regression model. It is a measure of the average
    of the squared differences between the predicted values and the actual values.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将`OBJECTIVE`设置为`mse`（**均方误差**），这是评估回归模型性能的常用方法。它是预测值与实际值之间平方差的平均值。
- en: With these three guiding options, we are creating boundaries for Amazon SageMaker
    Autopilot. The end result would be less training time bundled with other benefits
    of the Autopilot algorithm – for example, adjusting hyperparameters and data preprocessing
    steps, which are all auto-handled by Amazon SageMaker Autopilot.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这三个指导选项，我们正在为Amazon SageMaker Autopilot创建边界。最终结果将是更少的训练时间，并附带Autopilot算法的其他好处——例如，调整超参数和数据预处理步骤，这些都是由Amazon
    SageMaker Autopilot自动处理的。
- en: 'To check the status of the model, run the following command:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 要检查模型的状态，请运行以下命令：
- en: '[PRE23]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'The following screenshot shows the output of the `SHOW` `MODEL` command:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 以下屏幕截图显示了`SHOW MODEL`命令的输出：
- en: '![Figure 7.4 – SHOW MODEL output](img/B19071_07_04.jpg)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
  zh: '![图7.4 – 显示模型输出](img/B19071_07_04.jpg)'
- en: Figure 7.4 – SHOW MODEL output
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.4 – 显示模型输出
- en: The model is still under training, but you will notice that Redshift ML is picking
    up `CREATE` `MODEL` statement.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 模型仍在训练中，但您会注意到Redshift ML正在获取`CREATE MODEL`语句。
- en: The `predict_weight`, is used to generate predictions and is used in the `SELECT`
    statement, which we will cover in the next section.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '`predict_weight`用于生成预测，并在`SELECT`语句中使用，我们将在下一节中介绍。'
- en: 'Run the `SHOW MODEL` command again after some time to check whether the model
    training is complete or not. From the following screenshot, you can see that model
    training has finished and MSE has been selected as the objective for model evaluation.
    This is auto-selected by the Redshift ML and is the correct evaluation method
    for linear regression models:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 在一段时间后再次运行`SHOW MODEL`命令，以检查模型训练是否完成。从下面的屏幕截图可以看出，模型训练已完成，MSE已被选为模型评估的目标。这是由Redshift
    ML自动选择的，是线性回归模型的正确评估方法：
- en: '![Figure 7.5 – SHOW MODEL output – model ready state](img/B19071_07_05.jpg)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
  zh: '![图7.5 – 显示模型输出 – 模型就绪状态](img/B19071_07_05.jpg)'
- en: Figure 7.5 – SHOW MODEL output – model ready state
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.5 – 显示模型输出 – 模型就绪状态
- en: We have trained and created the model; in the next step, we will generate the
    predictions.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经训练并创建了模型；在下一步，我们将生成预测。
- en: Running predictions
  id: totrans-122
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 运行预测
- en: Since our model has been successfully trained, let’s run some predictions against
    unseen datasets.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们的模型已经成功训练，让我们对未见过的数据集进行一些预测。
- en: 'Run the following query to find records where the model is exactly predicting
    weight in pounds for a given height in inches where `id%8=0`. By using `WHERE
    id%8=0`, we are looking at ~20% of our dataset. These are records that were not
    included in model training. If you recall, in the `CREATE MODEL` statement, we
    specified `WHERE` `id%8 !=0`:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 运行以下查询以找到模型精确预测英寸身高对应的磅体重记录，其中`id%8=0`。通过使用`WHERE id%8=0`，我们正在查看约20%的数据集。这些是未包含在模型训练中的记录。如果您还记得，在`CREATE
    MODEL`语句中，我们指定了`WHERE id%8 !=0`：
- en: '[PRE24]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Here is the output for it:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是输出结果：
- en: '![Figure 7.6 – Showing predicted weight results](img/B19071_07_06.jpg)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![图7.6 – 显示预测体重结果](img/B19071_07_06.jpg)'
- en: Figure 7.6 – Showing predicted weight results
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.6 – 显示预测体重结果
- en: 'Now, let’s check the MSE and **root mean square** **error** (**RMSE**):'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们检查MSE和**均方根** **误差**（**RMSE**）：
- en: '[PRE25]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Here is the output:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是输出结果：
- en: '![Figure 7.7 – MSE and RMSE values](img/B19071_07_07.jpg)'
  id: totrans-132
  prefs: []
  type: TYPE_IMG
  zh: '![图7.7 – MSE和RMSE值](img/B19071_07_07.jpg)'
- en: Figure 7.7 – MSE and RMSE values
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.7 – MSE和RMSE值
- en: Our MSE value is high; it represents data that may have outliers or for which
    we do not have enough variables. For example, adding age and gender may improve
    the prediction score.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的多项式误差平方和（MSE）值较高；它代表可能存在异常值或我们没有足够变量的数据。例如，添加年龄和性别可能会提高预测分数。
- en: 'Let’s compare predicted scores and original scores in a line chart:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们在折线图中比较预测分数和原始分数：
- en: '[PRE26]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Once a response is returned, click on the **Chart** option found on the right-hand
    side in the Query Editor, add a trace for the line, and select **Predicted_Weightpounds**.
    Add another trace for the line chart and select **Original_Weightpounds**, then
    add a third trace, but this time, select **Bar graph** and add a **Difference**
    column.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦返回响应，请点击查询编辑器右侧的**图表**选项，为折线图添加一个轨迹，并选择**预测_体重_磅**。为折线图添加另一个轨迹并选择**原始_体重_磅**，然后添加第三个轨迹，但这次选择**条形图**并添加**差异**列。
- en: 'In the following chart, you will notice that the predicted scores are following
    the original scores. The difference is shown at the bottom of the graph, which
    gives information about the variance or error:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的图表中，您将注意到预测分数正在遵循原始分数。差异显示在图表底部，它提供了关于方差或误差的信息：
- en: '![Figure 7.8 – Predicted versus original weights](img/B19071_07_08.jpg)'
  id: totrans-139
  prefs: []
  type: TYPE_IMG
  zh: '![图7.8 – 预测值与原始权重对比](img/B19071_07_08.jpg)'
- en: Figure 7.8 – Predicted versus original weights
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.8 – 预测值与原始权重对比
- en: We have learned about how a simple regression model is created using Redshift
    ML. Now let’s learn about the multi-input regression model.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经学习了如何使用 Redshift ML 创建简单的回归模型。现在让我们来了解多输入回归模型。
- en: Creating multi-input regression models
  id: totrans-142
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建多输入回归模型
- en: In this exercise, you will learn how to build a regression model using multiple
    input variables in Amazon Redshift ML.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个练习中，你将学习如何在Amazon Redshift ML中使用多个输入变量构建回归模型。
- en: In this use case, we will use a dataset containing the sales history of online
    sporting events. A sporting event management company wants to review the data
    for the latest football and baseball seasons to figure out which games underperformed
    for revenue, and what the revenue projections look like for the season.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
- en: Your task is to build and train a model to predict revenue for upcoming events
    in order to proactively take action to increase ticket sales to ensure revenue
    numbers meet the company’s targets.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 您的任务是构建和训练一个模型，以预测即将举行的活动收入，以便主动采取措施增加门票销售，确保收入数字达到公司的目标。
- en: After successfully connecting to Redshift as an admin or database developer,
    load data into Amazon Redshift.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 在成功连接到 Redshift 作为管理员或数据库开发者后，将数据加载到 Amazon Redshift。
- en: Navigate to **Redshift query editor v2** and connect to the **Serverless** endpoint
    and the **dev** database.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 导航到**Redshift查询编辑器v2**并连接到**无服务器**端点和**dev**数据库。
- en: Use the same schema and **query editor** page you created for the previous exercise.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 使用您为上一个练习创建的相同架构和**查询编辑器**页面。
- en: 'Create your input table and load the data using the following SQL commands:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下 SQL 命令创建您的输入表并加载数据：
- en: '[PRE27]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Let’s analyze our dataset and get a historical trend of ticket sales over the
    last few months:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们分析我们的数据集，并获取过去几个月的票务销售历史趋势：
- en: '[PRE28]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'The output is as follows:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![Figure 7.9 – Ticket revenue by month](img/B19071_07_09.jpg)'
  id: totrans-154
  prefs: []
  type: TYPE_IMG
  zh: '![图7.9 – 按月计算的票务收入](img/B19071_07_09.jpg)'
- en: Figure 7.9 – Ticket revenue by month
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.9 – 按月计算的票务收入
- en: We can see that sales are spiky and fall off dramatically in months **7** and
    **8**. Let’s create a model so we can predict teams that will have lower ticket
    revenue. Before creating our model, we need to split the dataset into training,
    validation, and testing datasets, respectively.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到，在**7**月和**8**月，销售额呈现出峰值并急剧下降。让我们创建一个模型，以便我们可以预测那些将会有较低门票收入的团队。在创建我们的模型之前，我们需要将数据集分别划分为训练集、验证集和测试集。
- en: 'Execute the following code in Query Editor v2 to create the `training` table:'
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在查询编辑器 v2 中执行以下代码以创建 `training` 表：
- en: '[PRE29]'
  id: totrans-158
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: '[PRE30]'
  id: totrans-159
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: '[PRE31]'
  id: totrans-160
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: '[PRE32]'
  id: totrans-161
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: '[PRE33]'
  id: totrans-162
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: '[PRE34]'
  id: totrans-163
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE34]'
- en: '[PRE35]'
  id: totrans-164
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE35]'
- en: '[PRE36]'
  id: totrans-165
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE36]'
- en: '[PRE37]'
  id: totrans-166
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE37]'
- en: '[PRE38]'
  id: totrans-167
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE38]'
- en: '[PRE39]'
  id: totrans-168
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE39]'
- en: '[PRE40]'
  id: totrans-169
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE40]'
- en: '[PRE41]'
  id: totrans-170
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE41]'
- en: '[PRE42]'
  id: totrans-171
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE42]'
- en: '[PRE43]'
  id: totrans-172
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE43]'
- en: '[PRE44]'
  id: totrans-173
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE44]'
- en: '[PRE45]'
  id: totrans-174
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE45]'
- en: '[PRE46]'
  id: totrans-175
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'The next step is to insert ~70% of the data into the `training` table:'
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下一步是将 ~70% 的数据插入到 `训练` 表中：
- en: '[PRE47]'
  id: totrans-177
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE47]'
- en: '[PRE48]'
  id: totrans-178
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE48]'
- en: '[PRE49]'
  id: totrans-179
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE49]'
- en: '[PRE50]'
  id: totrans-180
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE50]'
- en: '[PRE51]'
  id: totrans-181
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE51]'
- en: '[PRE52]'
  id: totrans-182
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE52]'
- en: '[PRE53]'
  id: totrans-183
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE53]'
- en: '[PRE54]'
  id: totrans-184
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE54]'
- en: '[PRE55]'
  id: totrans-185
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE55]'
- en: 'Next, you will create the `validation` table:'
  id: totrans-186
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，你将创建`验证`表：
- en: '[PRE56]'
  id: totrans-187
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE56]'
- en: '[PRE57]'
  id: totrans-188
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE57]'
- en: '[PRE58]'
  id: totrans-189
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE58]'
- en: '[PRE59]'
  id: totrans-190
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE59]'
- en: '[PRE60]'
  id: totrans-191
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE60]'
- en: '[PRE61]'
  id: totrans-192
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE61]'
- en: '[PRE62]'
  id: totrans-193
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE62]'
- en: '[PRE63]'
  id: totrans-194
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE63]'
- en: '[PRE64]'
  id: totrans-195
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE64]'
- en: '[PRE65]'
  id: totrans-196
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE65]'
- en: '[PRE66]'
  id: totrans-197
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE66]'
- en: '[PRE67]'
  id: totrans-198
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE67]'
- en: '[PRE68]'
  id: totrans-199
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE68]'
- en: '[PRE69]'
  id: totrans-200
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE69]'
- en: '[PRE70]'
  id: totrans-201
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE70]'
- en: '[PRE71]'
  id: totrans-202
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE71]'
- en: '[PRE72]'
  id: totrans-203
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE72]'
- en: '[PRE73]'
  id: totrans-204
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE73]'
- en: 'Next, insert ~10% of the data into the `validation` table:'
  id: totrans-205
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，将 ~10% 的数据插入到 `验证` 表中：
- en: '[PRE74]'
  id: totrans-206
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE74]'
- en: '[PRE75]'
  id: totrans-207
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE75]'
- en: '[PRE76]'
  id: totrans-208
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE76]'
- en: '[PRE77]'
  id: totrans-209
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE77]'
- en: '[PRE78]'
  id: totrans-210
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE78]'
- en: '[PRE79]'
  id: totrans-211
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE79]'
- en: '[PRE80]'
  id: totrans-212
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE80]'
- en: '[PRE81]'
  id: totrans-213
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE81]'
- en: 'Finally, create the `testing` table:'
  id: totrans-214
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，创建`测试`表：
- en: '[PRE82]'
  id: totrans-215
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE82]'
- en: '[PRE83]'
  id: totrans-216
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE83]'
- en: '[PRE84]'
  id: totrans-217
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE84]'
- en: '[PRE85]'
  id: totrans-218
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE85]'
- en: '[PRE86]'
  id: totrans-219
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE86]'
- en: '[PRE87]'
  id: totrans-220
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE87]'
- en: '[PRE88]'
  id: totrans-221
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE88]'
- en: '[PRE89]'
  id: totrans-222
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE89]'
- en: '[PRE90]'
  id: totrans-223
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE90]'
- en: '[PRE91]'
  id: totrans-224
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE91]'
- en: '[PRE92]'
  id: totrans-225
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE92]'
- en: '[PRE93]'
  id: totrans-226
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE93]'
- en: '[PRE94]'
  id: totrans-227
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE94]'
- en: '[PRE95]'
  id: totrans-228
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE95]'
- en: '[PRE96]'
  id: totrans-229
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE96]'
- en: '[PRE97]'
  id: totrans-230
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE97]'
- en: '[PRE98]'
  id: totrans-231
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE98]'
- en: '[PRE99]'
  id: totrans-232
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE99]'
- en: 'Next, insert ~20% of the data into the `testing` table:'
  id: totrans-233
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，将 ~20% 的数据插入到 `testing` 表中：
- en: '[PRE100]'
  id: totrans-234
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE100]'
- en: '[PRE101]'
  id: totrans-235
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE101]'
- en: '[PRE102]'
  id: totrans-236
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE102]'
- en: '[PRE103]'
  id: totrans-237
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE103]'
- en: '[PRE104]'
  id: totrans-238
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE104]'
- en: '[PRE105]'
  id: totrans-239
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE105]'
- en: '[PRE106]'
  id: totrans-240
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE106]'
- en: '[PRE107]'
  id: totrans-241
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE107]'
- en: '[PRE108]'
  id: totrans-242
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE108]'
- en: We have prepared the dataset to train and test the ML model; now let’s create
    a regression model using the Linear Learner algorithm.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经准备好了用于训练和测试机器学习模型的数据库；现在让我们使用线性学习器算法创建一个回归模型。
- en: Linear Learner algorithm
  id: totrans-244
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 线性学习算法
- en: As we saw in [*Chapter 6*](B19071_06.xhtml#_idTextAnchor083), you can use the
    Linear Learner model type to solve classification or regression problems. This
    is a supervised learning algorithm. For regression problems, we are trying to
    predict a numerical outcome and, in this exercise, we will be using multiple inputs;
    SageMaker will choose the best modes based on continuous objectives using MSE.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们在[*第六章*](B19071_06.xhtml#_idTextAnchor083)中看到的，您可以使用线性学习器模型类型来解决分类或回归问题。这是一个监督学习算法。对于回归问题，我们试图预测一个数值结果，在这个练习中，我们将使用多个输入；SageMaker将根据连续目标使用均方误差（MSE）来选择最佳模式。
- en: We provide a training set with data that contains our inputs or observations
    about the data and the label, which represents the value we want to predict. Our
    goal is to accurately predict future ticket sales.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 我们提供了一个包含我们的输入或关于数据的观察以及标签的训练集，标签代表我们想要预测的值。我们的目标是准确预测未来的票务销售。
- en: We set `MODEL_TYPE` as `LINEAR_LEARNER`, `PROBLEM_TYPE` as `regression`, and
    `OBJECTIVE` as `mse`. We leave out other options as default.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将 `MODEL_TYPE` 设置为 `LINEAR_LEARNER`，`PROBLEM_TYPE` 设置为 `regression`，`OBJECTIVE`
    设置为 `mse`。我们保留其他选项为默认值。
- en: Execute this code in Query Editor v2 to train the model. Be sure to replace
    the following S3 bucket using the bucket you created previously. You will need
    to input the S3 bucket you created previously to store the Redshift ML artifacts.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 在查询编辑器 v2 中执行此代码以训练模型。请确保使用你之前创建的存储桶替换以下 S3 桶。你需要输入你之前创建的 S3 桶来存储 Redshift ML
    工件。
- en: 'Run the following command to train the regression model:'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 运行以下命令来训练回归模型：
- en: '[PRE109]'
  id: totrans-250
  prefs: []
  type: TYPE_PRE
  zh: '[PRE109]'
- en: 'Once the model state is **READY**, you are ready to proceed. To check the status
    of the model, run the following command:'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦模型状态为 **READY**，你就可以继续了。要检查模型状态，请运行以下命令：
- en: '[PRE110]'
  id: totrans-252
  prefs: []
  type: TYPE_PRE
  zh: '[PRE110]'
- en: 'Note the MSE score you see; it will be similar to the output in *Figure 7**.10*:'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 注意你看到的 MSE 分数；它将与 *图 7.10* 中的输出相似：
- en: '![Figure 7.10 – SHOW MODEL output](img/B19071_07_10.jpg)'
  id: totrans-254
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.10 – SHOW MODEL 输出](img/B19071_07_10.jpg)'
- en: Figure 7.10 – SHOW MODEL output
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.10 – SHOW MODEL 输出
- en: We have now created the ML model; let’s validate its performance.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在已经创建了机器学习模型；让我们验证其性能。
- en: Understanding model evaluation
  id: totrans-257
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 理解模型评估
- en: You measure the model performance of regression problems through the MSE and/or
    RMSE. This is the distance between the predicted numeric target and the actual
    numeric answer, also known as `SHOW MODEL` output, we see the MSE. We can also
    calculate this ourselves by squaring the differences between the actual and predicted
    values and then finding the average. Then, take the square root of MSE to get
    the RMSE. The lower the MSE and RMSE scores, the better.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 你通过 MSE 和/或 RMSE 来衡量回归问题的模型性能。这是预测数值目标和实际数值答案之间的距离，也称为 `SHOW MODEL` 输出，我们看到
    MSE。我们也可以通过平方实际值和预测值之间的差异然后取平均值来自己计算这个值。然后，取 MSE 的平方根得到 RMSE。MSE 和 RMSE 分数越低，表示越好。
- en: 'As we see from the `SHOW MODEL` output, our MSE score is over 681 – let’s check
    this and the RMSE score against our validation by running the following SQL command:'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们从 `SHOW MODEL` 输出中看到，我们的 MSE 分数超过 681 - 让我们通过运行以下 SQL 命令来检查这个和 RMSE 分数与我们的验证：
- en: '[PRE111]'
  id: totrans-260
  prefs: []
  type: TYPE_PRE
  zh: '[PRE111]'
- en: 'This is the output of the query:'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 这是查询的输出：
- en: '![Figure 7.11 – MSE and RMSE values](img/B19071_07_11.jpg)'
  id: totrans-262
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.11 – MSE 和 RMSE 值](img/B19071_07_11.jpg)'
- en: Figure 7.11 – MSE and RMSE values
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.11 – MSE 和 RMSE 值
- en: 'While the MSE scores seem a little high, we can also run a validation query
    to check our accuracy rates. You will notice in the following query that it uses
    the function that was generated by our `CREATE MODEL` command to get the predicted
    price revenue for us to compare to the actual price revenue:'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然MSE分数似乎有点高，我们也可以运行一个验证查询来检查我们的准确率。你会在下面的查询中注意到它使用了由我们的 `CREATE MODEL` 命令生成的函数来获取预测价格收入，以便与我们比较实际价格收入：
- en: '[PRE112]'
  id: totrans-265
  prefs: []
  type: TYPE_PRE
  zh: '[PRE112]'
- en: 'This is the output of the query:'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 这是查询的输出：
- en: '![Figure 7.12 – Predicted price versus actual price](img/B19071_07_12.jpg)'
  id: totrans-267
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.12 – 预测价格与实际价格](img/B19071_07_12.jpg)'
- en: Figure 7.12 – Predicted price versus actual price
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.12 – 预测价格与实际价格
- en: Looking at the results, the model is not performing as well as we would like.
    You can run the validation query against the training data and see that the model
    is not performing very well on the training data either – this is called **underfitting**.
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 观察结果，模型的表现不如我们期望。你可以运行验证查询来查看训练数据，你会发现模型在训练数据上的表现也不太好——这被称为**欠拟合**。
- en: One solution would be to add more features, but we have already used all the
    available features.
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 一个解决方案是添加更多特征，但我们已经使用了所有可用的特征。
- en: 'Let’s try running the model again, but this time, we will use the `auto` option
    and let SageMaker pick the algorithm:'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们再次运行模型，但这次我们将使用 `auto` 选项，让 SageMaker 选择算法：
- en: '[PRE113]'
  id: totrans-272
  prefs: []
  type: TYPE_PRE
  zh: '[PRE113]'
- en: 'After letting the model train for some time, check the status of the model
    as follows:'
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 在让模型训练一段时间后，按照以下方式检查模型的状态：
- en: '[PRE114]'
  id: totrans-274
  prefs: []
  type: TYPE_PRE
  zh: '[PRE114]'
- en: 'This is how it appears:'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 这是它的样子：
- en: '![Figure 7.13 – SHOW MODEL output](img/B19071_07_13.jpg)'
  id: totrans-276
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.13 – SHOW MODEL 输出](img/B19071_07_13.jpg)'
- en: Figure 7.13 – SHOW MODEL output
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.13 – SHOW MODEL 输出
- en: 'From the preceding figure, we see that two things stand out:'
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 从前面的图中，我们看到两个突出的事情：
- en: The MSE score is much better
  id: totrans-279
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MSE 分数要好得多
- en: Amazon SageMaker chose to use the XGBoost algorithm
  id: totrans-280
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Amazon SageMaker 选择使用 XGBoost 算法
- en: 'We can check the MSE and RMSE scores for our new model using our validation
    dataset as follows:'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用验证数据集来检查我们新模型的 MSE 和 RMSE 分数，如下所示：
- en: '[PRE115]'
  id: totrans-282
  prefs: []
  type: TYPE_PRE
  zh: '[PRE115]'
- en: 'This is the output:'
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 这是输出：
- en: '![Figure 7.14 – MSE and RMSE scores](img/B19071_07_14.jpg)'
  id: totrans-284
  prefs: []
  type: TYPE_IMG
  zh: '![图7.14 – MSE和RMSE分数](img/B19071_07_14.jpg)'
- en: Figure 7.14 – MSE and RMSE scores
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.14 – MSE和RMSE分数
- en: These MSE and RMSE values show that we have a good model.
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 这些MSE和RMSE值表明我们有一个很好的模型。
- en: 'Let’s run a validation query using the `predict_ticket_price_auto` function
    from the new model:'
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用新模型的`predict_ticket_price_auto`函数运行一个验证查询：
- en: '[PRE116]'
  id: totrans-288
  prefs: []
  type: TYPE_PRE
  zh: '[PRE116]'
- en: 'The following is the output for this query:'
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是该查询的输出：
- en: '![Figure 7.15 – Predicted price versus actual price](img/B19071_07_15.jpg)'
  id: totrans-290
  prefs: []
  type: TYPE_IMG
  zh: '![图7.15 – 预测价格与实际价格对比](img/B19071_07_15.jpg)'
- en: Figure 7.15 – Predicted price versus actual price
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.15 – 预测价格与实际价格对比
- en: You can see we have much better results when comparing the differences between
    the actual and predicted ticket price revenue. We will use this model to do our
    prediction queries.
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以看到，当我们比较实际票价收入与预测票价收入之间的差异时，我们得到了更好的结果。我们将使用这个模型来进行我们的预测查询。
- en: 'Run the following query to see which inputs contributed most to the model prediction:'
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 运行以下查询以查看哪些输入对模型预测贡献最大：
- en: '[PRE117]'
  id: totrans-294
  prefs: []
  type: TYPE_PRE
  zh: '[PRE117]'
- en: 'To make the result set easier to read, right-click on the result set and choose
    **Copy rows**. You can then paste that into the editor as shown in *Figure 7**.16*:'
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使结果集更容易阅读，右键单击结果集并选择**复制行**。然后您可以将它粘贴到如图*图7.16*所示的编辑器中：
- en: '![Figure 7.16 – Model explainability report](img/B19071_07_16.jpg)'
  id: totrans-296
  prefs: []
  type: TYPE_IMG
  zh: '![图7.16 – 模型可解释性报告](img/B19071_07_16.jpg)'
- en: Figure 7.16 – Model explainability report
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.16 – 模型可解释性报告
- en: This shows that `list_ticket_price` contributed the most weight and `sport`
    contributed the least weight.
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 这表明`list_ticket_price`贡献了最大的权重，而`sport`贡献了最小的权重。
- en: We have validated the model with a validation dataset, checked the MSE values,
    and determined feature importance. Now let’s run the prediction query against
    test data.
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经使用验证数据集验证了模型，检查了MSE值，并确定了特征重要性。现在让我们在测试数据上运行预测查询。
- en: Prediction query
  id: totrans-300
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 预测查询
- en: 'Now that we have our model and have done validation, we can run our prediction
    query against our test dataset to determine which teams and events will need a
    proactive approach to increase ticket sales. Let’s check for teams with a predicted
    revenue of less than 200K:'
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有了模型并完成了验证，我们可以运行我们的预测查询以测试数据集，以确定哪些团队和活动需要采取主动措施来增加票务销售。让我们检查预测收入低于20万的团队：
- en: '[PRE118]'
  id: totrans-302
  prefs: []
  type: TYPE_PRE
  zh: '[PRE118]'
- en: 'This is the result:'
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 这是结果：
- en: '![Figure 7.17 – Predicted price against the test dataset](img/B19071_07_17.jpg)'
  id: totrans-304
  prefs: []
  type: TYPE_IMG
  zh: '![图7.17 – 预测价格与测试数据集对比](img/B19071_07_17.jpg)'
- en: Figure 7.17 – Predicted price against the test dataset
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.17 – 预测价格与测试数据集对比
- en: There are 16 teams that are predicted to have reduced ticket revenue. You can
    share this information with your marketing teams to create a focused strategy
    to ensure ticket revenues can remain on track.
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 有16个团队预测将减少票务收入。您可以与您的营销团队分享此信息，以创建一个专注的战略，确保票务收入可以保持稳定。
- en: Summary
  id: totrans-307
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we discussed regression models in detail and saw how to create
    single-input and multi-input regression models. We learned how easy it is to predict
    a numeric value. We also learned how to validate regression models, take actions
    to improve our model’s accuracy, and do prediction queries with our regression
    models. We walked through options for using XGBoost, Linear Learner and `auto`
    options to train your model.
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们详细讨论了回归模型，并了解了如何创建单输入和多输入回归模型。我们学习了如何轻松预测数值。我们还学习了如何验证回归模型，采取行动提高我们模型的准确性，并使用回归模型进行预测查询。我们探讨了使用XGBoost、线性学习者和`auto`选项来训练模型的选择。
- en: We also saw how we can check and validate the MSE score from the `SHOW MODEL`
    output using SQL commands in Redshift.
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还了解了如何使用Redshift中的SQL命令从`SHOW MODEL`输出中检查和验证MSE分数。
- en: In the next chapter, we will show you how to create unsupervised models using
    the K-means algorithm.
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将向您展示如何使用K-means算法创建无监督模型。
