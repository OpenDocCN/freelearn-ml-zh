["```py\nimport pandas as pdimport numpy as np\nfrom sklearn.datasets import load_breast_cancer\nimport dowhy\nfrom dowhy import CausalModel\n```", "```py\nbreast_cancer = load_breast_cancer()data = pd.DataFrame(breast_cancer.data,\n    columns=breast_cancer.feature_names)\ndata['target'] = breast_cancer.target\n```", "```py\ndata['mean radius'] = data['mean radius'].gt(data[    'mean radius'].values.mean()).astype(int)\ndata=data.astype({'mean radius':'bool'}, copy=False)\n```", "```py\ncommon_causes_list = data.columns.values.tolist()common_causes_list.remove('mean radius')\ncommon_causes_list.remove('target')\n```", "```py\nmodel = CausalModel(    data=data,\n    treatment='mean radius',\n    outcome='target',\n    common_causes=common_causes_list\n)\n```", "```py\nidentified_est = model.identify_effect()estimate = model.estimate_effect(identified_est,\n    method_name='backdoor.propensity_score_matching')\n```", "```py\nrefute_results = model.refute_estimate(identified_estimand,    estimate, method_name='placebo_treatment_refuter',\n    placebo_type='permute', num_simulations=40)\n```", "```py\nimport bnlearn as bndf = bn.import_example('sprinkler')\n```", "```py\nDAG = bn.structure_learning.fit(df)\n```", "```py\n# Set some colors to the edges and nodesnode_properties = bn.get_node_properties(DAG)\nnode_properties['Sprinkler']['node_color']='#00FFFF'\nnode_properties['Wet_Grass']['node_color']='#FF0000'\nnode_properties['Rain']['node_color']='#A9A9A9'\nnode_properties['Cloudy']['node_color']='#A9A9A9'\n# Plotting the Bayesian Network\nbn.plot(DAG,\n    node_properties=node_properties,\n    interactive=True,\n    params_interactive={'notebook':True,\n        'cdn_resources': 'remote'})\n```", "```py\nbn.independence_test(DAG, df, test = 'chi_square',    prune = True)\n```", "```py\nmodel_mle = bn.parameter_learning.fit(DAG, df,    methodtype='maximumlikelihood')\n# Printing the learned Conditional Probability Distribution (CPDs)\nbn.print_CPD(model_mle)\n```"]