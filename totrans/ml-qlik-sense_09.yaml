- en: '9'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Advanced Data Visualization Techniques for Machine Learning Solutions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the rapidly evolving world of data analytics and machine learning, the ability
    to effectively visualize complex information has become crucial. As organizations
    strive to extract valuable insights from vast amounts of data, they need powerful
    tools that can transform raw numbers into meaningful visual representations.
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, we delve into the realm of advanced data visualization techniques
    within the context of machine learning solutions. We explore how Qlik’s sophisticated
    visual analytics capabilities can enhance the understanding and interpretation
    of machine learning models and their outputs.
  prefs: []
  type: TYPE_NORMAL
- en: This chapter will equip you with the knowledge and skills necessary to effectively
    leverage Qlik’s visual analytics capabilities to gain deeper insights, make informed
    decisions, and drive actionable outcomes in the era of machine learning and big
    data.
  prefs: []
  type: TYPE_NORMAL
- en: 'The main topics covered in this chapter are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Visualizing machine learning data
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chart and visualization types in Qlik
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Visualizing machine learning data
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'When visualizing machine learning data, several important aspects should be
    considered to ensure effective communication and interpretation of the insights.
    The following should be considered (these are not tool-specific):'
  prefs: []
  type: TYPE_NORMAL
- en: '**Understand the data**: Gain a deep understanding of the data you are working
    with. Analyze its structure, distributions, and relationships to identify key
    variables and patterns. This understanding will guide you in selecting appropriate
    visualization techniques.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Choose the right visualization techniques**: Select visualization techniques
    that best represent the characteristics and relationships within the data. Common
    techniques include scatter plots, line charts, bar charts, histograms, heatmaps,
    and network graphs. Choose techniques that effectively convey the information
    you want to communicate. In the next chapter, we will discover the different visualizations
    that Qlik offers.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Simplify and reduce complexity**: Keep the visualizations as simple and clear
    as possible. Avoid clutter and excessive detail, which can confuse the audience.
    Highlight the most important insights and use visual cues such as colors and annotations
    to guide the viewer’s attention.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Use appropriate visual encodings**: Leverage visual encodings to represent
    different attributes of the data effectively. Utilize position, length, angle,
    color, size, and shape to encode variables and convey meaningful information.
    Make sure the chosen encodings accurately represent the data attributes.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Consider scaling and normalization**: If the data has a wide range of values
    or varying scales, consider scaling or normalizing the data to ensure accurate
    visualization. Scaling techniques such as standardization or min-max scaling can
    help bring data within a comparable range for proper visualization.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Utilize interactive visualizations**: Incorporate interactivity into your
    visualizations to enable users to explore the data dynamically. Allow for zooming,
    panning, filtering, and selecting data points of interest. Interactive visualizations
    enhance user engagement and understanding of the data. With Qlik tools, interaction
    is built in, so there is no need for extra steps.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Provide context and interpretation**: Include clear labels, titles, and axis
    descriptions to provide context and guide interpretation. Explain the meaning
    of the visualized data and provide relevant background information. Add captions,
    legends, or tooltips to help viewers understand the visual elements.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Consider multiple views or multiple visualizations**: Sometimes, presenting
    the data through multiple views or multiple visualizations can provide a more
    comprehensive understanding. Combine different techniques, such as overlaying
    multiple plots or using small multiples, to reveal different aspects of the data.
    In Qlik Sense, consider the structure of the application and how to utilize sheets
    to divide the data into informative views.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Test and iterate**: Test the visualizations with different users or stakeholders
    to gather feedback and improve their effectiveness. Iterate on the design based
    on user feedback and refine the visualizations to ensure they are clear, insightful,
    and meet the intended goals.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Tailor visualizations to the audience**: Consider the knowledge and expertise
    of your audience when designing visualizations. Adapt the level of detail, technicality,
    and complexity of the visualizations to the audience’s understanding. Provide
    explanations and context as necessary.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'One important aspect of any data visualization is the effective use of color.
    When designing a color scheme for the data visualization, the following aspects
    should be considered:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Choose a purposeful color palette**: Select a color palette that aligns with
    the purpose and context of the visualization. Consider using qualitative color
    schemes (distinct colors for different categories), sequential color schemes (gradation
    of colors for ordered data), or diverging color schemes (highlighting extremes
    or differences). You can use tools such as color pickers or online color palette
    generators to find harmonious and visually pleasing color combinations.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Differentiate categories**: When representing different categories or groups,
    use distinct colors to ensure clear differentiation. Avoid using similar hues
    that may cause confusion or make it difficult to distinguish between categories.
    Ensure that the chosen colors are visually distinguishable, even for individuals
    with color vision deficiencies.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Use color consistently**: Maintain consistency in the use of colors across
    the visualization. Assign the same color to the same category or variable throughout
    the visualization to provide visual continuity and aid interpretation. Consistency
    helps users establish mental associations between colors and the corresponding
    data elements.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Highlight key elements**: Utilize color to draw attention to important elements
    or highlight specific data points of interest. Use a contrasting or vibrant color
    for emphasis. For instance, you can highlight outliers, maximum and minimum values,
    or data points that meet specific criteria to make them visually stand out.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Consider color symbolism**: Be mindful of any inherent symbolism associated
    with colors in different cultures or contexts. Colors may have different connotations
    or meanings in different contexts. Consider cultural sensitivities and ensure
    that color choices do not unintentionally convey misleading or inappropriate messages.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Maintain accessibility**: Ensure that the chosen colors are accessible to
    a wide range of users, including those with color vision deficiencies. Avoid relying
    solely on color to convey information. Use alternative visual cues, such as patterns,
    labels, or textures, to supplement or replace color distinctions. Tools such as
    ColorBrewer and accessible color palette generators can help create color palettes
    that meet accessibility guidelines.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Balance the visual hierarchy**: Use colors to establish a visual hierarchy
    within the visualization. Employ different shades or intensities of a color to
    indicate varying levels of importance or significance. Lighter colors can be used
    for background or less important elements, while darker or bolder colors can be
    used for key elements or primary focus areas.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Limit the number of colors**: Avoid using too many colors in a single visualization,
    as it can lead to visual clutter and confusion. Limit the color palette to a manageable
    number of distinct colors based on the number of categories or variables being
    represented. Consider using additional visual encoding techniques such as size,
    shape, or texture to supplement color differentiations if necessary.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: Color themes and gradients for the Qlik application can be defined using themes
    or put them directly into the application. If there is a common color theme that
    should be used across multiple applications, a custom theme is recommended.
  prefs: []
  type: TYPE_NORMAL
- en: Now that we have learned some basic principles about data visualizations and
    colors, in the next section, we will take a closer look at some of the charts
    that Qlik Sense provides.
  prefs: []
  type: TYPE_NORMAL
- en: Chart and visualization types in Qlik
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this section, we will take a closer look at different visualization types
    in Qlik. We will also discover the general settings for layouts. As of writing
    this chapter, the following visualization types are supported (bolded ones are
    covered in more detail in this chapter):'
  prefs: []
  type: TYPE_NORMAL
- en: 'Charts:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Bar charts**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Box plots**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Bullet charts**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Combo charts
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Distribution plots**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gauges
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Histograms**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Line charts
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Maps**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pie charts
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Scatter plots**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Treemaps
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Waterfall charts**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Text-based visualizations:'
  prefs: []
  type: TYPE_NORMAL
- en: Filter panes
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: KPIs
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pivot tables
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tables
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Text & image
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Dashboard objects:'
  prefs: []
  type: TYPE_NORMAL
- en: Buttons
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Containers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, we cover only the native visualizations available. There are
    also visualizations available in the Visualization bundle and the Dashboard bundle
    that include Qlik-supported extension objects. It is also possible to create fully
    custom visualization extensions or use the ones created by the community. These
    are, however, out of the scope of this book.
  prefs: []
  type: TYPE_NORMAL
- en: Bar charts
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'A bar chart is one of the most common visualization types. It is typically
    used to compare multiple values. The dimension axis represents the category items
    that are compared, and the measure axis shows the value of each item. Bar charts
    are particularly useful when working with discrete or categorical data. In a machine
    learning context, bar charts are typically used in feature analysis, model evaluation,
    or class distribution, for example. In our earlier Iris dataset example, we used
    a bar chart to represent the distribution of predicted Iris species. This chart
    looks as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.1: A bar chart example representing counts of predicted Iris species](img/B19863_09_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 9.1: A bar chart example representing counts of predicted Iris species'
  prefs: []
  type: TYPE_NORMAL
- en: This example represents a simple bar chart. More complex representations include
    grouped or stacked bars, where multiple categories can be represented at the same
    time. Grouped bars are good for comparison, while stacked bars can be used to
    visualize the relationships of subcategories that form a total.
  prefs: []
  type: TYPE_NORMAL
- en: For example, grouped bars can be used to compare the sales and forecasts of
    different years side by side, and stacked bars can be used to analyze the sales
    of different product categories. In this case, the total height of the bar is
    the total sales.
  prefs: []
  type: TYPE_NORMAL
- en: Box plots
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Box plots, also known as box-and-whisker plots, are a valuable visualization
    tool for understanding the distribution and statistical properties of numerical
    data. Box plots are suitable for comparing ranges and distributions for groups
    of numerical data, which are illustrated with boxes and whiskers. Whiskers represent
    the high and low reference values. Box plots can organize a large amount of data
    and visualize outliers effectively. Typical use cases for box plots with machine
    learning data include data exploration, feature comparison, and outlier detection.
    The following example represents the box plot that shows the distribution of average
    petal length for the predicted species:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.2: A box plot example visualizing the average petal length for the
    predicted species](img/B19863_09_02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 9.2: A box plot example visualizing the average petal length for the
    predicted species'
  prefs: []
  type: TYPE_NORMAL
- en: In Qlik, you can select between the presets for the box plot or define the formula
    for each component on your own. In the previous graph, we can see that we have
    some outliers that extend beyond the whiskers, which are represented by the blue
    dots. We can see that the versicolor has the longest box and whiskers. This tells
    us that the species predicted to be versicolor in our model has the largest distribution
    of petal lengths measured. The mean petal length for each predicted species is
    marked by a horizontal line in each box.
  prefs: []
  type: TYPE_NORMAL
- en: Bullet charts
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Bullet charts are powerful visualization tools that combine the features of
    a bar chart and a range chart. They provide a compact and informative representation
    of data, making them useful for comparing actual values against target values
    and displaying performance metrics. Bullet charts make it possible to compare
    and measure performance with enriched information. It is a good chart for comparing
    performance according to target. The following represents an example of a bullet
    chart:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.3: A bullet chart example representing petal lengths](img/B19863_09_03.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 9.3: A bullet chart example representing petal lengths'
  prefs: []
  type: TYPE_NORMAL
- en: In this example, we have set the maximum petal length as the target, visualized
    using a white vertical line. We have set the color scheme to represent the 30%
    and 70% marks to the target, and the black bar visualizes the average petal length
    for each iris species.
  prefs: []
  type: TYPE_NORMAL
- en: Distribution plots
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'A distribution plot, also known as a density plot, is a useful visualization
    for understanding the distribution of a numerical variable in a dataset. It displays
    the probability density of the data across different intervals or bins. With distribution
    plots, you can visually explore and understand the distributional properties of
    machine learning data. They provide insights into the shape, central tendency,
    and variability of numerical variables, aiding in data exploration, feature engineering,
    and model-building processes. A distribution plot is suitable for comparing ranges
    and distributions for groups of numerical data. An example can be seen in the
    following figure:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.4: A distribution plot example representing petal length](img/B19863_09_04.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 9.4: A distribution plot example representing petal length'
  prefs: []
  type: TYPE_NORMAL
- en: In this graph, we can see that the individual measurements for petal length
    are marked with blue dots and the distributions of the measurements are marked
    with a gray background. We can easily see the construction of the data. In the
    graph, the bubble size parameter for individual measurements is adjusted to be
    smaller than the default size to get a clearer graph. If there are a lot of data
    points, it is also possible to enable jitter. This will separate the individual
    points using different vertical positions.
  prefs: []
  type: TYPE_NORMAL
- en: Histogram
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Histograms are a common visualization technique used to represent the distribution
    of numerical data. They provide insights into the frequency or count of values
    within predefined intervals or bins. They are suitable for showing the distribution
    of numerical data over an interval or fixed period. Data is divided into bins,
    and each bar represents the frequency in each bin. In the following example, we
    are visualizing the frequency and distribution of house values in the California
    area:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.5: A histogram example visualizing the distribution of house values](img/B19863_09_05.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 9.5: A histogram example visualizing the distribution of house values'
  prefs: []
  type: TYPE_NORMAL
- en: In this example, we can see that the histogram is slightly tilted to the left.
    This tells us that most of the houses are valued between 100,000 USD and 300,000
    USD, but there are still some houses that are more expensive than this. These
    form a long “tail” to the right. We can also see that, on average, each price
    bin has ~31 houses. In Qlik Sense, you can modify the number of bars and colors
    among many other parameters. In this example, the number of bars has been increased
    to 200 to get more accurate results from the distribution.
  prefs: []
  type: TYPE_NORMAL
- en: Maps
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Maps in Qlik Sense are an extremely versatile visualization object that can
    be used in many ways. Maps can contain multiple layers and display different types
    of information on the same visualization. The best and most natural way to utilize
    maps is when the data is geography-based, but a map object can also be used to
    visualize data on top of different backgrounds, such as SVG images. Maps in Qlik
    support multiple coordinate systems and when combined with the GeoAnalytics Connector,
    you can perform further calculations with the data. The following example shows
    an example map with different visualizations:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.6: A map example with predicted house values plotted on a map with
    a gradient color scheme](img/B19863_09_06.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 9.6: A map example with predicted house values plotted on a map with
    a gradient color scheme'
  prefs: []
  type: TYPE_NORMAL
- en: 'This example visualizes the predicted house values in California on a map.
    Each point represents a house, and the color indicates the predicted value. A
    darker color means a house is more expensive. Heatmaps are useful for visualizing
    the density of the points on a map. In the following example, we have mapped the
    individual houses in a heatmap:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.7: A heatmap example with individual houses plotted](img/B19863_09_07.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 9.7: A heatmap example with individual houses plotted'
  prefs: []
  type: TYPE_NORMAL
- en: The darker areas on a heatmap indicate a denser population of houses in that
    area. Combining different layers into visualizations is an extremely powerful
    way to present geographical data.
  prefs: []
  type: TYPE_NORMAL
- en: 'In the next example, we can see Tesla’s supercharger stations in Norway that
    are located within a 300 km driving range along the road network. Driving ranges
    are calculated using the GeoAnalytics Connector and visualized on a map:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.8: A map example showing 300 km driving range from each Tesla supercharger
    station in Norway](img/B19863_09_08.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 9.8: A map example showing 300 km driving range from each Tesla supercharger
    station in Norway'
  prefs: []
  type: TYPE_NORMAL
- en: As the previous figures show, maps are powerful visualization objects, and they
    are highly recommended for use with geographical data. In many machine learning
    solutions, we can place the results onto a map.
  prefs: []
  type: TYPE_NORMAL
- en: Scatter plots
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'A scatter plot is a type of data visualization that displays the relationship
    between two numerical variables. It uses individual data points represented by
    dots on a two-dimensional plane, with one variable plotted on the x-axis and the
    other on the y-axis. Scatter plots can be used to help identify patterns, correlations,
    or outliers and assist in selecting features, identifying important variables,
    and understanding the behavior of the data. Scatter plots are also good for the
    cross-validation of the data and machine learning models. An example of a scatter
    plot using the Iris dataset can be seen in the following figure:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.9: A scatter plot example of Iris species by petal width and length](img/B19863_09_09.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 9.9: A scatter plot example of Iris species by petal width and length'
  prefs: []
  type: TYPE_NORMAL
- en: In this example, we have plotted individual IDs of the Iris flower dataset,
    with petal width on the vertical axis and petal length on the horizontal axis.
    We then used the predicted species as a color. This way we can see clear patterns
    in our data.
  prefs: []
  type: TYPE_NORMAL
- en: 'Scatter plots are also a good visualization type if there are a lot of data
    points. It will automatically switch to a compressed view if the number of data
    points exceeds the maximum value. This value can be adjusted in the chart settings.
    An example of a compressed view is the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.10: Scatter plot—compressed view](img/B19863_09_10.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 9.10: Scatter plot—compressed view'
  prefs: []
  type: TYPE_NORMAL
- en: The compressed example visualizes the cross-validation of predicted waiting
    times in an ER unit compared to actual measured waiting times. Relation should
    be linear, but since we see some outliers, we know that there is still optimization
    to be done for our actual model in this case. The compressed view shows 64,000
    data points in our example graph.
  prefs: []
  type: TYPE_NORMAL
- en: Waterfall charts
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'A waterfall chart is a visual representation of how various factors contribute
    to a final value. They help in understanding the cumulative effect of positive
    and negative changes in a dataset. While waterfall charts are commonly used in
    financial analysis, they can also be useful for analyzing and interpreting machine
    learning data. Waterfall charts are useful when visualizing the SHAP values for
    a Qlik AutoML model to learn how individual characteristics affect the predicted
    value. The following example represents the SHAP values of the California housing
    dataset:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.11: A waterfall chart example—SHAP values](img/B19863_09_11.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 9.11: A waterfall chart example—SHAP values'
  prefs: []
  type: TYPE_NORMAL
- en: 'In this example, we can see that `Median income` and `Ocean proximity` have
    large effects on the predicted value. The overall effects of these features are
    negative, but if we investigate the top predicted prices, we can see that the
    effect for this group is positive. This is described in the following figure:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.12: SHAP values visualized and filtered for houses with predicted
    prices over 300,000 USD](img/B19863_09_12.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 9.12: SHAP values visualized and filtered for houses with predicted
    prices over 300,000 USD'
  prefs: []
  type: TYPE_NORMAL
- en: This way, we can study how the different variables are affecting predictions
    and model behavior. A waterfall chart is a good choice for this specific case
    since it easily visualizes how various factors contribute to a final value.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: We will cover the full hands-on example using California housing prices data
    in the next chapter.
  prefs: []
  type: TYPE_NORMAL
- en: Choosing visualization type
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: When it comes to visualizing data, a key goal is to present relationships and
    patterns effectively so that insights can be quickly gleaned. Qlik Sense provides
    a diverse set of visualizations and charts to cater to various data visualization
    needs. Each chart has its own strengths in representing data in distinct ways
    that can be tailored for different analytical purposes.
  prefs: []
  type: TYPE_NORMAL
- en: When choosing the appropriate chart for your data, it is crucial to consider
    the specific insights you aim to derive. Understanding what you want to visualize
    and the story you want to tell is vital in selecting the most suitable chart type.
    Different charts emphasize different aspects of the data, such as trends, comparisons,
    distributions, or relationships.
  prefs: []
  type: TYPE_NORMAL
- en: Qlik Sense offers a wide range of visualization options. Each chart type has
    unique characteristics and functionalities that cater to specific data analysis
    requirements. For instance, bar charts are effective for comparing categorical
    data, while line charts are useful for visualizing trends over time. Scatter plots
    are ideal for showcasing relationships between two variables, and treemaps can
    effectively illustrate hierarchical data structures.
  prefs: []
  type: TYPE_NORMAL
- en: By carefully selecting the right chart types in Qlik Sense, you can leverage
    the strengths of each visualization to gain meaningful insights from your data.
    Understanding your data and the questions you want to answer will help you make
    informed decisions on which charts to utilize to present your data accurately
    and facilitate data-driven decision-making.
  prefs: []
  type: TYPE_NORMAL
- en: In the previous section, we covered some uncommon visualization types with examples
    and learned why these charts are good for visualizing machine-learning-related
    data. We did not cover all the charts, and there are a lot of options for tuning
    all the charts available. The best way to get familiar with different options
    is to play with the charts yourself. In the next chapter, we will build a few
    machine learning use cases from scratch and cover some of the chart settings while
    doing that.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Visualizing machine learning data is a crucial step in the data analysis process,
    enabling you to gain insights, identify patterns, and communicate results effectively.
    In this chapter, we familiarized ourselves with the different visualizations and
    techniques to visualize machine learning data. At the beginning of this chapter,
    we discovered common principles for creating a good visualization and familiarized
    ourselves with the key principles of coloring.
  prefs: []
  type: TYPE_NORMAL
- en: Toward the end of the chapter, we discovered some different visualization types
    that Qlik offers natively and learned how to use some of the graph types effectively.
    We learned the principles of the most used visualizations and how to fine-tune
    these in Qlik while keeping the context of machine learning in mind.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will look at the actual use cases of the machine learning
    solutions. We will learn how to build a few different machine learning models
    and applications from scratch and utilize all we have learned from previous chapters.
  prefs: []
  type: TYPE_NORMAL
- en: 'Part 3: Case studies and best practices'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This section will cover different use cases with hands-on examples. Use cases
    are built from scratch including the problem definition phase. The result is a
    working analytics application that utilizes machine learning. This section will
    provide the possibility to utilize all the skills learned from previous chapters.
    The section also covers the current and future trends of machine learning and
    AI and focuses on the characteristics of megatrends.
  prefs: []
  type: TYPE_NORMAL
- en: 'This section has the following chapters:'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 10*](B19863_10.xhtml#_idTextAnchor124)*:* *Examples and Case Studies*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Chapter 11*](B19863_11.xhtml#_idTextAnchor129)*:* *Future Direction*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
