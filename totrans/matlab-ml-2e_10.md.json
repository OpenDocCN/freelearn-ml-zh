["```py\n    CreditCardData = readtable('CreditCardData.xlsx');\n    ```", "```py\n    NumOcc = groupcounts(CreditCardData.Class)\n    NumOcc =\n            3992\n             492\n    ```", "```py\n    boxchart(CreditCardData{:,1:28})\n    xlabel('features')\n    ylabel('values')\n    ```", "```py\n    DataScaled = rescale(CreditCardData{:,1:28},-1,1);\n    ```", "```py\n    boxchart(DataScaled)\n    xlabel('features')\n    ylabel('values')\n    ```", "```py\n    n = length(CreditCardData.Class);\n    SplitData = cvpartition(n,'Holdout',0.3);\n    TrainIndex = training(SplitData);\n    TrainData = DataScaled(TrainIndex,:);\n    TestIndex = test(SplitData);\n    TestData = DataScaled(TestIndex,:);\n    ```", "```py\n    WeightedKNNModel = fitcknn(...\n        TrainData(:,1:28), ...\n        TrainData(:,29), ...\n        'Distance', 'cosine', ...\n        'Exponent', [], ...\n        'NumNeighbors', 10, ...\n        'DistanceWeight', 'SquaredInverse');\n    ```", "```py\n    PredData = predict(WeightedKNNModel,TestData(:,1:28));\n    ```", "```py\n    accuracy = sum(PredData == TestData(:,29)) / length(TestData(:,29));\n    fprintf('Accuracy: %.2f%%\\n', accuracy * 100);\n    Accuracy: 97.03%\n    ```", "```py\n    NIDSTrainData = readtable('NDISdata.csv');\n    summary(NIDSData)\n    ```", "```py\n    n = length(NIDSData.class);\n    SplitData = cvpartition(n,'Holdout',0.3);\n    TrainIndex = training(SplitData);\n    TrainData = NIDSData(TrainIndex,:);\n    TestIndex = test(SplitData);\n    TestData = NIDSData(TestIndex,:);\n    ```", "```py\n    predictors = TrainData(:,1:41);\n    response = TrainData.class;\n    ```", "```py\n    NDISEnsModel = fitcensemble(...\n        predictors, ...\n        response, ...\n        'Method', 'AdaBoostM1');\n    ```", "```py\n    NDISEnsModel\n    NDISEnsModel =\n      ClassificationEnsemble\n               PredictorNames: {1×41 cell}\n                 ResponseName: 'Y'\n        CategoricalPredictors: [2 3 4]\n                   ClassNames: {'anomaly'  'normal'}\n               ScoreTransform: 'none'\n              NumObservations: 17635\n                   NumTrained: 100\n                       Method: 'AdaBoostM1'\n                 LearnerNames: {'Tree'}\n         ReasonForTermination: 'Terminated normally after completing the requested number of training cycles.'\n                      FitInfo: [100×1 double]\n           FitInfoDescription: {2×1 cell}\n    ```", "```py\n    PredData = predict(NDISEnsModel,TestData(:,1:41));\n    ```", "```py\n    accuracy = sum(strcmpi(PredData,TestData{:,42})) / height(TestData(:,42));\n    fprintf('Accuracy: %.2f%%\\n', accuracy * 100);\n    Accuracy: 99.79%\n    ```"]