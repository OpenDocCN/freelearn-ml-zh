- en: R and SQL Server 2016/2017 Features Extended
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: R和SQL Server 2016/2017功能扩展
- en: SQL Server 2016 and 2017 provide a lot of new and improved query performance
    capabilities, extensibility features, security features, and built-in/native capabilities
    that are useful for developers, DBAs, and data scientists. These new features
    and capabilities can be used together with machine learning services in SQL, bringing
    a powerful data science solution as well as making the life of the developer/data
    scientist much easier.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: SQL Server 2016和2017提供了许多新的和改进的查询性能功能、可扩展性功能、安全功能以及对开发人员、数据库管理员和数据科学家有用的内置/本地功能。这些新功能和能力可以与SQL中的机器学习服务一起使用，提供强大的数据科学解决方案，同时使开发人员/数据科学家的生活变得更加容易。
- en: This chapter will walk you through a few unique scenarios to show the combined
    power of R and other built-in capabilities in SQL Server. These scenarios include
    JSON built-in capabilities to show how we work with IoT data, PolyBase to illustrate
    beyond relational data sources, and a large amount of data with the `ColumnStore`
    index. We will dive into these scenarios and produce data visualization and predictive
    analysis power in R that we have learned in previous chapters.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将带您了解一些独特的场景，以展示R和SQL Server中其他内置功能的结合力量。这些场景包括JSON内置功能，展示我们如何处理物联网数据，PolyBase用于说明超越关系型数据源，以及使用`ColumnStore`索引的大量数据。我们将深入这些场景，并在R中产生我们在前几章中学到的数据可视化和预测分析能力。
- en: Built-in JSON capabilities
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 内置JSON功能
- en: In this scenario, we will use the EMS incidents by month from the official city
    of Austin open data portal ([https://data.austintexas.gov/Public-Safety/EMS-Incidents-by-Month/gjtj-jt2d](https://data.austintexas.gov/Public-Safety/EMS-Incidents-by-Month/gjtj-jt2d)).
    The data essentially contains incident counts, broken down by location and priorities
    for the city of Austin and Travis County incidents, and the percentage of on-time
    compliance.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个场景中，我们将使用来自奥斯汀市官方开放数据门户的EMS事件按月数据（[https://data.austintexas.gov/Public-Safety/EMS-Incidents-by-Month/gjtj-jt2d](https://data.austintexas.gov/Public-Safety/EMS-Incidents-by-Month/gjtj-jt2d)）。数据本质上包含事件计数，按地点和优先级细分奥斯汀市和特拉维斯县的事件，以及准时合规的百分比。
- en: 'The following are the prerequisites to get started:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是要开始所需的先决条件：
- en: Download the data from [https://data.austintexas.gov/resource/bpws-iwvb.json](https://data.austintexas.gov/resource/bpws-iwvb.json)
    to a local path, such as `C:\Temp\bpws-iwvb.json`.
  id: totrans-6
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从[https://data.austintexas.gov/resource/bpws-iwvb.json](https://data.austintexas.gov/resource/bpws-iwvb.json)下载数据到本地路径，例如`C:\Temp\bpws-iwvb.json`。
- en: 'Grant read access to the directory; for example:'
  id: totrans-7
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 授予目录读取权限；例如：
- en: '![](img/00178.jpeg)'
  id: totrans-8
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00178.jpeg)'
- en: Figure 10.1 Granting access to C:\Temp for MS SQL Server
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.1 授予对C:\Temp的MS SQL Server访问权限
- en: For ease of R visualization, we will use SQL Operations Studio. You can download
    SQL Ops Studio from: [https://docs.microsoft.com/en-us/sql/sql-operations-studio/download](https://docs.microsoft.com/en-us/sql/sql-operations-studio/download).
  id: totrans-10
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了方便R可视化，我们将使用SQL Operations Studio。您可以从：[https://docs.microsoft.com/en-us/sql/sql-operations-studio/download](https://docs.microsoft.com/en-us/sql/sql-operations-studio/download)下载SQL
    Ops Studio。
- en: 'The following is an excerpt of a JSON file:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一个JSON文件的摘录：
- en: '![](img/00179.jpeg)'
  id: totrans-12
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00179.jpeg)'
- en: 'Figure 10.2: Excerpt of bpws-iwvb.json'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.2：bpws-iwvb.json摘录
- en: 'The schema of the JSON object in this file is fairly straightforward. It''s
    an array of the following 31 properties:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 该文件中JSON对象的模式相当简单。它是一个包含以下31个属性的数组：
- en: '`count_incidents_all`'
  id: totrans-15
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`count_incidents_all`'
- en: '`count_incidents_coa`'
  id: totrans-16
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`count_incidents_coa`'
- en: '`count_incidents_coa_or_tc`'
  id: totrans-17
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`count_incidents_coa_or_tc`'
- en: '`count_incidents_coa_p1`'
  id: totrans-18
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`count_incidents_coa_p1`'
- en: '`count_incidents_coa_p2`'
  id: totrans-19
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`count_incidents_coa_p2`'
- en: '`count_incidents_coa_p3`'
  id: totrans-20
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`count_incidents_coa_p3`'
- en: '`count_incidents_coa_p4`'
  id: totrans-21
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`count_incidents_coa_p4`'
- en: '`count_incidents_coa_p5`'
  id: totrans-22
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`count_incidents_coa_p5`'
- en: '`count_incidents_other`'
  id: totrans-23
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`count_incidents_other`'
- en: '`count_incidents_tc`'
  id: totrans-24
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`count_incidents_tc`'
- en: '`` `count_incidents_tc_p1` ``'
  id: totrans-25
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`` `count_incidents_tc_p1` ``'
- en: '`count_incidents_tc_p2`'
  id: totrans-26
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`count_incidents_tc_p2`'
- en: '`count_incidents_tc_p3`'
  id: totrans-27
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`count_incidents_tc_p3`'
- en: '`count_incidents_tc_p4`'
  id: totrans-28
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`count_incidents_tc_p4`'
- en: '`count_incidents_tc_p5`'
  id: totrans-29
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`count_incidents_tc_p5`'
- en: '`month_key`'
  id: totrans-30
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`month_key`'
- en: '`month_start_date`'
  id: totrans-31
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`month_start_date`'
- en: '`percent_on_time_all`'
  id: totrans-32
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`percent_on_time_all`'
- en: '`percent_on_time_coa`'
  id: totrans-33
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`percent_on_time_coa`'
- en: '`percent_on_time_coa_p1`'
  id: totrans-34
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`percent_on_time_coa_p1`'
- en: '`percent_on_time_coa_p2`'
  id: totrans-35
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`percent_on_time_coa_p2`'
- en: '`percent_on_time_coa_p3`'
  id: totrans-36
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`percent_on_time_coa_p3`'
- en: '`percent_on_time_coa_p4`'
  id: totrans-37
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`percent_on_time_coa_p4`'
- en: '`percent_on_time_coa_p5`'
  id: totrans-38
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`percent_on_time_coa_p5`'
- en: '`percent_on_time_target`'
  id: totrans-39
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`percent_on_time_target`'
- en: '`percent_on_time_tc`'
  id: totrans-40
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`percent_on_time_tc`'
- en: '`percent_on_time_tc_p1`'
  id: totrans-41
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`percent_on_time_tc_p1`'
- en: '`percent_on_time_tc_p2`'
  id: totrans-42
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`percent_on_time_tc_p2`'
- en: '`percent_on_time_tc_p3`'
  id: totrans-43
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`percent_on_time_tc_p3`'
- en: '`percent_on_time_tc_p4`'
  id: totrans-44
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`percent_on_time_tc_p4`'
- en: '`percent_on_time_tc_p5`'
  id: totrans-45
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`percent_on_time_tc_p5`'
- en: 'To see a first row of the data and what the value looks like, you can use the
    following T-SQL code:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看数据的第一行以及值的显示方式，可以使用以下 T-SQL 代码：
- en: '[PRE0]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The following is the output of the previous command:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 以下为上一条命令的输出：
- en: '![](img/00180.jpeg)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00180.jpeg)'
- en: Figure 10.3 Inspecting the first row of data in bpws-iwvb.json
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.3 检查 bpws-iwvb.json 的第一行数据
- en: 'The remainder of this section will show you how to use built-in JSON and R
    capabilities in SQL Server to parse the data and create a visualization to understand
    the trends of EMS incidents received by ATCEMS. The following screenshot shows
    the data visualization that we will build from the preceding JSON data via SQL
    Operations Studio:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 本节剩余部分将向您展示如何使用 SQL Server 中的内置 JSON 和 R 功能来解析数据并创建可视化，以了解 ATCEMS 收到的 EMS 事件趋势。以下截图显示了我们将通过
    SQL Operations Studio 从前面的 JSON 数据构建的数据可视化：
- en: '![](img/00181.jpeg)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00181.jpeg)'
- en: Figure 10.4 Using R to produce a forecast of EMS incidents
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.4 使用 R 生成 EMS 事件的预测
- en: 'Perform the following steps to build the preceding visualization:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤以构建前面的可视化：
- en: Open SQL Operations Studio.
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 SQL Operations Studio。
- en: 'Using JSON,  get the `Date` and incident counts:'
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 JSON，获取 `Date` 和事件计数：
- en: '[PRE1]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Here, we are using `OPENROWSET` and `SINGLE_CLOB` to read the file stream in
    clear text.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，我们使用 `OPENROWSET` 和 `SINGLE_CLOB` 来读取明文文件流。
- en: Then, we use `OPEN_JSON` to extract `month_start_date` as `Date`, `count_incidents_all`
    as `TotalIncidients`, `count_incidents_coa` as `AustinIncidents`, and `count_incidents_tc`
    as `TravisIncidents`.
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，我们使用 `OPEN_JSON` 提取 `month_start_date` 作为 `Date`，`count_incidents_all` 作为
    `TotalIncidients`，`count_incidents_coa` 作为 `AustinIncidents`，以及 `count_incidents_tc`
    作为 `TravisIncidents`。
- en: 'The output should look something like this:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 输出应类似于以下内容：
- en: '![](img/00182.jpeg)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00182.jpeg)'
- en: 'Figure 10.5: Output of running OPENJSON against the EMS Incident JSON file'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.5：对 EMS 事件 JSON 文件运行 OPENJSON 的输出
- en: 'Now, let''s build the `InputDataSet` for the R script with the `Date` and `TotalIncidents`
    data:'
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让我们使用 `Date` 和 `TotalIncidents` 数据构建 R 脚本的 `InputDataSet`：
- en: '[PRE2]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Let''s build the R script that uses the preceding `InputDataSet`:'
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们构建使用前面 `InputDataSet` 的 R 脚本：
- en: In this script, we will use the forecast package to perform forecasting based
    on the existing data in January 2010 and November 2017\. More information about
    the forecast package, including the dependent packages, is available at: [https://cran.r-project.org/web/packages/forecast/index.html](https://cran.r-project.org/web/packages/forecast/index.html).
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 在此脚本中，我们将使用预测包根据 2010 年 1 月和 2017 年 11 月的现有数据进行预测。有关预测包的更多信息，包括依赖包，可在以下网址找到：[https://cran.r-project.org/web/packages/forecast/index.html](https://cran.r-project.org/web/packages/forecast/index.html)。
- en: 'In this specific example, the number of incidents can be seasonal. So, we are
    going to use a few helping functions that help with forecasting:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个特定示例中，事件数量可能是季节性的。因此，我们将使用一些辅助函数来帮助预测：
- en: '`ts` function to convert the `InputDataSet` dataframe into time series'
  id: totrans-68
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ts` 函数将 `InputDataSet` 数据框转换为时间序列'
- en: '`stl` function to decompose a time series into seasonal, trend, and irregular
    components'
  id: totrans-69
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`stl` 函数将时间序列分解为季节性、趋势和不规则成分'
- en: '`forecast` function that takes into account seasonality:'
  id: totrans-70
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 考虑季节性的 `forecast` 函数：
- en: '[PRE3]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Now, let''s execute the following script:'
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让我们执行以下脚本：
- en: '[PRE4]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'In SQL Ops Studio, the result will be in the `VARBINARY` data type:'
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 SQL Ops Studio 中，结果将以 `VARBINARY` 数据类型显示：
- en: '![](img/00183.jpeg)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00183.jpeg)'
- en: 'Figure 10.6: View as Chart function in SQL Operations Studio'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.6：SQL Operations Studio 中的“以图表查看”功能
- en: 'Click on the View as Chart icon on the right, then click on the Chart Viewer
    tab on the Results pane, and then choose image from Chart Type. The output should
    be similar to the following:'
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在右侧单击“以图表查看”图标，然后在结果窗格中单击“图表查看器”选项卡，然后选择“图像”从图表类型。输出应类似于以下内容：
- en: '![](img/00184.jpeg)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00184.jpeg)'
- en: 'Figure 10.7: Displaying the chart produced by R in SQL Operations Studio'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.7：在 SQL Operations Studio 中显示 R 生成的图表
- en: Accessing external data sources using PolyBase
  id: totrans-80
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 PolyBase 访问外部数据源
- en: 'PolyBase allows your SQL Server instance to access data outside of the server/database
    using T-SQL. In SQL Server 2016, you can run queries on external data in Hadoop
    or import data from Azure Blob Storage:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: PolyBase 允许您的 SQL Server 实例使用 T-SQL 访问服务器/数据库之外的数据。在 SQL Server 2016 中，您可以在
    Hadoop 中的外部数据上运行查询或从 Azure Blob 存储导入数据：
- en: '![](img/00185.jpeg)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00185.jpeg)'
- en: 'Figure 10.8: PolyBase concept (source: https://docs.microsoft.com/en-us/sql/relational-databases/polybase/polybase-guide)'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.8：PolyBase 概念（来源：https://docs.microsoft.com/en-us/sql/relational-databases/polybase/polybase-guide）
- en: In this section, we'll use a similar dataset as in the previous section, represented
    as CSV files in Azure Blob Storage. These CSV files represent the EMS incidents,
    which will be exposed as an external table in SQL Server. The goal for this walk-through
    is to understand seasonality and the trending of EMS incidents. We will use R
    in the SQL Server to do this and view the chart in SQL Operations Studio.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将使用与上一节类似的数据集，这些数据集以 Azure Blob Storage 中的 CSV 文件形式表示。这些 CSV 文件代表 EMS
    事件，将在 SQL Server 中作为外部表公开。本演示的目标是了解 EMS 事件的季节性和趋势。我们将在 SQL Server 中使用 R 来完成这项工作，并在
    SQL Operations Studio 中查看图表。
- en: 'The following are the prerequisites to get started:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是要开始所需的先决条件：
- en: The SQL Server instance installed with PolyBase. This step is documented at: [https://docs.microsoft.com/en-us/sql/relational-databases/polybase/get-started-with-polybase](https://docs.microsoft.com/en-us/sql/relational-databases/polybase/get-started-with-polybase)
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: SQL Server 实例安装了 PolyBase。此步骤的文档在：[https://docs.microsoft.com/en-us/sql/relational-databases/polybase/get-started-with-polybase](https://docs.microsoft.com/en-us/sql/relational-databases/polybase/get-started-with-polybase)
- en: 'Microsoft Azure Storage Explorer installed. Using Azure Storage Explorer, you
    can upload files, manage containers in your storage account, and get a Primary
    Access Key from the storage account:'
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 已安装 Microsoft Azure Storage Explorer。使用 Azure Storage Explorer，您可以上传文件，管理存储账户中的容器，并从存储账户获取主访问密钥：
- en: '![](img/00186.jpeg)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![img/00186.jpeg]'
- en: 'Figure 10.9: Using Microsoft Azure Storage Explorer to connect to Azure Blob
    Storage'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.9：使用 Microsoft Azure Storage Explorer 连接到 Azure Blob Storage
- en: EMS Incident by Month downloaded from <insert GitHub link> and uploaded to your
    Azure Blob Storage.
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 <插入 GitHub 链接> 下载的 EMS 事件按月下载并上传到您的 Azure Blob Storage。
- en: SSMS or SQL Operations Studio installed.
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 已安装 SSMS 或 SQL Operations Studio。
- en: 'Perform the following steps to create an external table:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤以创建外部表：
- en: Enable the advanced option to enable connectivity to Azure Blob Storage on the
    master database first.
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先在主数据库上启用高级选项，以启用连接到 Azure Blob Storage 的连接。
- en: 'Having Hadoop connectivity set to 7 allows connectivity to Azure Blob Storage.
    For more information on others supported data sources, visit:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 将 Hadoop 连接设置为 7 允许连接到 Azure Blob Storage。有关其他支持的数据源的信息，请访问：
- en: '[https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/polybase-connectivity-configuration-transact-sql](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/polybase-connectivity-configuration-transact-sql)'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/polybase-connectivity-configuration-transact-sql](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/polybase-connectivity-configuration-transact-sql)'
- en: '[PRE5]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Create a master key in your database where you''d like to create an external
    table connecting to the CSV files in Azure Blob Storage:'
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您希望创建连接到 Azure Blob Storage 中 CSV 文件的外部表的数据库中创建一个主密钥：
- en: '[PRE6]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Create the database `MsSQLGirlAtAzureBlobStorage`:'
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建数据库 `MsSQLGirlAtAzureBlobStorage`：
- en: '[PRE7]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Create the external data source pointing to a container in Azure Blob Storage.
    In this instance, `open-data-sample` is the name of the container, and `mssqlgirl.blob.core.windows.net`
    is the Azure Blob Storage location:'
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Azure Blob Storage 中创建指向容器的外部数据源。在这个例子中，`open-data-sample` 是容器的名称，而 `mssqlgirl.blob.core.windows.net`
    是 Azure Blob Storage 的位置：
- en: '[PRE8]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Create the file format of the source files in the container:'
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建容器中源文件的文件格式：
- en: '[PRE9]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Create the following source files in the container:'
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在容器中创建以下源文件：
- en: '[PRE10]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'So, now we can do a `SELECT` statement on the external table as an input to
    the R script:'
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 因此，现在我们可以对外部表执行 `SELECT` 语句，将其作为 R 脚本的输入：
- en: '[PRE11]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'If you are using SQL Operations Studio, you can view the graph, which should
    look like the following:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您使用 SQL Operations Studio，您可以查看图表，其外观应如下所示：
- en: '![](img/00187.jpeg)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
  zh: '![img/00187.jpeg]'
- en: 'Figure 10.10: EMS incidents time series'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.10：EMS 事件时间序列
- en: The preceding chart suggests that the trend is increasing from year 2010 to
    2016, which then significantly decreases in general.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 上述图表表明，趋势从 2010 年到 2016 年在增加，然后在总体上显著下降。
- en: High performance using ColumnStore and in memory OLTP
  id: totrans-113
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 ColumnStore 和内存 OLTP 实现高性能
- en: 'SQL Server 2016 R Services and SQL Server 2017 ML Services provide advanced
    analytical capabilities that can also be applied to optimized tables. In this
    section, we will walk you through comparisons on how to use R Services with:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: SQL Server 2016 R 服务和 SQL Server 2017 ML 服务提供了高级分析能力，这些能力也可以应用于优化表。在本节中，我们将向您介绍如何使用
    R 服务与以下内容进行比较：
- en: A table with a primary key
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 具有主键的表
- en: A table with a clustered `ColumnStore` index
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 具有聚集 `ColumnStore` 索引的表
- en: A memory-optimized table
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 具有内存优化的表
- en: A memory-optimized table with a clustered `ColumnStore` index
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 具有聚集`ColumnStore`索引的内存优化表
- en: 'For more optimization tips and tricks with SQL Server and machine learning,
    visit:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 想要更多关于SQL Server和机器学习的优化技巧和窍门，请访问：
- en: '[https://azure.microsoft.com/en-us/blog/optimization-tips-and-tricks-on-azure-sql-server-for-machine-learning-services/](https://azure.microsoft.com/en-us/blog/optimization-tips-and-tricks-on-azure-sql-server-for-machine-learning-services/)'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://azure.microsoft.com/en-us/blog/optimization-tips-and-tricks-on-azure-sql-server-for-machine-learning-services/](https://azure.microsoft.com/en-us/blog/optimization-tips-and-tricks-on-azure-sql-server-for-machine-learning-services/)'
- en: Testing rxLinMod performance on a table with a primary key
  id: totrans-121
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在具有主键的表上测试rxLinMod的性能
- en: 'The following steps will test the performance of `rxLinMod` over 6,096,762 bits
    of data stored in a table with a primary key. This Air Flights data can be downloaded
    from [https://packages.revolutionanalytics.com/datasets/AirOnTime2012.xdf](https://packages.revolutionanalytics.com/datasets/AirOnTime2012.xdf)
    and stored in `C:/Program Files/Microsoft SQL Server/140/R_SERVER/library/RevoScaleR/SampleData`.
    At the end of the steps, we will record the CPU time:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤将测试`rxLinMod`在存储在具有主键的表中的6,096,762位数据上的性能。这些航空航班数据可以从[https://packages.revolutionanalytics.com/datasets/AirOnTime2012.xdf](https://packages.revolutionanalytics.com/datasets/AirOnTime2012.xdf)下载并存储在`C:/Program
    Files/Microsoft SQL Server/140/R_SERVER/library/RevoScaleR/SampleData`中。步骤结束时，我们将记录CPU时间：
- en: 'Create a stored procedure that reads the `AirFlights` sample data in an XDF
    file, and return it as a data frame so that we can insert it into a new table:'
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个存储过程，用于从XDF文件中读取`AirFlights`样本数据，并将其作为数据帧返回，以便我们可以将其插入到新表中：
- en: '[PRE12]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Create a table where the `AirFlights` data will be stored. This table represents
    a row-stored table with a primary key:'
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在数据库中创建一个用于存储`AirFlights`数据的表。此表表示一个以行存储的表，具有主键：
- en: '[PRE13]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Insert the Air Flights data into the `AirFlights` table. In this instance,
    we are using R services to load the data:'
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将航空航班数据插入到`AirFlights`表中。在此实例中，我们使用R服务来加载数据：
- en: '[PRE14]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Create a procedure that calls an external script to calculate the coefficient
    from the linear model prediction of the Arrival Delay:'
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个过程，该过程调用外部脚本来计算从线性模型预测的到达延迟的系数：
- en: '[PRE15]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Execute the procedure, as follows:'
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照以下方式执行过程：
- en: '[PRE16]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'The result should look something like this:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 结果应类似于以下内容：
- en: '[PRE17]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Testing rxLinMod performance on a table with a clustered ColumnStore index
  id: totrans-135
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在具有聚集列存储索引的表上测试rxLinMod的性能
- en: 'The following steps will test the performance of `rxLinMod` over 6,096,762 bits
    of data stored in a table with a clustered `ColumnStore` index. At the end of
    the steps, we will record the CPU time:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤将测试`rxLinMod`在存储在具有聚集`ColumnStore`索引的表中的6,096,762位数据上的性能。步骤结束时，我们将记录CPU时间：
- en: 'Create a table similar to `dbo.AirFlights` from the previous section. We also
    want to create a clustered `ColumnStore` index and insert the data from `dbo.AirFlights`:'
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从上一节创建一个类似于`dbo.AirFlights`的表。我们还想创建一个聚集`ColumnStore`索引并将`dbo.AirFlights`中的数据插入：
- en: '[PRE18]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Execute the following procedure:'
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 执行以下过程：
- en: '[PRE19]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'The result should look something like the following:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 结果应类似于以下内容：
- en: '[PRE20]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Testing rxLinMod performance on a memory-optimized table with a primary key
  id: totrans-143
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在具有主键的内存优化表上测试rxLinMod的性能
- en: 'The following steps will test the performance of `rxLinMod` over 6,096,762 bits
    of data stored in a memory-optimized table with a non-clustered primary key. At
    the end of the steps, we will record the CPU time:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤将测试`rxLinMod`在存储在具有非聚集主键的内存优化表中的6,096,762位数据上的性能。步骤结束时，我们将记录CPU时间：
- en: 'Create a file group for the memory-optimized table in the database:'
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在数据库中为内存优化表创建一个文件组：
- en: '[PRE21]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Create a memory-optimized table version of `dbo.AirFlights`:'
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建`dbo.AirFlights`的内存优化表版本：
- en: '[PRE22]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Execute the following procedure:'
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 执行以下过程：
- en: '[PRE23]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'The result should look something like this:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 结果应类似于以下内容：
- en: '[PRE24]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Testing rxLinMod performance on a memory-optimized table with a clustered ColumnStore
    index
  id: totrans-153
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在具有聚集列存储索引的内存优化表上测试rxLinMod的性能
- en: 'The following steps will test the performance of `rxLinMod` over 6,096,762 bits
    of data stored in a memory-optimized table with a non-clustered primary key. At
    the end of the steps, we will record the CPU time:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤将测试`rxLinMod`在存储在具有非聚集主键的内存优化表中的6,096,762位数据上的性能。步骤结束时，我们将记录CPU时间：
- en: 'Create a memory-optimized table with a clustered `columstore` index version
    of `dbo.AirFlights`:'
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个具有聚集`columstore`索引的`dbo.AirFlights`内存优化表版本：
- en: '[PRE25]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Execute the following procedure:'
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 执行以下过程：
- en: '[PRE26]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'The result should look something like this:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 结果应该看起来像这样：
- en: '[PRE27]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: Comparing results
  id: totrans-161
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 比较结果
- en: 'As you can see from the following quick chart comparison, SQL Server R Services
    can take advantage of optimized tables very well:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 如您从以下快速图表比较中可以看到，SQL Server R 服务可以很好地利用优化表：
- en: '![](img/00188.jpeg)'
  id: totrans-163
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00188.jpeg)'
- en: Figure 10.11 Comparing performance of classic primary key, Columnstore, in-memory,
    and in-memory + Columnstore when used in combination with R Services
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.11 比较使用R服务时经典主键、Columnstore、内存和内存+Columnstore的性能
- en: 'For additional information on the performance comparison, you can go to *Tomaž
    Kaštrun''s* article here:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 如需有关性能比较的更多信息，您可以访问*Tomaž Kaštrun*的文章：
- en: '[https://github.com/tomaztk/Performance-differences-between-RevoScaleR-ColumnStore-Table-and-In-Memory-OLTP-Table/blob/master/RevoScaleR_vs_ColumStore_vs_InMemoryOLTP.sql](https://github.com/tomaztk/Performance-differences-between-RevoScaleR-ColumnStore-Table-and-In-Memory-OLTP-Table/blob/master/RevoScaleR_vs_ColumStore_vs_InMemoryOLTP.sql)'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/tomaztk/Performance-differences-between-RevoScaleR-ColumnStore-Table-and-In-Memory-OLTP-Table/blob/master/RevoScaleR_vs_ColumStore_vs_InMemoryOLTP.sql](https://github.com/tomaztk/Performance-differences-between-RevoScaleR-ColumnStore-Table-and-In-Memory-OLTP-Table/blob/master/RevoScaleR_vs_ColumStore_vs_InMemoryOLTP.sql)'
- en: Summary
  id: totrans-167
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: SQL Server 2016 and SQL Server 2017 are packed with useful features, from JSON,
    PolyBase, to high performance features, such as the `ColumnStore` index and memory-optimized
    tables. Most of these features are compatible and can enhance your advanced analytics
    experience. In this chapter, you have learned the steps for creating forecast
    and seasonal trends of EMS incidents in Austin and Travis County. We used both
    JSON data source and CSV files in Azure Blob Storage. Finally, you also have learned
    how to make use of `ColumnStore` and memory-optimized tables to improve performance
    of R Services.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: SQL Server 2016和SQL Server 2017包含了丰富的功能，从JSON、PolyBase到高性能特性，例如`ColumnStore`索引和内存优化表。大多数这些功能都是兼容的，并且可以增强您的高级分析体验。在本章中，您已经学习了创建奥斯汀和特拉维斯县EMS事件预测和季节性趋势的步骤。我们使用了Azure
    Blob Storage中的JSON数据源和CSV文件。最后，您还学习了如何利用`ColumnStore`和内存优化表来提高R服务的性能。
