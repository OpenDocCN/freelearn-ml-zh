- en: '3'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '3'
- en: How Prophet Works
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Prophet 的工作原理
- en: Sometimes, Prophet can feel like magic, creating a complex forecast with barely
    any user instructions! But if you understand the equations behind Prophet, you’ll
    notice that it isn’t magic at all, but in fact, a very flexible algorithm for
    extracting multiple simultaneous patterns in the data.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，Prophet 可能感觉像魔法，只需极少的用户指令就能创建复杂的预测！但如果你理解 Prophet 背后的方程，你会发现它根本不是魔法，而实际上是一个非常灵活的算法，用于从数据中提取多个同时存在的模式。
- en: All of this math may feel intimidating to those without a strong statistical
    background, but it is actually quite approachable, and an understanding of the
    math behind the magic will be to your benefit as you begin to forecast more complex
    datasets. In this chapter, we’ll walk through all of the relevant equations together.
    If you start to feel lost, don’t fret! All will become clear as you use Prophet
    more and more.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 对于没有强大统计背景的人来说，所有这些数学可能感觉令人畏惧，但实际上相当容易接近，并且对数学的理解将有助于你开始预测更复杂的数据集。在本章中，我们将一起走过所有相关的方程。如果你开始感到迷茫，不要担心！随着你越来越多地使用
    Prophet，一切都会变得清晰。
- en: 'This chapter will introduce the reasons Facebook (now, Meta) chose to develop
    its own forecasting package, rather than rely on one of the many already existing
    tools. Next, you will learn about Facebook’s forecasting philosophy: a combination
    of the analyst’s knowledge and computing automation. Finally, you’ll look at the
    equations Prophet uses to build its models, and you’ll then tear them apart to
    see the role each term plays in the forecast.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将介绍 Facebook（现在称为 Meta）选择开发自己的预测包而不是依赖现有的许多工具的原因。接下来，你将了解 Facebook 的预测哲学：分析师的知识与计算自动化的结合。最后，你将查看
    Prophet 用于构建模型的方程，然后将其拆解以了解每个项在预测中的作用。
- en: 'In this chapter, we will discuss the following:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将讨论以下内容：
- en: Facebook’s motivation for building Prophet
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Facebook 构建Prophet的动机
- en: Analyst-in-the-loop forecasting
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 循环分析预测
- en: The math behind Prophet
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Prophet 背后的数学
- en: Technical requirements
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: The data files and code examples in this chapter can be found at [https://github.com/PacktPublishing/Forecasting-Time-Series-Data-with-Prophet-Second-Edition](https://github.com/PacktPublishing/Forecasting-Time-Series-Data-with-Prophet-Second-Edition).
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中的数据文件和代码示例可在[https://github.com/PacktPublishing/Forecasting-Time-Series-Data-with-Prophet-Second-Edition](https://github.com/PacktPublishing/Forecasting-Time-Series-Data-with-Prophet-Second-Edition)找到。
- en: Please refer to the *Preface* of this book for the technical requirements necessary
    to run the code examples.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 请参阅本书的*前言*，了解运行代码示例所需的技术要求。
- en: Facebook’s motivation for building Prophet
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Facebook 构建Prophet的动机
- en: As mentioned when introducing Prophet in [*Chapter 1*](B19630_01.xhtml#_idTextAnchor031),
    *The History and Development of Time Series Forecasting*, Facebook noticed that
    the internal demand for business forecasts was increasing. Its forecasting techniques
    did not scale well and its analysts were overwhelmed.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 如在介绍 Prophet 的[*第一章*](B19630_01.xhtml#_idTextAnchor031)《时间序列预测的历史与发展》中提到的，Facebook
    注意到内部对商业预测的需求正在增加。其预测技术扩展性不佳，分析师们感到不堪重负。
- en: Facebook scoured the literature in search of a scalable forecasting methodology.
    At the time, Facebook’s forecasting was largely done with Rob Hyndman’s `forecast`
    package required R analysts with specialized data science skills in forecasting
    and substantial product experience. Further, as Python became more and more popular
    among new hires, Facebook found itself running short of analysts able to produce
    high-quality forecasts. Unfortunately, the completely automatic forecasting tools
    Facebook looked into were too brittle and often too inflexible to incorporate
    valuable domain knowledge.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: Facebook 在文献中搜寻可扩展的预测方法。当时，Facebook 的预测主要使用 Rob Hyndman 的 `forecast` 包，需要具有预测和大量产品经验的
    R 分析师。此外，随着 Python 在新员工中越来越受欢迎，Facebook 发现自己缺乏能够制作高质量预测的分析师。不幸的是，Facebook 考虑的完全自动化的预测工具过于脆弱，往往不够灵活，无法融入有价值的领域知识。
- en: Facebook needed to make it easier for experts and non-experts alike to make
    high-quality forecasts that keep up with demand. Prophet was, therefore, designed
    to be a much more straightforward way to create reasonable, accurate forecasts
    that are customizable in ways that are intuitive to a non-expert. Facebook approached
    this problem using what it refers to as analyst-in-the-loop forecasting.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: Facebook 需要使专家和非专家都能更容易地做出高质量的预测，这些预测能够跟上需求的变化。因此，Prophet 被设计成一种更直接的方法，以创建合理、准确的预测，这些预测可以通过非专家直观的方式进行定制。Facebook
    使用它所说的“分析师在循环预测”来解决这个问题。
- en: Analyst-in-the-loop forecasting
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 分析师在循环预测
- en: When developing Prophet, Facebook took great care to ensure that the default
    settings for all parameters would give great results for a wide variety of business
    cases. However, there are always edge cases, challenging datasets, or simply a
    forecast that doesn’t quite match expectations. In these situations where the
    forecast is not satisfactory, the analyst is not stuck with fully automated results.
    Any analyst, even a beginner forecaster, can improve the forecast by tweaking
    a variety of easily interpretable parameters. Facebook dubs this process **analyst-in-the-loop
    forecasting** (see *Figure 3**.1*).
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在开发 Prophet 时，Facebook 付出了极大的努力，以确保所有参数的默认设置都能为各种业务案例提供出色的结果。然而，总是存在边缘情况、具有挑战性的数据集，或者仅仅是与预期不太匹配的预测。在这些预测不满意的情况下，分析师不会陷入完全自动化的结果。任何分析师，即使是初学者预测者，都可以通过调整各种易于理解的参数来改进预测。Facebook
    将这个过程称为**分析师在循环预测**（见*图 3.1*）。
- en: '![Figure 3.1 – Analyst-in-the-loop forecasting](img/Fig_3.1.jpg)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.1 – 分析师在循环预测](img/Fig_3.1.jpg)'
- en: Figure 3.1 – Analyst-in-the-loop forecasting
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.1 – 分析师在循环预测
- en: Analyst-in-the-loop forecasting is an iterative process. The analyst starts
    by using Prophet to build a model using the default parameters. Prophet has been
    optimized for speed, so in (usually) just a few seconds, it can output a very
    acceptable forecast. Prophet can then evaluate the forecast and surface potential
    issues before handing it back to the analyst for a quick visual inspection. If
    the forecast matches the analyst’s expectations, their work is done! But when
    Prophet has revealed poor performance or the analyst’s visual inspection provides
    unsatisfactory results, the analyst can intuitively tweak the model to improve
    performance and better align results with expectations.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 分析师在循环预测是一个迭代的过程。分析师首先使用 Prophet 以默认参数构建模型。Prophet 已经针对速度进行了优化，所以（通常）只需几秒钟，它就能输出一个非常可接受的预测。然后
    Prophet 可以评估预测并揭示潜在问题，在将其交还给分析师进行快速视觉检查之前。如果预测符合分析师的预期，他们的工作就完成了！但是，当 Prophet
    揭示出较差的性能或分析师的视觉检查提供不满意的结果时，分析师可以直观地调整模型以提高性能并更好地使结果与预期一致。
- en: 'This cycle can continue as many times as necessary. The beauty of Prophet is
    that because forecasting is so exceptionally quick, a full cycle can often be
    completed in less than a minute. An analyst with extensive domain knowledge but
    limited statistical knowledge is thus able to create a highly customized forecast.
    Parameters the analyst may wish to adjust include the following:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 这个周期可以根据需要重复进行。Prophet 的美妙之处在于，由于预测非常快，一个完整的周期通常可以在不到一分钟内完成。因此，具有广泛领域知识但统计知识有限的分析师能够创建高度定制的预测。分析师可能希望调整的参数包括以下内容：
- en: '**Capacities**: An upper or lower limit that the forecast can asymptotically
    approach. An example of capacity might be the total market size at a given time.'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**容量**：预测可以渐近接近的上限或下限。容量的一个例子可能是特定时间点的总市场规模。'
- en: '**Changepoints**: These are moments in time when the trend of the forecast
    takes an abrupt change of direction. These might result from a major product update
    or even a mention in the press that garners significant attention.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**变化点**：这些是预测趋势突然改变方向的时间点。这些可能是由重大产品更新甚至引起显著关注的媒体报道引起的。'
- en: '**Holidays and seasonality**: Whatever is being forecast will behave differently
    due to the effects of holidays and seasonality. For example, sales of turkeys
    peak in the week before Thanksgiving, and beach balls in mid-summer. The analyst
    who understands their product can easily input this intelligence into their model.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**节假日和季节性**：由于节假日和季节性的影响，任何预测的行为都会有所不同。例如，火鸡的销售在感恩节前一周达到顶峰，而沙滩球在仲夏时节销量最好。理解自己产品的分析师可以轻松地将这种情报输入到他们的模型中。'
- en: '**Smoothing parameters**: After visually inspecting the model, the analyst
    can intuitively see whether the model is over- or under-fitting the data. Smoothing
    parameters can be used to reduce the noise of a model or to instruct the model
    on how much seasonal variation can be expected in the future.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**平滑参数**：在视觉检查模型后，分析师可以直观地看出模型是否过度或欠拟合数据。平滑参数可以用来减少模型的噪声，或者指导模型未来可以预期多少季节性变化。'
- en: There are often discussions about the difference between **statistical forecasting**
    and **judgmental forecasting**. A statistical forecast is a model mathematically
    fit to historical data, whereas a judgmental forecast (also sometimes called a
    **managerial forecast**) is a process through which human experts produce a forecast
    using whatever knowledge they have learned through their experience with the time
    series. Judgmental forecasts can include much more information than a statistical
    forecast and can be more responsive to changing conditions, but they don’t scale
    well and require significant work from the analyst. A statistical forecast is
    much more easily automated and can scale up to meet forecasting demand, but is
    limited in the amount of domain knowledge it can incorporate.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 经常会有关于**统计预测**和**判断性预测**之间差异的讨论。统计预测是一个数学上拟合历史数据的模型，而判断性预测（有时也称为**管理预测**）是一个通过人类专家利用他们通过时间序列经验所学到的知识来产生预测的过程。判断性预测可以包含比统计预测更多的信息，并且可以更快速地响应变化条件，但它们扩展性不好，需要分析师做大量工作。统计预测更容易自动化，并且可以扩展以满足预测需求，但它在可以整合的领域知识量上有限。
- en: 'Facebook’s analyst-in-the-loop paradigm is a combination of the best qualities
    of these two different approaches: powerfully automated, but simple and intuitive
    to adjust. Despite this simplicity, however, Prophet is actually rather sophisticated
    when you peer at its inner workings. Although creating accurate forecasts does
    not require an understanding of the math underpinning Prophet’s models, an awareness
    of what Prophet is doing will only improve your forecasting nous. If you’re ready,
    let’s now take a look at the set of equations Prophet is using to build its forecasts.'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: Facebook的分析师在环范式是这两种不同方法最佳品质的结合：强大自动化，但简单直观易于调整。然而，尽管这种简单性，Prophet实际上在观察其内部工作时相当复杂。虽然创建准确的预测不需要理解Prophet模型背后的数学，但了解Prophet正在做什么将只会提高你的预测能力。如果你准备好了，现在让我们看看Prophet构建预测所使用的方程组。
- en: The math behind Prophet
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Prophet背后的数学
- en: 'In [*Chapter 1*](B19630_01.xhtml#_idTextAnchor031), *The History and Development
    of Time Series Forecasting*, we introduced Prophet as an additive regression model.
    *Figures 1.4* and *1.5* in that chapter illustrated this by showing how several
    different curves representing model components can simply be added together to
    arrive at a final model. Mathematically, this is represented with the following
    equation:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 在 [*第一章*](B19630_01.xhtml#_idTextAnchor031)，*时间序列预测的历史与发展* 中，我们介绍了Prophet作为一个加性回归模型。该章节的
    *图1.4* 和 *1.5* 通过展示如何将代表模型组件的几个不同曲线简单相加以得到最终模型来说明这一点。从数学上讲，这可以用以下方程表示：
- en: '|  | ![](img/B19630_03_F01.png) | (1) |'
  id: totrans-30
  prefs: []
  type: TYPE_TB
  zh: '|  | ![图1](img/B19630_03_F01.png) | (1) |'
- en: 'The model’s forecasted ![](img/B19630_03_F02.png) value at time ![](img/B19630_03_F03.png)
    is given by the ![](img/B19630_03_F04.png) function. This function consists of
    four components, summed together (or multiplied together; see [*Chapter 5*](B19630_05.xhtml#_idTextAnchor254),
    *Working with* *Seasonality,* for more on this):'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 模型在时间 ![时间点](img/B19630_03_F03.png) 的预测 ![预测值](img/B19630_03_F02.png) 由 ![函数](img/B19630_03_F04.png)
    给出。这个函数由四个部分组成，相加（或相乘；参见[*第五章*](B19630_05.xhtml#_idTextAnchor254)，*处理季节性*，了解更多信息）：
- en: '![](img/B19630_03_F05.png) is the growth component, or the general trend, which
    is non-periodic'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '![增长成分](img/B19630_03_F05.png) 是增长成分，或一般趋势，它是非周期的'
- en: '![](img/B19630_03_F06.png) is the seasonality component – that is, the summation
    of all periodic components'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '![季节性成分](img/B19630_03_F06.png) 是季节性成分——即所有周期性成分的总和'
- en: '![](img/B19630_03_F07.png) is the holiday component, representing all one-off
    special events'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '![假日成分](img/B19630_03_F07.png) 是假日成分，代表所有一次性特殊事件'
- en: '![](img/B19630_03_F08.png) is the error term'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '![错误项](img/B19630_03_F08.png) 是误差项'
- en: The combination of these four components (actually, only the first three components—the
    error term is just there to account for noise that cannot be accommodated by the
    model) is all Prophet needs to build its forecast. The simplicity of this equation,
    however, hides many complexities. To really understand what is happening, we’ll
    need to break down each of those components.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 这四个组件（实际上，只有前三个组件——误差项只是为了解释模型无法容纳的噪声）的组合是Prophet构建预测所需的一切。然而，这个方程式的简单性掩盖了许多复杂性。要真正理解正在发生的事情，我们需要逐个分析这些组件。
- en: Linear growth
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 线性增长
- en: 'First, we’ll look at the growth term. Prophet was introduced with two growth
    modes, linear and logistic, one of which needs to be chosen by the analyst when
    setting up the model. (How does the analyst choose? We’ll cover that in [*Chapter
    7*](B19630_07.xhtml#_idTextAnchor453), *Controlling* *Growth Modes*!) That choice
    instructs Prophet to use one of two equations for this term. We’ll start by looking
    at the linear version:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将查看增长项。Prophet引入了两种增长模式，线性和对数，分析师在设置模型时需要选择其中之一。（分析师如何选择？我们将在[*第7章*](B19630_07.xhtml#_idTextAnchor453)，*控制*
    *增长模式*!)这个选择指示Prophet使用两个方程之一来表示这个项。我们将从查看线性版本开始：
- en: '|  | ![](img/B19630_03_F09.png) | (2) |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '|  | ![图片 B19630_03_F09.png](img/B19630_03_F09.png) | (2) |'
- en: 'The ![](img/B19630_03_F10.png) variable is the growth rate, the slope of the
    line. Those familiar with regression will recognize that the basic equation for
    a line is ![](img/B19630_03_F11.png). We see equation *(2)* bears some resemblance
    to this basic equation if you collect everything in the parentheses and group
    them together. But a key difference between a simple line and Prophet’s **piecewise
    linear model** is right there in the name: it is piecewise. The slope can change
    as a function of ![](img/B19630_03_F12.png):'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片 B19630_03_F10.png](img/B19630_03_F10.png)变量是增长率，线的斜率。熟悉回归的人会认出，一条线的基本方程是![图片
    B19630_03_F11.png](img/B19630_03_F11.png)。我们看到方程*(2)*与这个基本方程有相似之处，如果你把括号里的所有东西收集起来并放在一起。但简单线和Prophet的**分段线性模型**之间的一个关键区别就在其名称中：它是分段的。斜率可以随![图片
    B19630_03_F12.png](img/B19630_03_F12.png)函数变化：'
- en: '![Figure 3.2 – The vertical dashed line is a changepoint in Prophet’s model,
    where the slope changes](img/Fig_3.2.jpg)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![图3.2 – The vertical dashed line is a changepoint in Prophet’s model, where
    the slope changes](img/Fig_3.2.jpg)'
- en: Figure 3.2 – The vertical dashed line is a changepoint in Prophet’s model, where
    the slope changes
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.2 – Prophet模型中的垂直虚线是一个变化点，斜率在这里发生变化
- en: 'This is why ![](img/B19630_03_F13.png), the slope, has an addition to it: ![](img/B19630_03_F14.png).
    The ![](img/B19630_03_F15.png) variable is a vector of rate adjustments (i.e.,
    the slope change that occurs at each changepoint), where ![](img/B19630_03_F16.png)
    is the change of slope that occurs at time ![](img/B19630_03_F17.png). The ![](img/B19630_03_F18.png)
    vector identifies the locations of each changepoint and is defined as follows:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是为什么![图片 B19630_03_F13.png](img/B19630_03_F13.png)，斜率，有所增加：![图片 B19630_03_F14.png](img/B19630_03_F14.png)。![图片
    B19630_03_F15.png](img/B19630_03_F15.png)变量是一个调整率的向量（即在每个变化点发生的斜率变化），其中![图片 B19630_03_F16.png](img/B19630_03_F16.png)是在时间![图片
    B19630_03_F17.png](img/B19630_03_F17.png)发生的斜率变化。![图片 B19630_03_F18.png](img/B19630_03_F18.png)向量标识了每个变化点的位置，并定义如下：
- en: '|  | ![](img/B19630_03_F19.png) | (3) |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
  zh: '|  | ![图片 B19630_03_F19.png](img/B19630_03_F19.png) | (3) |'
- en: In simple words, this means that the slope of the line is constant, but allows
    slope adjustments to occur. At any time ![](img/B19630_03_F20.png), the slope
    is equal to the ![](img/B19630_03_F21.png) base rate plus all of the slope adjustments
    up to that point.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 简单来说，这意味着线的斜率是恒定的，但允许斜率进行调整。在任何时间![图片 B19630_03_F20.png](img/B19630_03_F20.png)上，斜率等于![图片
    B19630_03_F21.png](img/B19630_03_F21.png)基本率加上到该点为止的所有斜率调整。
- en: 'To make the line continuous, each segment between changepoints must be adjusted
    up or down with an offset parameter so that the endpoints of each segment are
    connected. In equation *(2)*, ![](img/B19630_03_F22.png) is the offset parameter.
    Just like the slope, this offset parameter is a base offset plus all offsets up
    to time ![](img/B19630_03_F23.png). Mathematically, this is done by adding to
    ![](img/B19630_03_F24.png) that vector of changepoint locations, ![](img/B19630_03_F25.png),
    multiplied by a vector of offset adjustments, ![](img/B19630_03_F26.png). In this
    linear model, ![](img/B19630_03_F27.png) is set to ![](img/B19630_03_F28.png):'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使线条连续，变化点之间的每个区间必须通过偏移参数进行调整，以便区间的端点相连。在方程*(2)*中，![](img/B19630_03_F22.png)是偏移参数。就像斜率一样，这个偏移参数是一个基础偏移量加上直到时间![](img/B19630_03_F23.png)的所有偏移量。从数学上讲，这是通过将![](img/B19630_03_F24.png)加上一个变化点位置向量，![](img/B19630_03_F25.png)，乘以一个偏移调整向量，![](img/B19630_03_F26.png)来完成的。在这个线性模型中，![](img/B19630_03_F27.png)被设置为![](img/B19630_03_F28.png)：
- en: '|  | ![](img/B19630_03_F29.png) | (4) |'
  id: totrans-47
  prefs: []
  type: TYPE_TB
  zh: '|  | ![](img/B19630_03_F29.png) | (4) |'
- en: That is how ![](img/B19630_03_F30.png) is defined for Prophet’s linear model!
    Now let’s see how to change it for the logistic model.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是Prophet的线性模型中对数![](img/B19630_03_F30.png)的定义！现在让我们看看如何对对数模型进行修改。
- en: Logistic growth
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 对数增长
- en: 'Similar to how the general equation for a line is ![](img/B19630_03_F31.png),
    the general equation for a logistic curve is given by the following equation:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 与一般直线的方程![](img/B19630_03_F31.png)类似，对数曲线的一般方程由以下方程给出：
- en: '|  | ![](img/B19630_03_F32.png) | (5) |'
  id: totrans-51
  prefs: []
  type: TYPE_TB
  zh: '|  | ![](img/B19630_03_F32.png) | (5) |'
- en: 'As in the linear model, equation *(2)*, ![](img/B19630_03_F33.png) is the growth
    rate and ![](img/B19630_03_F34.png) is an offset parameter. Equation *(5)* requires
    many of the same adjustments we made in equation *(2)* to allow for changepoints.
    Prophet also allows ![](img/B19630_03_F35.png), the **carrying capacity**, to
    change with time. This value is essentially an asymptote that the curve approaches
    but never quite reaches:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 与线性模型中的方程*(2)*一样，![](img/B19630_03_F33.png)是增长率，而![](img/B19630_03_F34.png)是一个偏移参数。方程*(5)*需要我们对方程*(2)*中做出的许多调整，以允许变化点。Prophet还允许![](img/B19630_03_F35.png)，即**承载能力**，随时间变化。这个值本质上是一个曲线趋近但永远不会完全达到的渐近线：
- en: '![Figure 3.3 – Prophet’s logistic model, with a carrying capacity set to 500](img/Fig_3.3.jpg)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![图3.3 – Prophet的对数模型，承载能力设置为500](img/Fig_3.3.jpg)'
- en: Figure 3.3 – Prophet’s logistic model, with a carrying capacity set to 500
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.3 – Prophet的对数模型，承载能力设置为500
- en: 'Note that the ![](img/B19630_03_F36.png) capacity is a function of time. This
    means that the asymptote need not be constant but can indeed be any arbitrary
    curve. Here, we demonstrate a constant capacity switching to a linearly increasing
    capacity:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，![](img/B19630_03_F36.png)的承载能力是时间的函数。这意味着渐近线不必是恒定的，而可以是任何任意曲线。在这里，我们演示了一个恒定承载能力切换到线性增加的承载能力：
- en: '![Figure 3.4 – Carrying capacity may not necessarily be constant](img/Fig_3.4.jpg)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![图3.4 – 承载能力可能不一定保持恒定](img/Fig_3.4.jpg)'
- en: Figure 3.4 – Carrying capacity may not necessarily be constant
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.4 – 承载能力可能不一定保持恒定
- en: 'If we take equation *(5)* and make the same adjustments to ![](img/B19630_03_F37.png)
    and ![](img/B19630_03_F38.png) that we made in equation *(2)*, and also allow
    ![](img/B19630_03_F39.png) to be a function of time, then we arrive at the following
    equation:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们对方程*(5)*中的![](img/B19630_03_F37.png)和![](img/B19630_03_F38.png)进行与方程*(2)*中相同的调整，并允许![](img/B19630_03_F39.png)成为时间的函数，那么我们得到以下方程：
- en: '|  | ![](img/B19630_03_F40.png) | (6) |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '|  | ![](img/B19630_03_F40.png) | (6) |'
- en: 'This is Prophet’s logistic growth model. In the linear model, ![](img/B19630_03_F41.png),
    but in the logistic model, ![](img/B19630_03_F42.png) must take a more complex
    form:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是Prophet的对数增长模型。在线性模型中，![](img/B19630_03_F41.png)，但在对数模型中，![](img/B19630_03_F42.png)必须采取更复杂的形式：
- en: '|  | ![](img/B19630_03_F43.png) | (7) |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '|  | ![](img/B19630_03_F43.png) | (7) |'
- en: 'Although equation *(7)* is more complex than *(4)*, it essentially performs
    the same task: ensuring that, at each changepoint, the endpoints of each segment
    of the trend curve are connected and the line is continuous.'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然方程*(7)*比*(4)*更复杂，但它本质上执行相同的任务：确保在每个变化点，趋势曲线的每个区间的端点相连，并且线条是连续的。
- en: The growth term, ![](img/B19630_03_F44.png), is the most complicated of the
    full Prophet model. It gets easier from here! Now, we’ll move on to understand
    ![](img/B19630_03_F45.png), the seasonality term.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 增长项，![](img/B19630_03_F44.png)，是完整Prophet模型中最复杂的部分。从这里开始会变得简单！现在，我们将继续了解![](img/B19630_03_F45.png)，即季节性项。
- en: Seasonality
  id: totrans-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 季节性
- en: Time series data often exhibits periodicity, especially with business data,
    where there are often yearly cycles, weekly cycles, and daily cycles. Prophet
    can accept an unlimited number of such periodic components in its seasonality
    term, ![](img/B19630_03_F45.png), from equation *(1)*.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 时间序列数据通常表现出周期性，尤其是在商业数据中，其中经常存在年度周期、周周期和日周期。Prophet可以在其季节性项中接受无限多个这样的周期性组件，如图*(1)*所示。
- en: 'Prophet models this term with a Fourier series. A Fourier series is simply
    a summation of multiple sinusoidal curves. The shape of this final curve is determined
    by the amplitude, phase, and period of each of the component curves. A Fourier
    series can include an infinite number of components, and can, therefore, be made
    to fit almost any arbitrary periodic function, as demonstrated here:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: Prophet使用傅里叶级数来模拟这个术语。傅里叶级数简单地说就是多个正弦曲线的总和。这个最终曲线的形状由每个组成曲线的振幅、相位和周期决定。傅里叶级数可以包含无限多个组件，因此可以拟合几乎任何任意的周期函数，如下所示：
- en: '![Figure 3.5 – The sum of four sinusoidal curves demonstrates a Fourier series](img/Fig_3.5.jpg)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![图3.5 – 四个正弦曲线的总和演示了傅里叶级数](img/Fig_3.5.jpg)'
- en: Figure 3.5 – The sum of four sinusoidal curves demonstrates a Fourier series
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.5 – 四个正弦曲线的总和演示了傅里叶级数
- en: 'In Prophet, this summation takes the following form:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 在Prophet中，这个求和采用以下形式：
- en: '|  | ![](img/B19630_03_F47.png) | (8) |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
  zh: '|  | ![img/B19630_03_F47.png] | (8) |'
- en: This is the sum of ![](img/B19630_03_F48.png) different curves, referred to
    as the **Fourier order**. In this formula, ![](img/B19630_03_F49.png) is the regular
    period of the time series (for example, 365.25 for yearly data, 7 for weekly data,
    or 1 for daily data, when the time series is scaled in days). Part of Prophet’s
    fitting process is to calculate values for ![](img/B19630_03_F50.png) and ![](img/B19630_03_F51.png),
    which are merely fitting parameters.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 这是![img/B19630_03_F48.png]个不同曲线的总和，被称为**傅里叶阶数**。在这个公式中，![img/B19630_03_F49.png]是时间序列的常规周期（例如，年度数据的365.25，周数据的7，或日数据的1，当时间序列按天数缩放时）。Prophet的拟合过程的一部分是计算![img/B19630_03_F50.png]和![img/B19630_03_F51.png]的值，这些仅仅是拟合参数。
- en: Holding ![](img/B19630_03_F52.png) to be relatively low essentially applies
    a low-pass filter on the data and prohibits the model’s ability to overfit the
    data. Increasing ![](img/B19630_03_F53.png), however, is sometimes desirable,
    as it allows for the fitting of seasonality patterns, which change more quickly.
    Prophet’s developers have taken this into account and carefully chosen default
    values that seem to perform quite well. We’ll look more closely at this in [*Chapter
    5*](B19630_05.xhtml#_idTextAnchor254), *Working* *with Seasonality*.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 保持![img/B19630_03_F52.png]相对较低实际上是在数据上应用一个低通滤波器，并禁止模型过度拟合数据的能力。然而，增加![img/B19630_03_F53.png]有时是可取的，因为它允许拟合变化更快的季节性模式。Prophet的开发者已经考虑到这一点，并仔细选择了似乎表现相当好的默认值。我们将在[*第五章*](B19630_05.xhtml#_idTextAnchor254)，*处理季节性*中更详细地探讨这一点。
- en: Holidays
  id: totrans-73
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 假日
- en: The final component we need to take a look at in order to understand Prophet’s
    full forecast model is the holiday component. This is possibly the simplest component
    to understand. The analyst provides Prophet (or loads a default list) with a set
    of holiday names and dates, including future dates, and Prophet estimates the
    deviation from the trend and seasonality forecast during previous dates and then
    applies that same change to future dates.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 为了理解Prophet的完整预测模型，我们需要查看的最后一个组件是假日组件。这可能是最容易理解的组件。分析师向Prophet（或加载默认列表）提供一组假日名称和日期，包括未来的日期，然后Prophet估计在之前日期的趋势和季节性预测中的偏差，并将相同的改变应用到未来日期。
- en: 'This is mathematically represented with a matrix of regressors, ![](img/B19630_03_F54.png):'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 这可以用回归者的矩阵来数学表示，![img/B19630_03_F54.png]：
- en: '|  | ![](img/B19630_03_F55.png) | (9) |'
  id: totrans-76
  prefs: []
  type: TYPE_TB
  zh: '|  | ![img/B19630_03_F55.png] | (9) |'
- en: 'In this equation, ![](img/B19630_03_F56.png) is the set of past and future
    dates for each holiday, ![](img/B19630_03_F57.png). The change in the forecast
    due to holiday ![](img/B19630_03_F58.png) is captured in the ![](img/B19630_03_F59.png)
    parameter. This allows the entire holiday component to be expressed as the product
    of the ![](img/B19630_03_F60.png) matrix and the ![](img/B19630_03_F61.png) vector:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个方程中，![img/B19630_03_F56.png]是每个假日的过去和未来日期集合，![img/B19630_03_F57.png]。由于假日![img/B19630_03_F58.png]的预测变化被捕捉在![img/B19630_03_F59.png]参数中。这使得整个假日组件可以表示为![img/B19630_03_F60.png]矩阵和![img/B19630_03_F61.png]向量的乘积：
- en: '|  | ![](img/B19630_03_F62.jpg) | (10) |'
  id: totrans-78
  prefs: []
  type: TYPE_TB
  zh: '|  | ![img/B19630_03_F62.jpg] | (10) |'
- en: And with that, Prophet has everything it needs to build its forecast! It simply
    sums the ![](img/B19630_03_F63.png) growth component, the ![](img/B19630_03_F64.png)
    seasonality component, and the ![](img/B19630_03_F65.png) holiday component to
    provide its final forecast, ![](img/B19630_03_F66.png).
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 有了这些，Prophet拥有了构建预测所需的一切！它只需简单地将![img/B19630_03_F63.png](img/B19630_03_F63.png)增长成分、![img/B19630_03_F64.png](img/B19630_03_F64.png)季节性成分和![img/B19630_03_F65.png](img/B19630_03_F65.png)假日成分相加，以提供最终的预测![img/B19630_03_F66.png](img/B19630_03_F66.png)。
- en: Summary
  id: totrans-80
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: 'This chapter introduced you to the development of Prophet, from the idea’s
    genesis up to the theoretical formulation. This chapter provided, however, just
    a summary of the mathematical equations that describe how Prophet works. For full
    details, please refer to the original paper describing Prophet: *Taylor, S. J.
    and Letham, B. 2017\. Forecasting at scale. PeerJ Preprints* *5:e3190v2* ([https://doi.org/10.7287/peerj.preprints.3190v2](https://doi.org/10.7287/peerj.preprints.3190v2)).'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 本章介绍了Prophet的发展历程，从想法的起源到理论公式的形成。然而，本章仅提供了描述Prophet工作原理的数学公式的摘要。对于完整细节，请参阅描述Prophet的原始论文：*Taylor,
    S. J. 和 Letham, B. 2017\. 规模化预测. PeerJ Preprints* *5:e3190v2* ([https://doi.org/10.7287/peerj.preprints.3190v2](https://doi.org/10.7287/peerj.preprints.3190v2))。
- en: Now that you understand how Prophet works, the remainder of this book will be
    spent demonstrating all of the parameters and additional features available that
    allow you to have greater control over your forecasts. In the next chapter, we’ll
    take a look at non-daily data to see what precautions and adjustments need to
    be taken, thereby preparing us to handle datasets with different time granularities.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经了解了Prophet的工作原理，本书的剩余部分将用于展示所有可用的参数和附加功能，这些功能可以帮助你更好地控制你的预测。在下一章中，我们将探讨非每日数据，看看需要采取哪些预防措施和调整，从而为我们处理具有不同时间粒度的数据集做好准备。
- en: 'Part 2: Seasonality, Tuning, and Advanced Features'
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第二部分：季节性、调整和高级功能
- en: This section will teach you about the advanced features of Prophet. Every adjustable
    parameter will be explored with examples and a discussion of why and how to modify
    it. Each chapter builds on the previous chapters to add more and more complexity
    and power to the forecasting models. By the end of the section, you will be able
    to build models that harness the full capability of Prophet’s forecasting toolset.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 本节将介绍Prophet的高级功能。每个可调整的参数都将通过示例和讨论其修改原因和方式来探索。每一章都是在前一章的基础上构建的，以增加预测模型的复杂性和功能。到本节结束时，你将能够构建利用Prophet预测工具集全部功能的模型。
- en: 'This section comprises the following chapters:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 本节包括以下章节：
- en: '[*Chapter 4*](B19630_04.xhtml#_idTextAnchor197), *Handing Non-Daily Data*'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第4章*](B19630_04.xhtml#_idTextAnchor197), *处理非每日数据*'
- en: '[*Chapter 5*](B19630_05.xhtml#_idTextAnchor254), *Working with Seasonality*'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第5章*](B19630_05.xhtml#_idTextAnchor254), *处理季节性*'
- en: '[*Chapter 6*](B19630_06.xhtml#_idTextAnchor375), *Forecasting Holiday Effects*'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第6章*](B19630_06.xhtml#_idTextAnchor375), *假日效应预测*'
- en: '[*Chapter 7*](B19630_07.xhtml#_idTextAnchor453), *Controlling Growth Modes*'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第7章*](B19630_07.xhtml#_idTextAnchor453), *控制增长模式*'
- en: '[*Chapter 8*](B19630_08.xhtml#_idTextAnchor537), *Influencing Trend Changepoints*'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第8章*](B19630_08.xhtml#_idTextAnchor537), *影响趋势变化点*'
- en: '[*Chapter 9*](B19630_09.xhtml#_idTextAnchor599), *Including Additional Regressors*'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第9章*](B19630_09.xhtml#_idTextAnchor599), *包含额外的回归因子*'
- en: '[*Chapter 10*](B19630_10.xhtml#_idTextAnchor641), *Accounting for Outliers
    and Special Events*'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第10章*](B19630_10.xhtml#_idTextAnchor641), *考虑异常值和特殊事件*'
- en: '[*Chapter 11*](B19630_11.xhtml#_idTextAnchor728), *Managing Uncertainty Intervals*'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第11章*](B19630_11.xhtml#_idTextAnchor728), *管理不确定性区间*'
