["```py\n    from __future__ import print_function\n    ```", "```py\n    import boto3\n    ```", "```py\n    def lambda_handler(event, context):\n    ```", "```py\n        print(\"========lambda_handler started=======\")\n    ```", "```py\n        # read the bucket name (key) from the event\n    ```", "```py\n        name_of_the_bucket=event['Records'][0]['s3']['bucket']\n    ```", "```py\n    ['name']\n    ```", "```py\n        # read the object from the event\n    ```", "```py\n        name_of_the_photo=event['Records'][0]['s3']['object']['key']\n    ```", "```py\n        detect_labels(name_of_the_photo,name_of_the_bucket)\n    ```", "```py\n        print(\"Labels detected Successfully\")\n    ```", "```py\n    def detect_labels(photo, bucket):\n    ```", "```py\n        client=boto3.client('rekognition')\n    ```", "```py\n     response=client.detect_labels(Image={'S3Object':{'Bucket':bucket,'Name':photo}})\n    ```", "```py\n        print('Detected labels for ' + photo)\n    ```", "```py\n        print('==============================')\n    ```", "```py\n        for label in response['Labels']:\n    ```", "```py\n            print (\"Label: \" + label['Name'])\n    ```", "```py\n            print (\"Confidence: \" +\n    ```", "```py\n    str(label['Confidence']))\n    ```", "```py\n            print (\"Instances:\")\n    ```", "```py\n            for instance in label['Instances']:\n    ```", "```py\n                print (\"  Bounding box\")\n    ```", "```py\n                print (\"Top:\n    ```", "```py\n    \"+str(instance['BoundingBox']['Top']))\n    ```", "```py\n                print (\"Left: \\\n    ```", "```py\n    \"+str(instance['BoundingBox']['Left']))\n    ```", "```py\n                print (\"Width: \\\n    ```", "```py\n    \"+str(instance['BoundingBox']['Width']))\n    ```", "```py\n                print (\"Height: \\\n    ```", "```py\n    \"+str(instance['BoundingBox']['Height']))\n    ```", "```py\n                print (\"Confidence:\n    ```", "```py\n    \"+str(instance['Confidence']))\n    ```", "```py\n                print()\n    ```", "```py\n            print (\"Parents:\")\n    ```", "```py\n            for parent in label['Parents']:\n    ```", "```py\n                print (\"   \" + parent['Name'])\n    ```", "```py\n            print (\"----------\")\n    ```", "```py\n            print('==============================')\n    ```", "```py\n        return response\n    ```", "```py\n    File Content:  Hello Everyone, Welcome to Dublin. How\n    ```", "```py\n    are you doing today?\n    ```", "```py\n    {'ResponseMetadata': {'RequestId': '74ca4afd-5844-\n    ```", "```py\n    47d8-9664-3660a26965e4', 'HTTPStatusCode': 200,\n    ```", "```py\n    'HTTPHeaders': {'x-amzn-requestid': '74ca4afd-5844-\n    ```", "```py\n    47d8-9664-3660a26965e4', 'content-type':\n    ```", "```py\n    'application/json', 'content-length': '471', 'date':\n    ```", "```py\n    'Thu, 24 Sep 2020 18:50:57 GMT'}, 'RetryAttempts': 0},\n    ```", "```py\n    'SynthesisTask': {'Engine': 'standard', 'TaskId':\n    ```", "```py\n    '57548c6b-d21a-4885-962f-450952569dc7', 'TaskStatus':\n    ```", "```py\n    'scheduled', 'OutputUri': 'https://s3.us-east-\n    ```", "```py\n    1.amazonaws.com/polly-test-baba/output-\n    ```", "```py\n    audio/.57548c6b-d21a-4885-962f-450952569dc7.mp3',\n    ```", "```py\n    'CreationTime': datetime.datetime(2020, 9, 24, 18, 50,\n    ```", "```py\n    57, 769000, tzinfo=tzlocal()), 'RequestCharacters':\n    ```", "```py\n    59, 'OutputFormat': 'mp3', 'TextType': 'text',\n    ```", "```py\n    'VoiceId': 'Aditi', 'LanguageCode': 'en-GB'}}\n    ```", "```py\nTranslation of the text from the Image :\n```", "```py\n{'PREVENCION DEL COVID-19': 'PREVENTION OF COVID-19',\n```", "```py\n'LAVATE LAS MANOS EVITA EL CONTACTO NO TE TOQUES oJOs,\n```", "```py\nEVITA': 'WASHE HANDS AVOID CONTACT DO NOT TOUCH EYES',\n```", "```py\n'60 SEGUNDOS CON CONTAGIADOS NARIZ O BOCA\n```", "```py\nAGLOMERACIONES': '60 SECONDS WITH CONTAGIOUS NOSE OR\n```", "```py\nMOUTH AGGLOMERATIONS', 'NO COMPARTAS NO VIAJES A MENOS\n```", "```py\nSI TE PONES ENFERMO': \"DON'T SHARE NOT TRAVEL UNLESS\n```", "```py\nYOU GET SICK\", 'CUBIERTOS NI COMIDA QUE SEA NECESARIO\n```", "```py\nBUSCA AYUDA MEDICA': 'CUTLERY OR FOOD NEEDED SEEK\n```", "```py\nMEDICAL HELP'}\n```", "```py\n    import boto3\n    ```", "```py\n    import time\n    ```", "```py\n    from trp import Document\n    ```", "```py\n    textract_client=boto3.client('textract')\n    ```", "```py\n    def lambda_handler(event, context):\n    ```", "```py\n        print(\"- - - Amazon Textract Demo - - -\")\n    ```", "```py\n        # read the bucket name from the event\n    ```", "```py\n        name_of_the_bucket=event['Records'][0]['s3']['bucket'] ['name']\n    ```", "```py\n        # read the object from the event\n    ```", "```py\n        name_of_the_doc=event['Records'][0]['s3']['object']['key']\n    ```", "```py\n        print(name_of_the_bucket)\n    ```", "```py\n        print(name_of_the_doc)\n    ```", "```py\n        response =\n    ```", "```py\n    textract_client.analyze_document(Document={'S3Object':\n    ```", "```py\n    {'Bucket': name_of_the_bucket,'Name':\n    ```", "```py\n    name_of_the_doc}},FeatureTypes=[\"TABLES\",\"FORMS\"])\n    ```", "```py\n        print(str(response))\n    ```", "```py\n        doc=Document(response)\n    ```", "```py\n        for page in doc.pages:\n    ```", "```py\n            # Print tables\n    ```", "```py\n            for table in page.tables:\n    ```", "```py\n                for r, row in enumerate(table.rows):\n    ```", "```py\n                    for c, cell in enumerate(row.cells):\n    ```", "```py\n                        print(\"Table[{}][{}] =\n    ```", "```py\n    {}\".format(r, c, cell.text))\n    ```", "```py\n        for page in doc.pages:\n    ```", "```py\n            # Print fields\n    ```", "```py\n            print(\"Fields:\")\n    ```", "```py\n            for field in page.form.fields:\n    ```", "```py\n                print(\"Key: {}, Value:\n    ```", "```py\n    {}\".format(field.key, field.value))\n    ```"]