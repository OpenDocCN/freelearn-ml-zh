- en: Chapter 1. Regression – The Workhorse of Data Science
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 1 章。回归 – 数据科学的工作马
- en: Welcome to this presentation on the workhorse of data science, linear regression,
    and its related family of linear models.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 欢迎参加关于数据科学工作马——线性回归及其相关线性模型系列的介绍。
- en: 'Nowadays, interconnectivity and data explosion are realities that open a world
    of new opportunities for every business that can read and interpret data in real
    time. Everything is facilitating the production and diffusion of data: the omnipresent
    Internet diffused both at home and at work, an army of electronic devices in the
    pockets of large portions of the population, and the pervasive presence of software
    producing data about every process and event. So much data is generated daily
    that humans cannot deal with it because of its volume, velocity, and variety.
    Thus, machine learning and AI are on the rise.'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，互联互通和数据爆炸是现实，为能够实时读取和解释数据的企业打开了新的机会世界。一切都在促进数据和信息的产生和传播：无处不在的互联网在家中和工作中扩散，大量电子设备装在大量人口的口袋里，以及软件无处不在地产生关于每个过程和事件的数据。每天产生如此多的数据，人类由于数据量、速度和种类而无法处理。因此，机器学习和人工智能正在兴起。
- en: Coming from a long and glorious past in the field of statistics and econometrics,
    linear regression, and its derived methods, can provide you with a simple, reliable,
    and effective tool to learn from data and act on it. If carefully trained with
    the right data, linear methods can compete well against the most complex and fresh
    AI technologies, offering you unbeatable ease of implementation and scalability
    for increasingly large problems.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 线性回归及其衍生方法，源自统计学和计量经济学领域的漫长而辉煌的历史，可以为你提供一种简单、可靠和有效的工具，从数据中学习并采取行动。如果用正确的数据仔细训练，线性方法可以很好地与最复杂和最新的
    AI 技术竞争，为你提供在日益增大的问题中难以匹敌的实现和可扩展性。
- en: 'In this chapter, we will explain:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将解释：
- en: Why linear models can be helpful as models to be evaluated in a data science
    pipeline or as a shortcut for the immediate development of a scalable minimum
    viable product
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为什么线性模型可以作为数据科学管道中要评估的模型，或者作为立即开发可扩展的最小可行产品的捷径
- en: Some quick indications for installing Python and setting it up for data science
    tasks
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装 Python 和将其设置为数据科学任务的快速指南
- en: The necessary modules for implementing linear models in Python
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Python 中实现线性模型所需的模块
- en: Regression analysis and data science
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 回归分析和数据科学
- en: Imagine you are a developer hastily working on a very cool application that
    is going to serve thousands of customers using your company's website everyday.
    Using the available information about customers in your data warehouse, your application
    is expected to promptly provide a pretty smart and not-so-obvious answer. The
    answer unfortunately cannot easily be programmatically predefined, and thus will
    require you to adopt a *learning-from-data* approach, typical of data science
    or predictive analytics.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下，你是一名开发者，正在匆忙地开发一个非常酷的应用程序，这个应用程序将每天为数千名客户服务，使用你公司的网站。根据你在数据仓库中关于客户的信息，你的应用程序预计将迅速提供一个非常聪明且不太明显的答案。不幸的是，这个答案不能很容易地通过编程预定义，因此你需要采用一种典型的数据科学或预测分析的*从数据中学习*的方法。
- en: 'In this day and age, such applications are quite frequently found assisting
    numerous successful ventures on the Web, for instance:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个时代，这样的应用程序非常频繁地被发现在协助众多成功的网络企业中，例如：
- en: In the advertising business, an application delivering targeted advertisements
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在广告业务中，一个提供定向广告的应用程序
- en: In e-commerce, a batch application filtering customers to make more relevant
    commercial offers or an online app recommending products to buy on the basis of
    ephemeral data such as navigation records
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在电子商务中，一个批量应用程序筛选客户以提供更相关的商业报价，或者一个基于临时数据（如导航记录）的在线应用程序推荐购买的产品
- en: In the credit or insurance business, an application selecting whether to proceed
    with online inquiries from users, basing its judgment on their credit rating and
    past relationship with the company
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在信贷或保险业务中，一个应用程序根据用户的信用评级和与公司的历史关系来决定是否进行在线查询
- en: There are numerous other possible examples, given the constantly growing number
    of use cases about machine learning applied to business problems. The core idea
    of all these applications is that you don't need to program how your application
    should behave, but you just set some desired behaviors by providing useful examples.
    The application will learn by itself what to do in any circumstance.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在机器学习应用于商业问题的用例不断增长的背景下，有无数的其它可能例子。所有这些应用的核心思想是，你不需要编程来定义你的应用程序应该如何行为，你只需通过提供有用的例子来设定一些期望的行为。应用程序会自行学习在任何情况下应该做什么。
- en: After you are clear about the purpose of your application and decide to use
    the learning-from-data approach, you are confident that you don't have to reinvent
    the wheel. Therefore, you jump into reading tutorials and documentation about
    data science and machine learning solutions applied to problems similar to yours
    (they could be papers, online blogs, or books talking about data science, machine
    learning, statistical learning, and predictive analytics).
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在你清楚你应用程序的目的并决定使用基于数据的学习方法之后，你确信你不需要重新发明轮子。因此，你开始阅读关于数据科学和机器学习解决方案的教程和文档，这些解决方案应用于与你类似的问题（它们可能是关于数据科学、机器学习、统计学习和预测分析的论文、在线博客或书籍）。
- en: After reading a few pages, you will surely be exposed to the wonders of many
    complex machine learning algorithms you likely have never heard of before.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在阅读了几页之后，你肯定会接触到许多复杂机器学习算法的奇迹，这些算法你之前可能从未听说过。
- en: However, you start being puzzled. It isn't simply because of the underlying
    complex mathematics; it is mostly because of the large amount of possible solutions
    based on very different techniques. You also often notice the complete lack of
    any discussion about how to deploy such algorithms in a production environment
    and whether they would scale up to real-time server requests.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，你开始感到困惑。这并不仅仅是因为其背后的复杂数学；更多的是因为基于非常不同的技术的大量可能的解决方案。你也经常注意到，关于如何在生产环境中部署这些算法以及它们是否能够扩展到实时服务器请求的讨论完全缺失。
- en: At this point, you are completely unsure where should you start. This is when
    this book will come to your rescue.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一点上，你完全不确定应该从哪里开始。这就是这本书将帮助你的时候。
- en: Let's start from the beginning.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从一开始。
- en: Exploring the promise of data science
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 探索数据科学的承诺
- en: Given a more interconnected world and the growing availability of data, data
    science has become quite a hot topic in recent years.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在一个更加互联互通的世界和数据的日益可用性增长下，数据科学在近年来已经成为一个非常热门的话题。
- en: 'In the past, analytical solutions had strong constrains: the availability of
    data. Useful data was generally scarce and always costly to obtain and store.
    Given the current data explosion, now abundant and cheaper information at hand
    makes learning from data a reality, thus opening the doors to a wide range of
    predictive applications that were simply impractical before.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在过去，分析解决方案有很强的约束：数据的可用性。有用的数据通常很少，并且总是昂贵且难以获取和存储。鉴于当前的数据爆炸，现在我们手头有大量且便宜的信息，这使得从数据中学习成为现实，从而打开了之前简单不切实际的广泛预测应用的大门。
- en: In addition, being in an interconnected world, most of your customers are now
    reachable (and susceptible of being influenced) through the Internet or through
    mobile devices. This simply means that being smart in developing automated solutions
    based on data and its predictive powers can directly and almost instantaneously
    affect how your business works and performs. Being able to reach your customers
    instantly everywhere, 24 hours a day, 365 days a year, enables your company to
    turn data into profits, if you know the right things to be done. In the 21st century,
    *data is the new oil of the digital economy,* as a memorable and still undisputed
    article on Wired stated not too long ago ([http://www.wired.com/insights/2014/07/data-new-oil-digital-economy/](http://www.wired.com/insights/2014/07/data-new-oil-digital-economy/)).However,
    as with oil, data has to be extracted, refined, and distributed.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，作为一个互联互通的世界的一部分，你的大多数客户现在都可以通过互联网或通过移动设备接触到（并且容易受到影响）。这仅仅意味着，在基于数据和其预测能力开发智能自动化解决方案方面做得聪明，可以直接并且几乎瞬间影响你的业务运作和表现。能够随时随地即时接触到你的客户，每天24小时，每年365天，如果你的公司知道该做什么，就能将数据转化为利润。在21世纪，正如不久前一篇令人难忘且尚未被反驳的文章在《连线》杂志上所说，“*数据是数字经济的新石油*”（[http://www.wired.com/insights/2014/07/data-new-oil-digital-economy/](http://www.wired.com/insights/2014/07/data-new-oil-digital-economy/)）。然而，就像石油一样，数据必须被提取、精炼和分配。
- en: Being at the intersection of substantive expertise (knowing how to do business
    and make profits), machine learning (learning from data), and hacking skills (integrating
    various systems and data sources), data science promises to find the mix of tools
    to leverage your available data and turn it into profits.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 处于实质性专业知识（知道如何经营业务和盈利）、机器学习（从数据中学习）和黑客技能（整合各种系统和数据源）的交汇点，数据科学承诺找到利用你可用数据的工具组合，并将其转化为利润。
- en: However, there's another side to the coin.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，硬币的另一面也有其存在。
- en: The challenge
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 挑战
- en: 'Unfortunately, there are quite a few challenging issues in applying data science
    to a business problem:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，将数据科学应用于商业问题中存在一些挑战性的问题：
- en: Being able to process unstructured data or data that has been modeled for completely
    different purposes
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 能够处理非结构化数据或为完全不同的目的建模的数据
- en: Figuring out how to extract such data from heterogeneous sources and integrate
    it in a timely manner
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确定如何从异构源中提取此类数据并在及时的方式下整合它
- en: Learning (from data) some effective general rules allowing you to correctly
    predict your problem
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从数据中学习一些有效的通用规则，使你能够正确预测你的问题
- en: Understanding what has been learned and being able to effectively communicate
    your solution to a non-technical managerial audience
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解所学习的内容，并能够有效地向非技术性的管理层传达你的解决方案
- en: Scaling to real-time predictions given big data inputs
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在大数据输入下进行实时预测的扩展
- en: The first two points are mainly problems that require data manipulation skills,
    but from the third point onwards, we really need a data science approach to solve
    the problem.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 前两点主要涉及需要数据操作技能的问题，但从第三点开始，我们真正需要一种数据科学方法来解决问题。
- en: 'The data science approach, based on machine learning, requires careful testing
    of different algorithms, estimating their predictive capabilities with respect
    to the problem, and finally selecting the best one to implement. This is exactly
    what the science in *data science* means: coming up with various different hypotheses
    and experimenting with them to find the one that best fits the problem and allows
    generalization of the results.'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 基于机器学习的数据科学方法需要仔细测试不同的算法，评估它们在问题上的预测能力，并最终选择最佳的一个来实施。这正是“数据科学”中的科学意义：提出各种不同的假设并对其进行实验，以找到最适合问题并能推广结果的那个。
- en: Unfortunately, there is no white unicorn in data science; there is no single
    hypothesis that can successfully fit all the available problems. In other words,
    we say that there is *no free lunch* (the name of a famous theorem from the optimization
    domain), meaning that there are no algorithms or procedures in data science that
    can always assure you the best results; each algorithm can be less or more successful,
    depending on the problem.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，在数据科学中并没有什么“白乌托邦”；没有单一假设能够成功适应所有的问题。换句话说，我们说“没有免费的午餐”（这是来自优化领域的一个著名定理的名称），这意味着在数据科学中没有算法或程序能够始终保证你获得最佳结果；每个算法的成功程度可能有所不同，这取决于问题。
- en: Data comes in all shapes and forms and reflects the complexity of the world
    we live in. The existing algorithms should have certain sophistication in order
    to deal with the complexity of the world, but don't forget that they are just
    models. Models are nothing but simplifications and approximations of the system
    of rules and laws we want to successfully represent and replicate for predictive
    reasons since *you can control only what you can measure*, as Lord Kelvin said.
    An approximation should be evaluated based on its effectiveness, and the efficacy
    of learning algorithms applied to real problems is dictated by so many factors
    (type of problem, data quality, data quantity, and so on) that you really cannot
    tell in advance what will work and what won't. Under such premises, you always
    want to test the simpler solutions first, and follow the principle of *Occam's
    razor* as much as possible, favoring simpler models against more complex ones
    when their performances are comparable.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 数据以各种形状和形式出现，反映了我们所处世界的复杂性。现有的算法应该具有一定的复杂性以处理世界的复杂性，但不要忘记，它们只是模型。模型不过是对我们想要成功表示和复制的规则和法律系统的简化和近似，因为正如开尔文勋爵所说，“你只能控制你能测量的东西”。近似应该根据其有效性来评估，并且应用于实际问题的学习算法的有效性由许多因素（问题类型、数据质量、数据数量等）决定，以至于你真的无法事先知道什么会起作用，什么不会。在这样的前提下，你总是想先测试简单的解决方案，并尽可能遵循*奥卡姆剃刀原则*，在性能相当的情况下，倾向于更简单的模型而不是更复杂的模型。
- en: Sometimes, even when the situation allows the introduction of more complex and
    more performant models, other factors may still favor the adoption of simpler
    yet less performant solutions. In fact, the best model is not always necessarily
    the most performant one. Depending on the problem and the context of application,
    issues such as ease of implementation in production systems, scalability to growing
    volumes of data, and performance in live settings, may deeply redefine how important
    the role of predictive performance is in the choice of the best solution.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，即使情况允许引入更复杂、性能更好的模型，其他因素仍可能倾向于采用更简单但性能较差的解决方案。事实上，最佳模型并不总是性能最佳的模型。根据问题和应用的上下文，诸如在生产线中实施简便性、可扩展到增长的数据量以及在实际环境中的性能等问题，可能会深刻地重新定义预测性能在选择最佳解决方案中的重要性。
- en: In such situations, it is still advisable to use simpler, well-tuned models
    or easily explainable ones, if they provide an acceptable solution to the problem.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，如果它们能提供对问题的可接受解决方案，仍然建议使用更简单、调优良好的模型或易于解释的模型。
- en: The linear models
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 线性模型
- en: In your initial overview of the problem of what machine learning algorithm to
    use, you may have also stumbled upon linear models, namely linear regression and
    logistic regression. They both have been presented as basic tools, building blocks
    of a more sophisticated knowledge that you should achieve before hoping to obtain
    the best results.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在你最初对使用哪种机器学习算法的问题进行概述时，你可能也偶然发现了线性模型，即线性回归和逻辑回归。它们都被作为基本工具、更复杂知识体系的基础块来介绍，在你希望获得最佳结果之前，你应该掌握这些知识。
- en: Linear models have been known and studied by scholars and practitioners for
    a long time. Before being promptly adopted into data science, linear models were
    always among the basic statistical models to start with in predictive analytics
    and data mining. They also have been a prominent and relevant tool part of the
    body of knowledge of statistics, economics, and many other quantitative subjects.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 线性模型已经被学者和实践者所熟知和研究很长时间。在迅速被纳入数据科学之前，线性模型一直是预测分析和数据挖掘中首先考虑的基本统计模型。它们也是统计学、经济学以及许多其他定量学科知识体系中的突出和相关的工具。
- en: By a simple check (via a query from an online bookstore, from a library, or
    just from Google Books—[https://books.google.com/](https://books.google.com/)),
    you will discover there is quite a vast availability of publications about linear
    regression. There is also quite an abundance of publications about logistic regression,
    and about other different variants of the regression algorithm, the so-called
    generalized linear models, adapted in their formulation to face and solve more
    complex problems.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 通过简单的检查（通过在线书店的查询、图书馆或直接通过谷歌图书——[https://books.google.com/](https://books.google.com/)），你会发现关于线性回归的出版物相当丰富。关于逻辑回归的出版物也相当丰富，以及关于其他不同变种的回归算法，所谓的广义线性模型，它们的公式被调整以面对和解决更复杂的问题。
- en: 'As practitioners ourselves, we are well aware of the limits of linear models.
    However, we cannot ignore their strong positive key points: simplicity and efficacy.
    We also cannot ignore that linear models are indeed among the most used learning
    algorithms in applied data science, making them real workhorses in data analysis
    (in business as well as in many scientific domains).'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 作为实践者，我们深知线性模型的局限性。然而，我们不能忽视它们的强大正面关键点：简单和高效。我们也不能忽视线性模型确实是应用数据科学中最常用的学习算法之一，使它们成为数据分析（在商业以及许多科学领域）中的真正工作马。
- en: Far from being the best tool at hand, they are always a good starting point
    in a data science path of discovery because they don't require hacking with too
    many parameters and they are very fast to train. Thus, linear models can point
    out the predictive power of your data at hand, identify the most important variables,
    and allow you to quickly test useful transformations of your data before applying
    more complex algorithms.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 它们远非手头最好的工具，但它们始终是数据科学发现之路上的一个良好起点，因为它们不需要对太多参数进行黑客攻击，而且训练速度非常快。因此，线性模型可以指出你手头数据的预测能力，识别最重要的变量，并允许你在应用更复杂的算法之前快速测试数据的有用转换。
- en: In the course of this book, you will learn how to build prototypes based on
    linear regression models, keeping your data treatment and handling pipeline prompt
    for possible development reiterations of the initial linear model into more powerful
    and complex ones, such as neural networks or support vector machines.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书的过程中，你将学习如何基于线性回归模型构建原型，同时保持你的数据处理和操作流程对初始线性模型可能的开发迭代到更强大和复杂的模型（如神经网络或支持向量机）的适应性。
- en: Moreover, you will learn that you maybe don't even need more complex models,
    sometimes. If you are really working with lots of data, after having certain volumes
    of input data feed into a model, using simple or complex algorithms won't matter
    all that much anymore. They will all perform to the best of their capabilities.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，你还将了解到有时你可能甚至不需要更复杂的模型。如果你真的在处理大量数据，在将一定量的输入数据输入到模型之后，使用简单或复杂的算法并不会那么重要了。它们都会发挥出它们最佳的能力。
- en: The capability of big data to make even simpler models as effective as a complex
    one has been pointed out by a famous paper co-authored by Alon Halevy, Peter Norvig,
    and Fernando Pereira from Google about *The Unreasonable Effectiveness of Data*
    ([http://static.googleusercontent.com/media/research.google.com/it//pubs/archive/35179.pdf](http://static.googleusercontent.com/media/research.google.com/it//pubs/archive/35179.pdf)).
    Before that, the idea was already been known because of a less popular scientific
    paper by Microsoft researchers, Michele Banko and Eric Brill, *Scaling to Very
    Very Large Corpora for Natural Language Disambiguation* ([http://ucrel.lancs.ac.uk/acl/P/P01/P01-1005.pdf](http://ucrel.lancs.ac.uk/acl/P/P01/P01-1005.pdf)).
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 大数据使简单的模型也能像复杂模型一样有效的能力，已经被Alon Halevy、Peter Norvig和Fernando Pereira共同撰写的一篇著名论文指出，这篇论文是关于*数据的不可思议有效性*的([http://static.googleusercontent.com/media/research.google.com/it//pubs/archive/35179.pdf](http://static.googleusercontent.com/media/research.google.com/it//pubs/archive/35179.pdf))。在此之前，这个想法已经因为微软研究人员Michele
    Banko和Eric Brill的一篇不太知名的论文而为人所知，这篇论文是关于*针对自然语言消歧的非常非常大的语料库的扩展*([http://ucrel.lancs.ac.uk/acl/P/P01/P01-1005.pdf](http://ucrel.lancs.ac.uk/acl/P/P01/P01-1005.pdf))。
- en: In simple and short words, the algorithm with more data wins most of the time
    over other algorithms (no matter their complexity); in such a case, it could well
    be a linear model.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 简而言之，拥有更多数据的算法通常比其他算法（无论它们的复杂性如何）更胜一筹；在这种情况下，它可能就是一个线性模型。
- en: However, linear models can be also helpful downstream in the data science process
    and not just upstream. As they are fast to train, they are also fast to be deployed
    and you do not need coding complex algorithms to do so, allowing you to write
    the solution in any script or programming language you like, from SQL to JavaScript,
    from Python to C/C++.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，线性模型在数据科学流程的下游也可以很有帮助，而不仅仅是上游。因为它们训练速度快，部署也快，你不需要编写复杂的算法就能做到这一点，允许你使用任何你喜欢的脚本或编程语言来编写解决方案，从SQL到JavaScript，从Python到C/C++。
- en: Given their ease of implementation, it is not even unusual that, after building
    complex solutions using neural networks or ensembles, such solutions are reverse-engineered
    to find a way to make them available in production as a linear model and achieve
    a simpler and scalable implementation.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 由于它们的实现简单，在构建使用神经网络或集成方法复杂解决方案之后，这些解决方案被逆向工程以找到一种方法，使它们可以作为线性模型在生产环境中可用，并实现更简单和可扩展的实现，这并不罕见。
- en: What you are going to find in the book
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 你将在书中找到的内容
- en: In the following pages, the book will explain algorithms as well as their implementation
    in Python to solve practical real-world problems.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的几页中，本书将解释算法以及它们在Python中的实现，以解决实际的现实世界问题。
- en: Linear models can be counted among supervised algorithms, which are those algorithms
    that can formulate predictions on numbers and classes if previously given some
    correct examples to learn from. Thanks to a series of examples, you will immediately
    distinguish if a problem could be tractable using this algorithm or not.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 线性模型可以归类为监督算法，这些算法如果事先给出一些正确的例子来学习，就可以对数字和类别进行预测。得益于一系列示例，你将立即区分一个问题是否可以使用此算法解决。
- en: Given the statistical origins of the linear models family, we cannot neglect
    starting from a statistical perspective. After contextualizing the usage of linear
    models, we will provide all the essential elements for understanding on what statistical
    basis and for what purpose the algorithm has been created. We will use Python
    to evaluate the statistical outputs of a linear model, providing information about
    the different statistical tests used.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 由于线性模型家族的统计起源，我们不能忽视从统计角度开始。在说明线性模型的使用背景后，我们将提供理解算法基于何种统计基础以及为何创建算法的目的的所有基本要素。我们将使用Python评估线性模型的统计输出，提供有关所使用的不同统计测试的信息。
- en: The data science approach is quite practical (to solve a problem for its business
    impact), and many limitations of the statistical versions of linear models actually
    do not apply. However, knowing how the R-squared coefficient works or being able
    to evaluate the residuals of a regression or highlighting the collinearity of
    its predictors, can provide you with more means to obtain good results from your
    work in regression modeling.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 数据科学方法非常实用（为了解决业务影响的问题），线性模型的统计版本的实际许多限制实际上并不适用。然而，了解R平方系数的工作原理或能够评估回归的残差，或突出其预测变量的共线性，可以为你提供更多从回归建模工作中获得良好结果的方法。
- en: Starting from regression models involving a single predictive variable, we will
    move on to consider multiple variables, and from predicting just numbers we will
    progress to estimating the probability of there being a certain class among two
    or many.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 从涉及单个预测变量的回归模型开始，我们将继续考虑多个变量，并且从仅预测数字过渡到估计在两个或多个类别中存在某个类别的概率。
- en: We will particularly emphasize how to prepare data, both the target variable
    (a number or a class) to be predicted and the predictors; variables contributing
    to a correct prediction. No matter what your data is made of, numbers, nouns,
    text, images, or sounds, we will provide you with the method to correctly prepare
    your data and transform it in such a way that your models will perform the best.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将特别强调如何准备数据，包括要预测的目标变量（一个数字或一个类别）和预测变量；有助于正确预测的变量。无论你的数据由什么组成，数字、名词、文本、图像或声音，我们都会为你提供正确准备数据并将其转换的方法，以便你的模型表现最佳。
- en: You will also be introduced to the scientific methodology at the very foundations
    of data science, which will help you understand why the data science approach
    is not just simply theoretical but also quite practical, since it allows obtaining
    models that can really work when applied to real-world problems.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 你还将了解到数据科学最基础的科学研究方法，这将帮助你理解为什么数据科学方法不仅仅是理论上的，而且非常实用，因为它允许获得在实际世界问题中真正可以工作的模型。
- en: The last pages of the book will cover some of the more advanced techniques for
    handling big data and complexity in models. We will also provide you with a few
    examples from relevant business domains and offer plenty of details about how
    to proceed to build a linear model, validate it, and later on implement it into
    a production environment.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 书的最后几页将涵盖处理大数据和模型复杂性的更高级技术。我们还将提供一些来自相关商业领域的示例，并详细说明如何构建线性模型、验证它，以及随后将其实现到生产环境中。
- en: Python for data science
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据科学中的Python
- en: Given the availability of many useful packages for creating linear models and
    given the fact that it is a programming language quite popular among developers,
    Python is our language of choice for all the code presented in this book.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑到有许多用于创建线性模型的实用软件包，以及它是开发者中相当流行的编程语言这一事实，Python是我们在这本书中展示所有代码的首选语言。
- en: Created in 1991 as a general-purpose, interpreted, object-oriented language,
    Python has slowly and steadily conquered the scientific community and grown into
    a mature ecosystem of specialized packages for data processing and analysis. It
    allows you to perform uncountable and fast experiments, easy theory development,
    and prompt deployments of scientific applications.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: Python于1991年作为一种通用、解释型、面向对象的语言创建，它逐渐稳步征服了科学界，并成长为一个成熟的数据处理和分析专用软件包生态系统。它允许你进行无数快速实验，轻松的理论发展，以及科学应用的快速部署。
- en: 'As a developer, you will find using Python interesting for various reasons:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一名开发者，你会发现使用Python有趣的原因有很多：
- en: It offers a large, mature system of packages for data analysis and machine learning.
    It guarantees that you will get all that you need in the course of a data analysis,
    and sometimes even more.
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它提供了一套庞大、成熟的用于数据分析和机器学习的软件包系统。它保证你在数据分析过程中将获得所有你需要的东西，有时甚至更多。
- en: It is very versatile. No matter what your programming background or style is
    (object-oriented or procedural), you will enjoy programming with Python.
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它非常灵活。无论你的编程背景或风格如何（面向对象或过程式），你都会享受用Python编程。
- en: If you don't know it yet, but you know other languages well such as C/C++ or
    Java, it is very simple to learn and use. After you grasp the basics, there's
    no better way to learn more than by immediately starting to code.
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你还不了解它，但熟悉其他语言，如C/C++或Java，学习和使用它非常简单。掌握基础知识后，没有比立即开始编码更好的学习方法了。
- en: It is cross-platform; your solutions will work perfectly and smoothly on Windows,
    Linux, and Mac OS systems. You won't have to worry about portability.
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它是跨平台的；你的解决方案将在Windows、Linux和Mac OS系统上完美且平稳地运行。你不必担心可移植性问题。
- en: Although interpreted, it is undoubtedly fast compared to other mainstream data
    analysis languages such as R and MATLAB (though it is not comparable to C, Java,
    and the newly emerged Julia language).
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 虽然是解释型语言，但与其他主流数据分析语言（如R和MATLAB）相比，它无疑非常快（尽管它不能与C、Java以及新兴的Julia语言相提并论）。
- en: There are packages that allow you to call other platforms, such as R and Julia,
    outsourcing some of the computations to them and improving your script performance.
    Moreover, there are also static compilers such as Cython or just-in-time compilers
    such as PyPy that can transform Python code into C for higher performance.
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有一些软件包允许你调用其他平台，如R和Julia，将一些计算外包给他们，从而提高你的脚本性能。此外，还有一些静态编译器，如Cython，或即时编译器，如PyPy，可以将Python代码转换为C代码，以实现更高的性能。
- en: It can work better than other platforms with in-memory data because of its minimal
    memory footprint and excellent memory management. The memory garbage collector
    will often save the day when you load, transform, dice, slice, save, or discard
    data using the various iterations and reiterations of data wrangling.
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由于其最小的内存占用和卓越的内存管理，它可以在内存数据上比其他平台表现得更好。当使用各种迭代和重复的数据处理方法来加载、转换、切块、切片、保存或丢弃数据时，内存垃圾收集器通常会拯救你的日子。
- en: Installing Python
  id: totrans-71
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装Python
- en: As a first step, we are going to create a fully working data science environment
    you can use to replicate and test the examples in the book and prototype your
    own models.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 作为第一步，我们将创建一个完全工作的数据科学环境，你可以用它来复制和测试书中的示例，并原型化你自己的模型。
- en: No matter in what language you are going to develop your application, Python
    will provide an easy way to access your data, build your model from it, and extract
    the right parameters you need to make predictions in a production environment.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 无论你打算用哪种语言开发应用程序，Python都将提供一种简单的方法来访问你的数据，从它构建模型，并提取你在生产环境中进行预测所需的正确参数。
- en: Python is an open source, object-oriented, cross-platform programming language
    that, compared with its direct competitors (for instance, C/C++ and Java), produces
    very concise and very readable code. It allows you to build a working software
    prototype in a very short time, to maintain it easily, and to scale it to larger
    quantities of data. It has become the most used language in the data scientist's
    toolbox because it is a general-purpose language made very flexible thanks to
    a large variety of available packages that can easily and rapidly help you solve
    a wide spectrum of both common and niche problems.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: Python 是一种开源的、面向对象的、跨平台的编程语言，与它的直接竞争对手（例如，C/C++ 和 Java）相比，生成的代码非常简洁且易于阅读。它允许你在很短的时间内构建一个可工作的软件原型，轻松维护它，并将其扩展到更大的数据量。由于它是一种通用语言，并且有大量可用的包，可以轻松快速地帮助你解决各种常见和特殊问题，Python
    已经成为数据科学家工具箱中最常用的语言。
- en: Choosing between Python 2 and Python 3
  id: totrans-75
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在 Python 2 和 Python 3 之间进行选择
- en: 'Before starting, it is important to know that there are two main branches of
    Python: version 2 and 3\. Since many core functionalities have changed, scripts
    built for one versions are often incompatible (they won''t work without raising
    errors and warnings) with the other one. Although the third version is the newest,
    the older one is still the most used version in the scientific area, and the default
    version for many operating systems (mainly for compatibility in upgrades). When
    version 3 was released in 2008, most scientific packages weren''t ready, so the
    scientific community was stuck with the previous version. Fortunately, since then,
    almost all packages have been updated, leaving just a few orphans of Python 3
    compatibility (see [http://py3readiness.org/](http://py3readiness.org/) for a
    compatibility overview).'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始之前，重要的是要知道 Python 有两个主要分支：版本 2 和 3。由于许多核心功能已经改变，为其中一个版本编写的脚本通常与另一个版本不兼容（它们不会工作，并且会引发错误和警告）。尽管第三个版本是最新的，但旧版本仍然是科学领域使用最广泛的版本，也是许多操作系统的默认版本（主要是为了兼容升级）。当
    2008 年发布第三个版本时，大多数科学包还没有准备好，因此科学界陷入了之前的版本。幸运的是，从那时起，几乎所有包都已更新，只剩下少数 Python 3 兼容的遗留问题（有关兼容性概述，请参阅
    [http://py3readiness.org/](http://py3readiness.org/)）。
- en: 'In this book, which should address a large audience of developers, we agreed
    that it would have been better to work with Python 3 rather than the older version.
    Python 3 is the future of Python; in fact, it is the only version that will be
    further developed and improved by the Python foundation. It will be the default
    version of the future. If you are currently working with version 2 and you prefer
    to keep on working with it, we suggest you to run these following few lines of
    code at the beginning every time you start the interpreter. By doing so, you''ll
    render Python 2 capable of executing most version 3 code with minimal or no problems
    at all (the code will patch just a few basic incompatibilities, after installing
    the future package using the command `pip install future`, and let you safely
    run all the code in this book):'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 在这本书中，它应该面向广泛的开发者群体，我们一致认为使用 Python 3 而不是旧版本会更好。Python 3 是 Python 的未来；实际上，它是
    Python 基金会唯一将继续开发和改进的版本。它将成为未来的默认版本。如果你目前正在使用版本 2 并且希望继续使用它，我们建议你每次启动解释器时都运行以下几行代码。这样做会使
    Python 2 能够以最小或没有问题的方式执行大多数版本 3 的代码（代码将修补一些基本的不兼容性，在通过命令 `pip install future`
    安装 future 包之后，并让你安全地运行本书中的所有代码）：
- en: '[PRE0]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Tip
  id: totrans-79
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: The `from __future__ import` commands should always occur at the beginning of
    your script or you may experience Python reporting an error.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '`from __future__ import` 命令应始终出现在你的脚本开头，否则你可能会遇到 Python 报错。'
- en: Step-by-step installation
  id: totrans-81
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 步骤安装
- en: If you have never used Python (but that doesn't mean that you may not already
    have it installed on your machine), you need to first download the installer from
    the main website of the project, [https://www.python.org/downloads/](https://www.python.org/downloads/)
    (remember, we are using version 3), and then install it on your local machine.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你从未使用过 Python（但这并不意味着你可能没有在机器上安装它），你首先需要从项目的官方网站下载安装程序，[https://www.python.org/downloads/](https://www.python.org/downloads/)（记住，我们使用的是版本
    3），然后在你的本地机器上安装它。
- en: This section provides you with full control over what can be installed on your
    machine. This is very useful when you are going to use Python as both your prototyping
    and production language. Furthermore, it could help you keep track of the versions
    of packages you are using. Anyway, please be warned that a step-by-step installation
    really takes time and effort. Instead, installing a ready-made scientific distribution
    will lessen the burden of installation procedures and may well facilitate initial
    learning because it can save you quite a lot of time, though it will install a
    large number of packages (that for the most part you may never use) on your computer
    all at once. Therefore, if you want to start immediately and don't need to control
    your installation, just skip this part and proceed to the next section about scientific
    distributions.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 本节为您提供了对可以在您的机器上安装的内容的完全控制。当你打算将 Python 作为你的原型设计和生产语言时，这非常有用。此外，它可以帮助你跟踪你使用的包的版本。无论如何，请务必注意，逐步安装确实需要时间和精力。相反，安装现成的科学发行版可以减轻安装程序的负担，并且可能有助于初始学习，因为它可以为你节省相当多的时间，尽管它会在你的计算机上一次性安装大量（大部分你可能永远不会使用）的包。因此，如果你想立即开始，并且不需要控制你的安装，请跳过这部分，继续下一节关于科学发行版的内容。
- en: 'As Python is a multiplatform programming language, you''ll find installers
    for computers that either run on Windows or Linux/Unix-like operating systems.
    Please remember that some Linux distributions (such as Ubuntu) already have Python
    packed in the repository, which makes the installation process even easier:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 Python 是一种多平台编程语言，你将找到适用于运行 Windows 或 Linux/Unix 类操作系统的计算机的安装程序。请记住，一些 Linux
    发行版（如 Ubuntu）已经将 Python 打包在仓库中，这使得安装过程变得更加简单：
- en: 'Open a Python shell, type `python` in the terminal or click on the Python **IDLE**
    icon. Then, to test the installation, run the following code in the Python interactive
    shell or REPL:'
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 Python 命令行，在终端中输入 `python` 或者在 Python **IDLE** 图标上点击。然后，为了测试安装，请在 Python
    交互式外壳或 REPL 中运行以下代码：
- en: '[PRE1]'
  id: totrans-86
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Tip
  id: totrans-87
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: '**Downloading the example code**'
  id: totrans-88
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**下载示例代码**'
- en: You can download the example code files for all Packt books you have purchased
    from your account at [http://www.packtpub.com](http://www.packtpub.com). If you
    purchased this book elsewhere, you can visit [http://www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files e-mailed directly to you.
  id: totrans-89
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你可以从你购买的所有 Packt 书籍的账户中下载示例代码文件。[http://www.packtpub.com](http://www.packtpub.com)。如果你在其他地方购买了这本书，你可以访问
    [http://www.packtpub.com/support](http://www.packtpub.com/support) 并注册，以便将文件直接通过电子邮件发送给你。
- en: '![Step-by-step installation](img/00002.jpeg)'
  id: totrans-90
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![逐步安装](img/00002.jpeg)'
- en: If a syntax error is raised, it means that you are running Python 2 instead
    of Python 3\. Otherwise, if you don't experience an error and you read that your
    Python version is 3.x (at the time of writing this book, the latest version was
    3.5.0), then congratulations on running the version of Python we elected for this
    book.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 如果抛出语法错误，这意味着你正在运行 Python 2 而不是 Python 3。否则，如果你没有遇到错误，并且看到你的 Python 版本是 3.x（在撰写本书时，最新版本是
    3.5.0），那么恭喜你，你正在运行我们为本书选择的 Python 版本。
- en: To clarify, when a command is given in the terminal command line, we prefix
    the command with `$>`. Otherwise, if it's for the Python REPL, it's preceded by
    `>>>`.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 为了澄清，当在终端命令行中给出命令时，我们在命令前加上 `$>`。否则，如果是针对 Python REPL，则前面加上 `>>>`。
- en: Installing packages
  id: totrans-93
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装包
- en: Depending on your system and past installations, Python may not come bundled
    with all you need, unless you have installed a distribution (which, on the other
    hand, is usually stuffed with much more than you may need).
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 根据你的系统和过去的安装，Python 可能不会捆绑所有你需要的东西，除非你已经安装了一个发行版（另一方面，通常包含你需要的远不止这么多）。
- en: 'To install any packages you need, you can use the commands `pip` or `easy_install`;
    however, `easy_install` is going to be dropped in the future and `pip` has important
    advantages over it. It is preferable to install everything using `pip` because:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装你需要的任何包，你可以使用 `pip` 或 `easy_install` 命令；然而，`easy_install` 将会在未来被弃用，而 `pip`
    相对于它有许多重要优势。使用 `pip` 安装一切是首选的，因为：
- en: It is the preferred package manager for Python 3 and, starting with Python 2.7.9
    and Python 3.4, it is included by default with the Python binary installers
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它是 Python 3 的首选包管理器，并且从 Python 2.7.9 和 Python 3.4 开始，它默认包含在 Python 二进制安装程序中
- en: It provides an uninstall functionality
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它提供了卸载功能
- en: It rolls back and leaves your system clear if, for whatever reason, the package
    installation fails
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果由于任何原因包安装失败，它会回滚并使你的系统保持清晰。
- en: The command `pip` runs on the command line and makes the process of installing,
    upgrading, and removing Python packages simply a breeze.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 命令 `pip` 在命令行上运行，使得安装、升级和删除 Python 包的过程变得非常简单。
- en: 'As we mentioned, if you''re running at least Python 2.7.9 or Python 3.4 the
    `pip` command should already be there. To verify which tools have been installed
    on your local machine, directly test with the following command if any error is
    raised:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们提到的，如果你运行的是至少 Python 2.7.9 或 Python 3.4，`pip` 命令应该已经存在。为了验证你的本地机器上安装了哪些工具，如果有错误发生，直接使用以下命令进行测试：
- en: '[PRE2]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'In some Linux and Mac installations, the command is present as `pip3` (more
    likely if you have both Python 2 and 3 on your machine), so, if you received an
    error when looking for `pip`, also try running the following:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些 Linux 和 Mac 安装中，命令以 `pip3` 的形式存在（如果你机器上同时安装了 Python 2 和 3，可能性更大），所以，如果你在查找
    `pip` 时收到错误，也尝试运行以下命令：
- en: '[PRE3]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Alternatively, you can also test if the old command `easy_install` is available:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，你也可以测试一下旧命令 `easy_install` 是否可用：
- en: '[PRE4]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Tip
  id: totrans-106
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Using `easy_install` in spite of pip's advantages makes sense if you are working
    on Windows because `pip` will not install binary packages (it will try to build
    them); therefore, if you are experiencing unexpected difficulties installing a
    package, `easy_install` can save your day.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管 `pip` 有优势，但在 Windows 上使用 `easy_install` 也是有意义的，因为 `pip` 不会安装二进制包（它会尝试构建它们）；因此，如果你在安装包时遇到意外的困难，`easy_install`
    可以帮你解决问题。
- en: If your test ends with an error, you really need to install `pip` from scratch
    (and in doing so, also `easy_install` at the same time).
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的测试以错误结束，你真的需要从头开始安装 `pip`（在这个过程中，同时也会安装 `easy_install`）。
- en: 'To install `pip`, simply follow the instructions given at [https://pip.pypa.io/en/stable/installing/](https://pip.pypa.io/en/stable/installing/).
    The safest way is to download the `get-pi.py` script from [https://bootstrap.pypa.io/get-pip.py](https://bootstrap.pypa.io/get-pip.py)
    and then run it using the following:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装 `pip`，只需遵循 [https://pip.pypa.io/en/stable/installing/](https://pip.pypa.io/en/stable/installing/)
    提供的说明。最安全的方法是从 [https://bootstrap.pypa.io/get-pip.py](https://bootstrap.pypa.io/get-pip.py)
    下载 `get-pip.py` 脚本，然后使用以下命令运行它：
- en: '[PRE5]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: By the way, the script will also install the setup tool from [https://pypi.python.org/pypi/setuptools](https://pypi.python.org/pypi/setuptools),
    which contains `easy_install`.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 顺便说一句，该脚本还将安装来自 [https://pypi.python.org/pypi/setuptools](https://pypi.python.org/pypi/setuptools)
    的设置工具，其中包含 `easy_install`。
- en: 'As an alternative, if you are running a Debian/Ubuntu Unix-like system, then
    a fast shortcut would be to install everything using `apt-get`:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 作为替代，如果你正在运行 Debian/Ubuntu 类 Unix 系统，那么使用 `apt-get` 安装一切将是一个快速的捷径：
- en: '[PRE6]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'After checking this basic requirement, you''re now ready to install all the
    packages you need to run the examples provided in this book. To install a generic
    package, `<pk>`, you just need to run the following command:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 在检查了这个基本要求之后，你现在就可以安装运行本书提供的示例所需的全部包了。要安装一个通用包 `<pk>`，你只需要运行以下命令：
- en: '[PRE7]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Alternatively, if you prefer to use `easy_install`, you can also run the following
    command:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，如果你更喜欢使用 `easy_install`，你也可以运行以下命令：
- en: '[PRE8]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: After that, the `<pk>`package and all its dependencies will be downloaded and
    installed.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，`<pk>` 包及其所有依赖项将被下载并安装。
- en: If you are not sure whether a library has been installed or not, just try to
    import a module inside it. If the Python interpreter raises an `Import Error`
    error, it can be concluded that the package has not been installed.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你不确定一个库是否已安装，只需尝试在其中导入一个模块。如果 Python 解释器抛出 `ImportError` 错误，可以得出结论，该包尚未安装。
- en: 'Let''s take an example. This is what happens when the NumPy library has been
    installed:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们举一个例子。这是当 NumPy 库已经安装时发生的情况：
- en: '[PRE9]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'This is what happens if it is not installed:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 如果没有安装，会发生以下情况：
- en: '[PRE10]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: In the latter case, before importing it, you'll need to install it through `pip`
    or `easy_install`.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 在后一种情况下，在导入之前，你需要通过 `pip` 或 `easy_install` 安装它。
- en: Take care that you don't confuse packages with modules. With `pip`, you install
    a package; in Python, you import a module. Sometimes, the package and the module
    have the same name, but in many cases they don't match. For example, the `sklearn`
    module is included in the package named `Scikit-learn`.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，不要将包与模块混淆。使用 `pip`，你安装一个包；在 Python 中，你导入一个模块。有时，包和模块有相同的名称，但在许多情况下它们并不匹配。例如，`sklearn`
    模块包含在名为 `Scikit-learn` 的包中。
- en: Package upgrades
  id: totrans-126
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 软件包升级
- en: 'More often than not, you will find yourself in a situation where you have to
    upgrade a package because the new version either is required by a dependency or
    has additional features that you would like to use. To do so, first check the
    version of the library you have installed by glancing at the `__version__` attribute,
    as shown in the following example using the NumPy package:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 更常见的情况是，您会发现自己必须升级一个软件包，因为新版本要么是依赖项所必需的，要么具有您希望使用的附加功能。为此，首先通过查看以下示例中的`__version__`属性来检查您已安装的库版本，例如使用NumPy软件包：
- en: '[PRE11]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Now, if you want to update it to a newer release, say the 1.10.1 version, you
    can run the following command from the command line:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果您想将其更新到较新版本，比如1.10.1版本，您可以从命令行运行以下命令：
- en: '[PRE12]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Alternatively, but we do not recommend it unless it proves necessary, you can
    also use the following command:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，尽管我们不推荐这样做，除非证明是必要的，您也可以使用以下命令：
- en: '[PRE13]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Finally, if you are just interested in upgrading it to the latest available
    version, simply run the following command:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，如果您只是想将其升级到最新可用版本，只需运行以下命令：
- en: '[PRE14]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'You can alternatively also run the `easy_install` alternative:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以运行`easy_install`的替代命令：
- en: '[PRE15]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Scientific distributions
  id: totrans-137
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 科学发行版
- en: As you've read so far, creating a working environment is a time-consuming operation
    for a data scientist. You first need to install Python and then, one by one, you
    can install all the libraries that you will need (sometimes, the installation
    procedures may not go as smoothly as you'd hoped for earlier).
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 如您至今所读，对于数据科学家来说，创建一个工作环境是一项耗时的工作。您首先需要安装Python，然后，一个接一个地安装您需要的所有库（有时，安装过程可能不会像您之前所期望的那样顺利）。
- en: If you want to save time and effort and want to ensure that you have a working
    Python environment that is ready to use, you can just download, install, and use
    a scientific Python distribution. Apart from Python itself, distributions also
    include a variety of preinstalled packages, and sometimes they even have additional
    tools and an IDE set up for your usage. A few of them are very well known among
    data scientists and, in the sections that follow, you will find some of the key
    features for two of these packages that we found most useful and practical.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想节省时间和精力，并确保您有一个可用的Python环境，您可以简单地下载、安装并使用科学Python发行版。除了Python本身之外，发行版还包括各种预安装的软件包，有时它们甚至为您的使用设置了额外的工具和IDE。其中一些在数据科学家中非常知名，在接下来的章节中，您将找到我们认为最有用和实用的两个软件包的一些关键特性。
- en: To immediately focus on the contents of the book, we suggest that you first
    download and install a scientific distribution, such as Anaconda (which is the
    most complete one around, in our opinion). Then, after practicing the examples
    in the book, we suggest you to decide to fully uninstall the distribution and
    set up Python alone, which can be accompanied by just the packages you need for
    your projects.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 为了立即专注于本书的内容，我们建议您首先下载并安装一个科学发行版，例如Anaconda（据我们看来，这是最完整的一个）。然后，在练习本书中的示例之后，我们建议您决定完全卸载发行版，单独设置Python，这可以仅伴随您项目所需的软件包。
- en: Again, if possible, download and install the version containing Python 3.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 再次提醒，如果可能的话，下载并安装包含Python 3的版本。
- en: The first package that we would recommend you try is Anaconda ([https://www.continuum.io/downloads](https://www.continuum.io/downloads)),
    which is a Python distribution offered by Continuum Analytics that includes nearly
    200 packages, including NumPy, SciPy, Pandas, IPython, Matplotlib, Scikit-learn,
    and Statsmodels. It's a cross-platform distribution that can be installed on machines
    with other existing Python distributions and versions, and its base version is
    free. Additional add-ons that contain advanced features are charged separately.
    Anaconda introduces conda, a binary package manager, as a command-line tool to
    manage your package installations. As stated on its website, Anaconda's goal is
    to provide enterprise-ready Python distribution for large-scale processing, predictive
    analytics, and scientific computing.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先推荐你尝试的第一个包是 Anaconda ([https://www.continuum.io/downloads](https://www.continuum.io/downloads))，这是
    Continuum Analytics 提供的一个 Python 发行版，包括近 200 个包，包括 NumPy、SciPy、Pandas、IPython、Matplotlib、Scikit-learn
    和 Statsmodels。它是一个跨平台发行版，可以安装在具有其他现有 Python 发行版和版本的机器上，其基础版本是免费的。包含高级功能的附加组件需要单独收费。Anaconda
    引入了 conda，一个二进制包管理器，作为命令行工具来管理你的包安装。正如其网站所述，Anaconda 的目标是提供适用于大规模处理、预测分析和科学计算的现成
    Python 发行版。
- en: As a second suggestion, if you are working on Windows, WinPython ([http://winpython.sourceforge.net](http://winpython.sourceforge.net))
    could be a quite interesting alternative (sorry, no Linux or MacOS versions).
    WinPython is also a free, open source Python distribution maintained by the community.
    It is designed with scientists in mind, and it includes many essential packages
    such as NumPy, SciPy, Matplotlib, and IPython (the same as Anaconda's). It also
    includes Spyder as an IDE, which can be helpful if you have experience using the
    MATLAB language and interface. A crucial advantage is that it is portable (you
    can put it into any directory, or even on a USB flash drive, without the need
    for any administrative elevation). Using WinPython, you can have different versions
    present on your computer, move a version from a Windows computer to another, and
    you can easily replace an older version with a newer one just by replacing its
    directory. When you run WinPython or its shell, it will automatically set all
    the environment variables necessary for running Python as it were regularly installed
    and registered on your system.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 作为第二个建议，如果你在 Windows 上工作，WinPython ([http://winpython.sourceforge.net](http://winpython.sourceforge.net))
    可能是一个相当有趣的替代方案（抱歉，没有 Linux 或 MacOS 版本）。WinPython 也是一个由社区维护的免费、开源 Python 发行版。它是为科学家设计的，包括许多基本包，如
    NumPy、SciPy、Matplotlib 和 IPython（与 Anaconda 相同）。它还包括 Spyder 作为 IDE，如果你有使用 MATLAB
    语言和界面的经验，这可能很有帮助。一个关键优势是它具有便携性（你可以将其放入任何目录，甚至 U 盘中，无需任何管理权限提升）。使用 WinPython，你可以在计算机上安装不同的版本，将一个版本从
    Windows 计算机移动到另一个，只需替换其目录即可轻松替换旧版本。当你运行 WinPython 或其 shell 时，它将自动设置所有必要的环境变量，以便像常规安装和注册在系统上一样运行
    Python。
- en: Finally, another good choice for a distribution that works on Windows could
    be Python(x,y). Python(x,y) ([http://python-xy.github.io](http://python-xy.github.io))
    is a free, open source Python distribution maintained by the scientific community.
    It includes a number of packages, such as NumPy, SciPy, NetworkX, IPython, and
    Scikit-learn. It also features Spyder, the interactive development environment
    inspired by the MATLAB IDE.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，对于在 Windows 上工作的用户，另一个不错的选择可能是 Python(x,y)。Python(x,y) ([http://python-xy.github.io](http://python-xy.github.io))
    是由科学社区维护的一个免费、开源的 Python 发行版。它包含了许多包，例如 NumPy、SciPy、NetworkX、IPython 和 Scikit-learn。它还提供了
    Spyder，这是一个受 MATLAB IDE 启发的交互式开发环境。
- en: Introducing Jupyter or IPython
  id: totrans-145
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 介绍 Jupyter 或 IPython
- en: '**IPython** was initiated in 2001 as a free project by Fernando Perez. It addressed
    a lack in the Python stack for scientific investigations. The author felt that
    Python lacked a user programming interface that could incorporate the scientific
    approach (mainly meaning experimenting and interactively discovering) in the process
    of software development.'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: '**IPython** 是由 Fernando Perez 在 2001 年启动的一个免费项目。它解决了 Python 在科学调查中的不足。作者认为
    Python 缺乏一个用户编程接口，这个接口能够将科学方法（主要指实验和交互式发现）融入软件开发过程中。'
- en: A scientific approach implies fast experimentation with different hypotheses
    in a reproducible fashion (as do data exploration and analysis tasks in data science),
    and when using IPython you will be able to more naturally implement an explorative,
    iterative, trial-and-error research strategy in your code writing.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 科学方法意味着以可重复的方式快速进行不同假设的实验（数据科学中的数据探索和分析任务也是如此），当使用 IPython 时，你将能够在代码编写中更自然地实施探索性、迭代性、试错性研究策略。
- en: 'Recently, a large part of the IPython project has been moved to a new one called
    **Jupyter** ([http://jupyter.org](http://jupyter.org)):'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 最近，IPython 项目的大部分内容已迁移到一个名为 **Jupyter** 的新项目中（[http://jupyter.org](http://jupyter.org)）：
- en: '![Introducing Jupyter or IPython](img/00003.jpeg)'
  id: totrans-149
  prefs: []
  type: TYPE_IMG
  zh: '![介绍 Jupyter 或 IPython](img/00003.jpeg)'
- en: 'This new project extends the potential usability of the original IPython interface
    to a wide range of programming languages such as the following:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 这个新项目扩展了原始 IPython 接口在以下广泛编程语言中的潜在可用性：
- en: R ([https://github.com/IRkernel/IRkernel](https://github.com/IRkernel/IRkernel))
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: R ([https://github.com/IRkernel/IRkernel](https://github.com/IRkernel/IRkernel))
- en: Julia ([https://github.com/JuliaLang/IJulia.jl](https://github.com/JuliaLang/IJulia.jl))
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Julia ([https://github.com/JuliaLang/IJulia.jl](https://github.com/JuliaLang/IJulia.jl))
- en: Scala ([https://github.com/mattpap/IScala](https://github.com/mattpap/IScala))
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Scala ([https://github.com/mattpap/IScala](https://github.com/mattpap/IScala))
- en: 'For a complete list of available kernels, please visit: [https://github.com/ipython/ipython/wiki/IPython-kernels-for-other-languages](https://github.com/ipython/ipython/wiki/IPython-kernels-for-other-languages).'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 要获取可用内核的完整列表，请访问：[https://github.com/ipython/ipython/wiki/IPython-kernels-for-other-languages](https://github.com/ipython/ipython/wiki/IPython-kernels-for-other-languages)。
- en: You can use the same IPython-like interface and interactive programming style
    no matter what language you are developing in, thanks to the powerful idea of
    kernels, which are programs that run the user's code, as communicated by the frontend
    interface; they then provide feedback on the results of the executed code to the
    interface itself.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 无论你使用什么语言进行开发，都可以使用相同的类似 IPython 的界面和交互式编程风格，这得益于强大的内核概念，内核是运行用户代码的程序，由前端界面进行通信；然后它们将执行代码的结果反馈给界面本身。
- en: IPython (Python is the zero kernel, the original starting point) can be simply
    described as a tool for interactive tasks operable by a console or by a web-based
    notebook, which offers special commands that help developers to better understand
    and build the code currently being written.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: IPython（Python是零内核，原始起点）可以简单地描述为一个可以通过控制台或基于网络的笔记本操作的交互式任务工具，它提供了特殊的命令，帮助开发者更好地理解和构建当前正在编写的代码。
- en: Contrary to an IDE interface, which is built around the idea of writing a script,
    running it afterwards, and finally evaluating its results, IPython lets you write
    your code in chunks, run each of them sequentially, and evaluate the results of
    each one separately, examining both textual and graphic outputs. Besides graphical
    integration, it provides further help, thanks to customizable commands, a rich
    history (in the JSON format), and computational parallelism for enhanced performance
    when dealing with heavy numeric computations.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 与围绕编写脚本、运行它并最终评估其结果的脚本界面相反，IPython 允许你分块编写代码，依次运行每个块，并单独评估每个块的结果，检查文本和图形输出。除了图形集成外，它还通过可定制的命令、丰富的历史记录（以
    JSON 格式）和计算并行性提供进一步的帮助，以增强处理重数计算时的性能。
- en: 'In IPython, you can easily combine code, comments, formulas, charts and interactive
    plots, and rich media such as images and videos, making it a complete scientific
    sketchpad for all your experimentations and their results together. Moreover,
    IPython allows reproducible research, allowing any data analysis and model building
    to be recreated easily under different circumstances:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 在 IPython 中，你可以轻松地结合代码、注释、公式、图表和交互式绘图，以及丰富的媒体，如图片和视频，使其成为所有实验及其结果的完整科学草图板。此外，IPython
    允许可重复研究，允许任何数据分析建模在不同的环境下轻松重建：
- en: '![Introducing Jupyter or IPython](img/00004.jpeg)'
  id: totrans-159
  prefs: []
  type: TYPE_IMG
  zh: '![介绍 Jupyter 或 IPython](img/00004.jpeg)'
- en: IPython works on your favorite browser (which could be Explorer, Firefox, or
    Chrome, for instance) and when started presents a cell waiting for code to written
    in. Each block of code enclosed in a cell can be run and its results are reported
    in the space just after the cell. Plots can be represented in the notebook (inline
    plot) or in a separate window. In our example, we decided to plot our chart inline.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: IPython 在你喜欢的浏览器（例如，可能是 Internet Explorer、Firefox 或 Chrome）上运行，启动时显示一个等待编写代码的单元。每个被单元包围的代码块都可以运行，其结果在单元后的空间中报告。图表可以在笔记本中（内联图表）或单独的窗口中表示。在我们的例子中，我们决定内联绘制我们的图表。
- en: Notes can be written easily using the Markdown language, a very easy and accessible
    markup language ([http://daringfireball.net/projects/markdown](http://daringfireball.net/projects/markdown)).
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Markdown 语言可以轻松地编写笔记，Markdown 是一种非常简单易用的标记语言 ([http://daringfireball.net/projects/markdown](http://daringfireball.net/projects/markdown))。
- en: Such an approach is also particularly fruitful for tasks involving developing
    code based on data, since it automatically accomplishes the often-neglected duty
    of documenting and illustrating how data analysis has been done, as well as its
    premises, assumptions, and intermediate/final results. If part of your job is
    also to present your work and attract internal or external stakeholders to the
    project, IPython can really perform the magic of storytelling for you with little
    additional effort. On the web page [https://github.com/ipython/ipython/wiki/A-gallery-of-interesting-IPython-Notebooks](https://github.com/ipython/ipython/wiki/A-gallery-of-interesting-IPython-Notebooks),
    there are many examples, some of which you may find inspiring for your work as
    we did.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 这种方法对于涉及基于数据开发代码的任务尤其有益，因为它自动完成了通常被忽视的记录和说明数据分析如何进行、其前提、假设以及中间/最终结果的职责。如果你的工作部分也包括展示你的工作并吸引内部或外部利益相关者参与项目，IPython
    可以通过很少的额外努力为你施展讲述故事的魔法。在网页 [https://github.com/ipython/ipython/wiki/A-gallery-of-interesting-IPython-Notebooks](https://github.com/ipython/ipython/wiki/A-gallery-of-interesting-IPython-Notebooks)
    上，有许多例子，其中一些可能对你工作的启发就像对我们一样。
- en: Actually, we have to confess that keeping a clean, up-to-date IPython Notebook
    has saved us uncountable times when meetings with managers/stakeholders have suddenly
    popped up, requiring us to hastily present the state of our work.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，我们必须承认，保持一个干净、最新的 IPython Notebook 在经理/利益相关者会议突然出现，需要我们匆忙展示工作状态时，帮了我们无数的忙。
- en: As an additional resource, IPython offers you a complete library of many magic
    commands that allow you to execute some useful actions such as measuring the time
    it takes for a command to execute, or creating a text file with the output of
    a cell. We distinguish between line magic and cell magic, depending on whether
    they operate a single line of code or the code contained in an entire cell. For
    instance, the magic command `%timeit` measures the time it takes to execute the
    command on the same line of the line magic, whereas `%%time` is a cell magic that
    measures the execution time of an entire cell.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 作为额外的资源，IPython 为你提供了一个完整的魔法命令库，允许你执行一些有用的操作，例如测量命令执行所需的时间，或创建包含单元输出的文本文件。我们根据它们是否操作单行代码或整个单元中的代码来区分行魔法和单元魔法。例如，魔法命令
    `%timeit` 测量在行魔法同一行上执行命令所需的时间，而 `%%time` 是一个单元魔法，它测量整个单元的执行时间。
- en: 'If you want to explore more about magic commands, just type `%quickref` into
    an IPython cell and run it: a complete guide will appear to illustrate all available
    commands.'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想了解更多关于魔法命令的信息，只需在 IPython 单元中输入 `%quickref` 并运行它：将出现一个完整的指南，展示所有可用的命令。
- en: 'In short, IPython lets you:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 简而言之，IPython 让你可以：
- en: See intermediate (debugging) results for each step of the analysis
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查看分析每个步骤的中间（调试）结果
- en: Run only some sections (or cells) of the code
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 只运行代码的部分（或单元）
- en: Store intermediate results in JSON format and have the ability to version-control
    them
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将中间结果以 JSON 格式存储，并具有版本控制它们的能力
- en: Present your work (this will be a combination of text, code, and images), share
    it via the IPython Notebook Viewer service ([http://nbviewer.ipython.org/](http://nbviewer.ipython.org/)),
    and easily export it into HTML, PDF, or even slide shows
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 展示你的工作（这将是一个文本、代码和图像的组合），通过 IPython Notebook Viewer 服务 ([http://nbviewer.ipython.org/](http://nbviewer.ipython.org/))
    分享，并轻松将其导出为 HTML、PDF 或甚至幻灯片
- en: IPython is our favored choice throughout this book, and it is used to clearly
    and effectively illustrate operations with scripts and data and their consequent
    results.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，IPython是我们的首选工具，用于清晰有效地展示脚本和数据操作及其后续结果。
- en: Note
  id: totrans-172
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: For a complete treatise on the full range of IPython functionalities, please
    refer to the two Packt Publishing books *IPython Interactive Computing and Visualization
    Cookbook*, *Cyrille Rossant*, *Packt Publishing*, September 25 2014, and *Learning
    IPython for Interactive Computing and Data Visualization*, *Cyrille Rossant*,
    *Packt Publishing*, April 25 2013.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 对于关于IPython全部功能的完整论述，请参阅两本Packt Publishing出版的书籍：《IPython交互式计算与可视化烹饪书》（作者：Cyrille
    Rossant，Packt Publishing，2014年9月25日出版）和《学习IPython进行交互式计算与数据可视化》（作者：Cyrille Rossant，Packt
    Publishing，2013年4月25日出版）。
- en: 'For our illustrative purposes, just consider that every IPython block of instructions
    has a numbered input statement and an output one, so you will find the code presented
    in this book structured in two blocks, at least when the output is not at all
    trivial; otherwise just expect only the input part:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 为了说明目的，只需考虑每个IPython指令块都有一个编号的输入语句和一个输出语句，因此你将发现本书中的代码至少以两个块的形式呈现，当输出不是非常简单时；否则，只需期待只有输入部分：
- en: '[PRE16]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Please notice that we do not number the inputs or the outputs.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，我们不对输入或输出进行编号。
- en: Though we strongly recommend using IPython, if you are using a REPL approach
    or an IDE interface, you can use the same instructions and expect identical results
    (but for print formats and extensions of the returned results).
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然我们强烈推荐使用IPython，但如果您使用REPL方法或IDE界面，您可以使用相同的指令并期望得到相同的结果（但输出格式和返回结果的扩展可能不同）。
- en: Python packages and functions for linear models
  id: totrans-178
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 用于线性模型的Python包和函数
- en: Linear models diffuse in many different scientific and business applications
    and can be found, under different functions, in quite a number of different Python
    packages. We have selected a few for use in this book. Among them, Statsmodels
    is our choice for illustrating the statistical properties of models, and Scikit-learn
    is instead the package we recommend for easily and seamlessly preparing data,
    building models, and deploying them. We will present models built with Statsmodels
    exclusively to illustrate the statistical properties of the linear models, resorting
    to Scikit-learn to demonstrate how to approach modeling from a data science point
    of view.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 线性模型在众多科学和商业应用中广泛使用，并且可以在许多不同的Python包中找到，以不同的函数形式存在。我们在本书中选择了几个用于展示。其中，Statsmodels是我们选择用于展示模型统计特性的工具，而Scikit-learn则是我们推荐的用于轻松无缝准备数据、构建模型和部署模型的包。我们将专门使用Statsmodels构建的模型来展示线性模型的统计特性，并使用Scikit-learn来展示如何从数据科学的角度进行建模。
- en: NumPy
  id: totrans-180
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: NumPy
- en: NumPy, which is Travis Oliphant's creation, is at the core of every analytical
    solution in the Python language. It provides the user with multidimensional arrays,
    along with a large set of functions to operate multiple mathematical operations
    on these arrays. Arrays are blocks of data arranged along multiple dimensions
    and that implement mathematical vectors and matrices. Arrays are useful not just
    for storing data, but also for fast matrix operations (vectorization), which are
    indispensable when you wish to solve ad hoc data science problems.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: NumPy，由Travis Oliphant创建，是Python语言中每个分析解决方案的核心。它为用户提供多维数组，以及一套用于在这些数组上执行多个数学运算的函数。数组是沿着多个维度排列的数据块，并实现了数学向量矩阵。数组不仅用于存储数据，而且对于快速矩阵运算（向量化）也很有用，这在解决特定数据科学问题时是必不可少的。
- en: 'In the book, we are primarily going to use the module `linalg` from NumPy;
    being a collection of linear algebra functions, it will provide help in explaining
    the nuts and bolts of the algorithm:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，我们将主要使用NumPy的`linalg`模块；作为一个线性代数函数集合，它将有助于解释算法的细节：
- en: 'Website: [http://www.numpy.org/](http://www.numpy.org/)'
  id: totrans-183
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网站：[http://www.numpy.org/](http://www.numpy.org/)
- en: 'Import conventions: `import numpy as np`'
  id: totrans-184
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 导入约定：`import numpy as np`
- en: 'Version at the time of print: `1.9.2`'
  id: totrans-185
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 印刷时的版本：`1.9.2`
- en: 'Suggested install command: `pip install numpy`'
  id: totrans-186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 建议安装命令：`pip install numpy`
- en: Tip
  id: totrans-187
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: 'As a convention largely adopted by the Python community, when importing NumPy,
    it is suggested that you alias it as `np`:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 作为Python社区广泛采用的约定，当导入NumPy时，建议将其别名为`np`：
- en: '[PRE17]'
  id: totrans-189
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: There are importing conventions also for other Python features that we will
    be using in the code presented in this book.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中展示的代码中，我们还将使用其他Python特性的导入约定。
- en: SciPy
  id: totrans-191
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: SciPy
- en: An original project by Travis Oliphant, Pearu Peterson, and Eric Jones, SciPy
    completes NumPy's functionalities, offering a larger variety of scientific algorithms
    for linear algebra, sparse matrices, signal and image processing, optimization,
    fast Fourier transformation, and much more.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 由Travis Oliphant、Pearu Peterson和Eric Jones发起的一个原始项目，SciPy补充了NumPy的功能，提供了更多科学算法，包括线性代数、稀疏矩阵、信号和图像处理、优化、快速傅里叶变换等。
- en: 'The `scipy.optimize` package provides several commonly used optimization algorithms,
    used to detail how a linear model can be estimated using different optimization
    approaches:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: '`scipy.optimize` 包提供了几个常用的优化算法，用于详细说明如何使用不同的优化方法来估计线性模型：'
- en: 'Website: [http://www.scipy.org/](http://www.scipy.org/)'
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网站：[http://www.scipy.org/](http://www.scipy.org/)
- en: 'Import conventions: `import scipy as sp`'
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 导入约定：`import scipy as sp`
- en: 'Version at time of print: `0.16.0`'
  id: totrans-196
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 印刷时的版本：`0.16.0`
- en: 'Suggested install command: `pip install scipy`'
  id: totrans-197
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 建议安装命令：`pip install scipy`
- en: Statsmodels
  id: totrans-198
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Statsmodels
- en: Previously part of Scikit, Statsmodels has been thought to be a complement to
    SciPy statistical functions. It features generalized linear models, discrete choice
    models, time series analysis, and a series of descriptive statistics as well as
    parametric and nonparametric tests.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 之前是Scikit的一部分，Statsmodels被认为是对SciPy统计函数的补充。它包括广义线性模型、离散选择模型、时间序列分析以及一系列描述性统计、参数和非参数检验。
- en: 'In Statsmodels, we will use the `statsmodels.api` and `statsmodels.formula.api`
    modules, which provide functions for fitting linear models by providing both input
    matrices and formula''s specifications:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 在Statsmodels中，我们将使用`statsmodels.api`和`statsmodels.formula.api`模块，它们通过提供输入矩阵和公式的规范来提供拟合线性模型的函数：
- en: 'Website: [http:/statsmodels.sourceforge.net/](http://http:/statsmodels.sourceforge.net/)'
  id: totrans-201
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网站：[http:/statsmodels.sourceforge.net/](http://http:/statsmodels.sourceforge.net/)
- en: 'Import conventions: `import statsmodels.api as sm` and `import statsmodels.formula.api
    as smf`'
  id: totrans-202
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 导入约定：`import statsmodels.api as sm` 和 `import statsmodels.formula.api as smf`
- en: 'Version at the time of print: `0.6.1`'
  id: totrans-203
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 印刷时的版本：`0.6.1`
- en: 'Suggested install command: `pip install statsmodels`'
  id: totrans-204
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 建议安装命令：`pip install statsmodels`
- en: Scikit-learn
  id: totrans-205
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Scikit-learn
- en: Started as part of the **SciPy Toolkits** (**SciKits**), Scikit-learn is the
    core of data science operations on Python. It offers all that you may need in
    terms of data preprocessing, supervised and unsupervised learning, model selection,
    validation, and error metrics. Expect us to talk at length about this package
    throughout the book.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: Scikit-learn最初是作为**SciPy工具包**（**SciKits**）的一部分开始的，它是Python上数据科学操作的核心。它提供了您可能需要的所有数据预处理、监督学习和无监督学习、模型选择、验证和错误度量。期待我们在本书中详细讨论这个包。
- en: Scikit-learn started in 2007 as a Google Summer of Code project by David Cournapeau.
    Since 2013, it has been taken over by the researchers at INRA (French Institute
    for Research in Computer Science and Automation).
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: Scikit-learn始于2007年，是David Cournapeau的Google Summer of Code项目。自2013年以来，它已被法国国家研究院（INRA）的研究人员接管。
- en: 'Scikit-learn offers modules for data processing (`sklearn.preprocessing`, `sklearn.feature_extraction`),
    model selection, and validation (`sklearn.cross_validation`, `sklearn.grid_search`,
    and `sklearn.metrics`) and a complete set of methods (`sklearn.linear_model`)
    in which the target value, being both a number or a probability, is expected to
    be a linear combination of the input variables:'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: Scikit-learn提供了数据预处理模块（`sklearn.preprocessing`、`sklearn.feature_extraction`）、模型选择和验证模块（`sklearn.cross_validation`、`sklearn.grid_search`和`sklearn.metrics`）以及一套完整的方法（`sklearn.linear_model`），其中目标值，无论是数字还是概率，都期望是输入变量的线性组合：
- en: 'Website: [http://scikit-learn.org/stable/](http://scikit-learn.org/stable/)'
  id: totrans-209
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网站：[http://scikit-learn.org/stable/](http://scikit-learn.org/stable/)
- en: 'Import conventions: None; modules are usually imported separately'
  id: totrans-210
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 导入约定：无；模块通常单独导入
- en: 'Version at the time of print: `0.16.1`'
  id: totrans-211
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 印刷时的版本：`0.16.1`
- en: 'Suggested install command: `pip install scikit-learn`'
  id: totrans-212
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 建议安装命令：`pip install scikit-learn`
- en: Tip
  id: totrans-213
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Note that the imported module is named `sklearn`.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 注意导入的模块被命名为 `sklearn`。
- en: Summary
  id: totrans-215
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we glanced at the usefulness of linear models under the data
    science perspective and we introduced some basic concepts of the data science
    approach that will be explained in more detail later and will be applied to linear
    models. We have also provided detailed instructions on how to set up the Python
    environment; these will be used throughout the book to present examples and provide
    useful code snippets for the fast development of machine learning hypotheses.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们从数据科学的角度简要探讨了线性模型的有用性，并介绍了一些数据科学方法的基本概念，这些概念将在后续章节中详细解释，并将应用于线性模型。我们还提供了如何设置Python环境的详细说明；这些说明将在整本书中用于展示示例，并提供用于快速开发机器学习假设的有用代码片段。
- en: In the next chapter, we will begin presenting linear regression from its statistical
    foundations. Starting from the idea of correlation, we will build up the simple
    linear regression (using just one predictor) and provide the algorithm's formulations.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将从统计基础开始介绍线性回归。从相关性的概念出发，我们将构建简单的线性回归（仅使用一个预测因子）并提供算法的公式。
