- en: '*Chapter 9*: Forecasting and Time Series Modeling'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第 9 章*：预测和时间序列建模'
- en: In this chapter, we will understand what time series are and will see how DataRobot
    can be used to model them. Time series modeling is becoming increasingly useful
    in businesses. However, the challenges associated with forecasting make it quite
    challenging for many skilled data scientists to successfully carry out time series
    modeling, and this form of modeling could also be extremely time-consuming. DataRobot
    provides an automated process that enables data scientists to carry out time series
    projects in an effective and efficient fashion. In this chapter, we will introduce
    the concept of forecasting, stressing its commercial importance and inherent challenges,
    and illustrate how DataRobot can be used to build its models.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将了解时间序列是什么，并了解如何使用 DataRobot 来建模它们。时间序列建模在商业中变得越来越有用。然而，与预测相关的挑战使得许多有技能的数据科学家在成功执行时间序列建模方面面临相当大的挑战，这种建模形式也可能非常耗时。DataRobot
    提供了一个自动化流程，使数据科学家能够以有效和高效的方式执行时间序列项目。在本章中，我们将介绍预测的概念，强调其商业重要性和内在挑战，并说明如何使用 DataRobot
    来构建其模型。
- en: 'By the end of this chapter, you will have learned how to utilize DataRobot
    in building time series forecasting models. In addition, we will look at making
    predictions with these models. We go further by building models for multi-series
    time series as part of the advanced topics. Here are the main topics to be covered
    in this chapter:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 到本章结束时，你将学会如何利用 DataRobot 构建时间序列预测模型。此外，我们还将探讨如何使用这些模型进行预测。在高级主题部分，我们将进一步构建多序列时间序列模型。以下是本章将涵盖的主要主题：
- en: Conceptual introduction to time series forecasting and modeling
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 时间序列预测和建模的概念性介绍
- en: Defining and setting up time series projects
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定义和设置时间序列项目
- en: Building time series forecasting models and understanding their model outcomes
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建时间序列预测模型并理解其模型结果
- en: Making predictions with time series models
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用时间序列模型进行预测
- en: Advanced topics in time series modeling
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 时间序列建模的高级主题
- en: Technical requirements
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: Some parts of this chapter require access to the DataRobot software and some
    tools for data manipulation. Most of the examples deal with small datasets and
    therefore can be handled via Excel. The dataset that we will be using in this
    chapter is described next.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的一些部分需要访问 DataRobot 软件以及一些数据处理工具。大多数示例涉及小型数据集，因此可以通过 Excel 处理。我们将在本章中使用的数据集将在下面进行描述。
- en: Appliances energy prediction dataset
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 电器能源预测数据集
- en: This dataset can be accessed at the *University of California Irvine* (*UCI*)
    Machine Learning Repository ([https://archive.ics.uci.edu/ml/datasets/Appliances+energy+prediction#](https://archive.ics.uci.edu/ml/datasets/Appliances+energy+prediction#)).
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 此数据集可在加州大学欧文分校（UCI）机器学习仓库中访问（[https://archive.ics.uci.edu/ml/datasets/Appliances+energy+prediction#](https://archive.ics.uci.edu/ml/datasets/Appliances+energy+prediction#)）。
- en: Dataset citation
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 数据集引用
- en: '*Luis M. Candanedo*, *Véronique Feldheim*, *Dominique Deramaix*, *Data driven
    prediction models of energy use of appliances in a low-energy house*, *Energy
    and Buildings*, *Volume 140*, *1 April 2017*, *Pages 81-97*, *ISSN 0378-7788*.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '*路易斯·M·坎达内多*，*维罗妮克·费尔德海姆*，*多米尼克·德拉马伊克斯*，《低能耗房屋中电器能源使用的数据驱动预测模型》，《能源与建筑》，第 140
    卷，2017 年 4 月 1 日，第 81-97 页，*ISSN 0378-7788*。'
- en: This dataset captures temperature and humidity in various rooms in a house and
    in the outside environment, along with energy consumption by various devices over
    time. The data is captured every 10 minutes. This is a typical example of a time
    series dataset. Data is provided in `.csv` format and the site also provides descriptions
    of the various features. All features in this dataset are numeric features. The
    dataset also includes two random variables to make the problem interesting.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 此数据集捕捉了房屋中各个房间和室外环境中的温度和湿度，以及各种设备随时间变化的能源消耗。数据每 10 分钟采集一次。这是一个典型的时间序列数据集示例。数据以
    `.csv` 格式提供，网站还提供了各种特征的描述。此数据集中的所有特征都是数值特征。数据集还包括两个随机变量，以使问题更有趣。
- en: Conceptual introduction to time series forecasting modeling
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 时间序列预测建模的概念性介绍
- en: The dynamic nature of the commercial environment makes time a pivot resource
    for business success. As a result, businesses need to account for the time factor
    in their decision-making. Changes occur within commercial settings at a high pace,
    which makes it pertinent for organizations to take rapid yet considered actions.
    Analytic technology provides organizations with tools that enable forecasting
    of the future so that decision-makers have crucial time in hand to ensure their
    decision aligns with their organizational objectives. Organizations use time-specific
    data to predict the volume of sales in a future period. Other writers have differentiated
    time series modeling from forecasting models. In this chapter, we have used the
    term interchangeably and consider **time series forecasting** to involve the use
    of advanced analytics to gain insights that guide business decisions leveraging
    time-based data.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 商业环境的动态性质使得时间成为商业成功的关键资源。因此，企业在决策时需要考虑时间因素。商业环境中的变化发生得很快，这使得组织需要采取快速但经过深思熟虑的行动。分析技术为组织提供了工具，这些工具能够预测未来，从而使决策者有足够的时间确保他们的决策与组织目标一致。组织使用特定时间的数据来预测未来某一时期的销售量。其他作家已经区分了时间序列模型和预测模型。在本章中，我们使用了这个术语，并将**时间序列预测**视为利用基于时间的数据通过高级分析获得指导商业决策的见解。
- en: Time series forecasting supports numerous aspects of business planning. With
    forecasting, human and other forms of resource planning can be optimized to ensure
    that expected outcomes are realized. Through forecasting, cash flow, profit, and
    budgeting projections are more rigorously established, thereby mitigating human
    bias. Forecasting sales could be influenced by several factors that are controllable
    and non-controllable. Certain consumer factors that change with time tend to affect
    the volume of sales. These factors include changes in population, customer taste,
    and interests. In addition, demand is sensitive to broader economic variables,
    such as inflation, that also change with time. As a result, it becomes pertinent
    to use some features that could act as proxies for these consumer and economic
    variables in addition to **lagged** or historic sales. Because some of these variables
    are challenging to acquire, analysts tend to be limited to a few historic values
    and volumes in modeling future outcomes.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 时间序列预测支持商业计划的多个方面。通过预测，可以优化人力和其他形式的资源规划，以确保实现预期的结果。通过预测，现金流、利润和预算预测可以更加严格地建立，从而减轻人为偏差。预测销售可能会受到可控和非可控的多种因素的影响。某些随时间变化的消费者因素倾向于影响销售量。这些因素包括人口变化、客户口味和兴趣的变化。此外，需求对更广泛的经济变量（如通货膨胀）敏感，这些变量也随时间变化。因此，使用一些可以作为这些消费者和经济变量代理的特征变得至关重要，除了**滞后**或历史销售数据。由于一些这些变量难以获取，分析师往往局限于在建模未来结果时使用一些历史值和数量。
- en: Although a detailed discussion on time series is out of the scope of this book,
    it is, however, pertinent to appreciate that the properties of modeling time series
    make them more challenging to work with. In addition to difficulties with other
    forms of predictive modeling discussed in previous chapters of this book, time
    series modeling comes with additional challenges. One of the assumptions of linear
    regression modeling is that of independence of observations, that is, that observations
    or data rows are independent. However, this assumption is inevitably broken with
    time series modeling. Within time series, **autocorrelation** occurs naturally,
    as observations are similar across different time periods. It is also possible
    that highly corrected observations don't occur successively, in which case **seasonality**
    occurs. Series are considered seasonal when observations across a fixed time frame
    have higher levels of correlation. Indeed, these are periodic fluctuations in
    observations. A similar volume of sales of flight tickets during holiday periods
    brings this to life. Seasonality could indeed occur yet fails to follow a fixed
    time frame, described as **cyclicity**. Qualifying cycles generally require considerably
    larger datasets than other properties of series as cyclicity is mostly related
    to external factors such as macroeconomic or political changes within the business
    environment.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管详细讨论时间序列超出了本书的范围，然而，理解建模时间序列的特性使得它们更具挑战性是相关的。除了本书前几章讨论的其他预测建模形式的困难之外，时间序列建模还带来了额外的挑战。线性回归建模的一个假设是观察值的独立性，即观察或数据行是独立的。然而，这个假设在时间序列建模中不可避免地被打破。在时间序列中，**自相关**自然发生，因为观察在不同时间段内是相似的。也有可能高度修正的观察不会连续发生，在这种情况下，会出现**季节性**。当固定时间段内的观察具有更高的相关性时，序列被认为是季节性的。实际上，这些是观察的周期性波动。在假日期间航班票务销售量的相似量就体现了这一点。季节性确实可能发生，但并不遵循固定的**周期性**时间框架。通常，验证周期需要比序列的其他属性（如周期性）大得多的数据集，因为周期性主要与外部因素有关，例如商业环境中的宏观经济或政治变化。
- en: Autocorrelation also gives rise to **linearity**, a concept that describes an
    overarching trend where consecutive observations are similar, albeit changing
    in such a way that they follow a linear trend. Due to this linear trend, albeit
    sometimes with some integrated fluctuations, the mean of specific time frames
    will follow a pattern but is unlikely to be the same, hence the use of **moving
    average** (**MA**) and **autoregression** approaches to represent time series.
    However, series can still be characterized by the extent to which their statistical
    properties change over time. They are considered **stationary** when they have
    a constant mean and variance that are independent of time. What is most interesting,
    albeit problematic statistically, is that some time series data has a combination
    of these properties. A good example is the volume of flights. Though gradually
    increasing over time, being seasonal, during an economic downturn this falls generally.
    In this example, we can see elements of seasonality, cyclicity, and linearity.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 自相关还导致了**线性**，这是一个描述连续观察值相似性的总体趋势的概念，尽管它们以遵循线性趋势的方式变化。由于这种线性趋势，尽管有时会有一些综合波动，特定时间框架的平均值将遵循一个模式，但不太可能相同，因此使用了**移动平均**（**MA**）和**自回归**方法来表示时间序列。然而，序列仍然可以通过它们随时间变化的统计属性的程度来表征。当它们具有恒定的均值和方差，且与时间无关时，它们被认为是**平稳的**。最有趣的是，尽管在统计上存在问题，但某些时间序列数据具有这些特性的组合。一个很好的例子是航班量。尽管随着时间的推移逐渐增加，具有季节性，但在经济衰退期间通常会下降。在这个例子中，我们可以看到季节性、周期性和线性的元素。
- en: Another concept that sometimes gets lost in the details is that of **actionability**.
    Actionability being the ability of stakeholders to act because of an analysis
    or a model's outcome, it is very common for data scientists to focus on the accuracy
    of predictions. While accuracy is important, what is more important is to provide
    actionable guidance to decision-makers. A forecast that enables you to take action
    today is more valuable than a forecast that is more accurate but not actionable.
    Care must be taken while defining the forecasting problem to ensure the actionability
    of the model being developed.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 有时候在细节中容易丢失的概念是**可操作性**。可操作性是指利益相关者能够因为分析或模型的结果而采取行动的能力，数据科学家通常专注于预测的准确性。虽然准确性很重要，但更重要的是为决策者提供可操作的指导。一个能够让你今天采取行动的预测比一个更准确但不可操作的预测更有价值。在定义预测问题时必须谨慎，以确保正在开发的模型具有可操作性。
- en: The foregone conversation in this section highlights the properties that make
    time series modeling more challenging for typical data scientists. DataRobot has
    developed unique processes that enable data scientists, including those with limited
    statistical exposure, to create complex yet robust time series models. In the
    subsequent section, we will look at how to define and set up time series problems
    in DataRobot.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 本节中省略的对话突出了使时间序列建模对典型数据科学家更具挑战性的特性。DataRobot已经开发了独特的流程，使数据科学家，包括那些统计知识有限的人，能够创建复杂且稳健的时间序列模型。在下一节中，我们将探讨如何在DataRobot中定义和设置时间序列问题。
- en: Defining and setting up time series projects
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 定义和设置时间序列项目
- en: In [*Chapter 4*](B17159_04_Final_NM_ePub.xhtml#_idTextAnchor087), *Preparing
    Data for DataRobot*, through to [*Chapter 8*](B17159_08_Final_NM_ePub.xhtml#_idTextAnchor116),
    *Model Scoring and Deployment*, we explored the creation, understanding, scoring,
    and deployment of basic models in DataRobot. We saw that DataRobot automatically
    built several models for us and we could then score a dataset using these built
    models. Further, after we have chosen a model that best aligns with our needs,
    DataRobot provides us a process to deploy our selected model. Due to the difference
    between time series modeling and other forms of predictive modeling, we will explore
    in this section how to mitigate problems by effectively defining and setting up
    time series projects in DataRobot.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 从[*第4章*](B17159_04_Final_NM_ePub.xhtml#_idTextAnchor087)，“为DataRobot准备数据”，到[*第8章*](B17159_08_Final_NM_ePub.xhtml#_idTextAnchor116)，“模型评分和部署”，我们探讨了在DataRobot中创建、理解、评分和部署基本模型的过程。我们看到了DataRobot自动为我们构建了几个模型，然后我们可以使用这些构建的模型对数据集进行评分。进一步地，在我们选择了一个与我们的需求最匹配的模型之后，DataRobot为我们提供了一个部署所选模型的过程。由于时间序列建模与其他形式的预测建模之间的差异，我们将在本节中探讨如何通过有效地定义和设置DataRobot中的时间序列项目来缓解问题。
- en: The dataset we will use to explore the use of time series modeling with DataRobot
    is the Appliances energy prediction dataset that we explored in [*Chapter 4*](B17159_04_Final_NM_ePub.xhtml#_idTextAnchor087),
    *Preparing Data for DataRobot*. The goal of the project is to predict energy usage.
    This energy usage time series dataset has 4 and a half months' worth of 10-minute
    readings from differing data sources. First, the data involved room temperature
    and humidity in a house. These were monitored using a wireless sensor network
    and the data was stored every 10 minutes. Each of the nine rooms in the house
    had their readings for temperature and humidity stored for the time frame. Second,
    there was external data that provided a nearby airport (public source) detailed
    information pertaining to weather information outside the house, again with a
    10-minute interval. This included wind speed, visibility, dew point, pressure,
    and humidity. This information was merged with the data using date and time. In
    addition, appliances and light usage aligned to date and time were attached to
    the dataset.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将用于探索使用DataRobot进行时间序列建模的数据集是我们在[*第4章*](B17159_04_Final_NM_ePub.xhtml#_idTextAnchor087)，“为DataRobot准备数据”中探讨的家用电器能耗预测数据集。该项目的目标是预测能耗。这个能耗时间序列数据集包含了来自不同数据源4个半月的10分钟读数。首先，涉及到的数据包括房屋内的温度和湿度。这些数据通过无线传感器网络进行监测，并且每10分钟存储一次。房屋中的九个房间都有温度和湿度的读数被存储在相应的时间段内。其次，还有外部数据提供了附近机场（公共来源）关于房屋外部的详细天气信息，同样以10分钟为间隔。这包括风速、能见度、露点、压力和湿度。这些信息通过日期和时间与数据合并。此外，与日期和时间对齐的家用电器和照明使用情况也被附加到数据集中。
- en: 'Within this dataset, it is easy to see that the goal of this time series prediction
    is predicting energy usage. The immediate influencing variables are the temperature
    and atmospheric pressure within the house; however, the external data from the
    weather outside the house is important. We created features calculating the average
    conditions across the nine rooms in the house. In addition, we engineered features
    that captured the difference between the mean room and the external temperature,
    as well as the difference between the mean room and external pressure. Since we
    have two time series (appliance usage and light usage), we will approach this
    problem in two ways. First, as a `.csv` file, as seen in the following screenshot:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个数据集中，很容易看出这个时间序列预测的目标是预测能源使用。直接影响变量是房屋内的温度和大气压力；然而，房屋外部的天气数据也很重要。我们创建了计算房屋九个房间平均条件的特征。此外，我们还设计了捕捉平均房间温度与外部温度以及平均房间压力与外部压力之间差异的特征。由于我们有两个时间序列（设备使用和照明使用），我们将以两种方式来处理这个问题。首先，作为一个`.csv`文件，如下截图所示：
- en: '![Figure 9.1 – Choosing a target variable for time series'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '![图9.1 – 选择时间序列的目标变量'
- en: '](img/B17159_09_01.jpg)'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/B17159_09_01.jpg)'
- en: Figure 9.1 – Choosing a target variable for time series
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 图9.1 – 选择时间序列的目标变量
- en: 'The project is named `Energy_Prediction` and the target variable selected is
    `total_energy` (the sum of light and appliance usage). We proceed as follows:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 项目命名为`Energy_Prediction`，选择的目标变量是`total_energy`（照明和设备使用的总和）。我们按以下步骤进行：
- en: After selecting a target variable, we select a time variable and the nature
    of the time-based modeling. Clicking the `date` feature, which specifies the date
    and times of all readings, as illustrated in the following screenshot:![Figure
    9.2 – Choosing a time-aware function and time variable
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在选择目标变量后，我们选择时间变量和时间建模的性质。点击`date`特征，它指定了所有读数的日期和时间，如下截图所示：![图9.2 – 选择基于时间的函数和时间变量
- en: '](img/B17159_09_02.jpg)'
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图片](img/B17159_09_02.jpg)'
- en: Figure 9.2 – Choosing a time-aware function and time variable
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图9.2 – 选择基于时间的函数和时间变量
- en: 'Once the **Set up time-aware modeling** button is clicked and the time feature
    is selected, the platform requests the type of time-awareness model to be built.
    There are two options—**Automated time series forecasting with backtesting** and
    **Automated machine learning with backtesting**, as described next:'
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**设置基于时间的建模**按钮并选择时间特征后，平台会请求构建的时间感知模型类型。有两种选项——**自动时间序列预测与回测**和**自动机器学习与回测**，如下所述：
- en: '**Automated time series forecasting with backtesting**—This option considers
    previous data in predicting future data. With time series, there is a need to
    forecast multiple future points. A case in point for this type of time-aware project
    could be estimating departmental stores'' daily sales for the next month using
    data from their last year''s sales.'
  id: totrans-34
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**自动时间序列预测与回测**—此选项在预测未来数据时考虑了先前数据。对于时间序列，需要预测多个未来的点。此类基于时间的项目的例子可以是使用去年销售数据来估计下个月百货商店的每日销售额。'
- en: '**Automated machine learning with backtesting**—The automated machine learning
    option, sometimes referred to as **out-of-time validation**, basically creates
    time-based features in a row and then uses a typical predictive model that predicts
    a target variable for that row. Here, we do not use the typical cross-validation
    scheme; instead, this approach employs older data for training and holds back
    newer data for backtesting. Our project''s context problem falls within the forecasting
    category type, so this option is selected, as seen in the following screenshot:'
  id: totrans-35
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**自动机器学习与回测**—自动机器学习选项，有时被称为**时间外验证**，基本上是按时间顺序创建基于时间的特征，然后使用一个典型的预测模型来预测该行的目标变量。在这里，我们不使用典型的交叉验证方案；相反，这种方法使用旧数据来训练，并保留新数据用于回测。我们项目的问题背景属于预测类别，因此选择了此选项，如下截图所示：'
- en: '![Figure 9.3 – Time-aware modeling options'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '![图9.3 – 基于时间的建模选项'
- en: '](img/B17159_09_03.jpg)'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/B17159_09_03.jpg)'
- en: Figure 9.3 – Time-aware modeling options
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 图9.3 – 基于时间的建模选项
- en: 'Once we have selected the **Automated time series forecasting with backtesting**
    option, we are presented with a **Time-Aware Modeling** options tab (see *Figure
    9.3*). Here, a few options are to be carefully selected. We express how far back
    the model draws data to make predictions and also how far forward the model makes
    predictions for. Let''s first consider the **Feature Derivation Window** option.
    This **rolling window** highlights a lag upon which features and statistics for
    time series models are derived in relation to the time from which a forecast is
    made (**forecast point**). The rolling window is expressed in relation to the
    forecast point and automatically moves forward with the passage of time. In an
    ideal situation, this window should cover a seasonal period in your data. Essentially,
    this window typically answers the question: *How far back does the data our model
    uses to make predictions stretch?* Also, there should be enough time between the
    end of the window and your forecasting time to cater for any data ingest delays
    still limiting this time gap, ensuring the data is recent enough. This period
    is known as the **blind history**. In our case, we have assumed that an hour would
    be enough time to allow any blind history, so set the gap before the forecasting
    point to 60 minutes. Considering our data is limited to 4 and a half months, seasonality
    within the context of our problem would be day and night usage. Accordingly, we
    have set our rolling window to 2 days (2,880 minutes), which, when accounting
    for the initial 60-minute forecast point gap, amounts to 2,940 minute'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们选择了**自动时间序列预测与回测**选项，我们将看到一个**时间感知建模**选项卡（见*图9.3*）。在这里，需要仔细选择几个选项。我们表达模型用于预测的数据回溯多远，以及模型预测多远。让我们首先考虑**特征推导窗口**选项。这个**滚动窗口**突出显示了一个滞后，相对于预测点的时间，时间序列模型的特征和统计量是据此推导出来的。滚动窗口相对于预测点表达，并随着时间的推移自动向前移动。在理想情况下，这个窗口应该覆盖你的数据中的季节性周期。本质上，这个窗口通常回答的问题是：*我们模型用于预测的数据回溯多远？*此外，窗口的结束和你的预测时间之间应该有足够的时间来应对任何数据摄入延迟，确保数据足够新。这个时期被称为**盲历史**。在我们的案例中，我们假设一个小时足够的时间来允许任何盲历史，因此将预测点之前的时间间隔设置为60分钟。考虑到我们的数据限制在4个半月，我们问题的背景下的季节性将是日夜使用。因此，我们将我们的滚动窗口设置为2天（2,880分钟），考虑到最初的60分钟预测点间隔，总计为2,940分钟。
- en: 'The second consideration is for the **Forecast Window** option. This defines,
    in relation to the forecast point, how far in the future we are predicting. This
    has two elements; first, when the prediction starts. The predictions should provide
    enough time for actions to be taken yet not be too far in the future to ensure
    these predictions are accurate enough. Secondly, we select our prediction end.
    This is dependent on the start point as well as the nature of our problem. So,
    this aspect answers the question: *How far forward should predictions be made?*
    For the problem at hand, we have selected an **operationalization gap**, a gap
    between the forecast point and the start of the prediction window of 1 day (1,440
    minutes). Also, the rolling window is set at 1 day, which in consideration of
    our operationalization gap becomes 2,880 minutes.'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个考虑因素是**预测窗口**选项。这定义了相对于预测点，我们预测的未来有多远。这有两个要素；首先，预测开始的时间。预测应该提供足够的时间采取行动，但又不能过于遥远，以确保这些预测足够准确。其次，我们选择预测的结束点。这取决于起点以及我们问题的性质。因此，这一方面回答了问题：*预测应该向前推进多远？*对于当前的问题，我们选择了**操作化差距**，即预测点和预测窗口开始之间的1天（1,440分钟）差距。此外，滚动窗口设置为1天，考虑到我们的操作化差距，变为2,880分钟。
- en: Having set up the time series forecasting project in this section, we will now
    explore the processes around building the models, from understanding feature lists
    and their distributions to looking at their impacts on evaluating models.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中我们已经建立了时间序列预测项目，现在我们将探讨构建模型的过程，从理解特征列表及其分布到观察它们对评估模型的影响。
- en: Building time series forecasting models and understanding their model outcomes
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建时间序列预测模型并理解其模型结果
- en: 'Similar to projects we looked at in [*Chapter 4*](B17159_04_Final_NM_ePub.xhtml#_idTextAnchor087),
    *Preparing Data for DataRobot*, through to [*Chapter 8*](B17159_08_Final_NM_ePub.xhtml#_idTextAnchor116),
    *Model Scoring and Deployment*, once we have finished with the initial configurations,
    we scroll up and click on the **Start** button. By doing this, DataRobot automatically
    builds time series models for this project. Before we evaluate the models, it
    would be useful to understand the nature of the features the platform extracts.
    DataRobot extracts features from the data that differ considerably from those
    of other prediction models, as is evident in the following screenshot:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 与我们在[*第 4 章*](B17159_04_Final_NM_ePub.xhtml#_idTextAnchor087)中查看的项目类似，即[*准备数据以供
    DataRobot 使用*](B17159_08_Final_NM_ePub.xhtml#_idTextAnchor116)到[*第 8 章*](B17159_08_Final_NM_ePub.xhtml#_idTextAnchor116)的[*模型评分和部署*]，一旦我们完成了初始配置，我们就向上滚动并点击**开始**按钮。通过这样做，DataRobot
    会自动为该项目构建时间序列模型。在我们评估模型之前，了解平台提取的特征的性质将是有用的。DataRobot 从数据中提取的特征与其它预测模型大不相同，如下面的截图所示：
- en: '![Figure 9.4 – Feature lists'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 9.4 – 特征列表'
- en: '](img/B17159_09_04.jpg)'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片 B17159_09_04.jpg]'
- en: Figure 9.4 – Feature lists
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.4 – 特征列表
- en: 'The lists shown under the **Feature Lists** tab are constructed as part of
    **exploratory data analysis** (**EDA**) and itemize differing lists of features
    that DataRobot employs in creating models. Many of the feature lists involve **derived
    features**, which are created automatically based on properties of time series.
    A further discussion on derived features will be carried out later in this section.
    It is easy to see that some of the lists involve features that are extracted from
    the original data (for example, **Time Series Extracted Features**). Others involve
    features created solely from dates, while some are assessed as informative. Most
    lists appear to be combinations of differing types (for example, **Time Series
    Informative Features**). Importantly, the feature lists provide the descriptions
    as well as the number of features for each feature list name. Feature lists that
    could be pivotal are presented as part of the **Leaderboard** feature, as illustrated
    in the following screenshot, which guides our final model choice:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 在**特征列表**选项卡下显示的列表是作为**探索性数据分析**（**EDA**）的一部分构建的，并列出了 DataRobot 在创建模型时使用的不同特征列表。许多特征列表涉及**派生特征**，这些特征是根据时间序列的属性自动创建的。关于派生特征的进一步讨论将在本节后面进行。很容易看出，一些列表涉及从原始数据中提取的特征（例如，**时间序列提取特征**）。其他列表仅涉及从日期中创建的特征，而有些则被认为是有信息的。大多数列表似乎是不同类型（例如，**时间序列信息特征**）的组合。重要的是，特征列表提供了每个特征列表名称的描述以及特征的数量。可能至关重要的特征列表作为**排行榜**功能的一部分展示，如下面的截图所示，这指导我们最终模型的选择：
- en: '![Figure 9.5 – Model leaderboard'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 9.5 – 模型排行榜'
- en: '](img/B17159_09_05.jpg)'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片 B17159_09_05.jpg]'
- en: Figure 9.5 – Model leaderboard
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.5 – 模型排行榜
- en: The **Leaderboard** feature offers insights into models that have been built
    for a DataRobot project. It provides information regarding model names and **identifiers**
    (**IDs**), their accuracy metrics, and their types, versions, and sample sizes
    for the model development. With time series modeling, however, there are some
    differences, as noted next. Firstly, the sample size is present in data ranges.
    This is due to the time-based nature of time series datasets. Unlike other modeling
    forms, the time order of the data does affect outcomes; as a result, data is selected
    in time ranges. In this case, as can be seen in *Figure 9.5*, our models were
    built using 3 months', 21 hours', and 51 minutes' worth of data. Secondly, instead
    of the **Validation** and **Cross-Validation** columns, we have the **Backtest
    1** and **All Backtests** columns. The backtests follow logically from the discussion
    regarding the sample size (see [*Chapter 6*](B17159_06_Final_NM_ePub.xhtml#_idTextAnchor104),
    *Model Building with DataRobot*). The backtests provide an evaluation of the model
    performance on a subset of the data. However, unlike a typical validation, the
    data is time-ordered, and the size and number of backtests can be altered as needed.
    We have used the default backtest setting for this example project so that the
    data was partitioned in such a way that only one backtest partition was available
    for modeling. Finally, with time series modeling projects, there appear to be
    more feature lists. As with other predictive project types, the models could be
    ordered or selected using any of the columns on the **Leaderboard** feature.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '**排行榜**功能提供了对为DataRobot项目构建的模型的洞察。它提供了有关模型名称和**标识符**（**ID**）、它们的准确度指标以及它们的类型、版本和模型开发中的样本大小的信息。然而，在时间序列建模中，有一些差异，如下所述。首先，样本大小存在于数据范围内。这是由于时间序列数据集基于时间的特性。与其他建模形式不同，数据的顺序确实会影响结果；因此，数据是在时间范围内选择的。在这种情况下，如*图9.5*所示，我们的模型是使用3个月、21小时和51分钟的数据构建的。其次，我们没有**验证**和**交叉验证**列，而是有**回测1**和**所有回测**列。回测逻辑上遵循关于样本大小的讨论（参见[*第6章*](B17159_06_Final_NM_ePub.xhtml#_idTextAnchor104)，*使用DataRobot进行模型构建*）。回测提供了对数据子集上模型性能的评估。然而，与典型的验证不同，数据是按时间顺序排列的，回测的大小和数量可以根据需要更改。我们为这个示例项目使用了默认的回测设置，以便数据以这种方式分区，使得只有一个回测分区可用于建模。最后，在时间序列建模项目中，似乎有更多的特征列表。与其他预测项目类型一样，模型可以通过**排行榜**功能上的任何列进行排序或选择。'
- en: 'There are a number of metrics against which time series forecasting models
    could be assessed. This, of course, depends on the model. For regression-type
    outcomes, some advocate the use of **Root Mean Square Error** (**RMSE**). The
    nature of the problem remains critical in determining the metrics for assessment.
    That said, the role of the **baseline model** on the leaderboard is crucial to
    evaluating other models. The baseline model employs the most recent value in making
    its predictions. As such, comparing models with the baseline prediction blueprint
    plays a pivotal role in the model evaluation as it somewhat answers the question:
    *To what extent are our models better than a naïve prediction from the most recent
    data?* DataRobot provides the **Mean Absolute Scaled Error** (**MASE**), which
    compares the **Mean Absolute Error** (**MAE**) of models of interest with those
    of the baseline model. For instance, the **Eureqa Generalized Additive Model (250
    Generations)** model, as presented in the following screenshot, has a comparative
    ratio of about 0.76 for **Backtest 1**. This suggests that the Eureqa model is
    about 24% better than the baseline. Since the **Holdout** metric could highlight
    considerable changes within the data, it should be included in model evaluation
    but not used in isolation. Other indications when evaluating models are covered
    within the *Advanced topics in time series modeling* section of this chapter.
    Model names could be clicked to provide elaborate insights about the data and
    its processes. We now turn to those we consider unique to time series forecasting,
    using the **Eureqa Generalized Additive Model (250 Generations)** example here:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多指标可以用来评估时间序列预测模型。这当然取决于模型本身。对于回归类型的输出，有些人提倡使用**均方根误差**（**RMSE**）。问题的本质在确定评估指标时仍然至关重要。话虽如此，**基线模型**在排行榜上的作用对于评估其他模型至关重要。基线模型在做出预测时使用最新的值。因此，将模型与基线预测蓝图进行比较在模型评估中起着关键作用，因为它在一定程度上回答了以下问题：*我们的模型在多大程度上优于从最新数据中做出的简单预测？*
    DataRobot提供了**平均绝对缩放误差**（**MASE**），它将感兴趣模型的**平均绝对误差**（**MAE**）与基线模型的进行比较。例如，以下截图所示的**Eureqa广义加性模型（250代）**模型，在**回测1**中的比较比率为约0.76。这表明Eureqa模型比基线模型好约24%。由于**保留集**指标可能会突出数据中的重大变化，因此它应该包含在模型评估中，但不应单独使用。本章的*时间序列建模高级主题*部分涵盖了评估模型时的其他指示。点击模型名称可以提供关于数据和其过程更详细的见解。我们现在转向我们认为对时间序列预测独特的内容，以下使用**Eureqa广义加性模型（250代）**作为例子：
- en: '![Figure 9.6 – Impact of original features'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '![图9.6 – 原始特征的冲击](img/B17159_09_06.jpg)'
- en: '](img/B17159_09_06.jpg)'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/B17159_09_06.jpg)'
- en: Figure 9.6 – Impact of original features
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 图9.6 – 原始特征的冲击
- en: The **Understand** tab presents us with **Feature Impact**, **Feature Effects**,
    **Prediction Explanations**, and **Word Cloud** capabilities, which we have already
    encountered in [*Chapter 7*](B17159_07_Final_NM_ePub.xhtml#_idTextAnchor110),
    *Model Understanding and Explainability*. **Feature Impact** shows the relative
    extent to which features contribute to a model's overall accuracy. A click on
    the **Feature Impact** tab opens the **Original features** page (see *Figure 9.6*).
    The original features are features as they were in the dataset.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '**理解**标签页向我们展示了**特征影响**、**特征效应**、**预测解释**和**词云**功能，这些我们在[*第7章*](B17159_07_Final_NM_ePub.xhtml#_idTextAnchor110)的*模型理解和可解释性*中已经遇到。**特征影响**显示了特征对模型整体准确性的相对贡献程度。点击**特征影响**标签页将打开**原始特征**页面（见图9.6）。原始特征是它们在数据集中存在的特征。'
- en: 'The other tab within `total_energy (1440 minute average baseline)`) is seen
    to be a feature constructed based on the stationary nature of the time series,
    as illustrated in the following screenshot. This is because it highlights the
    importance of the average 1,440-minute baseline energy on the accuracy of the
    model:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 在`total_energy (1440分钟平均基线)`中的其他标签页看起来是基于时间序列的平稳性构建的特征，如下面的截图所示。这是因为它突出了平均1,440分钟基线能量对模型准确性的重要性：
- en: '![Figure 9.7 – Impact of derived features'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '![图9.7 – 导出特征的冲击](img/B17159_09_07.jpg)'
- en: '](img/B17159_09_07.jpg)'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/B17159_09_07.jpg)'
- en: Figure 9.7 – Impact of derived features
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 图9.7 – 导出特征的冲击
- en: It is reasonable, as is evident in *Figure 9.7*, that a considerable number
    of derived features appear to be created from the stationary property of time
    series, which on its own could be indicative of this time series being quite stationary.
    That said, caution needs to be exercised on reaching this conclusion because our
    dataset only entails 4 and a half months' worth of data; for instance, our dataset
    only covers January 2016 to May 2016, so does not account for the late Summer,
    Autumn, and early Winter months. As such, seasonality could occur if we were using
    a dataset covering a longer time frame.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 如*图9.7*所示，从时间序列的平稳性中衍生出相当数量的特征似乎是合理的，这本身可能表明这个时间序列相当平稳。然而，在得出这个结论时需要谨慎，因为我们的数据集只包含了4个半月的值得数据；例如，我们的数据集只覆盖了2016年1月到2016年5月，因此没有涵盖晚夏、秋季和早冬月份。因此，如果我们使用覆盖更长时间范围的数据集，可能会出现季节性。
- en: DataRobot creates features that capitalize on the properties of time series
    to improve the accuracy of its models. Although not evident in this project, with
    seasonality or cyclicity, DataRobot establishes when periodic variations occur
    and creates features accordingly. Based on this information, it next detects patterns
    of seasonality—for instance, a seasonality that occurs during a time frame could
    be defined either by counting up from the beginning of the time frame or counting
    down from the end of the time frame. As such, the platform could detect and build
    features that, for instance, use energy usage on the last Saturday of March to
    predict energy usage on the last Saturday of April. In a similar fashion, DataRobot
    uses features built on **differencing** to improve model performance. It could
    utilize the average usage during the first week in March as a feature to predict
    usage during the first week of April.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: DataRobot创建了利用时间序列特性的特征，以提高其模型的准确性。尽管在这个项目中不明显，但如果有季节性或周期性，DataRobot会确定周期性变化发生的时间，并相应地创建特征。基于这些信息，它接下来检测季节性模式——例如，在某个时间段内发生的季节性可以通过从时间段的开始计数或从时间段的结束计数来定义。因此，该平台可以检测并构建特征，例如，使用3月的最后一个周六的能量使用情况来预测4月的最后一个周六的能量使用情况。以类似的方式，DataRobot使用基于**差分**的特征来提高模型性能。它可以使用3月第一周的平均使用情况作为特征来预测4月第一周的使用情况。
- en: 'Moving on to the **Describe** tab, upon opening the **Blueprint** tab, we are
    exposed to the stages involved in the modeling process of time series projects.
    As detailed in the following screenshot, we can quickly appreciate that this is
    not very different from those of other predictive projects encountered in preceding
    chapters:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 切换到**描述**标签页，打开**蓝图**标签页后，我们就会看到时间序列项目建模过程中涉及到的各个阶段。如以下截图所示，我们可以迅速认识到这与其他章节中遇到的其他预测项目并没有太大区别：
- en: '![Figure 9.8 – Model blueprint'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '![图9.8 – 模型蓝图'
- en: '](img/B17159_09_08.jpg)'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17159_09_08.jpg)'
- en: Figure 9.8 – Model blueprint
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 图9.8 – 模型蓝图
- en: We have now spent time building and understanding time series forecasting models.
    The next logical step is to use our selected model to make predictions.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在已经花费时间构建和理解时间序列预测模型。下一步合乎逻辑的步骤是使用我们选定的模型进行预测。
- en: Making predictions with time series models
  id: totrans-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用时间序列模型进行预测
- en: DataRobot provides us with tools to make predictions pain-free. There are two
    approaches to making predictions for time series. For small datasets under 1 **gigabyte**
    (**GB**), predictions could be made using the **Make Predictions** tab on the
    **Leaderboard** feature. This involves setting up and uploading a prediction dataset,
    then scoring it within the **Drag and drop a new dataset** **user interface**
    (**UI**) functionality. For significantly larger datasets, models need to be deployed
    and predictions are made using an **application programming interface** (**API**).
    In this chapter, we will cover the first approach to making predictions. With
    DataRobot, general model deployments and working with APIs are extensively discussed
    in [*Chapter 12*](B17159_12_Final_NM_ePub.xhtml#_idTextAnchor176), *DataRobot
    Python API*.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: DataRobot为我们提供了使预测变得轻松的工具。对于小于1 **千兆字节**（**GB**）的小数据集，可以使用**排行榜**功能中的**制作预测**标签页进行预测。这涉及到设置和上传预测数据集，然后在**拖放新数据集**用户界面（**UI**）功能中进行评分。对于显著更大的数据集，需要部署模型，并使用**应用程序编程接口**（**API**）进行预测。在本章中，我们将介绍预测的第一种方法。在[*第12章*](B17159_12_Final_NM_ePub.xhtml#_idTextAnchor176)，*DataRobot
    Python API*中，我们将详细讨论一般模型部署和与API一起工作。
- en: 'The leaderboard''s drag-and-drop approach to scoring models for time series
    models somewhat differs from those of traditional models, as seen in [*Chapter
    8*](B17159_08_Final_NM_ePub.xhtml#_idTextAnchor116), *Model Scoring and Deployment*.
    When the **Make Predictions** tab is opened, DataRobot briefly outlines the recency
    and quantity of the data needed to make predictions. This outline is mostly consistent
    with the forecasting windows established as part of the configuration during the
    model development, as well as features derived. As the prediction process shows
    in the following screenshot, the prediction dataset requires a minimum of 4,320
    minutes of historic data outside of the 60 minutes prior to the forecasting point.
    In addition, when models include derived features that involve features in earlier
    time periods, the earlier time period is also included in the dataset requirement.
    Because the model in question has 24-hours''-difference derived features, this
    increases the requirement to 5,820 minutes. This 5,820-minute requirement includes
    an initial 60-minute forecast point gap window, 4,320-minute base prediction requirement
    data, and 1,440 minutes added on for the derived differencing features. This enables
    the model to predict 2,880 minutes in advance of the forecasting point after the
    1,440-minute operationalization gap. Some of these features are presented here:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 排行榜对时间序列模型评分的拖放方法与传统的模型方法略有不同，如[第8章](B17159_08_Final_NM_ePub.xhtml#_idTextAnchor116)“模型评分和部署”中所述。当打开**预测**选项卡时，DataRobot会简要概述进行预测所需数据的最新性和数量。这个概述与模型开发配置期间建立的预测窗口以及派生特征基本一致。正如以下截图所示的预测过程，预测数据集需要至少4,320分钟的历史数据，超出预测点前60分钟。此外，当模型包含涉及早期时间段的派生特征时，早期时间段也包含在数据集要求中。由于所讨论的模型具有24小时差异的派生特征，这增加了对5,820分钟的要求。这5,820分钟的要求包括一个初始的60分钟预测点间隔窗口，4,320分钟的基础预测需求数据，以及为派生差分特征增加的1,440分钟。这使得模型在1,440分钟的操作间隔之后，能够在预测点前2,880分钟进行预测。其中一些特征如下所示：
- en: '![Figure 9.9 – Make Predictions window'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '![图9.9 – 预测窗口'
- en: '](img/B17159_09_09.jpg)'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '![图9.9 – 预测窗口](img/B17159_09_09.jpg)'
- en: Figure 9.9 – Make Predictions window
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 图9.9 – 预测窗口
- en: 'To make predictions, if the data format is consistent with the training data,
    proceed as follows:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 要进行预测，如果数据格式与训练数据一致，请按以下步骤操作：
- en: Click on **Import data**, which allows the data to be ingested from a local
    source, a **Uniform Resource Locator** (**URL**), оnе оf уоur еxіѕtіng dаtа ѕоurсеѕ,
    оr AI Catalog. If no row is found after the default forecast point, DataRobot
    generates a template. For this to be done, there must be no empty row within the
    forecast window and the template file must meet the upload size limit conditions.
    After the file has been uploaded, DataRobot sets the forecast points and includes
    the rows required to meet the forecast window expectations.
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**导入数据**，允许从本地源、**统一资源定位符**（**URL**）、现有的数据源之一或AI目录中摄取数据。如果在默认预测点之后没有找到行，DataRobot将生成一个模板。为此，预测窗口内必须没有空行，并且模板文件必须满足上传大小限制条件。文件上传后，DataRobot设置预测点并包括满足预测窗口期望所需的行。
- en: Click on the **Compute predictions** button after uploading the data, as illustrated
    in the following screenshot, since the uploaded prediction file is the most recent,
    without gaps and the fill number of rows expected:![Figure 9.10 – Computing time
    series predictions
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在上传数据后，点击以下截图所示的**计算预测**按钮，因为上传的预测文件是最新的，没有间隔，并且行数符合预期：![图9.10 – 计算时间序列预测
- en: '](img/B17159_09_10.jpg)'
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图9.10 – 计算时间序列预测](img/B17159_09_10.jpg)'
- en: Figure 9.10 – Computing time series predictions
  id: totrans-78
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图9.10 – 计算时间序列预测
- en: The **Forecast settings** button in *Figure 9.10* provides options for predictions
    where either the forecasting point is not expected to be the most recent or changes
    the range for which predictions are to be made.
  id: totrans-79
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在[图9.10](#)中的**预测设置**按钮提供了预测选项，其中预测点可能不是最新的，或者更改了预测的范围。
- en: 'To make changes of this nature, click on the **Forecast settings** button,
    which opens the **Forecast Point Predictions** tab by default, as illustrated
    in the following screenshot. This window offers a forecast point slide tab selector,
    which can be configured by either a slide or entering the actual time value. Invalid
    dates are, however, disabled:'
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要进行此类更改，请单击**预测设置**按钮，它默认打开**预测点预测**选项卡，如图下截图所示。此窗口提供了一个预测点滑动选项卡选择器，可以通过滑动或输入实际时间值进行配置。然而，无效的日期已被禁用：
- en: '![Figure 9.11 – Forecast Point Predictions settings'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 9.11 – 预测点预测设置'
- en: '](img/B17159_09_11.jpg)'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17159_09_11.jpg)'
- en: Figure 9.11 – Forecast Point Predictions settings
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.11 – 预测点预测设置
- en: As alluded to earlier, there is a limit to times that can be selected as a forecast
    point. The forecast point must be less than or equal to the most recent one. In
    the case of this project, this is **2016-05-27 19:00:00:00**, which is the most
    recent data row time, with an operationalization gap of **1440** minutes. A similar
    operation could be carried out to alter the prediction date ranges. The **Forecast
    Range Predictions** feature would ideally be used to validate models as opposed
    to making future predictions.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，可以选择作为预测点的次数有限。预测点必须小于或等于最新的一个。在本项目的情况下，这是**2016-05-27 19:00:00:00**，这是最新的数据行时间，有**1440**分钟的操作间隔。可以通过类似的操作来更改预测日期范围。理想情况下，**预测范围预测**功能将用于验证模型，而不是进行未来预测。
- en: In this section, we highlighted the importance of ensuring our prediction dataset
    for time series models is like that for training models. We went on to make predictions
    and interpreted other outcomes from the model. Next, we will explore more advanced
    topics involving time series modeling with DataRobot.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们强调了确保我们的时间序列模型预测数据集与训练模型数据集相似的重要性。我们继续进行预测并从模型中解释其他结果。接下来，我们将探讨涉及 DataRobot
    的时间序列建模的更高级主题。
- en: Advanced topics in time series modeling
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 时间序列建模的高级主题
- en: In this chapter, we have learned how to configure, build and make predictions
    with basic time series forecasting models in DataRobot. In the preceding section,
    our attention was focused on building models that have one-time series. However,
    you could have a situation where you might have to make multi-time series predictions.
    Within the context of our energy utilization problem, we might want to forecast
    the usage of lights and appliances. Elsewhere, an energy company might want to
    forecast energy usage for differing cities or households within the same model.
    We will now take a deep dive into solving problems of this nature. Also, we will
    explore future ways other advanced approaches may be used in assessing our time
    series models. Finally, we will acknowledge the role of scheduled events on time
    series and highlight the provisions made by DataRobot to handle this possibility.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了如何在 DataRobot 中配置、构建和使用基本时间序列预测模型进行预测。在前一节中，我们的注意力集中在构建只有一个时间序列的模型。然而，你可能会有这样的情况，需要做出多时间序列预测。在我们的能源利用问题背景下，我们可能想要预测灯光和电器的使用情况。在其他地方，能源公司可能想要在同一模型中预测不同城市或家庭的能源使用情况。现在，我们将深入研究这类问题的解决方案。此外，我们将探讨未来其他高级方法可能用于评估我们的时间序列模型。最后，我们将承认计划事件对时间序列的影响，并强调
    DataRobot 为处理这种可能性所采取的措施。
- en: 'The dataset used for this project highlights the energy usage of lights and
    other appliances. For the earlier project, we totaled up all usage as our target
    variable, but in this project (named `Energy_Prediction_2`), models will be built
    to predict usage for each device type. This dataset now has two series, implying
    timestamps could recur, yet timestamps within each series must be unique. The
    differentiating column, `Device_type`, is the ID for the device type that the
    usage is attributed to. After qualifying the project as being time-aware and choosing
    its type as `Device_type`:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 本项目使用的数据集突出了灯光和其他电器的能耗。对于早期项目，我们将所有使用量加总作为我们的目标变量，但在本项目（命名为`Energy_Prediction_2`）中，将建立模型来预测每种设备类型的能耗。现在该数据集有两个序列，这意味着时间戳可能会重复，但每个序列内的时间戳必须是唯一的。区分列`Device_type`是分配给使用量的设备类型的ID。在将项目验证为时间感知并选择其类型为`Device_type`后：
- en: '![Figure 9.12 – Multi-series time series forecasting setup'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 9.12 – 多序列时间序列预测设置'
- en: '](img/B17159_09_12.jpg)'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17159_09_12.jpg)'
- en: Figure 9.12 – Multi-series time series forecasting setup
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.12 – 多序列时间序列预测设置
- en: 'For this project, we are interested in further evaluating our models. So, the
    sequel to customizing our forecasting window, within the `5 + Holdout`. The following
    screenshot details the setup for this configuration, and we can see how the training,
    validation, and holdout data is partitioned from the initial data. It is important
    to highlight that to set up the backtests, we must consider any form of seasonality,
    periodicity, and/or cyclicity within the data and ensure that every fold has at
    least one instance of these. This is because every backtest should be a complete
    dataset on its own, so seasonality, periodicity, and cyclicity need to be accounted
    for within each backtest. The validation and gap lengths can also be altered.
    The default length for this project is set to over 13 hours and 9 minutes. You
    can see the configuration here:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个项目，我们感兴趣的是进一步评估我们的模型。因此，在自定义我们的预测窗口，在`5 + Holdout`内进行。以下截图详细说明了此配置的设置，我们可以看到训练、验证和保留数据是如何从初始数据中划分出来的。重要的是要强调，为了设置回测，我们必须考虑数据中的任何形式的季节性、周期性和/或循环性，并确保每个折叠至少有一个这些实例。这是因为每个回测都应该是一个完整的数据集，所以季节性、周期性和循环性需要在每个回测中考虑。验证和间隔长度也可以更改。此项目的默认长度设置为超过13小时9分钟。您可以在以下位置查看配置：
- en: '![Figure 9.13 – Backtest configuration'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '![图9.13 – 回测配置'
- en: '](img/B17159_09_13.jpg)'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片 B17159_09_13.jpg]'
- en: Figure 9.13 – Backtest configuration
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 图9.13 – 回测配置
- en: 'Having configured backtesting, we then click on **Start** to train the models.
    When models are created, the process of evaluation is like that for single time
    series models. As evident in the following screenshot, we can see the **All Backtests**
    metric, which measures the average performance of a model across all backtests.
    As such, it provides an interesting way to quickly assess not only the model performance
    but also the consistency of the data pattern over time:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 在配置回测后，我们点击**开始**来训练模型。当模型创建后，评估过程类似于单一时间序列模型。正如以下截图所示，我们可以看到**所有回测**指标，它衡量模型在所有回测中的平均性能。因此，它提供了一种快速评估模型性能以及数据模式随时间一致性的有趣方法：
- en: '![Figure 9.14 – Accuracy over time'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '![图9.14 – 随时间变化的准确性'
- en: '](img/B17159_09_14.jpg)'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片 B17159_09_14.jpg]'
- en: Figure 9.14 – Accuracy over time
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 图9.14 – 随时间变化的准确性
- en: 'The **Accuracy Over Time** feature within the model **Evaluate** tab enables
    users to have a visual yet in-depth assessment of their models over time (see
    *Figure 9.14*). Here, the predicted and actual are visually presented. Within
    this window, you can choose a **Series to plot** setting and alter the **Backtest**
    and the **Forecast distance** settings. This view, within the context of a business,
    helps understand if there are periods of poor performance that could imply an
    aspect of a business not represented in the data. The **Forecasting Accuracy**
    window, as shown in the following screenshot, is another important representation
    that suggests how model performance changes as the forecast distance changes:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 模型**评估**标签页中的**随时间变化的准确性**功能允许用户对其模型随时间的变化进行直观且深入的评估（见*图9.14*）。在这里，预测值和实际值以视觉方式呈现。在此窗口中，您可以选择**要绘制的序列**设置，并更改**回测**和**预测距离**设置。在业务背景下，此视图有助于了解是否存在表现不佳的时期，这可能意味着数据中未表示的业务方面。以下截图所示的**预测准确性**窗口是另一个重要的表示，它表明模型性能如何随着预测距离的变化而变化：
- en: '![Figure 9.15 – Forecasting Accuracy window'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '![图9.15 – 预测准确性窗口'
- en: '](img/B17159_09_15.jpg)'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片 B17159_09_15.jpg]'
- en: Figure 9.15 – Forecasting Accuracy window
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 图9.15 – 预测准确性窗口
- en: The **Forecasting Accuracy** window highlights alterations in models' performance
    as forecasts are made into the future. This view allows us to assess where models'
    performance is similar across time, which is indicative of when models could be
    used within the business. Furthermore, it highlights when the models' performance
    considerably exceeds those of the baseline model when the MASE performance metric
    is used. As illustrated in *Figure 9.15*, the model's performance on **Backtest
    1** seems to begin to be considerably better than the baseline model around the
    +1,960-minute mark. The stability view presents users with the measure of scores
    across time ranges.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '**预测准确性**窗口突出了模型性能的变化，因为预测被延伸到未来。这个视图使我们能够评估模型性能在时间上的相似性，这表明模型何时可以在业务中使用。此外，它还突出了当使用MASE性能指标时，模型性能显著超过基线模型的情况。如图9.15所示，模型在**回测1**的性能似乎在+1,960分钟标记处开始显著优于基线模型。稳定性视图向用户展示了分数随时间范围的变化。'
- en: With the quest for better-performing models comes a need to adopt some changes
    to modeling paradigms. The default models available for time series modeling might
    just not provide the required performance. In that case, the model repository,
    as explained in [*Chapter 6*](B17159_06_Final_NM_ePub.xhtml#_idTextAnchor104),
    *Model Building with DataRobot*, presents us with options to select traditional
    time series models such as **AutoRegressive Integrated Moving Average** (**ARIMA**)
    and more recent models such as Keras **Long Short-Term Memory** (**LSTM**) and
    **XGBoost** (**XGB**). Depending on the nature of the time series under investigation,
    these modeling approaches sometimes present better performance.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 随着对性能更优的模型的追求，我们需要对建模范式进行一些改变。对于时间序列建模可用的默认模型可能根本无法提供所需的表现。在这种情况下，正如在[*第6章*](B17159_06_Final_NM_ePub.xhtml#_idTextAnchor104)“使用DataRobot进行模型构建”中解释的那样，模型库提供了选择传统时间序列模型（如**自回归积分移动平均**（**ARIMA**））和更近期的模型（如Keras
    **长短期记忆**（**LSTM**）和**XGBoost**（**XGB**））的选项。根据研究时间序列的性质，这些建模方法有时会呈现更好的性能。
- en: Summary
  id: totrans-106
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we have extensively examined how DataRobot could be used to
    build time series models. We briefly discussed the unique opportunities time series
    modeling presents businesses, as well as the challenges it presents for analysts
    and data scientists. We used DataRobot to create both single and multiple time
    series models. We also described how predictions could be made using models built
    by DataRobot. This was followed by a discussion on advanced aspects of DataRobot's
    time series capabilities.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们广泛探讨了如何使用DataRobot构建时间序列模型。我们简要讨论了时间序列建模为商业带来的独特机会，以及它对分析师和数据科学家提出的挑战。我们使用DataRobot创建了单时间序列和多时间序列模型。我们还描述了如何使用DataRobot构建的模型进行预测。随后，我们讨论了DataRobot时间序列能力的先进方面。
- en: Forecasting is extremely important to business because of its ability to foretell
    what is likely to occur in the future considering time-dependent variables. Another
    commercially valuable area is the ability to suggest the interest that differing
    clients would have for a wide array of products. This is where recommender systems
    come in.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 预测对商业至关重要，因为它能够根据时间依赖变量预测未来可能发生的事情。另一个具有商业价值的领域是建议不同客户对广泛产品感兴趣的能力。这就是推荐系统发挥作用的地方。
- en: In the next chapter, [*Chapter 10*](B17159_10_Final_NM_ePub.xhtml#_idTextAnchor139),
    *Recommender Systems*, we look at how DataRobot could be used to build recommender
    engines.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章[*第10章*](B17159_10_Final_NM_ePub.xhtml#_idTextAnchor139)“推荐系统”中，我们将探讨如何使用DataRobot构建推荐引擎。
