- en: Affinity Analysis
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Affinity analysis is the heart of **Market Basket Analysis** (**MBA**). It can
    discover co-occurring relationships among activities performed by specific users
    or groups. In retail, affinity analysis can help you understand the purchasing
    behavior of customers. These insights can drive revenue through smart cross-selling
    and upselling strategies and can assist you in developing loyalty programs, sales
    promotions, and discount plans.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will look into the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: MBA
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Association rule learning
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Other applications in various domains
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: First, we will revise the core association rule-learning concepts and algorithms,
    such as support and lift Apriori algorithms and the FP-Growth algorithm. Next,
    we will use Weka to perform our first affinity analysis on a supermarket dataset
    and study how to interpret the resulting rules. We will conclude this chapter
    by analyzing how association rule learning can be applied in other domains, such
    as IT operations analytics, and medicine.
  prefs: []
  type: TYPE_NORMAL
- en: Market basket analysis
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Since the introduction of electronic points of sale, retailers have been collecting
    an incredible amount of data. To leverage this data in to produce business value,
    they first developed a way to consolidate and aggregate the data to understand
    the basics of the business.
  prefs: []
  type: TYPE_NORMAL
- en: 'Recently, the focus shifted to the lowest level of granularity—the market basket
    transaction. At this level of detail, the retailers have direct visibility into
    the market basket of each customer who shopped at their store, understanding not
    only the quantity of the purchased items in that particular basket, but also how
    these items were bought in conjunction with one another. This can be used to drive
    decisions about how to differentiate store assortment and merchandise, as well
    as to effectively combine offers of multiple products, within and across categories,
    to drive higher sales and profits. These decisions can be implemented across an
    entire retail chain, by channel, at the local store level, and even for a specific
    customer, with so-called personalized marketing, where a unique product offering
    is made for each customer:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/edb61ab2-da9d-439b-ae53-4148bb02191a.png)'
  prefs: []
  type: TYPE_IMG
- en: 'MBA covers a wide variety of analysis:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Item affinity**: This defines the likelihood of two (or more) items being
    purchased together.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Identification of driver items**: This enables the identification of the
    items that drive people to the store and always need to be in stock.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Trip classification**: This analyzes the content of the basket and classifies
    the shopping trip into a category: weekly grocery trip, special occasion, and
    so on.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Store-to-store comparison**: Understanding the number of baskets allows any
    metric to be divided by the total number of baskets, effectively creating a convenient
    and easy way to compare the stores to different characteristics (units sold per
    customer, revenue per transaction, number of items per basket, and so on).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Revenue optimization**: This helps in determining the magic price points
    for this store, increasing the size and the value of the market basket.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Marketing**: This helps in identifying more profitable advertising and promotions,
    targeting offers more precisely to improve ROI, generating better loyalty card
    promotions with longitudinal analysis and attracting more traffic to the store.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Operations optimization**: This helps in matching the inventory to the requirement
    by customizing the store and assortment to trade area demographics, and optimizing
    store layout.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Predictive models help retailers to direct the right offer to the right customer
    segments or profiles, as well as to gain an understanding of what is valid for
    which customer, predict the probability score of customers responding to this
    offer, and understand the customer value gain from the offer acceptance.
  prefs: []
  type: TYPE_NORMAL
- en: Affinity analysis
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Affinity analysis** is used to determine the likelihood that a set of items
    will be bought together. In retail, there are natural product affinities; for
    example, it is very typical for people who buy hamburger patties to buy hamburger
    rolls, along with ketchup, mustard, tomatoes, and other items that make up the
    burger experience.'
  prefs: []
  type: TYPE_NORMAL
- en: While there are some product affinities that might seem trivial, there are some
    affinities that are not very obvious. A classic example is toothpaste and tuna.
    It seems that people who eat tuna are more prone to brushing their teeth right
    after finishing their meal. So, why it is important for retailers to get a good
    grasp of product affinities? This information is critical to appropriately plan
    promotions, as reducing the price for some items may cause a spike on related
    high-affinity items without the need to further promote these related items.
  prefs: []
  type: TYPE_NORMAL
- en: 'In the following section, we''ll look into the algorithms for association rule
    learning: Apriori and FP-Growth.'
  prefs: []
  type: TYPE_NORMAL
- en: Association rule learning
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Association rule learning** has been a popular approach to discover interesting
    relationships among items in large databases. It is most commonly applied in retail
    to reveal regularities between products.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Association rule learning approaches find patterns as interesting strong rules
    in the database using different measures of interestingness. For example, the
    following rule would indicate, that if a customer buys onions and potatoes together,
    they are likely to also buy hamburger meat: {onions, potatoes} -> {burger}.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Another classic story probably told in every machine-learning class is the
    beer and diaper story. An analysis of supermarket shoppers'' behavior showed that
    customers, presumably young men, who buy diapers also tend to buy beer. It immediately
    became a popular example of how an unexpected association rule might be found
    from everyday data; however, there are varying opinions as to how much of the
    story is true. In *DSS News 2002,* Daniel Power*s* says this:'
  prefs: []
  type: TYPE_NORMAL
- en: '"In 1992, Thomas Blischok, manager of a retail consulting group at Teradata,
    and his staff prepared an analysis of 1.2 million market baskets from about 25
    Osco Drug stores. Database queries were developed to identify affinities. The
    analysis did discover that between 5:00 and 7:00 pm, consumers bought beer and
    diapers. Osco managers did not exploit the beer and diapers relationship by moving
    the products closer together on the shelves."'
  prefs: []
  type: TYPE_NORMAL
- en: In addition to the preceding example from MBA, association rules are today employed
    in many application areas, including web usage mining, intrusion detection, continuous
    production, and bioinformatics. We'll take a closer look at these areas later
    in this chapter.
  prefs: []
  type: TYPE_NORMAL
- en: Basic concepts
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Before we dive into algorithms, let's first review the basic concepts.
  prefs: []
  type: TYPE_NORMAL
- en: Database of transactions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In association rule mining, the dataset is structured a bit differently than
    the approach presented in the first chapter. First, there is no class value, as
    this is not required for learning association rules. Next, the dataset is presented
    as a transactional table, where each supermarket item corresponds to a binary
    attribute. Hence, the feature vector could be extremely large.
  prefs: []
  type: TYPE_NORMAL
- en: 'Consider the following example. Suppose we have four receipts, as shown next.
    Each receipt corresponds to a purchasing transaction:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/ac76a6f0-2347-4519-9838-bc68759379dc.png)'
  prefs: []
  type: TYPE_IMG
- en: 'To write these receipts in the form of a transactional database, we first identify
    all of the possible items that appear in the receipts. These items are **onions**,
    **potatoes**, **burger**, **beer**, and **dippers**. Each purchase, that is, transaction,
    is presented in a row, and there is *1* if an item was purchased within the transaction
    and *0* otherwise, as shown in the following table:'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Transaction ID** | **Onions** | **Potatoes** | **Burger** | **Beer** |
    **Dippers** |'
  prefs: []
  type: TYPE_TB
- en: '| 1 | 0 | 1 | 1 | 0 | 0 |'
  prefs: []
  type: TYPE_TB
- en: '| 2 | 1 | 1 | 1 | 1 | 0 |'
  prefs: []
  type: TYPE_TB
- en: '| 3 | 0 | 0 | 0 | 1 | 1 |'
  prefs: []
  type: TYPE_TB
- en: '| 4 | 1 | 0 | 1 | 1 | 0 |'
  prefs: []
  type: TYPE_TB
- en: This example is really small. In practical applications, the dataset often contains
    thousands or millions of transactions, which allow the learning algorithm the
    discovery of statistically significant patterns.
  prefs: []
  type: TYPE_NORMAL
- en: Itemset and rule
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Itemset** is simply a set of items, for example, {onions, potatoes, burger}.
    A rule consists of two itemsets, X and Y, in the following format:'
  prefs: []
  type: TYPE_NORMAL
- en: X -> Y
  prefs: []
  type: TYPE_NORMAL
- en: This indicates a pattern that when the X itemset is observed, Y is also observed.
    To select interesting rules, various measures of significance can be used.
  prefs: []
  type: TYPE_NORMAL
- en: Support
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Support, for an itemset, is defined as the proportion of transactions that
    contain the itemset. The `{potatoes, burger}` itemset in the previous table has
    the following support, as it occurs in 50% of transactions (two out of four transactions):
    supp({potatoes, burger}) = 2/4 = 0.5.'
  prefs: []
  type: TYPE_NORMAL
- en: Intuitively, it indicates the share of transactions that support the pattern.
  prefs: []
  type: TYPE_NORMAL
- en: Lift
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Lift is a measure of the performance of a targeting model (association rule)
    at predicting or classifying cases as having an enhanced response (with respect
    to the population as a whole), measured against a random choice targeting model.
    It is defined using the following formula:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/6fcd6f36-1c1a-47f6-b4f8-a0e8de3f4b7b.png)'
  prefs: []
  type: TYPE_IMG
- en: Confidence
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The confidence of a rule indicates its accuracy. It is defined using the following
    formula:'
  prefs: []
  type: TYPE_NORMAL
- en: '[![](img/5eaba711-2c9e-4443-bb45-987eb9c7aa41.png)]'
  prefs: []
  type: TYPE_NORMAL
- en: For example, the {onions, burger} -> {beer} rule has the confidence *0.5/0.5
    = 1.0* in the previous table, which means that 100% of the time when onions and
    burger are bought together, beer is bought as well.
  prefs: []
  type: TYPE_NORMAL
- en: Apriori algorithm
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The **Apriori algorithm** is a classic algorithm used for frequent pattern mining
    and association rule learning over transactional. By identifying the frequent
    individual items in a database and extending them to larger itemsets, Apriori
    can determine the association rules, which highlight general trends about a database.
  prefs: []
  type: TYPE_NORMAL
- en: The Apriori algorithm constructs a set of itemsets, for example, itemset1= {Item
    A, Item B}, and calculates support, which counts the number of occurrences in
    the database. Apriori then uses a bottom up approach, where frequent itemsets
    are extended, one item at a time, and it works by eliminating the largest sets
    as candidates by first looking at the smaller sets and recognizing that a large
    set cannot be frequent unless all of its subsets are. The algorithm terminates
    when no further successful extensions are found.
  prefs: []
  type: TYPE_NORMAL
- en: Although the Apriori algorithm is an important milestone in machine learning,
    it suffers from a number of inefficiencies and tradeoffs. In the following section,
    we'll look into a more recent FP-Growth technique.
  prefs: []
  type: TYPE_NORMAL
- en: FP-Growth algorithm
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**FP-Growth** (where FP is frequent patterns) represents the transaction database
    as a suffix tree. First, the algorithm counts the occurrence of items in the dataset.
    In the second pass, it builds a suffix tree, an ordered tree data structure commonly
    used to store a string. An example of a suffix tree based on the previous example
    is shown in the following diagram:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/6dc05f73-8ffc-4870-81a2-bb5ee883ec77.png)'
  prefs: []
  type: TYPE_IMG
- en: If many transactions share the most frequent items, the suffix tree provides
    high compression close to the tree root. Large itemsets are grown directly, instead
    of generating candidate items and testing them against the entire database. Growth
    starts at the bottom of the tree, by finding all of the itemsets matching minimal
    support and confidence. Once the recursive process has completed, all large itemsets
    with minimum coverage have been found and association rule creation begins.
  prefs: []
  type: TYPE_NORMAL
- en: An FP-Growth algorithm has several advantages. First, it constructs an FP-tree,
    which encodes the original dataset in a substantially compact presentation. Second,
    it efficiently builds frequent itemsets, leveraging the FP-tree structure and
    the divide-and-conquer strategy.
  prefs: []
  type: TYPE_NORMAL
- en: The supermarket dataset
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The supermarket dataset, located in `data/supermarket.arff`, describes the
    shopping habits of supermarket customers. Most of the attributes stand for a particular
    item group, for example, diary foods, beef, and potatoes; or they stand for a
    department, for example, department 79, department 81, and so on. The following
    table shows an excerpt of the database, where the value is *t* if the customer
    had bought an item and missing otherwise. There is one instance per customer.
    The dataset contains no class attribute, as this is not required to learn association
    rules. A sample of data is shown in the following table:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/795041e5-78aa-46a5-88c4-7ee1e2b0d6c7.png)'
  prefs: []
  type: TYPE_IMG
- en: Discover patterns
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To discover shopping patterns, we will use the two algorithms that we have
    looked into before: Apriori and FP-Growth.'
  prefs: []
  type: TYPE_NORMAL
- en: Apriori
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We will use the `Apriori` algorithm as implemented in Weka. It iteratively
    reduces the minimum support until it finds the required number of rules with the
    given minimum confidence. We''ll implement the algorithm using the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'We''ll import the required libraries using the following lines of code:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'First, we''ll load the `supermarket.arff` dataset:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'We''ll initialize an `Apriori` instance and call the `buildAssociations(Instances)`
    function to start frequent pattern mining, as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'We can output the discovered itemsets and rules, as shown in the following
    code:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'The output is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'The algorithm outputs the ten best rules according to confidence. Let''s look
    at the first rule and interpret the output, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: It says that when `biscuits`, `frozen foods`, and `fruits` are bought together
    and the total purchase price is high, it is also very likely that `bread` and
    `cake` are purchased as well. The `{biscuits, frozen foods, fruit, total high}`
    itemset appears in `788` transactions, while the `{bread, cake}` itemset appears
    in `723` transactions. The confidence of this rule is `0.92`, meaning that the
    rule holds true in 92% of transactions where the `{biscuits, frozen foods, fruit,
    total high}` itemset is present.
  prefs: []
  type: TYPE_NORMAL
- en: The output also reports additional measures such as lift, leverage, and conviction,
    which estimate the accuracy against our initial assumptions; for example, the
    `3.35` conviction value indicates that the rule would be incorrect `3.35` times
    as often if the association was purely a random chance. Lift measures the number
    of times X and Y occur together than expected if they were statistically independent
    `(lift=1)`. The `2.16` lift in the X -> Y rule means that the probability of X
    is `2.16` times greater than the probability of Y.
  prefs: []
  type: TYPE_NORMAL
- en: FP-Growth
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now, let's try to get the same results with the more efficient FP-Growth algorithm.
  prefs: []
  type: TYPE_NORMAL
- en: 'FP-Growth is also implemented in the `weka.associations` package:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'The FP-Growth algorithm is initialized similarly, as we did earlier:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'The output reveals that FP-Growth discovered `16 rules`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: We can observe that FP-Growth found the same set of rules as Apriori; however,
    the time required to process larger datasets can be significantly shorter.
  prefs: []
  type: TYPE_NORMAL
- en: Other applications in various areas
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We looked into affinity analysis to demystify shopping behavior patterns in
    supermarkets. Although the roots of association rule learning are in analyzing
    point-of-sale transactions, they can be applied outside the retail industry to
    find relationships among other types of baskets. The notion of a basket can easily
    be extended to services and products, for example, to analyze items purchased
    using a credit card, such as rental cars and hotel rooms, and to analyze information
    on value-added services purchased by telecom customers (call waiting, call forwarding,
    DSL, speed call, and so on), which can help the operators determine the ways to
    improve their bundling of service packages.
  prefs: []
  type: TYPE_NORMAL
- en: 'Additionally, we will look into the following examples of potential cross industry
    applications:'
  prefs: []
  type: TYPE_NORMAL
- en: Medical diagnosis
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Protein sequences
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Census data
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Customer relationship management
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: IT operations analytics
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Medical diagnosis
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Applying association rules in medical diagnosis can be used to assist physicians
    while curing patients. The general problem of the induction of reliable diagnostic
    rules is hard as, theoretically, no induction process can guarantee the correctness
    of induced hypotheses by itself. Practically, diagnosis is not an easy process,
    as it involves unreliable diagnosis tests and the presence of noise in training
    examples.
  prefs: []
  type: TYPE_NORMAL
- en: Nevertheless, association rules can be used to identify likely symptoms appearing
    together. A transaction, in this case, corresponds to a medical case, while symptoms
    correspond to items. When a patient is treated, a list of symptoms is recorded
    as one transaction.
  prefs: []
  type: TYPE_NORMAL
- en: Protein sequences
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A lot of research has gone into understanding the composition and nature of
    proteins; yet, many things remain to be understood satisfactorily. It is now generally
    believed that amino acid sequences of proteins are not random.
  prefs: []
  type: TYPE_NORMAL
- en: With association rules, it is possible to identify associations between different
    amino acids that are present in a protein. A protein is a sequence made up of
    20 types of amino acids. Each protein has a unique three-dimensional structure,
    which depends on the amino-acid sequence; a slight change in the sequence may
    change the functioning of protein. To apply association rules, a protein corresponds
    to a transaction, while amino acids and their structure correspond to the items.
  prefs: []
  type: TYPE_NORMAL
- en: Such association rules are desirable for enhancing our understanding of protein
    composition and hold the potential to give clues regarding the global interactions
    among some particular sets of amino acids occurring in the proteins. Knowledge
    of these association rules or constraints is highly desirable for the synthesis
    of artificial proteins.
  prefs: []
  type: TYPE_NORMAL
- en: Census data
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Censuses make a huge variety of general statistical information about a society
    available to both researchers and general public. The information related to population
    and economic censuses can be forecasted in planning public services (education,
    health, transport, and funds) as well as in business (for setting up new factories,
    shopping malls, or banks and even marketing particular products).
  prefs: []
  type: TYPE_NORMAL
- en: To discover frequent patterns, each statistical area (for example, municipality,
    city, and neighborhood) corresponds to a transaction, and the collected indicators
    correspond to the items.
  prefs: []
  type: TYPE_NORMAL
- en: Customer relationship management
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The **Customer Relationship Management** (**CRM**), as we briefly discussed
    in the previous chapters, is a rich source of data through which companies hope
    to identify the preference of different customer groups, products, and services
    in order to enhance the cohesion among their products and services and their customers.
  prefs: []
  type: TYPE_NORMAL
- en: Association rules can reinforce the knowledge management process and allow the
    marketing personnel to know their customers well to provide better quality services.
    For example, association rules can be applied to detect a change of customer behavior
    at different time snapshots from customer profiles and sales data. The basic idea
    is to discover changes from two datasets and generate rules from each dataset
    to carry out rule matching.
  prefs: []
  type: TYPE_NORMAL
- en: IT operations analytics
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Based on records of a large number of transactions, association rule learning
    is well-suited to be applied to the data that is routinely collected in day-to-day
    IT operations, enabling IT operations analytics tools to detect frequent patterns
    and identify critical changes. IT specialists need to see the big picture and
    understand, for example, how a problem on a database could impact an application
    server.
  prefs: []
  type: TYPE_NORMAL
- en: For a specific day, IT operations may take in a variety of alerts, presenting
    them in a transactional database. Using an association rule-learning algorithm,
    IT operations analytics tools can correlate and detect the frequent patterns of
    alerts appearing together. This can lead to a better understanding about how one
    component impacts another.
  prefs: []
  type: TYPE_NORMAL
- en: With identified alert patterns, it is possible to apply predictive analytics.
    For example, a particular database server hosts a web application and suddenly
    an alert about a database is triggered. By looking into frequent patterns identified
    by an association rule-learning algorithm, this means that the IT staff need to
    take action before the web application is impacted.
  prefs: []
  type: TYPE_NORMAL
- en: Association rule learning can also discover alert events originating from the
    same IT event. For example, every time a new user is added, six changes in the
    Windows operating system are detected. Next, in **Application Portfolio Management**
    (**APM**), IT may face multiple alerts, showing that the transactional time in
    a database as high. If all of these issues originate from the same source (such
    as getting hundreds of alerts about changes that are all due to a Windows update),
    this frequent pattern mining can help to quickly cut through a number of alerts,
    allowing the IT operators to focus on truly critical changes.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, you learned how to leverage association rule learning on transactional
    datasets to gain insight about frequent patterns. We performed an affinity analysis
    in Weka and learned that the hard work lies in the analysis of results—careful
    attention is required when interpreting rules, as association (that is, correlation)
    is not the same as causation.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we'll look at how to take the problem of item recommendation
    to the next level using a scalable machine-learning library, Apache Mahout, which
    is able to handle big data.
  prefs: []
  type: TYPE_NORMAL
