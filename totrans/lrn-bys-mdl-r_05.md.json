["```py\n>library(ggplot2)\n>library(gridExtra)\n\n>df <- read.csv(\"ENB2012_data.csv\",header = T)\n>df <- df[,c(1:9)]\n>str(df)\n>df[,6] <- as.numeric(df[,6])\n>df[,8] <- as.numeric(df[,8])\n\n>attach(df)\n>bp1 <- ggplot(data = df,aes(x = X1,y = Y1)) + geom_point()\n>bp2 <- ggplot(data = df,aes(x = X2,y = Y1)) + geom_point()\n>bp3 <- ggplot(data = df,aes(x = X3,y = Y1)) + geom_point()\n>bp4 <- ggplot(data = df,aes(x = X4,y = Y1)) + geom_point()\n>bp5 <- ggplot(data = df,aes(x = X5,y = Y1)) + geom_point()\n>bp6 <- ggplot(data = df,aes(x = X6,y = Y1)) + geom_point()\n>bp7 <- ggplot(data = df,aes(x = X7,y = Y1)) + geom_point()\n>bp8 <- ggplot(data = df,aes(x = X8,y = Y1)) + geom_point()\n>grid.arrange(bp1,bp2,bp3,bp4,bp5,bp6,bp7,bp8,nrow = 2,ncol = 4)\n>detach(df)\n```", "```py\n>cor.val <- cor(df[,1:8],df[,9],method = \"spearman\")\n>cor.val           \n[,1]\nX1  0.622134697\nX2 -0.622134697\nX3  0.471457650\nX4 -0.804027000\nX5  0.861282577\nX6 -0.004163071\nX7  0.322860320\nX8  0.068343464\n```", "```py\n>#Removing X6 and X8 since they don't have significant correlation with Y1\n>df <- df[,c(1,2,3,4,5,7,9)]\n>str(df)\n\n>Splitting data set to Train and Test set in the ratio 80:20\n>set.seed(123)\n>samp <- sample.int(nrow(df),as.integer(nrow(df)*0.2),replace = F)\n>dfTest <- df[samp,]\n>dfTrain <- df[-samp,]\n>xtest <- dfTest[,1:6]\n>ytest <- dfTest[,7]\n\n>library(arm)\n>attach(dfTrain)\n\n>#Ordinary Multivariate Regression\n>fit.ols <- lm(Y1 ~ X1 + X2 + X3 + X4 + X5 + X7,data = dfTrain)\n>summary(fit.ols)\n>fit.coeff <- fit.ols$coefficients\n>ypred.ols <- predict.lm(fit.ols,xtest,interval = \"prediction\",se.fit = T)\n>ypred.ols$fit\n>yout.ols <- as.data.frame(cbind(ytest,ypred.ols$fit))\n>ols.upr <- yout.ols$upr\n>ols.lwr <- yout.ols$lwr\n```", "```py\n>fit.bayes <- bayesglm(Y1 ~ X1 + X2 + X3 + X4 + X5 + X7,family=gaussian(link=identity),data=dfTrain,prior.df = Inf,prior.mean = 0,prior.scale = NULL,maxit = 10000)\n>ypred.bayes <- predict.glm(fit.bayes,newdata = xtest,se.fit = T)\n>ypred.bayes$fit\n```", "```py\n>library(ggplot2)\n>library(gridExtra)\n>yout.ols <- as.data.frame(cbind(ytest,ypred.ols$fit))\n>ols.upr <- yout.ols$upr\n>ols.lwr <- yout.ols$lwr\n\n>p.ols <- ggplot(data = yout.ols,aes(x = yout.ols$ytest,y = yout.ols$fit)) + geom_point() + ggtitle(\"Ordinary Regression Prediction on Test Data\") + labs(x = \"Y-Test\",y = \"Y-Pred\")\n>p.ols + geom_errorbar(ymin = ols.lwr,ymax = ols.upr)yout.bayes <- as.data.frame(cbind(ytest,ypred.bayes$fit))\n>names(yout.bayes) <- c(\"ytest\",\"fit\")\n>critval <- 1.96 #approx for 95% CI\n>bayes.upr <- ypred.bayes$fit + critval * ypred.bayes$se.fit\n>bayes.lwr <- ypred.bayes$fit - critval * ypred.bayes$se.fit\n\n>p.bayes <- ggplot(data = yout.bayes,aes(x = yout.bayes$ytest,y = yout.bayes$fit)) + geom_point() + ggtitle(\"Bayesian Regression Prediction on Test Data\") + labs(x = \"Y-Test\",y = \"Y-Pred\")\n>p.bayes + geom_errorbar(ymin = bayes.lwr,ymax = bayes.upr)\n\n>p1 <-  p.ols + geom_errorbar(ymin = ols.lwr,ymax = ols.upr)\n>p2 <-  p.bayes + geom_errorbar(ymin = bayes.lwr,ymax = bayes.upr)\n\n>grid.arrange(p1,p2,ncol = 2)\n```", "```py\n>posterior.bayes <- as.data.frame(coef(sim(fit.bayes)))\n>attach(posterior.bayes)\n\n>h1 <- ggplot(data = posterior.bayes,aes(x = X1)) + geom_histogram() + ggtitle(\"Histogram X1\")\n>h2 <- ggplot(data = posterior.bayes,aes(x = X2)) + geom_histogram() + ggtitle(\"Histogram X2\")\n>h3 <- ggplot(data = posterior.bayes,aes(x = X3)) + geom_histogram() + ggtitle(\"Histogram X3\")\n>h4 <- ggplot(data = posterior.bayes,aes(x = X4)) + geom_histogram() + ggtitle(\"Histogram X4\")\n>h5 <- ggplot(data = posterior.bayes,aes(x = X5)) + geom_histogram() + ggtitle(\"Histogram X5\")\n>h7 <- ggplot(data = posterior.bayes,aes(x = X7)) + geom_histogram() + ggtitle(\"Histogram X7\")\n>grid.arrange(h1,h2,h3,h4,h5,h7,nrow = 2,ncol = 3)\n\n>detach(posterior.bayes)\n```"]