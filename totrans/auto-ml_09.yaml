- en: '*Chapter 7*: Doing Automated Machine Learning with Amazon SageMaker Autopilot'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第七章*：使用Amazon SageMaker Autopilot进行自动机器学习'
- en: '"One of the holy grails of machine learning is to automate more and more of
    the feature engineering process."'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '"机器学习的圣杯之一就是自动化越来越多的特征工程过程。"'
- en: – Pedro Domingos
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: – Pedro Domingos
- en: '"Automated machine learning, the best thing since sliced bread!"'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '"自动机器学习，自从切片面包以来最好的事情！"'
- en: – Anonymous
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: – 匿名
- en: '**Automated Machine Learning** (**AutoML**) via hyperscalers – that is, via
    cloud providers – has the potential to bring AI democratization to the masses.
    In the previous chapter, you created a **Machine Learning** (**ML**) workflow
    in SageMaker, and also learned about the internals of SageMaker Autopilot.'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '**自动化机器学习**（**AutoML**）通过超规模商（即云服务提供商）——有可能将AI民主化推广到大众。在前一章中，您在SageMaker中创建了一个**机器学习**（**ML**）工作流程，并学习了SageMaker
    Autopilot的内部机制。'
- en: In this chapter, we will look at a couple of examples explaining how Amazon
    SageMaker Autopilot can be used in a visual, as well as in notebook, format.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将探讨几个示例，解释如何以可视化和笔记本格式使用Amazon SageMaker Autopilot。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Creating an Amazon SageMaker Autopilot limited experiment
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建一个Amazon SageMaker Autopilot限制性实验
- en: Creating an AutoML experiment
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建一个AutoML实验
- en: Running the SageMaker Autopilot experiment and deploying the model
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运行SageMaker Autopilot实验并部署模型
- en: Invoking and testing the SageMaker Autopilot model
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调用和测试SageMaker Autopilot模型
- en: Building and running SageMaker Autopilot experiments from the notebook
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从笔记本中构建和运行SageMaker Autopilot实验
- en: Let's get started!
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始吧！
- en: Technical requirements
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: You will need access to an Amazon SageMaker Studio instance on your machine.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要访问您机器上的Amazon SageMaker Studio实例。
- en: Creating an Amazon SageMaker Autopilot limited experiment
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建一个Amazon SageMaker Autopilot限制性实验
- en: Let's gets a hands-on introduction to applying AutoML using SageMaker Autopilot.
    We will download and apply AutoML to an open source dataset. Let's get started!
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过SageMaker Autopilot来获得AutoML的实际操作介绍。我们将下载并应用AutoML到一个开源数据集。让我们开始吧！
- en: From Amazon SageMaker Studio, start a data science notebook by clicking on the
    `bank-additional-full.csv`, along with all examples (complete data), ordered by
    date (from May 2008 to November 2010)
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从Amazon SageMaker Studio开始，通过点击`bank-additional-full.csv`以及所有示例（完整数据），按日期排序（从2008年5月到2010年11月）
- en: '`bank-additional.csv`, with 10% of the examples (4,119) randomly selected from
    `bank-additional-full.csv`'
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`bank-additional.csv`，从`bank-additional-full.csv`中随机选择了10%（4,119个）的示例'
- en: '`bank-additional-names.txt`, which contains the field information described
    in the preceding screenshot'
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`bank-additional-names.txt`，其中包含前一个屏幕截图中所描述的字段信息'
- en: 'As shown in the following screenshot, you can view the contents of the files
    using pandas once you''ve loaded the CSV file into the pandas DataFrame:'
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如以下屏幕截图所示，一旦将CSV文件加载到pandas DataFrame中，您就可以使用pandas查看文件内容：
- en: '![Figure 7.6 – Amazon SageMaker Studio Jupyter Notebook – loading the dataset
    in a pandas DataFrame and visualizing it'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.6 – Amazon SageMaker Studio Jupyter Notebook – 在pandas DataFrame中加载数据集并进行可视化'
- en: '](img/Figure_7.6_B16890.jpg)'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_7.6_B16890.jpg)'
- en: Figure 7.6 – Amazon SageMaker Studio Jupyter Notebook – loading the dataset
    in a pandas DataFrame and visualizing it
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.6 – Amazon SageMaker Studio Jupyter Notebook – 在pandas DataFrame中加载数据集并进行可视化
- en: 'Using NumPy, split the dataset into training and testing segments. In this
    case, we will use 95% of the data for training and 5% of the data for testing,
    as shown in the following screenshot. You will store this data in two files: one
    for training and another for testing.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 使用NumPy将数据集分割为训练和测试部分。在这种情况下，我们将使用95%的数据进行训练，5%的数据进行测试，如下面的屏幕截图所示。您将把数据存储在两个文件中：一个用于训练，另一个用于测试。
- en: '![Figure 7.7 - Amazon SageMaker Studio Jupyter Notebook – splitting the dataset
    into training/test and saving the files in S3'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.7 - Amazon SageMaker Studio Jupyter Notebook – 将数据集分割为训练/测试并保存文件到S3'
- en: '](img/Figure_7.7_B16890.jpg)'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_7.7_B16890.jpg)'
- en: Figure 7.7 - Amazon SageMaker Studio Jupyter Notebook – splitting the dataset
    into training/test and saving the files in S3
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.7 - Amazon SageMaker Studio Jupyter Notebook – 将数据集分割为训练/测试并保存文件到S3
- en: 'Using the SageMaker API, create a session and upload the training data we created
    in the previous step to S3:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 使用SageMaker API，创建一个会话并将我们在上一步创建的训练数据上传到S3：
- en: '![Figure 7.8 – Amazon SageMaker Studio Jupyter Notebook – uploading the dataset
    to S3'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.8 – Amazon SageMaker Studio Jupyter Notebook – 将数据集上传到S3'
- en: '](img/Figure_Preface_1_B16890.jpg)'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_Preface_1_B16890.jpg)'
- en: Figure 7.8 – Amazon SageMaker Studio Jupyter Notebook – uploading the dataset
    to S3
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.8 – Amazon SageMaker Studio Jupyter Notebook – 将数据集上传到S3
- en: 'In the previous chapter, we learned how to create an AutoML experiment using
    the notebook. Now, let''s create an experiment via the SageMaker UI. Click on
    the experiment icon in the left pane and create an experiment by providing the
    experiment''s name and S3 bucket address, as shown in the following screenshot:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们学习了如何使用笔记本创建一个AutoML实验。现在，让我们通过SageMaker UI创建一个实验。在左侧面板中点击实验图标，通过提供实验名称和S3存储桶地址来创建一个实验，如下截图所示：
- en: '![Figure 7.9 – Amazon SageMaker Studio UI – creating an experiment'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.9 – Amazon SageMaker Studio UI – 创建实验'
- en: '](img/Figure_7.9_B16890.jpg)'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_7.9_B16890.jpg)'
- en: Figure 7.9 – Amazon SageMaker Studio UI – creating an experiment
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.9 – Amazon SageMaker Studio UI – 创建实验
- en: 'Set the target attribute to `y`. The target attribute is described in the dataset
    as Output variable (desired target): `y` – has the client subscribed a term deposit?
    `(binary: "yes","no")`:![Figure 7.10 – Amazon SageMaker Studio UI – creating an
    experiment'
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将目标属性设置为`y`。目标属性在数据集中描述为输出变量（期望的目标）：`y` – 客户是否订阅了定期存款？（二进制：“是”，“否”）：![图7.10
    – Amazon SageMaker Studio UI – 创建实验
- en: '](img/Figure_7.10_B16890.jpg)'
  id: totrans-38
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_7.10_B16890.jpg)'
- en: Figure 7.10 – Amazon SageMaker Studio UI – creating an experiment
  id: totrans-39
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图7.10 – Amazon SageMaker Studio UI – 创建实验
- en: As shown in the preceding screenshot, you can define the ML problem by yourself
    – it's binary classification in this case – or let the SageMaker AutoML engine
    decide this on its own. In this case, we will leave it as **Auto**, and you will
    see that the SageMaker will recognize this as a binary classification problem.
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如前述截图所示，您可以自己定义ML问题——在这种情况下是二分类——或者让SageMaker AutoML引擎自行决定。在这种情况下，我们将将其保留为**自动**，您将看到SageMaker将其识别为二分类问题。
- en: You can either run the full experiment – that is, data analysis, feature engineering,
    and modeling tuning – or create a notebook to view the candidate definitions.
    We will do both with this dataset to demonstrate the benefits of each approach:![Figure
    7.11 – Amazon SageMaker Studio UI – complete experiment versus pilot
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以选择运行完整实验——即数据分析、特征工程和模型调优——或者创建一个笔记本来查看候选定义。我们将使用这个数据集来演示每种方法的好处：![图7.11
    – Amazon SageMaker Studio UI – 完整实验与试点
- en: for candidate definitions
  id: totrans-42
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于候选定义
- en: '](img/Figure_7.11_B16890.jpg)'
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_7.11_B16890.jpg)'
- en: Figure 7.11 – Amazon SageMaker Studio UI – complete experiment versus pilot
    for candidate definitions
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图7.11 – Amazon SageMaker Studio UI – 完整实验与试点候选定义
- en: 'Lastly, you can set some advanced optional parameters, such as a custom SageMaker
    role, encryption key (if your S3 data is encrypted), and VPC information, if you
    are working with a virtual private cloud:'
  id: totrans-45
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 最后，您还可以设置一些高级可选参数，例如自定义SageMaker角色、加密密钥（如果您的S3数据已加密）和VPC信息，如果您正在使用虚拟私有云：
- en: '![Figure 7.12 – Amazon SageMaker Studio UI – Advanced Settings'
  id: totrans-46
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图7.12 – Amazon SageMaker Studio UI – 高级设置'
- en: '](img/Figure_7.12_B16890.jpg)'
  id: totrans-47
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_7.12_B16890.jpg)'
- en: Figure 7.12 – Amazon SageMaker Studio UI – Advanced Settings
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图7.12 – Amazon SageMaker Studio UI – 高级设置
- en: 'With that, we have entered all the required information and can run the experiment.
    Upon submitting the job, you will see the following screen, which contains two
    steps (analyzing data and candidate definitions generation). This is because we
    have chosen not to run the entire experiment; we have only chosen to generate
    candidate definitions:'
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这样，我们已经输入了所有必要的信息，可以运行实验。提交作业后，您将看到以下屏幕，其中包含两个步骤（数据分析候选定义生成）。这是因为我们选择不运行整个实验；我们只选择生成候选定义：
- en: '![Figure 7.13 – Amazon SageMaker Studio experiment creation UI – Analyzing
    Data screen'
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图7.13 – Amazon SageMaker Studio 实验创建 UI – 分析数据屏幕'
- en: '](img/Figure_7.13_B16890.jpg)'
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_7.13_B16890.jpg)'
- en: Figure 7.13 – Amazon SageMaker Studio experiment creation UI – Analyzing Data
    screen
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图7.13 – Amazon SageMaker Studio 实验创建 UI – 分析数据屏幕
- en: 'Once this partial experiment is completed, you will see the following screen,
    which shows the completed job information, trials, and job profile. Since we only
    generated the candidates in this case, the experiment didn''t take too long. The
    **Open candidate generation notebook** and **Open data exploration notebook**
    buttons can be found at the top-right of the page. Both these buttons will open
    the respective notebooks:'
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦这个部分实验完成，你将看到以下屏幕，它显示了完成的作业信息、试验和作业配置文件。由于我们在此情况下只生成了候选者，实验没有花费太多时间。**打开候选生成笔记本**和**打开数据探索笔记本**按钮位于页面右上角。这两个按钮都将打开相应的笔记本：
- en: '![Figure 7.14 – Amazon SageMaker AutoML experiment completion view'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.14 – Amazon SageMaker AutoML 实验完成视图'
- en: '](img/Figure_7.14_B16890.jpg)'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_7.14_B16890.jpg)'
- en: Figure 7.14 – Amazon SageMaker AutoML experiment completion view
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.14 – Amazon SageMaker AutoML 实验完成视图
- en: 'The SageMaker Autopilot candidate definition notebook helps the data scientist
    take a deeper look at the dataset, its features, its classification problem, and
    the quality metric of the trained model. This is essentially an in-depth view
    of what happens behind the scenes in the SageMaker Autopilot pipeline and gives
    the data scientist a chance to run this manually and fine-tune or make changes
    as they deem necessary:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: SageMaker Autopilot 候选定义笔记本帮助数据科学家更深入地了解数据集、其特征、其分类问题和训练模型的指标质量。这本质上是对 SageMaker
    Autopilot 管道背后发生的事情的深入了解，并给数据科学家一个机会手动运行并根据自己的需要调整或修改：
- en: '![Figure 7.15 – Amazon SageMaker Autopilot candidate definition notebook'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.15 – Amazon SageMaker Autopilot 候选定义笔记本'
- en: '](img/Figure_7.15_B16890.jpg)'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_7.15_B16890.jpg)'
- en: Figure 7.15 – Amazon SageMaker Autopilot candidate definition notebook
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.15 – Amazon SageMaker Autopilot 候选定义笔记本
- en: 'The candidate definition notebook is a fairly large file and contains a table
    of contents, as shown in the preceding screenshot. Similarly, the data exploration
    notebook provides you with insights into the dataset:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 候选定义笔记本是一个相当大的文件，其中包含一个目录，如前一张截图所示。同样，数据探索笔记本为您提供了对数据集的洞察：
- en: '![Figure 7.16 – Amazon SageMaker Autopilot data exploration notebook'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.16 – Amazon SageMaker Autopilot 数据探索笔记本'
- en: '](img/Figure_7.16_B16890.jpg)'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_7.16_B16890.jpg)'
- en: Figure 7.16 – Amazon SageMaker Autopilot data exploration notebook
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.16 – Amazon SageMaker Autopilot 数据探索笔记本
- en: 'These insights include what you would typically expect from a data scientist
    – a data scientist looks for features and their data types, range, mean, median,
    descriptive statistics, missing data, and more. Even if you are skeptical about
    the AutoML capabilities that are available in general, this is an excellent place
    for a data scientist to just explore the dataset and its respective candidates:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 这些洞察包括数据科学家通常期望的内容——数据科学家会寻找特征及其数据类型、范围、平均值、中位数、描述性统计、缺失数据等。即使你对通用的 AutoML 功能持怀疑态度，这也是数据科学家探索数据集及其相应候选者的绝佳地方：
- en: '![Figure 7.17 – Amazon SageMaker Autopilot data exploration notebook – descriptive
    statistics'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.17 – Amazon SageMaker Autopilot 数据探索笔记本 – 描述性统计'
- en: '](img/Figure_7.17_B16890.jpg)'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_7.17_B16890.jpg)'
- en: Figure 7.17 – Amazon SageMaker Autopilot data exploration notebook – descriptive
    statistics
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.17 – Amazon SageMaker Autopilot 数据探索笔记本 – 描述性统计
- en: The Amazon SageMaker Autopilot data exploration and candidate definition notebooks
    provide a transparent view for users to analyze data and conduct experiments.
    As notebooks go, these are executable pieces of code where you can see the preprocessors,
    hyperparameters, algorithms, ranges of hyperparameters, and all the prescribed
    preprocessing steps that are used to identify the best candidates.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon SageMaker Autopilot 数据探索和候选定义笔记本为用户提供了一个透明的视角来分析数据和进行实验。作为笔记本，这些是可执行的代码片段，你可以看到预处理程序、超参数、算法、超参数的范围以及所有用于识别最佳候选者的预定预处理步骤：
- en: In the next section, we will build and run a full Autopilot experiment.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将构建并运行一个完整的 Autopilot 实验。
- en: Creating an AutoML experiment
  id: totrans-71
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建一个 AutoML 实验
- en: 'Since the Autopilot data exploration and candidate definition notebooks provide
    an in-depth overview of the dataset, the complete experiment actually runs these
    steps and give you a final, tuned model based on the steps described in these
    notebooks. Now, let''s create a full experiment using the same UI as looked at
    earlier:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 由于Autopilot数据探索和候选定义笔记本提供了数据集的深入概述，完整的实验实际上运行了这些步骤，并根据这些笔记本中描述的步骤为你提供一个最终调优模型。现在，让我们使用之前查看过的相同UI创建一个完整实验：
- en: 'From Amazon SageMaker Studio, start a data science experiment. Click on the
    experiment icon in the left-hand pane and create an experiment by providing the
    experiment name and S3 bucket address, as shown in the following screenshot:'
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从Amazon SageMaker Studio开始一个数据科学实验。在左侧面板中单击实验图标，通过提供实验名称和S3存储桶地址来创建实验，如图下屏幕截图所示：
- en: '![Figure 7.18 – Amazon SageMaker Autopilot – creating the experiment'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 7.18 – Amazon SageMaker Autopilot – 创建实验'
- en: '](img/Figure_7.18_B16890.jpg)'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/Figure_7.18_B16890.jpg]'
- en: Figure 7.18 – Amazon SageMaker Autopilot – creating the experiment
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.18 – Amazon SageMaker Autopilot – 创建实验
- en: 'In the previous *Creating an Amazon SageMaker Autopilot limited experiment
    section*, we did the limited run. In this section, we will use the complete experiment
    feature:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 在之前的*创建Amazon SageMaker Autopilot限制性实验部分*中，我们进行了限制性运行。在本节中，我们将使用完整实验功能：
- en: '![Figure 7.19 – Amazon SageMaker Autopilot – creating the complete experiment'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 7.19 – Amazon SageMaker Autopilot – 创建完整实验'
- en: '](img/Figure_7.19_B16890.jpg)'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/Figure_7.19_B16890.jpg]'
- en: Figure 7.19 – Amazon SageMaker Autopilot – creating the complete experiment
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.19 – Amazon SageMaker Autopilot – 创建完整实验
- en: 'When you start the experiment, it will behave very similar to our earlier candidate
    experiment, aside from the fact that this complete experiment will take longer
    and will build and execute the entire pipeline. You will see the following screen
    in the meantime while you wait for the results:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 当你开始实验时，它的行为将非常类似于我们之前的候选实验，除了这个完整的实验将花费更长的时间，并且将构建和执行整个管道。在此期间，当你等待结果时，你会看到以下屏幕：
- en: '![](img/Figure_7.20_B16890.jpg)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![img/Figure_7.20_B16890.jpg]'
- en: Figure 7.20 – Amazon SageMaker Autopilot – running the full experiment
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.20 – Amazon SageMaker Autopilot – 运行完整实验
- en: 'While the experiment is running, you can track its progress by looking at the
    individual experiments and getting valuable insights from the **Trials** tab.
    You may also notice that the problem type here is correctly classified as binary
    classification:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 在实验运行期间，你可以通过查看单个实验并从**试验**选项卡中获得有价值的见解来跟踪其进度。你也许还会注意到，此处的问题类型被正确分类为二元分类：
- en: '![Figure 7.21 – Amazon SageMaker Autopilot – running the full experiment'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 7.21 – Amazon SageMaker Autopilot – 运行完整实验'
- en: '](img/Figure_7.21_B16890.jpg)'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/Figure_7.21_B16890.jpg]'
- en: Figure 7.21 – Amazon SageMaker Autopilot – running the full experiment
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.21 – Amazon SageMaker Autopilot – 运行完整实验
- en: 'The detailed summary of the experiment shown in the following screenshot shows
    the inference containers that were used, the model data URI, and the environments
    that were utilized, along with their respective **Amazon Resource Names** (**ARNs**),
    which uniquely identify AWS resources:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 以下屏幕截图显示的实验详细摘要显示了所使用的推理容器、模型数据URI以及所使用的环境，以及它们各自的**Amazon资源名称**（**ARN**），这些名称唯一标识AWS资源：
- en: '![Figure 7.22 – Amazon SageMaker Autopilot inference container information'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 7.22 – Amazon SageMaker Autopilot推理容器信息'
- en: '](img/Figure_7.22_B16890.jpg)'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/Figure_7.22_B16890.jpg]'
- en: Figure 7.22 – Amazon SageMaker Autopilot inference container information
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.22 – Amazon SageMaker Autopilot推理容器信息
- en: 'The **Trials** tab shows the different trials and tuning jobs that run, as
    well as the objective function (F1 score), which demonstrates how it improves
    over time:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '**试验**选项卡显示了运行的不同试验和调优作业，以及目标函数（F1分数），它展示了其随时间如何改进：'
- en: '![Figure 7.23 – Amazon SageMaker Autopilot experiment run trials – best model'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 7.23 – Amazon SageMaker Autopilot实验运行试验 – 最佳模型'
- en: '](img/Figure_7.23_B16890.jpg)'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/Figure_7.23_B16890.jpg]'
- en: Figure 7.23 – Amazon SageMaker Autopilot experiment run trials – best model
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.23 – Amazon SageMaker Autopilot实验运行试验 – 最佳模型
- en: 'You have seen this exact iteration in previous chapters; it is déjà vu all
    over again. We have seen this process unfolding in the OSS tools, but it''s just
    different here, in that it''s done in a more organized end-to-end manner. You
    have the entire pipeline built into one; that is, the strategy, data analysis,
    feature engineering, model tuning, and hyperparameter optimization processes.
    You can see the tuning job''s details in the following screenshot:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.24 – Amazon SageMaker Autopilot tuning job details showing Bayesian
    strategy'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
- en: and resource information
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_7.24_B16890.jpg)'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
- en: Figure 7.24 – Amazon SageMaker Autopilot tuning job details showing Bayesian
    strategy and resource information
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
- en: Now that we've run the entire experiment and the process is completed, let's
    deploy the best model.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
- en: Running the SageMaker Autopilot experiment and deploying the model
  id: totrans-102
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Amazon SageMaker Studio makes it easy for us to build, train, and deploy machine
    learning models; that is, it enables the data science life cycle. To deploy the
    model we built in the preceding section, we will need to set certain parameters.
    For this, you must provide the endpoint name, instance type, how many instances
    (count), and if you''d like to capture the request and response information. Let''s
    get started:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
- en: If you select the **Data capture** option, you will need an S3 bucket for storage,
    as shown in the following screenshot:![Figure 7.25 – Amazon SageMaker endpoint
    deployment
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_7.25_B16890.jpg)'
  id: totrans-105
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 7.25 – Amazon SageMaker endpoint deployment
  id: totrans-106
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Once you've clicked on **Deploy**, you will see the following screen, which
    shows the progress of the new endpoint being created:![Figure 7.26 – Amazon SageMaker
    endpoint deployment in progress
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_7.26_B16890.jpg)'
  id: totrans-108
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 7.26 – Amazon SageMaker endpoint deployment in progress
  id: totrans-109
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Once the deployment is completed, you will see the following status of InService:'
  id: totrans-110
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 7.27 – Amazon SageMaker endpoint deployment completed'
  id: totrans-111
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/Figure_7.27_B16890.jpg)'
  id: totrans-112
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 7.27 – Amazon SageMaker endpoint deployment completed
  id: totrans-113
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'The model endpoint is an important resource for ensuring the quality of the
    model. By enabling the model monitor, you can detect data drift and monitor the
    quality of any models in production. This proactive detection of the model''s
    quality helps ensure that your machine learning service does not end up providing
    the wrong results in production. You can click on the `Enable monitoring` button
    to engage the Amazon SageMaker Model Monitor:'
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 7.28 – Amazon SageMaker Autopilot Model Monitor startup screen'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_7.28_B16890.jpg)'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
- en: Figure 7.28 – Amazon SageMaker Autopilot Model Monitor startup screen
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
- en: 'Model monitoring is an important area of the machine learning life cycle. As
    shown in the following screenshot, the Amazon SageMaker Model Monitor addresses
    this by capturing data, creating a baseline, scheduling monitoring jobs, and then
    allowing SMEs to interpret the results in the case of outliers and violations:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.29 – Amazon SageMaker Autopilot Model Monitor enablement notebook'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.29 – Amazon SageMaker Autopilot模型监控启用笔记本'
- en: '](img/Figure_7.29_B16890.jpg)'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_7.29_B16890.jpg)'
- en: Figure 7.29 – Amazon SageMaker Autopilot Model Monitor enablement notebook
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.29 – Amazon SageMaker Autopilot模型监控启用笔记本
- en: Now that we have created and the deployed the model, it is time to test it out
    by invoking it. This operation of invoking a machine learning model that's been
    exposed via a web service is typically called inferencing or evaluation.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经创建并部署了模型，是时候通过调用它来测试它了。这种通过网络服务公开的机器学习模型的调用操作通常被称为推理或评估。
- en: Invoking the model
  id: totrans-123
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 调用模型
- en: 'With the model built and deployed using Amazon SageMaker Autopilot, we can
    test it out. Remember the test data we saved earlier? Now, it''s time to use it.
    Here, you can see that we are iterating through the `automl-test.csv` file and
    invoking the endpoint by passing the line of data as a request:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Amazon SageMaker Autopilot构建和部署的模型，我们可以对其进行测试。还记得我们之前保存的测试数据吗？现在，是时候使用它了。在这里，你可以看到我们正在迭代`automl-test.csv`文件，并通过传递数据行作为请求来调用端点：
- en: '![Figure 7.30 – Amazon SageMaker Autopilot – model invocation from the notebook'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.30 – Amazon SageMaker Autopilot – 从笔记本中调用模型'
- en: '](img/Figure_7.30_B16890.jpg)'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_7.30_B16890.jpg)'
- en: Figure 7.30 – Amazon SageMaker Autopilot – model invocation from the notebook
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.30 – Amazon SageMaker Autopilot – 从笔记本中调用模型
- en: 'The request contains information about the person applying for the loan. We
    have removed the outcome (label) from the request, and then compared it as we
    wish to print the value out. You can see the request, the label, and the corresponding
    response from the web service in the preceding screenshot. You can use this information
    to calculate the accuracy of the service results; they are fairly accurate:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 请求包含关于申请贷款的人的信息。我们已经从请求中移除了结果（标签），然后按照我们的意愿进行比较，以便打印出值。你可以在前面的截图中看到请求、标签和来自网络服务的相应响应。你可以使用这些信息来计算服务结果的准确性；它们相当准确：
- en: '![Figure 7.31 – Amazon SageMaker Autopilot – model invocation responses'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.31 – Amazon SageMaker Autopilot – 模型调用响应'
- en: '](img/Figure_7.31_B16890.jpg)'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_7.31_B16890.jpg)'
- en: Figure 7.31 – Amazon SageMaker Autopilot – model invocation responses
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.31 – Amazon SageMaker Autopilot – 模型调用响应
- en: Now that you have learned how to set up an AutoML experiment from the Amazon
    SageMaker Autopilot UI, in the next section, we will use notebooks to do the same.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经学会了如何在Amazon SageMaker Autopilot UI中设置AutoML实验，在下一节中，我们将使用笔记本来完成同样的操作。
- en: Building and running SageMaker Autopilot experiments from the notebook
  id: totrans-133
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从笔记本中构建和运行SageMaker Autopilot实验
- en: Customer churn is a real problem for businesses and in this example, we will
    use our knowledge of completing AutoML in Amazon SageMaker Autopilot to build
    a customer churn prediction experiment using the notebook. In this experiment,
    we will use a publicly available dataset of US mobile customers provided by Daniel
    T. Larose in his book *Discovering Knowledge in Data*. To demonstrate running
    the full gamut, the sample notebook executes the Autopilot experiment by performing
    feature engineering, building a model pipeline (along with any optimal hyperparameters),
    and deploying the model.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 客户流失对企业来说是一个真正的问题，在这个例子中，我们将利用我们在Amazon SageMaker Autopilot中完成AutoML的知识，使用笔记本构建一个客户流失预测实验。在这个实验中，我们将使用由Daniel
    T. Larose在其书籍《Discovering Knowledge in Data》中提供的美国移动客户公开数据集。为了展示完整的流程，示例笔记本通过执行特征工程、构建模型管道（包括任何最优超参数）以及部署模型来执行Autopilot实验。
- en: 'The evolution of the UI/API/CLI paradigm has helped us utilize the same interface
    in multiple formats; in this case, we will be utilizing the capabilities of Amazon
    SageMaker Autopilot directly from the notebook. Let''s get started:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: UI/API/CLI范式的发展帮助我们能够在多种格式中利用相同的界面；在这种情况下，我们将直接从笔记本中利用Amazon SageMaker Autopilot的能力。让我们开始吧：
- en: Open the `autopilot_customer_churn` notebook from the `amazon-sagemaker-examples/autopilot`
    folder, as shown in the following screenshot:![Figure 7.32 – Amazon SageMaker
    Autopilot – customer churn prediction Autopilot notebook
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开`autopilot_customer_churn`笔记本，位于`amazon-sagemaker-examples/autopilot`文件夹中，如下截图所示：![图7.32
    – Amazon SageMaker Autopilot – 客户流失预测Autopilot笔记本
- en: '](img/Figure_7.32_B16890.jpg)'
  id: totrans-137
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_7.32_B16890.jpg)'
- en: Figure 7.32 – Amazon SageMaker Autopilot – customer churn prediction Autopilot
    notebook
  id: totrans-138
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图7.32 – Amazon SageMaker Autopilot – 客户流失预测Autopilot笔记本
- en: Run the setup by specifying the S3 bucket and the **Identity and Access Management**
    (**IAM**) role, as we did in the previous *Creating an AutoML experiment* section.
    Download the dataset, as shown in the following screenshot:![Figure 7.33 – Amazon
    SageMaker Autopilot – running the notebook to set up a default bucket and creating
    the session
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过指定S3存储桶和**身份和访问管理**（**IAM**）角色来运行设置，就像我们在之前的*创建AutoML实验*部分所做的那样。下载数据集，如下截图所示：![图7.33
    – Amazon SageMaker Autopilot – 运行笔记本以设置默认存储桶并创建会话
- en: '](img/Figure_7.33_B16890.jpg)'
  id: totrans-140
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_7.33_B16890.jpg)'
- en: Figure 7.33 – Amazon SageMaker Autopilot – running the notebook to set up a
    default bucket and creating the session
  id: totrans-141
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图7.33 – Amazon SageMaker Autopilot – 运行笔记本以设置默认存储桶并创建会话
- en: At this point, you will need to install the prerequisites, and download the
    dataset, as shown in the following screenshot:![Figure 7.34 – Amazon SageMaker
    Autopilot – downloading the dataset and unzipping the file
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在这一点上，您需要安装先决条件，并下载数据集，如下截图所示：![图7.34 – Amazon SageMaker Autopilot – 下载数据集和解压文件
- en: '](img/Figure_7.34_B16890.jpg)'
  id: totrans-143
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_7.34_B16890.jpg)'
- en: Figure 7.34 – Amazon SageMaker Autopilot – downloading the dataset and unzipping
    the file
  id: totrans-144
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图7.34 – Amazon SageMaker Autopilot – 下载数据集和解压文件
- en: Once the dataset has been downloaded and uncompressed, you can add it to a pandas
    DataFrame and view it. It shows information about the customer, such as their
    calling attributes, as shown in the following screenshot:![Figure 7.35 – Amazon
    SageMaker notebook showing the dataset's information
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦数据集下载并解压，您就可以将其添加到pandas DataFrame中并查看。它显示了有关客户的信息，例如他们的呼叫属性，如下截图所示：![图7.35
    – Amazon SageMaker笔记本显示数据集信息
- en: '](img/Figure_7.35_B16890.jpg)'
  id: totrans-146
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_7.35_B16890.jpg)'
- en: Figure 7.35 – Amazon SageMaker notebook showing the dataset's information
  id: totrans-147
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图7.35 – Amazon SageMaker笔记本显示数据集信息
- en: We can now sample the dataset as test and training buckets, and then upload
    these files to S3 for future use. Once they've been uploaded, you will get the
    S3 buckets' names, as shown in the following screenshot:![Figure 7.36 – Amazon
    SageMaker Autopilot – sample dataset for test and training, and uploading the
    files to the S3
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们现在可以采样数据集作为测试和训练存储桶，然后将这些文件上传到S3以供将来使用。一旦上传，您将获得S3存储桶的名称，如下截图所示：![图7.36 –
    Amazon SageMaker Autopilot – 为测试和训练采样数据集并将文件上传到S3
- en: '](img/Figure_7.36_B16890.jpg)'
  id: totrans-149
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_7.36_B16890.jpg)'
- en: Figure 7.36 – Amazon SageMaker Autopilot – sample dataset for test and training,
    and uploading the files to the S3
  id: totrans-150
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图7.36 – Amazon SageMaker Autopilot – 为测试和训练采样数据集并将文件上传到S3
- en: So far, everything we have done is traditional notebook work. Now, we will set
    up the Autopilot job.
  id: totrans-151
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 到目前为止，我们所做的一切都是传统的笔记本工作。现在，我们将设置Autopilot作业。
- en: Let's define the configuration, as shown in the following screenshot:![Figure
    7.37 – Amazon SageMaker Autopilot – configuring the Autopilot job config
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们定义配置，如下截图所示：![图7.37 – Amazon SageMaker Autopilot – 配置Autopilot作业配置
- en: '](img/Figure_7.37_B16890.jpg)'
  id: totrans-153
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_7.37_B16890.jpg)'
- en: Figure 7.37 – Amazon SageMaker Autopilot – configuring the Autopilot job config
  id: totrans-154
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图7.37 – Amazon SageMaker Autopilot – 配置Autopilot作业配置
- en: Now, let's launch the SageMaker Autopilot job by invoking the `create_auto_ml_job`
    API call, like so:![Figure 7.38 – Amazon SageMaker Autopilot – configuring the
    Autopilot job
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让我们通过调用`create_auto_ml_job` API调用启动SageMaker Autopilot作业，如下所示：![图7.38 – Amazon
    SageMaker Autopilot – 配置Autopilot作业
- en: '](img/Figure_7.38_B16890.jpg)'
  id: totrans-156
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_7.38_B16890.jpg)'
- en: Figure 7.38 – Amazon SageMaker Autopilot – configuring the Autopilot job
  id: totrans-157
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图7.38 – Amazon SageMaker Autopilot – 配置Autopilot作业
- en: 'The job runs with multiple trials, including the components of each experiment,
    as shown in the following screenshot:'
  id: totrans-158
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 作业以多个试验运行，包括每个实验的组件，如下截图所示：
- en: '![Figure 7.39 – Amazon SageMaker Autopilot – trial components in the Autopilot
    job notebook'
  id: totrans-159
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图7.39 – Amazon SageMaker Autopilot – Autopilot作业笔记本中的试验组件'
- en: '](img/Figure_7.39_B16890.jpg)'
  id: totrans-160
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_7.39_B16890.jpg)'
- en: Figure 7.39 – Amazon SageMaker Autopilot – trial components in the Autopilot
    job notebook
  id: totrans-161
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图7.39 – Amazon SageMaker Autopilot – Autopilot作业笔记本中的试验组件
- en: 'While tracking the Amazon SageMaker Autopilot job''s progress, you can print
    its status, along with any delays, as shown in the following screenshot. However,
    to view the details of individual trial runs in a meaningful manner visually,
    you can use the user interface:'
  id: totrans-162
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在跟踪Amazon SageMaker Autopilot作业进度时，您可以打印其状态以及任何延迟，如下截图所示。然而，为了以有意义的方式直观地查看单个试验运行的详细信息，您可以使用用户界面：
- en: '![Figure 7.40 – Amazon SageMaker Autopilot – trial components in the Autopilot
    job notebook'
  id: totrans-163
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 7.40 – Amazon SageMaker Autopilot – Autopilot 作业笔记本中的试验组件'
- en: '](img/Figure_7.40_B16890.jpg)'
  id: totrans-164
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_7.40_B16890.jpg)'
- en: Figure 7.40 – Amazon SageMaker Autopilot – trial components in the Autopilot
    job notebook
  id: totrans-165
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 7.40 – Amazon SageMaker Autopilot – Autopilot 作业笔记本中的试验组件
- en: 'Once the feature engineering and model tuning jobs in the trials are complete,
    you can run `describe_auto_ml_job` to get the best candidate information. Then,
    you can traverse the `best_candidate` object to get information about the underlying
    score and metric, as shown in the following screenshot:'
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦试验中的特征工程和模型调优作业完成，你可以运行 `describe_auto_ml_job` 来获取最佳候选信息。然后，你可以遍历 `best_candidate`
    对象来获取底层分数和指标信息，如下面的截图所示：
- en: '![Figure 7.41 – Amazon SageMaker Autopilot – trial components in the Autopilot
    job notebook'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.41 – Amazon SageMaker Autopilot – Autopilot 作业笔记本中的试验组件'
- en: '](img/Figure_7.41_B16890.jpg)'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_7.41_B16890.jpg)'
- en: Figure 7.41 – Amazon SageMaker Autopilot – trial components in the Autopilot
    job notebook
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.41 – Amazon SageMaker Autopilot – Autopilot 作业笔记本中的试验组件
- en: 'Once the job is completed, you will see the candidate model, the final metric
    (the F1 score in this case), and any associated values:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 作业完成后，你将看到候选模型、最终指标（在本例中为 F1 分数）以及任何相关值：
- en: '![Figure 7.42 – Amazon SageMaker Autopilot job results'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.42 – Amazon SageMaker Autopilot 作业结果'
- en: '](img/Figure_7.42_B16890.jpg)'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_7.42_B16890.jpg)'
- en: Figure 7.42 – Amazon SageMaker Autopilot job results
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.42 – Amazon SageMaker Autopilot 作业结果
- en: We will deploy and invoke the best candidate model, which has a 93% F1 score,
    in the next section.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在下一节中部署和调用具有 93% F1 分数的最佳候选模型。
- en: Hosting and invoking the model
  id: totrans-175
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 托管和调用模型
- en: 'Similar to how we invoked the model we built using the Experiment UI earlier,
    we will now host and invoke the model we built in the notebook. The difference
    is that in the first instance, we were low-code, while here we are building it
    using code:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 与我们之前使用实验 UI 调用构建的模型类似，我们现在将在笔记本中托管和调用我们在笔记本中构建的模型。不同之处在于，在前一个实例中，我们是低代码，而在这里我们使用代码构建：
- en: To host the service, you will need to create a model object, endpoint configuration,
    and eventually an endpoint. Previously, this was done using the UI, but here,
    we will use the Amazon SageMaker Python instance to accomplish the same. This
    can be seen in the following screenshot:![Figure 7.43 – Amazon SageMaker notebook
    – hosting the model
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要托管服务，你需要创建一个模型对象、端点配置，最终是一个端点。之前这是通过 UI 完成的，但在这里，我们将使用 Amazon SageMaker Python
    实例来完成同样的工作。这可以在下面的截图中看到：![图 7.43 – Amazon SageMaker 笔记本 – 托管模型
- en: '](img/Figure_7.43_B16890.jpg)'
  id: totrans-178
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_7.43_B16890.jpg)'
- en: Figure 7.43 – Amazon SageMaker notebook – hosting the model
  id: totrans-179
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 7.43 – Amazon SageMaker 笔记本 – 托管模型
- en: 'The `get_waiter` method is part of Boto3, which is the Python SDK for AWS.
    Like other waiters, it polls until a successful state is reached. An error is
    typically returned after 60 failed checks. You can read about the methods by looking
    at the API documentation for it, which can be found here: [https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/sagemaker.html#SageMaker.Client.create_endpoint](https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/sagemaker.html#SageMaker.Client.create_endpoint).'
  id: totrans-180
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`get_waiter` 方法是 Boto3 的一部分，它是 AWS 的 Python SDK。与其他等待器一样，它会轮询直到达到成功状态。通常在 60
    次失败的检查后返回错误。你可以通过查看它的 API 文档来了解这些方法，该文档可以在以下位置找到：[https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/sagemaker.html#SageMaker.Client.create_endpoint](https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/sagemaker.html#SageMaker.Client.create_endpoint)。'
- en: 'Now that the endpoint has been created and the model has been hosted, we can
    invoke the service. To evaluate the model, you will need to create a predictor
    instance and pass it the endpoint''s information, along with the parameters for
    prediction. Instead of calling the endpoint line by line, we can perform bulk
    predictions by passing in the entire test data CSV file and comparing the results
    against the ground truth. You can see the accuracy numbers in the following screenshot:'
  id: totrans-181
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在端点已经创建，模型已经托管，我们可以调用该服务。为了评估模型，你需要创建一个预测实例，并传递端点信息和预测参数。我们不是逐行调用端点，而是通过传递整个测试数据
    CSV 文件来进行批量预测，并将结果与真实值进行比较。你可以在下面的截图中看到准确率数字：
- en: '![Figure 7.44 – Amazon SageMaker model evaluation for accuracy'
  id: totrans-182
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 7.44 – Amazon SageMaker 模型评估准确性'
- en: '](img/Figure_7.44_B16890.jpg)'
  id: totrans-183
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_7.44_B16890.jpg)'
- en: Figure 7.44 – Amazon SageMaker model evaluation for accuracy
  id: totrans-184
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 7.44 – Amazon SageMaker 模型评估准确性
- en: Once you have finished testing the endpoint, we must clean up. In cloud environments,
    you must clean up after yourself, so make this a priority checklist item. If you
    don't do this, you won't like the billing statement from leaving a server running.
    Virtual or not, it all adds up.
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦你完成了端点的测试，我们必须进行清理。在云环境中，你必须自己清理，所以请将此作为优先事项清单项。如果你不这样做，你不会喜欢服务器运行留下的账单。无论是虚拟的还是实体的，所有这些都会累积起来。
- en: 'When you''re cleaning up a UI, turn off and delete the compute instances and
    the endpoints. Since we are doing a manual cleanup, you must delete the endpoint,
    endpoint config, and the model:'
  id: totrans-186
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当你在清理UI时，关闭并删除计算实例和端点。由于我们正在进行手动清理，你必须删除端点、端点配置和模型：
- en: '![Figure 7.45 – Amazon SageMaker Autopilot cleanup with resulting response
    codes'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.45 – 使用结果响应代码的Amazon SageMaker Autopilot清理'
- en: '](img/Figure_7.45_B16890.jpg)'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_7.45_B16890.jpg)'
- en: Figure 7.45 – Amazon SageMaker Autopilot cleanup with resulting response codes
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.45 – 使用结果响应代码的Amazon SageMaker Autopilot清理
- en: Even though these examples have shown you how AWS AutoML enables you to perform
    feature engineering, model tuning, and hyperparameter optimization, you don't
    have to limit yourself to the algorithms provided by AWS. You can bring your own
    data processing code to SageMaker Autopilot, as shown at [https://github.com/aws/amazon-sagemaker-examples/blob/master/autopilot/custom-feature-selection/Feature_selection_autopilot.ipynb](https://github.com/aws/amazon-sagemaker-examples/blob/master/autopilot/custom-feature-selection/Feature_selection_autopilot.ipynb).
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管这些示例已经向你展示了AWS AutoML如何使你能够执行特征工程、模型调整和超参数优化，但你不必局限于AWS提供的算法。你可以将你自己的数据处理代码带到SageMaker
    Autopilot，如[https://github.com/aws/amazon-sagemaker-examples/blob/master/autopilot/custom-feature-selection/Feature_selection_autopilot.ipynb](https://github.com/aws/amazon-sagemaker-examples/blob/master/autopilot/custom-feature-selection/Feature_selection_autopilot.ipynb)所示。
- en: Summary
  id: totrans-191
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: Building AutoML systems to democratize AI from scratch is a considerable effort.
    Therefore, cloud hyperscalers act as enablers and accelerators to jumpstart this
    journey. In this chapter, you learned how to use Amazon SageMaker Autopilot, both
    via notebooks and via the experimentation user interface. You were also exposed
    to the larger AWS machine learning ecosystem and SageMaker's capabilities.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 从零开始构建AutoML系统以民主化人工智能是一项相当大的努力。因此，云超大规模提供商充当了推动者和加速器，以启动这一旅程。在本章中，你学习了如何通过笔记本和实验用户界面使用Amazon
    SageMaker Autopilot。你还接触到了更大的AWS机器学习生态系统和SageMaker的功能。
- en: In the next chapter, we will study another major cloud computing platform, Google
    Cloud Platform, and the AutoML offerings provided it. Happy coding!
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将研究另一个主要的云计算平台，即Google Cloud Platform，以及它提供的AutoML服务。祝编码愉快！
- en: Further reading
  id: totrans-194
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'For more information on the topics that were covered in this chapter, please
    refer to the following links and resources:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 关于本章涵盖的主题的更多信息，请参阅以下链接和资源：
- en: '*Mastering Machine Learning on AWS: Advanced machine learning in Python using
    SageMaker, Apache Spark, and TensorFlow*, by Dr. Saket S.R. Mengle , Maximo Gurmendez,
    Packt Publishing: [https://www.amazon.com/Mastering-Machine-Learning-AWS-TensorFlow/dp/1789349796](https://www.amazon.com/Mastering-Machine-Learning-AWS-TensorFlow/dp/1789349796)'
  id: totrans-196
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*《在AWS上掌握机器学习：使用SageMaker、Apache Spark和TensorFlow的高级机器学习》，作者Dr. Saket S.R.
    Mengle、Maximo Gurmendez，Packt Publishing：[https://www.amazon.com/Mastering-Machine-Learning-AWS-TensorFlow/dp/1789349796](https://www.amazon.com/Mastering-Machine-Learning-AWS-TensorFlow/dp/1789349796)*'
- en: '*Learn Amazon SageMaker: A guide to building, training, and deploying machine
    learning models for developers and data scientists*, by Julien Simon and Francesco
    Pochetti, Packt Publishing: [https://www.amazon.com/Learn-Amazon-SageMaker-developers-scientists/dp/180020891X](https://www.amazon.com/Learn-Amazon-SageMaker-developers-scientists/dp/180020891X)'
  id: totrans-197
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*《学习Amazon SageMaker：为开发人员和数据科学家构建、训练和部署机器学习模型的指南》，作者Julien Simon和Francesco
    Pochetti，Packt Publishing：[https://www.amazon.com/Learn-Amazon-SageMaker-developers-scientists/dp/180020891X](https://www.amazon.com/Learn-Amazon-SageMaker-developers-scientists/dp/180020891X)*'
