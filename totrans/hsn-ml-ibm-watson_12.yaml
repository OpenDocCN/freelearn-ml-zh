- en: The Automated Classification of Lithofacies Formation Using ML
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用机器学习自动分类岩性形成
- en: In this chapter, we will explore the idea of building an end-to-end cloud-based
    machine learning system to identify **lithofacies** based on well log measurements.
    This is a crucial step in all drilling applications. First, we will start by introducing
    the problem and the dataset. Next, we will explain the types of preprocessing
    and post processing needed for such a use case. Finally, a complete solution will
    be built using machine learning services, Python, and IBM Watson Studio.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将探讨构建一个端到端基于云的机器学习系统来根据井日志测量识别**岩性**的想法。这是所有钻井应用中的关键步骤。首先，我们将从介绍问题和数据集开始。接下来，我们将解释此类用例所需的预处理和后处理类型。最后，将使用机器学习服务、Python和IBM
    Watson Studio构建一个完整的解决方案。
- en: 'The following topics will be covered in this chapter:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Understanding lithofacies
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解岩性
- en: Exploring the data
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索数据
- en: Training the classifier
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 训练分类器
- en: Evaluating the classifier
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 评估分类器
- en: Understanding lithofacies
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解岩性
- en: Sedimentary rock that has been formed through the deposition and solidification
    of sediment transported by water, ice, and wind is usually deposited in layers.
    The geological properties of these layers depend upon a number of forces such
    as tectonics, sea level, sediment supply, physical and biological processes of
    sediment transport and deposition, and climate. The result of these forces and
    interactions yield what is known as a **geometric arrangement**, making up the
    stratigraphic architecture of an area. The arrangement or internal anatomy of
    the sediment bodies within the architecture is identified through lithofacies
    analysis and the interpretation of the depositional environments.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 通过水、冰和风搬运的沉积物沉积和固结形成的沉积岩通常呈层状沉积。这些层的地质特性取决于多种力量，如构造、海平面、沉积物供应、沉积物搬运和沉积的物理和生物过程，以及气候。这些力量和相互作用的结果形成了所谓的**几何排列**，构成了一个地区的地层结构。通过岩性分析和对沉积环境的解释，可以识别出结构内部沉积体的排列或内部解剖结构。
- en: Gathering and interpreting this information is a critical component in the work
    of oil and gas, groundwater, and mineral and geothermal exploration (as well as
    being a significant share of environmental and geotechnical study).
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 收集和解释这些信息是石油和天然气、地下水、矿产和地热勘探工作中的关键组成部分（同时也是环境与岩土工程研究的重要部分）。
- en: Depositional environments
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 沉积环境
- en: The previously mentioned depositional environments are created by the various
    physical and biological processes of transporting and depositing sediments. These
    processes result in various distributions of grain size andbiogenic sedimentary
    structures that characterize (or classify) the deposited sediment through a direct
    relationship to the depositional force that produced them.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 之前提到的沉积环境是由各种物理和生物过程搬运和沉积沉积物所形成的。这些过程导致各种粒度分布和生物成因沉积结构，这些结构通过直接关系表征（或分类）沉积物，与产生它们的沉积力有关。
- en: Relating the features found in an environmental structure back to the forces
    that created them is the basic method used by geologists to interpret the depositional
    environment of the sedimentary sequence.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 将在环境结构中发现的特征与创造它们的力联系起来是地质学家用来解释沉积岩系沉积环境的基本方法。
- en: Lithofacies formation
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 岩性形成
- en: One of the very first steps in the progression of **litho****facies analysis**
    (and, therefore, lithofacies formation), is the description and interpretation
    of available and conventional core data.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在**岩性分析**（因此是岩性形成）的进展中，非常早期的步骤之一是对可用和传统核心数据的描述和解释。
- en: An important outcome of core descripting is the subdivision of cores into lithofacies,
    defined as **classifications of a sedimentary sequence** based on lithology (the
    study of the characteristics of rock), grain size, physical and biogenic sedimentary
    structures, and the stratification that relates to the depositional processes
    that produced them.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 核心描述的一个重要结果是核心被细分为岩性，定义为基于岩石学（岩石特性的研究）、粒度、物理和生物成因沉积结构以及与产生它们的沉积过程相关的层序的**沉积岩系分类**。
- en: Lithofacies and lithofacies associations (groups of related lithofacies) are
    the basic units for the interpretation of depositional environments.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 岩性及其岩性组合（相关岩性的群体）是解释沉积环境的基元。
- en: Our use case
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 我们的使用案例
- en: I hope that after reading the preceding sections of this chapter, you have already
    formulated the idea that a critical component in evaluating opportunities for
    drilling applications is lithology and lithofacies formation.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 我希望您在阅读本章前面的部分后，已经形成了这样的想法：在评估钻井应用机会的关键组成部分是岩性和岩性形成。
- en: Our goal, in this project, is to use machine learning to interpret core data
    and identify lithofacies (that is, classify bodies of rock or rock types into
    mappable units of a designated stratigraphic unit) based upon its physical characteristics,
    composition, formation, or various other attributes, obtained in well logging
    data.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个项目中，我们的目标是使用机器学习来解释岩心数据并识别岩性（即，根据其物理特性、成分、形成或各种其他属性，将岩石或岩石类型分类为指定地层单元的可绘制单元）。
- en: Exploring the data
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索数据
- en: In the following sections, we will explore the well training data and plot the
    learning in various forms.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的章节中，我们将探索测井训练数据并以各种形式绘制学习过程。
- en: Well logging
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 测井
- en: Well logging, sometimes referred to as **borehole logging**, is the practice
    of making a detailed record (or a well log) of the geological formations penetrated
    by a borehole or a well. This log may be established either on a visual inspection
    of the samples brought to the surface (called **geological logs**) or on the physical
    measurements made by instruments lowered into the hole (called geophysical logs).
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 测井，有时被称为**钻孔测井**，是详细记录（或测井）通过钻孔或井渗透的地质构造的实践。这个记录可以是通过对带到地面的样品进行视觉检查（称为**地质测井**）或通过将仪器降入孔中进行的物理测量（称为地球物理测井）来建立的。
- en: Geophysical well logs such as, drilling, completing, producing, or abandoning
    can be done during any phase of a well's history.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 地球物理测井，如钻井、完井、生产或废弃，可以在测井历史的任何阶段进行。
- en: Log ASCII Standard (LAS)
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 测井ASCII标准（LAS）
- en: Thankfully, there is a commonly acceptable format in which well logs are expected
    to be.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，有一个普遍接受的格式，其中测井被期望以这种格式。
- en: LAS is an industry-standard file format used in all oil-and-gas and water well
    industries to log and store well log information and data. A single LAS file can
    only contain data for one well. But in that one well, it can contain any number
    of datasets (called **curves**). Common curves found in an LAS file may include
    natural gamma, travel time, resistivity logs, and other possible information.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: LAS是石油和天然气以及水井行业使用的行业标准文件格式，用于记录和存储测井信息和数据。单个LAS文件只能包含一个井的数据。但在那个井中，它可以包含任何数量的数据集（称为**曲线**）。在LAS文件中常见的曲线可能包括自然伽马、旅行时间、电阻率测井和其他可能的信息。
- en: 'For more information on LAS files, you can refer to this paper: [https://www.bcogc.ca/node/11400/download](https://www.bcogc.ca/node/11400/download).'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 关于LAS文件更详细的信息，您可以参考这篇论文：[https://www.bcogc.ca/node/11400/download](https://www.bcogc.ca/node/11400/download)。
- en: Wow! Although not rocket science, the data is not a simple relational table.
    Preliminary work for this exercise will be to better understand the specifics
    of the data provided.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 哇！虽然不是火箭科学，但数据并非简单的关系表。这个练习的初步工作将是更好地理解提供的数据的具体细节。
- en: In this chapter, our goal is to implement a machine learning algorithm in Python
    using `scikit-learn`, one of the most popular machine learning tools for Python,
    based upon a sample well drilling log dataset for the task of training a classifier
    to distinguish between different types of lithofacies.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们的目标是使用Python中的`scikit-learn`实现机器学习算法，这是Python中最受欢迎的机器学习工具之一，基于样本测井数据集来训练一个分类器，以区分不同类型的岩性。
- en: Suppose that we are told that the training log dataset was created from sample
    logs, and based upon research defining eight different lithofacies, along with
    various log measurements, such as gamma-ray, neutron porosity, **photoelectric
    factor** (**PeF**), and resistivity.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们被告知训练日志数据集是从样本日志创建的，并且基于定义八个不同岩性的研究，以及各种测井测量，如伽马射线、中子孔隙率、**光电因子**（**PeF**）和电阻率。
- en: We also know that in this file, we'll have six lithofacies data points (`GCR`,
    `NPHI`, `PE`, `PEF`, `ILD`, and `ILM`), along with an ID and the lithofacies type.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还知道，在这个文件中，我们将有六个岩性数据点（`GCR`、`NPHI`、`PE`、`PEF`、`ILD`和`ILM`），以及一个ID和岩性类型。
- en: 'The following screenshot shows a portion of the top section of an actual well
    logging file:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了实际测井文件顶部部分的一小部分：
- en: '![](img/b68a5bb4-aef2-4d70-b9eb-4c9fba0ae94a.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/b68a5bb4-aef2-4d70-b9eb-4c9fba0ae94a.png)'
- en: 'The following screenshot is a peek at a portion of our file, which we will
    use for training our machine learning model. This file excludes the top LAS-formatted
    section headers and is simply a continuous list of curves or well-logging measurements:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图是我们文件的一部分的预览，我们将用它来训练我们的机器学习模型。此文件排除了顶部的LAS格式化部分标题，而是一个连续的曲线或测井测量的列表：
- en: '![](img/752d0e9e-ecd2-4c1e-aab9-c49d7f42b6bc.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/752d0e9e-ecd2-4c1e-aab9-c49d7f42b6bc.png)'
- en: Loading the data asset
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 加载数据资产
- en: 'We will assume that you have created a new IBM Watson Studio project, and therefore,
    you can proceed to add a data asset (our well sample log file) to it so that we
    can work with the data. We have loaded data files in our previous chapters, but
    here is a quick refresher:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将假设你已经创建了一个新的IBM Watson Studio项目，因此，你可以继续向其中添加一个数据资产（我们的井样本测井文件）以便我们可以处理这些数据。我们在前面的章节中已经加载了数据文件，但这里是一个快速回顾：
- en: From the new project's Assets page, click on Add to project | DATA
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从新项目的“资产”页面，点击“添加到项目”|“数据”
- en: In the Load pane that opens, browse to the file. Remember that you must stay
    on the page until the load is complete
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在打开的“加载”面板中，浏览到文件。请记住，你必须停留在该页面上，直到加载完成。
- en: IBM Watson then saves the files in the object storage that is associated with
    your project, and they are listed as data assets on the Assets page of your project
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: IBM Watson然后将文件保存在与你的项目关联的对象存储中，它们在项目的“资产”页面作为数据资产列出。
- en: Data asset annotations
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据资产注释
- en: As you build your assets within IBM Watson Studio, it is highly recommended
    that you take the time to annotate your data assets at the time that you load
    them. This will allow you to quickly search for and locate those assets for collaboration
    with others and to use within other projects. You can accomplish this by simply
    adding a description and one or more tags to your asset.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 当你在IBM Watson Studio中构建你的资产时，强烈建议你在加载它们的时候花时间注释你的数据资产。这将允许你快速搜索和定位这些资产，以便与他人协作，并在其他项目中使用。你可以通过简单地添加描述和一到多个标签到你的资产来实现这一点。
- en: 'A tag is metadata that simplifies searching for your assets. A tag consists
    of one string containing spaces, letters, numbers, underscores, dashes, and the
    # and @ symbols. You can create multiple tags on the same asset by using a comma
    to separate the individual tag values.'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 标签是简化搜索你的资产的元数据。标签由一个包含空格、字母、数字、下划线、破折号以及#和@符号的字符串组成。你可以在同一资产上创建多个标签，通过使用逗号分隔各个标签值。
- en: 'From the project page, under Data assets, you can click on the asset name:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 从项目页面，在“数据资产”下，你可以点击资产名称：
- en: '![](img/9e8b5376-5a96-4eb0-8dd4-1e9ed26ccde4.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/9e8b5376-5a96-4eb0-8dd4-1e9ed26ccde4.png)'
- en: 'Next, click inside the Tags box to add tags, and you can manually assign business
    terms and tags to the data, as well as a description, as shown in the following
    screenshot:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，点击“标签”框内部以添加标签，你可以手动分配业务术语和标签到数据，以及描述，如以下截图所示：
- en: '**![](img/7c3c91a5-584b-4920-a47e-31e7b1b1b8d8.png)**'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '**![图片](img/7c3c91a5-584b-4920-a47e-31e7b1b1b8d8.png)**'
- en: Profiling the data
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据分析
- en: Another method for developing a good understanding of what your data offers
    is to create a profile of the data, using the profile feature within IBM Watson
    Studio.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 了解你的数据提供的内容的另一种方法是创建数据的配置文件，使用IBM Watson Studio中的配置文件功能。
- en: 'The profile of a data asset includes generated metadata and statistics about
    the textual content of the data so that you can *see* how it is made up. You can
    create a profile on the asset''s Profile page in the project, as shown in the
    following screenshot:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 数据资产的配置文件包括关于数据文本内容的生成元数据和统计信息，以便你可以“看到”它是如何构成的。你可以在项目的配置文件页面上创建配置文件，如以下截图所示：
- en: '![](img/72826041-99d2-4e0b-b965-b78f7bd2d3ea.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/72826041-99d2-4e0b-b965-b78f7bd2d3ea.png)'
- en: 'Once you click on Create Profile, IBM Watson reviews the data and generates
    the visuals that you can scroll though and easily examine:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你点击“创建配置文件”，IBM Watson将审查数据并生成你可以滚动查看并轻松检查的视觉图表：
- en: '![](img/fd9d5d20-4461-4fa1-8ff0-7f8174f3c5a0.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/fd9d5d20-4461-4fa1-8ff0-7f8174f3c5a0.png)'
- en: Depending upon the size and complexity of the data, generating the profile may
    take a few minutes. The good news is that after it is created, it is saved with
    the file so that it doesn't have to be generated again.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 根据数据的大小和复杂性，生成配置文件可能需要几分钟。好消息是，一旦创建，它就会与文件一起保存，因此不需要再次生成。
- en: Using a notebook and Python instead
  id: totrans-56
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用笔记本和Python代替
- en: Rather than using the profiler, you can use visualizations within an IBM Watson
    notebook to present data visually to identify patterns, gain insights, and make
    decisions based upon your project's objectives or assumptions. As we've seen in
    earlier chapters, many open source visualization libraries, such as `matplotlib`,
    are already pre-installed on IBM Watson Studio for you, and all you have to do
    is import them.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 而不是使用分析器，您可以使用IBM Watson笔记本中的可视化来直观地展示数据，以识别模式、获得见解并基于您项目的目标或假设做出决策。正如我们在前面的章节中所看到的，许多开源可视化库，如`matplotlib`，已经预安装在IBM
    Watson Studio中供您使用，您只需导入它们即可。
- en: You can install other third-party and open source visualization libraries and
    packages in the same manner, or take advantage of other IBM visualization libraries
    and tools, such as **Brunel**, to create interactive graphs with simple code and
    SPSS models to create interactive tables and charts to help evaluate and improve
    a predictive analytics model.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用相同的方式安装其他第三方和开源可视化库和包，或者利用IBM的其他可视化库和工具，如**Brunel**，通过简单的代码创建交互式图表，以及使用SPSS模型创建交互式表格和图表，以帮助评估和改进预测分析模型。
- en: In the next few sections, we will use a notebook and Python commands to show
    the various ways to analyze and condition data.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的几节中，我们将使用笔记本和Python命令来展示分析和处理数据的各种方法。
- en: Loading the data
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 加载数据
- en: 'Again, since we assume that we already have a new IBM Watson Studio project
    created, we can go ahead and add a new notebook to the project (from your project,
    click on Add to Project | Notebook, just as we did in prior chapters, just be
    sure to specify the language as Python). Let''s take a look at the following steps:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们假设我们已经创建了一个新的IBM Watson Studio项目，我们可以继续向项目中添加一个新的笔记本（从您的项目，点击添加到项目 | 笔记本，就像我们在前面的章节中所做的那样，只是确保指定语言为Python）。让我们看看以下步骤：
- en: Load and open the file, then print the first five records (from the file). Recall
    that to accomplish this, there is no coding required.
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 加载并打开文件，然后打印前五条记录（来自文件）。回想一下，为了完成这项任务，不需要编写代码。
- en: 'You simply click on Insert to code and then Insert pandas DataFrame for our
    file in the Files | Data Asset pane:'
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您只需点击插入代码，然后在文件 | 数据资产面板中插入我们的文件：
- en: '![](img/92e6b2c1-df3d-46a9-b1cd-b71b74030a96.png)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/92e6b2c1-df3d-46a9-b1cd-b71b74030a96.png)'
- en: 'This automatically generates the following code in our notebook''s first cell,
    which will load our data file into a pandas DataFrame object (`df_data_1`) and
    then print the first five records of the file:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 这将在我们的笔记本的第一个单元中自动生成以下代码，该代码将我们的数据文件加载到pandas DataFrame对象（`df_data_1`）中，然后打印文件的前五条记录：
- en: '![](img/1af1fbbd-c4f8-4b1f-8815-dc265de72dca.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/1af1fbbd-c4f8-4b1f-8815-dc265de72dca.png)'
- en: 'The preceding code generates the following output for us:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 上述代码为我们生成了以下输出：
- en: '![](img/eda02023-ffa5-42dc-8dd5-5174db5f5310.png)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/eda02023-ffa5-42dc-8dd5-5174db5f5310.png)'
- en: From this review, we can see that each row of the dataset represents one lithofacies,
    and they are each represented by several features that are in our table's columns
    (as shown in the preceding screenshot).
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 从这次回顾中，我们可以看到数据集的每一行代表一个岩性层，它们分别由我们表格的列中的几个特征表示（如前面的截图所示）。
- en: 'Using the `print` and `.shape` functions of Python, we see that we have `180`
    lithofacies (the number of records in the file) and `8` features in the dataset:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Python的`print`和`.shape`函数，我们看到我们有`180`个岩性层（文件中的记录数）和`8`个数据集中的特征：
- en: '![](img/376a8c2b-3641-4b56-97ce-8310c444ed2f.png)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/376a8c2b-3641-4b56-97ce-8310c444ed2f.png)'
- en: 'We can also use the `.unique()` function to demonstrate that we have eight
    different types of lithofacies in our dataset:'
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们还可以使用`.unique()`函数来证明我们的数据集中有八种不同的岩性层类型：
- en: '![](img/476c4681-fd03-4a3d-82d8-c2f3c0f52aaf.png)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/476c4681-fd03-4a3d-82d8-c2f3c0f52aaf.png)'
- en: 'Next, we can use the `.size()` function to see how each lithofacies is represented
    within the file. The data seems pretty balanced between `22` and `25`, with the
    `Mdst/Mdst-Wkst` lithofacies being the most unbalanced with `16`:'
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们可以使用`.size()`函数来查看每个岩性层在文件中的表示情况。数据显示，数据在`22`和`25`之间比较均衡，其中`Mdst/Mdst-Wkst`岩性层的分布最不均衡，有`16`个：
- en: '![](img/8c7e0eae-94a9-41af-b0ef-da03eef5df28.png)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/8c7e0eae-94a9-41af-b0ef-da03eef5df28.png)'
- en: Visualizations
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 可视化
- en: 'You can use Python to create a bar chart based upon the lithofacies size; this
    makes it a bit easier to understand as shown in the following screenshot:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用Python创建基于岩性层大小的条形图；这使理解变得更容易，如下面的截图所示：
- en: '![](img/4f50fce8-81b5-4861-b250-b5ab91541912.png)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/4f50fce8-81b5-4861-b250-b5ab91541912.png)'
- en: Box plotting
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 箱线图
- en: 'Often used in performing explanatory data analysis, a box plot is a type of
    graph that is used to show and understand the shape of a distribution, its central
    value, and its variability. Seeing a box plot for each numeric variable in our
    well log data will give you a better idea of the distribution of the input variables
    as shown in the following screenshot:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/8e5ec820-fac0-4fc1-83cb-515e7d0c3bbb.png)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
- en: Histogram
  id: totrans-82
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A **histogram** is used to graphically recap and display the distribution of
    data points within a dataset.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
- en: 'Using the following Python code, we can now try a histogram for each numeric
    input value within our data (`GCR`, `ILD`, `ILM`, `NPHI`, `PE`, and `PEF`):'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'This gives you the following output:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/f5a9c946-0b60-4950-9387-3220a8d696c3.png)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
- en: 'Once a histogram is generated from the data, the first question that is usually
    asked is whether the shape of the histogram is normal. A characteristic of a **normal
    distribution** (of data), *s*, is that it is symmetrical. This means that if the
    distribution is cut in half, each side will be the mirror of the other, forming
    a bell-shaped curve, as shown in the following screenshot:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/eef7aa30-8519-4100-9dc4-e4eeb72d413e.png)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
- en: From our generated histograms, perhaps the **NPHI** data point comes the closest
    to showing a normal distribution.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
- en: The scatter matrix
  id: totrans-91
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A **scatter matrix** is another common analysis tool as it include several pairwise
    scatter plots of variables presented in a matrix format. It is also used to verify
    if variables are correlated and whether the correlation is positive or negative.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
- en: 'The following code can be used to experiment with this type of visualization:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'This gives you the following output:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/7e242789-03cf-443d-b1ab-3fce75e9faf4.png)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
- en: 'A scatter plot attempts to reveal relationships or associations between variables
    (called a correlation*)*. Refer to the following link to learn more about scatter
    plots:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
- en: '[https://mste.illinois.edu/courses/ci330ms/youtsey/scatterinfo.html](https://mste.illinois.edu/courses/ci330ms/youtsey/scatterinfo.html)'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
- en: Looking at the scatter plot generated from our log data (shown in the preceding
    screenshot), I really don't see any specific or direct correlations between the
    data.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
- en: At this point, you may continue performing a deep dive into the data, perform
    some reforming or aggregations, or even perhaps go back to the original source
    (of the data) and request additional or new data.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
- en: In the interest of time, for this exercise, we will assume that we will use
    what data we have and move on to creating and testing various modeling algorithms.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
- en: Training the classifier
  id: totrans-102
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '`scikit-learn` library can be used to code machine learning classifier and
    is the only Python library which has four-step modeling pattern.'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
- en: 'Refer to the following link for more information about `sckit-learn`: [http://www.jmlr.org/papers/volume12/pedregosa11a/pedregosa11a.pdf](http://www.jmlr.org/papers/volume12/pedregosa11a/pedregosa11a.pdf).'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
- en: The coding process of implementing the `scikit-learn` model applies to various
    classifiers within `sklearn`, such as decision trees, **k-nearest neighbors**
    (**KNN**), and more. We will look at a few of these classifiers here, using our
    well logging data.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 实现scikit-learn模型的编码过程适用于`sklearn`中的各种分类器，如决策树、**k近邻**（**KNN**）等。我们将在这里查看一些这些分类器，使用我们的测井数据。
- en: 'The first step in using Scikit to build a model is to create training and test
    datasets and apply scaling, using the following lines of Python code:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Scikit构建模型的第一个步骤是创建训练集和测试集，并应用缩放，以下Python代码行展示了这一过程：
- en: '[PRE2]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Now that we have created a training dataset, we can proceed with building our
    various types of machine learning models using that data. Typically, in a particular
    machine learning project, you will have some idea as to the type of machine learning
    algorithm that you'll want to use, but perhaps not. Either way, you want to verify
    the performance of your selected algorithm(s).
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经创建了训练集，我们可以使用这些数据来构建各种类型的机器学习模型。通常，在一个特定的机器学习项目中，你会有一些关于你想要使用的机器学习算法类型的想法，但也可能没有。无论如何，你想要验证所选算法（们）的性能。
- en: The following sections show the Python commands which with to create models
    based using the `scikit-learn` module.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 以下部分展示了使用`scikit-learn`模块创建模型的Python命令。
- en: Building a logistic regression model
  id: totrans-110
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建逻辑回归模型
- en: '**Regression analysis** is used to understand which of the independent variables
    (our features: `GCR`, `NPHI`, `PE`, `ILD`, and `ILM`) are related to the dependent
    variable; that is, the type of lithofacies.'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: '**回归分析**用于理解哪些独立变量（我们的特征：`GCR`、`NPHI`、`PE`、`ILD`和`ILM`）与因变量相关；即岩性 facies 类型。'
- en: 'The following lines of Python code create a logistic regression classifier
    model and print its accuracy statistics:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 以下Python代码行创建了一个逻辑回归分类器模型并打印了其准确率统计信息：
- en: '![](img/1b36a60b-1c77-4299-bfe9-c73918b2f3bd.png)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/1b36a60b-1c77-4299-bfe9-c73918b2f3bd.png)'
- en: Building a KNN model
  id: totrans-114
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建KNN模型
- en: The KNN algorithm is a simple, supervised machine learning algorithm that can
    also be used for classification and regression problems.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: KNN算法是一种简单、有监督的机器学习算法，也可以用于分类和回归问题。
- en: 'The following lines of Python code create a KNN classifier model and print
    its accuracy statistics:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 以下Python代码行创建了一个KNN分类器模型并打印了其准确率统计信息：
- en: '![](img/09803695-03fa-409a-8f59-43877547ab38.png)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/09803695-03fa-409a-8f59-43877547ab38.png)'
- en: Building a Gaussian Naive Bayes model
  id: totrans-118
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建高斯朴素贝叶斯模型
- en: Given the class variable, all Naive Bayes classifiers infer that the value of
    a particular feature in the data is independent of the value of any other feature.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 给定类变量，所有朴素贝叶斯分类器都推断出数据中特定特征的价值与任何其他特征的价值无关。
- en: 'The following lines of Python code create a **Gaussian Naive Bayes** (**GaussianNB**)
    classifier model and print its accuracy statistics:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 以下Python代码行创建了一个**高斯朴素贝叶斯**（**GaussianNB**）分类器模型并打印了其准确率统计信息：
- en: '![](img/6db00de6-f0d7-42d8-b1fa-7968c9ee3111.png)'
  id: totrans-121
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/6db00de6-f0d7-42d8-b1fa-7968c9ee3111.png)'
- en: Building a support vector machine model
  id: totrans-122
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建支持向量机模型
- en: A **support vector machine** (**SVM**) is a supervised learning model with associated
    learning algorithms that analyze data used for classification and regression analysis.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '**支持向量机**（**SVM**）是一个有监督的学习模型，它关联的学习算法用于分类和回归分析。'
- en: 'The following lines of Python code create an SVM classifier model and print
    its accuracy statistics:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 以下Python代码行创建了一个SVM分类器模型并打印了其准确率统计信息：
- en: '![](img/38e0acc3-c204-4d0f-be26-03f071d7d277.png)'
  id: totrans-125
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/38e0acc3-c204-4d0f-be26-03f071d7d277.png)'
- en: Building a decision tree model
  id: totrans-126
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建决策树模型
- en: A decision tree is a decision support tool that uses a tree-like model of decisions
    and their possible consequences, including chance event outcomes, resource costs,
    and utility.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 决策树是一种决策支持工具，它使用决策及其可能后果的树状模型，包括随机事件结果、资源成本和效用。
- en: 'The following lines of Python code create a decision tree classifier mode and
    print its accuracy statistics:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 以下Python代码行创建了一个决策树分类器模型并打印了其准确率统计信息：
- en: '![](img/bbbae996-3329-4140-b918-69c59eade65b.png)'
  id: totrans-129
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/bbbae996-3329-4140-b918-69c59eade65b.png)'
- en: Summing them up
  id: totrans-130
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结一下
- en: Again, if we were working a real project, this step or phase (of the project)
    would include a much deeper review of each model's performance results and, perhaps,
    would require the decision to even return back to the data exploration and transformation
    phase. However, for the sake of time, we'll move forward.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 再次强调，如果我们正在处理一个真实的项目，这一步或项目阶段将包括对每个模型性能结果的更深入审查，甚至可能需要决定返回数据探索和转换阶段。然而，为了节省时间，我们将继续前进。
- en: Since we've now seen some simple ways for creating and, at least, superficially
    judging each model's performance (as far as accuracy), we will move on to the
    last section of this chapter and look at an example of visualizing a selected
    model using Python commands.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们已经看到了一些创建和至少从表面上看判断每个模型性能（就准确度而言）的简单方法，我们将继续本章的最后部分，并查看一个使用Python命令可视化所选模型的示例。
- en: Evaluating the classifier
  id: totrans-133
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 评估分类器
- en: 'Reviewing the outputs printed after each model build, we should notice that
    the decision tree model has one of the best results:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 在每次模型构建后打印的输出中回顾，我们应该注意到决策树模型具有最佳结果之一：
- en: '[PRE3]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: A disclaimer of sorts
  id: totrans-136
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 类似于免责声明
- en: Typically, we would spend much more time evaluating and verifying the performance
    of a selected model (and continually training it), but again, you get the general
    idea (there is plenty of due diligence work to do!), and our goals are more around
    demonstrating the steps in building an end-to-end machine learning solution using
    IBM Watson Studio and its resources.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，我们会花更多的时间评估和验证所选模型（并持续训练它），但再次强调，你得到了一个大致的概念（还有很多尽职调查工作要做！），我们的目标更多是展示使用IBM
    Watson Studio及其资源构建端到端机器学习解决方案的步骤。
- en: With that in mind, we will now use some Python code to create some visualizations
    of our models.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑到这一点，我们现在将使用一些Python代码来创建我们模型的可视化。
- en: Understanding decision trees
  id: totrans-139
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解决策树
- en: Decision tree algorithms are very commonly-used supervised learning algorithm
    models for classification and regression tasks. In this section, we will show
    how you can visualize decision tree classifiers to better understand their logic.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 决策树算法是非常常用的监督学习算法模型，用于分类和回归任务。在本节中，我们将展示如何可视化决策树分类器，以便更好地理解其逻辑。
- en: Decision tree classifiers build a sequence of simple if/else rulings on data
    through the use of which they can then predict the target value.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 决策树分类器通过使用一系列简单的if/else规则对数据进行建模，然后通过这些规则预测目标值。
- en: Decision trees are usually simpler to interpret because of their structure and
    the ability we have to visualize the modeled tree, using modules such as the `sklearn
    export_graphviz` function.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 由于其结构和我们可以使用如`sklearn export_graphviz`函数等模块可视化的建模树的能力，决策树通常更容易解释。
- en: 'The following standard Python code can be used to visualize the decision tree
    model that we previously built in our notebook:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 以下标准的Python代码可以用来可视化我们在笔记本中之前构建的决策树模型：
- en: '[PRE4]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The sample code can be found at [https://towardsdatascience.com/interactive-visualization-of-decision-trees-with-jupyter-widgets-ca15dd312084](https://towardsdatascience.com/interactive-visualization-of-decision-trees-with-jupyter-widgets-ca15dd312084).
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 示例代码可以在[https://towardsdatascience.com/interactive-visualization-of-decision-trees-with-jupyter-widgets-ca15dd312084](https://towardsdatascience.com/interactive-visualization-of-decision-trees-with-jupyter-widgets-ca15dd312084)找到。
- en: 'The following screenshot shows the code executed in our notebook and the graphical
    output it creates (although this is difficult to fit into a single screenshot):'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了在笔记本中执行的代码及其创建的图形输出（尽管这很难放入一个单独的截图）：
- en: '![](img/6cedfd34-c220-42ff-8706-cd2c1f2b139c.png)'
  id: totrans-147
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6cedfd34-c220-42ff-8706-cd2c1f2b139c.png)'
- en: Very seldom does one allow.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 很少有人允许这样做。
- en: Summary
  id: totrans-149
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we introduced a real-world use case in the evaluation of well
    drilling logs to classify lithofacies.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们介绍了一个实际案例，在评估钻井日志以分类岩性时使用。
- en: We loaded a sample file and performed various profiling and visualization exercises
    comparing Watson profiles, as well as using Python commands within a notebook.
    Finally, we used specialized Python libraries to build various types of models
    and then presented a graph of a supervised machine learning algorithm.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 我们加载了一个样本文件，进行了各种配置文件和可视化练习，比较了Watson配置文件，并在笔记本中使用Python命令。最后，我们使用专门的Python库构建了各种类型的模型，并展示了一个监督机器学习算法的图表。
- en: In the next chapter, we will build a cloud-based, multibiometric identity authentication
    platform.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将构建一个基于云的多生物识别身份验证平台。
