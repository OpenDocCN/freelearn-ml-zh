- en: '4'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Model Data for Machine Learning in Power BI
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In [*Chapter 3*](B19500_03.xhtml#_idTextAnchor047) of this book, you prepped
    FAA Wildlife Strike data for a Power BI dataset, built a relational dataset that
    will function as a foundation for analytics, and then configured basic settings
    in that dataset so that you could take a deep dive into the data and discover
    features for ML in Power BI.
  prefs: []
  type: TYPE_NORMAL
- en: As you begin discovering features in the data for your ML models, you will need
    a process for adding those features to queries that can be used for training and
    testing those models in Power BI. In this chapter, you will build out an analytic
    report in Power BI as you explore the dataset for features suitable for ML in
    Power BI. When features are discovered, you will create queries within Power Query
    that will eventually serve the purpose of training and testing your ML models.
  prefs: []
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'For this chapter, you will need the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Power BI Desktop April 2023 or later (no licenses required)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'FAA Wildlife Strike data files from either the FAA website or the Packt GitHub
    site: [https://github.com/PacktPublishing/Unleashing-Your-Data-with-Power-BI-Machine-Learning-and-OpenAI](https://github.com/PacktPublishing/Unleashing-Your-Data-with-Power-BI-Machine-Learning-and-OpenAI)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Choosing features via data exploration
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Your project is to be implemented completely within Power BI, without using
    external tools. Power BI ML is a **software as a service** (**SaaS**) tool that
    does not require the setup of an infrastructure or advanced coding skills. Traditionally,
    most ML projects are implemented using highly specialized tools that require strong
    coding skills with languages such as R and Python. By implementing the entire
    project in Power BI, you will be able to complete it in a short timeline, build
    all of the components with SaaS tools and minimal coding, and then manage deployment,
    scalability, and future changes using a single suite of tools.
  prefs: []
  type: TYPE_NORMAL
- en: The data architecture techniques in this chapter are tailored to analysts and
    business intelligence developers, and the process will be a great way to learn
    the basics of finding and modeling features for ML. Experienced ML architects
    who are fluent in R or Python might handle the process differently, but you need
    to proceed with tools that are within your skill set. Using Power BI tools including
    Power Query, datasets, dataflows, and ML will enable you to complete the project
    with little code effort, all within Power BI.
  prefs: []
  type: TYPE_NORMAL
- en: When you run potential features through Power BI ML, the tool will help identify
    the features that have strong predictive value. Some of the features that you
    add to tables may turn out to have little predictive value, but running them through
    the Power BI ML tool will help identify the value of features.
  prefs: []
  type: TYPE_NORMAL
- en: Adding Power Query tables to your architecture for ML training and testing
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Revisiting your preliminary data architecture, you will be populating the ML
    training data tables in Power Query with features that you discover while creating
    an analytical report in Power BI using your dataset:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.1 – ML training data will be discovered during analysis in Power
    BI](img/Figure_4.01_B19500.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.1 – ML training data will be discovered during analysis in Power BI
  prefs: []
  type: TYPE_NORMAL
- en: 'You decide to review the deliverables that will fulfil the stakeholder requirements,
    as discussed in [*Chapter 1*](B19500_01.xhtml#_idTextAnchor015):'
  prefs: []
  type: TYPE_NORMAL
- en: '**Analytic Report**: This will be created as part of the analysis process using
    your Power BI dataset'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Predict Damage, Predict Size, Predict Height**: You will need three separate
    tables of training data for each of these three machine learning models'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'As you build out your analytic report and discover new features that can be
    used for predictions, you will iteratively build out your training data tables
    in Power Query for use with ML. You are building an architecture that can be updated
    and modified for future versions of the project, too:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.2 – Data exploration and feature discovery is an iterative process](img/Figure_4.02_B19500.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.2 – Data exploration and feature discovery is an iterative process
  prefs: []
  type: TYPE_NORMAL
- en: 'You can resume where you left off with your PBIX file from [*Chapter 3*](B19500_03.xhtml#_idTextAnchor047),
    or you can follow along using the finished version of the content from this chapter.
    You can download the PBIT version of the file from the Packt GitHub site folder
    for [*Chapter* *4*](B19500_04.xhtml#_idTextAnchor062): [https://github.com/PacktPublishing/Unleashing-Your-Data-with-Power-BI-Machine-Learning-and-OpenAI/tree/main/Chapter-04](https://github.com/PacktPublishing/Unleashing-Your-Data-with-Power-BI-Machine-Learning-and-OpenAI/tree/main/Chapter-04).'
  prefs: []
  type: TYPE_NORMAL
- en: 'First, you’ll need to create a group of new queries to make tables that can
    be modified during this iterative process:'
  prefs: []
  type: TYPE_NORMAL
- en: Create a new group in Power Query called `ML Queries`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Right-click the **Strike Reports** query in the **Curated Reporting Queries**
    group, and select **Reference**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Rename the new query `Predict Damage`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Right-click the new query and unselect **Enable Load**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Right-click the new query and move it to the new **ML** **Queries** group.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Repeat these steps two more times, but rename the queries `Predict Size` and
    `Predict Height`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Your Power Query groups should now look like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.3 – You now have a separate group for ML Queries](img/Figure_4.03_B19500.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.3 – You now have a separate group for ML Queries
  prefs: []
  type: TYPE_NORMAL
- en: 'Are you scratching your head and wondering why all three queries are identical?
    Reviewing the iterative process from *Figure 4**.2*, you’ll see that each of these
    queries will be modified as you discover new features in the data using Power
    BI. Through this process, each query will be whittled down and customized to represent
    a unique set of features that relate to the intended prediction. Before beginning
    feature discovery via analytics, you think through the likely granularity of each
    query for your ML models. Effectively, you want to define what an individual row
    of data represents:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Predict Damage**: The *yes*/*no* binary prediction for damage will be applied
    to an individual reported wildlife strike. The question asked will be “*Based
    upon the circumstances of the strike, how likely is there to be damage to the
    aircraft?*” Each row will be a unique wildlife strike report flight.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Predict Size**: Predicting the size of the wildlife that struck the aircraft
    is your second deliverable. This prediction could be useful in identifying the
    size of an animal that struck an aircraft if there was no visual confirmation
    or remains recovered. This prediction will also be at the level of a unique wildlife
    strike report flight.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Predict Height**: Ideally, you’d like to predict the height of different
    wildlife that hit an aircraft. Data about the time of year, location, and species
    could be used to predict the height. Predicting the height of an individual event
    would also keep the grain of the table identical to the source database.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The next stage is building the report.
  prefs: []
  type: TYPE_NORMAL
- en: Building an analytic report to discover and choose initial features for the
    Predict Damage ML model
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: At the bottom of your blank Power BI report, change the name of the page to
    `Predict Damage`. This page will be part of your analytic report. You first ask
    the question “*What constitutes a yes/no answer to indicate whether a wildlife
    strike caused damage?*” Referring to the `read_me.xls` documentation, you find
    a column named **Indicated Damage**, which is on the **Strike Reports** table,
    and provides a *True*/*False* value. This column will serve as the column you
    are predicting in the Predict Damage binary ML model.
  prefs: []
  type: TYPE_NORMAL
- en: 'You follow these steps to dive into the data:'
  prefs: []
  type: TYPE_NORMAL
- en: From the **Fields** list, drag **Incidents** onto the canvas.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Create a new calculated measure to calculate the percentage of incidents that
    had damage:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Format **Indicated Damage %** as a percentage.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Drag **Indicated Damage %** onto the table with **Incidents**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Change the table to a matrix.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Drag **Aircraft Type Dim[Aircraft Classification]** onto rows.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Your matrix should appear as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.4 – Animal strikes with reported damage by aircraft classification](img/Figure_4.04_B19500.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.4 – Animal strikes with reported damage by aircraft classification
  prefs: []
  type: TYPE_NORMAL
- en: 'You notice that the vast majority of wildlife strike reports are for airplanes,
    and 9.4% of the reports indicated damage. Helicopters also have several thousand
    reports, but you decide to whittle the data down to airplanes since those are
    the most common passenger aircraft and do not introduce flight path complexities
    such as hovering:'
  prefs: []
  type: TYPE_NORMAL
- en: Drag **Aircraft Type Dim[Aircraft Classification]** into **Filters on this page**
    of the Power BI filter pane.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Filter for **Airplane** and leave the other options unchecked.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Move the matrix to the left side of the canvas, and create a new chart to view
    incidents and damage by year.
  prefs: []
  type: TYPE_NORMAL
- en: Choose **Line and stacked column chart** from the **Visualizations** column.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Put **Strike Report Fact[Incidents]** on the column *y* axis.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Put **Strike Report Fact[Indicated Damage %]** on the line *y* axis.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Put **Date Dim[Year]** on the *x* axis.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You notice an interesting trend on the chart. The number of reported incidents
    increased over time until the COVID-related disruptions of 2020\. At the same
    time, the percentage of strikes that caused damage went down and appear to have
    leveled off around 2014.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.5 – Incidents and incidents with damage by year](img/Figure_4.05_B19500.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.5 – Incidents and incidents with damage by year
  prefs: []
  type: TYPE_NORMAL
- en: 'Why did these trends develop? You don’t know the answers, but the following
    are among the possible causes:'
  prefs: []
  type: TYPE_NORMAL
- en: Improved surveillance and deterrence of wildlife by air traffic control over
    time
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Better compliance with filling out reports when there wasn’t any damage
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improvements in aircraft technology
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changes in quantities of flights, times of flights, and times at various altitudes
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For the time being, you decide to focus on data starting in the year 2014 since
    older data likely has different trends. Is this the perfect starting point? Advanced
    analytic techniques might unveil the perfect start date for your data, but for
    your first round of analytics in Power BI, you settle on 2014 as the starting
    point. Drag **Date Dim[Year]** into **Filters on this page** of the Power BI filter
    pane and filter to greater than or equal to 2014.
  prefs: []
  type: TYPE_NORMAL
- en: 'Using common sense, it would seem that larger wildlife could be more likely
    to cause damage versus small animals. Copy and paste the matrix on the left side
    of the page showing **Aircraft Classification**, and replace **Aircraft Classification**
    with **Strike Report Fact[Size]**. Your report should look as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.6 – Viewing incidents and damage with filter criteria applied](img/Figure_4.06_B19500.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.6 – Viewing incidents and damage with filter criteria applied
  prefs: []
  type: TYPE_NORMAL
- en: You notice that increasing the size of the wildlife appears to result in a larger
    percentage of incidents with damage. Several incidents also left the size field
    blank, which will need to be fixed if you use that field for ML. Basic ML tools
    generally require non-blank values in the data that is used for training and testing.
    Power BI ML has built-in featurization tools that will account for blank values,
    but handling blank values is a good idea before building ML models.
  prefs: []
  type: TYPE_NORMAL
- en: 'For your first iteration of the **Predict Damage** data for ML in Power BI,
    you’ve isolated the following features. You will add more features in future chapters
    of the book, but this is a good start to test your architectural design in Power
    Query:'
  prefs: []
  type: TYPE_NORMAL
- en: A row represents an individual reported event.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Strike Report Fact[Indicated Damage]** is the field you will be training
    the machine learning model to predict.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You will use rows that have `Airplane`.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You will use data with **Incident Date** on or after January 1, 2014.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You will also use `blank`.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Building an analytic report to discover and choose initial features for the
    Predict Size ML model
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Now you move on to find a few features to be used in predicting the size of
    the wildlife that struck an aircraft. Predicting the size of the animal or animals
    could be helpful in understanding what may have hit an aircraft at a certain altitude,
    location, and in a certain season. When the species is unknown, size could be
    a valuable factor in determining future risks and also for identifying possible
    collisions with endangered or protected wildlife.
  prefs: []
  type: TYPE_NORMAL
- en: 'You’ve already included size as a predictive factor for your damage prediction
    ML model, but there will inevitably be scenarios where the animal was not seen
    or found. The Predict Size algorithm will predict whether a strike happened with
    wildlife that is large, medium, or small:'
  prefs: []
  type: TYPE_NORMAL
- en: You start by duplicating the `Predict Size`. You will reuse the content that
    has already been created.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'First, you decide to keep the `Airplane` so that your machine learning models
    will apply to the same types of use cases for your project. You modify the line
    and stacked column chart as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Remove **Indicated Damage %** from the chart
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Add **Strike Reports Fact[Size]** to the column legend
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: In the filter pane, clear the filter on **Date[Year]**
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'You notice that blank (empty) values for **Size** start showing up in the year
    2010:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.7 – Blank values start showing up in 2010](img/Figure_4.07_B19500.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.7 – Blank values start showing up in 2010
  prefs: []
  type: TYPE_NORMAL
- en: You add **Strike Reports Fact[Size]** to the filter pane for **Filters on this
    page** and remove the blank values from the report. While blank values for **Size**
    were included with your previous query for predicting damage, blank values do
    not provide value for this model since you are trying to predict the outcome of
    the **Strike Reports Fact[Size]** field. The **Predict Damage ML** model will
    be beneficial for evaluating the likelihood of damage from a strike, while the
    **Predict Size ML** model will predict the size of the wildlife strike when other
    factors are known.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'You notice that even with the blank values removed for **Size**, there was
    some sort of change in 2010\. Fewer medium-sized strikes were reported, and more
    small strikes were reported:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.8 – Distribution of reported sizes appears to change in 2010](img/Figure_4.08_B19500.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.8 – Distribution of reported sizes appears to change in 2010
  prefs: []
  type: TYPE_NORMAL
- en: You decide to include data starting in the year 2010 by filtering **Date[Year]**
    in the filter pane. Make the change in **Filters on this page** with **Year**
    added as a filter.
  prefs: []
  type: TYPE_NORMAL
- en: On the **Predict Damage** report page, you already observed that the likelihood
    of damage increases as the size of the strike increases. Therefore, you decide
    to keep **Strike Reports Fact[Indicated Damage]** as a feature for predicting
    size.
  prefs: []
  type: TYPE_NORMAL
- en: 'You are aware that birds, which are often the culprits in these wildlife strikes,
    migrate over the course of the year. You remove **Date[Year]** from the *x* axis
    of the line and stacked column chart, and replace it with **Date[Month Num]**.
    Notice that the frequency and distribution of strikes and the size of strikes
    change throughout the year:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.9 – Frequency and distribution appear to change by month when all
    years are aggregated](img/Figure_4.09_B19500.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.9 – Frequency and distribution appear to change by month when all years
    are aggregated
  prefs: []
  type: TYPE_NORMAL
- en: You decide to add the month number as a feature to your query for data to train
    and test the Predict Size ML model. Is month of year a better level of aggregation
    than day of year, week of year, or quarter of year? You might revisit this question
    in future iterations of the solution, but for now, you decide to proceed since
    a deep dive would require extra time and effort that could impact your deadline.
  prefs: []
  type: TYPE_NORMAL
- en: 'Logically, larger-sized wildlife strikes could cause more severe or expensive
    damage. The **Strike Reports Fact** table contains four columns with cost data
    including **Cost of Repairs**, **Other Costs**, **Cost of Repair Adjusted**, and
    **Other Costs Adjusted**. The adjusted columns are indexed for inflation, so you
    decide to use those values. You decide to combine those columns into a single
    column. In order to combine them, you go back to Power Query and create a new
    column on the **Strike Reports** query of the **Curated Reporting** **Queries**
    group:'
  prefs: []
  type: TYPE_NORMAL
- en: Click on the **Strike Reports** query of the **Curated Reporting** **Queries**
    group.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: On the Power Query ribbon and select **Add Column** | **General** | **Custom
    Column**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Name the new column `Total` `Costs Adjusted`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Enter the following as the M expression that adds the columns together:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE2]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE3]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: The conditional statements exist to ensure that rows with one null value don’t
    get skipped.
  prefs: []
  type: TYPE_NORMAL
- en: Change the data type to **Fixed** **Decimal Number**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 4.10 – Add a custom column for total costs](img/Figure_4.10_B19500.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.10 – Add a custom column for total costs
  prefs: []
  type: TYPE_NORMAL
- en: 'Since you referenced the **Strike Reports** query in your other downstream
    queries, the new column will also propagate to those queries! Next time you reprocess
    your Power BI dataset, a column for **Total Adjusted Costs** will appear on the
    **Strike Reports** Fact table. Click **Close & Apply** in Power Query to update
    your dataset. Once processed, you decide to add three new DAX expressions to the
    **Strike Reports** Fact table of the dataset for sum (total charges for all rows
    selected), average (an average of all rows selected), and median (the middle value
    of all rows selected to eliminate the impact of extremely large and rare cost
    events):'
  prefs: []
  type: TYPE_NORMAL
- en: '`Total Costs Inflation Adjusted = SUM([Total` `Costs Adjusted])`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Cost per Strike Avg = AVERAGE([Total Costs` `Inflation Adjusted])`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Cost per Strike Median = MEDIAN([Total` `Costs Adjusted])`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Finally, thinking about climate and geography, you realize that the species
    of animals at different times of the year will be different in the Pacific Northwest,
    versus the deep South, versus New England. Certain species will inhabit different
    parts of the country, and some species migrate to new geographies at different
    times of the year. For example, flamingos will never fly through Minnesota. For
    the first iteration of your project, you decide to filter the data down to the
    top 15 airports that experience wildlife strikes:'
  prefs: []
  type: TYPE_NORMAL
- en: Copy and paste the matrix visual with **Size**, **Incidents**, and **Indicated**
    **Damage %**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Move **Size** from rows to columns.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Add **Strike Reports Fact[Airport ID]** to the rows.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Sort by **Total Incidents**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Choose the top 15 airports based on total strikes. Exclude `ZZZZ` since this
    is not a valid airport code and was most likely used when the airport was unknown.
    Notice that the locations provide some geographical diversity, too:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '| **Airport ID** | **Airport City** |'
  prefs: []
  type: TYPE_TB
- en: '| KDEN | Denver, CO |'
  prefs: []
  type: TYPE_TB
- en: '| KMEM | Memphis, TN |'
  prefs: []
  type: TYPE_TB
- en: '| KDFW | Dallas, TX |'
  prefs: []
  type: TYPE_TB
- en: '| KSMF | Sacramento, CA |'
  prefs: []
  type: TYPE_TB
- en: '| KCLT | Charlotte, NC |'
  prefs: []
  type: TYPE_TB
- en: '| KORD | Chicago, IL |'
  prefs: []
  type: TYPE_TB
- en: '| KPHL | Philadelphia, PA |'
  prefs: []
  type: TYPE_TB
- en: '| KSDF | Louisville, KY |'
  prefs: []
  type: TYPE_TB
- en: '| KMCO | Orlando, FL |'
  prefs: []
  type: TYPE_TB
- en: '| KLGA | Queens, NY |'
  prefs: []
  type: TYPE_TB
- en: '| KATL | Atlanta, GA |'
  prefs: []
  type: TYPE_TB
- en: '| KJFK | Queens, NY |'
  prefs: []
  type: TYPE_TB
- en: '| KIAH | Houston, TX |'
  prefs: []
  type: TYPE_TB
- en: '| KAUS | Austin, TX |'
  prefs: []
  type: TYPE_TB
- en: '| KBNA | Nashville, TN |'
  prefs: []
  type: TYPE_TB
- en: Figure 4.11 – Top 15 airports by incident count
  prefs: []
  type: TYPE_NORMAL
- en: 'You’ve now identified the feature that you will be predicting, along with the
    features used to score the machine learning model in Power BI:'
  prefs: []
  type: TYPE_NORMAL
- en: A row represents an individual reported event
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Large`, `Medium`, or `Small` strike size'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You will use rows that have an `Airplane`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You will use data with an incident date on or after January 1, 2010
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Blank values will be removed from **Strike** **Report Fact[Size]**
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You will include the **Strike Reports Fact[Indicated Damage]** flag as a feature
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You will filter down to the top 15 airports by wildlife strike volume
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You will include the month of the year as a feature
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Building an analytic report to discover and choose initial features for the
    Predict Height ML model
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Your third ML model in Power BI is planned to predict the height of a wildlife
    strike on an aircraft. The regression model will predict a numeric value in feet
    above the ground. You plan to predict height at the level of an individual flight,
    and if those results have low accuracy, then you will roll incidents up to an
    aggregate level.
  prefs: []
  type: TYPE_NORMAL
- en: First, on your Power BI report, duplicate the `Predict Height`. **Height** is
    a single column in the table of data. You’ll want to filter out rows for which
    the height is missing.
  prefs: []
  type: TYPE_NORMAL
- en: 'You create new DAX expressions to analyze **Height**, in addition to **Average
    Height**, which was created in [*Chapter 3*](B19500_03.xhtml#_idTextAnchor047):'
  prefs: []
  type: TYPE_NORMAL
- en: '`Median Height =` `MEDIAN([Height])`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Max Height =` `MAX([Height])`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Min Height =` `MIN([Height])`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Now you begin analyzing the data:'
  prefs: []
  type: TYPE_NORMAL
- en: On the line and stacked column chart, remove **Indicated Damage %** from the
    line *y* axis and replace it with both **Strike Reports Fact[Average Height]**
    and **Strike Reports** **Fact[Median Height]**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Clear the **Date[Year]** filter on the filter panel for **Filters on** **this
    page**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Leave the `Airplane`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: On the filter panel, add **Height** and set it to **is** **not blank**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Ensure that **Secondary y-axis** is turned on for the visual.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Your chart should look as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.12 – Average and median height over time](img/Figure_4.11_B19500.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.12 – Average and median height over time
  prefs: []
  type: TYPE_NORMAL
- en: You decide to reapply a filter to the **Year** for the whole page for 2010 and
    later, so that the date range is in line with **Predict Size**.
  prefs: []
  type: TYPE_NORMAL
- en: 'On the matrix containing **Size**, **Incidents**, and **Indicated Damage %**,
    follow the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Remove **Indicated** **Damage %**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Add **Strike Reports Fact[Average Height]**, **Strike Reports Fact[Median Height]**,
    **Strike Reports Fact[Max Height]**, and **Strike Reports Fact[Min Height]** to
    the values of the matrix.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Add **Strike Reports Fact[Height]** to the filter pane under **Filters on all
    pages** and set it to **is** **not blank**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Notice that there is a slight uptrend as **Size** increases for the median
    and a more significant uptrend for the average:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.13 – Height average, median, max, and min by size of wildlife strike](img/Figure_4.12_B19500.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.13 – Height average, median, max, and min by size of wildlife strike
  prefs: []
  type: TYPE_NORMAL
- en: At this level of summarization, there does not appear to be a great deal of
    difference between size and height. Since there are many different species that
    get grouped into size categorizations, this feature might not be highly valuable.
    For example, a single small bird might be classified as `Small` while a big flock
    of the same birds might be classified as `Large`. You will keep **Size** on the
    table of data for predicting height, and then see how it fairs when you run it
    through Power BI ML.
  prefs: []
  type: TYPE_NORMAL
- en: 'Copy and paste the matrix visual that you built, and replace **Strike Reports
    Fact[Size]** with **Strike Reports Fact[Species]**. You see a much more dramatic
    change:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 4.14 – Height metrics by species](img/Figure_4.13_B19500.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.14 – Height metrics by species
  prefs: []
  type: TYPE_NORMAL
- en: Average, median, and max heights differ greatly by species. Ground-dwelling
    species, which most likely were struck on the runway, are also on the list and
    consistently have heights of zero feet. For example, if you filter `Swine (pigs)`,
    you can see there were four incidents that happened at a height of zero. Common
    sense tells you that this is expected, and you do not need to test the hypothesis
    “Pigs don’t fly.” In all seriousness, you may want to filter down the list to
    species that can be airborne, and also eliminate catch-all buckets such as `Unknown
    bird – small`. Specific species that actually fly could potentially be a strong
    predictive factor.
  prefs: []
  type: TYPE_NORMAL
- en: 'Copy and paste the matrix visual again, and replace **Size** with **Date[Month
    Num]**. You also see a pattern by month:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 4.15 – Height metrics by month of the year](img/Figure_4.14_B19500.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.15 – Height metrics by month of the year
  prefs: []
  type: TYPE_NORMAL
- en: '**Month Num** could be a valuable feature for predicting height. Some bird
    species migrate to different geographies and occupy different heights, depending
    on the time of year. Adding in the **Airport ID** field as a feature and filtering
    to the top 15 airports listed under the **Predict Size** portion of this chapter
    (*Building an analytic report to discover and choose initial features for the
    Predict Size ML model*) could also enhance the value of **Month Num**.'
  prefs: []
  type: TYPE_NORMAL
- en: 'At this point, you decide to move on to the next step of your project and start
    building out the foundations for ML training and testing data in Power Query.
    For the **Predict Height** query you have decided the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Height will be predicted by the regression model
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Data will be filtered to start in 2010
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Airplane`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Size** of wildlife strikes will be a feature'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Species** will be a feature'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The top 15 airports will be a filter criterion for predicting height
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You’ve now discovered enough potential features to return to Power Query and
    begin building out some queries that will be the basis of the data used to train
    and test your ML models.
  prefs: []
  type: TYPE_NORMAL
- en: "Creating flattened tables in Power Query for ML in \LPower BI"
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now that you’ve done some analysis and discovered features that you’d like to
    include for your first round of ML models, you return to Power Query and get to
    work. You review your notes from the previous sections of this chapter and begin
    with the **Predict Damage** table in the **ML** **Queries** group.
  prefs: []
  type: TYPE_NORMAL
- en: Modifying the Predict Damage table in Power Query
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Since a row will represent an individual event that is predicted, you do not
    need to do any groupings with the data. You will be selecting columns and filtering
    down the rows to a set of data that is better suited to the task:'
  prefs: []
  type: TYPE_NORMAL
- en: Highlight the **Predict Damage** table in the **ML** **Queries** group.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The aircraft class code for airplane is `A`, so filter the `A`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Filter the `1/1/2014`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: On the Power Query ribbon, select **Home** | **Manage Columns** | **Choose Columns**
    and keep the **Size** and **Indicated** **Damage** columns.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: On the `null` value with `empty` so that you do not have blank values.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Are you confused that there are only two columns? Don’t worry! As you progress
    through future chapters, more features will be added to the table. This example
    was kept simple to reinforce the methodology of building up your tables of features
    slowly as you progress through the discovery process. Your table should look as
    follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.16 – Foundation for the Predict Damages query to train and test
    an ML model](img/Figure_4.15_B19500.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.16 – Foundation for the Predict Damages query to train and test an
    ML model
  prefs: []
  type: TYPE_NORMAL
- en: Next, we’ll do the same with the **Predict** **Size** table.
  prefs: []
  type: TYPE_NORMAL
- en: Modifying the Predict Size table in Power Query
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Repeat the same process for the **Predict Size** query in the Power Query **ML**
    **Queries** group:'
  prefs: []
  type: TYPE_NORMAL
- en: Highlight the **Predict Size** table in the **ML** **Queries** group.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The aircraft class code for airplane is `A`, so filter the `A`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Filter the `1/1/2010`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Filter down to the top 15 airports you noted during the analysis. For the `KDEN`,
    `KMEM`, `KDFW`, `KSMF`, `KCLT`, `KORD`, `KPHL`, `KSDF`, `KMCO`, `KLGA`, `KATL`,
    `KJFK`, `KIAH`, `KAUS`, and `KBNA`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: On the Power Query ribbon, select **Home** | **Manage Columns** | **Choose Columns**
    and keep the **Size**, **Indicated Damage**, **Airport ID**, and **Incident**
    **Date** columns.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Uncheck **(null)** values for **Size**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Add a custom column named **Month Number** using the following M code:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Remove **Incident Date**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Your **Predict Size** query should now look like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.17 – Foundation for the Predict Size query to train and test a machine
    learning model](img/Figure_4.16_B19500.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.17 – Foundation for the Predict Size query to train and test a machine
    learning model
  prefs: []
  type: TYPE_NORMAL
- en: Finally, we’ll do this for the **Predict** **Height** table.
  prefs: []
  type: TYPE_NORMAL
- en: Modifying the Predict Height table in Power Query
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The **Predict Height** table in Power Query will also follow the same process
    of whittling down the breadth of columns and volume of rows:'
  prefs: []
  type: TYPE_NORMAL
- en: Highlight the **Predict Height** table in the **ML** **Queries** group.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The aircraft class code for airplane is `A`, so filter the `A`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Filter the `1/1/2010`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: On the Power Query ribbon, select **Home** | **Manage Columns** | **Choose Columns**
    and keep the **Size**, **Species**, **Airport ID**, **Incident Date**, and **Height**
    columns.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Replace null values with `empty` for the **Size** column.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Filter down to the top 15 airports you noted during the analysis. For the `KDEN`,
    `KMEM`, `KDFW`, `KSMF`, `KCLT`, `KORD`, `KPHL`, `KSDF`, `KMCO`, `KLGA`, `KATL`,
    `KJFK`, `KIAH`, `KAUS`, and `KBNA`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Filter **Height** to remove the null values.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Add a custom column named **Month Number** using the following M code:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Remove **Incident Date**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Your **Predict Height** table should now look like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.18 – Foundation for the Predict Height query to train and test a
    machine learning model](img/Figure_4.17_B19500.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.18 – Foundation for the Predict Height query to train and test a machine
    learning model
  prefs: []
  type: TYPE_NORMAL
- en: Your ML queries have now been modified to include new potential features discovered
    in this chapter.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This chapter began building the foundation of your ML adventure in Power BI.
    You created a group of queries in Power Query that will be the basis for training
    and testing your binary, general classification, and regression ML models. You
    began building out an analytical report while discovering features in the data
    that might be valuable for predictive analytics in ML. Finally, you added those
    features to new queries in Power Query. You’re ready to add new features to your
    queries that will attempt to predict whether damage occurred, the size of the
    wildlife involved in a strike, and the height of wildlife strikes.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, you will dive deeper into the Power BI dataset to discover
    new predictive features. You’ll leverage some of the Power BI AI capabilities
    to uncover new insights and potentially new features for use with ML. Finally,
    you will add your new findings to the queries that will be used to train and test
    your ML models in Power BI.
  prefs: []
  type: TYPE_NORMAL
- en: 'Part 2: Artificial Intelligence and Machine Learning Visuals and Publishing
    to the Power BI Service'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the next few chapters, you will be enriching the training dataset with new
    features discovered through data visuals and exploration.
  prefs: []
  type: TYPE_NORMAL
- en: 'This part includes the following chapters:'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 5*](B19500_05.xhtml#_idTextAnchor077), *Discovering Features Using
    Analytics and AI Visuals*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Chapter 6*](B19500_06.xhtml#_idTextAnchor089), *Discovering New Features
    Using R and Python Visuals*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Chapter 7*](B19500_07.xhtml#_idTextAnchor102), *Deploying Data Ingestion
    and Transformation Components to the Power BI Cloud Service*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
