["```py\nfunc addInt(a, b int) int { return a + b }\n```", "```py\nfunc addInt(a int, b int) int { return a + b }\n```", "```py\n z := addInt(1, 2) \n```", "```py\n func divUint(a, b uint) (uint, error) { ... }\n func divUint(a, b uint) (retVal uint, err error) { ... }\n```", "```py\nvar a int\n```", "```py\ns := \"Hello World\"\n```", "```py\n func foo(...) (retVal int) { ... return retVal }\n func main() {\n     something := foo()\n     ...\n }\n```", "```py\n func foo(...) (something int) { ... return something }\n func main() {\n     something := foo()\n     ...\n }\n```", "```py\nvar a int = 1\n```", "```py\nvar a int\na = \"Hello World\"\n```", "```py\n type email string\n```", "```py\n func emailSomeone(address, person string) { ... }\n```", "```py\nvar address, person string\naddress = \"John Smith\"\nperson = \"john@smith.com\"\nemailSomeone(address, person)\n```", "```py\nfunc emailSomeone(address email, person string) {...}\n```", "```py\nvar address email\nvar person string\nperson = \"John Smith\"\naddress = \"john@smith.com\"\nemailSomeone(person, address)\n```", "```py\ntype Record struct {\n     Name string\n     Age int\n }\n```", "```py\n r := Record {\n     Name: \"John Smith\",\n     Age: 20,\n }\n r.Name\n```", "```py\n type email string\n\n func check(a email) { ... }\n func send(a email, msg string) { ... }\n```", "```py\ne := \"john@smith.com\"\ncheck(e)\nsend(e, \"Hello World\")\n```", "```py\ntype email string\n\nfunc (e email) check() { ... }\nfunc (e email) send(msg string) { ... }\n```", "```py\ne := \"john@smith.com\"\ne.check()\ne.send(\"Hello World\")\n```", "```py\nvar a interface {\n     check()\n }\n```", "```py\n type complicatedEmail struct {...}\n\n func (e complicatedEmail) check() {...}\n func (e complicatedEmail) send(a string) {...}\n\n type simpleEmail string\n\n func (e simpleEmail) check() {...}\n func (e simpleEmail) send(a string) {...}\n```", "```py\nfunc doC(a complicatedEmail) {\n     a.check()\n     a.send(\"Hello World\")\n }\n\nfunc doS(a simpleEmail) {\n     a.check()\n     a.send(\"Hello World\")\n }\n```", "```py\nfunc do(a interface{\n     check()\n     send(a string)\n     }) {\n         a.check()\n         a.send(\"Hello World\")\n     }\n```", "```py\ntype checkSender interface{\n     check()\n     send(a string)\n }\n```", "```py\nfunc do(a checkSender) {\n     a.check()\n     a.send(\"Hello World\")\n }\n```", "```py\npackage main\nimport \"PACKAGE LOCATION\"\n```", "```py\ngo get golang.org/x/tools/cmd/goimports\n```"]