- en: '*Chapter 11*: Implementing a Real-Time Scoring Solution'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第11章*：实现实时评分解决方案'
- en: While most **machine learning (ML)** projects involve **batch scoring**, the
    most complex ML projects use **real-time solutions**. Think about models that
    determine whether a credit card transaction is fraudulent, models that decide
    which ads to show online shoppers, and models that decide whether a customer at
    a car dealership is creditworthy or not. These situations all demand a real-time
    scoring solution and it's incredibly important that your model be both fast and
    accurate.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然大多数**机器学习（ML**）项目涉及**批量评分**，但最复杂的ML项目使用**实时解决方案**。想想看，有哪些模型可以确定信用卡交易是否欺诈，有哪些模型可以决定向在线购物者展示哪些广告，以及有哪些模型可以决定汽车经销商的顾客是否有信用。所有这些情况都需要实时评分解决方案，并且确保您的模型既快速又准确至关重要。
- en: Luckily, creating a fast, reliable real-time scoring solution in AutoML is easy
    whether you decide to code it with Python or use the **Azure Machine Learning**
    (**AML**)Studio **graphical user interface** (**GUI**).
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，无论您选择用Python编写代码还是使用**Azure机器学习**（**AML**）工作室**图形用户界面**（**GUI**），在AutoML中创建快速、可靠的实时评分解决方案都很容易。
- en: You will begin this chapter by creating a real-time scoring endpoint through
    the AML studio GUI. **Real-time scoring endpoints** are web services through which
    you can pass data and quickly receive results. Continuing, you will then create
    real-time scoring endpoints through Python code using the AzureML SDK in a Jupyter
    notebook. Lastly, you will learn how to improve the performance of your real-time
    scoring endpoints to better serve your end users.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 您将开始本章，通过AML工作室GUI创建实时评分端点。**实时评分端点**是通过它们传递数据并快速接收结果的Web服务。继续，您将通过Python代码使用AzureML
    SDK在Jupyter笔记本中创建实时评分端点。最后，您将学习如何提高实时评分端点的性能，以更好地服务您的最终用户。
- en: By the end of this chapter, you will have a more complete data science skillset.
    Being able to train models, score models in batch, retrain models on a schedule,
    and score models in real time are all fundamental ML engineering skills that you
    will have in your repertoire. This skillset is in high demand. Moreover, you will
    be able to craft real-time scoring endpoints that you can embed in complex scenarios.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 到本章结束时，您将拥有更完整的数据科学技能集。能够训练模型、批量评分模型、按计划重新训练模型以及实时评分模型都是您将拥有的基本ML工程技能。这种技能集需求很高。此外，您将能够创建可以嵌入复杂场景中的实时评分端点。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Creating real-time endpoints through the UI
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过UI创建实时端点
- en: Creating real-time endpoints through the SDK
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过SDK创建实时端点
- en: Improving performance on your AKS cluster
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提高AKS集群的性能
- en: Technical requirements
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: In this chapter, you will be creating an `Diabetes-AllData-Regression-AutoML`
    that you created in [*Chapter 4*](B16595_04_ePub.xhtml#_idTextAnchor056), *Building
    an AutoML Regression Solution*.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您将创建在[*第4章*](B16595_04_ePub.xhtml#_idTextAnchor056)，*构建AutoML回归解决方案*中创建的`Diabetes-AllData-Regression-AutoML`。
- en: As such, you will need a working internet connection, an **Azure Machine Learning
    Service** (**AMLS**) workspace, and a compute instance. You will also need permission
    to create an AKS cluster. If you are using a personal account, this will not be
    an issue.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，您需要一个有效的互联网连接、一个**Azure机器学习服务**（**AMLS**）工作区和一个计算实例。您还需要有创建AKS集群的权限。如果您使用的是个人账户，这不会成为问题。
- en: 'The following are the prerequisites for the chapter:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是为本章准备的前提条件：
- en: Have access to the internet
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 拥有互联网访问权限
- en: Have a web browser, preferably Google Chrome or Microsoft Edge Chromium
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 拥有一个网络浏览器，最好是Google Chrome或Microsoft Edge Chromium
- en: Have a Microsoft Azure account
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 拥有微软Azure账户
- en: Have created an AMLS workspace
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 已创建一个AMLS工作区
- en: Have created the `compute-cluster` compute cluster in [*Chapter 2*](B16595_02_ePub.xhtml#_idTextAnchor023),
    *Getting Started with Azure Machine Learning Service*
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 已在[*第2章*](B16595_02_ePub.xhtml#_idTextAnchor023)，*Azure机器学习服务入门*中创建了`compute-cluster`计算集群
- en: Understand how to navigate to the Jupyter environment from an Azure compute
    instance as demonstrated in [*Chapter 4*](B16595_04_ePub.xhtml#_idTextAnchor056),
    *Building an AutoML Regression Solution*
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解如何从Azure计算实例导航到Jupyter环境，如[*第4章*](B16595_04_ePub.xhtml#_idTextAnchor056)，*构建AutoML回归解决方案*中所示
- en: Have trained and registered the `Diabetes-AllData-Regression-AutoML` ML model
    in [*Chapter 4*](B16595_04_ePub.xhtml#_idTextAnchor056), *Building an AutoML Regression
    Solution*
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在[*第4章*](B16595_04_ePub.xhtml#_idTextAnchor056)，“构建AutoML回归解决方案”中已训练并注册了`Diabetes-AllData-Regression-AutoML`机器学习模型。
- en: 'The code for this chapter is available here: [https://github.com/PacktPublishing/Automated-Machine-Learning-with-Microsoft-Azure/tree/master/Chapter11](https://github.com/PacktPublishing/Automated-Machine-Learning-with-Microsoft-Azure/tree/master/Chapter11).'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的代码在此处可用：[https://github.com/PacktPublishing/Automated-Machine-Learning-with-Microsoft-Azure/tree/master/Chapter11](https://github.com/PacktPublishing/Automated-Machine-Learning-with-Microsoft-Azure/tree/master/Chapter11)。
- en: Creating real-time endpoints through the UI
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过UI创建实时端点
- en: The crux of any real-time scoring solution is a real-time scoring endpoint,
    a web URL through which you can pass data and immediately retrieve MLpredictions.
    Endpoints are hosted on containerized services that are up and running 24 hours
    a day, 7 days a week, waiting for incoming requests.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 任何实时评分解决方案的核心都是一个实时评分端点，这是一个可以通过它传递数据并立即检索机器学习预测的Web URL。端点托管在全天候运行、每周7天、等待接收请求的容器化服务上。
- en: '**Requests** send data to the endpoint for scoring and can be written in any
    computer language including Python. As soon as a request comes through, your endpoint
    will automatically execute the underlying code and return results.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '**Requests**可以将数据发送到端点进行评分，并且可以用任何计算机语言编写，包括Python。一旦请求通过，你的端点将自动执行底层代码并返回结果。'
- en: You can use these endpoints anywhere; any coding language from C# to Python
    to Java can make use of real-time scoring endpoints. Thus, once you obtain the
    URL that hosts the endpoint, you are free to implement it in any other piece of
    code. Commonly, real-time scoring endpoints are incorporated in streaming jobs,
    web applications, and mobile apps.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在任何地方使用这些端点；从C#到Python到Java的任何编程语言都可以使用实时评分端点。因此，一旦你获得了托管端点的URL，你就可以在任意其他代码中实现它。通常，实时评分端点被集成在流式作业、Web应用程序和移动应用程序中。
- en: 'When using real-time scoring endpoints based on AutoML models, there are a
    few key points to keep in mind that make them quite different from the batch scoring
    pipelines you created in [*Chapter 9*](B16595_09_ePub.xhtml#_idTextAnchor129),
    *Implementing a Batch Scoring Solution*. They are as follows:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用基于AutoML模型的实时评分端点时，有几个关键点需要注意，这些点使它们与你在[*第9章*](B16595_09_ePub.xhtml#_idTextAnchor129)，“实现批量评分解决方案”中创建的批量评分管道有很大不同。具体如下：
- en: First, when passing data into an endpoint that's scoring data using an AutoML-trained
    model, you must pass input data in a JSON format, the most common format for sending
    data through an endpoint. Pandas dataframes or any format other than JSON will
    fail.
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 首先，当将数据传递给使用AutoML训练模型进行评分的端点时，你必须以JSON格式传递输入数据，这是通过端点发送数据的最常见格式。Pandas数据框或除JSON以外的任何格式都会失败。
- en: Second, you do not have to write a Python script for scoring AutoML-trained
    models. Azure AutoML automatically generates one for you. Because of this, the
    data you pass into the endpoint must be in the proper shape needed to score. You
    cannot do data preprocessing within your endpoint itself unless you want to alter
    the underlying scripts generated by AutoML.
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 其次，你不需要为评分AutoML训练模型编写Python脚本。Azure AutoML会自动为你生成一个。因此，你传递给端点的数据必须具有评分所需的正确形状。除非你想更改AutoML生成的底层脚本，否则你无法在端点内部进行数据预处理。
- en: There are two main services that AMLS uses to host endpoints, **Azure Container
    Instances** (**ACI**) and AKS. Both are containerized and use Docker. Both can
    be created either using the GUI within AML studio or using the Python SDK through
    a Jupyter notebook. ACI is lightweight, cheap, and used largely for testing. AKS
    is powerful, expensive, and used for production.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: AMLS使用两个主要服务来托管端点，**Azure容器实例**（**ACI**）和AKS。两者都是容器化的，并使用Docker。它们都可以通过AML studio中的GUI或通过Jupyter笔记本中的Python
    SDK来创建。ACI轻量级、成本低，主要用于测试。AKS功能强大、成本高，用于生产。
- en: Important note
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: A key difference between ACI and AKS is authentication. ACI supports **key-based
    authentication** only whereas AKS supports both key-based and **token-based authentication**.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: ACI和AKS之间的一个关键区别是身份验证。ACI仅支持基于**密钥的认证**，而AKS支持基于密钥和**基于令牌的认证**。
- en: In this section, you will use the AML studio GUI to create an endpoint using
    the `Diabetes-AllData-Regression-AutoML` ML model you built in [*Chapter 4*](B16595_04_ePub.xhtml#_idTextAnchor056),
    *Building an AutoML Regression Solution*, hosted on ACI. Then, you will create
    an **AKS cluster** through the UI; an AKS cluster is a group of **virtual machines**
    (**VMs**) that run 24/7 to host your endpoints. You will wrap up this section
    by creating an endpoint hosted on your AKS cluster.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，您将使用 AML 工作室 GUI 创建一个端点，使用您在 [*第 4 章*](B16595_04_ePub.xhtml#_idTextAnchor056)
    中构建的 `Diabetes-AllData-Regression-AutoML` ML 模型，该模型托管在 ACI 上。然后，您将通过 UI 创建一个**AKS
    集群**；AKS 集群是一组**虚拟机**（VMs），它们全天候运行以托管您的端点。您将通过创建托管在您的 AKS 集群上的端点来结束本节。
- en: Overall, the goal of this section is to introduce you to endpoints and show
    how you can easily create them with AutoML trained models in just a few clicks.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 总体而言，本节的目标是向您介绍端点，并展示您如何通过 AutoML 训练模型在几秒钟内轻松创建它们。
- en: Creating an ACI-hosted endpoint through the UI
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 通过用户界面创建 ACI 托管的端点
- en: 'First, create an Azure container instance using the AI using the following
    steps:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，使用以下步骤创建一个使用 AI 的 Azure 容器实例：
- en: Open up your AML studio by navigating to [https://ml.azure.com/.](https://ml.azure.com/.)
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过导航到 [https://ml.azure.com/](https://ml.azure.com/) 打开您的 AML 工作室。
- en: Click on **Models** on the left-hand panel under **Assets**.
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击左侧面板下**资产**中的**模型**。
- en: You will see a list of all of the ML models you have trained on this AMLS workspace.
    Click the blue link to `Diabetes-AllData-Regression-AutoML`.
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您将看到在 AMLS 工作空间中训练的所有 ML 模型的列表。点击 `Diabetes-AllData-Regression-AutoML` 的蓝色链接。
- en: Click the blue link under `AutoML_` followed by a GUID, a unique string of characters.
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 `AutoML_` 下的蓝色链接，后面跟着一个唯一字符的字符串（GUID）。
- en: Click **Deploy** near the top of your screen.
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击屏幕顶部的**部署**。
- en: Give your endpoint the name `diabetes-aci-gui`. Endpoint names may only consist
    of lowercase letters, numbers, and dashes.
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 给您的端点命名为 `diabetes-aci-gui`。端点名称只能由小写字母、数字和破折号组成。
- en: Select **Azure Container Instance** for **Compute type**.
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**Azure 容器实例**作为**计算类型**。
- en: After confirming that your settings match the following screenshot, click **Deploy**:![Figure
    11.1 – ACI settings ](img/Figure_11.1_B16595.jpg)
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确认您的设置与以下截图匹配后，点击**部署**：![图 11.1 – ACI 设置](img/Figure_11.1_B16595.jpg)
- en: Figure 11.1 – ACI settings
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.1 – ACI 设置
- en: Your model will take a few minutes to deploy. After waiting a sufficient amount
    of time, click **Endpoints** on the left-hand panel under **Assets**.
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您的模型需要几分钟才能部署。等待足够的时间后，点击左侧面板下**资产**中的**端点**。
- en: Important note
  id: totrans-45
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 重要提示
- en: The first time you create an endpoint in either ACI or AKS, AMLS will create
    a container registry to host them. Do not, under any circumstances, delete this
    registry as you will be unable to deploy endpoints from that point on.
  id: totrans-46
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 第一次在 ACI 或 AKS 中创建端点时，AMLS 将创建一个容器注册表来托管它们。在任何情况下都不要删除此注册表，因为从那时起您将无法部署端点。
- en: Click the blue link to `diabetes-aci-gui`.
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 `diabetes-aci-gui` 的蓝色链接。
- en: Click **Consume** near the top of your screen.
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击屏幕顶部的**消费**按钮。
- en: Copy the `REST` endpoint URL into a text editor such as Notepad. Notice that
    there is also code to use the model in C#, Python, and R. You have now created
    a functioning scoring endpoint hosted on ACI.
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 `REST` 端点 URL 复制到文本编辑器，如记事本。请注意，这里还有用于 C#、Python 和 R 中使用模型的代码。您现在已创建了一个在 ACI
    上托管的运行得分端点。
- en: With an ACI built, you now have a working endpoint that you can use to score
    new data. ACI is great for testing purposes, but to create a production-ready
    solution, you need AKS.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在构建了 ACI 之后，您现在有一个可以用来评估新数据的运行端点。ACI 对于测试目的来说很棒，但为了创建一个生产就绪的解决方案，您需要 AKS。
- en: Creating an AKS cluster through the UI
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 通过用户界面创建 AKS 集群
- en: 'Before you can host an endpoint on AKS, you first need to build an AKS cluster.
    Follow these steps to create one using the GUI:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在您可以在 AKS 上托管端点之前，您首先需要构建一个 AKS 集群。按照以下步骤使用 GUI 创建一个：
- en: Click **Compute** on the left-hand panel under **Manage**.
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**管理**下的左侧面板中点击**计算**。
- en: Click **Inference clusters** near the top of your screen.
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击屏幕顶部的**推理集群**。
- en: Click **Create**.
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**创建**。
- en: Select **North Central US** for **Location** or whatever Azure location your
    AMLS workspace is located in.
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**中北部美国**作为**位置**或您的 AMLS 工作空间所在的任何 Azure 位置。
- en: Use the search box on the right-hand side to search for `Standard_DS3_v2`.
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用右侧的搜索框搜索 `Standard_DS3_v2`。
- en: Select `Standard_DS3_v2` for your VM and click **Next**.
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择 `Standard_DS3_v2` 作为您的虚拟机并点击**下一步**。
- en: Give your AKS cluster a name. Call it `aks-amls-cluster`. It can only be 16
    characters long.
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 给你的AKS集群起一个名字。可以叫`aks-amls-cluster`。它的长度只能为16个字符。
- en: Select **Dev/test** for **Cluster purpose**.
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**开发/测试**作为**集群用途**。
- en: Set `3`.
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置`3`。
- en: Important note
  id: totrans-62
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 重要提示
- en: When creating an AKS cluster, ensure that the number of cores on your VM type
    multiplied by the number of nodes is equal to or greater than 12\. `Standard_DS3_v2`
    VMs have 4 cores each, thus we set the number of nodes to `4`. This is a minimum
    requirement.
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在创建AKS集群时，确保你的VM类型的核心数乘以节点数等于或大于12。`Standard_DS3_v2` VM每个有4个核心，因此我们将节点数设置为`4`。这是一个最小要求。
- en: Once you compare your settings to the following screenshot and ensure they match,
    click **Create**:![Figure 11.2 – AKS cluster settings ](img/Figure_11.2_B16595.jpg)
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦将你的设置与以下截图进行比较并确保它们匹配，点击**创建**：![图11.2 – AKS集群设置](img/Figure_11.2_B16595.jpg)
- en: Figure 11.2 – AKS cluster settings
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.2 – AKS集群设置
- en: You have now successfully created an AKS cluster. You can use this cluster to
    host a large number of ML models. While ACI is suitable only for running models
    up to 1 GB in size, you can use AKS clusters to host much larger models. Next,
    you will create an endpoint on this cluster.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已成功创建了一个AKS集群。你可以使用这个集群来托管大量的ML模型。虽然ACI只适合运行大小不超过1 GB的模型，但你可以使用AKS集群来托管更大的模型。接下来，你将在该集群上创建一个端点。
- en: Creating an AKS-hosted endpoint through the UI
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 通过UI创建AKS托管端点
- en: 'In order to create a real-time scoring endpoint hosted on AKS, you need to
    follow nearly the exact same steps that you used to create one hosted on ACI.
    Begin with the following:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 为了创建一个托管在AKS上的实时评分端点，你需要遵循几乎与创建一个托管在ACI上的端点相同的步骤。首先，从以下步骤开始：
- en: Open up your AML studio by navigating to [https://ml.azure.com/](https://ml.azure.com/).
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过导航到[https://ml.azure.com/](https://ml.azure.com/)打开你的AML工作室。
- en: Click on **Models** on the left-hand panel under **Assets**.
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**资产**下左侧面板中的**模型**。
- en: You will see a list of all of the ML models you have trained on this AMLS workspace.
    Click the blue link to open `Diabetes-AllData-Regression-AutoML`.
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你将看到在这个AML工作空间中你训练的所有ML模型的列表。点击蓝色的链接打开`Diabetes-AllData-Regression-AutoML`。
- en: Click the blue link under `AutoML_` followed by a GUID, a unique string of characters.
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击`AutoML_`下的蓝色链接，后面跟着一个GUID，一个独特的字符字符串。
- en: Click **Deploy** near the top of your screen.
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击屏幕顶部的**部署**。
- en: Give your endpoint the name `diabetes-aks-gui`. Endpoint names may only consist
    of lowercase letters, numbers, and dashes.
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 给你的端点命名为`diabetes-aks-gui`。端点名称只能由小写字母、数字和破折号组成。
- en: Select **Azure Kubernetes Service** for **Compute type**.
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**Azure Kubernetes Service**作为**计算类型**。
- en: Switch **Enable Authentication** on.
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开**启用身份验证**开关。
- en: Select **Key-based authentication** for **Type**.
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**基于密钥的身份验证**作为**类型**。
- en: After confirming that your settings match with the following screenshot, click
    **Deploy**:![Figure 11.3 – AKS settings ](img/Figure_11.3_B16595.jpg)
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在确认你的设置与以下截图匹配后，点击**部署**：![图11.3 – AKS设置](img/Figure_11.3_B16595.jpg)
- en: Figure 11.3 – AKS settings
  id: totrans-79
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图11.3 – AKS设置
- en: Your model will take a few minutes to deploy, the same as your ACI-hosted model.
    Once it's ready, click **Endpoints** on the left-hand panel under **Assets**.
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你的模型将需要几分钟的时间来部署，与你的ACI托管模型相同。一旦准备就绪，点击**资产**下左侧面板中的**端点**。
- en: Click the blue link to open `diabetes-aks-gui`.
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击蓝色的链接打开`diabetes-aks-gui`。
- en: Click **Consume** near the top of your screen.
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击屏幕顶部的**消费**。
- en: Copy the `REST` endpoint URL into a text editor such as Notepad. Also, copy
    one of the keys. You can use either the primary key or the secondary key. Either
    will work for authentication.
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`REST`端点URL复制到文本编辑器，如记事本。同时，复制一个密钥。你可以使用主密钥或辅助密钥。任一密钥都可以用于身份验证。
- en: Via this section, you have now created two real-time scoring endpoints, one
    hosted in ACI and the other in AKS. You have also created an AKS cluster to host
    your endpoints and assigned key-based authentication to secure your AKS-hosted
    endpoint. Through AML studio, by clicking **Consume**, you can also easily find
    code to deploy your endpoint in C#, Python, and R.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 通过本节，你现在已创建了两个实时评分端点，一个托管在ACI中，另一个托管在AKS中。你还有一个AKS集群来托管你的端点，并已将基于密钥的身份验证分配给你的AKS托管端点。通过AML工作室，通过点击**消费**，你也可以轻松找到用于在C#、Python和R中部署你的端点的代码。
- en: In the next section, you will do the same thing with code. Additionally, you
    will also test your endpoints to see how they work.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节，你将使用代码做同样的事情。此外，你还将测试你的端点以查看它们的工作情况。
- en: Creating real-time endpoints through the SDK
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过SDK创建实时端点
- en: One-click deployment through AML studio is really easy, but most organizations
    will require you to develop your solutions via code. Luckily, creating real-time
    scoring endpoints for AutoML models via the AzureML Python SDK is almost as easy
    as creating them through the UI. Furthermore, you'll gain a deeper understanding
    of how your endpoints work and how to format your JSON testing to pass data into
    the endpoint as a request.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 通过 AML Studio 的一键部署非常简单，但大多数组织将要求你通过代码开发你的解决方案。幸运的是，通过 AzureML Python SDK 创建
    AutoML 模型的实时评分端点几乎和通过 UI 创建它们一样简单。此外，你将更深入地了解你的端点是如何工作的，以及如何格式化你的 JSON 测试，以便将数据作为请求传递到端点。
- en: In this section, you'll begin by entering your Jupyter environment and creating
    a new notebook. First, you will deploy your `Diabetes-AllData-Regression-AutoML`
    model via ACI, test it, and, once you've confirmed that your test is a success,
    create a new AKS cluster via code and deploy it there. You will conclude this
    section by testing your AKS deployment and confirm that everything works as expected.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，你将首先进入你的 Jupyter 环境，创建一个新的笔记本。首先，你将通过 ACI 部署你的 `Diabetes-AllData-Regression-AutoML`
    模型，对其进行测试，一旦你确认测试成功，就通过代码创建一个新的 AKS 集群并将其部署在那里。你将通过测试你的 AKS 部署来结束本节，并确认一切按预期工作。
- en: The goal of this section is to further your understanding of real-time scoring
    endpoints, teach you how to create everything in code, and enable you to craft
    and test complex real-time solutions.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 本节的目标是进一步加深你对实时评分端点的理解，教你如何通过代码创建一切，并使你能够构建和测试复杂的实时解决方案。
- en: Creating and testing a real-time endpoint with ACI through Python
  id: totrans-90
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 Python 通过 ACI 创建和测试实时端点
- en: Anytime you intend to deploy a ML model in real time, you should begin by deploying
    your model to ACI and testing it. This way, you can get an idea of how your data
    needs to be formatted, how long your endpoint will take to respond with a score,
    and whether your model works. Begin by creating an endpoint.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 每次你打算实时部署一个 ML 模型时，你应该首先将你的模型部署到 ACI 并对其进行测试。这样，你可以了解你的数据需要如何格式化，你的端点需要多长时间才能响应评分，以及你的模型是否正常工作。首先创建一个端点。
- en: Creating a real-time scoring endpoint hosted on ACI
  id: totrans-92
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在 ACI 上创建一个实时评分端点
- en: 'Much like previous chapters, you first need to open a Jupyter notebook on your
    compute instance. Then, build a real-time scoring endpoint with the following
    steps:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 和前面的章节一样，你首先需要在你的计算实例上打开一个 Jupyter 笔记本。然后，按照以下步骤构建一个实时评分端点：
- en: Open up your AML studio by navigating to [https://ml.azure.com/](https://ml.azure.com/).
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过导航到 [https://ml.azure.com/](https://ml.azure.com/) 打开你的 AML Studio。
- en: Click **Compute**, start up a compute instance, and open a Jupyter environment.
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **Compute**，启动一个计算实例，并打开一个 Jupyter 环境。
- en: Create a new Jupyter notebook and name it `real-time-endpoints`. If you need
    a refresher, please review [*Chapter 4*](B16595_04_ePub.xhtml#_idTextAnchor056),
    *Building an AutoML Regression Solution*.
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新的 Jupyter 笔记本，并将其命名为 `real-time-endpoints`。如果你需要复习，请查阅 [*第 4 章*](B16595_04_ePub.xhtml#_idTextAnchor056)，*构建
    AutoML 回归解决方案*。
- en: 'Import your standard Azure libraries with the following code:'
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码导入你的标准 Azure 库：
- en: '[PRE0]'
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: All of these packages should be familiar to you by now except `AksCompute`.
    If you need a refresher, consult [*Chapter 4*](B16595_04_ePub.xhtml#_idTextAnchor056),
    *Building an AutoML Regression Solution*, for `Workspace`, `Dataset`, `Datastore`,
    `Experiment`, and `ComputeTarget`, and [*Chapter 9*](B16595_09_ePub.xhtml#_idTextAnchor129),
    *Implementing a Batch Scoring Solution*, for `Environment` and `Model`. `AksCompute`
    allows you to create an AKS cluster via code.
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 所有这些包你现在都应该很熟悉，除了 `AksCompute`。如果你需要复习，请查阅 [*第 4 章*](B16595_04_ePub.xhtml#_idTextAnchor056)，*构建
    AutoML 回归解决方案*，关于 `Workspace`、`Dataset`、`Datastore`、`Experiment` 和 `ComputeTarget`，以及
    [*第 9 章*](B16595_09_ePub.xhtml#_idTextAnchor129)，*实现批量评分解决方案*，关于 `Environment`
    和 `Model`。`AksCompute` 允许你通过代码创建一个 AKS 集群。
- en: 'Import your Azure libraries specific to creating an endpoint with ACI with
    the following code:'
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码导入你用于创建 ACI 端点的 Azure 库：
- en: '[PRE1]'
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '`InferenceConfig` lets you specify the Python script and environment you will
    use to create your endpoint deployment. This package is used with both AKS and
    ACI-based deployments.'
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`InferenceConfig` 允许你指定你将用于创建端点部署的 Python 脚本和环境。这个包与基于 AKS 和 ACI 的部署一起使用。'
- en: '`AciWebservice` is what you use to actually create endpoints deployed on ACI
    and `AksWebservice` is what you use to create endpoints deployed on AKS. `AutoMLRun`
    will let you access previous AutoML training runs. You will need to recover the
    Python script created when you trained your model.'
  id: totrans-103
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`AciWebservice`是您用于在ACI上创建端点的方式，而`AksWebservice`是您用于在AKS上创建端点的方式。`AutoMLRun`将允许您访问之前的AutoML训练运行。您将需要恢复在训练模型时创建的Python脚本。'
- en: Important tip
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 重要提示
- en: 'If you are having trouble loading Azure libraries, update the AzureML SDK by
    running the `Update AzureML SDK.ipynb` notebook, found here: [https://github.com/PacktPublishing/Automated-Machine-Learning-with-Microsoft-Azure/blob/master/Update-AzureML-SDK.ipynb](https://github.com/PacktPublishing/Automated-Machine-Learning-with-Microsoft-Azure/blob/master/Update-AzureML-SDK.ipynb).'
  id: totrans-105
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果您在加载Azure库时遇到问题，请通过运行位于此处的`Update AzureML SDK.ipynb`笔记本来更新AzureML SDK：[https://github.com/PacktPublishing/Automated-Machine-Learning-with-Microsoft-Azure/blob/master/Update-AzureML-SDK.ipynb](https://github.com/PacktPublishing/Automated-Machine-Learning-with-Microsoft-Azure/blob/master/Update-AzureML-SDK.ipynb)。
- en: 'Import the non-Azure libraries with the following code:'
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码导入非Azure库：
- en: '[PRE2]'
  id: totrans-107
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: You are already familiar with `pandas`, `numpy`, `os`, and `random`. If you
    need a refresher, please consult [*Chapter 4*](B16595_04_ePub.xhtml#_idTextAnchor056),
    *Building an AutoML Regression Solution*, or [*Chapter 9*](B16595_09_ePub.xhtml#_idTextAnchor129),
    *Implementing a Batch Scoring Solution*, for `os` and `random`.
  id: totrans-108
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您已经熟悉`pandas`、`numpy`、`os`和`random`。如果您需要复习，请参阅[*第4章*](B16595_04_ePub.xhtml#_idTextAnchor056)，*构建AutoML回归解决方案*，或[*第9章*](B16595_09_ePub.xhtml#_idTextAnchor129)，*实现批量评分解决方案*，以了解`os`和`random`。
- en: Onto the new packages, `requests` lets you make web requests to your deployed
    endpoints. This package will let you test your deployment and score data using
    your endpoint, while `json` lets you transform your data into the JSON format
    used by web requests.
  id: totrans-109
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在新包中，`requests`允许您向您的部署端点发送网络请求。此包将允许您测试您的部署并使用端点评分数据，而`json`允许您将数据转换为网络请求使用的JSON格式。
- en: 'Connect your Jupyter notebook to your AMLS workspace with the following code:'
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码将您的Jupyter笔记本连接到您的AMLS工作区：
- en: '[PRE3]'
  id: totrans-111
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: If you are prompted to log in, follow the instructions.
  id: totrans-112
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果提示您登录，请按照指示操作。
- en: 'Set your datastore to the default with the first line of code. If you want
    to use a different datastore, use the second and third lines of code instead,
    replacing `workspaceblobstore`:'
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码的第一行将您的数据存储设置为默认值。如果您想使用不同的数据存储，请使用第二行和第三行代码代替，替换`workspaceblobstore`：
- en: '[PRE4]'
  id: totrans-114
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Set your compute cluster to the one you created in [*Chapter 2*](B16595_02_ePub.xhtml#_idTextAnchor023),
    *Getting Started with Azure Machine Learning Service*, with the following code:'
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码将您的计算集群设置为在[*第2章*](B16595_02_ePub.xhtml#_idTextAnchor023)，*Azure机器学习服务入门*中创建的集群：
- en: '[PRE5]'
  id: totrans-116
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Set your environment to `AzureML-AutoML` with the following code:'
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码将您的环境设置为`AzureML-AutoML`：
- en: '[PRE6]'
  id: totrans-118
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '`AzureML-AutoML` is a standard environment that comes with the AzureML SDK.
    You can use this environment for any real-time AutoML deployment.'
  id: totrans-119
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`AzureML-AutoML`是随AzureML SDK一起提供的标准环境。您可以使用此环境进行任何实时AutoML部署。'
- en: Tip
  id: totrans-120
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 提示
- en: There are many different standard environments that come with the AzureML SDK.
    You can access a list of them by using the `Environment.list` function.
  id: totrans-121
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: AzureML SDK附带了许多不同的标准环境。您可以通过使用`Environment.list`函数访问它们的列表。
- en: 'Set your `Diabetes-AllData-Regression-AutoML` model with the following code:'
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码设置您的`Diabetes-AllData-Regression-AutoML`模型：
- en: '[PRE7]'
  id: totrans-123
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: This is the model you will deploy to an endpoint to score diabetes data in real
    time.
  id: totrans-124
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这是您将部署到端点以实时评分糖尿病数据的模型。
- en: Navigate to your AML studio and click **Models** on the left-hand panel. You
    need to retrieve the experiment and run the ID associated with your model.
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到您的AML工作室，在左侧面板上单击**模型**。您需要检索与您的模型关联的实验和运行ID。
- en: Click the blue link to open `Diabetes-AllData-Regression-AutoML`.
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击蓝色链接打开`Diabetes-AllData-Regression-AutoML`。
- en: Copy `Diabetes-Sample-Regression` if you followed the instructions word for
    word in [*Chapter 4*](B16595_04_ePub.xhtml#_idTextAnchor056), *Building an AutoML
    Regression Solution*.
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您在[*第4章*](B16595_04_ePub.xhtml#_idTextAnchor056)，*构建AutoML回归解决方案*中逐字逐句遵循了指示，请复制`Diabetes-Sample-Regression`。
- en: 'Set your experiment and run ID with the following code:'
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码设置您的实验和运行ID：
- en: '[PRE8]'
  id: totrans-129
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Retrieve your AutoML run with the following code:'
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码检索您的AutoML运行：
- en: '[PRE9]'
  id: totrans-131
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: The reason you are retrieving your old run is so you can pull the Python script
    out of it that was used to deploy the models. This is the same script that was
    used to deploy your models using the GUI.
  id: totrans-132
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你检索旧运行的原因是为了从中提取用于部署模型的 Python 脚本。这是用于通过 GUI 部署你的模型的相同脚本。
- en: Important tip
  id: totrans-133
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 重要提示
- en: You can always retrieve old model runs using this code. This is important if
    you forgot to register models. You can similarly retrieve old ML pipeline runs.
  id: totrans-134
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你可以使用此代码始终检索旧模型运行。如果你忘记注册模型，这很重要。你可以类似地检索旧的 ML 管道运行。
- en: 'Extract the best model fitted by AutoML with the following code:'
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码提取由 AutoML 最佳拟合的模型：
- en: '[PRE10]'
  id: totrans-136
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: This code retrieves two objects, the best run as well as the model. You will
    only use the best run, but `get_output()` requires you to pass two objects or
    the function will return an error.
  id: totrans-137
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此代码检索两个对象，最佳运行以及模型。你将只使用最佳运行，但 `get_output()` 需要你传递两个对象，否则函数将返回错误。
- en: 'Make a folder to hold all of your real-time scripts with the following code:'
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码创建一个文件夹来保存所有你的实时脚本：
- en: '[PRE11]'
  id: totrans-139
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Retrieve the Python script you will use for scoring data in real time with
    the following code:'
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码检索你将用于实时评分数据的 Python 脚本：
- en: '[PRE12]'
  id: totrans-141
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: When AutoML trains a model, it outputs a scoring file for real-time inferencing.
    This file is always called `scoring_file_v_1_0_0.py` and is located in the `outputs`
    folder. This code grabs that file and saves it as `Diabetes_Inference.py`.
  id: totrans-142
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当 AutoML 训练模型时，它会输出一个用于实时推理的评分文件。此文件始终称为 `scoring_file_v_1_0_0.py`，位于 `outputs`
    文件夹中。此代码获取该文件并将其保存为 `Diabetes_Inference.py`。
- en: 'Set a variable to name your ACI deployment:'
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置一个变量来命名你的 ACI 部署：
- en: '[PRE13]'
  id: totrans-144
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Configure your endpoint to use your Python script and `Azure-AutoML` environment
    with the following code:'
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码配置端点以使用你的 Python 脚本和 `Azure-AutoML` 环境：
- en: '[PRE14]'
  id: totrans-146
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Configure your ACI deployment with the following code:'
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码配置你的 ACI 部署：
- en: '[PRE15]'
  id: totrans-148
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Notice you need to set the number of cores to use for the deployment as well
    as the amount of memory to reserve. You can also set tags and add a description.
  id: totrans-149
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意你需要设置用于部署的核心数以及要保留的内存量。你还可以设置标签并添加描述。
- en: 'Create your ACI endpoint with the following code:'
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码创建你的 ACI 端点：
- en: '[PRE16]'
  id: totrans-151
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: This code requires you to pass your AMLS workspace, the name of your ACI deployment,
    your ML model, your endpoint (inference) configuration, your ACI configuration,
    and to set an `overwrite` flag to `True` or `False`. Your endpoint should take
    between 5 and 10 minutes to deploy.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 此代码要求你传递你的 AMLS 工作空间、你的 ACI 部署名称、你的 ML 模型、你的端点（推理）配置、你的 ACI 配置，并将 `overwrite`
    标志设置为 `True` 或 `False`。你的端点部署应花费 5 到 10 分钟。
- en: Testing your real-time scoring endpoint
  id: totrans-153
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 测试你的实时评分端点
- en: 'Now that you have created a real-time scoring endpoint on ACI, it''s time to
    test it. First, you''ll need to create some data to test it with, then you need
    to convert it to JSON and pass it into the endpoint with the following steps:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经在 ACI 上创建了一个实时评分端点，是时候测试它了。首先，你需要创建一些数据来测试它，然后你需要将其转换为 JSON 并按照以下步骤将其传递到端点：
- en: 'To create some random `Diabetes` data, first, create a range of possible values
    for each variable using the minimum and maximum values from the `Diabetes` sample
    dataset you created in [*Chapter 2*](B16595_02_ePub.xhtml#_idTextAnchor023), *Getting
    Started with Azure Machine Learning Service*, with the following code:'
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要创建一些随机的 `Diabetes` 数据，首先，使用你在 [*第 2 章*](B16595_02_ePub.xhtml#_idTextAnchor023)，*Azure
    Machine Learning Service 入门* 中创建的 `Diabetes` 样本数据集的最小值和最大值来为每个变量创建一个可能的值范围，使用以下代码：
- en: '[PRE17]'
  id: totrans-156
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Create an empty list to help generate the sample data. This is similar to the
    method you used to create sample `Iris` data in [*Chapter 9*](B16595_09_ePub.xhtml#_idTextAnchor129),
    *Implementing a Batch Scoring Solution*. Also, create an empty pandas dataframe
    and assign columns to it with the following code:'
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个空列表以帮助生成样本数据。这与你在 [*第 9 章*](B16595_09_ePub.xhtml#_idTextAnchor129)，*实现批量评分解决方案*
    中创建样本 `Iris` 数据的方法类似。此外，创建一个空的 pandas dataframe 并使用以下代码将其列分配给它：
- en: '[PRE18]'
  id: totrans-158
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Use the following code to create sample diabetes data using a `for` loop:'
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码使用 `for` 循环创建示例糖尿病数据：
- en: '[PRE19]'
  id: totrans-160
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: This code is identical to the code you used to create `Iris` data. Please refer
    to [*Chapter 9*](B16595_09_ePub.xhtml#_idTextAnchor129), *Implementing a Batch
    Scoring Solution*, for a detailed explanation.
  id: totrans-161
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此代码与用于创建 `Iris` 数据的代码相同。请参阅 [*第 9 章*](B16595_09_ePub.xhtml#_idTextAnchor129)，*实现批量评分解决方案*，以获取详细说明。
- en: 'Register your sample data with the name `Diabetes Scoring` with the following
    code:'
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码将你的样本数据注册为名为 `Diabetes Scoring`：
- en: '[PRE20]'
  id: totrans-163
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: This will write the underlying data to your default datastore and register it
    as a dataset called `Diabetes Scoring`.
  id: totrans-164
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这将把底层数据写入你的默认数据存储，并注册为名为 `Diabetes Scoring` 的数据集。
- en: 'Convert `DiabetesDF` into a JSON object beginning with `{"data":` and ending
    with `}`. Every AutoML real-time deployment requires data in this format:'
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 `DiabetesDF` 转换为以 `{"data":` 开头和 `}` 结尾的 JSON 对象。每个 AutoML 真实时部署都需要以这种格式的数据：
- en: '[PRE21]'
  id: totrans-166
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Important tip
  id: totrans-167
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 重要提示
- en: When creating a JSON file, always set `orient` to `records`. Any other JSON
    format risks errors.
  id: totrans-168
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在创建 JSON 文件时，始终将 `orient` 设置为 `records`。任何其他 JSON 格式都可能导致错误。
- en: 'View your data to understand what your incoming data should look like:'
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查看你的数据以了解你的传入数据应该是什么样子：
- en: '[PRE22]'
  id: totrans-170
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Your data should resemble *Figure 11.4*, although the values will be different
    based on your data. The key point is that the JSON values need to be in a key-value
    pair to guarantee a correct prediction:'
  id: totrans-171
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你的数据应该类似于 *图 11.4*，尽管值将根据你的数据而有所不同。关键点是 JSON 值需要以键值对的形式存在，以确保正确的预测：
- en: '![Figure 11.4 – JSON format ](img/Figure_11.4_B16595.jpg)'
  id: totrans-172
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 11.4 – JSON 格式](img/Figure_11.4_B16595.jpg)'
- en: Figure 11.4 – JSON format
  id: totrans-173
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.4 – JSON 格式
- en: Navigate to your AML studio front page and click **Endpoints**.
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到你的 AML 工作室首页并点击 **端点**。
- en: Click the blue link to `diabetes-scoring-aci` and click **Consume**. Copy the
    URL that links to your endpoint and paste it in a text editor such as Notepad.
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击蓝色链接到 `diabetes-scoring-aci` 并点击 **消费**。复制链接到你的端点的 URL 并将其粘贴到文本编辑器，如记事本。
- en: 'Going back to your code, set the URL and headers as variables:'
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 返回到你的代码，将 URL 和头信息设置为变量：
- en: '[PRE23]'
  id: totrans-177
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: While you need to enter your URL, the headers will be the same for every deployment.
  id: totrans-178
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 虽然你需要输入你的 URL，但头信息对于每次部署都是相同的。
- en: 'Test your ACI deployment with the following code:'
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码测试你的 ACI 部署：
- en: '[PRE24]'
  id: totrans-180
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: You have now coded a real-time scoring endpoint hosted on ACI and have successfully
    tested it. Additionally, you understand how your data needs to be shaped and formatted
    in JSON in order to be scored. Once you have confirmed that your real-time endpoint
    is working in ACI, the next step is to create an AKS cluster and deploy the production
    version there as you will do next.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在已经通过代码创建了一个在 ACI 上托管的真实时评分端点，并且已经成功测试了它。此外，你还了解你的数据需要以 JSON 格式进行塑形和格式化，以便进行评分。一旦你确认你的实时端点在
    ACI 中工作正常，下一步就是创建一个 AKS 集群，并将生产版本部署在那里，就像你接下来要做的那样。
- en: Creating an AKS cluster through Python
  id: totrans-182
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 通过 Python 创建 AKS 集群
- en: 'Creating an AKS cluster through code is just as easy and straightforward as
    creating it through the GUI. Many organizations require all infrastructure to
    be created as code, and you can use the following steps as a template:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 通过代码创建 AKS 集群与通过 GUI 创建一样简单直接。许多组织要求所有基础设施都通过代码创建，你可以使用以下步骤作为模板：
- en: 'Continuing in your Jupyter notebook, set variables for your VM size, the number
    of nodes required, your AKS cluster location, and your AKS cluster name:'
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你的 Jupyter 笔记本中继续操作，为你的虚拟机大小、所需节点数量、AKS 集群位置和 AKS 集群名称设置变量：
- en: '[PRE25]'
  id: totrans-185
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Set your AKS cluster configurations with the following code:'
  id: totrans-186
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码设置你的 AKS 集群配置：
- en: '[PRE26]'
  id: totrans-187
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: When setting your configurations, keep in mind that your node count multiplied
    by the number of cores on each VM must be greater than or equal to 12\. Also,
    think about where the incoming data will be coming from when setting your Azure
    location.
  id: totrans-188
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在设置配置时，请记住，你的节点数乘以每个虚拟机上的核心数必须大于或等于 12。同时，在设置 Azure 位置时，考虑数据将从哪里传入。
- en: 'Create your AKS cluster with the following code:'
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码创建你的 AKS 集群：
- en: '[PRE27]'
  id: totrans-190
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: You have to pass in your AMLS workspace, AKS cluster name, and AKS cluster provisioning
    configurations. It should take about 5-10 minutes to spin up your cluster.
  id: totrans-191
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你必须传入你的 AMLS 工作区、AKS 集群名称和 AKS 集群配置。启动你的集群大约需要 5-10 分钟。
- en: You have just created an AKS cluster via code. Once it is up and running, you
    can deploy your scoring endpoint to your AKS cluster and test it using many of
    the same variables you have already created. For this reason, it's recommended
    that you create both the ACI and AKS endpoint in the same Jupyter notebook. It
    will save you a lot of work copying over code.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 你已经通过代码创建了一个 AKS 集群。一旦它启动并运行，你就可以将评分端点部署到你的 AKS 集群，并使用你已创建的许多相同变量进行测试。因此，建议你在同一个
    Jupyter 笔记本中创建 ACI 和 AKS 端点。这将节省你大量复制代码的工作。
- en: Creating and testing a real-time endpoint with AKS through Python
  id: totrans-193
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 通过 Python 使用 AKS 创建和测试实时端点
- en: Your last task in this section is to deploy your real-time scoring endpoint
    to your AKS cluster, grab the URL and access key, and test your deployment. There
    are only a few steps, as you have already created most of the code when deploying
    to ACI.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 您在本节中的最后一个任务是部署您的实时评分端点到 AKS 集群，获取 URL 和访问密钥，并测试您的部署。只有几个步骤，因为您在部署到 ACI 时已经创建了大部分代码。
- en: 'At the end of this chapter, remember to delete your AKS endpoints and cluster
    as they can be quite expensive and rack up a bill. Within the same Jupyter notebook,
    continue with the following steps:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章结束时，请记住删除您的 AKS 端点和集群，因为它们可能相当昂贵，并可能产生账单。在同一个 Jupyter 笔记本中，继续以下步骤：
- en: 'Set your target AKS cluster with the following code:'
  id: totrans-196
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码设置您的目标 AKS 集群：
- en: '[PRE28]'
  id: totrans-197
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Set a variable for the name of your AKS deployment:'
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为您的 AKS 部署设置一个变量名：
- en: '[PRE29]'
  id: totrans-199
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Configure your AKS deployment with the following code:'
  id: totrans-200
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码配置您的 AKS 部署：
- en: '[PRE30]'
  id: totrans-201
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: Notice that these configurations are identical to those used for your ACI deployment.
  id: totrans-202
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意，这些配置与您用于 ACI 部署的配置相同。
- en: 'Create your AKS endpoint with the following code:'
  id: totrans-203
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码创建您的 AKS 端点：
- en: '[PRE31]'
  id: totrans-204
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: Notice that this code is nearly identical to the code you used to create the
    ACI deployment; the one difference is that you also must pass in the AKS cluster.
    This is because AKS is hosted on a cluster of VMs that you manage, whereas ACI
    is a serverless container service.
  id: totrans-205
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意，此代码几乎与您用于创建 ACI 部署的代码相同；唯一的区别是您还必须传入 AKS 集群。这是因为 AKS 是托管在您管理的 VM 集群上，而 ACI
    是一个无服务器容器服务。
- en: Navigate to your AML studio front page and click **Endpoints**.
  id: totrans-206
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到您的 AML 工作室首页并点击 **端点**。
- en: Click the blue link to open `diabetes-scoring-aks` and click **Consume**. Copy
    the URL that links to your endpoint and paste it in a text editor such as Notepad.
    Do the same thing for your access key, using either the primary or secondary key.
    Either will work.
  id: totrans-207
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击蓝色链接打开 `diabetes-scoring-aks` 并点击 **消费**。复制链接到您的端点的 URL 并将其粘贴到文本编辑器（如记事本）中。同样，对于访问密钥，您可以使用主密钥或辅助密钥，任选其一。两者都适用。
- en: 'Going back to your code, set your URL, key, and headers as variables:'
  id: totrans-208
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 回到您的代码，将您的 URL、密钥和头信息设置为变量：
- en: '[PRE32]'
  id: totrans-209
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: Here, you need to add in one additional header for authorization. **Bearer functions**
    work by granting access to anyone who provides the correct key.
  id: totrans-210
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在这里，您需要添加一个额外的头信息用于授权。**Bearer 函数**通过授予提供正确密钥的任何人访问权限来工作。
- en: Important tip
  id: totrans-211
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 重要提示
- en: In a production setting, make sure you store all of your keys in **Azure Key
    Vault** and do not expose your passwords and keys in open code. This is a best
    practice that will protect you.
  id: totrans-212
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在生产环境中，请确保将所有密钥存储在 **Azure Key Vault** 中，不要在公开代码中暴露您的密码和密钥。这是一个最佳实践，可以保护您。
- en: 'Test your AKS deployment with the following code:'
  id: totrans-213
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码测试您的 AKS 部署：
- en: '[PRE33]'
  id: totrans-214
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: You should see the same results as your ACI test as they use the same input
    data. Make sure the output matches and you can call your test a success.
  id: totrans-215
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您应该看到与您的 ACI 测试相同的结果，因为它们使用相同的数据输入。确保输出匹配，您就可以称您的测试为成功。
- en: You have now learned everything you need to learn in order to successfully create
    a real-time scoring endpoint in Azure. These endpoints can be used anywhere in
    any other piece of code. Make sure that any data that gets pushed into the endpoint
    is in the correct JSON format and your projects will be successful.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 您现在已经学到了成功在 Azure 中创建实时评分端点所需的所有知识。这些端点可以在任何其他代码片段中使用。确保推送到端点的任何数据都处于正确的 JSON
    格式，您的项目将取得成功。
- en: The last part of this chapter deals with optimizing the performance of your
    AKS clusters. There is some fine-tuning involved that can greatly enhance the
    response time of your scoring solution.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的最后部分处理优化 AKS 集群的性能。涉及一些微调，可以大大提高评分解决方案的响应时间。
- en: Improving performance on your AKS cluster
  id: totrans-218
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 提高AKS集群的性能
- en: Sometimes you will deploy an endpoint on AKS and it doesn't perform how you'd
    like. Maybe it times out, maybe it's too slow, maybe an endpoint that was previously
    working fine suddenly gets a lot more traffic that it cannot handle. These situations
    happen, and you must be prepared to face them.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 有时您会在 AKS 上部署一个端点，但它并不按您期望的方式运行。可能超时，可能太慢，可能是一个之前运行良好的端点突然面临无法处理的更多流量。这些情况会发生，您必须准备好应对它们。
- en: 'Thankfully, AKS deployments have a lot of additional configurations that you
    can take advantage of to solve these problems. This section covers some of the
    more common situations as follows:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，AKS 部署有很多额外的配置，您可以利用这些配置来解决这些问题。本节将介绍一些更常见的情况，如下所示：
- en: Depending on how complex your model is, how many data points you are trying
    to score, and the size of your VMs, AKS models can sometimes take a while to score
    or even timeout. In this situation, there are many things you can do.
  id: totrans-221
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 根据您的模型复杂度、您尝试评分的数据点数量以及虚拟机的大小，AKS模型有时可能需要一段时间才能评分或甚至超时。在这种情况下，您有很多事情可以做。
- en: First, you can try increasing the size of your VM, selecting one with more RAM.
    Next, you can add an additional setting to your deployment configuration, `scoring_timeout_ms`.
    This setting defaults to `60000` milliseconds, or 1 minute. You can adjust it
    to a maximum of `300000` milliseconds, or 5 minutes. Sometimes, adjusting `memory_gb`
    or upping the number of `cpu_cores` can help too.
  id: totrans-222
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 首先，您可以尝试增加您虚拟机的尺寸，选择一个具有更多RAM的虚拟机。接下来，您可以在部署配置中添加一个额外的设置，`scoring_timeout_ms`。此设置默认为`60000`毫秒，即1分钟。您可以将其调整为最多`300000`毫秒，即5分钟。有时，调整`memory_gb`或增加`cpu_cores`的数量也可能有所帮助。
- en: Check the size of your model using AML studio. You can do this by clicking `memory_gb`
    setting on your deployment configurations.
  id: totrans-223
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用AML studio检查您模型的大小。您可以通过点击部署配置中的`memory_gb`设置来完成此操作。
- en: In the case where your endpoint is suddenly encountering surges in traffic that
    it cannot handle, try turning on autoscaling and increasing its ability to scale.
    `autoscale_enabled` to `True` in your deployment configurations.
  id: totrans-224
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在您的端点突然遇到无法处理的流量激增的情况下，尝试开启自动扩展并增加其扩展能力。在部署配置中将`autoscale_enabled`设置为`True`。
- en: You can also manually adjust the minimum and maximum number of replicas autoscaling
    will create using `autoscale_min_replicas` and `autoscale_max_replicas`. These
    default to `1` and `10`, respectively. Try upping both of these to increase performance
    in the case of heavy traffic.
  id: totrans-225
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您还可以使用`autoscale_min_replicas`和`autoscale_max_replicas`手动调整自动扩展将创建的最小和最大副本数。这些默认值分别为`1`和`10`。在流量高峰的情况下，尝试将这两个值都提高以增加性能。
- en: Armed with this information, you can easily create powerful AKS deployments
    that meet your business and performance requirements. When traffic is heavy, up
    the autoscaling. When your application times out, adjust the timeout setting.
    When your AKS endpoint runs slowly, try using a larger VM or adjusting the memory
    settings. Above all, always test your deployment in ACI before deploying it in
    AKS, and make sure that input data is coming in the correct JSON format in key-value
    pairs.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 带着这些信息，您可以轻松创建满足您业务和性能要求的强大AKS部署。当流量繁忙时，提高自动扩展。当您的应用程序超时时，调整超时设置。当您的AKS端点运行缓慢时，尝试使用更大的虚拟机或调整内存设置。最重要的是，在AKS上部署之前，始终在ACI上测试您的部署，并确保输入数据以正确的JSON格式以键值对的形式传入。
- en: Summary
  id: totrans-227
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: You have now created and tested real-time scoring solutions using an AutoML
    trained model. Deploying first on ACI and then on AKS, you understand the full
    end-to-end process of creating a real-time scoring endpoint.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 您现在已创建并测试了使用AutoML训练模型的真实时评分解决方案。首先在ACI上部署，然后在AKS上部署，您理解了创建实时评分端点的完整端到端过程。
- en: Furthermore, you understand how data must be shaped and formatted in order to
    generate predictions using these endpoints, which can be incorporated into any
    piece of code using a wide variety of computer languages to create powerful, innovative
    solutions.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，您还了解为了使用这些端点生成预测，数据必须如何塑形和格式化，这些可以集成到任何使用各种计算机语言的代码中，以创建强大、创新解决方案。
- en: In the next chapter, [*Chapter 12*](B16595_12_ePub.xhtml#_idTextAnchor184),
    *Realizing Business Value with AutoML*, the final chapter of the book, you will
    learn how to present AutoML solutions in a way that will gain the trust of your
    non-technical business partners. Their trust and acceptance, after all, is the
    foundation to unlocking the power and value of ML and artificial intelligence
    in your organization.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章，[*第12章*](B16595_12_ePub.xhtml#_idTextAnchor184)，*利用AutoML实现商业价值*，本书的最后一章，你将学习如何以一种能够赢得非技术业务伙伴信任的方式展示AutoML解决方案。毕竟，他们的信任和接受是解锁组织中机器学习和人工智能力量与价值的基础。
