["```py\n1,1000,4\n1,1001,3.5\n1,1002,1\n1,1003,2\n2,1000,1.5\n2,1001,2\n2,1002,4\n2,1003,4\n3,1000,1\n3,1001,3\n```", "```py\n1,1000,4\n1,1001,3.5\n2,1002,1\n2,1003,2\n3,1000,1.5\n3,1001,2\n4,1002,4\n4,1003,4\n```", "```py\nusing Microsoft.ML.Data;\n\nnamespace chapter07.ML.Objects\n{\n    public class MusicRating\n    {\n        [LoadColumn(0)]\n        public float UserID { get; set; }\n\n        [LoadColumn(1)]\n        public float MovieID { get; set; }\n\n        [LoadColumn(2)]\n        public float Label { get; set; }\n    }\n}\n```", "```py\nnamespace chapter07.ML.Objects\n{\n    public class MusicPrediction\n    {\n        public float Label { get; set; }\n\n        public float Score { get; set; }\n    }\n}\n```", "```py\nvar predictionEngine = MlContext.Model.CreatePredictionEngine<MusicRating, MusicPrediction>(mlModel);\n```", "```py\nvar json = File.ReadAllText(inputDataFile);\n```", "```py\nvar rating = JsonConvert.DeserializeObject<MusicRating>(json);\n```", "```py\n    var prediction = predictionEngine.Predict(rating);\n\n    Console.WriteLine(\n        $\"Based on input:{System.Environment.NewLine}\" +\n        $\"Label: {rating.Label} | MusicID: {rating.MusicID} | UserID: {rating.UserID}{System.Environment.NewLine}\" +\n        $\"The music is {(prediction.Score > Constants.SCORE_THRESHOLD ? \"recommended\" : \"not recommended\")}\");\n    ```", "```py\n    private const string UserIDEncoding = \"UserIDEncoding\";\n    private const string MovieIDEncoding = \"MovieIDEncoding\";\n    ```", "```py\n    var options = new MatrixFactorizationTrainer.Options\n    {\n        MatrixColumnIndexColumnName = UserIDEncoding,\n        MatrixRowIndexColumnName = MovieIDEncoding,\n        LabelColumnName = \"Label\",\n        NumberOfIterations = 20,\n        ApproximationRank = 10,\n        Quiet = false\n    };\n    ```", "```py\n    var trainingPipeline = trainingDataView.Transformer.Append(MlContext.Recommendation().Trainers.MatrixFactorization(options));\n    ```", "```py\n    ITransformer trainedModel = trainingPipeLine.Fit(trainingDataView.DataView);\n\n    MlContext.Model.Save(trainedModel, trainingDataView.DataView.Schema, ModelPath);\n\n    Console.WriteLine($\"Model saved to {ModelPath}{Environment.NewLine}\");\n    ```", "```py\n    var testingDataView = GetDataView(testingFileName, true);\n\n    var testSetTransform = trainedModel.Transform(testingDataView.DataView);\n\n    var modelMetrics = MlContext.Recommendation().Evaluate(testSetTransform);\n\n    Console.WriteLine($\"matrix factorization Evaluation:{Environment.NewLine}{Environment.NewLine}\" +\n                      $\"Loss Function: {modelMetrics.LossFunction}{Environment.NewLine}\" +\n                      $\"Mean Absolute Error: {modelMetrics.MeanAbsoluteError}{Environment.NewLine}\" +\n                      $\"Mean Squared Error: {modelMetrics.MeanSquaredError}{Environment.NewLine}\" +\n                      $\"R Squared: {modelMetrics.RSquared}{Environment.NewLine}\" +\n                      $\"Root Mean Squared Error: {modelMetrics.RootMeanSquaredError}\");\n    ```", "```py\n    namespace chapter07.Common\n    {\n        public class Constants\n        {\n            public const string MODEL_FILENAME = \"chapter7.mdl\";\n\n            public const float SCORE_THRESHOLD = 3.0f;\n        }\n    }\n    ```", "```py\n    PS Debug\\netcoreapp3.0> .\\chapter07.exe train ..\\..\\..\\Data\\sampledata.csv ..\\..\\..\\Data\\testdata.csv\n    iter tr_rmse obj\n       0 2.4172 9.6129e+01\n       1 1.9634 6.6078e+01\n       2 1.5140 4.2233e+01\n       3 1.3417 3.5027e+01\n       4 1.2860 3.2934e+01\n       5 1.1818 2.9107e+01\n       6 1.1414 2.7737e+01\n       7 1.0669 2.4966e+01\n       8 0.9819 2.2615e+01\n       9 0.9055 2.0387e+01\n      10 0.8656 1.9472e+01\n      11 0.7534 1.6725e+01\n      12 0.6862 1.5413e+01\n      13 0.6240 1.4311e+01\n      14 0.5621 1.3231e+01\n      15 0.5241 1.2795e+01\n      16 0.4863 1.2281e+01\n      17 0.4571 1.1938e+01\n    ```", "```py\n      18 0.4209 1.1532e+01\n      19 0.3975 1.1227e+01\n\n    Model saved to Debug\\netcoreapp3.0\\chapter7.mdl\n    ```", "```py\n    matrix factorization Evaluation:\n\n    Loss Function: 0.140\n    Mean Absolute Error: 0.279\n    Mean Squared Error: 0.140\n    R Squared: 0.922\n    Root Mean Squared Error: 0.375\n    ```", "```py\n    { \"UserID\": 10, \"MusicID\": 4, \"Label\": 3 }\n    ```", "```py\n    PS Debug\\netcoreapp3.0> .\\chapter07.exe predict input.json\n    Based on input:\n    Label: 3 | MusicID: 4 | UserID: 10\n    The music is not recommended\n    ```"]