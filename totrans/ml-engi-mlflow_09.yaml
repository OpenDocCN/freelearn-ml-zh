- en: '*Chapter 6*: Introducing ML Systems Architecture'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第6章*：介绍机器学习系统架构'
- en: In this chapter, you will learn about general principles of **Machine Learning**
    (**ML**) systems architecture in the broader context of **Software Engineering**
    (**SWE**) and common issues with deploying models in production in a reliable
    way. You will also have the opportunity to follow along with architecting our
    ML systems. We will briefly look at how with MLflow, in conjunction with other
    relevant tools, we can build reliable and scalable ML platforms.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你将了解在更广泛的软件工程（SWE）背景下机器学习（ML）系统架构的一般原则，以及以可靠方式在生产中部署模型时常见的常见问题。你还将有机会跟随我们构建我们的机器学习系统。我们将简要探讨如何使用MLflow以及其他相关工具构建可靠和可扩展的机器学习平台。
- en: 'Specifically, we will look at the following sections in this chapter:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 具体来说，在本章中，我们将探讨以下部分：
- en: Understanding challenges with ML systems and projects
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解机器学习系统和项目中的挑战
- en: Surveying state-of-the-art ML platforms
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调查最先进的机器学习平台
- en: Architecting the PsyStock ML platform
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建PsyStock机器学习平台
- en: You will follow a process of understanding the problem, studying different solutions
    from lead companies in the industry, and then developing your own relevant architecture.
    This three-step approach is transferrable to any future ML system that you want
    to develop.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 你将遵循一个理解问题、研究行业领先公司提供的不同解决方案，然后开发你自己的相关架构的过程。这种三步法可以转移到你想要开发的任何未来的机器学习系统中。
- en: Technical requirements
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'For this chapter, you will need to meet the following prerequisites:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 对于本章，你需要满足以下先决条件：
- en: The latest version of Docker installed on your machine. If you don't already
    have it installed, please follow the instructions at [https://docs.docker.com/get-docker/](https://docs.docker.com/get-docker/).
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在你的机器上安装了最新版本的Docker。如果你还没有安装，请按照[https://docs.docker.com/get-docker/](https://docs.docker.com/get-docker/)中的说明操作。
- en: The latest version of `docker-compose` installed. Please follow the instructions
    at [https://docs.docker.com/compose/install/](https://docs.docker.com/compose/install/).
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 已安装`docker-compose`的最新版本。请按照[https://docs.docker.com/compose/install/](https://docs.docker.com/compose/install/)中的说明操作。
- en: Access to Git in the command line and installed as described at [https://git-scm.com/book/en/v2/Getting-Started-Installing-Git](https://git-scm.com/book/en/v2/Getting-Started-Installing-Git).
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在命令行中访问Git，并按照[https://git-scm.com/book/en/v2/Getting-Started-Installing-Git](https://git-scm.com/book/en/v2/Getting-Started-Installing-Git)中的说明进行安装。
- en: Access to a Bash terminal (Linux or Windows).
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 访问Bash终端（Linux或Windows）。
- en: Access to a browser.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 访问浏览器。
- en: Python 3.5+ installed.
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 已安装Python 3.5+。
- en: The latest version of your ML platform installed locally as described in [*Chapter
    3*](B16783_03_Final_SB_epub.xhtml#_idTextAnchor066), *Your Data Science Workbench*.
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如[*第3章*](B16783_03_Final_SB_epub.xhtml#_idTextAnchor066)中所述，在本地安装了与你的机器学习平台最新版本兼容的版本，*你的数据科学工作台*。
- en: Understanding challenges with ML systems and projects
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解机器学习系统和项目中的挑战
- en: Implementing a product leveraging ML can be a laborious task as some new concepts
    need to be introduced in the book around best practices of ML systems architecture.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 利用机器学习实现产品可能是一项费力的任务，因为需要在书中介绍一些关于机器学习系统架构最佳实践的新概念。
- en: So far in this book, we have shown how MLflow can enable the everyday model
    developer to have a platform to manage the ML life cycle from iteration on model
    development up to storing their models on the model registry.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，在这本书中，我们已经展示了MLflow如何使日常模型开发者拥有一个平台来管理从模型开发迭代到在模型注册表中存储模型整个机器学习生命周期。
- en: In summary, at this stage, we have managed to create a platform for the model
    developer to craft their models and publish the models in a central repository.
    This is the ideal stage to start unlocking potential in the business value of
    the models created. In an ML system, to make the leap from model development to
    a model in production, a change of mindset and approach is needed. After unlocking
    the value and crafting models, the exploitation phase begins, which is where having
    an ML systems architecture can set the tone of the deployments and operations
    of your models.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 总结来说，到目前为止，我们已经为模型开发者创建了一个平台，让他们可以构建模型并在中央仓库中发布模型。这是开始挖掘创建的模型商业价值理想阶段。在机器学习系统中，要从模型开发跃迁到生产中的模型，需要转变思维方式和采取不同的方法。在解锁价值和构建模型之后，利用阶段开始，这时拥有机器学习系统架构可以为你的模型部署和运营定下基调。
- en: 'ML systems are a specialization of the traditional SWE area and so we can and
    should leverage the body of knowledge in the SWE realm to architect our systems.
    Relevant concepts in SWE to our context are the following:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 机器学习系统是传统软件开发（SWE）领域的专业化分支，因此我们可以也应该利用SWE领域的知识体系来构建我们的系统。与我们相关联的SWE概念如下：
- en: '**Separation of concerns**: A complete system should be separated into different
    components. Each of the components of the system should be independent and focused
    on doing one thing well. For instance, a training component should be specialized
    in training and not doing scoring at the same time.'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**关注点分离**：一个完整的系统应该被分割成不同的组件。系统的每个组件都应该是独立的，并且专注于做好一件事。例如，一个训练组件应该专注于训练，而不是同时进行评分。'
- en: '**Autonomy**: Each component of the system should stand as an independent autonomous
    unit and be deployable independently. For example, the deployment of your API
    system should be independent of the deployment of the training system.'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**自主性**：系统的每个组件都应该作为一个独立的自主单元存在，并且可以独立部署。例如，您的API系统的部署应该独立于训练系统的部署。'
- en: '**Resilience**: One consequence of the separation of concerns and modularity
    is that we must make sure that if one component of the wider system is faulty,
    this doesn''t affect independent components. If a batch scoring mechanism of a
    machine platform is broken, it shouldn''t affect the real-time system.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**弹性**：关注点分离和模块化的一个后果是我们必须确保如果更广泛系统的一个组件出现故障，这不会影响独立组件。如果一个机器平台的批量评分机制出现故障，它不应该影响实时系统。'
- en: '**Scalability**: We should be able to scale the different components of our
    system independently and in accordance with its workload.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可扩展性**：我们应该能够独立并根据其工作负载独立扩展系统的不同组件。'
- en: '**Testability**: This represents the ability of a system to being tested and
    its functionality being verified against a set of representative inputs. In ML
    systems, this is particularly hard given the non-deterministic nature of models.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可测试性**：这代表系统被测试的能力以及其功能与一组代表性输入进行验证的能力。在机器学习系统中，由于模型的非确定性，这一点尤其困难。'
- en: '**Continuous deployment/delivery**: This represents the ability to deploy systems
    in shorter cycles with almost no friction between a change in the code, configuration,
    models, or data, in the ML case, to have the new version of the system.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**持续部署/交付**：这代表在几乎没有任何摩擦的情况下，在代码、配置、模型或数据发生变化时部署系统的能力，在机器学习的情况下，以便有新版本的系统。'
- en: '**Composability**: We should be able to reuse the components of our systems
    in future projects to increase the return on investment. So, an ML engineer needs
    to be sure that the code and components being developed are easily reusable and/or
    interoperable with other systems.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可组合性**：我们应该能够将系统的组件在未来项目中重复使用，以提高投资回报率。因此，机器学习工程师需要确保正在开发的代码和组件易于重复使用和/或与其他系统互操作。'
- en: '**Maintainability**: This is the ease at which a system can be modified, fixed,
    and improved to meet and adapt to the demands of a changing environment.'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可维护性**：这是系统被修改、修复和改进以适应不断变化的环境需求的容易程度。'
- en: At this stage, we can briefly introduce and refine our use case, of stock prediction,
    to develop our ML platform in the PsyStock company.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个阶段，我们可以简要介绍并细化我们的用例，即股票预测，以在PsyStock公司开发我们的机器学习平台。
- en: Based on the work done so far in prototyping models to **predict the price of
    Bitcoin**, the business development department of the company decided to start
    its first product as a **Prediction API for cryptocurrencies** as they are becoming
    a popular technology in the corporate world. A team was assembled that decided
    to investigate challenges and state-of-the-art platforms, and then architect the
    company's own platform.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 基于迄今为止在原型设计模型以**预测比特币价格**方面所做的工作，公司的业务发展部门决定将其第一个产品作为**加密货币预测API**来启动，因为它们正在成为企业界的一种流行技术。一个团队被组建起来，决定调查挑战和最先进的平台，然后构建公司的自有平台。
- en: 'An ML project generally involves many departments of a company. Imagining the
    hypothetical case of PsyStock, a typical ML project team involves the following
    stakeholders:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 一个机器学习项目通常涉及公司中的许多部门。以PsyStock为例，一个典型的机器学习项目团队包括以下利益相关者：
- en: '**Data science team**: Responsible for building and developing the model with
    the goal of achieving the highest accuracy on their prediction of cryptocurrency
    prices and market movements.'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据科学团队**：负责构建和发展模型，目标是实现最高准确率，预测加密货币价格和市场走势。'
- en: '**ML/data engineering team**: Responsible for the engineering components, including
    data acquisition, preparation, training, and deployment, and is interested in
    the system being correctly deployed and running on spec in production.'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**机器学习/数据工程团队**：负责工程组件，包括数据采集、准备、训练和部署，并关注系统在生产中正确部署并按规格运行。'
- en: '**Infrastructure team**: Responsible for providing compute and infrastructure
    resources. Expects that the system will not cause an operational load to the team.'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**基础设施团队**：负责提供计算和基础设施资源。期望系统不会给团队带来运营负担。'
- en: '**Product team**: Provides integration with the web platforms and the overall
    software of the company and drives the feature creation, ensuring a speedy inference
    speed.'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**产品团队**：提供与公司网络平台和整体软件的集成，推动功能创建，确保快速推理速度。'
- en: '**Business development/marketing team**: Packages and markets the product and
    monitors the business performance of the product.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**业务发展/市场营销团队**：打包和营销产品，并监控产品的业务表现。'
- en: In the next section, we will understand general challenges in ML systems and
    projects.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将了解机器学习系统和项目的一般挑战。
- en: ML is an important application of technology to help unlock value in organizations
    using data. In the application of ML in the business world, there are no standard
    practices defined and a big number of organizations struggle to get products backed
    by ML in production.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 机器学习（ML）是技术的一个重要应用，旨在帮助组织利用数据释放价值。在商业世界中应用机器学习时，尚未定义标准实践，许多组织都难以将基于机器学习的产品投入生产。
- en: 'In the real world, a naive way to move models into production would consist
    of the following steps:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在现实世界中，将模型投入生产的简单方法可能包括以下步骤：
- en: Data scientist produces a model in a notebook environment and implements the
    code in R.
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 数据科学家在笔记本环境中创建模型，并在R语言中实现代码。
- en: The data scientist shares the notebook with the engineering team, signaling
    that they're ready to send their model to production.
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 数据科学家与工程团队分享笔记本，表示他们已准备好将他们的模型投入生产。
- en: The engineering team reimplements the training process in a language that they
    can understand, in this case, Python.
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 工程团队使用他们能理解的语言重新实现了训练过程，在这种情况下，是Python语言。
- en: A long process of trial and error until the data science team and engineering
    team are in agreement that the model produced by the bespoke training system is
    producing equivalent outputs to the original one.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 经过长时间的试错过程，直到数据科学团队和工程团队达成一致，认为定制化训练系统产生的模型与原始模型产生等效的输出。
- en: A new system is created and developed to score systems and the engineering team
    notes a high latency. The model is sent to redevelopment as it can't be redeveloped
    in the current status.
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建并开发了一个新的系统来评分系统，工程团队注意到高延迟。由于当前状态无法重新开发，模型被发送回重新开发。
- en: 'The situation described in the previous paragraph is more common than you might
    imagine. It is described in detail in the paper by *D. Sculley et al., Hidden
    Technical Debt in Machine Learning Systems (2015)*. The following risk factors
    and technical debt related to implementing ML platforms naively were identified
    by a team at Google:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 上一段描述的情况比你想象的更常见。这在D. Sculley等人于2015年发表的论文《机器学习系统中隐藏的技术债务》中有详细描述。谷歌的一个团队识别了以下与天真地实施机器学习平台相关的风险因素和技术债务：
- en: '**Boundary erosion**: ML systems by their nature mix signals of different logical
    domains. Maintaining clear logic of business domains as is possible in SWE is
    challenging. Another natural issue is the temptation of using a model output as
    input of a third model, *A*, and changes might have unexpected effects in model
    *B*.'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**边界侵蚀**：由于机器学习系统的本质是混合不同逻辑域的信号，因此在SWE中尽可能保持业务域的清晰逻辑具有挑战性。另一个自然问题是将模型输出作为第三个模型*A*的输入的诱惑，这可能会在模型*B*中产生意外的效果。'
- en: '**Costly data dependencies**: Fresh, accurate, and dependable data is the most
    important ingredient of an ML system. For example, in the cryptocurrency case,
    in order to be able to predict, an external API might be consulted in combination
    with social network sentiment signals. At a given point, one of the data signals
    might be unavailable, making one of the components unavailable. Data distributions
    in the real world can change, causing the model inference to be irrelevant in
    the real world.'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**昂贵的依赖数据**：新鲜、准确和可靠的数据是机器学习系统最重要的组成部分。例如，在加密货币案例中，为了能够预测，可能会结合使用外部API和社会网络情绪信号。在某个时刻，其中一个数据信号可能不可用，使得其中一个组件不可用。现实世界中的数据分布可能会改变，导致模型在现实世界中的推理变得不相关。'
- en: '**Feedback loops**: In some contexts, the model influences the data selected
    for training. Credit scoring is a good example of such a case. A model that decides
    who gets credit for the next re-training of the model will select training data
    from the population that was affected by the model. Analyzing the effect of the
    model on the ground data is important to take into consideration when developing
    your model.'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**反馈循环**：在某些情况下，模型会影响用于训练的数据选择。信用评分就是一个很好的例子。决定谁将获得模型下一次重新训练的信用的人将选择受模型影响的人群中的训练数据。在开发模型时，分析模型对地面数据的影响是很重要的。'
- en: '**System-level anti patterns**: ML systems are notoriously known for harboring
    glue code with different packages and without proper abstractions. In some cases,
    multiple languages are used to implement in the library given the iterative nature
    of developing code in a notebook.'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**系统级反模式**：机器学习系统因其包含不同包和缺乏适当抽象的粘合代码而臭名昭著。在某些情况下，由于在笔记本中编写代码的迭代性质，可能会使用多种语言来实现库。'
- en: '**Configuration management**: Generally left as an afterthought in ML systems,
    information about the configuration that yielded a particular result is paramount
    for the post-analysis of models and deployment. Not using established configuration
    management practices can introduce errors in ML pipelines.'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**配置管理**：通常在机器学习系统中被忽视，但特定结果产生的配置信息对于模型的后分析和部署至关重要。不使用既定的配置管理实践可能会在机器学习管道中引入错误。'
- en: '**Monitoring and testing**: Integration testing and unit testing are common
    patterns in SWE projects that due to the stochastic nature of ML projects are
    harder to implement.'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**监控和测试**：集成测试和单元测试是SWE项目中的常见模式，但由于机器学习项目的随机性质，它们更难实施。'
- en: 'One important practice to tackle the challenges in ML systems is to add extensive
    tests on critical parts of the process, on your code, during model training and
    when running on your system, as shown in *Figure 6.1*:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 解决机器学习系统挑战的一个重要实践是在模型训练期间以及系统运行时，对过程的临界部分、代码进行广泛的测试，如图6.1所示：
- en: '![](img/image0012.jpg)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/image0012.jpg)'
- en: Figure 6.1 – Testing in ML systems extracted from https://research.google/pubs/pub46555/
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.1 – 从https://research.google/pubs/pub46555/提取的机器学习系统测试
- en: What *Figure 6.1* illustrates is one approach to address technical debt by testing
    the different parts of the system through standard software practices with the
    addition of specialized monitoring for data predictions. The important new additions
    are tests on data and tests on the model, so testing incoming data and training
    data and at the same time being able to monitor these tests and decide whether
    the system passes the relevant criteria is critical.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '*图6.1* 所展示的是通过标准软件实践测试系统的不同部分，并添加专门的数据预测监控来应对技术债务的一种方法。重要的新增加是数据测试和模型测试，因此测试传入数据和训练数据，同时能够监控这些测试并决定系统是否通过相关标准是至关重要的。'
- en: MLflow as a platform addresses some of the issues referred to in this section
    as problems for ML systems. MLflow is focused on a specific set of dimensions
    of the ML technical debt and is a good pillar component to create an ML platform.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 作为平台，MLflow解决了本节中提到的机器学习系统的一些问题。MLflow专注于机器学习技术债务的特定维度，是创建机器学习平台的一个很好的支柱组件。
- en: In the next section, we will look at some examples of state-of-the-art robust
    ML engineering systems, to guide our development.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将探讨一些最先进的鲁棒机器学习工程系统的例子，以指导我们的开发。
- en: Surveying state-of-the-art ML platforms
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 调查最先进的机器学习平台
- en: 'At a high level, a mature ML system has the components outlined in *Figure
    6.2*. These components are ideally independent and responsible for one particular
    feature of the system:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 从高层次来看，一个成熟的机器学习系统具有*图6.2*中概述的组件。这些组件理想上是独立的，并负责系统的特定功能：
- en: '![](img/image0023.jpg)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/image0023.jpg)'
- en: Figure 6.2 – Components of an ML platform
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.2 – 机器学习平台组件
- en: 'Following the lead from SWE modularization, these general components allow
    us to compare different ML platforms and also specify our PsyStock requirements
    for each of the components. The components that we choose to use as a reference
    for architecture comparison are the following:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 遵循SWE模块化的先例，这些通用组件使我们能够比较不同的机器学习平台，并指定我们对PsyStock每个组件的要求。我们选择用作架构比较参考的组件如下：
- en: '**Data and feature management**: The component of data and feature management
    is responsible for data acquisition, feature generation, storing, and serving
    the modules upstream.'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据和特征管理**：数据和特征管理组件负责数据采集、特征生成、存储以及向上游模块提供服务。'
- en: '**Training infrastructure**: The component that handles the process of the
    training of models, scheduling, consuming features, and producing a final model.'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**训练基础设施**：处理模型训练过程、调度、消耗特征以及生成最终模型的组件。'
- en: '**Deployment and inference**: The responsibility of this unit is for the deployment
    inference and batch scoring of a model. It is the external face of the system
    and is accessible to external systems.'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**部署和推理**：该单元的职责是模型的部署推理和批处理评分。它是系统的外部面孔，对外部系统是可访问的。'
- en: '**Performance and monitoring**: A component that handles observability, metrics
    posted by different systems, and monitoring systems in production.'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**性能和监控**：一个处理可观察性、不同系统发布的指标以及生产中的监控系统的组件。'
- en: '**Model management**: Manages model artifact versions and the life cycle of
    models.'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**模型管理**：管理模型工件版本和模型的生命周期。'
- en: '**Workflow management**: The component responsible for orchestrating batch
    workflows and processing pipelines.'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**工作流管理**：负责编排批处理工作流和处理管道的组件。'
- en: After having described the different components of an ML platform, we will look
    at some examples starting with Uber's Michelangelo.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 在描述了机器学习平台的不同组件之后，我们将查看一些示例，从Uber的Michelangelo开始。
- en: Getting to know Michelangelo
  id: totrans-70
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 了解Michelangelo
- en: Uber was one of the first companies to document widely their realization that
    an ML platform was critical to unlocking value on the data produced.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: Uber是首批广泛记录其认识到机器学习平台对于释放数据价值至关重要的公司之一。
- en: 'The internal motivations at Uber to build the platform were the following:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: Uber构建平台内部动机如下：
- en: Limited impact of ML due to huge resources needed when translating a local model
    into production.
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由于将本地模型转换为生产所需的大量资源，机器学习的影响有限。
- en: Unreliable ML and data pipelines.
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不可靠的机器学习和数据管道。
- en: Engineering teams had to create custom serving containers and systems for the
    systems at hand.
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 工程团队必须为现有系统创建定制的服务容器和系统。
- en: Inability to scale ML projects.
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无法扩展机器学习项目。
- en: 'The following *Figure 6.3* (retrieved from [https://eng.uber.com/michelangelo-machine-learning-platform](https://eng.uber.com/michelangelo-machine-learning-platform))
    shows the different components of Michelangelo. One significant component is the
    data component of the Uber infrastructure decoupling real-time data infrastructure
    with streaming systems such as Kafka to acquire data from the outside from where
    the data flows to a training process, and from there to scoring in both real-time
    and offline mode. Distinctive features are a separation of the batch world and
    real-time world and the existence of generic prediction services for API and batch
    systems:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 以下*图6.3*（来自[https://eng.uber.com/michelangelo-machine-learning-platform](https://eng.uber.com/michelangelo-machine-learning-platform)）展示了Michelangelo的不同组件。一个显著组件是Uber基础设施中的数据组件，它将实时数据基础设施与流系统（如Kafka）解耦，以从外部获取数据，这些数据流向训练过程，然后到实时和离线模式下的评分。独特的特征包括批处理世界和实时世界的分离，以及为API和批处理系统提供通用预测服务：
- en: '![](img/image0033.jpg)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/image0033.jpg)'
- en: Figure.6.3 – Michelangelo architecture
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 图.6.3 – Michelangelo架构
- en: 'The components that we choose to use as a reference for architecture comparison
    are the following:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 我们选择用作架构比较参考的组件如下：
- en: '**Data and feature management**: It consists of a centralized data store with
    all the features that are needed to serve models and train models. The feature
    data store can be accessed in real time and in batch. For the batch scenario,
    they use a database system called Hive and for real time, they use Cassandra.'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据和特征管理**：它包含一个集中式数据存储，其中包含为服务模型和训练模型所需的所有特征。特征数据存储可以实时和批量访问。对于批量场景，他们使用名为Hive的数据库系统，对于实时，他们使用Cassandra。'
- en: '**Training infrastructure**: Distributed training infrastructure with a tool
    called **Horovod** ([https://github.com/horovod/horovod](https://github.com/horovod/horovod))
    with specialized and bespoke components and enhanced reporting. It provides custom
    metrics for each type of model (deep learning, models, feature importance, and
    so on). The output of the training job is the model repo using as a backend the
    Cassandra database.'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**训练基础设施**：使用名为**Horovod**（[https://github.com/horovod/horovod](https://github.com/horovod/horovod)）的工具提供的分布式训练基础设施，具有专门和定制的组件以及增强的报告功能。它为每种类型的模型（深度学习、模型、特征重要性等）提供自定义指标。训练作业的输出是使用Cassandra数据库作为后端的模型存储库。'
- en: '**Deployment and inference**: The systems deployed through standard SWE practices
    (CI/CD, rollbacks on metrics monitoring, and so on), generally compiled as artifacts
    served over Uber data centers. A prediction service that receives a request and
    based on header information routes pre-loads the right model and feeds the prediction
    vector, using an internal DSL that is able to query for further data augmentation
    on the serving layer of the feature store.'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**部署和推理**：通过标准的SWE实践（CI/CD、基于指标监控的回滚等）部署的系统，通常作为工件在Uber数据中心提供。一个预测服务接收请求，并根据头部信息预先加载正确的模型，并使用内部DSL在特征存储的服务层查询进一步的数据增强，从而提供预测向量。'
- en: '**Performance and monitoring**: It leverages the general centralized logging
    system of the company. For monitoring predictions, metrics are produced of predictions
    and real-world values and differences are logged. The errors of the model can
    in this way be analyzed and monitored.'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**性能和监控**：它利用公司通用的集中式日志系统。对于监控预测，会生成预测和现实世界值的相关指标，并将差异记录下来。通过这种方式，可以分析和监控模型的错误。'
- en: '**Model management**: Models are compiled as artifacts and stored in a Cassandra
    data store.'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**模型管理**：模型作为工件编译并存储在Cassandra数据存储中。'
- en: '**Workflow management**: Provides an API for wiring the pipelines. It contains
    a management plane with a UI that allows the management of models and deployments.
    Workflow management is API-driven and can be managed in either Python or Java
    from the outside.'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**工作流管理**：提供用于连接管道的API。它包含一个管理平面，其中包含一个UI，允许管理模型和部署。工作流管理是API驱动的，可以从外部使用Python或Java进行管理。'
- en: The clear advantage for a company such as Uber to have built their own system
    is agility and the ability to cater to their very specific use case.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 对于像Uber这样的公司来说，建立自己的系统的一个明显优势是灵活性和满足他们非常具体用例的能力。
- en: Getting to know Kubeflow
  id: totrans-88
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 了解Kubeflow
- en: Kubeflow in some way is an open source platform for the ML life cycle for **Kubernetes**
    environments. It's basically an ecosystem of tools that work together to provide
    the main components of an ML platform. Kubeflow was initially developed at Google
    and it's currently a very active open source project.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: Kubeflow在某种程度上是一个针对**Kubernetes**环境的开源平台，用于机器学习生命周期。它基本上是一个工具生态系统，这些工具协同工作以提供机器学习平台的主要组件。Kubeflow最初是在谷歌开发的，目前是一个非常活跃的开源项目。
- en: '**Kubernetes** is one of the leading open source computational environments
    that allows flexibility in allocating computing and storage resources for containerized
    workloads. It was created originally at Google. In order to understand Kubeflow,
    a basic understanding of Kubernetes is needed. The following official documentation
    link contains the prerequisites to understand the basics: [https://kubernetes.io/docs/concepts/overview/](https://kubernetes.io/docs/concepts/overview/).'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '**Kubernetes**是领先的开放源代码计算环境之一，它允许在容器化工作负载中灵活分配计算和存储资源。它最初是在谷歌创建的。为了理解Kubeflow，需要基本了解Kubernetes。以下官方文档链接包含了理解基础所需的前提条件：[https://kubernetes.io/docs/concepts/overview/](https://kubernetes.io/docs/concepts/overview/)。'
- en: 'As shown in *Figure 6.4*, it uses the foundation of Kubernetes and provides
    a set of applications for the ML workflow where different tools compatible with
    the standards set by Kubeflow can be coalesced to provide a coherent set of services:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 如 *图 6.4* 所示，它使用 Kubernetes 的基础，提供了一套机器学习工作流的应用程序，其中可以聚合与 Kubeflow 标准兼容的不同工具，以提供一套连贯的服务：
- en: '![](img/image0043.jpg)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/image0043.jpg)'
- en: Figure 6.4 – Retrieved from https://www.kubeflow.org/docs/started/kubeflow-overview/
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.4 – 来自 https://www.kubeflow.org/docs/started/kubeflow-overview/
- en: 'The components that we choose to use as a reference for architecture comparison
    are the following:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 我们选择用作架构比较参考的组件如下：
- en: '**Data and feature management**: Kubeflow provides integration with big data
    tools such as Spark and others. A component of the ecosystem used for data and
    feature management is called Feast, an open source feature for ML.'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据和特征管理**：Kubeflow 提供与 Spark 等大数据工具的集成。用于数据和特征管理的一个生态系统组件称为 Feast，是一个开源的机器学习特征。'
- en: '**Training infrastructure**: Kubeflow provides specific types of Kubeflow operators
    for common models such as, for instance, TensorFlow, PyTorch, and custom-made
    ones. The training jobs will basically be specific Kubernetes jobs.'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**训练基础设施**：Kubeflow 为常见的模型如 TensorFlow、PyTorch 和定制模型提供特定的 Kubeflow 运算符。训练作业基本上是特定的
    Kubernetes 作业。'
- en: '**Deployment and inference**: Kubeflow provides multiple integrations with
    third-party tools such as TensorFlow Serving, Seldon Core, and KFServing with
    different trade-offs and maturity levels.'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**部署和推理**：Kubeflow 提供与 TensorFlow Serving、Seldon Core 和 KFServing 等第三方工具的多个集成，具有不同的权衡和成熟度水平。'
- en: '**Performance and monitoring**: Prometheus is a general tool used for monitoring
    within the Kubernetes environment and can be leveraged in this context.'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**性能和监控**：Prometheus 是一种在 Kubernetes 环境中使用的通用监控工具，可以在此环境中利用。'
- en: '**Model management**: Not a specific tool for managing models but tools such
    as MLflow can be added to cover the model management life cycle.'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**模型管理**：不是专门用于管理模型的工具，但可以添加如 MLflow 这样的工具来覆盖模型管理生命周期。'
- en: '**Workflow management**: Workflow management is leveraged through a specific
    tool called Kubeflow Pipelines built on top of a generic pipeline tool for Kubernetes
    called Argo Workflows. It allows multi-step pipelines to be built in code.'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**工作流管理**：通过一个名为 Kubeflow Pipelines 的特定工具进行工作流管理，该工具建立在 Kubernetes 上的通用管道工具
    Argo Workflows 之上。它允许通过代码构建多步骤管道。'
- en: After looking at reference architectures, we will now spend time crafting our
    own, armed with the state-of-the-art knowledge available in the industry.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 在查看参考架构后，我们现在将花时间构建自己的架构，凭借行业中最先进的知识。
- en: Architecting the PsyStock ML platform
  id: totrans-102
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 架构 PsyStock 机器学习平台
- en: 'There is a set of desirable tenets that we can define for our ML platform based
    on a distillation of the research on best practices and example reference architectures.
    The main tenets that we want to maintain in our platform are the following:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以根据对最佳实践和示例参考架构的研究提炼出的原则，为我们的机器学习平台定义一组期望的原则。我们希望在平台中保持的主要原则如下：
- en: '**Leverage** **open systems and standards**: Using open systems such as the
    ones available in MLflow allows longevity and flexibility to leverage the open
    source community advances and power to extend the company ML platform at a lower
    cost.'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**利用** **开放系统和标准**：使用如 MLflow 提供的开放系统允许长期性和灵活性，以利用开源社区的进步和力量，以较低的成本扩展公司的机器学习平台。'
- en: '**Favor** **scalable solutions**: A company needs to be prepared for a future
    surge in growth; although this is the first version, the ability to surge on-demand
    from training and perspective needs to be in place.'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**优先考虑** **可扩展的解决方案**：公司需要为未来增长激增做好准备；尽管这是第一个版本，但根据需求和视角进行激增的能力需要到位。'
- en: '**Integrated** **reliable data life cycle**: Data is the center of gravity
    of the ML platform and should be managed in a reliable and traceable manner at
    scale.'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**集成** **可靠的数据生命周期**：数据是机器学习平台的重心，应该以可靠和可追踪的方式在规模上进行管理。'
- en: '**Follow** **SWE best practices**: For example, separation of concerns, testability,
    CI/CD, observability, and modularity.'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**遵循** **软件开发最佳实践**：例如，关注点分离、可测试性、CI/CD、可观察性和模块化。'
- en: '**Maintain** **vendor and cloud independence**: PsyStock being a start-up is
    operating in a very dynamic environment and in different geographies with access
    to different clouds and, in some cases, with compliance requirements of not moving
    the data from the given geography. So, being cloud-agnostic and being able to
    have workloads in different environments is a competitive advantage.'
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**维护** **供应商和云独立性**：PsyStock作为一个初创公司，在一个非常动态的环境中运营，在不同的地理区域，可以访问不同的云，在某些情况下，还需要遵守不将数据从给定地理区域移动的要求。因此，保持云无关性并能够在不同的环境中拥有工作负载是一个竞争优势。'
- en: These tenets will allow us to frame our systems architecture within an open
    and low-cost solution for the company and allow the flexibility of running on
    the different systems on-premises, in the cloud, or local.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 这些原则将使我们能够在公司内部构建一个开放且成本低的系统架构，并允许在不同的系统上运行，无论是在本地、云中还是本地。
- en: We have previously defined the business requirements of the prediction use cases,
    namely detection of the movement of cryptocurrency and value prediction. To leverage
    this and other use cases, the creation of an ML platform is critical to the company.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 我们之前已经定义了预测用例的业务需求，即加密货币运动的检测和价值预测。为了利用这一点和其他用例，创建一个机器学习平台对公司来说至关重要。
- en: Now, armed with the knowledge from the research and description of state-of-the-art
    systems, we will next define eliciting the features of our ML platform.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，凭借对最先进系统的研究和描述的知识，我们将接下来定义激发我们机器学习平台特性的方法。
- en: Describing the features of the ML platform
  id: totrans-112
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 描述机器学习平台的功能
- en: Creating a specification of features is extremely important to keep the development
    efforts focused on a narrow set of features that unlock value to users of the
    platform. In this section, we will elicit the features that will realize the best
    value of an ML platform.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 制定特性规范对于保持开发工作专注于一小套能够为平台用户解锁价值的特性至关重要。在本节中，我们将激发能够实现机器学习平台最佳价值的特性。
- en: 'In our system, we want to be able to have the following features:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的系统中，我们希望能够具备以下功能：
- en: '**Feature: Schedule training jobs**: A data scientist needs to be able to schedule
    training jobs for their models using configuration or equivalent code.'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**特性：安排训练作业**：数据科学家需要能够使用配置或等效代码为他们的模型安排训练作业。'
- en: '**Feature: Deploy seamlessly different models developed from the data science
    workbench**: The company already has a data science workbench developed in *Chapter
    3*, *Your Data Science Workbench*. We want to be able to leverage all the work
    previously done so models developed on the platform can be deployed in production.'
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**特性：无缝部署从数据科学工作台开发的不同模型**：公司在第3章“你的数据科学工作台”中已经开发了一个数据科学工作台。我们希望能够利用之前所做的所有工作，以便在平台上开发的模型可以部署到生产环境中。'
- en: '**Feature: Allow recalibration of models in presence of new data**: When new
    data arrives in a specific location, a new model needs to be generated automatically
    and stored in a model registry accessible to systems and humans of the platform.'
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**特性：允许在出现新数据的情况下重新校准模型**：当特定位置出现新数据时，需要自动生成一个新模型并将其存储在平台系统和人类可访问的模型注册表中。'
- en: '**Feature: Submit and configure batch scoring jobs**: The platform should allow
    the relevant users to configure and schedule batch jobs in the presence of new
    data.'
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**特性：提交和配置批量评分作业**：平台应允许相关用户在出现新数据的情况下配置和安排批量作业。'
- en: '**Feature: Efficient inference API-based scoring for the following APIs**:
    Given a model it should be a feature of the platform the creation of matching
    API using the model schema.'
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**特性：基于高效推理API的以下API评分**：给定一个模型，平台应该具有使用模型模式创建匹配API的功能。'
- en: After discussing the ideal features of an ML system, we will start in the next
    section with architecting the system at a high level.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 在讨论了机器学习系统的理想特性之后，我们将在下一节中开始从高层次构建系统。
- en: High-level systems architecture
  id: totrans-121
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 高层次系统架构
- en: We will now focus on defining the building blocks of our architecture and the
    different data flows between the different components.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在将专注于定义我们架构的构建块以及不同组件之间的不同数据流。
- en: Based on the features specified and tenets of the previous section, our ML platform
    and solution should contain the following components as described by the architecture
    diagram in *Figure 6.5*.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 根据上一节中指定的特性和原则，我们的机器学习平台和解决方案应包含以下组件，如*图6.5*中的架构图所述。
- en: '![](img/image0053.jpg)'
  id: totrans-124
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/image0053.jpg)'
- en: Figure.6.5 – Architectural diagram of an ML platform
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.5 – ML平台架构图
- en: This diagram is specifically agnostic from technology choices as this will be
    done in the respective upcoming chapters where each of the components' engineering
    will be explored fully.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 此图对技术选择具有特定的不确定性，因为这将在即将到来的章节中完成，届时将全面探索每个组件的工程。
- en: '**Data and feature management**: This is executed by the **Feature / Data Layer**,
    which receives feature registrations from the workbench and allows the registration
    of datasets from the workbench. The data layer provides data to the training environment.'
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**数据和特征管理**：这是通过**特征/数据层**执行的，该层从工作台接收特征注册，并允许从工作台注册数据集。数据层为训练环境提供数据。'
- en: '**Training infrastructure**: The training infrastructure component allows the
    schedule of training of jobs based on a request from the data science workbench.'
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**训练基础设施**：训练基础设施组件允许根据数据科学工作台的请求安排作业的训练。'
- en: '**Deployment and inference**: The deployment environment consumes models to
    execute either in batch or in real time prompted either by data in the data layer
    or by requests via production systems.'
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**部署和推理**：部署环境消耗模型以执行批量或实时操作，由数据层中的数据或通过生产系统发出的请求触发。'
- en: '**Performance and monitoring**: This is accomplished through the central component
    of monitoring and metrics that all the systems surrounding the component publish
    metrics into.'
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**性能和监控**：这是通过监控和指标的中心组件来实现的，所有围绕该组件的系统都会将指标发布到其中。'
- en: '**Model management**: Encapsulated by the component of **Model Registry**,
    which contains a store and the associated life cycles projects. The input comes
    primarily from the training jobs and the data science workbench.'
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**模型管理**：由**模型注册表**组件封装，其中包含存储和相关生命周期项目。输入主要来自训练作业和数据科学工作台。'
- en: '**Workflow management**: This is a component that allows the orchestration
    of the different systems. For example, it allows scheduling jobs and dependency
    management, enforcing the order of execution. For example, an inference batch
    job can only be executed after a training job. This can be achieved through the
    operating system using a Cron system or through more sophisticated workflow tools
    such as Airflow.'
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**工作流管理**：这是一个允许协调不同系统的组件。例如，它允许安排作业和依赖关系管理，强制执行执行顺序。例如，推理批处理作业只能在训练作业之后执行。这可以通过操作系统使用Cron系统或通过更复杂的流程工具（如Airflow）来实现。'
- en: We will next briefly touch on how we will realize the ideas outlined in this
    section with **MLflow**.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 我们接下来将简要介绍我们将如何使用**MLflow**实现本节概述的想法。
- en: MLflow and other ecosystem tools
  id: totrans-134
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: MLflow和其他生态系统工具
- en: MLflow is a tool that was created by the open source community to address a
    gap in open systems for ML systems, focused on reproducibility, model management,
    and deployment. MLflow is by no means a complete tool; it needs other components
    and is a central part of an ML solution when its strengths are leveraged.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: MLflow是由开源社区创建的一个工具，旨在解决开放系统中ML系统的一个空白，专注于可重复性、模型管理和部署。MLflow绝对不是一个完整的工具；它需要其他组件，当其优势得到利用时，它是ML解决方案的一个核心部分。
- en: In recent years, systems such as **Kubeflow** have been emerging in the Kubernetes
    world to help manage the infrastructure side of ML systems and being the actual
    deployment environment.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 近年来，在Kubernetes世界中出现了如**Kubeflow**之类的系统，旨在帮助管理ML系统的基础设施方面，并作为实际的部署环境。
- en: '**Minio** is a storage system that ships with Kubeflow that will be used as
    an agnostic storage mechanism for metadata and datasets and provides an abstraction
    for storage on both cloud and local environments.'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: '**Minio**是Kubeflow附带的一个存储系统，它将用作元数据和数据集的无差别存储机制，并为云和本地环境上的存储提供抽象。'
- en: Having identified best practices in the industry with regards to ML platforms,
    outlining our requirements, and, in this section, architecting our ML platform,
    we will spend the next four chapters of the book building each of the components
    of our platform.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 在确定了关于ML平台行业的最佳实践、概述了我们的需求，并在本节中设计了我们的ML平台架构后，我们将用本书的接下来的四章来构建我们平台的所有组件。
- en: Summary
  id: totrans-139
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we introduced the concepts involved in architecting ML systems,
    mapped stakeholders, identified common issues and best practices, and outlined
    the initial architecture. We identified critical building blocks of an ML systems
    architecture on the data layer and modeling and inference layer. The interconnection
    between the components was stressed and a specification of features was outlined.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们介绍了构建机器学习系统所涉及的概念，映射了利益相关者，确定了常见问题和最佳实践，并概述了初始架构。我们在数据层和建模与推理层上确定了机器学习系统架构的关键构建块。强调了组件之间的互连，并概述了功能规格。
- en: We also addressed how MLflow can be leveraged in your ML platform and the shortcomings
    that can be complemented by other reference tools.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还讨论了如何在您的机器学习平台上利用 MLflow 以及其他参考工具可以补充的不足之处。
- en: In the next chapters and section of the book, we will focus on applying the
    concepts learned so far to real-life systems and we will practice by implementing
    the architecture of the PsyStock ML platform. We will have one chapter dedicated
    to each component, starting from specification up to the implementation of the
    component with practical examples.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书的下一章节和部分中，我们将专注于将到目前为止学到的概念应用于实际系统，并通过实现 PsyStock 机器学习平台的架构来实践。我们将为每个组件设立一个章节，从规格说明开始，直到包含实际示例的组件实现。
- en: Further reading
  id: totrans-143
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'In order to further your knowledge, you can consult the documentation at the
    following links:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 为了进一步扩展您的知识，您可以查阅以下链接中的文档：
- en: '[https://www.mlflow.org/docs/latest/models.html](https://www.mlflow.org/docs/latest/models.html)'
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://www.mlflow.org/docs/latest/models.html](https://www.mlflow.org/docs/latest/models.html)'
- en: High interest of technical debt – [https://papers.nips.cc/paper/2015/file/86df7dcfd896fcaf2674f757a2463eba-Paper.pdf](https://papers.nips.cc/paper/2015/file/86df7dcfd896fcaf2674f757a2463eba-Paper.pdf)
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 技术债务的高度关注 – [https://papers.nips.cc/paper/2015/file/86df7dcfd896fcaf2674f757a2463eba-Paper.pdf](https://papers.nips.cc/paper/2015/file/86df7dcfd896fcaf2674f757a2463eba-Paper.pdf)
- en: '**CS 329S**: ML systems design, *Chip Huyen* – [https://cs329s.stanford.edu](https://cs329s.stanford.edu),
    2021'
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**CS 329S**: 机器学习系统设计，*奇普·黄* – [https://cs329s.stanford.edu](https://cs329s.stanford.edu)，2021'
