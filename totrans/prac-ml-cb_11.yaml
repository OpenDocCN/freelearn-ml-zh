- en: Chapter 11. Deep Learning
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第11章 深度学习
- en: 'In this chapter, we will cover the following recipe:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将介绍以下内容：
- en: Recurrent neural networks - predicting periodic signals
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 循环神经网络 - 预测周期信号
- en: Introduction
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: Most of the machine learning algorithms work well due to predefined representations
    and input features. Machine learning algorithms optimize weights to best make
    a final prediction, while representation learning attempt to automatically learn
    good features or representations. Deep learning algorithms attempt to learn at
    multiple levels of representation by increasing complexity. Deep architectures
    are composed of multiple levels of non-linear operations, such as neural nets
    with many hidden layers. The main goal of deep learning techniques is to learn
    feature hierarchies. Deep learning techniques can be divided into three major
    classes; deep networks for unsupervised or generative learning, deep networks
    for supervised learning and hybrid deep networks
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数机器学习算法由于预定义的表示和输入特征而表现良好。机器学习算法通过优化权重来最佳地做出最终预测，而表示学习试图自动学习良好的特征或表示。深度学习算法通过增加复杂性来尝试在多个表示级别上学习。深度架构由多个非线性行为级别组成，例如具有许多隐藏层的神经网络。深度学习技术的目标主要是学习特征层次。深度学习技术可以分为三大类；用于无监督或生成学习的深度网络，用于监督学习的深度网络和混合深度网络
- en: Recurrent neural networks - predicting periodic signals
  id: totrans-5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 循环神经网络 - 预测周期信号
- en: Oscillators are circuits that produce specific, periodic waveforms such as square,
    triangular, sawtooth, and sinusoidal. In order to generate output, oscillators
    generally use some form of active device-lamp, which is surrounded by resistors,
    capacitors, and inductors. Two main classes of oscillators are relaxation and
    sinusoidal. Triangular, sawtooth and other non-sinusoidal waveforms are generated
    using relaxation oscillators, while sinusoidal oscillators consist of amplifiers
    with external components to generate oscillation. Normally, no harmonics are present
    in pure sine waves and they consist of a single frequency.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 振荡器是产生特定、周期性波形的电路，如方波、三角波、锯齿波和正弦波。为了生成输出，振荡器通常使用某种形式的主动设备-灯，它被电阻器、电容器和电感器所包围。振荡器的两种主要类型是弛豫振荡器和正弦振荡器。三角波、锯齿波和其他非正弦波形是通过弛豫振荡器产生的，而正弦振荡器由外部组件和放大器组成，以产生振荡。通常，纯正弦波中不含有谐波，它们只包含一个频率。
- en: Getting ready...
  id: totrans-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作...
- en: The task is to predict a cosine from a noisy sine wave. 5Hz frequency waves
    are used for the sine wave with some normally distributed noise and a smooth cosine
    wave. The dataset created is a set of 10 sequences, each of which consists of
    40 observations.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 任务是从一个带噪声的正弦波中预测余弦波。使用5Hz频率的正弦波，其中包含一些正态分布的噪声和一个平滑的余弦波。创建的数据集是一组10个序列，每个序列包含40个观测值。
- en: How to do it...
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'The following packages need to be loaded as the first step to be carried out:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 需要在第一步加载以下包：
- en: '[PRE0]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Setting the initial seed as a random number for the purpose of reproducibility:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 将初始种子设置为随机数，以实现可重复性：
- en: '[PRE1]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Initializing the required frequency:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 初始化所需的频率：
- en: '[PRE2]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Creating the vector required:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 创建所需的向量：
- en: '[PRE3]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Generating sequences: The `seq()` function generates regular sequences. `0.005`
    is the starting value while `2` is the ending value. `by=0.005` determines the
    incremental sequence:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 生成序列：`seq()`函数生成常规序列。`0.005`是起始值，`2`是结束值。`by=0.005`确定增量序列：
- en: '[PRE4]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Generating `sin` and `cos` values:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 生成`sin`和`cos`值：
- en: '[PRE5]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Generating samples of time series: The `matrix()` function creates a matrix
    from `x` and `y` values. `nrow = 40` indicates the number of rows required:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 生成时间序列样本：`matrix()`函数从`x`和`y`值创建矩阵。`nrow = 40`表示所需的行数：
- en: '[PRE6]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Plotting the noisy wave:. The `plot()` function is a generic function for the
    plotting of R objects. The `as.vector(X)` data frame is passed as a function value.
    `type=''l''` signifies lines:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 绘制带噪声的波形：`plot()`函数是用于绘制R对象的通用函数。`as.vector(X)`数据框作为函数值传递。`type='l'`表示线条：
- en: '[PRE7]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'The result is as follows:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![How to do it...](img/image_11_001.jpg)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![如何做...](img/image_11_001.jpg)'
- en: '[PRE8]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'The result is as follows:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![How to do it...](img/image_11_002.jpg)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![如何做...](img/image_11_002.jpg)'
- en: 'Standardizing the values of `X`. The range of values lies between 0 and 1:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 标准化`X`的值。值的范围在0到1之间：
- en: '[PRE9]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Printing the values of `X`:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 打印`X`的值：
- en: '[PRE10]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'The result is as follows:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![How to do it...](img/image_11_003.jpg)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![如何做...](img/image_11_003.jpg)'
- en: 'Standardizing the values of `Y`. The range of values lies between 0 and 1:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 标准化 `Y` 的值。值的范围介于 0 和 1 之间：
- en: '[PRE11]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Printing the values of `X`:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 打印 `X` 的值：
- en: '[PRE12]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'The result is as follows:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![How to do it...](img/image_11_004.jpg)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![如何操作...](img/image_11_004.jpg)'
- en: 'Transposing the values of `X` and `Y`:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 转置 `X` 和 `Y` 的值：
- en: '[PRE13]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Creating training and testing sets:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 创建训练集和测试集：
- en: '[PRE14]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Training the recurrent neural network. `Y = Y[train,]` signifies an array of
    output values. `X = X[train,]` signifies an array of input values. `learningrate
    = 0.05` means the rate to be applied for weight iteration. `hidden_dim = 16` is
    the dimension of hidden layers. `numepochs = 1500` is the number of times the
    whole dataset undergoes training.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 训练循环神经网络。`Y = Y[train,]` 表示输出值的数组。`X = X[train,]` 表示输入值的数组。`learningrate = 0.05`
    表示权重迭代的速率。`hidden_dim = 16` 是隐藏层的维度。`numepochs = 1500` 是整个数据集进行训练的次数。
- en: 'This phase will take time. The time taken depends on the learning rate, the
    number of dimensions, and the number of times the whole dataset undergoes training:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 这个阶段将花费时间。所需时间取决于学习率、维度数量以及整个数据集进行训练的次数：
- en: '[PRE15]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'The result is as follows:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![How to do it...](img/image_11_005.jpg)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![如何操作...](img/image_11_005.jpg)'
- en: 'Predicting the output of the recurrent neural network:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 预测循环神经网络（Recurrent Neural Network）的输出：
- en: '[PRE16]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Plotting the **Actual values vs the Predicted values**. The output constitutes
    the training set and the testing set:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 绘制 **实际值与预测值** 的对比图。输出构成训练集和测试集：
- en: '[PRE17]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'The result is as follows:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![How to do it...](img/image_11_006.jpg)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![如何操作...](img/image_11_006.jpg)'
- en: '[PRE18]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'The result is as follows:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![How to do it...](img/image_11_007.jpg)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![如何操作...](img/image_11_007.jpg)'
- en: 'Plotting the **Actual values vs the Predicted values**. The output constitutes
    the testing set only:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 绘制 **实际值与预测值** 的对比图。输出仅构成测试集：
- en: '[PRE19]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'The result is as follows:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![How to do it...](img/image_11_008.jpg)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![如何操作...](img/image_11_008.jpg)'
- en: '[PRE20]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'The result is as follows:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![How to do it...](img/image_11_009.jpg)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![如何操作...](img/image_11_009.jpg)'
