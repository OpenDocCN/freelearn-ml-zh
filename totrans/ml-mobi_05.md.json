["```py\npip install scikit-learn\npip install numpy\npip install pandas\n```", "```py\npip install -U coremltools\n```", "```py\n# importing required packages\n import numpy as np\n```", "```py\nimport pandas as pd\n from pandas.core import series\n```", "```py\nimport coremltools\n from coremltools.converters.sklearn import _linear_regression\n```", "```py\nfrom sklearn import datasets, linear_model\n from sklearn.metrics import mean_squared_error, r2_score\n```", "```py\nboston = datasets.load_boston()\n```", "```py\n bos = pd.DataFrame(boston.data)\n```", "```py\n\n bos.columns = boston.feature_names\n```", "```py\nbos['price'] = boston.target\n```", "```py\n x = bos.drop('price', axis=1)\n```", "```py\n y = bos.price\n```", "```py\n X_train,X_test,Y_train,Y_test = sklearn.model_selection.train_test_split(x,y,test_size=0.3,random_state=5)\n```", "```py\n lm = sklearn.linear_model.LinearRegression() \n```", "```py\n lm.fit(X_train, Y_train)\n```", "```py\nY_pred = lm.predict(X_test)\n```", "```py\nmse = sklearn.metrics.mean_squared_error(Y_test, Y_pred)\nprint(mse);\n```", "```py\n model = coremltools.converters.sklearn.convert(\n     sk_obj=lm,input_features=boston.feature_names,\n     output_feature_names='price')\n```", "```py\n model.save('HousePricer.mlmodel')\n```", "```py\n//  ViewController.swift\nimport UIKit\nimport CoreML\nclass ViewController: UIViewController {\n    let model = HousePricer()\n```", "```py\n @IBOutlet weak var crim: UITextField!\n    @IBOutlet weak var zn: UITextField!\n    @IBOutlet weak var price: UILabel!\n    @IBOutlet weak var b: UITextField!\n    @IBOutlet weak var ptratio: UITextField!\n    @IBOutlet weak var medv: UITextField!\n    @IBOutlet weak var lstat: UITextField!\n    @IBOutlet weak var rad: UITextField!\n    @IBOutlet weak var tax: UITextField!\n    @IBOutlet weak var dis: UITextField!\n    @IBOutlet weak var age: UITextField!\n    @IBOutlet weak var rm: UITextField!\n    @IBOutlet weak var nox: UITextField!\n    @IBOutlet weak var chas: UITextField!\n    @IBOutlet weak var indus: UITextField!\n    override func didReceiveMemoryWarning() {\n        super.didReceiveMemoryWarning()\n        // Dispose of any resources that can be recreated.\n    }\n    override func viewDidLoad() {\n        super.viewDidLoad();\n        updated(rad);\n    }\n    @IBAction func updated(_ sender: Any) {\n        guard let modeloutput = try? model.prediction(CRIM: Double(crim.text!)!, ZN: Double(zn.text!)!, INDUS: Double(indus.text!)!, CHAS: Double(chas.text!)!, NOX: Double(nox.text!)!, RM: Double(rm.text!)!, AGE: Double(age.text!)!, DIS: Double(dis.text!)!, RAD: Double(rad.text!)!, TAX: Double(tax.text!)!, PTRATIO: Double(ptratio.text!)!, B: Double(b.text!)!, LSTAT: Double(lstat.text!)!) else {\n            fatalError(\"unexpected runtime error\")\n     }\n        price.text = \"$\" + String(format: \"%.2f\",modeloutput.price);\n    }\n}\n```"]