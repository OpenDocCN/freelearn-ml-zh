["```py\n > install.packages(\"depmixS4\")\n > install.packages(\"quantmod\")\n > install.packages(\"ggplot2\")\n > library(depmixS4)\n > library(quantmod)\n > library(ggplot2)\n\n```", "```py\n> EuroUSD <- read.csv(\"d:/EURUSD1d.csv\", header = TRUE)\n\n```", "```py\n> head(EuroUSD)\n\n```", "```py\n> summary(EuroUSD)\n\n```", "```py\n> str(EuroUSD)\n\n```", "```py\n> Date <- as.character(EuroUSD[,1])\n\n```", "```py\n> DateTimeSeries <- as.POSIXlt(Date, format = \"%Y.%m.%d %H:%M:%S\")\n\n```", "```py\n> TimeSeriesData <- data.frame(EuroUSD[,2:5], row.names = DateTimeSeries)\n\n```", "```py\n> head(TimeSeriesData)\n\n```", "```py\n> TimeSeriesData <- as.xts(TimeSeriesData)\n\n```", "```py\n> ATRindicator <- ATR(TimeSeriesData[,2:4],n=14)\n\n```", "```py\n> head(ATRindicator)\n\n```", "```py\n> TrueRange <- ATRindicator[,2]\n\n```", "```py\n> head(TrueRange)\n\n```", "```py\n> LogReturns <- log(EuroUSD$Close) - log(EuroUSD$Open)\n\n```", "```py\n> summary(LogReturns)\n\n```", "```py\n> HMMModel <- data.frame(LogReturns, TrueRange)\n\n```", "```py\n> HMMModel <- HMMModel[-c(1:14),]\n\n```", "```py\n> head(HMMModel)\n\n```", "```py\n> colnames(HMMModel) <- c(\"LogReturns\",\"TrueRange\")\n\n```", "```py\n> colnames(HMMModel)\n\n```", "```py\n> set.seed(1)\n\n```", "```py\n> HMM <- depmix(list(LogReturns~1, TrueRange~1), data = HMMModel, nstates=3, family=list(gaussian(), gaussian()))\n\n```", "```py\n> HMMfit <- fit(HMM, verbose = FALSE)\n\n```", "```py\n> print(HMMfit)\n\n```", "```py\n> summary(HMMfit)\n\n```", "```py\n> HMMstate <- posterior(HMMfit)\n\n```", "```py\n> head(HMMstate)\n\n```", "```py\n > DFIndicators <- data.frame(DateTimeSeries, LogReturns, TrueRange)\n > DFIndicatorsClean <- DFIndicators[-c(1:14), ]\n\n```", "```py\n> Plot1Data <- data.frame(DFIndicatorsClean, HMMstate$state)\n\n```", "```py\n > LogReturnsPlot <- ggplot(Plot1Data,aes(x=Plot1Data[,1],y=Plot1Data[,2]))+geom_line(color=\"darkred\")+labs(,y=\"Log Return Values\",x=\"Date\")\n > LogReturnsPlot\n\n```", "```py\n > install.packages(\"depmixS4\")\n > install.packages(\"quantmod\")\n\n```", "```py\n > library(\"depmixS4 \")\n > library(\"quantmod\")\n > set.seed(1)\n\n```", "```py\n> getSymbols( \"^GSPC\", from=\"2004-01-01\" )\n\n```", "```py\n> GSPCDiff = diff( log( Cl( GSPC ) ) )\n\n```", "```py\n> str(GSPCDiff)\n\n```", "```py\n> head(GSPCDiff)\n\n```", "```py\n> returns = as.numeric(GSPCDiff)\n\n```", "```py\n> plot(GSPCDiff)\n\n```", "```py\n > hmm2states <- depmix(returns ~ 1, family = gaussian(), nstates = 2, data=data.frame(returns=returns))\n > hmm2states\n\n```", "```py\n> hmmfit2states <- fit(hmm2states, verbose = FALSE)\n\n```", "```py\n> hmmfit2states\n\n```", "```py\n> PosteriorProbs <- posterior(hmmfit2states)\n\n```", "```py\n> head (PosteriorProbs)\n\n```", "```py\n> plot(returns, type='l', main='Regime Detection', xlab='No of Observations', ylab='Returns')\n\n```", "```py\n> matplot(PosteriorProbs[,-1], type='l', main='Regime Posterior Probabilities', xlab='No of Observations', ylab='Probability')\n\n```", "```py\n > hmm3states <- depmix(returns ~ 1, family = gaussian(), nstates = 3, data=data.frame(returns=returns))\n > hmm3states\n\n```", "```py\n> hmmfit3states <- fit(hmm3states, verbose = FALSE)\n\n```", "```py\n> PosteriorProbs <- posterior(hmmfit3states)\n\n```", "```py\n> head(PosteriorProbs)\n\n```", "```py\n> plot(returns, type='l', main='Regime Detection', xlab='No of Observations', ylab='Returns')\n\n```", "```py\n> matplot(PosteriorProbs[,-1], type='l', main='Regime Posterior Probabilities', xlab='No of Observations', ylab='Probability')\n\n```", "```py\n    > hmm4states <- depmix(returns ~ 1, family = gaussian(), nstates = 4, data=data.frame(returns=returns))\n    > hmm4states\n\n```", "```py\n> hmmfit4states <- fit(hmm4states, verbose = FALSE)\n\n```", "```py\n    > PosteriorProbs <- posterior(hmmfit4states)    > plot(returns, type='l', main='Regime Detection', xlab='No of Observations', ylab='Returns')\n\n```", "```py\n> matplot(PosteriorProbs[,-1], type='l', main='Regime Posterior Probabilities', xlab='No of Observations', ylab='Probability')\n\n```"]