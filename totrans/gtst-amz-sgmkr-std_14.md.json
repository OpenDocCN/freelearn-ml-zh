["```py\n    # Line 209 in pipeline.py\n    step_process = ProcessingStep(\n        name=\"PreprocessAbaloneData\",\n        processor=sklearn_processor,\n        outputs=[\n            ProcessingOutput(output_name=\"train\", source=\"/opt/ml/processing/train\"),\n            ProcessingOutput(output_name=\"validation\", source=\"/opt/ml/processing/validation\"),\n            ProcessingOutput(output_name=\"test\", source=\"/opt/ml/processing/test\"),\n        ],\n        code=os.path.join(BASE_DIR, \"preprocess.py\"),\n        job_arguments=[\"--input-data\", input_data],\n    )\n    ```", "```py\n    # Line 238\n    data_quality_check_config = DataQualityCheckConfig(\n    baseline_dataset=step_process.properties.ProcessingOutputConfig.Outputs[\"train\"].S3Output.S3Uri,\n        dataset_format=DatasetFormat.csv(header=False, output_columns_position=\"START\"),\n        output_s3_uri=Join(on='/', values=['s3:/', default_bucket, base_job_prefix, ExecutionVariables.PIPELINE_EXECUTION_ID, 'dataqualitycheckstep'])\n    )\n    data_quality_check_step = QualityCheckStep(\n        name=\"DataQualityCheckStep\",\n        skip_check=skip_check_data_quality,\n        register_new_baseline=register_new_baseline_data_quality,\n        quality_check_config=data_quality_check_config,\n        check_job_config=check_job_config,\n    supplied_baseline_statistics=supplied_baseline_statistics_data_quality,\n    supplied_baseline_constraints=supplied_baseline_constraints_data_quality,\n        model_package_group_name=model_package_group_name\n    )\n    ```", "```py\n    data_bias_check_config = DataBiasCheckConfig(\n        data_config=data_bias_data_config,\n        data_bias_config=data_bias_config,\n    )\n    data_bias_check_step = ClarifyCheckStep(\n        name=\"DataBiasCheckStep\",\n        clarify_check_config=data_bias_check_config,\n        check_job_config=check_job_config,\n        skip_check=skip_check_data_bias,\n        register_new_baseline=register_new_baseline_data_bias,\n        model_package_group_name=model_package_group_name\n    )\n    ```", "```py\n    # Line 326\n    step_train = TrainingStep(\n        name=\"TrainAbaloneModel\",\n        depends_on=[\"DataQualityCheckStep\", \"DataBiasCheckStep\"],\n        estimator=xgb_train,\n        inputs={\n            \"train\": TrainingInput(\n    s3_data=step_process.properties.ProcessingOutputConfig.Outputs[\"train\"].S3Output.S3Uri,\n                content_type=\"text/csv\",\n            ),\n            \"validation\": TrainingInput(\n    s3_data=step_process.properties.ProcessingOutputConfig.Outputs[\"validation\"].S3Output.S3Uri,\n                content_type=\"text/csv\",\n            ),\n        },\n    )\n    ```", "```py\n    # Line 346\n    model = Model(\n        image_uri=image_uri,\n    model_data=step_train.properties.ModelArtifacts.S3ModelArtifacts,\n        sagemaker_session=sagemaker_session,\n        role=role,\n    )\n    inputs = CreateModelInput(\n        instance_type=\"ml.m5.large\",\n        accelerator_type=\"ml.eia1.medium\",\n    )\n    step_create_model = CreateModelStep(\n        name=\"AbaloneCreateModel\",\n        model=model,\n        inputs=inputs,\n    )\n    ```", "```py\n    # Line 364\n    transformer = Transformer(\n        model_name=step_create_model.properties.ModelName,\n        instance_type=\"ml.m5.xlarge\",\n        instance_count=1,\n        accept=\"text/csv\",\n        assemble_with=\"Line\",\n        output_path=f\"s3://{default_bucket}/AbaloneTransform\",\n    )\n    step_transform = TransformStep(\n        name=\"AbaloneTransform\",\n        transformer=transformer,\n        inputs=TransformInput(       data=step_process.properties.ProcessingOutputConfig.Outputs[\"test\"].S3Output.S3Uri,\n        ...)\n    )\n    ```", "```py\nmodel_quality_check_config = ModelQualityCheckConfig(\n    baseline_dataset=step_transform.properties.TransformOutput.S3OutputPath,\n    dataset_format=DatasetFormat.csv(header=False),\n    output_s3_uri=Join(on='/', values=['s3:/', default_bucket, base_job_prefix, ExecutionVariables.PIPELINE_EXECUTION_ID, 'modelqualitycheckstep']),\n    problem_type='Regression',\n    inference_attribute='_c0',\n    ground_truth_attribute='_c1'\n)\nmodel_quality_check_step = QualityCheckStep(\n    name=\"ModelQualityCheckStep\",\n    skip_check=skip_check_model_quality,\n    register_new_baseline=register_new_baseline_model_quality,\n    quality_check_config=model_quality_check_config,\n    check_job_config=check_job_config,\nsupplied_baseline_statistics=supplied_baseline_statistics_model_quality,\nsupplied_baseline_constraints=supplied_baseline_constraints_model_quality,\n    model_package_group_name=model_package_group_name\n)\n```", "```py\n    # Line 650\n    cond_lte = ConditionLessThanOrEqualTo(\n        left=JsonGet(\n            step=step_eval,\n            property_file=evaluation_report,\n            json_path=\"regression_metrics.mse.value\"\n        ),\n        right=6.0,\n    )\n    step_cond = ConditionStep(\n        name=\"CheckMSEAbaloneEvaluation\",\n        conditions=[cond_lte],\n        if_steps=[step_register],\n        else_steps=[],\n    )\n    ```", "```py\n    # Line 450\n    model_bias_check_step = ClarifyCheckStep(\n        name=\"ModelBiasCheckStep\",\n        clarify_check_config=model_bias_check_config,\n        check_job_config=check_job_config,\n        skip_check=skip_check_model_bias,\n        register_new_baseline=register_new_baseline_model_bias,\n    supplied_baseline_constraints=supplied_baseline_constraints_model_bias,\n        model_package_group_name=model_package_group_name\n    ) \n    # Line 494\n    model_explainability_check_step = ClarifyCheckStep(\n        name=\"ModelExplainabilityCheckStep\",\n        clarify_check_config=model_explainability_check_config,\n        check_job_config=check_job_config,\n        skip_check=skip_check_model_explainability,\n    register_new_baseline=register_new_baseline_model_explainability,\n    supplied_baseline_constraints=supplied_baseline_constraints_model_explainability,\n        model_package_group_name=model_package_group_name\n    )\n    ```", "```py\n    # Line 635\n    step_register = RegisterModel(\n        name=\"RegisterAbaloneModel\",\n        estimator=xgb_train,\n    model_data=step_train.properties.ModelArtifacts.S3ModelArtifacts,\n        content_types=[\"text/csv\"],\n        response_types=[\"text/csv\"],\n        inference_instances=[\"ml.t2.medium\", \"ml.m5.large\"],\n        transform_instances=[\"ml.m5.large\"],\n        model_package_group_name=model_package_group_name,\n        approval_status=model_approval_status,\n        model_metrics=model_metrics,\n        drift_check_baselines=drift_check_baselines\n    )\n    ```", "```py\n    # Line 666\n    pipeline = Pipeline(\n        name=pipeline_name,\n        parameters=[\n            processing_instance_type,\n            processing_instance_count,\n            ...],\n        steps=[step_process, data_quality_check_step, data_bias_check_step, step_train, step_create_model, step_transform, model_quality_check_step, model_bias_check_step, model_explainability_check_step, step_eval, step_cond],\n        sagemaker_session=sagemaker_session,\n    )\n    ```", "```py\n# Line 315 in pipeline.py\nxgb_train.set_hyperparameters(\n    objective=\"reg:linear\",\n    num_round=70, # was 50\n    max_depth=7, # was 7\n    eta=0.2,\n    gamma=4,\n    min_child_weight=6,\n    subsample=0.7,\n    silent=0)\n```"]