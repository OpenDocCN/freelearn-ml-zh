- en: Introduction to Computer Vision
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 计算机视觉简介
- en: Without a doubt, computer science, and especially the approach to implementing
    algorithms, has developed rapidly over the years. This is due to the fact that
    your personal computer and even the smartphone in your pocket are much faster
    and a lot cheaper than their predecessors. One of the most important fields in
    computer science that has been impacted by this change is the field of computer
    vision. The way computer vision algorithms are implemented and used has seen a
    dramatic change in recent years. This book, starting with this introductory chapter,
    is an effort to teach computer vision algorithms using the most up-to-date and
    modern technologies that are used to implement them.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 毫无疑问，计算机科学，尤其是实现算法的方法，在近年来发展迅速。这得益于你的个人电脑甚至你口袋里的智能手机比它们的 predecessors 快得多，也便宜得多。受这种变化影响的最重要计算机科学领域之一是计算机视觉领域。近年来，计算机视觉算法的实现和使用方式发生了巨大的变化。本书，从这一章开始，旨在使用最新和最现代的技术来教授计算机视觉算法。
- en: This is intended as a brief introductory chapter that lays out the foundation
    of concepts that will be used in many, if not all, of the computer vision algorithms
    available. Even if you are already familiar with computer vision and the basics,
    such as images, pixels, channels, and so on, it is still a good idea to go through
    this chapter briefly to make sure that you understand the fundamental concepts
    of computer vision and to refresh your memory.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 这旨在作为简要的入门章节，概述了将在许多（如果不是所有）计算机视觉算法中使用的概念基础。即使你已经熟悉计算机视觉和基础知识，如图像、像素、通道等，简要地浏览这一章也是一个好主意，以确保你理解计算机视觉的基本概念，并刷新你的记忆。
- en: In this chapter, we'll be starting with a brief introduction to the field of
    computer vision. We'll go through some of the most important industries where
    computer vision is used, with examples. After that, we'll directly dive into some
    basic computer vision concepts, starting with images. We'll learn what images
    are in terms of computer vision and what their building blocks are, too. During
    this process, we'll cover concepts such as pixels, depth, and channels, all of
    which are crucial to understanding and successfully working hands-on with computer
    vision algorithms.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将从计算机视觉领域的简要介绍开始。我们将探讨一些计算机视觉被广泛应用的最重要的行业，并举例说明。之后，我们将直接深入一些基本的计算机视觉概念，从图像开始。我们将学习在计算机视觉中图像是什么，以及它们的构建块是什么。在这个过程中，我们将涵盖像素、深度和通道等概念，这些对于理解和成功操作计算机视觉算法至关重要。
- en: 'By the end of this chapter, you will have learned about the following:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章结束时，你将了解以下内容：
- en: What computer vision is and where it is used?
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 什么是计算机视觉以及它在哪里被使用？
- en: What an image is in terms of computer vision?
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在计算机视觉中，图像是什么？
- en: Pixels, depth, and channels and their relationships
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 像素、深度和通道及其关系
- en: Technical requirements
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: As this is an introductory chapter, we are focusing solely on theory. There
    are, therefore, no technical requirements.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 由于这是一个入门章节，我们只关注理论。因此，没有技术要求。
- en: Understanding computer vision
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解计算机视觉
- en: Defining computer vision is not an easy task, and computer vision experts tend
    to disagree with each other when it comes to providing a textbook definition for
    it. Doing so is completely out of the scope and interest of this book, so we'll
    focus on a simple and practical definition that suits our purpose instead. Historically,
    computer vision has been synonymous with image processing, which essentially refers
    to the methods and technologies that take an image as input and produce an output
    image or a set of output values (or measurements) based on that input image, which
    is done after performing a set of processes. Fast forward to now and you'll notice
    that, when computer vision engineers talk about computer vision, what they mean,
    in most cases, is a concept relating to an algorithm that is able to mimic human
    vision, such as seeing (detecting) an object or a person in an image.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 定义计算机视觉不是一件容易的事情，计算机视觉专家在提供教科书定义时往往意见不一。这样做完全超出了本书的范围和兴趣，因此我们将专注于一个简单实用的定义，以满足我们的目的。从历史上看，计算机视觉与图像处理是同义的，本质上是指那些以图像为输入并基于该输入图像产生输出图像或一系列输出值（或测量值）的方法和技术，这些都是在执行一系列过程之后完成的。快进到现在，你会发现，当计算机视觉工程师谈论计算机视觉时，他们大多数情况下指的是与能够模仿人类视觉的概念相关的算法，例如在图像中看到（检测）物体或人。
- en: So, which definition are we to accept? The answer is quite simple—both. To put
    it in just a few words, computer vision refers to the algorithms, methods, and
    technologies that deal with digital visual data (or any data that can be visualized)
    in any way imaginable. Note that visual data in this sense does not mean just
    images taken using conventional cameras, but they might be, for instance, a graphical
    representation or elevation on a map, a heat intensity map, or any data that can
    be visualized regardless of its real-world meaning.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，我们应该接受哪种定义呢？答案是相当简单的——两者都要。用简短的话来说，计算机视觉指的是以任何可想象的方式处理数字视觉数据（或任何可以可视化的数据）的算法、方法和技术。请注意，这里的视觉数据并不意味着只是使用传统相机拍摄的照片，但它们可能是地图上的图形表示或高程，热强度图，或任何可以无论其现实世界意义如何可视化的数据。
- en: 'With this definition, all of the following questions—as well as many more—can
    be solved with computer vision:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 根据这个定义，以下所有问题——以及更多问题——都可以通过计算机视觉来解决：
- en: How do we soften or sharpen an image?
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们如何使图像变柔和或变锐利？
- en: How do we reduce the size of an image?
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们如何减小图像的大小？
- en: How do we increase or decrease the brightness of an image?
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们如何增加或减少图像的亮度？
- en: How do we detect the brightest region in an image?
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们如何检测图像中最亮的区域？
- en: How do we detect and track a face in a video (or a series of consecutive images)?
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们如何在视频中（或一系列连续的图像中）检测和跟踪人脸？
- en: How do we recognize faces in a video feed from a security camera?
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们如何在安全摄像头的视频流中识别人脸？
- en: How do we detect motion in a video?
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们如何在视频中检测运动？
- en: In modern computer vision science, image processing is usually a subcategory
    of computer vision methods and algorithms dealing with image filtering, transformation,
    and so on. Still, many use the terms computer vision and image processing interchangeably.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在现代计算机视觉科学中，图像处理通常是计算机视觉方法和算法的一个子类别，涉及图像滤波、转换等。尽管如此，许多人还是将计算机视觉和图像处理这两个术语互换使用。
- en: In this day and age, computer vision is one of the hottest topics in the computer
    science and software industry. The reason for this lies in the fact that it is
    used in a variety of ways, whether it's bringing to life the ideas for applications,
    digital devices, or industrial machines that handle or simplify a wide range of
    tasks that are usually expected from the human eye. There are a lot of working
    examples for what we just mentioned, which vary across a wide spectrum of industries,
    including the automotive, motion picture, biomedical devices, defense, photo editing
    and sharing tools, and video game industries. We are going to talk about just
    a couple of these examples and leave the rest of them for you to research.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个时代，计算机视觉是计算机科学和软件行业中最热门的话题之一。其原因是它被用于各种方式，无论是使应用、数字设备或工业机器中的想法栩栩如生，还是处理或简化通常期望由人眼完成的广泛任务。我们提到的这些例子有很多实际应用，它们跨越了广泛的行业，包括汽车、电影、生物医学设备、国防、照片编辑和分享工具以及视频游戏行业。我们将讨论其中的一些例子，其余的留给你们去研究。
- en: Computer vision is used persistently in the automotive industry to improve the
    safety and functionality of modern vehicles. Vehicles are able to detect traffic
    signs and warn the driver about a speed limit breach or even detect lanes and
    obstacles on the road and notify drivers about possible hazards. There is no end
    to the number of practical examples we can present about how computer vision can
    be used to modernize the automotive industry—and that's without touching on self-driving
    cars. Major tech companies are investing a huge amount of resources and are even
    sharing some of their achievements with the open source community. As you'll see
    in the final chapters of this book, we'll make use of some of them, especially
    for the real-time detection of multiple objects of multiple types.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 计算机视觉在汽车行业中持续使用，以提高现代车辆的安全性和功能性。车辆能够检测交通标志，警告驾驶员超速或甚至检测道路上的车道和障碍物，并通知驾驶员可能的危险。我们可以提供的关于计算机视觉如何使汽车行业现代化的实际例子是无穷无尽的——这还不包括自动驾驶汽车。主要科技公司正在投入大量资源，甚至与开源社区分享他们的一些成果。正如你在本书的最后一章中看到的，我们将利用其中的一些成果，特别是用于实时检测多种类型的多重对象。
- en: 'The following image depicts some of the objects, symbols, and areas of interest
    for the automotive industry, as images that are commonly seen through the cameras
    mounted on vehicles:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的图像展示了汽车行业的一些常见物体、符号和感兴趣的区域，这些图像是通过安装在车辆上的摄像头看到的：
- en: '![](img/00005.jpeg)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![图像示例](img/00005.jpeg)'
- en: Another great example of an industry on the verge of a technological revolution
    is the biomedical industry. Not only have the imaging methods of human organs
    and body parts undergone a great deal of enhancement, but the way these images
    are interpreted and visualized has also been improved by computer vision algorithms.
    Computers are used to detect cancerous tissues in images taken by microscopes
    with an extremely high level of precision. There are also promising and emerging
    results from robots that are able to perform surgery, for example.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个即将迎来技术革命的行业是生物医学行业。不仅人体器官和身体部位的成像方法得到了极大的改进，而且这些图像的解释和可视化也通过计算机视觉算法得到了改善。计算机被用来在显微镜拍摄的图像中检测癌细胞组织，具有极高的精确度。还有来自能够进行手术的机器人的有希望和新兴的结果。
- en: 'The following image is an example of using computer vision to count a specific
    type of biological object of interest (cells, in this case) in various areas of
    tissue, scanned by a digital microscope:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的图像是使用计算机视觉在组织扫描区域中计数特定类型的生物对象（在这种情况下是细胞）的示例，这些组织是通过数字显微镜扫描的：
- en: '![](img/00006.jpeg)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![图像示例](img/00006.jpeg)'
- en: Besides the automotive and biomedical industries, computer vision is also used
    in thousands of mobile and desktop applications to perform many different tasks.
    It's a good idea to browse through online application stores on your smartphone
    to view some computer vision-related application examples. Do so, and you'll immediately
    realize that there is literally nothing but your imagination standing between
    you and your potential computer vision application ideas.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 除了汽车和生物医学行业，计算机视觉也被用于成千上万的移动和桌面应用程序中，以执行许多不同的任务。在你的智能手机上浏览在线应用商店，查看一些计算机视觉相关应用示例是个不错的主意。这样做，你将立即意识到，你与你的潜在计算机视觉应用想法之间，几乎只有想象力。
- en: Learning all about images
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 学习所有关于图像的知识
- en: 'Now, it''s time to cover the basics of computer vision, starting with images.
    So, what exactly is an image? In terms of computer vision, an image is simply
    a matrix, or in other words a 2D vector, with a valid number of rows, columns,
    and so on. This way of looking at an image simplifies not just the description
    of an image itself, but also all of its components, which are as follows:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，是时候介绍计算机视觉的基础知识了，从图像开始。那么，究竟什么是图像呢？在计算机视觉中，图像只是一个矩阵，或者说是一个二维向量，具有有效的行数、列数等等。这种看待图像的方式不仅简化了对图像本身的描述，还简化了其所有组件的描述，这些组件如下：
- en: The width of an image corresponds to the number of columns in the matrix.
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 图像的宽度对应于矩阵中的列数。
- en: The height of the image is the number of rows in the matrix.
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 图像的高度是矩阵中的行数。
- en: Each element of the matrix represents a pixel, which is the most basic component of
    an image. An **image** is a collection of pixels.
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 矩阵的每个元素代表一个像素，这是图像最基本的部分。**图像**是一系列像素的集合。
- en: Each pixel, or each element in the matrix, can contain one or more numeric values
    that correspond to the visual representation (color, brightness, and so on) of
    it. We'll learn more about this later when we talk about color spaces in computer
    vision. However, it's important to note that each numeric value associated with
    a pixel represents a channel. For instance, pixels in a grayscale image are commonly
    represented using a single unsigned 8-bit integer value that varies between 0
    and 255; thus, a grayscale image is a single-channel image. In this form of representation,
    0 represents black and 255 represents white, while all other numbers correspond
    to a grayscale value. Another example is standard RGB image representation, in
    which each pixel is represented by three unsigned 8-bit integer values that vary
    between 0 and 255\. The three channels representing each pixel in RGB images correspond
    to the intensity values of red, blue, and green, which in combination can form
    any possible color. Such an image is known as a **three-channel image**.
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个像素，或者矩阵中的每个元素，可以包含一个或多个与它的视觉表示（颜色、亮度等）相对应的数值。我们将在讨论计算机视觉中的颜色空间时了解更多这方面的内容。然而，重要的是要注意，与每个像素相关联的每个数值代表一个通道。例如，灰度图像中的像素通常使用一个介于0到255之间的单无符号8位整数值来表示；因此，灰度图像是单通道图像。在这种表示形式中，0代表黑色，255代表白色，而所有其他数字对应于灰度值。另一个例子是标准的RGB图像表示，其中每个像素由三个介于0到255之间的无符号8位整数值表示。RGB图像中代表每个像素的三个通道对应于红色、蓝色和绿色的强度值，这三个值结合可以形成任何可能的颜色。这种图像被称为**三通道图像**。
- en: 'The following image depicts two zoomed-in versions of the same area from the
    same image in both a grayscale and colored (RGB) format. Notice how higher values
    in the grayscale image (on the left-hand side) correspond to brighter values and
    vice versa. Similarly, in the color image (on the right-hand side), you can see
    that the value of the red channel is quite high, which is consistent with the
    reddish color of that area, as well as the white channels:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图像展示了同一图像中同一区域的两个放大版本，一个是灰度格式，另一个是彩色（RGB）格式。注意灰度图像（左侧）中的较高值对应于较亮的值，反之亦然。同样，在彩色图像（右侧）中，你可以看到红色通道的值相当高，这与该区域的红色色调一致，以及白色通道：
- en: '![](img/00007.jpeg)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00007.jpeg)'
- en: 'In addition to what we mentioned previously, an image has a few more specifications,
    which are as follows:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 除了我们之前提到的内容之外，图像还有一些额外的规格，具体如下：
- en: Each pixel, or an element of the matrix, can be an integer or a floating-point
    number. It can be an 8-bit number, 16-bit, and so on. The type of the numeric
    value representing each pixel in conjunction with the number of channels resembles
    the depth of an image. For instance, a four-channel image which uses a 16-bit
    integer value to represent each channel would have a depth of 16 multiplied by
    4-bits, or 64-bits (or 4 bytes).
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个像素，或者矩阵中的每个元素，可以是一个整数或浮点数。它可以是一个8位数字，16位，等等。代表每个像素的数值类型以及通道数类似于图像的深度。例如，一个使用16位整数值来表示每个通道的四通道图像将具有16乘以4位的深度，或64位（或4字节）。
- en: The resolution of an image refers to the number of pixels in it. For instance,
    an image which has a width of 1920 and height of 1080 (as is the case in full-HD
    images) has a resolution of 1920 multiplied by 1080, which is a bit more than
    2 million pixels, or about 2 megapixels.
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 图像的分辨率指的是其中的像素数量。例如，宽度为1920像素、高度为1080像素（正如全高清图像的情况）的图像，其分辨率为1920乘以1080，这略多于200万像素，或者说大约是200万像素。
- en: 'It is all because of this form of representation of an image that it can be
    easily perceived as a mathematical entity, meaning many different types of algorithms
    can be designed to act or work on images. If we go back to the simplest representation
    of an image (a grayscale image), with a few simple examples we can see that most
    picture editing software (and computer vision algorithms) use this representation
    along with fairly simple algorithms and matrix operations to modify the image
    with ease. In the following image, a constant number (80, in our example) is simply
    added to each pixel in the input image (the middle image), which has made the
    resulting image brighter (the right-hand image). A number can also be subtracted
    from each pixel to make the resulting image darker (the left-hand image):'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 正是因为这种图像表示形式，它才能被轻易地视为一个数学实体，这意味着可以设计出许多不同类型的算法来作用于图像。如果我们回到图像最简单的表示形式（灰度图像），通过几个简单的例子，我们可以看到大多数图片编辑软件（以及计算机视觉算法）都使用这种表示形式，以及相当简单的算法和矩阵运算来轻松地修改图像。在以下图像中，一个常数（在我们的例子中是80）简单地加到输入图像（中间图像）的每个像素上，这使得结果图像变得更亮（右侧图像）。也可以从每个像素中减去一个数字，使结果图像变暗（左侧图像）：
- en: '![](img/00008.gif)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00008.gif)'
- en: For now, we'll only focus on the basic concepts of computer vision and not go
    into the implementation details of the preceding image modification example. We'll
    learn about this and many more image processing techniques and algorithms in the
    upcoming chapters.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将只关注计算机视觉的基本概念，而不会深入探讨前面图像修改示例的实现细节。我们将在接下来的章节中学习关于这一点以及许多其他图像处理技术和算法。
- en: The image properties mentioned in this section (width, height, resolution, depth,
    and channels) are extensively used in computer vision. For instance, in several
    cases, if an image processing algorithm is too complex and time-consuming, then
    the image can be resized to make it smaller so that less time is used to process
    it. Once processed, the results can then be mapped back to the original image
    size and displayed to the user. The same process also applies to depth and channels.
    If an algorithm only needs a specific channel of an image, you can either extract
    and process it separately or use the grayscale-converted version of an image.
    Note that, once the object detection algorithm has completed its job, you'll want
    to display the results over the original colored image. Having a correct understanding
    of these kinds of image properties will help you a lot when confronting various
    computer vision problems and when working with computer vision algorithms. Without
    further ado, let's move on to color spaces.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 本节中提到的图像属性（宽度、高度、分辨率、深度和通道）在计算机视觉中得到广泛使用。例如，在几种情况下，如果一个图像处理算法过于复杂且耗时，那么可以将图像调整大小以使其更小，从而减少处理所需的时间。一旦处理完毕，结果可以映射回原始图像大小并显示给用户。同样的过程也适用于深度和通道。如果一个算法只需要图像的特定通道，你可以提取并单独处理它，或者使用图像的灰度转换版本。请注意，一旦对象检测算法完成其工作，你将希望将结果显示在原始彩色图像上。对这些类型的图像属性有正确的理解将极大地帮助你在面对各种计算机视觉问题和与计算机视觉算法一起工作时。不再赘述，让我们继续讨论色彩空间。
- en: Color spaces
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 色彩空间
- en: 'Although its definition can vary, in general, a color space (sometimes referred
    to as a color model) is a method that is used for interpreting, storing, and reproducing
    a set of colors. Let''s break this down with an example—a grayscale color space.
    In a grayscale color space, each pixel is represented with a single 8-bit unsigned
    integer value that corresponds to brightness or gray-intensity of that pixel.
    This makes it possible to store 256 different levels of grayscale, in which zero
    corresponds to absolute black and 255 corresponds to the absolute white. In other
    words, the higher the value of a pixel, the brighter it is, and vice versa. The
    following image displays all possible colors that exist within the grayscale color
    space:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管其定义可能有所不同，但通常来说，色彩空间（有时也称为色彩模型）是一种用于解释、存储和重现一组色彩的方法。让我们用一个例子来分解这一点——灰度色彩空间。在灰度色彩空间中，每个像素用一个单一的8位无符号整数值表示，该值对应于该像素的亮度或灰度强度。这使得存储256种不同的灰度级别成为可能，其中0对应绝对黑色，255对应绝对白色。换句话说，像素的值越高，它就越亮，反之亦然。以下图像显示了灰度色彩空间中存在的所有可能的颜色：
- en: '![](img/00009.gif)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00009.gif)'
- en: 'Another commonly-used color space is RGB, in which each pixel is represented
    by three different 8-bit integer values that correspond to the red, green, and
    blue color intensity of that pixel. This color space is particularly known for
    being used in TVs, LCDs, and similar displays. You can check this out for yourself
    by looking at the surface of your monitor using a magnifier. It relies on the
    simple fact that all colors can be represented by combining various amounts of
    red, green, and blue. The following image depicts how all other colors (such as
    yellow or pink) between the three main colors are formed:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个常用的颜色空间是RGB，其中每个像素由三个不同的8位整数值表示，这些值对应于该像素的红色、绿色和蓝色强度。这种颜色空间特别因其被用于电视、LCD和类似显示器而闻名。你可以通过放大镜观察你的显示器表面来验证这一点。它依赖于这样一个简单的事实：所有颜色都可以通过组合不同量的红色、绿色和蓝色来表示。以下图像展示了三种主要颜色（如黄色或粉色）之间所有其他颜色是如何形成的：
- en: '![](img/00010.jpeg)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00010.jpeg)'
- en: An RGB image that has the same R, G, and B values in each of its individual
    pixels would result in a grayscale image. In other words, the same intensity of
    red, green, and blue would result in a shade of gray.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 一个在其每个单独像素中都具有相同的R、G和B值的RGB图像将产生一个灰度图像。换句话说，相同的红、绿、蓝强度将产生一种灰色。
- en: 'Another color space that is widely used in computer vision is the **HSV** (**Hue**,
    **Saturation**, and **Value**) color space. In this color space, each pixel is
    represented by three values for hue (the color), saturation (the color strength),
    and value (how bright or dark it is). Hue, as seen in the following image, can
    be a value between 0 and 360 (degrees), which represents the color of that pixel.
    For instance, zero and nearby degrees correspond to red and other similar colors:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个在计算机视觉中广泛使用的颜色空间是**HSV**（**色调**、**饱和度**和**亮度**）颜色空间。在这个颜色空间中，每个像素由三个值表示：色调（颜色）、饱和度（颜色的强度）和亮度（它是多亮或多暗）。如以下图像所示，色调可以是0到360（度）之间的值，它代表该像素的颜色。例如，0度和附近的度数对应于红色和其他类似颜色：
- en: '![](img/00011.jpeg)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00011.jpeg)'
- en: This color space is especially popular in computer vision detection and tracking
    algorithms that are based on the color of an object, as you'll see later on in
    this book. The reason for this is that the HSV color space allows us to work with
    colors regardless of how dark or bright they are. This is not easy to achieve
    with RGB and similar color spaces, as looking at an individual pixel channel value
    cannot tell us its color.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 这种颜色空间在基于物体颜色的计算机视觉检测和跟踪算法中特别受欢迎，正如你将在本书后面的内容中看到的。原因在于HSV颜色空间允许我们无论颜色有多暗或多亮都能处理颜色。使用RGB和类似颜色空间则难以实现这一点，因为查看单个像素通道的值并不能告诉我们它的颜色。
- en: 'The following image is another representation of the HSV color space, which
    shows the variation of hue (from left to right), saturation, and value in one
    image, thus producing all possible colors:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图像是HSV颜色空间的另一种表示，它展示了在同一图像中色调（从左到右）、饱和度和亮度值的变化，从而产生所有可能的颜色：
- en: '![](img/00012.jpeg)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00012.jpeg)'
- en: Besides the color spaces mentioned in this section, there are many other color
    spaces, each with their own use cases. For instance, the four channel **CMYK**
    color space (**Cyan**, **Maroon**, **Yellow**, and **Key**/**Black**) has proven
    to be most effective in printing systems.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 除了本节中提到的颜色空间外，还有很多其他的颜色空间，每个都有其特定的应用场景。例如，四通道**CMYK**颜色空间（**青色**、**朱红色**、**黄色**和**关键色/黑色**）在印刷系统中已被证明是最有效的。
- en: Make sure to learn about other popular color spaces from the internet and how
    they might be useful for any particular computer vision problem.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 请确保从互联网上了解其他流行的颜色空间以及它们可能对任何特定的计算机视觉问题有何用途。
- en: Input, process, and output
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 输入、处理和输出
- en: So, now that we know images are basically matrix-like entities that have essential
    properties such as width, height, element type, channels, depth, and so on, the
    only big question that remains is where do they come from, what happens to them,
    and where do they go?
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，既然我们知道图像基本上是具有宽度、高度、元素类型、通道、深度等基本属性的矩阵式实体，那么唯一剩下的大问题就是它们从何而来，发生了什么，又将去向何方？
- en: Let's break this down further with a simple photo gallery application as an
    example. Odds are, you have a smartphone that contains such an application by
    default. A photo gallery application usually allows you to take new pictures or
    videos using the built-in camera on your smartphone, use the previously-recorded
    files, apply filters on images, and even share them on social media, via email,
    or with your friends and family. This example, though it might look like a simple
    application when you are using it, contains all the crucial parts of a proper
    computer vision application.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们用一个简单的相册应用程序为例来进一步分解这个问题。很可能，你的智能手机上默认就有这样一个应用程序。相册应用程序通常允许你使用智能手机内置的相机拍摄新照片或视频，使用之前录制的文件，对图像应用过滤器，甚至通过社交媒体、电子邮件或与你的朋友和家人分享。虽然当你使用它时这个例子可能看起来很简单，但它包含了正确计算机视觉应用程序的所有关键部分。
- en: 'By taking this example as a pretext, we can say that images are provided by
    a wide range of different input devices based on the use case. Some of the most
    common image input devices are as follows:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 以这个例子为前提，我们可以这样说，图像是由各种不同的输入设备根据使用案例提供的。以下是一些最常见的图像输入设备：
- en: Image files stored on a disk, memory, a network, or any other accessible location.
    Note that stored image files can be raw (containing the exact image data) or encoded
    (such as JPG); nevertheless, they're still considered image files.
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 存储在磁盘、内存、网络或任何其他可访问位置的图像文件。请注意，存储的图像文件可以是原始的（包含确切的图像数据）或编码的（如JPG）；然而，它们仍然被认为是图像文件。
- en: Images captured by cameras. Note that cameras in this sense mean webcams on
    a personal computer, cameras on a smartphone, or any other professional photography
    device, digital microscope, telescope, and so on.
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由相机捕获的图像。请注意，这里的相机指的是个人电脑上的网络摄像头、智能手机上的相机或任何其他专业摄影设备、数字显微镜、望远镜等等。
- en: Consecutive or non-consecutive frames from a video file that are stored on a
    disk, memory, a network, and so on. Similar to image files, video files can be
    encoded, in which case a special type of software (called a **codec**) is needed
    to encode them before they can be used.
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 存储在磁盘、内存、网络等位置的连续或非连续的视频帧。与图像文件类似，视频文件可以是编码的，在这种情况下，需要一种特殊的软件（称为**编解码器**）来在它们可以使用之前对它们进行编码。
- en: Consecutive frames from a live video camera feed.
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 来自实时视频摄像头流的连续帧。
- en: After an image is read using an input device, the actual processing of it starts.
    This is probably the part of the computer vision process cycle that you are looking
    for in this book —and for good reason. This is where actual computer vision algorithms
    are used to extract values from an image, modify it in one way or another, or
    perform any type of computer vision task in general. This part is usually done
    by software on a given device.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 使用输入设备读取图像后，实际的图像处理过程就开始了。这可能是你在本书中寻找的计算机视觉过程周期的一部分——而且有很好的理由。这是实际使用计算机视觉算法从图像中提取值、以某种方式修改它，或者执行任何类型的计算机视觉任务的地方。这部分通常由特定设备上的软件完成。
- en: 'Now, the output of this whole process needs to be created. This part completely
    depends on the computer vision algorithm and the type of device that the computer
    vision process is running on, but in general, the following types of outputs are
    expected from computer vision algorithms:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，整个过程的输出需要被创建。这部分完全取决于计算机视觉算法和计算机视觉过程运行的设备类型，但一般来说，计算机视觉算法期望以下类型的输出：
- en: Numbers, shapes, graphs, or any other non-image type of output that is derived
    from the processed image. For instance, an algorithm that counts the number of
    people in an image needs to only output a single integer number or a graph representing
    the number of people that are found in consecutive video frames from a security
    camera.
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从处理后的图像中派生出的数字、形状、图表或其他非图像类型的输出。例如，一个计算图像中人数的算法只需要输出一个整数或一个表示从安全摄像头连续视频帧中找到的人数图表。
- en: Images or video files stored on a disk, memory, and similar devices. A typical
    example of this is the photo editing software on your phone or personal computer
    that allows you to record the modified image as a JPG or PNG file.
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 存储在磁盘、内存和类似设备上的图像或视频文件。一个典型的例子是你手机或个人电脑上的照片编辑软件，它允许你将修改后的图像保存为JPG或PNG文件。
- en: Images and video frames drawn and rendered on a display screen. Displays are
    usually controlled with a firmware (which might be on an operating system) that
    controls whatever is being shown on them.
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在显示屏幕上绘制和渲染图像和视频帧。显示器通常由固件（可能位于操作系统上）控制，该固件控制显示在其上的内容。
- en: Similar to input devices, a slightly different interpretation of an image output
    device will yield more results and entries (such as printers, plotters, video
    projectors, and so on). However, the preceding list is still sufficient as it
    covers the most basic and crucial types of output we'll be dealing with when working
    with computer vision algorithms.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 与输入设备类似，对图像输出设备的略微不同解释将产生更多结果和条目（例如打印机、绘图仪、视频投影仪等）。然而，前面的列表仍然足够，因为它涵盖了我们在处理计算机视觉算法时将遇到的最基本和最重要的输出类型。
- en: Computer vision frameworks and libraries
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 计算机视觉框架和库
- en: In order to build computer vision applications, we need a set of tools, a framework,
    or a library that supports the input, output, and the processing of images. The
    choice of a computer vision library is a very important one because you might
    end up in a position where you'll need to *reinvent the wheel* all by yourself.
    You may also end up writing functions and codes that will take up a lot of your
    resources and time, such as reading or writing an image in the format that you
    require.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 为了构建计算机视觉应用程序，我们需要一套工具、一个框架或一个支持图像输入、输出和处理的库。选择计算机视觉库是一个非常重要的决定，因为您可能会发现自己需要完全自己“重新发明轮子”。您也可能编写占用大量资源和时间的函数和代码，例如以您所需的格式读取或写入图像。
- en: 'In general, there are two main types of computer vision libraries that you
    can choose from when developing computer vision applications; they are as follows:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，在开发计算机视觉应用程序时，您可以从两种主要的计算机视觉库中选择；它们如下：
- en: '**Proprietary**: Proprietary computer vision libraries are usually well-documented
    and supported by the companies providing it, but they come at a price and are
    often aimed at a specific set of computer vision problems'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**专有**: 专有计算机视觉库通常由提供它的公司提供良好的文档和支持，但它们需要付费，并且通常针对一组特定的计算机视觉问题'
- en: '**Open source**: Open source libraries, on the other hand, usually cover a
    much wider range of computer vision related issues and they are free to use and
    explore'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**开源**: 相反，开源库通常涵盖更广泛的与计算机视觉相关的问题，并且可以免费使用和探索'
- en: You can search for many good examples of both proprietary and open source computer
    vision libraries online to compare them for yourself.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在网上找到许多专有和开源计算机视觉库的示例，以便您自己进行比较。
- en: 'The library that we''ll be using throughout this book is the **Open Source
    Computer Vision** library (**OpenCV**). OpenCV is a computer vision library with
    the following features:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中我们将使用的库是**开源计算机视觉库**（**OpenCV**）。OpenCV是一个具有以下特性的计算机视觉库：
- en: It is open source and free for use on academic or commercial projects
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它是开源的，并且可以免费用于学术或商业项目
- en: It supports C++, Python, and Java languages
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它支持C++、Python和Java语言
- en: It is cross-platform, which means it can be used to develop applications for
    Windows, macOS, Linux, Android, and iOS
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它是跨平台的，这意味着它可以用于开发Windows、macOS、Linux、Android和iOS的应用程序
- en: It is built in a modular fashion and it is fast, well-documented, and well-supported
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它以模块化方式构建，速度快，文档齐全，支持良好
- en: It is worth noting that OpenCV also uses a few third-party libraries to take
    care of various computer vision tasks. For instance, the FFmpeg library is used
    within OpenCV to deal with reading certain video file formats.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 值得注意的是，OpenCV还使用一些第三方库来处理各种计算机视觉任务。例如，FFmpeg库在OpenCV中被用于处理读取某些视频文件格式。
- en: Summary
  id: totrans-84
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we introduced the most basic concepts of computer vision science.
    We started the chapter by learning about computer vision as a term and its use
    cases, before taking a look at some of the industries that make extensive use
    of it. Then, we moved on to learn about images and their most crucial properties,
    namely pixels, resolution, channels, depth, and so on. We then discussed some
    of the most widely-used color spaces and learned how they affect the number of
    channels and other properties of an image. After that, we were presented with
    the common input and output devices used in computer vision and how computer vision
    algorithms and processes fit between the two. We ended the chapter with a very
    brief discussion on computer vision libraries and introduced our computer vision
    library of choice, which is OpenCV.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们介绍了计算机视觉科学的最基本概念。我们首先学习了计算机视觉作为一个术语及其用例，然后查看了一些广泛使用它的行业。然后，我们继续学习图像及其最重要的属性，即像素、分辨率、通道、深度等。然后，我们讨论了一些最广泛使用的颜色空间，并学习了它们如何影响图像的通道数和其他属性。之后，我们介绍了计算机视觉中常用的输入和输出设备，以及计算机视觉算法和过程如何在这两者之间进行。我们以对计算机视觉库的非常简短的讨论结束本章，并介绍了我们选择的计算机视觉库，即OpenCV。
- en: In the next chapter, we'll introduce the OpenCV framework and start with some
    hands-on computer vision lessons. We'll learn how OpenCV can be used to access
    input devices, perform computer vision algorithms, and access output devices to
    display or record results. The next chapter will be the first real hands-on chapter
    in the book and will set us up for later, more practical chapters.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将介绍OpenCV框架，并开始一些动手的计算机视觉课程。我们将学习如何使用OpenCV访问输入设备，执行计算机视觉算法，以及访问输出设备以显示或记录结果。下一章将是本书中的第一个真正的动手章节，并为后续更实用的章节奠定基础。
- en: Questions
  id: totrans-87
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: Name two industries, besides the ones mentioned in this chapter, that can significantly
    benefit from computer vision.
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 除了本章中提到的行业外，还有哪些行业可以从计算机视觉中获得显著的好处？
- en: What would be an example of a computer vision application used for security
    purposes? (Think about an idea for an application you haven't come across.)
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 举例说明一个用于安全目的的计算机视觉应用？（考虑一个你可能没有遇到的应用想法。）
- en: What would be an example of a computer vision application used for productivity
    reasons? (Again, think about an idea for an application that you haven't come
    across, even though you might suspect that it exists.)
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 举例说明一个用于提高生产力的计算机视觉应用？（再次，考虑一个你可能没有遇到，但怀疑可能存在的应用想法。）
- en: How many megabytes would be needed to store a 1920 x 1080 image with four channels
    and a depth of 32-bits?
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 存储一个1920 x 1080像素、四通道、32位深度的图像需要多少兆字节？
- en: Ultra-HD images, also known as 4K or 8K images, are quite common nowadays, but
    how many megapixels does an ultra-HD image contain?
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 超高清图像，也称为4K或8K图像，在当今相当普遍，但超高清图像包含多少百万像素？
- en: Name two commonly-used color spaces besides the ones mentioned in this chapter.
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 除了本章中提到的颜色空间外，还有哪些常用的颜色空间？
- en: Compare OpenCV libraries with computer vision tools in MATLAB. What are the
    pros and cons of each?
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将OpenCV库与MATLAB中的计算机视觉工具进行比较。每个工具的优缺点是什么？
