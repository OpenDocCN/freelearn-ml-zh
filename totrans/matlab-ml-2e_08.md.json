["```py\n    FolderPath = fullfile(toolboxdir('nnet'),'nndemos','nndatasets','DigitDataset');\n    DigitData = imageDatastore(FolderPath, 'IncludeSubfolders',true,'LabelSource','foldernames');\n    ```", "```py\n    figure;\n    RandId = randperm(10000,9);\n    for i = 1:9\n        subplot(3,3,i);\n        imshow(DigitData.Files{RandId(i)});\n    end\n    ```", "```py\nClassDist = countEachLabel(DigitData)\n```", "```py\nClassDist =\n  10×2 table\n    Label    Count\n    _____    _____\n      0      1000\n      1      1000\n      2      1000\n      3      1000\n      4      1000\n      5      1000\n      6      1000\n      7      1000\n      8      1000\n      9      1000\n```", "```py\n    SplitRate = 0.7;\n    [TrainDat,ValDat] = splitEachLabel(DigitData,SplitRate,'randomize');\n    ```", "```py\n    layers = [\n        imageInputLayer([28, 28, 1])\n    ```", "```py\n        convolution2dLayer(3,8,'Padding','same')\n        batchNormalizationLayer\n        reluLayer\n        maxPooling2dLayer(2,'Stride',2)\n    ```", "```py\n        convolution2dLayer(1,16,'Padding','same')\n        batchNormalizationLayer\n        reluLayer\n        maxPooling2dLayer(2,'Stride',2)\n    ```", "```py\n        convolution2dLayer(3,32,'Padding','same')\n        batchNormalizationLayer\n        reluLayer\n        fullyConnectedLayer(10)\n    ```", "```py\n    options = trainingOptions('sgdm', ...\n        'InitialLearnRate',0.01, ...\n        'MaxEpochs',50, ...\n        'Shuffle','every-epoch', ...\n        'ValidationData',ValDat, ...\n        'ValidationFrequency',30, ...\n        'Verbose',false, ...\n        'Plots','training-progress');\n    ```", "```py\n    CNNnet = trainNetwork(TrainDat,layers,options);\n    ```", "```py\n    deepNetworkDesigner\n    ```", "```py\ndeepNetworkDesigner(resnet18)\n```"]