["```py\npip install SomePackage\n```", "```py\npip install SomePackage==2.1\n```", "```py\npip install SomePackage –upgrade\n```", "```py\nconda install SomePackage\n```", "```py\nconda upgrade SomePackage\n```", "```py\nimport numpy as np\n# setup generator for reproducibility\nrandom_generator = np.random.default_rng(2020)\npopulation = np.arange(1, 10 + 1)\nsample = random_generator.choice(\n    population,    #sample from population\n    size=3,        #number of samples to take\n    replace=False  #only allow to sample individuals once\n)\nprint(sample)\n# array([1, 8, 5])\n```", "```py\nimport numpy as np\n# setup generator for reproducibility\nrandom_generator = np.random.default_rng(2020)\npopulation = [\n  1, \"A\", 3, 4,\n  5, 2, \"D\", 8,\n  \"C\", 7, 6, \"B\"\n]\n# group strata\nstrata = {\n    'number' : [],\n    'string' : [],\n}\nfor item in population:\n    if isinstance(item, int):\n        strata['number'].append(item)\n    else:\n        strata['string'].append(item)\n# fraction of population to sample\nsample_fraction = 0.5\n# random sample from stata\nsampled_strata = {}\nfor group in strata:\n    sample_size = int(\n        sample_fraction * len(strata[group])\n    )\n    sampled_strata[group] = random_generator.choice(\n            strata[group],\n            size=sample_size,\n            replace=False\n    )\nprint(sampled_strata)\n#{'number': array([2, 8, 5, 1]), 'string': array(['D', 'C'], dtype='<U1')}\n```"]