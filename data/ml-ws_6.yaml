- en: 6\. Building Your Own Program
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 6\. 构建你自己的程序
- en: Overview
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 概述
- en: In this chapter, we will present all the steps required to solve a problem using
    machine learning. We will take a look at the key stages involved in building a
    comprehensive program. We will save a model in order to get the same results every
    time it is run and call a saved model to use it for predictions on unseen data.
    By the end of this chapter, you will be able to create an interactive version
    of your program so that anyone can use it effectively.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将介绍使用机器学习解决问题所需的所有步骤。我们将查看构建全面程序的关键阶段。我们将保存一个模型，以便每次运行时获得相同的结果，并调用已保存的模型，用于对未见数据进行预测。在本章结束时，你将能够创建一个互动版本的程序，让任何人都能有效地使用它。
- en: Introduction
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: In the previous chapters, we covered the main concepts of machine learning,
    beginning with the distinction between the two main learning approaches (supervised
    and unsupervised learning), and then moved on to the specifics of some of the
    most popular algorithms in the data science community.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在前几章中，我们介绍了机器学习的主要概念，从两种主要学习方法（监督学习和无监督学习）的区分开始，然后深入探讨了数据科学领域中一些最流行的算法。
- en: This chapter will talk about the importance of building complete machine learning
    programs, rather than just training models. This will involve taking the models
    to the next level, where they can be accessed and used easily.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将讨论构建完整机器学习程序的重要性，而不仅仅是训练模型。这将包括将模型提升到一个新的层次，使其可以轻松访问和使用。
- en: We will do this by learning how to save a trained model. This will allow the
    best performing model to be loaded in order to make predictions over unseen data.
    We will also learn the importance of making a saved model available through platforms
    where users can easily interact with it.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将通过学习如何保存训练好的模型来实现这一目标。这样，我们就能加载表现最好的模型，以便对未见数据进行预测。我们还将学习将已保存的模型通过平台公开，使用户能够轻松与之互动的重要性。
- en: This is especially important when working in a team, either for a company or
    for research purposes, as it allows all members of the team to use the model without
    needing a full understanding of it.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 当团队合作时，尤其是在公司或研究项目中，这一点尤为重要，因为它使团队的所有成员都能够使用模型，而无需完全理解模型的内部机制。
- en: Program Definition
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 程序定义
- en: The following section will cover the key stages required to construct a comprehensive
    machine learning program that allows easy access to the trained model so that
    we can perform predictions for all future data. These stages will be applied to
    the construction of a program that allows a bank to determine the promotional
    strategy for a financial product in its marketing campaign.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 以下部分将涵盖构建一个全面的机器学习程序所需的关键阶段，使得我们能够轻松访问训练好的模型，从而对所有未来数据进行预测。这些阶段将应用于构建一个程序，帮助银行在其营销活动中确定金融产品的推广策略。
- en: Building a Program – Key Stages
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 构建程序 – 关键阶段
- en: At this point, you should be able to pre-process a dataset, build different
    models using training data, and compare those models in order to choose the one
    that best fits the data at hand. These are some of the processes that are handled
    during the first two stages of building a program, which ultimately allows the
    creation of the model. Nonetheless, a program should also consider the process
    of saving the final model, as well as the ability to perform quick predictions
    without the need for coding.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一阶段，你应该能够对数据集进行预处理，使用训练数据构建不同的模型，并比较这些模型，从而选择最适合当前数据的模型。这些过程是在构建程序的前两个阶段中处理的，最终使模型得以创建。然而，一个程序还应该考虑保存最终模型的过程，并具备在无需编写代码的情况下快速进行预测的能力。
- en: The processes that we just discussed are divided into three main stages and
    will be explained in the following sections. These stages represent the foremost
    requirements of any machine learning project.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 我们刚刚讨论的过程分为三个主要阶段，并将在以下章节中进行解释。这些阶段代表了任何机器学习项目的最基本要求。
- en: Preparation
  id: totrans-13
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'Preparation consists of all the procedures that we have developed thus far,
    with the objective of outlining the project in alignment with the available information
    and the desired outcome. The following is a brief description of the three processes
    in this stage (these have been discussed in detail in previous chapters):'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 准备工作包括我们迄今为止开发的所有程序，目的是根据可用信息和预期结果来概述项目。以下是该阶段三个过程的简要描述（这些内容在前几章中已经详细讨论）：
- en: '**Data Exploration**: Once the objective of the study has been established,
    data exploration is undertaken in order to understand the data that is available
    and to obtain valuable insights. These insights will be used later to make decisions
    regarding pre-processing and dividing the data and selecting models, among other
    uses. The information that''s most commonly obtained during data exploration includes
    the size of the dataset (number of instances and features), the irrelevant features,
    and whether missing values or evident outliers are present.'
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**数据探索**：一旦确定了研究目标，就会进行数据探索，以了解可用数据并获取有价值的见解。这些见解稍后将用于决策，例如数据的预处理、数据拆分和模型选择等。数据探索中最常见的信息包括数据集的大小（实例数和特征数）、无关特征，以及是否存在缺失值或明显的异常值。'
- en: '**Data Pre-processing**: As we have already discussed, data pre-processing
    primarily refers to the process of handling missing values, outliers, and noisy
    data; converting qualitative features into their numeric forms; and normalizing
    or standardizing these values. This process can be done manually in any data editor,
    such as Excel, or by using libraries to code the procedure.'
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**数据预处理**：正如我们之前讨论的，数据预处理主要是指处理缺失值、异常值和噪声数据；将定性特征转换为数值形式；以及对这些数值进行归一化或标准化。此过程可以通过任何数据编辑器（如
    Excel）手动完成，或者使用库编写代码实现。'
- en: '**Data Splitting**: The final process, data splitting, involves splitting the
    entire dataset into two or three sets (depending on the approach) that will be
    used for training, validating, and testing the overall performance of the model.
    Separating the features and the class label is also handled during this stage.'
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**数据拆分**：最后的过程——数据拆分，涉及将整个数据集拆分为两个或三个子集（根据不同的方法），这些子集将用于训练、验证和测试模型的整体性能。特征和类别标签的分离也在此阶段进行处理。'
- en: Creation
  id: totrans-18
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建
- en: 'This stage involves all of the steps that are required to create a model that
    fits the data that is available. This can be done by selecting different algorithms,
    training and tuning them, comparing the performance of each, and, finally, selecting
    the one that generalizes best to the data (meaning that it achieves better overall
    performance). The processes in this stage will be discussed briefly, as follows:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 这一阶段涉及所有创建与可用数据匹配的模型所需的步骤。通过选择不同的算法，进行训练和调优，比较每个算法的表现，最后选择能够最佳泛化到数据的算法（即能够实现更好的整体表现）。这一阶段的过程将简要讨论，具体如下：
- en: '**Algorithm Selection**: Irrespective of whether you decide to choose one or
    multiple algorithms, it is crucial to select an algorithm on the basis of the
    available data and to take the advantages of each algorithm into consideration.
    This is important since many data scientists make the mistake of choosing neural
    networks for any data problem when, in reality, simpler problems can be tackled
    using simpler models that run more quickly and perform better with smaller datasets.'
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**算法选择**：无论你决定选择一个还是多个算法，基于可用数据选择算法并考虑每个算法的优缺点是至关重要的。这一点很重要，因为许多数据科学家在面对数据问题时会错误地选择神经网络，而实际上，简单的问题可以通过更简单的模型解决，这些模型运行更快，并且在较小的数据集上表现更好。'
- en: '`X`) and the label classes (`Y`) to determine relationship patterns that will
    help generalize to unseen data and make predictions when the class label is not
    available.'
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`X`) 和标签类别（`Y`）以确定关系模式，从而帮助模型泛化到未见数据并在标签不可用时进行预测。'
- en: '**Model Evaluation**: This process is handled by measuring the performance
    of the algorithm through the metric that''s been selected for the study. As we
    mentioned previously, it is important to choose the metric that best represents
    the purpose of the study, considering that the same model can do very well in
    terms of one metric and poorly in terms of another.'
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**模型评估**：此过程通过衡量算法在所选度量标准下的表现来完成。正如我们之前提到的，选择最佳代表研究目的的度量标准非常重要，因为同一个模型在某一度量标准下可能表现很好，而在另一个度量标准下则表现差。'
- en: While evaluating the model on the validation set, hyperparameters are fine-tuned
    to achieve the best possible performance. Once the hyperparameters have been tuned,
    the evaluation is performed on the testing set to measure the overall performance
    of the model on unseen data.
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在对验证集进行模型评估时，超参数将被微调以实现最佳性能。一旦超参数调优完成，便会在测试集上进行评估，以衡量模型在未见数据上的整体表现。
- en: '**Model Comparison and Selection**: When multiple models are created based
    on different algorithms, a model comparison is performed to select the one that
    outperforms the others. This comparison should be done by using the same metric
    for all the models.'
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**模型比较与选择**：当基于不同算法创建多个模型时，会进行模型比较，以选择表现最优的模型。此比较应使用相同的度量标准对所有模型进行评估。'
- en: Interaction
  id: totrans-25
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 交互
- en: 'The final stage in building a comprehensive machine learning program consists
    of allowing the final user to easily interact with the model. This includes the
    process of saving the model into a file, calling the file that holds the saved
    model, and developing a channel through which users can interact with the model:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 构建一个全面的机器学习程序的最后阶段包括使最终用户能够轻松与模型进行交互。这包括将模型保存到文件中、调用保存模型的文件，并开发一个用户可以通过该渠道与模型进行交互的方式：
- en: '**Storing the Final Model**: This process is introduced during the development
    of a machine learning program as it is crucial to enable the unaltered use of
    the model for future predictions. The process of saving the model is highly important,
    considering that most algorithms are randomly initialized each time they are run,
    which makes the results different for each run. The process of saving the model
    will be explained further later in this chapter.'
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**存储最终模型**：在机器学习程序的开发过程中引入此过程，因为它对于确保模型在未来预测中保持不变并能够被使用至关重要。保存模型的过程非常重要，因为大多数算法在每次运行时都是随机初始化的，这使得每次运行的结果都会有所不同。保存模型的过程将在本章稍后进一步讲解。'
- en: '`predict` method on unseen data. This process will also be explained later
    in this chapter.'
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`predict` 方法在未见数据上的应用。此过程将在本章稍后解释。'
- en: '**Channel of Interaction**: Finally, it is crucial to develop an interactive
    and easy way to perform predictions using the saved model, especially because,
    on many occasions, models are created by the technology team for other teams to
    use. This means that an ideal program should allow non-experts to use the model
    for predicting by simply typing in the input data. This idea will also be expanded
    upon later in this chapter.'
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**交互渠道**：最后，开发一个交互性强且易于使用的方式，通过已保存的模型进行预测是至关重要的，特别是因为在许多情况下，模型是由技术团队为其他团队创建的。这意味着理想的程序应该允许非专业人员通过简单地输入数据来使用模型进行预测。本章稍后将进一步展开这一理念。'
- en: 'The following diagram illustrates the preceding stages:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图示展示了前面的各个阶段：
- en: '![Figure 6.1: Stages for building a machine learning program'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 6.1：构建机器学习程序的各个阶段'
- en: '](img/B15781_06_01.jpg)'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15781_06_01.jpg)'
- en: 'Figure 6.1: Stages for building a machine learning program'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.1：构建机器学习程序的各个阶段
- en: The rest of this chapter will focus on the final stage of building a model (the
    interaction), considering that all the previous steps were discussed in previous chapters.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 本章余下部分将重点讨论构建模型的最后阶段（交互），因为所有前面的步骤已在之前的章节中讨论。
- en: Understanding the Dataset
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 理解数据集
- en: To learn how to implement the processes in the *Interaction* section, we will
    build a program that's capable of predicting whether a person will be interested
    in investing in a term deposit, which will help the bank target its promotion
    efforts. A term deposit is money that is deposited into a banking institution
    that cannot be withdrawn for a specific period of time.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 为了学习如何实现*交互*部分中的过程，我们将构建一个能够预测一个人是否有兴趣投资定期存款的程序，这将帮助银行更好地定位其促销活动。定期存款是存入银行机构的一种款项，在特定时间内无法提取。
- en: The dataset that was used to build this program is available in the UC Irvine
    Machine Learning Repository under the name **Bank Marketing Dataset**.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 用于构建此程序的数据集可以在 UC Irvine 机器学习库中找到，名称为**银行营销数据集**。
- en: Note
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'To download this dataset, visit the following link: [http://archive.ics.uci.edu/ml/datasets/Bank+Marketing](http://archive.ics.uci.edu/ml/datasets/Bank+Marketing).'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 要下载此数据集，请访问以下链接：[http://archive.ics.uci.edu/ml/datasets/Bank+Marketing](http://archive.ics.uci.edu/ml/datasets/Bank+Marketing)。
- en: 'The dataset is also available in this book''s GitHub repository: [https://packt.live/2wnJyny](https://packt.live/2wnJyny).'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 数据集也可以在本书的 GitHub 仓库中找到：[https://packt.live/2wnJyny](https://packt.live/2wnJyny)。
- en: 'Citation: [Moro et al., 2014] S. Moro, P. Cortez and P. Rita*. A Data-Driven
    Approach to Predict the Success of Bank Telemarketing.* Decision Support Systems,
    Elsevier, 62:22-31, June 2014.'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 引用：[Moro et al., 2014] S. Moro, P. Cortez 和 P. Rita*. 基于数据的方法预测银行电话营销的成功。* 决策支持系统，Elsevier，62：22-31，2014年6月。
- en: 'Once you have accessed the link of the UC Irvine Machine Learning repository,
    follow these steps to download the dataset:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你访问了UC Irvine机器学习库的链接，按照以下步骤下载数据集：
- en: First, click on the `Data Folder` link.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，点击`Data Folder`链接。
- en: Click the `bank` hyperlink to trigger the download
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击`bank`超链接以触发下载
- en: Open the `.zip` folder and extract the `bank-full.csv` file.
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开`.zip`文件夹并提取`bank-full.csv`文件。
- en: In this section, we will perform a quick exploration of the dataset in a Jupyter
    Notebook. However, in *Activity 6.01*, *Performing the Preparation and Creation
    Stages for the Bank Marketing Dataset*, you will be encouraged to perform a good
    exploration and pre-process the dataset to arrive at a better mode.
  id: totrans-46
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在本节中，我们将在Jupyter Notebook中快速浏览数据集。然而，在*活动6.01*中，*执行银行营销数据集的准备与创建阶段*，你将被鼓励进行深入的数据探索和预处理，以获得更好的模型。
- en: 'Import the required libraries:'
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入所需的库：
- en: '[PRE0]'
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'As we have learned thus far, the dataset can be loaded into a Jupyter Notebook
    using Pandas:'
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 正如我们迄今所学，数据集可以通过Pandas加载到Jupyter Notebook中：
- en: '[PRE1]'
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The preceding code reads all the features for one instance in a single column,
    since the `read_csv` function uses commas as the default delimiter for columns,
    while the dataset uses semicolons as the delimiter, as can be seen by displaying
    the head of the resulting DataFrame.
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 前面的代码将每个实例的所有特征读取到一个单列中，因为`read_csv`函数默认使用逗号作为列的分隔符，而数据集使用分号作为分隔符，可以通过显示结果DataFrame的前几行来验证这一点。
- en: '[PRE2]'
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'After this step, the data should look as follows:'
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在这一步之后，数据应如下所示：
- en: '![Figure 6.3: Screenshot of the data in the .csv file after splitting it into
    columns'
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图6.3：将数据拆分为列后，.csv文件的数据截图'
- en: '](img/B15781_06_03.jpg)'
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B15781_06_03.jpg)'
- en: 'Figure 6.3: Screenshot of the data in the .csv file after splitting it into
    columns'
  id: totrans-56
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图6.3：将数据拆分为列后，.csv文件的数据截图
- en: As shown in the preceding screenshot, the file contains unknown values that
    should be handled as missing values.
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如前图所示，文件包含未知值，这些值应当作为缺失值处理。
- en: 'To aid the process of dealing with missing values, all unknown values will
    be replaced by `NaN` using Pandas'' `replace` function, as well as NumPy, as follows:'
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了帮助处理缺失值，所有未知值将通过Pandas的`replace`函数以及NumPy替换为`NaN`，如下所示：
- en: '[PRE3]'
  id: totrans-59
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'By printing the head of the `data` variable, the output of the preceding code
    snippet is as follows:'
  id: totrans-60
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 通过打印`data`变量的前几行，前面代码段的输出如下：
- en: '![Figure 6.4: Screenshot of the data in the .csv file after replacing unknown
    values'
  id: totrans-61
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图6.4：替换未知值后，.csv文件的数据截图'
- en: '](img/B15781_06_04.jpg)'
  id: totrans-62
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B15781_06_04.jpg)'
- en: 'Figure 6.4: Screenshot of the data in the .csv file after replacing unknown
    values'
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图6.4：替换未知值后，.csv文件的数据截图
- en: This will allow us to easily handle missing values during the pre-processing
    of the dataset.
  id: totrans-64
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这将使我们在数据集预处理过程中更容易处理缺失值。
- en: 'Finally, the edited dataset is saved in a new `.csv` file so that it can be
    used for the activities throughout this chapter. You can do this by using the
    `to_csv` function, as follows:'
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，编辑后的数据集将保存在一个新的`.csv`文件中，以便在本章的活动中使用。你可以通过使用`to_csv`函数来实现，如下所示：
- en: '[PRE4]'
  id: totrans-66
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Note
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: To access the source code for this specific section, please refer to [https://packt.live/2AAX2ym](https://packt.live/2AAX2ym).
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要访问本节的源代码，请参阅[https://packt.live/2AAX2ym](https://packt.live/2AAX2ym)。
- en: You can also run this example online at [https://packt.live/3ftYXnf](https://packt.live/3ftYXnf).
    You must execute the entire Notebook in order to get the desired result.
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你还可以在线运行此示例，访问[https://packt.live/3ftYXnf](https://packt.live/3ftYXnf)。你必须执行整个Notebook才能获得预期的结果。
- en: The file should contain a total of 45,211 instances, each with 16 features and
    one class label, which can be verified by printing the shape of the variable holding
    the dataset. The class label is binary, of the `yes` or `no` type, and indicates
    whether the client subscribes to a term deposit with the bank.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 文件应包含共计45,211个实例，每个实例有16个特征和一个类别标签，可以通过打印存储数据集的变量的形状来验证。类别标签是二元的，`yes`或`no`类型，表示客户是否订阅了银行的定期存款。
- en: Each instance represents a client of the bank, while the features capture demographic
    information, as well as data regarding the nature of the contact with the client
    during the current (and previous) promotional campaign.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 每个实例代表银行的一个客户，而特征捕捉了人口统计信息以及当前（和前期）促销活动中与客户接触的相关数据。
- en: 'The following table displays brief descriptions of all 16 features. This will
    help you determine the relevance of each feature to the study, and will provide
    an idea of some of the steps required to pre-process the data:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 下表简要描述了所有16个特征。这将帮助你确定每个特征与研究的相关性，并提供一些预处理数据所需步骤的提示：
- en: '![Figure 6.5: A table describing the features of the dataset'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '![图6.5：描述数据集特征的表格'
- en: '](img/B15781_06_05.jpg)'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15781_06_05.jpg)'
- en: 'Figure 6.5: A table describing the features of the dataset'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.5：描述数据集特征的表格
- en: Note
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: You can find the preceding descriptions and more in this book's GitHub repository,
    in the folder named `Chapter06`. The file for the preceding example is named `bank-names.txt`
    and can be found in the `.zip` folder called `bank.zip`.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在本书的GitHub仓库中找到前述描述以及更多内容，路径为`Chapter06`文件夹。前述示例的文件名为`bank-names.txt`，并可以在名为`bank.zip`的`.zip`文件夹中找到。
- en: Using the information we obtained while exploring the dataset, it is possible
    to proceed with pre-processing the data and training the model, which will be
    the purpose of the following activity.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 利用我们在探索数据集时获得的信息，可以继续进行数据预处理和模型训练，这将是下一活动的目标。
- en: 'Activity 6.01: Performing the Preparation and Creation Stages for the Bank
    Marketing Dataset'
  id: totrans-79
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 活动6.01：执行银行营销数据集的准备和创建阶段
- en: The objective of this activity is to perform the processes in the *preparation*
    and *creation* stages to build a comprehensive machine learning problem.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 本活动的目标是执行*准备*和*创建*阶段的过程，构建一个全面的机器学习问题。
- en: Note
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: For the exercises and activities within this chapter, you will need to have
    Python 3.7, NumPy, Jupyter, Pandas, and scikit-learn installed on your system.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 对于本章中的练习和活动，你需要在系统中安装Python 3.7、NumPy、Jupyter、Pandas和scikit-learn。
- en: 'Let''s consider the following scenario: you work at the principal bank in your
    town, and the marketing team has decided that they want to know in advance if
    a client is likely to subscribe to a term deposit so that they can focus their
    efforts on targeting those clients.'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 假设以下场景：你在你所在城市的主要银行工作，营销团队决定提前了解客户是否可能订阅定期存款，以便他们可以集中精力针对这些客户。
- en: For this, you have been provided with a dataset containing the details of current
    and previous marketing activities carried out by the team (the Bank Marketing
    Dataset that you have downloaded and explored). You have been asked to pre-process
    the dataset and compare two models so that you can select the best one.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 为此，提供了一个数据集，包含了团队当前和之前开展的营销活动的详细信息（即你已下载并探索过的银行营销数据集）。你需要对数据集进行预处理并比较两个模型，以便选择最优模型。
- en: 'Follow these steps to achieve this:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤进行操作：
- en: Note
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'For a reminder of how to pre-process your dataset, revisit *Chapter 1*, *Introduction
    to Scikit-Learn*. On the other hand, for a reminder of how to train a supervised
    model, evaluate performance, and perform error analysis, revisit *Chapter 3*,
    *Supervised Learning – Key Steps*, and *Chapter 4*, *Supervised Learning Algorithms:
    Predicting Annual Income*.'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 若要提醒自己如何预处理数据集，可以回顾*第1章*，*Scikit-Learn简介*。另一方面，要回顾如何训练监督学习模型、评估性能和进行错误分析，请回顾*第3章*，*监督学习——关键步骤*，以及*第4章*，*监督学习算法：预测年收入*。
- en: Open a Jupyter Notebook to implement this activity and import all the required elements.
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开一个Jupyter Notebook来实现此活动，并导入所有所需的元素。
- en: Load the dataset into the notebook. Make sure that you load the one that was
    edited previously, named `bank-full-dataset.csv`, which is also available at [https://packt.live/2wnJyny](https://packt.live/2wnJyny).
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将数据集加载到笔记本中。确保加载的是之前编辑过的文件，名为`bank-full-dataset.csv`，它也可以在[https://packt.live/2wnJyny](https://packt.live/2wnJyny)找到。
- en: Select the metric that is the most appropriate for measuring the performance
    of the model, considering that the purpose of the study is to detect clients who
    are likely to subscribe to the term deposit.
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择最适合衡量模型性能的指标，考虑到本研究的目的是检测可能订阅定期存款的客户。
- en: Pre-process the dataset.
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 预处理数据集。
- en: 'Note that one of the qualitative features is ordinal, which is why it must
    be converted into a numeric form that follows the respective order. Use the following
    code snippet to do so:'
  id: totrans-92
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 请注意，其中一个定性特征是有序的，因此必须将其转换为遵循相应顺序的数字形式。使用以下代码片段来完成此操作：
- en: '[PRE5]'
  id: totrans-93
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Separate the features from the class label and split the dataset into three
    sets (training, validation, and testing).
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将特征与类别标签分开，并将数据集分为三个集合（训练集、验证集和测试集）。
- en: Use the decision tree algorithm on the dataset and train the model.
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用决策树算法对数据集进行训练。
- en: Use the multilayer perceptron algorithm on the dataset and train the model.
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用多层感知器算法对数据集进行训练。
- en: Note
  id: totrans-97
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: You can also try this with the other classification algorithms we discussed
    in this book. However, these two have been chosen so that you are also able to
    compare the difference in training times.
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您还可以尝试使用本书中讨论的其他分类算法。尽管如此，这两个算法被选择出来，是为了让您能够比较训练时间的差异。
- en: Evaluate both models by using the metric that you selected previously.
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用您之前选择的评估指标来评估这两个模型。
- en: Fine-tune some of the hyperparameters to fix the issues you detected while evaluating
    the model by performing error analysis.
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 微调一些超参数，以解决在评估模型时通过错误分析发现的问题。
- en: Compare the final versions of your models and select the one that you believe
    best fits the data.
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 比较您模型的最终版本，并选择您认为最适合数据的那个。
- en: 'Expected output:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 预期输出：
- en: '![Figure 6.6: Expected output'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '![图6.6：预期输出'
- en: '](img/B15781_06_06.jpg)'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15781_06_06.jpg)'
- en: 'Figure 6.6: Expected output'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.6：预期输出
- en: Note
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: You can find the solution for this activity on page 244.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在第244页找到此活动的解决方案。
- en: Saving and Loading a Trained Model
  id: totrans-108
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 保存和加载训练好的模型
- en: Although the process of manipulating a dataset and training the right model
    is crucial for developing a machine learning project, the work does not end there.
    Knowing how to save a trained model is key as this will allow you to save the
    hyperparameters, as well as the values for the weights and biases of your final
    model, so that it remains unchanged when it is run again.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管操作数据集并训练正确的模型对于开发机器学习项目至关重要，但工作并不止于此。了解如何保存训练好的模型是关键，因为这将允许您保存超参数，以及最终模型的权重和偏置值，以便模型在重新运行时保持不变。
- en: Moreover, after the model has been saved to a file, it is also important to
    know how to load the saved model in order to use it to make predictions on new
    data. By saving and loading a model, we allow for the model to be reused at any
    moment and through many different means.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，在模型保存到文件后，了解如何加载保存的模型以便对新数据进行预测也非常重要。通过保存和加载模型，我们可以在任何时候以多种方式重复使用该模型。
- en: Saving a Model
  id: totrans-111
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 保存模型
- en: The process of saving a model is also called **serialization**, and it has become
    increasingly important due to the popularity of neural networks that use many
    parameters (weights and biases) that are randomly initialized every time the model
    is trained, as well as due to the introduction of bigger and more complex datasets
    that make the training process last for days, weeks, and sometimes months.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 保存模型的过程也称为**序列化**，随着神经网络的流行，序列化变得越来越重要。神经网络使用许多参数（权重和偏置），这些参数在每次训练时都会被随机初始化。此外，随着更大、更复杂数据集的引入，训练过程可能会持续几天、几周甚至几个月。
- en: Considering this, the process of saving a model helps to optimize the use of
    machine learning solutions by standardizing the results to the saved version of
    the model. It also saves time as it allows you to directly apply the saved model
    to new data, without the need for retraining.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑到这一点，保存模型的过程有助于通过将结果标准化为保存版本的模型来优化机器学习解决方案的使用。它还节省了时间，因为它允许您将已保存的模型直接应用于新数据，而无需重新训练。
- en: There are two main ways to save a trained model, one of which will be explained
    in this section. The `pickle` module is the standard way to serialize objects
    in Python, and it works by implementing a powerful algorithm that serializes the
    model and then saves it as a `.pkl` file.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 保存训练好的模型有两种主要方式，其中一种将在本节中解释。`pickle`模块是Python中序列化对象的标准方式，它通过实现一个强大的算法将模型序列化，然后将其保存为`.pkl`文件。
- en: Note
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The other module that's available for saving a trained model is `joblib`, which
    is part of the SciPy ecosystem.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个用于保存训练好模型的模块是`joblib`，它是SciPy生态系统的一部分。
- en: However, take into account that models are only saved when they are meant to
    be used in future projects or for future predictions. When a machine learning
    project is developed to understand the current data, there is no need to save
    it as the analysis will be performed after the model has been trained.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，请注意，只有在模型计划在未来的项目中使用或进行未来预测时，才需要保存模型。当机器学习项目是为了理解当前数据时，不需要保存模型，因为分析将在模型训练后进行。
- en: 'Exercise 6.01: Saving a Trained Model'
  id: totrans-118
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 练习 6.01：保存已训练的模型
- en: 'For the following exercise, we will use the Fertility Dataset that we downloaded
    in *Chapter 5*, *Artificial Neural Networks: Predicting Annual Income*. A neural
    network will be trained over the training data, and then saved. Follow these steps
    to complete this exercise:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 对于以下练习，我们将使用在*第5章*，*人工神经网络：预测年收入*中下载的生育率数据集。将在训练数据上训练一个神经网络，然后将其保存。按照以下步骤完成本练习：
- en: Note
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'The dataset is also available in this book''s GitHub repository: [https://packt.live/2zBW84e](https://packt.live/2zBW84e).'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 数据集也可以在本书的GitHub仓库中找到：[https://packt.live/2zBW84e](https://packt.live/2zBW84e)。
- en: 'Open a Jupyter Notebook to implement this exercise and import all the required
    elements to load a dataset, train a multilayer perceptron, and save a trained model:'
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开一个Jupyter Notebook以实现这个练习，并导入所有必需的元素以加载数据集、训练多层感知器并保存已训练的模型：
- en: '[PRE6]'
  id: totrans-123
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The `pickle` module, as explained previously, will be used to save the trained
    model. The `os` module is used to locate the current working directory of the
    Jupyter Notebook in order to save the model in the same path.
  id: totrans-124
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如前所述，`pickle`模块将用于保存已训练的模型。`os`模块用于定位Jupyter Notebook的当前工作目录，以便将模型保存在相同的路径下。
- en: 'Load the Fertility dataset and split the data into a features matrix, `X`,
    and a target matrix, `Y`. Use the `header = None` argument, since the dataset
    does not have a header row:'
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 加载生育率数据集，并将数据拆分为特征矩阵`X`和目标矩阵`Y`。使用`header = None`参数，因为数据集没有标题行：
- en: '[PRE7]'
  id: totrans-126
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Train a multilayer perceptron classifier over the data. Set the number of iterations
    to `1200` to avoid getting a warning message indicating that the default number
    of iterations is insufficient to achieve convergence:'
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在数据上训练一个多层感知器分类器。将迭代次数设置为`1200`，以避免出现警告消息，表示默认的迭代次数不足以实现收敛：
- en: '[PRE8]'
  id: totrans-128
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Note
  id: totrans-129
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: As a reminder, the output from calling the `fit` method consists of the model
    currently being trained with all the parameters that it takes in.
  id: totrans-130
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 提醒一下，调用`fit`方法后的输出由当前训练的模型组成，并包括它所需要的所有参数。
- en: 'Serialize the model and save it in a file named `model_exercise.pkl`. Use the
    following code to do so:'
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 序列化模型并将其保存在名为`model_exercise.pkl`的文件中。使用以下代码来实现：
- en: '[PRE9]'
  id: totrans-132
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: In the preceding snippet, the `path` variable contains the path to the file
    that will hold the serialized model, where the first element locates the current
    working directory and the second element defines the name of the file to be saved.
    The `file` variable is used to create a file that will be saved in the desired
    path and has the file mode set to `wb`, which stands for `dump` method is applied
    over the `pickle` module. It takes the model that was created previously, serializes
    it, and then saves it.
  id: totrans-133
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在前面的代码片段中，`path`变量包含将保存序列化模型的文件路径，其中第一个元素定位当前工作目录，第二个元素定义要保存的文件名。`file`变量用于创建一个将被保存到所需路径的文件，并且文件模式设置为`wb`，即表示`dump`方法在`pickle`模块上应用。它接受之前创建的模型，将其序列化，然后保存。
- en: Note
  id: totrans-134
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: To access the source code for this specific section, please refer to [https://packt.live/3e18vWw](https://packt.live/3e18vWw).
  id: totrans-135
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要访问此特定部分的源代码，请参考[https://packt.live/3e18vWw](https://packt.live/3e18vWw)。
- en: You can also run this example online at [https://packt.live/2B7NJpC](https://packt.live/2B7NJpC).
    You must execute the entire Notebook in order to get the desired result.
  id: totrans-136
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你也可以在[https://packt.live/2B7NJpC](https://packt.live/2B7NJpC)上在线运行这个示例。你必须执行整个Notebook才能得到预期的结果。
- en: You have successfully saved a trained model. In the next section, we will be
    looking at loading a saved model.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 你已成功保存了一个已训练的模型。在下一部分，我们将介绍如何加载已保存的模型。
- en: Loading a Model
  id: totrans-138
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 加载模型
- en: The process of loading a model is also known as `pickle` module is also used
    to load the model.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 加载模型的过程也被称为`pickle`模块的使用，它也用于加载模型。
- en: It is worth mentioning that the model does not need to be loaded in the same
    code file where it was trained and saved; on the contrary, it is meant to be loaded
    in any other file. This is mainly because the `load` method of the `pickle` library
    will return the model in a variable that will be used to apply the `predict` method.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 值得一提的是，模型不需要在与训练和保存模型相同的代码文件中加载；相反，它应该在任何其他文件中加载。这主要是因为 `pickle` 库的 `load` 方法将返回一个模型变量，该变量将用于应用
    `predict` 方法。
- en: When loading a model, it is important to not only import the `pickle` and `os`
    modules like we did before, but also the class of the algorithm that is used to
    train the model. For instance, to load a neural network model, it is necessary
    to import the `MLPClassifier` class, from the `neural_network` module of scikit-learn.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 在加载模型时，除了像之前一样导入 `pickle` 和 `os` 模块外，还需要导入用于训练模型的算法类。例如，要加载一个神经网络模型，必须从 scikit-learn
    的 `neural_network` 模块中导入 `MLPClassifier` 类。
- en: 'Exercise 6.02: Loading a Saved Model'
  id: totrans-142
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 练习 6.02：加载已保存的模型
- en: 'In this exercise, using a different Jupyter Notebook, we will load the previously
    trained model (*Exercise 6.01*, *Saving a Trained Model*) and perform a prediction.
    Follow these steps to complete this exercise:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个练习中，使用不同的 Jupyter Notebook，我们将加载之前训练好的模型（*练习 6.01*，*保存已训练的模型*）并进行预测。按照以下步骤完成此练习：
- en: Open a Jupyter Notebook to implement this exercise.
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开一个 Jupyter Notebook 来实现这个练习。
- en: 'Import the `pickle` and `os` modules. Also, import the `MLPCLassifier` class:'
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入 `pickle` 和 `os` 模块。同时，导入 `MLPClassifier` 类：
- en: '[PRE10]'
  id: totrans-146
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: The `pickle` module, as explained previously, will be used to load the trained
    model. The `os` module is used to locate the current working directory of the
    Jupyter Notebook in order to find the file containing the saved model.
  id: totrans-147
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如前所述，`pickle` 模块将用于加载训练好的模型。`os` 模块用于定位当前 Jupyter Notebook 的工作目录，以便找到包含已保存模型的文件。
- en: 'Use `pickle` to load the saved model, as follows:'
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`pickle`加载保存的模型，如下所示：
- en: '[PRE11]'
  id: totrans-149
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Here, the `path` variable is used to store the path to the file containing the
    saved model. Next, the `file` variable is used to open the file using the `rb`
    file mode, which stands for `load` method is applied on the `pickle` module to
    deserialize and load the model into the `model` variable.
  id: totrans-150
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在这里，`path` 变量用于存储包含已保存模型的文件路径。接下来，`file` 变量用于以 `rb` 文件模式打开文件，`load` 方法应用于 `pickle`
    模块，用于反序列化并将模型加载到 `model` 变量中。
- en: 'Use the loaded model to make a prediction for an individual, with the following
    values as the values for the features: `-0.33, 0.67, 1, 1, 0, 0, 0.8, -1, 0.5`.'
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用加载的模型对一个个体进行预测，特征值如下：`-0.33, 0.67, 1, 1, 0, 0, 0.8, -1, 0.5`。
- en: 'Store the output obtained by applying the `predict` method to the `model` variable,
    in a variable named `pred`:'
  id: totrans-152
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 将应用 `predict` 方法后的输出存储在一个名为 `pred` 的变量中：
- en: '[PRE12]'
  id: totrans-153
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'By printing the `pred` variable, we get the value of the prediction to be equal
    to `O`, which means that the individual has an altered diagnosis, as shown here:'
  id: totrans-154
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 通过打印 `pred` 变量，我们得到的预测值为 `O`，这意味着该个体的诊断发生了改变，如下所示：
- en: '[PRE13]'
  id: totrans-155
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: You have successfully loaded a saved model.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 你已成功加载了一个已保存的模型。
- en: Note
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: To access the source code for this specific section, please refer to [https://packt.live/2MXyGS7](https://packt.live/2MXyGS7).
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 要访问该部分的源代码，请参考 [https://packt.live/2MXyGS7](https://packt.live/2MXyGS7)。
- en: You can also run this example online at [https://packt.live/3dYgVxL](https://packt.live/3dYgVxL).
    You must execute the entire Notebook in order to get the desired result.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以在线运行这个示例，网址为[https://packt.live/3dYgVxL](https://packt.live/3dYgVxL)。你必须执行整个
    Notebook 才能得到预期的结果。
- en: 'Activity 6.02: Saving and Loading the Final Model for the Bank Marketing Dataset'
  id: totrans-160
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 活动 6.02：保存和加载银行营销数据集的最终模型
- en: 'Consider the following scenario: you have to save the model you created using
    the Bank Marketing Dataset so that it can be used in the future without the need
    to retrain the model and without the risk of getting different results each time.
    For this purpose, you need to save and load the model that you created in *Activity
    6.01*, *Performing the Preparation and Creation Stages for the Bank Marketing
    Dataset*.'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 假设以下场景：你需要保存使用银行营销数据集创建的模型，以便将来可以使用它，而无需重新训练模型，并且避免每次得到不同的结果。为此，你需要保存和加载你在*活动
    6.01*，*执行银行营销数据集的准备和创建阶段*中创建的模型。
- en: Note
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The following activity will be divided into two parts.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 以下活动将分为两个部分。
- en: The first part carries out the process of saving the model and will be performed
    using the same Jupyter Notebook from *Activity 6.01*, *Performing the Preparation
    and Creation Stages for the Bank Marketing Dataset*. The second part consists
    of loading the saved model, which will be done using a different Jupyter Notebook.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 第一部分执行保存模型的过程，将使用与 *活动 6.01* 中的 Jupyter Notebook 相同的 Notebook 来完成，*执行银行营销数据集的准备和创建阶段*。第二部分包括加载保存的模型，将使用不同的
    Jupyter Notebook 来完成。
- en: 'Follow these steps to complete this activity:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤完成此活动：
- en: Open the Jupyter Notebook from *Activity 6.01*, *Performing the Preparation
    and Creation Stages for the Bank Marketing Dataset*.
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 *活动 6.01* 中的 Jupyter Notebook，*执行银行营销数据集的准备和创建阶段*。
- en: For learning purposes, take the model that you selected as the best model, remove
    the `random_state` argument, and run it a couple of times.
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了学习目的，取你选择的最佳模型，去掉 `random_state` 参数，然后运行几次。
- en: Make sure that you run the calculation of the precision metric every time you
    run the model in order to see the difference in performance that's achieved with
    every run. Feel free to stop when you think you have landed at a model with good
    performance out of all the results you get from previous runs.
  id: totrans-168
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 确保在每次运行模型时都计算精度指标，以便看到每次运行所达到的性能差异。随时可以停止，当你认为从之前的运行结果中已经得到了一个性能良好的模型时。
- en: Note
  id: totrans-169
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: The results obtained in this book use a `random_state` of `2`.
  id: totrans-170
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 本书中获得的结果使用了 `random_state` 值为 `2`。
- en: Save the model that you choose as the best performing one in a file named `final_model.pkl`.
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将你选择的最佳模型保存为名为 `final_model.pkl` 的文件。
- en: Note
  id: totrans-172
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: Make sure that you use the `os` module to save the model in the same path as
    the current Jupyter Notebook.
  id: totrans-173
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 确保使用 `os` 模块将模型保存在与当前 Jupyter Notebook 相同的路径下。
- en: Open a new Jupyter Notebook and import the required modules and class.
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开一个新的 Jupyter Notebook，导入所需的模块和类。
- en: Load the model.
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 加载模型。
- en: 'Perform a prediction for an individual by using the following values: `42`,
    `2`, `0`, `0`, `1`, `2`, `1`, `0`, `5`, `8`, `380`, `1`, `-1`, `0`.'
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下值为个体进行预测：`42`、`2`、`0`、`0`、`1`、`2`、`1`、`0`、`5`、`8`、`380`、`1`、`-1`、`0`。
- en: 'Expected output:'
  id: totrans-177
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 预期输出：
- en: '[PRE14]'
  id: totrans-178
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Note
  id: totrans-179
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: The solution for this activity can be found on page 253.
  id: totrans-180
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此活动的解决方案可以在第 253 页找到。
- en: Interacting with a Trained Model
  id: totrans-181
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 与训练好的模型进行交互
- en: 'Once the model has been created and saved, it is time for the last step of
    building a comprehensive machine learning program: allowing easy interaction with
    the model. This step not only allows the model to be reused, but also introduces
    efficiency to the implementation of machine learning solutions by allowing you
    to perform classifications using just input data.'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦模型创建并保存完成，就到了构建全面的机器学习程序的最后一步：允许与模型的轻松交互。这个步骤不仅让模型可以重复使用，还通过仅使用输入数据进行分类来提高机器学习解决方案的实现效率。
- en: There are several ways to interact with a model, and the decision that's made
    between choosing one or the other depends on the nature of the user (the individuals
    that will be making use of the model on a regular basis). Machine learning projects
    can be accessed in different ways, some of which require the use of an API, an
    online or offline program (application), or a website.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 有多种方式与模型进行交互，选择哪种方式取决于用户的性质（即那些会定期使用模型的人）。机器学习项目可以通过不同的方式访问，其中一些方式需要使用 API、在线或离线程序（应用程序）或网站。
- en: Moreover, once the channel is defined based on the preference or expertise of
    the users, it is important to code the connection between the final user and the
    model, which could be either a function or a class that deserializes the model
    and loads it, then performs the classification, and ultimately returns an output
    that is displayed again to the user.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，一旦基于用户的偏好或专业知识定义了通道，就需要对最终用户与模型之间的连接进行编码，这可以是一个函数或一个类，用于反序列化模型并加载它，接着执行分类，最终返回一个结果，该结果会再次显示给用户。
- en: 'The following diagram displays the relationship built between the channel and
    the model, where the icon to the left represents the model, the one in the middle
    is the function or class (the intermediary) performing the connection, and the
    icon to the right is the channel. Here, as we explained previously, the channel
    feeds the input data to the intermediary, which then feeds the information into
    the model to perform a classification. The output from the classification is sent
    back to the intermediary, which passes it along the channel in order to be displayed:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 下图展示了通道与模型之间的关系，其中左侧的图标代表模型，中间的是执行连接的函数或类（中介），右侧的图标是通道。正如我们之前所解释的，通道将输入数据传递给中介，然后中介将信息传入模型以执行分类。分类的输出被返回给中介，中介再通过通道将其传递以便展示：
- en: '![Figure 6.7: Illustration of the interaction between the user and the model'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 6.7：用户与模型之间交互的示意图'
- en: '](img/B15781_06_07.jpg)'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15781_06_07.jpg)'
- en: 'Figure 6.7: Illustration of the interaction between the user and the model'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.7：用户与模型之间交互的示意图
- en: 'Exercise 6.03: Creating a Class and a Channel to Interact with a Trained Model'
  id: totrans-189
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 练习 6.03：创建一个类和一个通道与训练好的模型交互
- en: In this exercise, we will create a class in a text editor that takes the input
    data and feeds it to the model that was trained in *Exercise 6.01*, *Saving a
    Trained Model*, with the `Fertility Diagnosis` dataset. Additionally, we will
    create a form in a Jupyter Notebook, where users can input the data and obtain
    a prediction.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 在本练习中，我们将在文本编辑器中创建一个类，该类接受输入数据并将其传递给在*练习 6.01*中训练好的模型，使用的是 `Fertility Diagnosis`
    数据集。此外，我们还将在 Jupyter Notebook 中创建一个表单，用户可以在其中输入数据并获得预测。
- en: 'To create a class in a text editor, follow these steps:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 在文本编辑器中创建类时，请按照以下步骤操作：
- en: Open a text editor of preference, such as PyCharm.
  id: totrans-192
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开你偏好的文本编辑器，例如 PyCharm。
- en: 'Import `pickle` and `os`:'
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入 `pickle` 和 `os`：
- en: '[PRE15]'
  id: totrans-194
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Create a class object and name it `NN_Model`:'
  id: totrans-195
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个类对象并命名为 `NN_Model`：
- en: '[PRE16]'
  id: totrans-196
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Inside of the class, create an initializer method that loads the file containing
    the saved model (`model_exercise.pkl`) into the code:'
  id: totrans-197
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在类内部，创建一个初始化方法，将保存的模型文件（`model_exercise.pkl`）加载到代码中：
- en: '[PRE17]'
  id: totrans-198
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Note
  id: totrans-199
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: Remember to indent the method inside of the class object.
  id: totrans-200
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 记得在类对象内部缩进方法。
- en: As a general rule, all the methods inside a class object must have the `self`
    argument. On the other hand, when defining the variable of the model using the
    `self` statement, it is possible to make use of the variable in any other method
    of the same class.
  id: totrans-201
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 一般来说，类对象中的所有方法必须具有 `self` 参数。另一方面，在使用 `self` 语句定义模型变量时，可以在同一个类的任何其他方法中使用该变量。
- en: 'Inside the class named `NN_Model`, create a `predict` method. It should take
    in the feature values and input them as arguments to the `predict` method of the
    model so that it can feed them into the model and make a prediction:'
  id: totrans-202
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在名为 `NN_Model` 的类中，创建一个 `predict` 方法。该方法应接收特征值并将其作为参数传递给模型的 `predict` 方法，以便将其输入到模型中进行预测：
- en: '[PRE18]'
  id: totrans-203
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Note
  id: totrans-204
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: Remember to indent the method inside of the class object.
  id: totrans-205
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 记得在类对象内部缩进方法。
- en: Save the code as a Python file (`.py`) and name it `exerciseClass.py`. The name
    of this file will be used to load the class into the Jupyter Notebook for the
    following steps.
  id: totrans-206
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将代码保存为 Python 文件（`.py`），并命名为 `exerciseClass.py`。这个文件的名称将在接下来的步骤中用于加载类到 Jupyter
    Notebook 中。
- en: Now, let's code the frontend solution of the program, which includes creating
    a form where users can input data and obtain a prediction.
  id: totrans-207
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在，让我们编写程序的前端解决方案，包括创建一个表单，用户可以在其中输入数据并获得预测。
- en: Note
  id: totrans-208
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: For learning purposes, the form will be created in a Jupyter Notebook. However,
    it is often the case that the frontend is in the form of a website, an app, or
    something similar.
  id: totrans-209
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 为了学习目的，表单将在 Jupyter Notebook 中创建。然而，通常情况下，前端是以网站、应用程序或类似的形式存在。
- en: Open a Jupyter Notebook.
  id: totrans-210
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开一个 Jupyter Notebook。
- en: 'To import the model class that was saved as a Python file in *Step 6*, use
    the following code snippet:'
  id: totrans-211
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了导入在*步骤 6*中保存为 Python 文件的模型类，可以使用以下代码片段：
- en: '[PRE19]'
  id: totrans-212
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Initialize the `NN_Model` class and store it in a variable called `model`:'
  id: totrans-213
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 初始化 `NN_Model` 类并将其存储在名为 `model` 的变量中：
- en: '[PRE20]'
  id: totrans-214
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: By making a call to the class that was saved in the Python file, the initializer
    method is automatically triggered, which loads the saved model into the variable.
  id: totrans-215
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 通过调用保存在 Python 文件中的类，初始化方法会自动触发，从而将保存的模型加载到变量中。
- en: 'Create a set of variables where the user can input the value for each feature,
    which will then be fed to the model. Use the following values:'
  id: totrans-216
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一组变量，供用户为每个特征输入值，然后将这些值传递给模型。使用以下值：
- en: '[PRE21]'
  id: totrans-217
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Perform a prediction by using the `predict` method over the `model` variable.
    Input the feature values as arguments, taking into account that you must name
    them in the same way that you did when creating the `predict` function in the
    text editor:'
  id: totrans-218
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过在 `model` 变量上使用 `predict` 方法进行预测。将特征值作为参数输入，注意你必须按照在文本编辑器中创建 `predict` 函数时使用的名称来命名它们：
- en: '[PRE22]'
  id: totrans-219
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'By printing the prediction, we get the following output:'
  id: totrans-220
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过打印预测结果，我们得到以下输出：
- en: '[PRE23]'
  id: totrans-221
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: This means that the individual has a normal diagnosis.
  id: totrans-222
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这意味着该个体的诊断结果正常。
- en: Note
  id: totrans-223
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: To access the source code for this specific section, please refer to [https://packt.live/2MZPjg0](https://packt.live/2MZPjg0).
  id: totrans-224
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要访问该特定部分的源代码，请参见[https://packt.live/2MZPjg0](https://packt.live/2MZPjg0)。
- en: You can also run this example online at [https://packt.live/3e4tQOC](https://packt.live/3e4tQOC).
    You must execute the entire Notebook in order to get the desired result.
  id: totrans-225
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你还可以在[https://packt.live/3e4tQOC](https://packt.live/3e4tQOC)上在线运行此示例。你必须执行整个
    Notebook 才能获得期望的结果。
- en: You have successfully created a function and a channel to interact with your
    model.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 你已经成功创建了一个函数和一个与模型交互的渠道。
- en: 'Activity 6.03: Allowing Interaction with the Bank Marketing Dataset Model'
  id: totrans-227
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 活动 6.03：允许与银行营销数据集模型交互
- en: 'Consider the following scenario: after seeing the results that you presented
    in the previous activity, your boss has asked you to build a very simple way for
    him to test the model with data that he will receive over the course of the next
    month. If all the tests work well, he will be asking you to launch the program
    in a more effective way. Hence, you have decided to share a Jupyter Notebook with
    your boss, where he can just input the information and get a prediction.'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑以下场景：在看到你在上一个活动中展示的结果后，你的老板要求你建立一种非常简单的方式，以便他可以在接下来的一个月内用他收到的数据测试模型。如果所有测试都能顺利通过，他将要求你以更高效的方式启动程序。因此，你决定与老板分享一个
    Jupyter Notebook，在其中他只需输入信息就能得到预测结果。
- en: Note
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The following activity will be developed in two parts. The first part will involve
    building the class that connects the channel and the model, which will be developed
    using a text editor. The second part will be the creation of the channel, which
    will be done in a Jupyter Notebook.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来的活动将分为两部分进行开发。第一部分将涉及构建连接渠道和模型的类，这部分将使用文本编辑器进行开发。第二部分将是创建渠道，这将在 Jupyter Notebook
    中完成。
- en: 'Follow these steps to complete this activity:'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤完成此活动：
- en: In a text editor, create a class object that contains two main methods. One
    should be an initializer that loads the saved model, while the other should be
    a `predict` method, wherein the data is fed to the model to retrieve an output.
  id: totrans-232
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在文本编辑器中，创建一个包含两个主要方法的类对象。其中一个应该是初始化器，用于加载已保存的模型，另一个应该是 `predict` 方法，在此方法中，数据被输入到模型中以获取输出。
- en: 'In a Jupyter Notebook, import and initialize the class that you created in
    the previous step. Next, create the variables that will hold the values for all
    the features of a new observation. Use the following values: `42`, `2`, `0`, `0`,
    `1`, `2`, `1`, `0`, `5`, `8`, `380`, `1`, `-1`, `0`.'
  id: totrans-233
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Jupyter Notebook 中，导入并初始化你在上一步创建的类。接下来，创建一个变量，用于保存新观察的所有特征值。使用以下值：`42`、`2`、`0`、`0`、`1`、`2`、`1`、`0`、`5`、`8`、`380`、`1`、`-1`、`0`。
- en: Perform a prediction by applying the `predict` method.
  id: totrans-234
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过应用 `predict` 方法进行预测。
- en: 'Expected output: You will get `0` as the output when you complete this activity.'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 预期输出：当你完成此活动时，你将获得 `0` 作为输出。
- en: Note
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The solution for this activity can be found on page 254.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 此活动的解决方案可以在第 254 页找到。
- en: Summary
  id: totrans-238
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: 'This chapter wraps up all of the concepts and techniques that are required
    to successfully train a machine learning model based on training data. In this
    chapter, we introduced the idea of building a comprehensive machine learning program
    that not only accounts for the stages involved in the preparation of the dataset
    and creation of the ideal model, but also the stage related to making the model
    accessible for future use, which is accomplished by carrying out three main processes:
    saving the model, loading the model, and creating a channel that allows users
    to easily interact with the model and obtain an outcome.'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 本章总结了成功训练基于训练数据的机器学习模型所需的所有概念和技术。在本章中，我们引入了构建一个全面机器学习程序的思想，该程序不仅考虑了数据集准备和理想模型创建的各个阶段，还包括了使模型在未来可用的阶段，这一过程通过三个主要步骤来完成：保存模型、加载模型，以及创建一个渠道，让用户能够轻松地与模型互动并获取结果。
- en: For saving and loading a model, the `pickle` module was introduced. This module
    is capable of serializing the model to save it in a file, while also being capable
    of deserializing it to make use of the model in the future.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 为了保存和加载模型，引入了`pickle`模块。该模块能够将模型序列化以保存到文件中，同时也能反序列化模型，以便将来使用该模型。
- en: Furthermore, to make the model accessible to users, the ideal channel (for example,
    an API, an application, a website, or a form) needs to be selected according to
    the type of user that will interact with the model. Then, an intermediary needs
    to be programmed that can connect the channel with the model. This intermediary
    is usually in the form of a function or a class.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，为了让用户能够访问模型，需要根据与模型交互的用户类型选择理想的渠道（例如，API、应用程序、网站或表单）。然后，需要编写一个中介程序，将该渠道与模型连接起来。这个中介通常以函数或类的形式存在。
- en: The main objective of this book was to introduce scikit-learn's library as a
    way to develop machine learning solutions in a simple manner. After discussing
    the importance of and the different techniques involved in data exploration and
    pre-processing, this book divided its knowledge into the two main areas of machine
    learning, that is, supervised and unsupervised learning. The most common algorithms
    were discussed.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 本书的主要目标是介绍scikit-learn库，作为一种简单的方式来开发机器学习解决方案。在讨论了数据探索和预处理的必要性及涉及的不同技术后，本书将知识划分为机器学习的两个主要领域，即监督学习和无监督学习。我们讨论了最常见的算法。
- en: Finally, we explained the importance of measuring the performance of models
    by performing error analysis in order to improve the overall performance of the
    model on unseen data, and, ultimately, choosing the model that best represents
    the data. This final model should be saved so that you can use it in the future
    for visualizations or to perform predictions.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们解释了通过进行错误分析来衡量模型性能的重要性，以便提高模型在未见数据上的整体表现，并最终选择最能代表数据的模型。这个最终的模型应当被保存，以便将来用于可视化或进行预测。
