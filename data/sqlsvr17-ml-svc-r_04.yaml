- en: Data Exploration and Data Visualization
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据探索和数据可视化
- en: Data Exploration and Data Visualization techniques are essential to understanding
    data before one can implement predictive modeling. With existing open source R
    packages for statistical and mathematical algorithms, data professionals can easily
    explore their data and discover patterns/trends that are otherwise challenging
    to do in a relational database. Using SQL Server **Machine Learning Services**
    (**ML Services**) with R means that data exploration and data visualization are
    no longer siloed work, leading to faster and easier paths to predictive modeling.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在实施预测建模之前，了解数据探索和数据可视化技术对于理解数据至关重要。借助现有的开源 R 软件包中的统计和数学算法，数据专业人员可以轻松地探索他们的数据，并发现那些在其他情况下在关系型数据库中难以做到的图案/趋势。使用
    SQL Server **机器学习服务**（**ML 服务**）与 R 结合意味着数据探索和数据可视化不再是孤立的作业，从而引领更快、更简单的预测建模路径。
- en: This chapter outlines essential tips and tricks developers must know for data
    exploration and data visualization using R. You will learn how to integrate R
    for data exploration and data visualization in T-SQL and then stitch these techniques
    in SSRS and Power BI. If you are already familiar with R for data exploration
    and data visualization, feel free to skip to the last section of this chapter.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章概述了开发人员在使用 R 进行数据探索和数据可视化时必须了解的基本技巧和窍门。您将学习如何在 T-SQL 中集成 R 进行数据探索和数据可视化，然后将这些技术整合到
    SSRS 和 Power BI 中。如果您已经熟悉 R 的数据探索和数据可视化，请自由跳到本章的最后部分。
- en: Understanding SQL and R data types
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解 SQL 和 R 数据类型
- en: Before we dive into exploring data using R in T-SQL, let's get started with
    understanding data types to store data in R. The first and most important data
    type to be familiar with when working with R in T-SQL is data frame. The input
    and output parameters of `sp_execute_external_script` in SQL Server received and
    sent from R are data frames. Other data types that are important to know for data
    munging, and that are very similar to data frame, are matrix and data table, which
    are beyond the scope of this chapter.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们深入探讨使用 R 在 T-SQL 中探索数据之前，让我们先从了解在 R 中存储数据的数据类型开始。当在 T-SQL 中使用 R 时，首先且最重要的数据类型是数据框。SQL
    Server 中 `sp_execute_external_script` 的输入和输出参数是由 R 接收和发送的数据框。对于数据整理而言，其他重要的数据类型，并且与数据框非常相似的是矩阵和数据表，这些内容超出了本章的范围。
- en: 'Aside from data frame, R supports a limited number of scalar data types such
    as character, complex, date/time, integer, logical, numeric, and raw. Thus, when
    you provide data from SQL Server in R Scripts, when necessary the data will be
    implicitly converted to a compatible data type in R. When a conversion cannot
    be performed automatically, R will return `Unhandled SQL data type`. The following
    table provides a short example of data type conversion. For more information about
    implicit data type conversion, please visit *R Libraries and R Data Types* at [https://docs.microsoft.com/en-us/sql/advanced-analytics/r/r-libraries-and-data-types#changes-in-data-types-between-sql-server-2016-and-earlier-versions](https://docs.microsoft.com/en-us/sql/advanced-analytics/r/r-libraries-and-data-types#changes-in-data-types-between-sql-server-2016-and-earlier-versions):'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 除了数据框之外，R 还支持有限数量的标量数据类型，如字符、复数、日期/时间、整数、逻辑、数值和原始数据类型。因此，当您在 R 脚本中提供来自 SQL Server
    的数据时，当需要时，数据将隐式转换为 R 中的兼容数据类型。当无法自动执行转换时，R 将返回 `Unhandled SQL data type`。以下表格提供了一个数据类型转换的简短示例。有关隐式数据类型转换的更多信息，请访问
    [https://docs.microsoft.com/en-us/sql/advanced-analytics/r/r-libraries-and-data-types#changes-in-data-types-between-sql-server-2016-and-earlier-versions](https://docs.microsoft.com/en-us/sql/advanced-analytics/r/r-libraries-and-data-types#changes-in-data-types-between-sql-server-2016-and-earlier-versions)
    上的 *R Libraries and R Data Types*。
- en: '| **SQL Server Data Type (input parameters to sp_execute_external_script)**
    | **R Class** | **RESULT SET Data Type (output parameters to sp_execute_external_script)**
    |'
  id: totrans-6
  prefs: []
  type: TYPE_TB
  zh: '| **SQL Server 数据类型（sp_execute_external_script 的输入参数）** | **R 类** | **结果集数据类型（sp_execute_external_script
    的输出参数）** |'
- en: '| `datetime` | `POSIXct` | `Datetime` |'
  id: totrans-7
  prefs: []
  type: TYPE_TB
  zh: '| `datetime` | `POSIXct` | `Datetime` |'
- en: '| `numeric(p,s)` | `numeric` | `float` |'
  id: totrans-8
  prefs: []
  type: TYPE_TB
  zh: '| `numeric(p,s)` | `numeric` | `float` |'
- en: '| `int` | `integer` | `int` |'
  id: totrans-9
  prefs: []
  type: TYPE_TB
  zh: '| `int` | `integer` | `int` |'
- en: '| `varbinary(n)` | `raw` | `varbinary(max)` |'
  id: totrans-10
  prefs: []
  type: TYPE_TB
  zh: '| `varbinary(n)` | `raw` | `varbinary(max)` |'
- en: '| `varchar(n)` | `character` | `varchar(max)` |'
  id: totrans-11
  prefs: []
  type: TYPE_TB
  zh: '| `varchar(n)` | `character` | `varchar(max)` |'
- en: Data frames in R
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: R 中的数据框
- en: A data frame contains rows and columns, just like a table in SQL Server, where
    each column can have different basic data types, for example integer, character,
    and so on.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 数据框包含行和列，就像 SQL Server 中的表一样，其中每一列可以有不同的基本数据类型，例如整数、字符等。
- en: 'Use `?` to learn more about a function:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`?`了解更多关于函数的信息：
- en: '`? [function]`'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '`? [函数]`'
- en: 'For more information about data frames, you can type the following command
    in **R Tools for Visual Studio** (**RTVS**), R Studio, or your other favorite
    R IDE:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 关于数据框的更多信息，您可以在**R Tools for Visual Studio**（**RTVS**）、R Studio或您喜欢的其他R集成开发环境（IDE）中输入以下命令：
- en: '[PRE0]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: By default, R uses memory. So once the input data frame is passed from `sp_execute_external_script`,
    R will store the input data in memory. Machine Learning Services (In-Database)
    is managed by Resource Governor in SQL Server as discussed in [Chapter 3](part0039.html#1565U0-e3f81285367248f4bbc6431bcd4f926d),
    *Managing Machine Learning Services for SQL Server 2017 and R**.*
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，R使用内存。因此，一旦输入数据框通过`sp_execute_external_script`传递，R就会在内存中存储输入数据。机器学习服务（数据库内）由SQL
    Server中的资源管理器管理，如[第3章](part0039.html#1565U0-e3f81285367248f4bbc6431bcd4f926d)的*管理SQL
    Server 2017和R的机器学习服务*中所述。
- en: A general guideline is to strive for a good balance between what types of computation
    should be done in SQL Server VS in R. This includes whether to do data munging/manipulation
    in R vs in SQL Server.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 一个一般性指南是努力在SQL Server和R之间找到一个好的计算类型平衡。这包括是否在R中还是在SQL Server中进行数据清洗/操作。
- en: There are some built-in data frames available in R, such as `mtcars` or `iris`.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: R中提供了一些内置的数据框，例如`mtcars`或`iris`。
- en: 'Let''s take a look at a data frame in R. Run the following code in RTVS:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看R中的一个数据框。在RTVS中运行以下代码：
- en: '[PRE1]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The output should be like this:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 输出应该如下所示：
- en: '![](img/00039.gif)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00039.gif)'
- en: Figure 4.1 - mtcars data
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.1 - mtcars数据
- en: 'To check the data type, you can call the function `call` on the variable:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 要检查数据类型，您可以在变量上调用`call`函数：
- en: '[PRE2]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Data exploration and data munging
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据探索和数据清洗
- en: Data munging in R can be done independently without using SQL Server. The following
    diagram illustrates a recommended high-level process that developers can follow
    when using SQL Server and R. If you have worked in R before, you are likely familiar
    with steps 2, 3, and 5 performed in R directly.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 在R中，数据清洗可以独立于SQL Server完成。以下图示说明了开发者在使用SQL Server和R时可以遵循的推荐高级流程。如果您之前在R中工作过，您可能熟悉在R中直接执行的步骤2、3和5。
- en: 'Please note that Steps 3 and 4 are optional and will be discussed more in [Chapter
    6](part0096.html#2RHM00-e3f81285367248f4bbc6431bcd4f926d), *Predictive Modeling*
    and [Chapter 7](part0102.html#318PC0-e3f81285367248f4bbc6431bcd4f926d), *Operationalizing
    R Code*:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，步骤3和4是可选的，将在[第6章](part0096.html#2RHM00-e3f81285367248f4bbc6431bcd4f926d)的*预测建模*和[第7章](part0102.html#318PC0-e3f81285367248f4bbc6431bcd4f926d)的*将R代码投入运行*中进一步讨论：
- en: '![](img/00040.jpeg)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00040.jpeg)'
- en: Figure 4.2 - High-Level Development Process for SQL Server Machine Learning
    Services with R
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.2 - 使用R的SQL Server机器学习服务的高级开发流程
- en: 'Let''s get started with *Data Munging in R*. Specifically, in this section,
    we will be working with the R environment so that we know how it works in R before
    we stitch it together with T-SQL. If you are familiar with R, you may skip this
    section. Following are prerequisites for this section:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从*在R中进行数据清洗*开始。具体来说，在本节中，我们将使用R环境，以便在我们将其与T-SQL结合之前了解它在R中的工作方式。如果您熟悉R，您可以跳过本节。以下为本节的前提条件：
- en: An R IDE, for example RTVS as part of Visual Studio 2015 or 2017\. For more
    information about RTVS, please visit [http://aka.ms/rtvs](http://aka.ms/rtvs).
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一个R IDE，例如作为Visual Studio 2015或2017一部分的RTVS。有关RTVS的更多信息，请访问[http://aka.ms/rtvs](http://aka.ms/rtvs)。
- en: The `WideWorldImporters` database restored to SQL Server 2016 or above. Please
    refer to [http://aka.ms/wwi](http://aka.ms/wwi) to download the full SQL backup
    files that you can restore in your environment.
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`WideWorldImporters`数据库恢复到SQL Server 2016或更高版本。请参阅[http://aka.ms/wwi](http://aka.ms/wwi)下载您可以在环境中恢复的完整SQL备份文件。
- en: Importing SQL Server data into R
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将SQL Server数据导入R
- en: The most common way to connect to SQL Server from R is by using the RODBC package.
    Please note that prior to SQL Server 2016, this is the step that you'll likely
    need to work with.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 从R连接到SQL Server最常见的方式是使用RODBC包。请注意，在SQL Server 2016之前，这是您可能需要执行的步骤。
- en: In the example below, we want to retrieve a data set related to Sales Person
    Monthly Orders in 2015 from a SQL Server instance, `MsSQLGirl`; and a database,
    `WideWorldImporters` using a trusted connection (Windows Authentication).
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的示例中，我们希望从SQL Server实例`MsSQLGirl`和数据库`WideWorldImporters`中检索与2015年销售人员月订单相关的数据集，使用的是信任连接（Windows身份验证）。
- en: 'Using RTVS, perform the steps mentioned as follows:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 使用RTVS，按照以下步骤执行：
- en: 'Create a new script called `Chapter04_01.R`. Ensure that the `RODBC` library
    is loaded by typing the following:'
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新的脚本名为 `Chapter04_01.R`。确保通过输入以下内容来加载 `RODBC` 库：
- en: '[PRE3]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Define the connection string and get the connection handle:'
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义连接字符串并获取连接句柄：
- en: '[PRE4]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Define the query that you want to run in SQL Server. This can also be a query
    to call stored procedures, functions, views and so on. In this specific example,
    the query will get the Monthly Orders in 2015 by Sales Person:'
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义你想要在 SQL Server 中运行的查询。这也可以是一个调用存储过程、函数、视图等的查询。在这个特定示例中，查询将获取 2015 年按销售人员划分的月度订单：
- en: '[PRE5]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Execute the query and store the output into `orders` variable:'
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 执行查询并将输出存储到 `orders` 变量中：
- en: '[PRE6]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Type the following to see the dataset in `orders`:'
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入以下内容以查看 `orders` 中的数据集：
- en: '[PRE7]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Or alternatively in RTVS go to the Variable Explorer window as shown in *Figure
    4 - 2* and expand orders to see the details of the variable. Use the magnifying
    glass tool (![](img/00041.jpeg) )to see the output as shown in *Figure 4 - 3*:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，在 RTVS 中，你可以转到如图 4 - 2 所示的变量资源管理器窗口，展开订单以查看变量的详细信息。使用放大镜工具（![图片](img/00041.jpeg)）查看如图
    4 - 3 所示的输出：
- en: '![](img/00042.jpeg)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00042.jpeg)'
- en: Figure 4 - 3 Variable Explorer in RTVS
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4 - 3 RTVS 中的变量资源管理器
- en: '![](img/00043.jpeg)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00043.jpeg)'
- en: Figure 4 - 4 Viewing orders in Variable Explorer
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4 - 4 在变量资源管理器中查看订单
- en: 'Here is a data dictionary of the `orders` variable. It''s useful to be familiar
    with the following columns as we will be using the orders data frame and its derived
    variables in this chapter:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是 `orders` 变量的数据字典。熟悉以下列对我们来说很有用，因为我们将在本章中使用订单数据框及其派生变量：
- en: '| **Column Names** | **Description** |'
  id: totrans-56
  prefs: []
  type: TYPE_TB
  zh: '| **列名** | **描述** |'
- en: '| `OrderMonth` | The month that the orders take place |'
  id: totrans-57
  prefs: []
  type: TYPE_TB
  zh: '| `OrderMonth` | 订单发生的月份 |'
- en: '| `OrderCount` | The number of orders in the month for the Sales person. |'
  id: totrans-58
  prefs: []
  type: TYPE_TB
  zh: '| `OrderCount` | 销售人员的月订单数量 |'
- en: '| `TotalAmount` | The order dollar amount |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '| `TotalAmount` | 订单的美元金额 |'
- en: '| `SalesPerson` | The name of the Sales Person |'
  id: totrans-60
  prefs: []
  type: TYPE_TB
  zh: '| `SalesPerson` | 销售人员的姓名 |'
- en: Exploring data in R
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 R 语言中探索数据
- en: 'There are a number of ways to explore data in R: following are some useful
    functions. `df` denotes a data frame variable and `col` denotes a column in `df`:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在 R 语言中探索数据有多种方法：以下是一些有用的函数。`df` 表示数据框变量，`col` 表示 `df` 中的列：
- en: '`head(df)` returns the first few rows of the data frame `df`, by default 6.'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`head(df)` 返回数据框 `df` 的前几行，默认为 6 行。'
- en: '`tail(df)` returns the last few rows of the data frame `df` , by default 6.'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`tail(df)` 返回数据框 `df` 的最后几行，默认为 6 行。'
- en: '`summary(df)` provides basic summary statistics for each column in the data
    frame `df` .'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`summary(df)` 为数据框 `df` 中的每个列提供基本的摘要统计信息。'
- en: '`names(df)` returns the column name of the data frame `df` .'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`names(df)` 返回数据框 `df` 的列名。'
- en: '`str(df)` returns basic information about the data frame `df`.'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`str(df)` 返回关于数据框 `df` 的基本信息。'
- en: '`describe(df$col)` describes the distribution/skewness of a set of `col` values
    in `df` data frame. This can be quite powerful for constructing scales and item
    analysis. This requires the `psych` package to be installed first.'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`describe(df$col)` 描述 `df` 数据框中 `col` 值的分布/偏度。这对于构建量表和项目分析非常有用。这需要首先安装 `psych`
    包。'
- en: 'Following is an example of using the function `str` against the data frame
    `orders`:'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以下是一个使用 `str` 函数对数据框 `orders` 进行操作的示例：
- en: '[PRE8]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'This is how the output looks:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是输出看起来像什么：
- en: '![](img/00044.jpeg)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00044.jpeg)'
- en: Figure 4-5 The Output of str(orders)
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4-5 `str(orders)` 的输出
- en: Unlike SQL Server, R is case-sensitive for both functions and variables. Ensure
    that you type them correctly.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 与 SQL Server 不同，R 语言对函数和变量都是大小写敏感的。请确保你正确地输入它们。
- en: Data munging in R
  id: totrans-75
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: R 语言中的数据整理
- en: Data munging is the manual process of transforming one *raw* format into another
    format so that it is more consumable, either by humans or the next processes such
    as reporting, data visualization, statistical analysis, predictive analysis, and
    many more.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 数据整理是将一种 *原始* 格式转换为另一种格式以便更易于消费的手动过程，无论是供人类使用还是供后续过程（如报告、数据可视化、统计分析、预测分析等）使用。
- en: 'There are numerous R packages that are available for Data Munging. R comes
    preloaded with packages for simple data transformation and visualization. In this
    section, you will learn two super powerful packages that are commonly used for
    data munging: `dplyr`, `reshape`, and `lubridate`.'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多 R 语言包可用于数据整理。R 语言预装了用于简单数据转换和可视化的包。在本节中，你将学习两个常用的数据整理超级强大包：`dplyr`、`reshape`
    和 `lubridate`。
- en: Adding/removing rows/columns in data frames
  id: totrans-78
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在数据框中添加/删除行/列
- en: 'Adding or removing rows or columns can be achieved easily. Following is a list
    of examples showing how you can achieve it with R as well as using `dplyr`:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 添加或删除行或列可以轻松实现。以下是一些示例，展示了如何使用R以及`dplyr`来实现：
- en: '**Adding new rows**: Let''s create a new data frame, `orders_newrows`, which contain
    2 new rows that we want to append to the end of `orders`. Then we want to see
    the last few rows of `orders`, using the `tail` function:'
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**添加新行**：让我们创建一个新的数据框，`orders_newrows`，其中包含2行新数据，我们希望将其追加到`orders`的末尾。然后我们想使用`tail`函数查看`orders`的最后几行：'
- en: '[PRE9]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'This will trigger the following output:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 这将触发以下输出：
- en: '[PRE10]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Using `dplyr`, you can call `bind_rows` to append multiple data frames. For
    example, the following displays `orders` and `orders_newrows` appended twice:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`dplyr`，你可以调用`bind_rows`来追加多个数据框。例如，以下显示了`orders`和`orders_newrows`被追加两次：
- en: '[PRE11]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '**Adding new columns**: To illustrate let''s create a new data frame `orders_tax`
    that contains a sequence id for each row and the 10% Sales Tax amount of the Total
    Amount. We use `cbind` function to bind the orders variable with the `orders_tax`
    variable:'
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**添加新列**：为了说明，让我们创建一个新的数据框`orders_tax`，其中包含每行的序列ID和10%的销售税金额。我们使用`cbind`函数将`orders`变量与`orders_tax`变量绑定：'
- en: '[PRE12]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'This will give us the following output:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 这将给出以下输出：
- en: '[PRE13]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Using `dplyr`, you can call `bind_cols` to add a new column:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`dplyr`，你可以调用`bind_cols`来添加新列：
- en: '[PRE14]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'The output is as follows:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE15]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Or you can add a new column called `TotalPlusTax`:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 或者你可以添加一个名为`TotalPlusTax`的新列：
- en: '[PRE16]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '**Removing a column**: Now let''s remove `RowID` from `orders`:'
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**删除列**：现在让我们从`orders`中删除`RowID`：'
- en: '[PRE17]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: The command `names(orders)` lists the column names in orders. So, `!names(orders)
    == "RowID"` excludes the column name `RowID`.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 命令`names(orders)`列出了`orders`中的列名。因此，`!names(orders) == "RowID"`排除了列名`RowID`。
- en: 'Using `dplyr`, you can call `select` to select a set of column. For example,
    the following excludes `RowID` from `orders`:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`dplyr`，你可以调用`select`来选择一组列。例如，以下是从`orders`中排除`RowID`的示例：
- en: '[PRE18]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'You can also easily select columns in orders where the column names start with
    `Order`:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以轻松选择以`Order`开头的列：
- en: '[PRE19]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Let''s show `orders` with `SalesPerson` starting with `J`. First, to get the
    indexes of those that start with `J`, we can use the `grep` function:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们显示以`SalesPerson`开头的`orders`。首先，为了获取以`J`开头的索引，我们可以使用`grep`函数：
- en: '[PRE20]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Using `dplyr`, you can call `select` to select a set of column. For example,
    the following excludes `RowID` from `orders`:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`dplyr`，你可以调用`select`来选择一组列。例如，以下是从`orders`中排除`RowID`的示例：
- en: '[PRE21]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: You may have noticed in the last few `dplyr` examples that `dplyr` has a friendlier
    syntax. As an example, in the `filter` function, there is no need to specify the
    variable that the column belongs to.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能已经注意到在最后的几个`dplyr`示例中，`dplyr`的语法更加友好。例如，在`filter`函数中，不需要指定列所属的变量。
- en: '`  > orders[grep("^J.*", orders$SalesPerson),]; # base`'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '`  > orders[grep("^J.*", orders$SalesPerson),]; # base`'
- en: '`> filter(orders, grepl("^J.*", SalesPerson)); # dplyr` Also, the select function
    is much friendlier.'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '`> filter(orders, grepl("^J.*", SalesPerson)); # dplyr` 此外，选择函数更加友好。'
- en: '`  > orders <- orders[, !names(orders) == "RowID"] # base`'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: '`  > orders <- orders[, !names(orders) == "RowID"] # base`'
- en: '`  > select(orders, -RowID); # dplyr`'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: '`  > select(orders, -RowID); # dplyr`'
- en: More data munging with dplyr
  id: totrans-112
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用dplyr进行更多数据处理
- en: The following is a quick list of useful data munging activities, functions,
    and examples. `df` denotes a data frame variable.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些有用的数据处理活动、函数和示例的快速列表。`df`表示数据框变量。
- en: '| **Purpose** | **Functions** |'
  id: totrans-114
  prefs: []
  type: TYPE_TB
  zh: '| **目的** | **函数** |'
- en: '| Rename columns | `rename(df, new_column_name = old_column_name)` |'
  id: totrans-115
  prefs: []
  type: TYPE_TB
  zh: '| 重命名列 | `rename(df, new_column_name = old_column_name)` |'
- en: '| Sort/order data | `arrange(df, col1)`order data frame `df` by `col1`. |'
  id: totrans-116
  prefs: []
  type: TYPE_TB
  zh: '| 排序/排序数据 | `arrange(df, col1)`按`col1`对数据框`df`进行排序。 |'
- en: '| Deduplicate data | `distinct(df)``distinct(df, [column names])`Deduplicate
    `df` for `[column names]` when provided. |'
  id: totrans-117
  prefs: []
  type: TYPE_TB
  zh: '| 去重数据 | `distinct(df)``distinct(df, [列名])`当提供时，对`df`的`[列名]`去重。 |'
- en: '| Piping | *x %>% f(y)*Perform *f(x,y)*. You can nest the syntax. For example:*x
    %>% f(y)**%>% g(z) *is equivalent to *x %>% g(f(x,y),z)*. |'
  id: totrans-118
  prefs: []
  type: TYPE_TB
  zh: '| 管道 | *x %>% f(y)*执行*f(x,y)*。你可以嵌套语法。例如:*x %>% f(y)**%>% g(z)*等价于*x %>% g(f(x,y),z)*。
    |'
- en: Finding missing values
  id: totrans-119
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 查找缺失值
- en: R has a very short and simple way of finding missing values, which is `is.na(df)`.
    It returns row index(es) in `df` with missing values.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: R有非常简短和简单的方法来查找缺失值，即`is.na(df)`。它返回`df`中带有缺失值的行索引。
- en: Transpose data
  id: totrans-121
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 转置数据
- en: Transposing a dataset is not a trivial thing to do in SQL Server. Use `t(df)`
    in R to swap rows and columns of a data frame, `df`.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 在 SQL Server 中对数据集进行转置不是一件简单的事情。在 R 中使用 `t(df)` 来交换数据框 `df` 的行和列。
- en: Pivot / Unpivot data
  id: totrans-123
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 透视/逆透视数据
- en: The `reshape` package is super useful for pivoting and unpivoting data.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '`reshape` 包在数据透视和逆透视方面非常有用。'
- en: 'Use `cast` to pivot data as follows:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `cast` 透视数据如下：
- en: '[PRE22]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Use `melt` to unpivot data as follows:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `melt` 逆透视数据如下：
- en: '[PRE23]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Example - data exploration and munging using R in T-SQL
  id: totrans-129
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 示例 - 使用 R 在 T-SQL 中进行数据探索和整理
- en: 'As shown earlier, there are very nifty data munging and data exploration techniques
    that you can do in R. Let''s now stitch it all together in T-SQL. In this following
    example, we want to get a statistical summary of monthly sales person order counts
    and the total amount, in 2015 - specifically Min, Max, 1^(st) Quartile, Median,
    3^(rd) Quartile - to get a sense of the data range and the distribution of the
    monthly orders per sales person:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，R 中有一些非常实用的数据处理和探索技术。现在让我们将它们全部在 T-SQL 中拼接起来。在下面的示例中，我们想要获取 2015 年每月销售人员订单数量和总金额的统计摘要，具体为最小值、最大值、1^(st)
    分位数、中位数、3^(rd) 分位数，以了解数据范围和每月每个销售人员的订单分布：
- en: '[PRE24]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Data visualization in R
  id: totrans-132
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: R 中的数据可视化
- en: Good data visualization draws insights from a large amount of data and serves
    as a medium to communicate to the audience. Fortunately, R has powerful built-in
    functions as well as packages that can help you to create good data visualization.
    In this section, we will go through a number of built-in graphical functions and
    R libraries to show their capabilities. Then we'll walk through an example on
    how to stitch it together with T-SQL. You will also learn how to display graphics
    from R in SQL Operations Studio. Similar to the previous section, we will be using
    the `orders` dataset and will create a data frame **d** to narrow down the analysis
    for sales persons Amy, Jack, and Hudson.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 良好的数据可视化可以从大量数据中提取洞察力，并作为与观众沟通的媒介。幸运的是，R 有强大的内置函数以及可以帮助你创建良好数据可视化的包。在本节中，我们将探讨一些内置的图形函数和
    R 库，以展示它们的特性。然后我们将通过一个示例来展示如何与 T-SQL 结合使用。你还将学习如何在 SQL Operations Studio 中显示 R
    的图形。与上一节类似，我们将使用 `orders` 数据集，并创建一个名为 **d** 的数据框来缩小对销售人员 Amy、Jack 和 Hudson 的分析。
- en: Plot
  id: totrans-134
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 折线图
- en: The `plot()` function in R draws a simple scatterplot showing the relationship
    between two variables and distribution trends/outliers.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: R 中的 `plot()` 函数绘制一个简单的散点图，显示两个变量之间的关系和分布趋势/异常值。
- en: 'Here''s an example of a script that visualizes the relationship between the
    number of orders and the monthly sales amount for `Amy`, `Jack`, and `Hudson`
    in 2015:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个脚本示例，用于可视化 2015 年 `Amy`、`Jack` 和 `Hudson` 的订单数量与每月销售金额之间的关系：
- en: '[PRE25]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'The following diagram shows the Monthly Amount and the number of Orders that
    each Sales Person made in 2015\. Using a plot like this allows us to easily see
    that there is a strong Sales Person denoted in blue dots:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图表显示了 2015 年每个月每个销售人员所下的订单金额和订单数量。使用这样的图表可以让我们轻松地看到，用蓝色点表示的销售人员表现非常出色：
- en: '![](img/00045.gif)'
  id: totrans-139
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00045.gif)'
- en: Figure 4-5 Scatterplot using the basic plot function
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4-5 使用基本绘图函数绘制的散点图
- en: Obviously the preceding plot diagram takes a few steps to draw and you'll also
    need to add a `legend()` call to map the colors to the Sales Person. Following
    is a simpler way to draw a plot diagram with a one call.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 显然，前面的折线图需要几个步骤来绘制，你还需要添加一个 `legend()` 调用来将颜色映射到销售人员。以下是一个使用一个调用绘制折线图的更简单方法。
- en: 'The `ggplot2` library offers an easy way to create a similar chart using the
    `qplot` function. Following script is equivalent to the previous call:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: '`ggplot2` 库提供了一个简单的方法来使用 `qplot` 函数创建类似的图表。以下脚本与之前的调用等效：'
- en: '[PRE26]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'The following chart comes complete with a legend, which helps to show that
    Hudson is the top-performing SalesPerson:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的图表包含一个图例，有助于显示 Hudson 是表现最好的销售人员：
- en: '![](img/00046.gif)'
  id: totrans-145
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00046.gif)'
- en: Figure 4-6 Scatterplot using the ggplot function
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4-6 使用 ggplot 函数绘制的散点图
- en: Histogram
  id: totrans-147
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 直方图
- en: The `hist()` function in R draws a histogram representing the frequency distribution
    of the dataset.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: R 中的 `hist()` 函数绘制一个直方图，表示数据集的频率分布。
- en: 'Here''s a script that draws a frequency distribution of the monthly sales person
    Total Amount in 2015:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个绘制 2015 年每月销售人员总金额频率分布的脚本：
- en: '[PRE27]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Using the following histogram, we can easily see that the most common monthly
    total amount (per sales person) is between $400 K and $500 K every month:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下直方图，我们可以轻松地看到最常见的月度总金额（每个销售人员）每月在40万至50万美元之间：
- en: '![](img/00047.gif)'
  id: totrans-152
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00047.gif)'
- en: Figure 4-7 Histogram chart using basic hist function
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 图4-7 使用基本hist函数的直方图图表
- en: Boxplot
  id: totrans-154
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 盒形图
- en: 'The boxplot chart allows us to show outliers for each Sales Person. This can
    easily be achieved in R using the `boxplot()` function. However, the `ggplot`
    function is very easy to use and to customize. Here''s an example of writing a
    boxplot diagram using `ggplot()`:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 盒形图图表使我们能够显示每个销售人员的异常值。这可以通过在R中使用`boxplot()`函数轻松实现。然而，`ggplot`函数非常易于使用和定制。以下是一个使用`ggplot()`编写盒形图图表的示例：
- en: '[PRE28]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'The following diagram shows the distribution of the Monthly Orders that each
    Sales Person made in 2015:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图表显示了2015年每个销售人员制作的月度订单的分布：
- en: '![](img/00048.gif)'
  id: totrans-158
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00048.gif)'
- en: Figure 4-8 Boxplot chart using ggplot function
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 图4-8 使用ggplot函数的盒形图图表
- en: Scatter plot
  id: totrans-160
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 散点图
- en: In R, `scatterplot()` can be used to understand the relationship/trend between
    variables.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 在R中，`scatterplot()`可以用来理解变量之间的关系/趋势。
- en: 'Following is an example of using scatterplot to understand the trend of monthly
    total amounts in 2015 for Amy, Hudson, and Jack:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一个使用散点图来理解2015年Amy、Hudson和Jack月度总金额趋势的示例：
- en: '[PRE29]'
  id: totrans-163
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Based on the following diagram, we can draw the conclusion that Hudson''s monthly
    Total Amount is trending slightly down even though in general they are higher
    than Amy''s and Jack. We can also see that Amy''s monthly Total Amount has dropped
    quite sharply:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 根据以下图表，我们可以得出结论，尽管Hudson的月度总金额总体上高于Amy和Jack，但它们略有下降趋势。我们还可以看到Amy的月度总金额急剧下降：
- en: '![](img/00049.gif)'
  id: totrans-165
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00049.gif)'
- en: Figure 4-9 Scatterplot chart using the scatterplot function
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 图4-9 使用scatterplot函数的散点图图表
- en: 'The ggplot function can also be used to create a scatterplot and overlays it
    with smooth lines that show the monthly pattern of the Sales Person:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: '`ggplot`函数还可以用于创建散点图，并使用平滑的线条叠加显示销售人员的月度模式：'
- en: '[PRE30]'
  id: totrans-168
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: '![](img/00050.gif)'
  id: totrans-169
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00050.gif)'
- en: Figure 4-10 Scatterplot chart using ggplot function
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 图4-10 使用ggplot函数的散点图图表
- en: Tree diagram
  id: totrans-171
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 树形图
- en: Data preparation for predictive modeling includes exploring the data structure
    and visualizing the decision rules for predicting values. These values can be
    categorical and continuous, represented as classification tree and regression
    tree respectively.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 预测建模的数据准备包括探索数据结构和可视化预测值的决策规则。这些值可以是分类的，也可以是连续的，分别表示为分类树和回归树。
- en: 'Below is an example of script to create a tree diagram depicting the decision
    rules for predicting the monthly Total Amount for a given Sales Person and `OrderCount`:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是一个示例脚本，用于创建一个树形图，描述预测给定销售人员和`OrderCount`的月度总金额的决策规则：
- en: '[PRE31]'
  id: totrans-174
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Running the preceding script will give a neat tree diagram with the first line
    on the node as the average monthly Total Amount (that is, *619e+3* in scientific
    notation is actually $619,000), followed by n as the number of observations and
    the percentage that makes up the node:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 运行前面的脚本将给出一个整洁的树形图，节点上的第一行是平均月度总金额（即，科学记数法中的*619e+3*实际上是$619,000），后面跟着n作为观测数的数量和构成节点的百分比：
- en: '![](img/00051.gif)'
  id: totrans-176
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00051.gif)'
- en: Figure 4-11 Tree Diagram using the rpart function
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 图4-11 使用rpart函数的树形图
- en: Example – R data visualization in T-SQL
  id: totrans-178
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 示例 - T-SQL中的R数据可视化
- en: Now that we have learned a few examples of using R for data visualization, let's
    stitch it all together with T-SQL in SQL Operations Studio. Please note that SSMS
    doesn't render the image produced by R in T-SQL.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经学习了几个使用R进行数据可视化的示例，让我们将它们与SQL Operations Studio中的T-SQL结合起来。请注意，SSMS无法渲染T-SQL生成的R图像。
- en: Download SQL Operations Studio from [https://docs.microsoft.com/en-us/sql/sql-operations-studio/download](https://docs.microsoft.com/en-us/sql/sql-operations-studio/download).
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 从[https://docs.microsoft.com/en-us/sql/sql-operations-studio/download](https://docs.microsoft.com/en-us/sql/sql-operations-studio/download)下载SQL
    Operations Studio。
- en: Perform the following steps to run R in T-SQL to produce an image that can be
    visualized in SQL Operations Studio.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤以在T-SQL中运行R，生成可以在SQL Operations Studio中可视化的图像。
- en: Open SQL Operations Studio.
  id: totrans-182
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开SQL Operations Studio。
- en: Connect to the `WideWorldImporters` database in your server in SQL Operations
    Studio.
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在SQL Operations Studio中连接到服务器上的`WideWorldImporters`数据库。
- en: 'Copy `Part 1` from Example: Data Visualization in T-SQL as we want to reuse
    the `@SQLScript` variable definition:'
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从示例中复制`Part 1`到数据可视化在 T-SQL 中，因为我们想重用`@SQLScript`变量定义：
- en: '[PRE32]'
  id: totrans-185
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: In SQL Operations Studio, execute the preceding script and you will get a result
    set with a column called `plot`.
  id: totrans-186
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 SQL Operations Studio 中执行前面的脚本，你将得到一个包含名为`plot`的列的结果集。
- en: 'Click on Chart Viewer, then choose image from Chart Type:'
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击图表查看器，然后从图表类型中选择图像：
- en: '![](img/00052.jpeg)'
  id: totrans-188
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00052.jpeg)'
- en: Figure 4-12 Data Visualization output from R in SQL Operations Studio
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4-12 SQL Operations Studio 中 R 的数据可视化输出
- en: Integrating R code in reports and visualizations
  id: totrans-190
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在报告和可视化中集成 R 代码
- en: In this section, we will delve into familiar reports and visualization Tools
    that are available in the Microsoft BI stack, such as **SQL Server Reporting Services**
    (**SSRS**), Power BI, and Mobile Reports.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将深入了解 Microsoft BI 堆栈中可用的熟悉报告和可视化工具，例如 **SQL Server Reporting Services**
    (**SSRS**)、Power BI 和移动报告。
- en: There are three main use cases for integrating R graphics with SQL Server.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 将 R 图形与 SQL Server 集成的三个主要用例。
- en: 'Get a dataset output representing data / statistical analysis, training model,
    or predictive model:'
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 获取表示数据/统计分析、训练模型或预测模型的数据集输出：
- en: '![](img/00053.jpeg)'
  id: totrans-194
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00053.jpeg)'
- en: Figure 4-13 SQL Server Machine Learning Services process for data analysis in
    R
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4-13 SQL Server 机器学习服务在 R 中的数据分析过程
- en: Execute `sp_execute_external_script` to run R to produce a dataset output as
    illustrated in (1) + (2) + (3). The data set output (3) could be from data/statistical
    analysis, a training model, predictive output, and so on. In SQL Server, we can
    optionally process the output further (4), for example, saving it into a table
    or passing it on to another stored procedure.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 执行`sp_execute_external_script`以运行 R 并生成如图 (1) + (2) + (3) 所示的数据集输出。数据集输出 (3)
    可以来自数据/统计分析、训练模型、预测输出等。在 SQL Server 中，我们可以选择进一步处理输出（4），例如，将其保存到表中或将它传递给另一个存储过程。
- en: Get a dataset output containing the varbinary representation of the graphics
    output of R.
  id: totrans-197
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 获取包含 R 图形输出 varbinary 表示的数据集输出。
- en: '![](img/00054.jpeg)'
  id: totrans-198
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00054.jpeg)'
- en: Figure 4-14 SQL Server R Services process for data visualization
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4-14 SQL Server R 服务的数据可视化过程
- en: Execute `sp_execute_external_script` to run R to produce a dataset output as
    illustrated in (1) + (2) + (3). The dataset output (3) in this case would have
    a varbinary (max) representation of the graphics output. In SQL Server, we can
    insert the output further (4), for example, saving the images as varbinary (max)
    into a table.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 执行`sp_execute_external_script`以运行 R 并生成如图 (1) + (2) + (3) 所示的数据集输出。在这种情况下，数据集输出
    (3) 将包含图形输出的 varbinary (max) 表示。在 SQL Server 中，我们可以进一步插入输出（4），例如，将图像作为 varbinary
    (max) 保存到表中。
- en: 'Save the R graphics output to files and store the file paths in the dataset
    output. This is ideal when offline rendering is preferred:'
  id: totrans-201
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 R 图形输出保存到文件中，并将文件路径存储在数据集输出中。当首选离线渲染时，这是理想的：
- en: '![](img/00055.jpeg)'
  id: totrans-202
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00055.jpeg)'
- en: Figure 4-17 SQL Server Machine Learning Services process for data visualization
    to files
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4-17 SQL Server 机器学习服务的数据可视化到文件的过程
- en: 'Execute `sp_execute_external_script` to run R to produce a dataset output as
    illustrated in (1) + (2) + (3). The dataset output (3) in this case contain the
    file paths where the graphic outputs need to reside. In SQL Server, we can optionally
    process the output further (4). You can also integrate Filestream for this solution
    as described in *Tomaž Kaštrun''s* blog here:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 执行`sp_execute_external_script`以运行 R 并生成如图 (1) + (2) + (3) 所示的数据集输出。在这种情况下，数据集输出
    (3) 包含图形输出需要驻留的文件路径。在 SQL Server 中，我们可以选择进一步处理输出（4）。您还可以如 *Tomaž Kaštrun 的* 博客中所述，为此解决方案集成
    Filestream：
- en: '[https://tomaztsql.wordpress.com/2016/09/25/filetable-and-storing-graphs-from-microsoft-r-server/](https://tomaztsql.wordpress.com/2016/09/25/filetable-and-storing-graphs-from-microsoft-r-server/)'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://tomaztsql.wordpress.com/2016/09/25/filetable-and-storing-graphs-from-microsoft-r-server/](https://tomaztsql.wordpress.com/2016/09/25/filetable-and-storing-graphs-from-microsoft-r-server/)'
- en: Integrating R in SSRS reports
  id: totrans-206
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 SSRS 报告中集成 R
- en: SSRS reports can read datasets from either a query or a stored procedure. Essentially
    this gives us enough flexibility to choose how we want to incorporate the R output
    as part of ad-hoc or operational reports in SSRS.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: SSRS 报告可以从查询或存储过程中读取数据集。本质上，这为我们提供了足够的灵活性，以选择我们想要如何将 R 输出作为 SSRS 中的即席或操作报告的一部分。
- en: Now, let's take a look at a couple of examples where we integrate R in SSRS
    Reports. Suppose a data analyst wants to do a quick statistical analysis to understand
    the strength of the relationship between Sales Person and Total Amount. It's very
    easy to do this using SSRS. Here's an example showing how you can achieve this.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们看看几个将 R 集成到 SSRS 报告中的例子。假设一个数据分析师想要快速进行统计分析，以了解销售人员与总金额之间关系的强度。使用 SSRS
    做这件事非常简单。以下是一个示例，说明您如何实现这一点。
- en: Using either **Visual Studio 2017** or **SQL Server Management Studio**, connect
    to `WideWorldImporters`.
  id: totrans-209
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 **Visual Studio 2017** 或 **SQL Server Management Studio** 连接到 `WideWorldImporters`。
- en: 'Create a new stored procedure called `dbo.usp_AnalyzeOrdersUsingAnova`:'
  id: totrans-210
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为 `dbo.usp_AnalyzeOrdersUsingAnova` 的新存储过程：
- en: '[PRE33]'
  id: totrans-211
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: Using Visual Studio 2017 or Report Builder, create a new report.
  id: totrans-212
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 Visual Studio 2017 或 Report Builder 创建一个新的报告。
- en: Save this file as `SQL+R_Chapter04_SSRS_Anova_01.rdl` by pressing *Ctrl*+*S*,
    or go to the File menu and click Save.
  id: totrans-213
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过按 *Ctrl*+*S* 或转到文件菜单并点击保存来将此文件保存为 `SQL+R_Chapter04_SSRS_Anova_01.rdl`。
- en: Create a new Data Source and save this `WideWorldImporters` that connects to
    the `WideWorldImporters` database on your server.
  id: totrans-214
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新的数据源，并保存名为 `WideWorldImporters` 的数据源，该数据源连接到您服务器上的 `WideWorldImporters`
    数据库。
- en: 'Then create a new Data Set with the following query definition, then click
    Refresh Fields:'
  id: totrans-215
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后创建一个新的数据集，其查询定义如下，然后点击刷新字段：
- en: '[PRE34]'
  id: totrans-216
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: '![](img/00056.jpeg)'
  id: totrans-217
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00056.jpeg)'
- en: Figure 4-16 Specify the stored procedure to execute
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4-16 指定要执行的存储过程
- en: 'Create a **Tablix** to represent `AOV_SalesPerson` columns:'
  id: totrans-219
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个 **Tablix** 来表示 `AOV_SalesPerson` 列：
- en: '![](img/00057.gif)'
  id: totrans-220
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00057.gif)'
- en: Figure 4-17 Add a Tablix that has all the columns from AOV_SalesPerson
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4-17 添加包含 AOV_SalesPerson 所有列的 Tablix
- en: 'Optionally add another **Tablix** where its `DataSetName` is mapped to `AOV_SalesPerson`.
    On the first cell of the **Tablix** body, describe how to interpret the analysis
    with the following expression:'
  id: totrans-222
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 可选地添加另一个 **Tablix**，其 `DataSetName` 映射到 `AOV_SalesPerson`。在 **Tablix** 体的第一个单元格中，使用以下表达式描述如何解释分析：
- en: '[PRE35]'
  id: totrans-223
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'Click Run to see a preview of the report:'
  id: totrans-224
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击运行以预览报告：
- en: '![](img/00058.jpeg)'
  id: totrans-225
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00058.jpeg)'
- en: Figure 4-18 Preview the Report
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4-18 预览报告
- en: Another scenario that is commonly seen for using R is to draw data visualizations.
    In the following example, we are going to compare how Sales Person performs in
    the year 2015\. From here, we can see the trend of Sales Person monthly orders
    and how they're performing in the 12 months.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个常见场景是使用 R 绘制数据可视化。在以下示例中，我们将比较销售人员 2015 年的表现。从这里，我们可以看到销售人员每月订单的趋势以及他们在 12
    个月的表现。
- en: Using either **Visual Studio 2017** or **SQL Server Management Studio**, connect
    to `WideWorldImporters`.
  id: totrans-228
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 **Visual Studio 2017** 或 **SQL Server Management Studio** 连接到 `WideWorldImporters`。
- en: 'Create a new stored procedure called `dbo.usp_CreateMonthlySalesPlot`:'
  id: totrans-229
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为 `dbo.usp_CreateMonthlySalesPlot` 的新存储过程：
- en: '[PRE36]'
  id: totrans-230
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'In Report Builder, open `SQL+R_Chapter04_SSRS_Anova_01.rdl` from earlier, create
    a new Data Set with the following query definition, then click Refresh Fields.
    The field created is called `Plot` and there should be one row:'
  id: totrans-231
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Report Builder 中，打开之前创建的 `SQL+R_Chapter04_SSRS_Anova_01.rdl`，创建一个新的数据集，其查询定义如下，然后点击刷新字段。创建的字段名为
    `Plot`，应该有一行：
- en: '[PRE37]'
  id: totrans-232
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: '![](img/00059.jpeg)'
  id: totrans-233
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00059.jpeg)'
- en: Figure 4-19 Specify the stored procedure to be executed
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4-19 指定要执行的存储过程
- en: 'Insert a new Image, with the following General properties:'
  id: totrans-235
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 插入一个新图像，具有以下常规属性：
- en: 'Select the image source: Database'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 选择图像源：数据库
- en: 'Use this field: `=First(Fields!plot.Value, "MonthlyPlot")`'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 使用此字段：`=First(Fields!plot.Value, "MonthlyPlot")`
- en: 'Use this MIME type: `image/jpeg`'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 使用此 MIME 类型：`image/jpeg`
- en: '![](img/00060.gif)'
  id: totrans-239
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00060.gif)'
- en: Figure 4-20 Configure Image to render the plot
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4-20 配置图像以渲染图表
- en: Optionally, go to the Size item on the left pane and change Display to Original
    Size.
  id: totrans-241
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 可选地，转到左侧面板的“大小”项，并将显示更改为原始大小。
- en: 'Click Run to see a preview of the report:'
  id: totrans-242
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击运行以预览报告：
- en: '![](img/00061.jpeg)'
  id: totrans-243
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00061.jpeg)'
- en: Figure 4-21 Preview the report with the plot
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4-21 预览带有图表的报告
- en: This RDL file can now be published to an **SSRS Report Server**.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 此 RDL 文件现在可以发布到 **SSRS 报告服务器**。
- en: 'For more information about SSRS, the following Microsoft Docs website is very
    useful:'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 关于 SSRS 的更多信息，以下 Microsoft Docs 网站非常有用：
- en: '[https://docs.microsoft.com/sql/reporting-services/create-deploy-and-manage-mobile-and-paginated-reports](https://docs.microsoft.com/sql/reporting-services/create-deploy-and-manage-mobile-and-paginated-reports)'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://docs.microsoft.com/sql/reporting-services/create-deploy-and-manage-mobile-and-paginated-reports](https://docs.microsoft.com/sql/reporting-services/create-deploy-and-manage-mobile-and-paginated-reports)'
- en: Integrating R in Power BI
  id: totrans-248
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Power BI中集成R
- en: 'Power BI is a powerful tool for visualizing data. Together with R, Power BI
    can render beautiful images with uncompromised dynamic interactivity. In this
    example, you''ll learn how to create data visualizations similar to the one that
    we created in SSRS in the previous section:'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: Power BI是一个强大的数据可视化工具。与R结合使用，Power BI可以渲染具有无妥协动态交互性的美丽图像。在本例中，您将学习如何创建与我们在上一节中在SSRS中创建的类似的数据可视化：
- en: '![](img/00062.jpeg)'
  id: totrans-250
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00062.jpeg)'
- en: Figure 4-22 Power BI Visualization with R Script Editor
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 图4-22 使用R脚本编辑器的Power BI可视化
- en: 'For simplicity, we will use Power BI desktop but you could just as well create
    one from the online [PowerBI.com](https://powerbi.microsoft.com/en-us/) version:'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 为了简单起见，我们将使用Power BI桌面，但您也可以从在线[PowerBI.com](https://powerbi.microsoft.com/en-us/)版本创建：
- en: Launch **Power BI Desktop** and create a new file.
  id: totrans-253
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动**Power BI桌面**并创建一个新文件。
- en: From the Home menu, click on Get Data | SQL Server.
  id: totrans-254
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**主页**菜单中，单击**获取数据**|**SQL Server**。
- en: Connect to your SQL Server instance that has the `WideWorldImporters` database.
  id: totrans-255
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 连接到包含`WideWorldImporters`数据库的SQL Server实例。
- en: 'Then click on Advanced Options to provide the following query on the SQL statement
    field:'
  id: totrans-256
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后单击**高级选项**，在SQL语句字段提供以下查询：
- en: '[PRE38]'
  id: totrans-257
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'The dialog box should now look like this:'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 对话框现在应该看起来像这样：
- en: '![](img/00063.jpeg)'
  id: totrans-259
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00063.jpeg)'
- en: Figure 4-23 SQL Server database data source details
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 图4-23 SQL Server数据库数据源详细信息
- en: Click OK to see the preview of the query.
  id: totrans-261
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击**确定**以查看查询预览。
- en: 'Then click Load on the preview window:'
  id: totrans-262
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后在预览窗口中单击**加载**：
- en: '![](img/00064.jpeg)'
  id: totrans-263
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00064.jpeg)'
- en: Figure 4-24 Preview of the query
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 图4-24 查询预览
- en: From the Visualizations pane, click on the R Script icon.
  id: totrans-265
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在可视化窗格中，单击R脚本图标。
- en: Drag and drop the `OrderMonth`, `SalesPerson`, and `TotalAmount` columns from
    the Fields pane into the Values box.
  id: totrans-266
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`OrderMonth`、`SalesPerson`和`TotalAmount`列从字段窗格拖放到值框中。
- en: 'Please note that your table might be called `Query1` and you can rename this
    to something more meaningful such as MonthlyOrders, as shown as follows:'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，您的表可能被命名为`Query1`，您可以将其重命名为更有意义的名称，例如`MonthlyOrders`，如下所示：
- en: '![](img/00065.jpeg)'
  id: totrans-268
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00065.jpeg)'
- en: Figure 4-25 Choose Fields as inputs to R
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 图4-25 将字段作为R的输入选择
- en: 'With the OrderMonth, instead of the default Date Hierarchy choose OrderMonth
    from the drop-down list in the Values field:'
  id: totrans-270
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用**OrderMonth**，而不是默认的日期层次结构，从值字段的下拉列表中选择**OrderMonth**：
- en: '![](img/00066.jpeg)'
  id: totrans-271
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00066.jpeg)'
- en: Figure 4-26 Choose Order Month instead of Data Hierarchy to display
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 图4-26 选择订单月份而不是数据层次结构来显示
- en: 'Ensure that the R Script graphic box is still in focus. Optionally you can
    resize it to make it wider or taller:'
  id: totrans-273
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保R脚本图形框仍然处于焦点。可选地，您可以调整其大小以使其更宽或更高：
- en: '![](img/00067.jpeg)'
  id: totrans-274
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00067.jpeg)'
- en: Figure 4-27 R Visualization box in Power BI Desktop
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 图4-27 Power BI桌面中的R可视化框
- en: 'Then, in **R Script Editor** located on the lower half of Power BI screen,
    enter the following R code:'
  id: totrans-276
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，在Power BI屏幕下半部分的**R脚本编辑器**中，输入以下R代码：
- en: '[PRE39]'
  id: totrans-277
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: Click on the Run Script button located on the right of the R Script Editor bar.
  id: totrans-278
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在R脚本编辑器栏的右侧单击**运行脚本**按钮。
- en: Add a Slicer, then drag and drop OrderMonth.
  id: totrans-279
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加一个切片器，然后拖放`OrderMonth`。
- en: 'Deselect all the OrderMonth hierarchy except for Year, by clicking on the X from
    the OrderMonth list in the **Values** filed:'
  id: totrans-280
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**值**字段中，通过单击**OrderMonth**列表中的X取消选择除年份之外的所有`OrderMonth`层次结构：
- en: '![](img/00068.jpeg)'
  id: totrans-281
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00068.jpeg)'
- en: Figure 4-28 Slicer for Year
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 图4-28 年份切片器
- en: 'Now your Power BI report should look something like this:'
  id: totrans-283
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，您的Power BI报告应该看起来像这样：
- en: '![](img/00069.jpeg)'
  id: totrans-284
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00069.jpeg)'
- en: Figure 4-29 Power BI Report
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 图4-29 Power BI报告
- en: Summary
  id: totrans-286
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, you have learned the importance of data preparation in predictive
    modeling, which involves both data exploration and data visualization exercises.
    R has a number of open-source packages that are useful for data munging, for example
    `dplyr`, `reshape`, and many more. The challenge is to hit the right balance between
    having data munging activities in SQL Server VS in R. The beauty of SQL Server
    Machine Learning Services is that it allows easy integration with SQL Server Reporting
    Services. In addition, Power BI also supports interactive data exploration with
    R visualizations. In the next chapter, you will learn more about the `RevoScaleR`
    library for portable, scalable, and distributable R functions.
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你已经学习了数据准备在预测建模中的重要性，这包括数据探索和数据可视化练习。R 有许多开源包对数据处理非常有用，例如 `dplyr`、`reshape`
    以及更多。挑战在于在 SQL Server 和 R 之间找到合适的平衡点，进行数据处理活动。SQL Server 机器学习服务的美丽之处在于它允许轻松与 SQL
    Server 报告服务集成。此外，Power BI 也支持使用 R 可视化进行交互式数据探索。在下一章中，你将了解更多关于 `RevoScaleR` 库的信息，该库用于便携、可扩展和可分发的
    R 函数。
