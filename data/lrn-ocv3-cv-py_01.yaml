- en: Chapter 1. Setting Up OpenCV
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 1 章。设置 OpenCV
- en: You picked up this book so you may already have an idea of what OpenCV is. Maybe,
    you heard of Sci-Fi-sounding features, such as face detection, and got intrigued.
    If this is the case, you've made the perfect choice. **OpenCV** stands for **Open
    Source Computer Vision**. It is a free computer vision library that allows you
    to manipulate images and videos to accomplish a variety of tasks from displaying
    the feed of a webcam to potentially teaching a robot to recognize real-life objects.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 你选择这本书，可能已经对 OpenCV 有了一定的了解。也许，你听说过一些科幻般的功能，比如人脸检测，并对此产生了兴趣。如果是这样，你做出了完美的选择。**OpenCV**
    代表 **开源计算机视觉**。它是一个免费的计算机视觉库，允许你操纵图像和视频，以完成各种任务，从显示网络摄像头的视频流到可能教会机器人识别现实生活中的物体。
- en: In this book, you will learn to leverage the immense potential of OpenCV with
    the Python programming language. Python is an elegant language with a relatively
    shallow learning curve and very powerful features. This chapter is a quick guide
    to setting up Python 2.7, OpenCV, and other related libraries. After setup, we
    also look at OpenCV's Python sample scripts and documentation.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在这本书中，你将学习如何利用 Python 编程语言充分发挥 OpenCV 的巨大潜力。Python 是一种优雅的语言，学习曲线相对平缓，功能非常强大。本章是快速设置
    Python 2.7、OpenCV 以及其他相关库的指南。设置完成后，我们还将查看 OpenCV 的 Python 示例脚本和文档。
- en: Note
  id: totrans-3
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: If you wish to skip the installation process and jump right into action, you
    can download the **virtual machine** (**VM**) I've made available at [http://techfort.github.io/pycv/](http://techfort.github.io/pycv/).
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你希望跳过安装过程，直接进入操作，你可以下载我在 [http://techfort.github.io/pycv/](http://techfort.github.io/pycv/)
    提供的 **虚拟机**（**VM**）。
- en: This file is compatible with VirtualBox, a free-to-use virtualization application
    that lets you build and run VMs. The VM I've built is based on Ubuntu Linux 14.04
    and has all the necessary software installed so that you can start coding right
    away.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 此文件与 VirtualBox 兼容，这是一个免费使用的虚拟化应用程序，允许你构建和运行虚拟机。我构建的虚拟机基于 Ubuntu Linux 14.04，并安装了所有必要的软件，以便你可以立即开始编码。
- en: This VM requires at least 2 GB of RAM to run smoothly, so make sure that you
    allocate at least 2 (but, ideally, more than 4) GB of RAM to the VM, which means
    that your host machine will need at least 6 GB of RAM to sustain it.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 这个虚拟机需要至少 2 GB 的 RAM 才能平稳运行，所以请确保为虚拟机分配至少 2 GB（但理想情况下，超过 4 GB）的 RAM，这意味着你的主机机器至少需要
    6 GB 的 RAM 才能维持其运行。
- en: 'The following related libraries are covered in this chapter:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 本章涵盖了以下相关库：
- en: '**NumPy**: This library is a dependency of OpenCV''s Python bindings. It provides
    numeric computing functionality, including efficient arrays.'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**NumPy**：这个库是 OpenCV Python 绑定的依赖项。它提供了包括高效数组在内的数值计算功能。'
- en: '**SciPy**: This library is a scientific computing library that is closely related
    to NumPy. It is not required by OpenCV, but it is useful for manipulating data
    in OpenCV images.'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**SciPy**：这个库是一个与 NumPy 密切相关的科学计算库。它不是 OpenCV 所必需的，但它在操纵 OpenCV 图像中的数据时很有用。'
- en: '**OpenNI**: This library is an optional dependency of OpenCV. It adds the support
    for certain depth cameras, such as Asus XtionPRO.'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**OpenNI**：这个库是 OpenCV 的可选依赖项。它增加了对某些深度相机（如华硕 XtionPRO）的支持。'
- en: '**SensorKinect**: This library is an OpenNI plugin and optional dependency
    of OpenCV. It adds support for the Microsoft Kinect depth camera.'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**SensorKinect**：这个库是一个 OpenNI 插件，也是 OpenCV 的可选依赖项。它增加了对微软 Kinect 深度相机的支持。'
- en: For this book's purposes, OpenNI and SensorKinect can be considered optional.
    They are used throughout [Chapter 4](part0036.xhtml#aid-12AK81 "Chapter 4. Depth
    Estimation and Segmentation"), *Depth Estimation and Segmentation*, but are not
    used in the other chapters or appendices.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 对于本书的目的，OpenNI 和 SensorKinect 可以被认为是可选的。它们在 [第 4 章](part0036.xhtml#aid-12AK81
    "第 4 章。深度估计和分割") 中使用，*深度估计和分割*，但在其他章节或附录中并未使用。
- en: Note
  id: totrans-13
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: This book focuses on OpenCV 3, the new major release of the OpenCV library.
    All additional information about OpenCV is available at [http://opencv.org](http://opencv.org),
    and its documentation is available at [http://docs.opencv.org/master](http://docs.opencv.org/master).
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 本书专注于 OpenCV 3，这是 OpenCV 库的新版主要发布。有关 OpenCV 的所有附加信息可在 [http://opencv.org](http://opencv.org)
    获取，其文档可在 [http://docs.opencv.org/master](http://docs.opencv.org/master) 获取。
- en: Choosing and using the right setup tools
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 选择和使用正确的设置工具
- en: We are free to choose various setup tools, depending on our operating system
    and how much configuration we want to do. Let's take an overview of the tools
    for Windows, Mac, Ubuntu, and other Unix-like systems.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以根据我们的操作系统和想要进行多少配置来选择各种设置工具。让我们概述一下Windows、Mac、Ubuntu和其他类Unix系统的工具。
- en: Installation on Windows
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Windows上的安装
- en: Windows does not come with Python preinstalled. However, installation wizards
    are available for precompiled Python, NumPy, SciPy, and OpenCV. Alternatively,
    we can build from a source. OpenCV's build system uses CMake for configuration
    and either Visual Studio or MinGW for compilation.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: Windows没有预装Python。然而，有预编译的Python、NumPy、SciPy和OpenCV的安装向导可用。或者，我们可以从源代码构建。OpenCV的构建系统使用CMake进行配置，并使用Visual
    Studio或MinGW进行编译。
- en: If we want support for depth cameras, including Kinect, we should first install
    OpenNI and SensorKinect, which are available as precompiled binaries with installation
    wizards. Then, we must build OpenCV from a source.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们想要支持深度相机，包括Kinect，我们首先应该安装OpenNI和SensorKinect，它们作为预编译的二进制文件和安装向导提供。然后，我们必须从源代码构建OpenCV。
- en: Note
  id: totrans-20
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The precompiled version of OpenCV does not offer support for depth cameras.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 预编译版的OpenCV不支持深度相机。
- en: On Windows, OpenCV 2 offers better support for 32-bit Python than 64-bit Python;
    however, with the majority of computers sold today being 64-bit systems, our instructions
    will refer to 64-bit. All installers have 32-bit versions available from the same
    site as the 64-bit.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在Windows上，OpenCV 2对32位Python的支持优于64位Python；然而，由于今天大多数销售的计算机都是64位系统，我们的说明将参考64位。所有安装程序都有32位版本，可以从与64位相同的网站下载。
- en: Some of the following steps refer to editing the system's `PATH` variable. This
    task can be done in the **Environment Variables** window of **Control Panel**.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤中的一些涉及编辑系统的`PATH`变量。这项任务可以在**控制面板**的**环境变量**窗口中完成。
- en: On Windows Vista / Windows 7 / Windows 8, click on the **Start** menu and launch
    **Control Panel**. Now, navigate to **System** and **Security** | **System** |
    **Advanced system settings**. Click on the **Environment Variables…** button.
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Windows Vista / Windows 7 / Windows 8上，点击**开始**菜单并启动**控制面板**。现在，导航到**系统**和**安全**
    | **系统** | **高级系统设置**。点击**环境变量…**按钮。
- en: On Windows XP, click on the **Start** menu and navigate to **Control Panel**
    | **System**. Select the **Advanced** tab. Click on the **Environment Variables…**
    button.
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Windows XP上，点击**开始**菜单并导航到**控制面板** | **系统**。选择**高级**选项卡。点击**环境变量…**按钮。
- en: Now, under **System variables**, select **Path** and click on the **Edit…**
    button.
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，在**系统变量**下，选择**Path**并点击**编辑…**按钮。
- en: Make changes as directed.
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按指示进行更改。
- en: To apply the changes, click on all the **OK** buttons (until we are back in
    the main window of **Control Panel**).
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要应用更改，点击所有**确定**按钮（直到我们回到**控制面板**的主窗口）。
- en: Then, log out and log back in (alternatively, reboot).
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，注销并重新登录（或者重新启动）。
- en: Using binary installers (no support for depth cameras)
  id: totrans-30
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用二进制安装程序（不支持深度相机）
- en: You can choose to install Python and its related libraries separately if you
    prefer; however, there are Python distributions that come with installers that
    will set up the entire SciPy stack (which includes Python and NumPy), which make
    it very trivial to set up the development environment.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您愿意，可以选择单独安装Python及其相关库；然而，有一些Python发行版包含安装程序，可以设置整个SciPy堆栈（包括Python和NumPy），这使得设置开发环境变得非常简单。
- en: One such distribution is Anaconda Python (downloadable at [http://09c8d0b2229f813c1b93­c95ac804525aac4b6dba79b00b39d1d3.r79.cf1.rackcdn.com/Anaconda-2.1.0­Windows-x86_64.exe](http://09c8d0b2229f813c1b93%C2%ADc95ac804525aac4b6dba79b00b39d1d3.r79.cf1.rackcdn.com/Anaconda-2.1.0%C2%ADWindows-x86_64.exe)).
    Once the installer is downloaded, run it and remember to add the path to the Anaconda
    installation to your `PATH` variable following the preceding procedure.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 其中一个发行版是Anaconda Python（可在[http://09c8d0b2229f813c1b93­c95ac804525aac4b6dba79b00b39d1d3.r79.cf1.rackcdn.com/Anaconda-2.1.0­Windows-x86_64.exe](http://09c8d0b2229f813c1b93%C2%ADc95ac804525aac4b6dba79b00b39d1d3.r79.cf1.rackcdn.com/Anaconda-2.1.0%C2%ADWindows-x86_64.exe)下载）。一旦下载了安装程序，运行它并记得按照前面的步骤将Anaconda安装路径添加到您的`PATH`变量中。
- en: 'Here are the steps to set up Python7, NumPy, SciPy, and OpenCV:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是设置Python7、NumPy、SciPy和OpenCV的步骤：
- en: Download and install the 32-bit Python 2.7.9 from [https://www.python.org/ftp/python/2.7.9/python-2.7.9.amd64.msi](https://www.python.org/ftp/python/2.7.9/python-2.7.9.amd64.msi).
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从[https://www.python.org/ftp/python/2.7.9/python-2.7.9.amd64.msi](https://www.python.org/ftp/python/2.7.9/python-2.7.9.amd64.msi)下载并安装32位Python
    2.7.9。
- en: Download and install NumPy 1.6.2 from [http://www.lfd.uci.edu/~gohlke/pythonlibs/#numpyhttp://sourceforge.net/projects/numpy/files/NumPy/1.6.2/numpy-1.6.2-win32-superpack-python2.7.exe/download](http://www.lfd.uci.edu/~gohlke/pythonlibs/#numpyhttp://sourceforge.net/projects/numpy/files/NumPy/1.6.2/numpy-1.6.2-win32-superpack-python2.7.exe/download)
    (note that installing NumPy on Windows 64-bit is a bit tricky due to the lack
    of a 64-bit Fortran compiler on Windows, which NumPy depends on. The binary at
    the preceding link is unofficial).
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 [http://www.lfd.uci.edu/~gohlke/pythonlibs/#numpyhttp://sourceforge.net/projects/numpy/files/NumPy/1.6.2/numpy-1.6.2-win32-superpack-python2.7.exe/download](http://www.lfd.uci.edu/~gohlke/pythonlibs/#numpyhttp://sourceforge.net/projects/numpy/files/NumPy/1.6.2/numpy-1.6.2-win32-superpack-python2.7.exe/download)
    下载并安装 NumPy 1.6.2（注意，由于 Windows 上缺少 NumPy 所依赖的 64 位 Fortran 编译器，在 Windows 64 位上安装
    NumPy 有点棘手。前一个链接中的二进制文件是非官方的）。
- en: Download and install SciPy 11.0 from [http://www.lfd.uci.edu/~gohlke/pythonlibs/#scipyhttp://sourceforge.net/projects/scipy/files/scipy/0.11.0/scipy-0.11.0­win32-superpack-python2.7.exe/download](http://www.lfd.uci.edu/~gohlke/pythonlibs/#scipyhttp://sourceforge.net/projects/scipy/files/scipy/0.11.0/scipy-0.11.0%C2%ADwin32-superpack-python2.7.exe/download)
    (this is the same as NumPy and these are community installers).
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 [http://www.lfd.uci.edu/~gohlke/pythonlibs/#scipyhttp://sourceforge.net/projects/scipy/files/scipy/0.11.0/scipy-0.11.0­win32-superpack-python2.7.exe/download](http://www.lfd.uci.edu/~gohlke/pythonlibs/#scipyhttp://sourceforge.net/projects/scipy/files/scipy/0.11.0/scipy-0.11.0%C2%ADwin32-superpack-python2.7.exe/download)
    下载并安装 SciPy 11.0（这与 NumPy 相同，这些都是社区安装程序）。
- en: Download the self-extracting ZIP of OpenCV 3.0.0 from [https://github.com/Itseez/opencv](https://github.com/Itseez/opencv).
    Run this ZIP, and when prompted, enter a destination folder, which we will refer
    to as `<unzip_destination>`. A subfolder, `<unzip_destination>\opencv`, is created.
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 [https://github.com/Itseez/opencv](https://github.com/Itseez/opencv) 下载 OpenCV
    3.0.0 的自解压 ZIP 文件。运行此 ZIP 文件，并在提示时输入目标文件夹，我们将称之为 `<unzip_destination>`。将创建一个子文件夹
    `<unzip_destination>\opencv`。
- en: Copy `<unzip_destination>\opencv\build\python\2.7\cv2.pyd` to `C:\Python2.7\Lib\site-packages`
    (assuming that we had installed Python 2.7 to the default location). If you installed
    Python 2.7 with Anaconda, use the Anaconda installation folder instead of the
    default Python installation. Now, the new Python installation can find OpenCV.
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 `<unzip_destination>\opencv\build\python\2.7\cv2.pyd` 复制到 `C:\Python2.7\Lib\site-packages`（假设我们将
    Python 2.7 安装在默认位置）。如果您使用 Anaconda 安装了 Python 2.7，请使用 Anaconda 安装文件夹而不是默认的 Python
    安装。现在，新的 Python 安装可以找到 OpenCV。
- en: A final step is necessary if we want Python scripts to run using the new Python
    installation by default. Edit the system's `PATH` variable and append `;C:\Python2.7`
    (assuming that we had installed Python 2.7 to the default location) or your Anaconda
    installation folder. Remove any previous Python paths, such as `;C:\Python2.6`.
    Log out and log back in (alternatively, reboot).
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我们想要默认使用新的 Python 安装运行 Python 脚本，则需要执行一个最终步骤。编辑系统的 `PATH` 变量，并追加 `;C:\Python2.7`（假设我们将
    Python 2.7 安装在默认位置）或您的 Anaconda 安装文件夹。删除任何以前的 Python 路径，例如 `;C:\Python2.6`。注销并重新登录（或者重新启动）。
- en: Using CMake and compilers
  id: totrans-40
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用 CMake 和编译器
- en: Windows does not come with any compilers or CMake. We need to install them.
    If we want support for depth cameras, including Kinect, we also need to install
    OpenNI and SensorKinect.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: Windows 不自带任何编译器或 CMake。我们需要安装它们。如果我们想要支持包括 Kinect 在内的深度相机，我们还需要安装 OpenNI 和
    SensorKinect。
- en: 'Let''s assume that we have already installed 32-bit Python 2.7, NumPy, and
    SciPy either from binaries (as described previously) or from a source. Now, we
    can proceed with installing compilers and CMake, optionally installing OpenNI
    and SensorKinect, and then building OpenCV from the source:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们已经通过二进制文件（如前所述）或源代码安装了 32 位 Python 2.7、NumPy 和 SciPy。现在，我们可以继续安装编译器和 CMake，可选地安装
    OpenNI 和 SensorKinect，然后从源代码构建 OpenCV：
- en: Download and install CMake 3.1.2 from [http://www.cmake.org/files/v3.1/cmake-3.1.2-win32-x86.exe](http://www.cmake.org/files/v3.1/cmake-3.1.2-win32-x86.exe).
    When running the installer, select either **Add CMake to the system PATH for all
    users** or **Add CMake to the system PATH for current user**. Don't worry about
    the fact that a 64-bit version of CMake is not available CMake is only a configuration
    tool and does not perform any compilations itself. Instead, on Windows, it creates
    project files that can be opened with Visual Studio.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 [http://www.cmake.org/files/v3.1/cmake-3.1.2-win32-x86.exe](http://www.cmake.org/files/v3.1/cmake-3.1.2-win32-x86.exe)
    下载并安装 CMake 3.1.2。在运行安装程序时，选择“**将 CMake 添加到系统 PATH 以供所有用户使用**”或“**将 CMake 添加到当前用户的系统
    PATH**”。不用担心没有 64 位版本的 CMake，因为 CMake 只是一个配置工具，它本身不执行任何编译。相反，在 Windows 上，它创建可以与
    Visual Studio 打开的工程文件。
- en: Download and install Microsoft Visual Studio 2013 (the Desktop edition if you
    are working on Windows 7) from [https://www.visualstudio.com/products/free-developer-offers-vs.aspx?slcid=0x409&type=web
    or MinGW](https://www.visualstudio.com/products/free-developer-offers-vs.aspx?slcid=0x409&type=web%20or%20MinGW).
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 [https://www.visualstudio.com/products/free-developer-offers-vs.aspx?slcid=0x409&type=web
    or MinGW](https://www.visualstudio.com/products/free-developer-offers-vs.aspx?slcid=0x409&type=web%20or%20MinGW)
    下载并安装 Microsoft Visual Studio 2013（如果您在 Windows 7 上工作，请选择桌面版）。
- en: Note that you will need to sign in with your Microsoft account and if you don't
    have one, you can create one on the spot. Install the software and reboot after
    installation is complete.
  id: totrans-45
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意，您需要使用您的 Microsoft 账户进行登录，如果您没有，您可以在现场创建一个。安装软件，安装完成后重新启动。
- en: For MinGW, get the installer from [http://sourceforge.net/projects/mingw/files/Installer/mingw-get-setup.exe/download](http://sourceforge.net/projects/mingw/files/Installer/mingw-get-setup.exe/download)
    and [http://sourceforge.net/projects/mingw/files/OldFiles/mingw-get-inst/mingw-get-inst-20120426/mingw-get-inst-20120426.exe/download](http://sourceforge.net/projects/mingw/files/OldFiles/mingw-get-inst/mingw-get-inst-20120426/mingw-get-inst-20120426.exe/download).
    When running the installer, make sure that the destination path does not contain
    spaces and that the optional C++ compiler is included. Edit the system's `PATH`
    variable and append `;C:\MinGW\bin` (assuming that MinGW is installed to the default
    location). Reboot the system.
  id: totrans-46
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于 MinGW，从 [http://sourceforge.net/projects/mingw/files/Installer/mingw-get-setup.exe/download](http://sourceforge.net/projects/mingw/files/Installer/mingw-get-setup.exe/download)
    和 [http://sourceforge.net/projects/mingw/files/OldFiles/mingw-get-inst/mingw-get-inst-20120426/mingw-get-inst-20120426.exe/download](http://sourceforge.net/projects/mingw/files/OldFiles/mingw-get-inst/mingw-get-inst-20120426/mingw-get-inst-20120426.exe/download)
    获取安装程序。在运行安装程序时，确保目标路径不包含空格，并且包含可选的 C++ 编译器。编辑系统的 `PATH` 变量，并追加 `;C:\MinGW\bin`（假设
    MinGW 安装在默认位置）。重新启动系统。
- en: Optionally, download and install OpenNI 1.5.4.0 from the links provided in the
    GitHub homepage of OpenNI at [https://github.com/OpenNI/OpenNI](https://github.com/OpenNI/OpenNI).
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 可选，从 OpenNI 在 GitHub 主页提供的链接中下载并安装 OpenNI 1.5.4.0。[https://github.com/OpenNI/OpenNI](https://github.com/OpenNI/OpenNI)。
- en: You can download and install SensorKinect 0.93 from [https://github.com/avin2/SensorKinect/blob/unstable/Bin/SensorKinect093-Bin-Win32-v5.1.2.1.msi?raw=true](https://github.com/avin2/SensorKinect/blob/unstable/Bin/SensorKinect093-Bin-Win32-v5.1.2.1.msi?raw=true)
    (32-bit). Alternatively, for 64-bit Python, download the setup from [https://github.com/avin2/SensorKinect/blob/unstable/Bin/SensorKinect093-Bin-Win64-v5.1.2.1.msi?raw=true](https://github.com/avin2/SensorKinect/blob/unstable/Bin/SensorKinect093-Bin-Win64-v5.1.2.1.msi?raw=true)
    (64-bit). Note that this repository has been inactive for more than three years.
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以从 [https://github.com/avin2/SensorKinect/blob/unstable/Bin/SensorKinect093-Bin-Win32-v5.1.2.1.msi?raw=true](https://github.com/avin2/SensorKinect/blob/unstable/Bin/SensorKinect093-Bin-Win32-v5.1.2.1.msi?raw=true)（32
    位）下载并安装 SensorKinect 0.93。对于 64 位 Python，从 [https://github.com/avin2/SensorKinect/blob/unstable/Bin/SensorKinect093-Bin-Win64-v5.1.2.1.msi?raw=true](https://github.com/avin2/SensorKinect/blob/unstable/Bin/SensorKinect093-Bin-Win64-v5.1.2.1.msi?raw=true)（64
    位）下载设置文件。请注意，这个存储库已经停用超过三年了。
- en: Download the self-extracting ZIP of OpenCV 3.0.0 from [https://github.com/Itseez/opencv](https://github.com/Itseez/opencv).
    Run the self-extracting ZIP, and when prompted, enter any destination folder,
    which we will refer to as `<unzip_destination>`. A subfolder, `<unzip_destination>\opencv`,
    is then created.
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 [https://github.com/Itseez/opencv](https://github.com/Itseez/opencv) 下载 OpenCV
    3.0.0 的自解压 ZIP 文件。运行自解压 ZIP 文件，当提示时，输入任何目标文件夹，我们将称之为 `<unzip_destination>`。然后创建一个子文件夹，`<unzip_destination>\opencv`。
- en: 'Open Command Prompt and make another folder where our build will go using this
    command:'
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开命令提示符，使用以下命令创建一个新文件夹，我们的构建将放在那里：
- en: '[PRE0]'
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Change the directory of the `build` folder:'
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 更改`build`文件夹的目录：
- en: '[PRE1]'
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Now, we are ready to configure our build. To understand all the options, we
    can read the code in `<unzip_destination>\opencv\CMakeLists.txt`. However, for
    this book's purposes, we only need to use the options that will give us a release
    build with Python bindings, and optionally, depth camera support via OpenNI and
    SensorKinect.
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们已经准备好配置我们的构建。为了理解所有选项，我们可以阅读`<unzip_destination>\opencv\CMakeLists.txt`中的代码。然而，出于本书的目的，我们只需要使用那些将为我们提供带有Python绑定的发布构建的选项，以及可选的通过OpenNI和SensorKinect的深度相机支持。
- en: 'Open CMake (`cmake-gui`) and specify the location of the source code of OpenCV
    and the folder where you would like to build the library. Click on **Configure**.
    Select the project to be generated. In this case, select Visual Studio 12 (which
    corresponds to Visual Studio 2013). After CMake has finished configuring the project,
    it will output a list of build options. If you see a red background, it means
    that your project may need to be reconfigured: CMake might report that it has
    failed to find some dependencies. Many of OpenCV''s dependencies are optional,
    so do not be too concerned yet.'
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开CMake（`cmake-gui`）并指定OpenCV源代码的位置以及您希望构建库的文件夹。点击**配置**。选择要生成的项目。在这种情况下，选择Visual
    Studio 12（对应于Visual Studio 2013）。CMake完成项目配置后，将输出一个构建选项列表。如果您看到红色背景，这意味着可能需要重新配置项目：CMake可能会报告它未能找到某些依赖项。OpenCV的许多依赖项是可选的，所以现在不必过于担心。
- en: Note
  id: totrans-56
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: If the build fails to complete or you run into problems later, try installing
    missing dependencies (often available as prebuilt binaries), and then rebuild
    OpenCV from this step.
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果构建未完成或您遇到问题，请尝试安装缺失的依赖项（通常作为预构建的二进制文件提供），然后从这一步重新构建OpenCV。
- en: You have the option of selecting/deselecting build options (according to the
    libraries you have installed on your machine) and click on **Configure** again,
    until you get a clear background (white).
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您可以选择/取消选择构建选项（根据您在机器上安装的库），然后再次点击**配置**，直到获得清晰的背景（白色）。
- en: At the end of this process, you can click on **Generate**, which will create
    an `OpenCV.sln` file in the folder you've chosen for the build. You can then navigate
    to `<build_folder>/OpenCV.sln` and open the file with Visual Studio 2013, and
    proceed with building the project, `ALL_BUILD`. You will need to build both the
    **Debug** and **Release** versions of OpenCV, so go ahead and build the library
    in the **Debug** mode, then select **Release** and rebuild it (*F7* is the key
    to launch the build).
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在此过程结束时，您可以点击**生成**，这将创建一个`OpenCV.sln`文件在您选择的构建文件夹中。然后，您可以导航到`<build_folder>/OpenCV.sln`并使用Visual
    Studio 2013打开该文件，然后继续构建项目，`ALL_BUILD`。您需要构建OpenCV的**调试**和**发布**版本，因此请先以**调试**模式构建库，然后选择**发布**并重新构建它（*F7*是启动构建的键）。
- en: At this stage, you will have a `bin` folder in the OpenCV build directory, which
    will contain all the generated `.dll` files that will allow you to include OpenCV
    in your projects.
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在此阶段，您将在OpenCV构建目录中有一个`bin`文件夹，其中将包含所有生成的`.dll`文件，这将允许您将OpenCV包含到您的项目中。
- en: 'Alternatively, for MinGW, run the following command:'
  id: totrans-61
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 或者，对于MinGW，运行以下命令：
- en: '[PRE2]'
  id: totrans-62
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: If OpenNI is not installed, omit `-D:WITH_OPENNI=ON`. (In this case, depth cameras
    will not be supported.) If OpenNI and SensorKinect are installed to nondefault
    locations, modify the command to include `-D:OPENNI_LIB_DIR=<openni_install_destination>\Lib
    -D:OPENNI_INCLUDE_DIR=<openni_install_destination>\Include -D:OPENNI_PRIME_SENSOR_MODULE_BIN_DIR=<sensorkinect_install_destination>\Sensor\Bin`.
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果未安装OpenNI，则省略`-D:WITH_OPENNI=ON`。（在这种情况下，将不支持深度相机。）如果OpenNI和SensorKinect安装到非默认位置，请修改命令以包含`-D:OPENNI_LIB_DIR=<openni_install_destination>\Lib
    -D:OPENNI_INCLUDE_DIR=<openni_install_destination>\Include -D:OPENNI_PRIME_SENSOR_MODULE_BIN_DIR=<sensorkinect_install_destination>\Sensor\Bin`。
- en: 'Alternatively, for MinGW, run this command:'
  id: totrans-64
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 或者，对于MinGW，运行以下命令：
- en: '[PRE3]'
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Copy `<build_folder>\lib\Release\cv2.pyd` (from a Visual Studio build) or `<build_folder>\lib\cv2.pyd`
    (from a MinGW build) to `<python_installation_folder>\site-packages`.
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`<build_folder>\lib\Release\cv2.pyd`（来自Visual Studio构建）或`<build_folder>\lib\cv2.pyd`（来自MinGW构建）复制到`<python_installation_folder>\site-packages`。
- en: Finally, edit the system's `PATH` variable and append `;<build_folder>/bin/Release`
    (for a Visual Studio build) or `;<build_folder>/bin` (for a MinGW build). Reboot
    your system.
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，编辑系统的`PATH`变量，并追加`;<build_folder>/bin/Release`（对于Visual Studio构建）或`;<build_folder>/bin`（对于MinGW构建）。重新启动您的系统。
- en: Installing on OS X
  id: totrans-68
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在OS X上安装
- en: Some versions of Mac used to come with a version of Python 2.7 preinstalled
    that were customized by Apple for a system's internal needs. However, this has
    changed and the standard version of OS X ships with a standard installation of
    Python. On [python.org](http://python.org), you can also find a universal binary
    that is compatible with both the new Intel systems and the legacy PowerPC.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 以前的一些 Mac 版本预装了由 Apple 定制的 Python 2.7 版本，用于满足系统的内部需求。然而，这种情况已经改变，标准的 OS X 版本现在都带有标准的
    Python 安装。在 [python.org](http://python.org) 上，您还可以找到与新的 Intel 系统和旧 PowerPC 兼容的通用二进制文件。
- en: Note
  id: totrans-70
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You can obtain this installer at [https://www.python.org/downloads/release/python-279/](https://www.python.org/downloads/release/python-279/)
    (refer to the Mac OS X 32-bit PPC or the Mac OS X 64-bit Intel links). Installing
    Python from the downloaded `.dmg` file will simply overwrite your current system
    installation of Python.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从 [https://www.python.org/downloads/release/python-279/](https://www.python.org/downloads/release/python-279/)
    获取此安装程序（参考 Mac OS X 32 位 PPC 或 Mac OS X 64 位 Intel 链接）。从下载的 `.dmg` 文件安装 Python
    将简单地覆盖您当前系统上的 Python 安装。
- en: For Mac, there are several possible approaches for obtaining standard Python
    2.7, NumPy, SciPy, and OpenCV. All approaches ultimately require OpenCV to be
    compiled from a source using Xcode Developer Tools. However, depending on the
    approach, this task is automated for us in various ways by third-party tools.
    We will look at these kinds of approaches using MacPorts or Homebrew. These tools
    can potentially do everything that CMake can, plus they help us resolve dependencies
    and separate our development libraries from system libraries.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 Mac，获取标准 Python 2.7、NumPy、SciPy 和 OpenCV 有几种可能的方法。所有方法最终都需要使用 Xcode 开发者工具从源代码编译
    OpenCV。然而，根据方法的不同，这项任务可以通过第三方工具以各种方式自动化。我们将通过使用 MacPorts 或 Homebrew 来查看这些方法。这些工具可以执行
    CMake 可以执行的所有操作，并且帮助我们解决依赖关系，并将我们的开发库与系统库分开。
- en: Tip
  id: totrans-73
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: I recommend MacPorts, especially if you want to compile OpenCV with depth camera
    support via OpenNI and SensorKinect. Relevant patches and build scripts, including
    some that I maintain, are ready-made for MacPorts. By contrast, Homebrew does
    not currently provide a ready-made solution to compile OpenCV with depth camera
    support.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 我推荐使用 MacPorts，尤其是如果您想通过 OpenNI 和 SensorKinect 编译具有深度相机支持的 OpenCV。相关的补丁和构建脚本，包括我维护的一些，已经为
    MacPorts 准备好。相比之下，Homebrew 目前还没有提供编译具有深度相机支持的 OpenCV 的现成解决方案。
- en: 'Before proceeding, let''s make sure that the Xcode Developer Tools are properly
    set up:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在继续之前，让我们确保 Xcode 开发者工具已正确设置：
- en: Download and install Xcode from the Mac App Store or [https://developer.apple.com/xcode/downloads/](https://developer.apple.com/xcode/downloads/).
    During installation, if there is an option to install **Command Line Tools**,
    select it.
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 Mac App Store 或 [https://developer.apple.com/xcode/downloads/](https://developer.apple.com/xcode/downloads/)
    下载并安装 Xcode。在安装过程中，如果有安装 **命令行工具** 的选项，请选择它。
- en: Open Xcode and accept the license agreement.
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 Xcode 并接受许可协议。
- en: A final step is necessary if the installer does not give us the option to install
    **Command Line Tools**. Navigate to **Xcode** | **Preferences** | **Downloads**,
    and click on the **Install** button next to **Command Line Tools**. Wait for the
    installation to finish and quit Xcode.
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果安装程序没有提供安装 **命令行工具** 的选项，则需要执行最后一步。导航到 **Xcode** | **首选项** | **下载**，然后点击 **命令行工具**
    旁边的 **安装** 按钮。等待安装完成并退出 Xcode。
- en: 'Alternatively, you can install Xcode command-line tools by running the following
    command (in the terminal):'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，您可以通过运行以下命令（在终端中）来安装 Xcode 命令行工具：
- en: '[PRE4]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Now, we have the required compilers for any approach.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们有了任何方法所需的编译器。
- en: Using MacPorts with ready-made packages
  id: totrans-82
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用带有现成软件包的 MacPorts
- en: We can use the MacPorts package manager to help us set up Python 2.7, NumPy,
    and OpenCV. MacPorts provides terminal commands that automate the process of downloading,
    compiling, and installing various pieces of **open source software** (**OSS**).
    MacPorts also installs dependencies as needed. For each piece of software, the
    dependencies and build recipes are defined in a configuration file called a Portfile.
    A MacPorts repository is a collection of **Portfiles**.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用 MacPorts 软件包管理器帮助我们设置 Python 2.7、NumPy 和 OpenCV。MacPorts 提供了终端命令，可以自动化下载、编译和安装各种开源软件（**OSS**）。MacPorts
    还会根据需要安装依赖项。对于每件软件，依赖项和构建配方都定义在一个名为 Portfile 的配置文件中。MacPorts 存储库是 **Portfiles**
    的集合。
- en: 'Starting from a system where Xcode and its command-line tools are already set
    up, the following steps will give us an OpenCV installation via MacPorts:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 从已经设置好 Xcode 及其命令行工具的系统开始，以下步骤将使用 MacPorts 为我们提供 OpenCV 安装：
- en: Download and install MacPorts from [http://www.macports.org/install.php](http://www.macports.org/install.php).
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 [http://www.macports.org/install.php](http://www.macports.org/install.php)
    下载并安装 MacPorts。
- en: 'If you want support for the Kinect depth camera, you need to tell MacPorts
    where to download the custom Portfiles that I have written. To do so, edit `/opt/local/etc/macports/sources.conf`
    (assuming that MacPorts is installed to the default location). Just above the
    line, `rsync://rsync.macports.org/release/ports/ [default]`, add the following
    line:'
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您想支持 Kinect 深度相机，您需要告诉 MacPorts 下载我编写的自定义 Portfiles 的位置。为此，编辑 `/opt/local/etc/macports/sources.conf`（假设
    MacPorts 安装在默认位置）。在以下行 `rsync://rsync.macports.org/release/ports/ [default]` 之上添加以下行：
- en: '[PRE5]'
  id: totrans-87
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Save the file. Now, MacPorts knows that it has to search for Portfiles in my
    online repository first, and then the default online repository.
  id: totrans-88
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 保存文件。现在，MacPorts 知道它必须首先在我的在线仓库中搜索 Portfiles，然后是默认在线仓库。
- en: 'Open the terminal and run the following command to update MacPorts:'
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开终端并运行以下命令来更新 MacPorts：
- en: '[PRE6]'
  id: totrans-90
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: When prompted, enter your password.
  id: totrans-91
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当提示时，输入您的密码。
- en: 'Now (if we are using my repository), run the following command to install OpenCV
    with Python 2.7 bindings and support for depth cameras, including Kinect:'
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在（如果我们使用我的仓库），运行以下命令来安装具有 Python 2.7 绑定和深度相机支持的 OpenCV，包括 Kinect：
- en: '[PRE7]'
  id: totrans-93
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Alternatively (with or without my repository), run the following command to
    install OpenCV with Python 2.7 bindings and support for depth cameras, excluding
    Kinect:'
  id: totrans-94
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 或者（无论是否使用我的仓库），运行以下命令来安装具有 Python 2.7 绑定和深度相机支持的 OpenCV，不包括 Kinect：
- en: '[PRE8]'
  id: totrans-95
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Note
  id: totrans-96
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Dependencies, including Python 2.7, NumPy, OpenNI, and (in the first example)
    SensorKinect, are automatically installed as well.
  id: totrans-97
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 依赖项，包括 Python 2.7、NumPy、OpenNI 和（在第一个示例中）SensorKinect，也将自动安装。
- en: 'By adding `+python27` to the command, we specify that we want the `opencv`
    variant (build configuration) with Python 2.7 bindings. Similarly, `+openni_sensorkinect`
    specifies the variant with the broadest possible support for depth cameras via
    OpenNI and SensorKinect. You may omit `+openni_sensorkinect` if you do not intend
    to use depth cameras, or you may replace it with `+openni` if you do intend to
    use OpenNI-compatible depth cameras but just not Kinect. To see the full list
    of the available variants before installing, we can enter the following command:'
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 通过在命令中添加 `+python27`，我们指定我们想要具有 Python 2.7 绑定的 `opencv` 变体（构建配置）。同样，`+openni_sensorkinect`
    指定具有通过 OpenNI 和 SensorKinect 提供的最广泛支持的深度相机变体。如果您不打算使用深度相机，可以省略 `+openni_sensorkinect`，或者如果您打算使用与
    OpenNI 兼容的深度相机但不是 Kinect，可以将其替换为 `+openni`。在安装之前，我们可以输入以下命令来查看所有可用变体的完整列表：
- en: '[PRE9]'
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Depending on our customization needs, we can add other variants to the `install`
    command. For even more flexibility, we can write our own variants (as described
    in the next section).
  id: totrans-100
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 根据我们的定制需求，我们可以在 `install` 命令中添加其他变体。为了获得更大的灵活性，我们可以编写自己的变体（如下一节所述）。
- en: 'Also, run the following command to install SciPy:'
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此外，运行以下命令来安装 SciPy：
- en: '[PRE10]'
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'The Python installation''s executable is named `python2.7`. If we want to link
    the default `python` executable to `python2.7`, let''s also run this command:'
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Python 安装的执行文件名为 `python2.7`。如果我们想将默认的 `python` 可执行文件链接到 `python2.7`，请运行此命令：
- en: '[PRE11]'
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Using MacPorts with your own custom packages
  id: totrans-105
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用 MacPorts 和您自己的自定义软件包
- en: With a few extra steps, we can change the way that MacPorts compiles OpenCV
    or any other piece of software. As previously mentioned, MacPorts' build recipes
    are defined in configuration files called Portfiles. By creating or editing Portfiles,
    we can access highly configurable build tools, such as CMake, while also benefitting
    from MacPorts' features, such as dependency resolution.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 通过几个额外的步骤，我们可以更改 MacPorts 编译 OpenCV 或其他软件的方式。如前所述，MacPorts 的构建配方定义在名为 Portfiles
    的配置文件中。通过创建或编辑 Portfiles，我们可以访问高度可配置的构建工具，如 CMake，同时还能享受 MacPorts 的功能，如依赖关系解析。
- en: 'Let''s assume that we already have MacPorts installed. Now, we can configure
    MacPorts to use the custom Portfiles that we write:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们已安装 MacPorts。现在，我们可以配置 MacPorts 以使用我们编写的自定义 Portfiles：
- en: Create a folder somewhere to hold our custom Portfiles. We will refer to this
    folder as `<local_repository>`.
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在某个位置创建一个文件夹来存放我们的自定义 Portfiles。我们将把这个文件夹称为 `<local_repository>`。
- en: 'Edit the `/opt/local/etc/macports/sources.conf` file (assuming that MacPorts
    is installed to the default location). Just above the `rsync://rsync.macports.org/release/ports/
    [default]` line, add this line:'
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编辑`/opt/local/etc/macports/sources.conf`文件（假设MacPorts安装到默认位置）。在`rsync://rsync.macports.org/release/ports/
    [default]`行上方，添加此行：
- en: '[PRE12]'
  id: totrans-110
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'For example, if `<local_repository>` is `/Users/Joe/Portfiles`, add the following
    line:'
  id: totrans-111
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 例如，如果`<local_repository>`是`/Users/Joe/Portfiles`，请添加以下行：
- en: '[PRE13]'
  id: totrans-112
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Note the triple slashes and save the file. Now, MacPorts knows that it has to
    search for Portfiles in `<local_repository>` first, and then, its default online
    repository.
  id: totrans-113
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意三重斜杠并保存文件。现在，MacPorts知道它必须首先在`<local_repository>`中搜索Portfiles，然后是其默认在线仓库。
- en: 'Open the terminal and update MacPorts to ensure that we have the latest Portfiles
    from the default repository:'
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开终端并更新MacPorts以确保我们拥有默认仓库的最新Portfile：
- en: '[PRE14]'
  id: totrans-115
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Let''s copy the default repository''s `opencv` Portfile as an example. We should
    also copy the directory structure, which determines how the package is categorized
    by MacPorts:'
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以默认仓库的`opencv` Portfile为例，让我们也复制目录结构，这决定了包在MacPorts中的分类方式：
- en: '[PRE15]'
  id: totrans-117
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Alternatively, for an example that includes Kinect support, we could download
    my online repository from [http://nummist.com/opencv/ports.tar.gz](http://nummist.com/opencv/ports.tar.gz),
    unzip it, and copy its entire `graphics` folder into `<local_repository>`:'
  id: totrans-118
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 或者，对于包含Kinect支持的示例，我们可以从[http://nummist.com/opencv/ports.tar.gz](http://nummist.com/opencv/ports.tar.gz)下载我的在线仓库，解压它，并将整个`graphics`文件夹复制到`<local_repository>`：
- en: '[PRE16]'
  id: totrans-119
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Edit `<local_repository>/graphics/opencv/Portfile`. Note that this file specifies
    the CMake configuration flags, dependencies, and variants. For details on the
    Portfile editing, go to [http://guide.macports.org/#development](http://guide.macports.org/#development).
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编辑`<local_repository>/graphics/opencv/Portfile`。注意，此文件指定了CMake配置标志、依赖项和变体。有关Portfile编辑的详细信息，请参阅[http://guide.macports.org/#development](http://guide.macports.org/#development)。
- en: To see which CMake configuration flags are relevant to OpenCV, we need to look
    at its source code. Download the source code archive from [https://github.com/Itseez/opencv/archive/3.0.0.zip](https://github.com/Itseez/opencv/archive/3.0.0.zip),
    unzip it to any location, and read `<unzip_destination>/OpenCV-3.0.0/CMakeLists.txt`.
  id: totrans-121
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要查看与OpenCV相关的CMake配置标志，我们需要查看其源代码。从[https://github.com/Itseez/opencv/archive/3.0.0.zip](https://github.com/Itseez/opencv/archive/3.0.0.zip)下载源代码存档，将其解压到任何位置，并阅读`<unzip_destination>/OpenCV-3.0.0/CMakeLists.txt`。
- en: After making any edits to the Portfile, save it.
  id: totrans-122
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在对Portfile进行任何编辑后，请保存它。
- en: 'Now, we need to generate an index file in our local repository so that MacPorts
    can find the new Portfile:'
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们需要在本地仓库中生成一个索引文件，以便MacPorts可以找到新的Portfile：
- en: '[PRE17]'
  id: totrans-124
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'From now on, we can treat our custom `opencv` file just like any other MacPorts
    package. For example, we can install it as follows:'
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从现在起，我们可以将我们的自定义`opencv`文件视为任何其他MacPorts包。例如，我们可以按照以下方式安装它：
- en: '[PRE18]'
  id: totrans-126
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Note that our local repository's Portfile takes precedence over the default
    repository's Portfile because of the order in which they are listed in `/opt/local/etc/macports/sources.conf`.
  id: totrans-127
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意，由于它们在`/opt/local/etc/macports/sources.conf`中的列表顺序，我们的本地仓库的Portfile优先于默认仓库的Portfile。
- en: Using Homebrew with ready-made packages (no support for depth cameras)
  id: totrans-128
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用带有预装包的Homebrew（不支持深度相机）
- en: Homebrew is another package manager that can help us. Normally, MacPorts and
    Homebrew should not be installed on the same machine.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: Homebrew是另一个可以帮助我们的包管理器。通常，MacPorts和Homebrew不应安装在同一台机器上。
- en: 'Starting from a system where Xcode and its command-line tools are already set
    up, the following steps will give us an OpenCV installation via Homebrew:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 从已经设置好Xcode及其命令行工具的系统开始，以下步骤将通过Homebrew为我们提供OpenCV安装：
- en: 'Open the terminal and run the following command to install Homebrew:'
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开终端并运行以下命令以安装Homebrew：
- en: '[PRE19]'
  id: totrans-132
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Unlike MacPorts, Homebrew does not automatically put its executables in `PATH`.
    To do so, create or edit the `~/.profile` file and add this line at the top of
    the code:'
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 与MacPorts不同，Homebrew不会自动将其可执行文件放入`PATH`。要这样做，创建或编辑`~/.profile`文件，并在代码顶部添加此行：
- en: '[PRE20]'
  id: totrans-134
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Save the file and run this command to refresh `PATH`:'
  id: totrans-135
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 保存文件并运行以下命令以刷新`PATH`：
- en: '[PRE21]'
  id: totrans-136
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Note that executables installed by Homebrew now take precedence over executables
    installed by the system.
  id: totrans-137
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意，现在由Homebrew安装的可执行文件优先于由系统安装的可执行文件。
- en: 'For Homebrew''s self-diagnostic report, run the following command:'
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要运行Homebrew的自我诊断报告，请运行以下命令：
- en: '[PRE22]'
  id: totrans-139
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Follow any troubleshooting advice it gives.
  id: totrans-140
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 遵循它提供的任何故障排除建议。
- en: 'Now, update Homebrew:'
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，更新Homebrew：
- en: '[PRE23]'
  id: totrans-142
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Run the following command to install Python 2.7:'
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下命令安装Python 2.7：
- en: '[PRE24]'
  id: totrans-144
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Now, we can install NumPy. Homebrew''s selection of the Python library packages
    is limited, so we use a separate package management tool called `pip`, which comes
    with Homebrew''s Python:'
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们可以安装NumPy。Homebrew对Python库包的选择有限，所以我们使用一个名为`pip`的单独的包管理工具，它包含在Homebrew的Python中：
- en: '[PRE25]'
  id: totrans-146
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'SciPy contains some Fortran code, so we need an appropriate compiler. We can
    use Homebrew to install the `gfortran` compiler:'
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: SciPy包含一些Fortran代码，因此我们需要一个合适的编译器。我们可以使用Homebrew来安装`gfortran`编译器：
- en: '[PRE26]'
  id: totrans-148
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Now, we can install SciPy:'
  id: totrans-149
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在，我们可以安装SciPy：
- en: '[PRE27]'
  id: totrans-150
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'To install OpenCV on a 64-bit system (all new Mac hardware since late 2006),
    run the following command:'
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要在64位系统上安装OpenCV（自2006年底以来所有新的Mac硬件），请运行以下命令：
- en: '[PRE28]'
  id: totrans-152
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Tip
  id: totrans-153
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: '**Downloading the example code**'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: '**下载示例代码**'
- en: You can download the example code files for all Packt Publishing books that
    you have purchased from your account at [http://www.packtpub.com](http://www.packtpub.com).
    If you purchased this book elsewhere, you can visit [http://www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files e-mailed directly to you.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从您在[http://www.packtpub.com](http://www.packtpub.com)的账户中下载您购买的所有Packt Publishing书籍的示例代码文件。如果您在其他地方购买了这本书，您可以访问[http://www.packtpub.com/support](http://www.packtpub.com/support)并注册，以便将文件直接通过电子邮件发送给您。
- en: Using Homebrew with your own custom packages
  id: totrans-156
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用Homebrew和自定义包
- en: 'Homebrew makes it easy to edit existing package definitions:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: Homebrew使得编辑现有的包定义变得容易：
- en: '[PRE29]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: The package definitions are actually scripts in the Ruby programming language.
    Tips on editing them can be found on the Homebrew Wiki page at [https://github.com/mxcl/homebrew/wiki/Formula-Cookbook](https://github.com/mxcl/homebrew/wiki/Formula-Cookbook).
    A script may specify Make or CMake configuration flags, among other things.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 包定义实际上是Ruby编程语言中的脚本。有关编辑它们的提示，可以在Homebrew Wiki页面[https://github.com/mxcl/homebrew/wiki/Formula-Cookbook](https://github.com/mxcl/homebrew/wiki/Formula-Cookbook)上找到。脚本可以指定Make或CMake配置标志，以及其他内容。
- en: To see which CMake configuration flags are relevant to OpenCV, we need to look
    at its source code. Download the source code archive from [https://github.com/Itseez/opencv/archive/3.0.0.zip](https://github.com/Itseez/opencv/archive/3.0.0.zip),
    unzip it to any location, and read `<unzip_destination>/OpenCV-2.4.3/CMakeLists.txt`.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看哪些CMake配置标志与OpenCV相关，我们需要查看其源代码。从[https://github.com/Itseez/opencv/archive/3.0.0.zip](https://github.com/Itseez/opencv/archive/3.0.0.zip)下载源代码存档，将其解压缩到任何位置，并阅读`<unzip_destination>/OpenCV-2.4.3/CMakeLists.txt`。
- en: After making edits to the Ruby script, save it.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 在对Ruby脚本进行编辑后，保存它。
- en: 'The customized package can be treated as normal. For example, it can be installed
    as follows:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 定制的包可以像普通包一样处理。例如，它可以按照以下方式安装：
- en: '[PRE30]'
  id: totrans-163
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: Installation on Ubuntu and its derivatives
  id: totrans-164
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在Ubuntu及其衍生版上安装
- en: 'First and foremost, here is a quick note on Ubuntu''s versions of an operating
    system: Ubuntu has a 6-month release cycle in which each release is either a .04
    or a .10 minor version of a major version (14 at the time of writing). Every two
    years, however, Ubuntu releases a version classified as **long-term support**
    (**LTS**) which will grant you a five year support by Canonical (the company behind
    Ubuntu). If you work in an enterprise environment, it is certainly advisable to
    install one of the LTS versions. The latest one available is 14.04.'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 首先最重要的是，这里有一个关于Ubuntu操作系统版本的快速说明：Ubuntu有一个6个月的发布周期，其中每个发布都是主要版本（撰写本文时为14）的.04或.10小版本。然而，每两年，Ubuntu会发布一个被归类为**长期支持**（**LTS**）的版本，这将通过Canonical（Ubuntu背后的公司）为您提供五年的支持。如果您在企业环境中工作，安装LTS版本无疑是明智的。目前可用的最新版本是14.04。
- en: Ubuntu comes with Python 2.7 preinstalled. The standard Ubuntu repository contains
    OpenCV 2.4.9 packages without support for depth cameras. At the time of writing
    this, OpenCV 3 is not yet available through the Ubuntu repositories, so we will
    have to build it from source. Fortunately, the vast majority of Unix-like and
    Linux systems come with all the necessary software to build a project from scratch
    already installed. When built from source, OpenCV can support depth cameras via
    OpenNI and SensorKinect, which are available as precompiled binaries with installation
    scripts.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: Ubuntu预装了Python 2.7。标准的Ubuntu仓库包含没有深度相机支持的OpenCV 2.4.9包。在撰写本文时，OpenCV 3尚未通过Ubuntu仓库提供，因此我们必须从源代码构建它。幸运的是，大多数Unix-like和Linux系统已经预装了所有必要的软件，可以从头开始构建项目。从源代码构建时，OpenCV可以通过OpenNI和SensorKinect支持深度相机，它们作为预编译的二进制文件和安装脚本提供。
- en: Using the Ubuntu repository (no support for depth cameras)
  id: totrans-167
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用Ubuntu仓库（不支持深度相机）
- en: 'We can install Python and all its necessary dependencies using the `apt` package
    manager, by running the following commands:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用`apt`包管理器通过运行以下命令安装Python及其所有必要的依赖项：
- en: '[PRE31]'
  id: totrans-169
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: Equivalently, we could have used Ubuntu Software Center, which is the `apt`
    package manager's graphical frontend.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，我们也可以使用Ubuntu软件中心，它是`apt`包管理器的图形前端。
- en: Building OpenCV from a source
  id: totrans-171
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 从源代码构建OpenCV
- en: Now that we have the entire Python stack and `cmake` installed, we can build
    OpenCV. First, we need to download the source code from [https://github.com/Itseez/opencv/archive/3.0.0-beta.zip](https://github.com/Itseez/opencv/archive/3.0.0-beta.zip).
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经安装了整个Python栈和`cmake`，我们可以构建OpenCV。首先，我们需要从[https://github.com/Itseez/opencv/archive/3.0.0-beta.zip](https://github.com/Itseez/opencv/archive/3.0.0-beta.zip)下载源代码。
- en: Extract the archive and move it into the unzipped folder in a terminal.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 在终端中解压归档并将其移动到解压文件夹中。
- en: 'Then, run the following commands:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，运行以下命令：
- en: '[PRE32]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: After the installation terminates, you might want to look at OpenCV's Python
    samples in `<opencv_folder>/opencv/samples/python` and `<script_folder>/opencv/samples/python2`.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完成后，您可能想查看OpenCV的Python示例，位于`<opencv_folder>/opencv/samples/python`和`<script_folder>/opencv/samples/python2`。
- en: Installation on other Unix-like systems
  id: totrans-177
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在其他类Unix系统上的安装
- en: 'The approaches for Ubuntu (as described previously) are likely to work on any
    Linux distribution derived from Ubuntu 14.04 LTS or Ubuntu 14.10 as follows:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Ubuntu（如前所述）的方法可能适用于任何从Ubuntu 14.04 LTS或Ubuntu 14.10衍生出来的Linux发行版，如下所示：
- en: Kubuntu 14.04 LTS or Kubuntu 14.10
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kubuntu 14.04 LTS或Kubuntu 14.10
- en: Xubuntu 14.04 LTS or Xubuntu 14.10
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Xubuntu 14.04 LTS或Xubuntu 14.10
- en: Linux Mint 17
  id: totrans-181
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Linux Mint 17
- en: On Debian Linux and its derivatives, the `apt` package manager works the same
    as on Ubuntu, though the available packages may differ.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 在Debian Linux及其衍生版本中，`apt`包管理器的工作方式与Ubuntu相同，尽管可用的包可能不同。
- en: On Gentoo Linux and its derivatives, the Portage package manager is similar
    to MacPorts (as described previously), though the available packages may differ.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 在Gentoo Linux及其衍生版本中，Portage包管理器与MacPorts（如前所述）类似，尽管可用的包可能不同。
- en: On FreeBSD derivatives, the process of installation is again similar to MacPorts;
    in fact, MacPorts derives from the `ports` installation system adopted on FreeBSD.
    Consult the remarkable FreeBSD Handbook at [https://www.freebsd.org/doc/handbook/](https://www.freebsd.org/doc/handbook/)
    for an overview of the software installation process.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 在FreeBSD衍生版本上，安装过程再次类似于MacPorts；实际上，MacPorts源自FreeBSD采用的`ports`安装系统。请参考出色的FreeBSD手册[https://www.freebsd.org/doc/handbook/](https://www.freebsd.org/doc/handbook/)以了解软件安装过程的概述。
- en: On other Unix-like systems, the package manager and available packages may differ.
    Consult your package manager's documentation and search for packages with `opencv`
    in their names. Remember that OpenCV and its Python bindings might be split into
    multiple packages.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 在其他类Unix系统中，包管理器和可用的包可能不同。请查阅您的包管理器文档，并搜索名称中包含 `opencv` 的包。请记住，OpenCV及其Python绑定可能被拆分为多个包。
- en: Also, look for any installation notes published by the system provider, the
    repository maintainer, or the community. Since OpenCV uses camera drivers and
    media codecs, getting all of its functionality to work can be tricky on systems
    with poor multimedia support. Under some circumstances, system packages might
    need to be reconfigured or reinstalled for compatibility.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，寻找系统提供商、仓库维护者或社区发布的任何安装说明。由于OpenCV使用相机驱动程序和媒体编解码器，在多媒体支持较差的系统上，使所有功能正常工作可能很棘手。在某些情况下，可能需要重新配置或重新安装系统包以实现兼容性。
- en: If packages are available for OpenCV, check their version number. OpenCV 3 or
    higher is recommended for this book's purposes. Also, check whether the packages
    offer Python bindings and depth camera support via OpenNI and SensorKinect. Finally,
    check whether anyone in the developer community has reported success or failure
    in using the packages.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 如果有OpenCV的包可用，请检查它们的版本号。本书建议使用OpenCV 3或更高版本。此外，请检查这些包是否提供Python绑定和通过OpenNI和SensorKinect的深度相机支持。最后，检查开发者社区中是否有人报告了使用这些包的成功或失败情况。
- en: If, instead, we want to do a custom build of OpenCV from source, it might be
    helpful to refer to the installation script for Ubuntu (as discussed previously)
    and adapt it to the package manager and packages that are present on another system.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们想从源代码自定义构建OpenCV，可能有助于参考之前讨论的Ubuntu安装脚本，并将其适应到另一个系统上的包管理器和包。
- en: Installing the Contrib modules
  id: totrans-189
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装Contrib模块
- en: Unlike with OpenCV 2.4, some modules are contained in a repository called `opencv_contrib`,
    which is available at [https://github.com/Itseez/opencv_contrib](https://github.com/Itseez/opencv_contrib).
    I highly recommend installing these modules as they contain extra functionalities
    that are not included in OpenCV, such as the face recognition module.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 与OpenCV 2.4不同，一些模块包含在名为`opencv_contrib`的仓库中，该仓库可在[https://github.com/Itseez/opencv_contrib](https://github.com/Itseez/opencv_contrib)找到。我强烈建议安装这些模块，因为它们包含OpenCV中没有的额外功能，例如人脸识别模块。
- en: 'Once downloaded (either through `zip` or `git`, I recommend `git` so that you
    can keep up to date with a simple `git pull` command), you can rerun your `cmake`
    command to include the building of OpenCV with the `opencv_contrib` modules as
    follows:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 下载完成后（无论是通过`zip`还是`git`，我推荐使用`git`，这样您可以通过简单的`git pull`命令保持更新），您可以重新运行`cmake`命令，包括构建带有`opencv_contrib`模块的OpenCV，如下所示：
- en: '[PRE33]'
  id: totrans-192
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'So, if you''ve followed the standard procedure and created a build directory
    in your OpenCV download folder, you should run the following command:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，如果您已遵循标准程序并在OpenCV下载文件夹中创建了一个构建目录，您应该运行以下命令：
- en: '[PRE34]'
  id: totrans-194
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: Running samples
  id: totrans-195
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 运行示例
- en: Running a few sample scripts is a good way to test whether OpenCV is correctly
    set up. The samples are included in OpenCV's source code archive.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 运行几个示例脚本是测试OpenCV是否正确设置的好方法。这些示例包含在OpenCV的源代码存档中。
- en: On Windows, we should have already downloaded and unzipped OpenCV's self-extracting
    ZIP. Find the samples in `<unzip_destination>/opencv/samples`.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 在Windows上，我们应该已经下载并解压了OpenCV的自解压ZIP文件。在`<unzip_destination>/opencv/samples`中找到示例。
- en: On Unix-like systems, including Mac, download the source code archive from [https://github.com/Itseez/opencv/archive/3.0.0.zip](https://github.com/Itseez/opencv/archive/3.0.0.zip)
    and unzip it to any location (if we have not already done so). Find the samples
    in `<unzip_destination>/OpenCV-3.0.0/samples`.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 在Unix-like系统上，包括Mac，从[https://github.com/Itseez/opencv/archive/3.0.0.zip](https://github.com/Itseez/opencv/archive/3.0.0.zip)下载源代码存档，并将其解压到任何位置（如果我们还没有这样做）。在`<unzip_destination>/OpenCV-3.0.0/samples`中找到示例。
- en: 'Some of the sample scripts require command-line arguments. However, the following
    scripts (among others) should work without any arguments:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 一些示例脚本需要命令行参数。然而，以下脚本（以及其他一些脚本）可以在没有任何参数的情况下运行：
- en: '`python/camera.py`: This script displays a webcam feed (assuming that a webcam
    is plugged in).'
  id: totrans-200
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`python/camera.py`：此脚本显示一个网络摄像头流（假设已经插入了网络摄像头）。'
- en: '`python/drawing.py`: This script draws a series of shapes, such as a screensaver.'
  id: totrans-201
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`python/drawing.py`：此脚本绘制一系列形状，例如屏幕保护程序。'
- en: '`python2/hist.py`: This script displays a photo. Press *A*, *B*, *C*, *D*,
    or *E* to see the variations of the photo along with a corresponding histogram
    of color or grayscale values.'
  id: totrans-202
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`python2/hist.py`：此脚本显示一张照片。按*A*、*B*、*C*、*D*或*E*查看照片的变体以及相应的颜色或灰度值直方图。'
- en: '`python2/opt_flow.py` (missing from the Ubuntu package): This script displays
    a webcam feed with a superimposed visualization of an optical flow (such as the
    direction of motion). For example, slowly wave your hand at the webcam to see
    the effect. Press *1* or *2* for alternative visualizations.'
  id: totrans-203
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`python2/opt_flow.py`（Ubuntu包中缺失）：此脚本显示带有叠加光流可视化（例如运动方向）的网络摄像头流。例如，慢慢在摄像头前挥手以查看效果。按*1*或*2*进行不同的可视化。'
- en: To exit a script, press *Esc* (not the window's close button).
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 要退出脚本，请按*Esc*（不是窗口的关闭按钮）。
- en: 'If we encounter the `ImportError: No module` named `cv2.cv` message, then this
    means that we are running the script from a Python installation that does not
    know anything about OpenCV. There are two possible explanations for this:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: '如果我们遇到`ImportError: No module named ''cv2.cv''`的消息，那么这意味着我们正在从不知道OpenCV的Python安装中运行脚本。这种情况有两个可能的解释：'
- en: Some steps in the OpenCV installation might have failed or been missed. Go back
    and review the steps.
  id: totrans-206
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OpenCV安装过程中可能有一些步骤失败或被遗漏。返回并检查这些步骤。
- en: 'If we have multiple Python installations on the machine, we might be using
    the wrong version of Python to launch the script. For example, on Mac, it might
    be the case that OpenCV is installed for MacPorts Python, but we are running the
    script with the system''s Python. Go back and review the installation steps about
    editing the system path. Also, try launching the script manually from the command
    line using commands such as this:'
  id: totrans-207
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果机器上有多个Python安装，我们可能使用了错误的Python版本来启动脚本。例如，在Mac上，可能的情况是OpenCV是为MacPorts Python安装的，但我们使用的是系统的Python来运行脚本。返回并回顾有关编辑系统路径的安装步骤。此外，尝试使用如下命令手动从命令行启动脚本：
- en: '[PRE35]'
  id: totrans-208
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'You can also use the following command:'
  id: totrans-209
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您还可以使用以下命令：
- en: '[PRE36]'
  id: totrans-210
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE36]'
- en: As another possible means of selecting a different Python installation, try
    editing the sample script to remove the `#!` lines. These lines might explicitly
    associate the script with the wrong Python installation (for our particular setup).
  id: totrans-211
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 作为选择不同Python安装的另一种可能方法，尝试编辑示例脚本以删除`#!`行。这些行可能明确地将脚本与错误的Python安装关联起来（针对我们的特定设置）。
- en: Finding documentation, help, and updates
  id: totrans-212
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 查找文档、帮助和更新
- en: OpenCV's documentation can be found online at [http://docs.opencv.org/](http://docs.opencv.org/).
    The documentation includes a combined API reference for OpenCV's new C++ API,
    its new Python API (which is based on the C++ API), old C API, and its old Python
    API (which is based on the C API). When looking up a class or function, be sure
    to read the section about the new Python API (the `cv2` module), and not the old
    Python API (the `cv` module).
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: OpenCV的文档可以在网上找到，网址为[http://docs.opencv.org/](http://docs.opencv.org/)。该文档包括OpenCV新C++
    API、新Python API（基于C++ API）、旧C API及其旧Python API（基于C API）的综合API参考。在查找类或函数时，请务必阅读有关新Python
    API（`cv2`模块）的部分，而不是旧Python API（`cv`模块）的部分。
- en: 'The documentation is also available as several downloadable PDF files:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 该文档还可用作几个可下载的PDF文件：
- en: '**API reference**: This documentation can be found at [http://docs.opencv.org/modules/refman.html](http://docs.opencv.org/modules/refman.html)'
  id: totrans-215
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**API参考**：此文档可在[http://docs.opencv.org/modules/refman.html](http://docs.opencv.org/modules/refman.html)找到'
- en: '**Tutorials**: These documents can be found at [http://docs.opencv.org/doc/tutorials/tutorials.html](http://docs.opencv.org/doc/tutorials/tutorials.html)
    (these tutorials use the C++ code; for a Python port of the tutorials'' code,
    see the repository of Abid Rahman K. at [http://goo.gl/EPsD1](http://goo.gl/EPsD1))'
  id: totrans-216
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**教程**：这些文档可在[http://docs.opencv.org/doc/tutorials/tutorials.html](http://docs.opencv.org/doc/tutorials/tutorials.html)找到（这些教程使用C++代码；教程代码的Python版本可在阿比德·拉赫曼·K.的仓库[http://goo.gl/EPsD1](http://goo.gl/EPsD1)找到）'
- en: If you write code on airplanes or other places without Internet access, you
    will definitely want to keep offline copies of the documentation.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在飞机或其他没有互联网接入的地方编写代码，您肯定希望保留文档的离线副本。
- en: 'If the documentation does not seem to answer your questions, try talking to
    the OpenCV community. Here are some sites where you will find helpful people:'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 如果文档似乎没有回答您的问题，请尝试与OpenCV社区交流。以下是一些您可以找到有帮助人士的网站：
- en: '**The OpenCV forum**: [http://www.answers.opencv.org/questions/](http://www.answers.opencv.org/questions/)'
  id: totrans-219
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**OpenCV论坛**：[http://www.answers.opencv.org/questions/](http://www.answers.opencv.org/questions/)'
- en: '**David Millán Escrivá''s blog** (one of this book''s reviewers): [http://blog.damiles.com/](http://blog.damiles.com/)'
  id: totrans-220
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**大卫·米兰·埃斯克里瓦的博客**（本书的审稿人之一）：[http://blog.damiles.com/](http://blog.damiles.com/)'
- en: '**Abid Rahman K.''s blog** (one of this book''s reviewers): [http://www.opencvpython.blogspot.com/](http://www.opencvpython.blogspot.com/)'
  id: totrans-221
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**阿比德·拉赫曼·K.的博客**（本书的审稿人之一）：[http://www.opencvpython.blogspot.com/](http://www.opencvpython.blogspot.com/)'
- en: '**Adrian Rosebrock''s website** (one of this book''s reviewers): [http://www.pyimagesearch.com/](http://www.pyimagesearch.com/)'
  id: totrans-222
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**阿德里安·罗斯布鲁克的网站**（本书的审稿人之一）：[http://www.pyimagesearch.com/](http://www.pyimagesearch.com/)'
- en: '**Joe Minichino''s website for this book** (author of this book): [http://techfort.github.io/pycv/](http://techfort.github.io/pycv/)'
  id: totrans-223
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**乔·米尼奇诺为此书的网站**（本书的作者）：[http://techfort.github.io/pycv/](http://techfort.github.io/pycv/)'
- en: '**Joe Howse''s website for this book** (author of the first edition of this
    book): [http://nummist.com/opencv/](http://nummist.com/opencv/)'
  id: totrans-224
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**乔·豪斯为此书的网站**（本书第一版的作者）：[http://nummist.com/opencv/](http://nummist.com/opencv/)'
- en: Lastly, if you are an advanced user who wants to try new features, bug fixes,
    and sample scripts from the latest (unstable) OpenCV source code, have a look
    at the project's repository at [https://github.com/Itseez/opencv/](https://github.com/Itseez/opencv/).
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，如果你是一位希望尝试最新（不稳定）OpenCV 源代码中的新功能、错误修复和示例脚本的进阶用户，请查看项目的仓库：[https://github.com/Itseez/opencv/](https://github.com/Itseez/opencv/)。
- en: Summary
  id: totrans-226
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: By now, we should have an OpenCV installation that can do everything we need
    for the project described in this book. Depending on which approach we took, we
    might also have a set of tools and scripts that are usable to reconfigure and
    rebuild OpenCV for our future needs.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们应该已经安装了一个可以完成本书中描述的项目所需所有功能的 OpenCV。根据我们采取的方法，我们可能还拥有一套可用的工具和脚本，可用于重新配置和重建
    OpenCV 以满足我们未来的需求。
- en: We know where to find OpenCV's Python samples. These samples covered a different
    range of functionalities outside this book's scope, but they are useful as additional
    learning aids.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 我们知道在哪里可以找到 OpenCV 的 Python 示例。这些示例涵盖了本书范围之外的不同功能范围，但它们作为额外的学习辅助工具是有用的。
- en: In the next chapter, we will familiarize ourselves with the most basic functions
    of the OpenCV API, namely, displaying images, videos, capturing videos through
    a webcam, and handling basic keyboard and mouse inputs.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将熟悉 OpenCV API 的最基本功能，即显示图像、视频，通过摄像头捕获视频，以及处理基本的键盘和鼠标输入。
