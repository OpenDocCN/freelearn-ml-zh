- en: Chapter 3. Clustering
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第3章。聚类
- en: 'In this chapter, we will cover the following recipes:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将介绍以下内容：
- en: Hierarchical clustering - World Bank
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 层次聚类 - 世界银行
- en: Hierarchical clustering - Amazon rainforest burned between 1999-2010
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 层次聚类 - 1999-2010年间亚马逊雨林火灾
- en: Hierarchical clustering - gene clustering
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 层次聚类 - 基因聚类
- en: Binary clustering - math test
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 二元聚类 - 数学测试
- en: K-means clustering - European countries protein consumption
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: K-means聚类 - 欧洲国家蛋白质消耗
- en: K-means clustering - foodstuff
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: K-means聚类 - 食品
- en: Introduction
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: '**Hierarchical clustering**: One of the most important methods in unsupervised
    learning is Hierarchical clustering. In Hierarchical clustering for a given set
    of data points, the output is produced in the form of a binary tree (dendrogram).
    In the binary tree, the leaves represent the data points while internal nodes
    represent nested clusters of various sizes. Each object is assigned a separate
    cluster. Evaluation of all the clusters takes place based on a pairwise distance
    matrix. The distance matrix will be constructed using distance values. The pair
    of clusters with the shortest distance must be considered. The identified pair
    should then be removed from the matrix and merged together. The merged clusters''
    distance must be evaluated with the other clusters and the distance matrix should
    be updated. The process is to be repeated until the distance matrix is reduced
    to a single element.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**层次聚类**：在无监督学习中，层次聚类是其中最重要的方法之一。在层次聚类中，对于一组给定的数据点，输出以二叉树（树状图）的形式呈现。在二叉树中，叶子代表数据点，而内部节点代表各种大小的嵌套簇。每个对象被分配到一个单独的簇。所有簇的评估基于成对距离矩阵。距离矩阵将使用距离值构建。必须考虑距离最短的簇对。然后应从矩阵中删除已识别的这对簇并将它们合并。合并后的簇与其它簇的距离必须被评估，距离矩阵应更新。这个过程需要重复进行，直到距离矩阵减少到单个元素。'
- en: An ordering of the objects is produced by hierarchical clustering. This helps
    with informative data display. The smaller clusters produced help in the discovery
    of information. The main disadvantage of hierarchical clustering is that, if the
    objects have been incorrectly grouped at an early stage then, there is no provision
    for a relocation of objects. Use of different distance metrics for measuring distances
    between clusters may result in the generation of different results.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 层次聚类产生对象的排序。这有助于信息数据的展示。产生的较小簇有助于信息的发现。层次聚类的缺点是，如果对象在早期阶段被错误地分组，那么没有提供对象重新定位的方案。使用不同的距离度量来衡量簇之间的距离可能会导致生成不同的结果。
- en: '**K-means clustering**: The K-means clustering algorithm is a method for estimating
    the mean (vectors) of a set of K-groups. The K-Means clustering method is unsupervised,
    non-deterministic, and iterative in nature. The method produces a specific number
    of disjointed, flat (non-hierarchical) clusters. K denotes the number of clusters.
    These clusters are based on the data at hand. Each of the clusters has at least
    one data point. The clusters are non-overlapping and non-hierarchical in nature.
    The dataset is partitioned into K number of clusters. The data points are randomly
    assigned to each of the clusters. This results in an almost equal distribution
    of data points among the clusters at the early stage. If a data point is closest
    to its own cluster, it is not changed. If a data point is not close to its own
    cluster, it is moved to the cluster to which it is closest. The steps are repeated
    for all the data points till no data points are moving from one cluster to another.
    At this point the clusters are stabilized and the clustering process ends. The
    choice of initial an partition can greatly affect the final clusters that result,
    in terms of inter-cluster and intra-cluster distances and cohesion.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**K-means聚类**：K-means聚类算法是一种估计K组均值（向量）的方法。K-means聚类方法本质上是无监督的、非确定性的和迭代的。该方法产生特定数量的不相交的、平坦的（非层次）簇。K表示簇的数量。这些簇基于现有数据。每个簇至少有一个数据点。簇在本质上是非重叠和非层次化的。数据集被划分为K个簇。数据点随机分配到每个簇中。这导致数据点在簇中的早期阶段几乎均匀分布。如果一个数据点最接近其自己的簇，则不会改变。如果一个数据点不接近其自己的簇，则将其移动到最接近的簇。对于所有数据点重复这些步骤，直到没有数据点从一个簇移动到另一个簇。在这个时候，簇稳定下来，聚类过程结束。初始分区和选择的选择可以极大地影响最终簇的结果，包括簇间和簇内距离以及凝聚力。 '
- en: The main advantage of K-means clustering is that it is relatively computationally,
    less expensive in terms of time compared to hierarchical clustering. The main
    challenge is that there is a difficulty in determining the number of clusters.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: K-means聚类的优点是，与层次聚类相比，它在计算上相对节省时间。主要挑战是确定簇的数量有困难。
- en: Hierarchical clustering - World Bank sample dataset
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 层次聚类 - 世界银行样本数据集
- en: One of the main goals for establishing the World Bank was to fight and eliminate
    poverty. Continuous evolution and fine-tuning its policies in the ever-evolving
    world has been helping the institution to achieve the goal of poverty elimination.
    The barometer of success in the elimination of poverty is measured in terms of
    improvement of each of the parameters in health, education, sanitation, infrastructure,
    and other services needed to improve the lives of the poor. The development gains
    that will ensure the goals must be pursued in an environmentally, socially, and
    economically sustainable manner.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 世界银行成立的主要目标之一是抗击和消除贫困。在不断变化的世界中持续发展和微调其政策，一直帮助该机构实现消除贫困的目标。消除贫困的成功指标是以改善健康、教育、卫生、基础设施和其他改善贫困人民生活的服务中的每个参数来衡量的。确保目标必须以环境、社会和经济可持续的方式追求的发展收益。
- en: Getting ready
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: In order to perform Hierarchical clustering, we shall be using a dataset collected
    from the World Bank dataset.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 为了执行层次聚类，我们将使用来自世界银行数据集收集的数据集。
- en: Step 1 - collecting and describing data
  id: totrans-17
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 步骤 1 - 收集和描述数据
- en: 'The dataset titled `WBClust2013` shall be used. This is available in the CSV
    format titled `WBClust2013.csv`. The dataset is in standard format. There are
    80 rows of data and 14 variables. The numeric variables are:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 应使用标题为`WBClust2013`的数据集。该数据集以`WBClust2013.csv`为标题的CSV格式提供。数据集是标准格式。有80行数据和14个变量。数值变量包括：
- en: '`new.forest`'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`new.forest`'
- en: '`Rural`'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Rural`'
- en: '`log.CO2`'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`log.CO2`'
- en: '`log.GNI`'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`log.GNI`'
- en: '`log.Energy.2011`'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`log.Energy.2011`'
- en: '`LifeExp`'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`LifeExp`'
- en: '`Fertility`'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Fertility`'
- en: '`InfMort`'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`InfMort`'
- en: '`log.Exports`'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`log.Exports`'
- en: '`log.Imports`'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`log.Imports`'
- en: '`CellPhone`'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`CellPhone`'
- en: '`RuralWater`'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`RuralWater`'
- en: '`Pop`'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Pop`'
- en: 'The non-numeric variable is:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 非数值变量是：
- en: '`Country`'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Country`'
- en: How to do it...
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: Let's get into the details.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们深入了解。
- en: Step 2 - exploring data
  id: totrans-36
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 步骤 2 - 探索数据
- en: Note
  id: totrans-37
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'Version info: Code for this page was tested in R version 3.2.3 (2015-12-10)'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 版本信息：本页面的代码在R版本3.2.3（2015-12-10）中进行了测试
- en: 'Let''s explore the data and understand the relationships between variables.
    We''ll begin by importing the CSV file named `WBClust2013.csv`. We will be saving
    the data to the `wbclust` data frame:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们探索数据并了解变量之间的关系。我们将从导入名为`WBClust2013.csv`的CSV文件开始。我们将数据保存到`wbclust`数据框中：
- en: '[PRE0]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Next, we shall print the `wbclust` data frame. The `head()` function returns
    the `wbclust` data frame. The `wbclust` data frame is passed as an input parameter:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将打印`wbclust`数据框。`head()`函数返回`wbclust`数据框。将`wbclust`数据框作为输入参数传递：
- en: '[PRE1]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The results are as follows:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Step 2 - exploring data](img/image_03_001.jpg)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![步骤 2 - 探索数据](img/image_03_001.jpg)'
- en: Step 3 - transforming data
  id: totrans-45
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 步骤 3 - 转换数据
- en: Centering variables and creating z-scores are two common data analysis activities
    to standardize data. The numeric variables mentioned above need to create z-scores.
    The `scale()` function is a generic function whose default method centers and/or
    scales the columns of a numeric matrix. The data frame, `wbclust` is passed to
    the scale function. Only numeric fields are considered. The result is then stored
    in another data frame, `wbnorm`.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 将变量居中并创建z分数是两种常见的数据分析活动，用于标准化数据。上述提到的数值变量需要创建z分数。`scale()`函数是一个通用函数，其默认方法是对数值矩阵的列进行居中或缩放。数据框`wbclust`被传递给`scale`函数。只有数值字段被考虑。结果存储在另一个数据框`wbnorm`中。
- en: '[PRE2]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The results are as follows:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Step 3 - transforming data](img/image_03_002.jpg)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![步骤 3 - 转换数据](img/image_03_002.jpg)'
- en: All data frames have a `rownames` attribute. In order to retrieve or set the
    row or column names of a matrix-like object, the `rownames()` function is used.
    The data frame `wbclust` with the first column is passed to the `rownames()` function.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 所有数据框都有一个`rownames`属性。为了检索或设置类似矩阵的对象的行或列名，使用`rownames()`函数。将具有第一列的数据框`wbclust`传递给`rownames()`函数。
- en: '[PRE3]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The call to the function `rownames(wbnorm)` results in displaying of the values
    from the first column. The results are as follows:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 函数调用`rownames(wbnorm)`的结果是显示第一列的值。结果如下：
- en: '![Step 3 - transforming data](img/image_03_003.jpg)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![第3步 - 转换数据](img/image_03_003.jpg)'
- en: Step 4 - training and evaluating the model performance
  id: totrans-54
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 第4步 - 训练和评估模型性能
- en: The next step is about training the model. The first step is to calculate the
    distance matrix. The `dist()` function is used. Using the specified distance measure,
    distances between the rows of a data matrix are computed. The distance measure
    used can be Euclidean, maximum, Manhattan, Canberra, binary, or Minkowski. The
    distance measure used is Euclidean. The Euclidean distance calculates the distance
    between two vectors as *sqrt(sum((x_i - y_i)^2))*. The result is then stored in
    a new data frame, `dist1`.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是训练模型。第一步是计算距离矩阵。使用 `dist()` 函数。使用指定的距离度量，计算数据矩阵行之间的距离。使用的距离度量可以是欧几里得、最大、曼哈顿、Canberra、二进制或闵可夫斯基。使用的距离度量是欧几里得。欧几里得距离计算两个向量之间的距离为
    *sqrt(sum((x_i - y_i)^2))*。然后将结果存储在一个新的数据框中，`dist1`。
- en: '[PRE4]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The next step is to perform clustering using Ward's method. The `hclust()` function
    is used. In order to perform cluster analysis on a set of dissimilarities of *n*
    objects, the `hclust()` function is used. At the first stage, each of the objects
    is assigned to its own cluster. After this, at each stage the algorithm iterates
    and joins two of the most similar clusters. This process continues till there
    is just a single cluster left. The `hclust()` function requires that we provide
    the data in the form of a distance matrix. The `dist1` data frame is passed. By
    default, the complete linkage method is used. There are multiple agglomeration
    methods which can be used, some of them could be `ward.D`, `ward.D2`, `single`,
    `complete`, and `average`.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是使用 Ward 方法进行聚类。使用 `hclust()` 函数。为了对一个由 *n* 个对象的相似性集合进行聚类分析，使用 `hclust()`
    函数。在第一阶段，每个对象被分配到它自己的聚类中。之后，在每一阶段，算法迭代并合并两个最相似的聚类。这个过程一直持续到只剩下一个聚类。`hclust()`
    函数要求我们以距离矩阵的形式提供数据。`dist1` 数据框被传递。默认情况下，使用完全链接方法。有多个聚合方法可以使用，其中一些可能是 `ward.D`、`ward.D2`、`single`、`complete`
    和 `average`。
- en: '[PRE5]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The call to the function `clust1` results in displaying the agglomeration methods
    used, the manner in which the distance is calculated, and the number of objects.
    The results are as follows:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 函数 `clust1` 的调用结果显示了使用的聚合方法、距离计算的方式以及对象的数量。结果如下：
- en: '![Step 4 - training and evaluating the model performance](img/image_03_004.jpg)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![第4步 - 训练和评估模型性能](img/image_03_004.jpg)'
- en: Step 5 - plotting the model
  id: totrans-61
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 第5步 - 绘制模型
- en: 'The `plot()` function is a generic function for plotting R objects. Here, the
    `plot()` function is used to draw the dendrogram:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '`plot()` 函数是一个用于绘制 R 对象的通用函数。在这里，`plot()` 函数用于绘制树状图：'
- en: '[PRE6]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The result is as follows:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Step 5 - plotting the model](img/image_03_005.jpg)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![第5步 - 绘制模型](img/image_03_005.jpg)'
- en: The `rect.hclust()` function highlights the clusters and draws the rectangles
    around the branches of the dendrogram. The dendrogram is first cut at a certain
    level followed by drawing a rectangle around the selected branches.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '`rect.hclust()` 函数突出显示聚类并在树状图的分支周围绘制矩形。首先在某个级别上切割树状图，然后围绕选定的分支绘制矩形。'
- en: 'The object `clust1` is passed as an object to the function along with the number
    of clusters to be formed:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 将对象 `clust1` 作为对象传递给函数，并指定要形成的聚类数量：
- en: '[PRE7]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'The result is as follows:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Step 5 - plotting the model](img/image_03_006.jpg)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![第5步 - 绘制模型](img/image_03_006.jpg)'
- en: 'The `cuts()` function shall cut the tree into multiple groups on the basis
    of the desired number of groups or the cut height. Here, `clust1` is passed as
    an object to the function along with the number of the desired group:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '`cuts()` 函数应根据所需的组数或切割高度将树切割成多个组。在这里，将 `clust1` 作为对象传递给函数，并指定所需的组数：'
- en: '[PRE8]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'The result is as follows:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Step 5 - plotting the model](img/image_03_007.jpg)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![第5步 - 绘制模型](img/image_03_007.jpg)'
- en: 'Getting the list of countries in each group:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 获取每个组的国家列表：
- en: '[PRE9]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The result is as follows:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Step 5 - plotting the model](img/image_03_008.jpg)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![第5步 - 绘制模型](img/image_03_008.jpg)'
- en: Hierarchical clustering - Amazon rainforest burned between 1999-2010
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 层次聚类 - 亚马逊雨林在1999-2010年间被烧毁
- en: Between 1999-2010, 33,000 square miles (85,500 square kilometers), or 2.8 percent
    of the Amazon rainforest burned down. This was found by NASA-led research. The
    main purpose of the research was to measure the extent of fire smolders under
    the forest canopy. The research found that burning forests destroys a much larger
    area compared to when forest lands are cleared for agriculture and cattle pasture.
    Yet, no correlation could be established between the fires and deforestation.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 在1999-2010年之间，亚马逊雨林有33,000平方英里（85,500平方公里），即2.8%被烧毁。这是NASA领导的研究发现。研究的主要目的是测量森林冠层下火灾的蔓延程度。研究发现，燃烧的森林破坏的面积比农业和牧场清理森林土地时大得多。然而，无法在火灾和森林砍伐之间建立相关性。
- en: The answer to the query of no correlation between fires and deforestation lay
    in humidity data from the **Atmospheric Infrared Sounder** (**AIRS**) instrument
    aboard NASA's Aqua satellite. The fire frequency coincides with low night-time
    humidity, which allowed the low-intensity surface fires to continue burning.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 关于火灾与森林砍伐之间无相关性的查询答案在于NASA的Aqua卫星上搭载的**大气红外探测器**（**AIRS**）仪器收集的湿度数据。火灾频率与夜间低湿度相吻合，这使得低强度地表火灾得以持续燃烧。
- en: Getting ready
  id: totrans-82
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: In order to perform hierarchical clustering, we shall be using a dataset collected
    on the Amazon rainforest, which burned from 1999-2010.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 为了执行层次聚类，我们将使用收集于亚马逊雨林的dataset，该雨林从1999年至2010年发生火灾。
- en: Step 1 - collecting and describing data
  id: totrans-84
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 第1步 - 收集和描述数据
- en: 'The  `NASAUnderstory` dataset shall be used. This is available in CSV format
    as `NASAUnderstory.csv`. The dataset is in standard format. There are 64 rows
    of data and 32 variables. The numeric variables are:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 将使用`NASAUnderstory`数据集。该数据集以CSV格式作为`NASAUnderstory.csv`提供。数据集是标准格式。有64行数据，32个变量。数值变量是：
- en: '`PlotID`'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`PlotID`'
- en: '`SPHA`'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SPHA`'
- en: '`BLIT`'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`BLIT`'
- en: '`ASMA`'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ASMA`'
- en: '`MOSS`'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`MOSS`'
- en: '`LEGR`'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`LEGR`'
- en: '`CHCA`'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`CHCA`'
- en: '`GRAS`'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`GRAS`'
- en: '`SEDG`'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SEDG`'
- en: '`SMTR`'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SMTR`'
- en: '`PTAQ`'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`PTAQ`'
- en: '`COCA`'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`COCA`'
- en: '`VAAN`'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`VAAN`'
- en: '`GAHI`'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`GAHI`'
- en: '`ARNU`'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ARNU`'
- en: '`LYOB`'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`LYOB`'
- en: '`PIMA`'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`PIMA`'
- en: '`RUBU`'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`RUBU`'
- en: '`VAOX`'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`VAOX`'
- en: '`ACSP`'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ACSP`'
- en: '`COCO`'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`COCO`'
- en: '`ACRU`'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ACRU`'
- en: '`TRBO`'
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TRBO`'
- en: '`MACA`'
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`MACA`'
- en: '`CLOB`'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`CLOB`'
- en: '`STRO`'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`STRO`'
- en: '`FUNG`'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`FUNG`'
- en: '`DILO`'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DILO`'
- en: '`ERIO`'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ERIO`'
- en: '`GATR`'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`GATR`'
- en: 'The non-numeric variables are:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 非数值变量是：
- en: '`Overstory Species`'
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Overstory Species`'
- en: '`Labels`'
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`标签`'
- en: How to do it...
  id: totrans-119
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: Let's get into the details.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们深入了解。
- en: Step 2 - exploring data
  id: totrans-121
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 第2步 - 探索数据
- en: Note
  id: totrans-122
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'Version info: Code for this page was tested in R version 3.2.3 (2015-12-10)'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 版本信息：本页面的代码在R版本3.2.3（2015-12-10）上进行了测试。
- en: 'Let''s explore the data and understand the relationships among the variables.
    We''ll begin by importing the file named `NASAUnderstory.csv`. We will be saving
    the data to the `NASA` data frame:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们探索数据并了解变量之间的关系。我们将从导入名为`NASAUnderstory.csv`的文件开始。我们将把数据保存到`NASA`数据框中：
- en: '[PRE10]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Next, we shall obtain the long version of each of the species column labels:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将获取每个物种列标签的长版本：
- en: '[PRE11]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Next, we shall print the `NASA.lab` data frame. This contains the complete name
    of each of the species as obtained.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将打印`NASA.lab`数据框。它包含每个物种的完整名称，如所获得。
- en: 'The results are as follows:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Step 2 - exploring data](img/image_03_009.jpg)'
  id: totrans-130
  prefs: []
  type: TYPE_IMG
  zh: '![第2步 - 探索数据](img/image_03_009.jpg)'
- en: 'Next, we shall pass the entire data content to the `NASA` data frame:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将整个数据内容传递到`NASA`数据框中：
- en: '[PRE12]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Printing the `NASA` data frame shall results in displaying the entire data content.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 打印`NASA`数据框将显示整个数据内容。
- en: '[PRE13]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'The results are as follows:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Step 2 - exploring data](img/image_03_010.jpg)'
  id: totrans-136
  prefs: []
  type: TYPE_IMG
  zh: '![第2步 - 探索数据](img/image_03_010.jpg)'
- en: Step 3 - transforming data
  id: totrans-137
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 第3步 - 转换数据
- en: 'Next, data standardization shall be carried out. The `scale()` function shall
    center and scale the columns of all the numeric variables as mentioned earlier:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，将执行数据标准化。`scale()`函数将中心化和缩放前面提到的所有数值变量的列：
- en: '[PRE14]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: This shall scale all the numeric values between columns `3` to `31` of the `NASA`
    data frame.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 这将缩放`NASA`数据框中第`3`列到第`31`列之间的所有数值。
- en: Printing the `NASAscale` data frame results in displaying all the scaled and
    centered values of the `NASAscale.`
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 打印`NASAscale`数据框将显示所有缩放和居中的`NASAscale`值。
- en: '[PRE15]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'The results are as follows:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Step 3 - transforming data](img/image_03_011.jpg)'
  id: totrans-144
  prefs: []
  type: TYPE_IMG
  zh: '![第3步 - 转换数据](img/image_03_011.jpg)'
- en: 'In order to encode a vector as a factor, the function factor is used. If the
    argument ordered is `TRUE`, the factor levels are assumed to be ordered. Here,
    we are passing the `OverstorySpecies` column as a value to the factor function:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 为了将向量编码为因子，使用 `factor` 函数。如果 `ordered` 参数为 `TRUE`，则假设因子级别是有序的。在这里，我们将 `OverstorySpecies`
    列作为值传递给因子函数：
- en: '[PRE16]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: The `as.factor()` returns a data frame with the row names.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: '`as.factor()` 返回一个具有行名的数据框。'
- en: 'Printing the data frame `rownames(NASAscale)` results in displaying all the
    values of the `OverstorySpecies` column:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 打印数据框 `rownames(NASAscale)` 会显示 `OverstorySpecies` 列的所有值：
- en: '[PRE17]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'The results are as follows:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Step 3 - transforming data](img/image_03_012.jpg)'
  id: totrans-151
  prefs: []
  type: TYPE_IMG
  zh: '![步骤 3 - 转换数据](img/image_03_012.jpg)'
- en: Step 4 - training and evaluating model performance
  id: totrans-152
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 步骤 4 - 训练和评估模型性能
- en: The next step is about training the model. The first step is to calculate the
    distance matrix. The `dist()` function is used. The function computes and returns
    the distance matrix, using the specified distance measure to compute the distances
    between the rows of a data matrix. The distance measure used can be Euclidean,
    maximum, Manhattan, Canberra, binary, or Minkowski. The distance measure used
    is Euclidean. The Euclidean distance calculates the distance between two vectors
    as *sqrt(sum((x_i - y_i)^2))*. The result is then stored in a new data frame `dist1`.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是训练模型。第一步是计算距离矩阵。使用 `dist()` 函数。该函数使用指定的距离度量来计算数据矩阵行之间的距离。使用的距离度量可以是欧几里得、最大、曼哈顿、Canberra、二元或
    Minkowski。使用的距离度量是欧几里得。欧几里得距离计算两个向量之间的距离为 *sqrt(sum((x_i - y_i)^2))*。然后将结果存储在一个新的数据框
    `dist1` 中。
- en: '[PRE18]'
  id: totrans-154
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: The next step is to perform clustering using Ward's method. The `hclust()` function
    is used. In order to perform cluster analysis on a set of dissimilarities of *n*
    objects, the `hclust()` function is used. At the first stage, each of the objects
    is assigned to its own cluster. The algorithm then proceeds iteratively at each
    stage joining the two most similar clusters. This process continues till there
    is just a single cluster left. The `hclust()` function requires us to provide
    the data in the form of a distance matrix. The `dist1` data frame is passed. By
    default, the complete linkage method is used. There can be multiple agglomeration
    methods which can be used, some of them could be `ward.D`, `ward.D2`, `single`,
    `complete`, and `average`.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是使用 Ward 方法进行聚类。使用 `hclust()` 函数。为了对一个由 *n* 个对象的相似性集合进行聚类分析，使用 `hclust()`
    函数。在第一阶段，每个对象被分配到它自己的聚类中。然后算法在每个阶段迭代地连接两个最相似的聚类。这个过程一直持续到只剩下一个聚类为止。`hclust()`
    函数需要我们以距离矩阵的形式提供数据。`dist1` 数据框被传递。默认情况下，使用完全连接方法。可以使用多种聚合方法，其中一些可能是 `ward.D`、`ward.D2`、`single`、`complete`
    和 `average`。
- en: '[PRE19]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'The call to the function, `clust1` results in display of the agglomeration
    method used, the manner in which the distance is calculated, and the number of
    objects. The results are as follows:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 函数调用 `clust1` 会显示所使用的聚合方法、计算距离的方式以及对象的数量。结果如下：
- en: '![Step 4 - training and evaluating model performance](img/image_03_013.jpg)'
  id: totrans-158
  prefs: []
  type: TYPE_IMG
  zh: '![步骤 4 - 训练和评估模型性能](img/image_03_013.jpg)'
- en: Step 5 - plotting the model
  id: totrans-159
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 步骤 5 - 绘制模型
- en: 'The `plot()` function is a generic function for the plotting R objects. Here,
    the `plot()` function is used to draw the dendrogram:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: '`plot()` 函数是 R 对象的通用绘图函数。在这里，使用 `plot()` 函数绘制树状图：'
- en: '[PRE20]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'The result is as follows:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Step 5 - plotting the model](img/image_03_014.jpg)'
  id: totrans-163
  prefs: []
  type: TYPE_IMG
  zh: '![步骤 5 - 绘制模型](img/image_03_014.jpg)'
- en: The `rect.hclust()` function highlights clusters and draws rectangles around
    the branches of the dendrogram. The dendrogram is first cut at a certain level
    followed by drawing a rectangle around selected branches.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: '`rect.hclust()` 函数突出显示聚类并在树状图的分支周围绘制矩形。首先在某个级别上切割树状图，然后围绕选定的分支绘制矩形。'
- en: 'The object, `clust1` is passed as an object to the function along with the
    number of clusters to be formed:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 将对象 `clust1` 作为对象传递给函数，并指定要形成的聚类数量：
- en: '[PRE21]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'The result is as follows:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Step 5 - plotting the model](img/image_03_015.jpg)'
  id: totrans-168
  prefs: []
  type: TYPE_IMG
  zh: '![步骤 5 - 绘制模型](img/image_03_015.jpg)'
- en: 'The `cuts()` function shall cut the tree into multiple groups on the basis
    of the desired number of groups or the cut height. Here, `clust1` is passed as
    an object to the function along with the number of desired groups:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: '`cuts()` 函数根据所需的组数或切割高度将树切割成多个组。在这里，将 `clust1` 作为对象传递给函数，并指定所需的组数：'
- en: '[PRE22]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'The result is as follows:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Step 5 - plotting the model](img/image_03_016.jpg)'
  id: totrans-172
  prefs: []
  type: TYPE_IMG
  zh: '![步骤 5 - 绘制模型](img/image_03_016.jpg)'
- en: Step 6 - improving model performance
  id: totrans-173
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 步骤 6 - 提高模型性能
- en: 'The following package needs to be loaded as a first step:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 首先需要加载以下包：
- en: '[PRE23]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: The `vegan` library is primarily used by community and vegetation ecologists.
    It contains ordination methods, diversity analysis, and other functions. Some
    of the popular tools are **diversity analysis, species abundance models, analysis
    of species richness, dissimilarity analyses, and so on.**
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: '`vegan` 库主要被群落和植被生态学家使用。它包含排序方法、多样性分析和其他功能。一些流行的工具包括**多样性分析、物种丰度模型、物种丰富度分析、相似性分析等等**。'
- en: 'The next step is about improving the model by training using the distance method,
    `jaccard`. The first step is to calculate the distance matrix. The `vegdist()`
    function is used. The function calculates pairwise distance. The result is then
    stored in a new data frame, `dist1`. The `jaccard` coefficient measures similarity
    between finite sample sets. This is calculated by dividing the size of the intersection
    by the size of the union of the sample sets:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是使用距离方法 `jaccard` 训练以提高模型。第一步是计算距离矩阵。使用 `vegdist()` 函数。该函数计算成对距离。然后将结果存储在一个新的数据框
    `dist1` 中。`jaccard` 系数衡量有限样本集之间的相似性。这是通过将交集的大小除以并集的大小来计算的：
- en: '[PRE24]'
  id: totrans-178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'The next step is to perform clustering using Ward''s method. The `hclust()`
    function is used:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是使用 Ward 方法进行聚类。使用 `hclust()` 函数：
- en: '[PRE25]'
  id: totrans-180
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'The call to the function, `clust1` results in display of the agglomeration
    methods used, the manner in which the distance is calculated, and the number of
    objects. The results are as follows:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 调用 `clust1` 函数会导致显示所使用的聚类方法、计算距离的方式以及对象的数量。结果如下：
- en: '![Step 6 - improving model performance](img/image_03_017.jpg)'
  id: totrans-182
  prefs: []
  type: TYPE_IMG
  zh: '![步骤 6 - 提高模型性能](img/image_03_017.jpg)'
- en: 'The `plot()` function is a generic function for the plotting R objects:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: '`plot()` 函数是 R 对象绘图的通用函数：'
- en: '[PRE26]'
  id: totrans-184
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: The `clust1` data frame is passed as an object to the function. `cex` gives
    the numerical value of the amount by which plotting text and symbols can be magnified
    relative to the default.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 将 `clust1` 数据框作为对象传递给函数。`cex` 提供了相对于默认值的文本和符号放大数值。
- en: 'The result is as follows:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Step 6 - improving model performance](img/image_03_018.jpg)'
  id: totrans-187
  prefs: []
  type: TYPE_IMG
  zh: '![步骤 6 - 提高模型性能](img/image_03_018.jpg)'
- en: 'The object `clust1` is passed as an object to the function along with the number
    of clusters to be formed:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 将对象 `clust1` 和要形成的聚类数量一起传递给函数：
- en: '[PRE27]'
  id: totrans-189
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'The result is as follows:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Step 6 - improving model performance](img/B04714_03_19.jpg)'
  id: totrans-191
  prefs: []
  type: TYPE_IMG
  zh: '![步骤 6 - 提高模型性能](img/B04714_03_19.jpg)'
- en: 'The `cuts()` function shall cut the tree into multiple groups on the basis
    of the desired number of groups or the cut height:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: '`cuts()` 函数应根据所需的组数或切割高度将树切割成多个组：'
- en: '[PRE28]'
  id: totrans-193
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'The result is as follows:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Step 6 - improving model performance](img/image_03_020.jpg)'
  id: totrans-195
  prefs: []
  type: TYPE_IMG
  zh: '![步骤 6 - 提高模型性能](img/image_03_020.jpg)'
- en: Using principal components lets us plot of two cluster solutions.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 使用主成分分析使我们能够绘制两个聚类解决方案。
- en: The `clusplot()` function shall draw a two-dimensional clustering plot. Here,
    the `NASA` data frame is passed as an object.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: '`clusplot()` 函数应绘制二维聚类图。在此，将 `NASA` 数据框作为对象传递。'
- en: 'The result is as follows:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Step 6 - improving model performance](img/image_03_021.jpg)'
  id: totrans-199
  prefs: []
  type: TYPE_IMG
  zh: '![步骤 6 - 提高模型性能](img/image_03_021.jpg)'
- en: Using discriminant functions lets us plot two cluster solutions.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 使用判别函数使我们能够绘制两个聚类解决方案。
- en: The `plotcluster()` function plots using projection methods in order to distinguish
    the given classes. Various projection methods include classical discriminant coordinates,
    methods to project differences in mean and covariance structure, asymmetric methods
    (separation of a homogeneous class from a heterogeneous one), local neighborhood-based
    methods and methods based on robust covariance matrices.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: '`plotcluster()` 函数使用投影方法进行绘图，以区分给定的类别。各种投影方法包括经典判别坐标、投影均值和协方差结构差异的方法、非对称方法（将同质类与异质类分离）、基于局部邻域的方法以及基于鲁棒协方差矩阵的方法。'
- en: 'The `clusplot()` function shall draw a two-dimensional clustering plot. Here,
    the `NASA` data frame is passed as an object:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: '`clusplot()` 函数应绘制二维聚类图。在此，将 `NASA` 数据框作为对象传递：'
- en: '[PRE29]'
  id: totrans-203
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'The result is as follows:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Step 6 - improving model performance](img/B04714_03_22.jpg)'
  id: totrans-205
  prefs: []
  type: TYPE_IMG
  zh: '![步骤 6 - 提高模型性能](img/B04714_03_22.jpg)'
- en: 'Next, transposing the `NASAscale` data frame takes place using the `t()` function:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，使用`t()`函数对`NASAscale`数据框进行转置：
- en: '[PRE30]'
  id: totrans-207
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: The next step is about improving the model by training using the Minkowski distance
    method. The first step is to calculate the distance matrix. The `dist()` function
    is used.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是使用Minkowski距离方法通过训练来提高模型。第一步是计算距离矩阵。使用`dist()`函数。
- en: The Minkowski distance is often used when variables are measured on ratio scales
    with an absolute zero value.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: Minkowski距离常用于变量在具有绝对零值的比率尺度上测量时。
- en: '[PRE31]'
  id: totrans-210
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: The next step is to perform clustering using Ward's method. The `hclust()` function
    is used.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是使用Ward方法进行聚类分析。使用`hclust()`函数。
- en: '[PRE32]'
  id: totrans-212
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'The call to the `clust1` function results in display of the agglomeration method
    used, the manner in which the distance is calculated, and the number of objects.
    The results are as follows:'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 调用`clust1`函数将显示所使用的聚合方法、计算距离的方式以及对象的数量。结果如下：
- en: '![Step 6 - improving model performance](img/image_03_023.jpg)'
  id: totrans-214
  prefs: []
  type: TYPE_IMG
  zh: '![步骤6 - 提高模型性能](img/image_03_023.jpg)'
- en: 'The `plot()` function is a generic function for the plotting R objects. Here,
    the `plot()` function is used to draw the dendrogram:'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: '`plot()`函数是R对象绘图的通用函数。在这里，`plot()`函数用于绘制树状图：'
- en: '[PRE33]'
  id: totrans-216
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'The result is as follows:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Step 6 - improving model performance](img/image_03_024.jpg)'
  id: totrans-218
  prefs: []
  type: TYPE_IMG
  zh: '![步骤6 - 提高模型性能](img/image_03_024.jpg)'
- en: The `rect.hclust()` function shall draw rectangles around the branches of the
    dendrogram highlighting the corresponding clusters. First, the dendrogram is cut
    at a certain level, and then a rectangle is drawn around selected branches.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: '`rect.hclust()`函数将在树状图的分支周围绘制矩形，突出相应的簇。首先，在某个级别上切割树状图，然后围绕选定的分支绘制矩形。'
- en: 'The `clust1` object is passed as an object to the function along with the number
    of clusters to be formed:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 将`clust1`对象作为对象传递给函数，同时指定要形成的簇数：
- en: '[PRE34]'
  id: totrans-221
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'The result is as follows:'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Step 6 - improving model performance](img/image_03_025.jpg)'
  id: totrans-223
  prefs: []
  type: TYPE_IMG
  zh: '![步骤6 - 提高模型性能](img/image_03_025.jpg)'
- en: 'The `cuts()` function shall cut the tree into multiple groups on the basis
    of the desired number of groups or the cut height. Here, `clust1` is passed as
    an object to the function along with the number of the desired group:'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: '`cuts()`函数将根据所需的组数或切割高度将树切割成多个组。在这里，将`clust1`对象作为对象传递给函数，同时指定所需的组数：'
- en: '[PRE35]'
  id: totrans-225
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'The result is as follows:'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Step 6 - improving model performance](img/image_03_026.jpg)'
  id: totrans-227
  prefs: []
  type: TYPE_IMG
  zh: '![步骤6 - 提高模型性能](img/image_03_026.jpg)'
- en: Hierarchical clustering - gene clustering
  id: totrans-228
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 层次聚类 - 基因聚类
- en: The ability to gather genome-wide expression data is a computationally complex
    task. The human brain with its limitations cannot solve the problem. However,
    data can be fine-grained to an easily comprehensible level by subdividing the
    genes into a smaller number of categories and then analyzing them.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 收集全基因组表达数据的能力是一项计算上复杂的任务。人类大脑由于其局限性无法解决这个问题。然而，通过将基因细分为更少的类别，然后进行分析，可以将数据细化到易于理解的水平。
- en: The goal of clustering is to subdivide a set of genes in such a way that similar
    items fall into the same cluster, whereas dissimilar items fall into different
    clusters. The important questions to be considered are decisions on similarity
    and usage for the items that have been clustered. Here we shall explore clustering
    genes and samples using the photoreceptor time series for the two genotypes.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 聚类分析的目标是以一种方式细分一组基因，使得相似的项目落在同一个簇中，而不相似的项目落在不同的簇中。需要考虑的重要问题是关于相似性和对已聚类的项目的使用决策。在这里，我们将探索使用两种基因型的光感受器时间序列对基因和样本进行聚类。
- en: Getting ready
  id: totrans-231
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备中
- en: In order to perform Hierarchical clustering, we shall be using a dataset collected
    on mice.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 为了执行层次聚类，我们将使用在老鼠身上收集的数据集。
- en: Step 1 - collecting and describing data
  id: totrans-233
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 第1步 - 收集和描述数据
- en: The datasets titled `GSE4051_data` and `GSE4051_design` shall be used. These
    are available in the CSV format titled `GSE4051_data.csv` and `GSE4051_design.csv`.
    The dataset is in standard format.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 将使用标题为`GSE4051_data`和`GSE4051_design`的数据集。这些数据集以`GSE4051_data.csv`和`GSE4051_design.csv`的CSV格式提供。数据集是标准格式。
- en: 'In `GSE4051_data` there are 29,949 rows of data and 39 variables. The numeric
    variables are:'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 在`GSE4051_data`中，有29,949行数据以及39个变量。数值变量包括：
- en: '`Sample_21`'
  id: totrans-236
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Sample_21`'
- en: '`Sample_22`'
  id: totrans-237
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Sample_22`'
- en: '`Sample_23`'
  id: totrans-238
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Sample_23`'
- en: '`Sample_16`'
  id: totrans-239
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Sample_16`'
- en: '`Sample_17`'
  id: totrans-240
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Sample_17`'
- en: '`Sample_6`'
  id: totrans-241
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Sample_6`'
- en: '`Sample_24`'
  id: totrans-242
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Sample_24`'
- en: '`Sample_25`'
  id: totrans-243
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Sample_25`'
- en: '`Sample_26`'
  id: totrans-244
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Sample_26`'
- en: '`Sample_27`'
  id: totrans-245
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Sample_27`'
- en: '`Sample_14`'
  id: totrans-246
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Sample_14`'
- en: '`Sample_3`'
  id: totrans-247
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Sample_3`'
- en: '`Sample_5`'
  id: totrans-248
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Sample_5`'
- en: '`Sample_8`'
  id: totrans-249
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Sample_8`'
- en: '`Sample_28`'
  id: totrans-250
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Sample_28`'
- en: '`Sample_29`'
  id: totrans-251
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Sample_29`'
- en: '`Sample_30`'
  id: totrans-252
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Sample_30`'
- en: '`Sample_31`'
  id: totrans-253
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Sample_31`'
- en: '`Sample_1`'
  id: totrans-254
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Sample_1`'
- en: '`Sample_10`'
  id: totrans-255
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Sample_10`'
- en: '`Sample_4`'
  id: totrans-256
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Sample_4`'
- en: '`Sample_7`'
  id: totrans-257
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Sample_7`'
- en: '`Sample_32`'
  id: totrans-258
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Sample_32`'
- en: '`Sample_33`'
  id: totrans-259
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Sample_33`'
- en: '`Sample_34`'
  id: totrans-260
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Sample_34`'
- en: '`Sample_35`'
  id: totrans-261
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Sample_35`'
- en: '`Sample_13`'
  id: totrans-262
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Sample_13`'
- en: '`Sample_15`'
  id: totrans-263
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Sample_15`'
- en: '`Sample_18`'
  id: totrans-264
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Sample_18`'
- en: '`Sample_19`'
  id: totrans-265
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Sample_19`'
- en: '`Sample_36`'
  id: totrans-266
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Sample_36`'
- en: '`Sample_37`'
  id: totrans-267
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Sample_37`'
- en: '`Sample_38`'
  id: totrans-268
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Sample_38`'
- en: '`Sample_39`'
  id: totrans-269
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Sample_39`'
- en: '`Sample_11`'
  id: totrans-270
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Sample_11`'
- en: '`Sample_12`'
  id: totrans-271
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Sample_12`'
- en: '`Sample_2`'
  id: totrans-272
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Sample_2`'
- en: '`Sample_9`'
  id: totrans-273
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Sample_9`'
- en: 'In the `GSE4051_design` dataset there are 39 rows of data and 4 variables.
    The numeric variable is:'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 在`GSE4051_design`数据集中有39行数据 和4个变量。数值变量是：
- en: '`sidNum`'
  id: totrans-275
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sidNum`'
- en: 'The non-numeric variables are:'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 非数值变量是：
- en: '`sidChar`'
  id: totrans-277
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sidChar`'
- en: '`devStage`'
  id: totrans-278
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`devStage`'
- en: '`gType`'
  id: totrans-279
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`gType`'
- en: How to do it...
  id: totrans-280
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: Let's get into the details.
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们深入了解。
- en: Step 2 - exploring data
  id: totrans-282
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 第2步 - 探索数据
- en: Note
  id: totrans-283
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'Version info: Code for this page was tested in R version 3.2.3 (2015-12-10)'
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 版本信息：本页面的代码在R版本3.2.3（2015-12-10）中进行了测试
- en: The `RColorBrewer` package is an R package from [http://colorbrewer2.org](http://colorbrewer2.org)
     and provides color schemes for maps and other graphics.
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: The `RColorBrewer` package is an R package from [http://colorbrewer2.org](http://colorbrewer2.org)
     and provides color schemes for maps and other graphics.
- en: 'The `pvclust` package is used for assessing uncertainty in hierarchical cluster
    analysis. In hierarchical clustering, each of the clusters calculates p-values
    via multi-scale bootstrap resampling. The p-value of a cluster is measured between
    0 and 1\. There are two types of p-value available: **approximately** **unbiased**
    (**AU**) and **bootstrap probability** (**BP**) value. The AU p-value is calculated
    using the multi-scale bootstrap resampling method, while the ordinary bootstrap
    resampling method is used to calculate the BP p-value. The AU p-value has superiority
    bias compared to the BP p-value.'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 'The `pvclust` package is used for assessing uncertainty in hierarchical cluster
    analysis. In hierarchical clustering, each of the clusters calculates p-values
    via multi-scale bootstrap resampling. The p-value of a cluster is measured between
    0 and 1\. There are two types of p-value available: **approximately** **unbiased**
    (**AU**) and **bootstrap probability** (**BP**) value. The AU p-value is calculated
    using the multi-scale bootstrap resampling method, while the ordinary bootstrap
    resampling method is used to calculate the BP p-value. The AU p-value has superiority
    bias compared to the BP p-value.'
- en: LaTeX-formatted tables are produced by the `xtable` package. Using `xtable`,
    package-specific R objects can be turned into `xtables`. These `xtables` can then
    be output in either LaTeX or HTML formats.
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: LaTeX格式的表格由`xtable`包生成。使用`xtable`，可以将特定包的R对象转换为`xtables`。然后，这些`xtables`可以以LaTeX或HTML格式输出。
- en: The `plyr` package is used as a tool for carrying out **split-apply-combine**
    (**SAC**) procedures. It breaks a big problem down into manageable pieces, operates
    on each piece, and then puts all the pieces back together.
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: The `plyr` package is used as a tool for carrying out **split-apply-combine**
    (**SAC**) procedures. It breaks a big problem down into manageable pieces, operates
    on each piece, and then puts all the pieces back together.
- en: 'The following packages must be loaded:'
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 'The following packages must be loaded:'
- en: '[PRE36]'
  id: totrans-290
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Let''s explore the data and understand the relationships among the variables.
    We''ll begin by importing the CSV file named `GSE4051_data.csv`. We will be saving
    the data to the `GSE4051_data` data frame:'
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们探索数据并了解变量之间的关系。我们将从导入名为`GSE4051_data.csv`的CSV文件开始。我们将数据保存到`GSE4051_data`数据框中：
- en: '[PRE37]'
  id: totrans-292
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'Next, we shall print information about the `GSE4051_data` data frame. The `str()`
    function returns the provided information about the structure of the `GSE4051_data`
    data frame. It compactly displays the internal structure of the `GSE4051_data`
    data frame. `max.level` indicates the maximal level of nesting applied to display
    nested structures:'
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将打印关于`GSE4051_data`数据框的信息。`str()`函数返回关于`GSE4051_data`数据框结构的信息。它紧凑地显示`GSE4051_data`数据框的内部结构。`max.level`表示用于显示嵌套结构的最大嵌套级别：
- en: '[PRE38]'
  id: totrans-294
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'The result is as follows:'
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Step 2 - exploring data](img/image_03_027.jpg)'
  id: totrans-296
  prefs: []
  type: TYPE_IMG
  zh: '![第2步 - 探索数据](img/image_03_027.jpg)'
- en: 'Next, we shall import the CSV file named `GSE4051_design.csv`. We will be saving
    the data to the `GSE4051_design` data frame:'
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将导入名为`GSE4051_design.csv`的CSV文件。我们将数据保存到`GSE4051_design`数据框中：
- en: '[PRE39]'
  id: totrans-298
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: The preceding line prints the internal structure of the `GSE4051_design` data
    frame.
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 前一行打印了`GSE4051_design`数据框的内部结构。
- en: 'The result is as follows:'
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Step 2 - exploring data](img/image_03_028.jpg)'
  id: totrans-301
  prefs: []
  type: TYPE_IMG
  zh: '![第2步 - 探索数据](img/image_03_028.jpg)'
- en: Step 3 - transforming data
  id: totrans-302
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 第3步 - 转换数据
- en: In order to ease visualization at a later stage, the rows are rescaled. Since
    the absolute differences in the expression between genes at the currently required,
    rescaling of the rows is carried out.
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 为了便于后续的可视化，对行进行了缩放。由于当前所需的基因表达之间的绝对差异，因此执行了行的缩放。
- en: Centering variables and creating z-scores are two common data analysis activities.
    The `scale` function centers and/or scales the columns of a numeric matrix.
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 变量中心化和创建z分数是两种常见的数据分析活动。`scale`函数对数值矩阵的列进行中心化和/或缩放。
- en: 'Transposing the matrix. The `GSE4051_data` data frame is passed for transposition
    of the data frame:'
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 转置矩阵。将`GSE4051_data`数据框传递以进行数据框的转置：
- en: '[PRE40]'
  id: totrans-306
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: Next, we shall print information about the `GSE4051_data` data frame. With `give.attr
    = FALSE`, attributes as sub structures are not displayed.
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将打印有关`GSE4051_data`数据框的信息。使用`give.attr = FALSE`，不显示属性作为子结构。
- en: '[PRE41]'
  id: totrans-308
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'The result is as follows:'
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Step 3 - transforming data](img/image_03_029.jpg)'
  id: totrans-310
  prefs: []
  type: TYPE_IMG
  zh: '![步骤 3 - 转换数据](img/image_03_029.jpg)'
- en: 'The `head()` function returns the first part of a vector, matrix, table, data
    frame, or function. The `GSE4051_data` and `trans_GSE4051_data` data frames are
    passed as objects. The `rowMeans()` function calculates the means of rows. The
    `data.frame()` function creates data frames that are tightly coupled collections
    of variables and share many of the properties of matrices:'
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: '`head()`函数返回向量、矩阵、表格、数据框或函数的第一部分。`GSE4051_data`和`trans_GSE4051_data`数据框作为对象传递。`rowMeans()`函数计算行的平均值。`data.frame()`函数创建数据框，它们是紧密耦合的变量集合，并共享许多矩阵的性质：'
- en: '[PRE42]'
  id: totrans-312
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'The result is as follows:'
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Step 3 - transforming data](img/image_03_030.jpg)'
  id: totrans-314
  prefs: []
  type: TYPE_IMG
  zh: '![步骤 3 - 转换数据](img/image_03_030.jpg)'
- en: Step 4 - training the model
  id: totrans-315
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 步骤 4 - 训练模型
- en: The next step is training the model. The first step is to calculate the distance
    matrix. The `dist()` function is used. The function computes and returns the distance
    matrix, using the specified distance measure to compute the distances between
    the rows of a data matrix. The distance measure used can be Euclidean, maximum,
    Manhattan, Canberra, binary, or Minkowski. The distance measure used is Euclidean.
    The Euclidean distance calculates the distance between two vectors as *sqrt(sum((x_i
    - y_i)^2))*. The transposed `trans_GSE4051_data` data frame is used to calculate
    the distance. The result is then stored in the `pair_dist_GSE4051_data` data frame.
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是训练模型。第一步是计算距离矩阵。使用`dist()`函数。该函数使用指定的距离度量来计算数据矩阵行之间的距离。使用的距离度量可以是欧几里得、最大值、曼哈顿、Canberra、二元或闵可夫斯基。使用的距离度量是欧几里得。欧几里得距离计算两个向量之间的距离为*sqrt(sum((x_i
    - y_i)^2))*。使用转置的`trans_GSE4051_data`数据框来计算距离。然后将结果存储在`pair_dist_GSE4051_data`数据框中。
- en: '[PRE43]'
  id: totrans-317
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'Next, the `interaction()` function is used, which computes and returns an unordered
    factor with the interaction of the `gType`, `devStage` variables. The result of
    unordered factors is passed to the `with()` function along with the data frame,
    `GSE4051_design`. This creates a new factor representing the interaction of `gType`,
    `devStage` variables:'
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，使用`interaction()`函数，该函数计算并返回一个包含`gType`、`devStage`变量交互作用的未排序因子。未排序因子的结果与数据框`GSE4051_design`一起传递给`with()`函数，从而创建一个表示`gType`、`devStage`变量交互作用的新因子：
- en: '[PRE44]'
  id: totrans-319
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'The `summary()` function is used to produce result summaries of the data frame,
    `GSE4051_design$group`:'
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`summary()`函数来生成数据框`GSE4051_design$group`的结果摘要：
- en: '[PRE45]'
  id: totrans-321
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'The result is as follows:'
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Step 4 - training the model](img/image_03_031.jpg)'
  id: totrans-323
  prefs: []
  type: TYPE_IMG
  zh: '![步骤 4 - 训练模型](img/image_03_031.jpg)'
- en: Next, the computing of hierarchical clustering using various linkage types is
    carried out.
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，执行使用各种连接类型的层次聚类计算。
- en: The `hclust()` function is used. In order to perform cluster analysis on a set
    of dissimilarities of *n* objects, the `hclust()` function is used. At the first
    stage, each of the objects is assigned to its own cluster. The algorithm then
    proceeds iteratively at each stage joining the two most similar clusters. This
    process continues till there is just a single cluster left. The `hclust()` function
    requires we provide the data in the form of a distance matrix. The `pair_dist_GSE4051_data`
    data frame is passed.
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`hclust()`函数。为了对*n*个对象的相似性集进行聚类分析，使用`hclust()`函数。在第一阶段，每个对象被分配到它自己的簇中。然后算法在每个阶段迭代地连接两个最相似的簇。这个过程一直持续到只剩下一个簇为止。`hclust()`函数需要我们以距离矩阵的形式提供数据。`pair_dist_GSE4051_data`数据框被传递。
- en: 'The agglomeration method, `single`, is used as the first case:'
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 聚合法`single`作为第一种情况使用：
- en: '[PRE46]'
  id: totrans-327
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'The call to `pr.hc.single` results in display of the agglomeration method used,
    the manner in which the distance is calculated and the number of objects:'
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: 调用`pr.hc.single`会导致显示使用的聚合法、距离计算方式以及对象的数量：
- en: '[PRE47]'
  id: totrans-329
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'The result is as follows:'
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Step 4 - training the model](img/image_03_032.jpg)'
  id: totrans-331
  prefs: []
  type: TYPE_IMG
  zh: '![步骤 4 - 训练模型](img/image_03_032.jpg)'
- en: 'The agglomeration method, `complete` is used as the second case:'
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: 聚类方法 `complete` 被用作第二个案例：
- en: '[PRE48]'
  id: totrans-333
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'The call to `pr.hc.complete` results in display of the agglomeration method
    used, the manner in which the distance is calculated and the number of objects:'
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 调用 `pr.hc.complete` 将显示所使用的聚类方法、计算距离的方式以及对象的数量：
- en: '[PRE49]'
  id: totrans-335
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'The result is as follows:'
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Step 4 - training the model](img/image_03_033.jpg)'
  id: totrans-337
  prefs: []
  type: TYPE_IMG
  zh: '![步骤 4 - 训练模型](img/image_03_033.jpg)'
- en: 'The agglomeration method `average` is used as the third case:'
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: 聚类方法 `average` 被用作第三个案例：
- en: '[PRE50]'
  id: totrans-339
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'The call to `pr.hc.average` results in display of the agglomeration method
    used, the manner in which the distance is calculated, and the number of objects:'
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: 调用 `pr.hc.average` 将显示所使用的聚类方法、计算距离的方式以及对象的数量：
- en: '[PRE51]'
  id: totrans-341
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'The result is as follows:'
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Step 4 - training the model](img/image_03_034.jpg)'
  id: totrans-343
  prefs: []
  type: TYPE_IMG
  zh: '![步骤 4 - 训练模型](img/image_03_034.jpg)'
- en: 'The agglomeration method ward is used as the fourth case:'
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 聚类方法 ward 被用作第四个案例：
- en: '[PRE52]'
  id: totrans-345
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: 'The call to `pr.hc.ward` results in display of the agglomeration method used,
    the manner in which the distance is calculated, and the number of objects:'
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 调用 `pr.hc.ward` 将显示所使用的聚类方法、计算距离的方式以及对象的数量：
- en: '[PRE53]'
  id: totrans-347
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'The result is as follows:'
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Step 4 - training the model](img/image_03_035.jpg)'
  id: totrans-349
  prefs: []
  type: TYPE_IMG
  zh: '![步骤 4 - 训练模型](img/image_03_035.jpg)'
- en: '[PRE54]'
  id: totrans-350
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: The `plot()` function is a generic function for plotting R objects.
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: '`plot()` 函数是用于绘制 R 对象的通用函数。'
- en: 'The first call to the `plot()` function passes the `pr.hc.single` data frame
    as an object:'
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: 第一次调用 `plot()` 函数时，将 `pr.hc.single` 数据框作为对象传递：
- en: '[PRE55]'
  id: totrans-353
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: 'The result is as follows:'
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Step 4 - training the model](img/image_03_036.jpg)'
  id: totrans-355
  prefs: []
  type: TYPE_IMG
  zh: '![步骤 4 - 训练模型](img/image_03_036.jpg)'
- en: 'The second call to the `plot()` function passes the `pr.hc.complete` data frame
    as an object:'
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: 第二次调用 `plot()` 函数时，将 `pr.hc.complete` 数据框作为对象传递：
- en: '[PRE56]'
  id: totrans-357
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: 'The result is as follows:'
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Step 4 - training the model](img/image_03_037.jpg)'
  id: totrans-359
  prefs: []
  type: TYPE_IMG
  zh: '![步骤 4 - 训练模型](img/image_03_037.jpg)'
- en: 'The third call to the `plot()` function passes the `pr.hc.average` data frame
    as an object:'
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: 第三次调用 `plot()` 函数时，将 `pr.hc.average` 数据框作为对象传递：
- en: '[PRE57]'
  id: totrans-361
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: 'The result is as follows:'
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Step 4 - training the model](img/image_03_038.jpg)'
  id: totrans-363
  prefs: []
  type: TYPE_IMG
  zh: '![步骤 4 - 训练模型](img/image_03_038.jpg)'
- en: 'The fourth call to the `plot()` function passes the `pr.hc.ward` data frame
    as an object:'
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: 第四次调用 `plot()` 函数时，将 `pr.hc.ward` 数据框作为对象传递：
- en: '[PRE58]'
  id: totrans-365
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: 'The result is as follows:'
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Step 4 - training the model](img/image_03_039.jpg)'
  id: totrans-367
  prefs: []
  type: TYPE_IMG
  zh: '![步骤 4 - 训练模型](img/image_03_039.jpg)'
- en: '[PRE59]'
  id: totrans-368
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: Step 5 - plotting the model
  id: totrans-369
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 步骤 5 - 绘制模型
- en: The `plot()` function is a generic function for the plotting R objects. Here,
    the `plot()` function is used to draw the dendrogram.
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: '`plot()` 函数是用于绘制 R 对象的通用函数。在这里，`plot()` 函数被用来绘制树状图。'
- en: The `rect.hclust()` function shall draw rectangles around the branches of the
    dendrogram highlighting the corresponding clusters. First the dendrogram is cut
    at a certain level, and then a rectangle is drawn around selected branches.
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: '`rect.hclust()` 函数应在树状图的分支周围绘制矩形，突出显示相应的聚类。首先在某个级别上切割树状图，然后围绕选定的分支绘制矩形。'
- en: '`RColorBrewer` uses the work from [http://colorbrewer2.org/](http://colorbrewer2.org/)
    to choose sensible color schemes for figures in R.'
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: '`RColorBrewer` 使用 [http://colorbrewer2.org/](http://colorbrewer2.org/) 上的工作来为
    R 中的图形选择合理的颜色方案。'
- en: 'The colors are split into three groups:'
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: 颜色被分为三个组：
- en: 'Sequential: Low data--light colors; high data--dark colors'
  id: totrans-374
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 顺序：低数据--浅色；高数据--深色
- en: 'Diverging: Mid-range data--light colors; low and high range data--contrasting
    dark colors'
  id: totrans-375
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分离：中间范围数据--浅色；低和高范围数据--对比深色
- en: 'Qualitative: Colors have been designed to highlight the maximum visual difference
    between classes'
  id: totrans-376
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定性：颜色被设计用来突出显示类别之间的最大视觉差异
- en: One of the important functions of `RColorBrewer` is `brewer.pal()`. This function
    allows one to choose from the `display.brewer.all()` function by passing the number
    of colors and the name of the palette.
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: '`RColorBrewer` 的重要功能之一是 `brewer.pal()`。此函数允许用户通过传递颜色数量和调色板名称来从 `display.brewer.all()`
    函数中选择。'
- en: 'As a first case, `pr.hc.single` is passed as an object to the `plot()` function:'
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: 作为第一个案例，`pr.hc.single` 被作为对象传递给 `plot()` 函数：
- en: '[PRE60]'
  id: totrans-379
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: 'The result is as follows:'
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Step 5 - plotting the model](img/image_03_040.jpg)'
  id: totrans-381
  prefs: []
  type: TYPE_IMG
  zh: '![步骤 5 - 绘制模型](img/image_03_040.jpg)'
- en: 'Next, we create the heat maps using the `single` agglomeration method. By default,
    the `heatmap()` function uses the agglomeration method `euclidean`:'
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们使用 `single` 聚类方法创建热图。默认情况下，`heatmap()` 函数使用聚类方法 `euclidean`：
- en: '[PRE61]'
  id: totrans-383
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: 'The result is as follows:'
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Step 5 - plotting the model](img/image_03_041.jpg)'
  id: totrans-385
  prefs: []
  type: TYPE_IMG
  zh: '![步骤 5 - 绘制模型](img/image_03_041.jpg)'
- en: 'As a second case, `pr.hc.complete` is passed as an object to the `plot()` function:'
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
  zh: 作为第二个案例，`pr.hc.complete` 作为对象传递给 `plot()` 函数：
- en: '[PRE62]'
  id: totrans-387
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: 'The result is as follows:'
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Step 5 - plotting the model](img/image_03_042.jpg)'
  id: totrans-389
  prefs: []
  type: TYPE_IMG
  zh: '![步骤 5 - 绘制模型](img/image_03_042.jpg)'
- en: Next we create heat maps using the `complete` agglomeration method.
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们使用 `complete` 聚类方法创建热图。
- en: '[PRE63]'
  id: totrans-391
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: 'The result is as follows:'
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Step 5 - plotting the model](img/image_03_043.jpg)'
  id: totrans-393
  prefs: []
  type: TYPE_IMG
  zh: '![步骤 5 - 绘制模型](img/image_03_043.jpg)'
- en: 'As a third case, `pr.hc.average` is passed as an object to the `plot()` function:'
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
  zh: 作为第三个案例，`pr.hc.average` 作为对象传递给 `plot()` 函数：
- en: '[PRE64]'
  id: totrans-395
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: 'The result is as follows:'
  id: totrans-396
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Step 5 - plotting the model](img/image_03_044.jpg)'
  id: totrans-397
  prefs: []
  type: TYPE_IMG
  zh: '![步骤 5 - 绘制模型](img/image_03_044.jpg)'
- en: 'Next, we create heat maps using the `average` agglomeration method:'
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们使用 `average` 聚类方法创建热图：
- en: '[PRE65]'
  id: totrans-399
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: 'The result is as follows:'
  id: totrans-400
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Step 5 - plotting the model](img/image_03_045.jpg)'
  id: totrans-401
  prefs: []
  type: TYPE_IMG
  zh: '![步骤 5 - 绘制模型](img/image_03_045.jpg)'
- en: 'As a fourth case, `pr.hc.ward` is passed as an object to the `plot()` function:'
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
  zh: 作为第四个案例，`pr.hc.ward` 作为对象传递给 `plot()` 函数：
- en: '[PRE66]'
  id: totrans-403
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: 'The result is as follows:'
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Step 5 - plotting the model](img/image_03_046.jpg)'
  id: totrans-405
  prefs: []
  type: TYPE_IMG
  zh: '![步骤 5 - 绘制模型](img/image_03_046.jpg)'
- en: 'Next, we create heat maps using the `ward` agglomeration method:'
  id: totrans-406
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们使用 `ward` 聚类方法创建热图：
- en: '[PRE67]'
  id: totrans-407
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: 'The result is as follows:'
  id: totrans-408
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Step 5 - plotting the model](img/image_03_047.jpg)'
  id: totrans-409
  prefs: []
  type: TYPE_IMG
  zh: '![步骤 5 - 绘制模型](img/image_03_047.jpg)'
- en: Binary clustering - math test
  id: totrans-410
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 二元聚类 - 数学测试
- en: In the education system tests and examinations are major features. The advantage
    of examination system is that it can be one of the ways to differentiate between
    good and poor performers. The examination system puts the onus on students to
    upgrade for next standard for which they should appear and pass exams. It creates
    responsibility on students to study on regular basis. The exam systems prepare
    the students to meet the challenges of future. It helps them to analyze reason
    and communicate their ideas effectively in a fixed time period. On the other hand
    few draw backs are noticed such as slow learners cannot perform well in test and
    this creates inferior complexity among students.
  id: totrans-411
  prefs: []
  type: TYPE_NORMAL
  zh: 在教育体系中，测试和考试是主要特征。考试系统的优势在于它可以作为区分表现好与差的一种方式。考试系统使学生有责任提升到下一个标准，他们应该参加并通过考试。它使学生有责任定期学习。考试系统使学生为应对未来的挑战做好准备。它帮助他们分析原因，并在固定时间内有效地传达他们的想法。另一方面，也注意到一些缺点，如学习慢的学生在测试中表现不佳，这会在学生中造成低劣的复杂性。
- en: Getting ready
  id: totrans-412
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: In order to perform binary clustering, we shall be using a dataset collected
    on math tests.
  id: totrans-413
  prefs: []
  type: TYPE_NORMAL
  zh: 为了执行二元聚类，我们将使用在数学测试中收集的数据集。
- en: Step 1 - collecting and describing data
  id: totrans-414
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 步骤 1 - 收集和描述数据
- en: The dataset titled `math test` shall be used. This is available in the TXT format
    titled `math test.txt`. The dataset is in standard format. There are 60 rows of
    data. There are 60 columns. The columns are scores on items for 55 male students.
  id: totrans-415
  prefs: []
  type: TYPE_NORMAL
  zh: 将使用标题为 `math test` 的数据集。该数据集以 `math test.txt` 的 TXT 格式提供。数据集是标准格式。有 60 行数据。有
    60 列。列是 55 名男生的项目得分。
- en: How to do it...
  id: totrans-416
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: Let's get into the details.
  id: totrans-417
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们深入了解。
- en: Step 2 - exploring data
  id: totrans-418
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 步骤 2 - 探索数据
- en: Note
  id: totrans-419
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'Version info: Code for this page was tested in R version 3.2.3 (2015-12-10)'
  id: totrans-420
  prefs: []
  type: TYPE_NORMAL
  zh: 版本信息：本页面的代码在 R 版本 3.2.3（2015-12-10）上进行了测试。
- en: 'Let''s explore the data and understand relationships among the variables. We''ll
    begin by importing the TXT file named `ACT math test.txt`. We will be saving the
    data to the `Mathtest` data frame:'
  id: totrans-421
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们探索数据并了解变量之间的关系。我们将从导入名为 `ACT math test.txt` 的 TXT 文件开始。我们将数据保存到 `Mathtest`
    数据框中：
- en: '[PRE68]'
  id: totrans-422
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: Step 3 - training and evaluating model performance
  id: totrans-423
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 步骤 3 - 训练和评估模型性能
- en: Next, we shall perform clustering of the items. Groups of items based on the
    students' scores shall be clustered together.
  id: totrans-424
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将对项目进行聚类。根据学生的分数，将项目分组在一起。
- en: First, we shall count the total mismatches based on the squared Euclidean distance.
  id: totrans-425
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将根据平方欧几里得距离计算总的不匹配数。
- en: 'The `dist()` function is called. The `Mathtest` data frame is passed as input
    to the `dist()` function. Counting the total mismatches based on the squared Euclidean
    distance, the result shall be stored in the, `dist.items` data frame:'
  id: totrans-426
  prefs: []
  type: TYPE_NORMAL
  zh: 调用 `dist()` 函数。将 `Mathtest` 数据框作为输入传递给 `dist()` 函数。根据平方欧几里得距离计算总的不匹配数，结果应存储在
    `dist.items` 数据框中：
- en: '[PRE69]'
  id: totrans-427
  prefs: []
  type: TYPE_PRE
  zh: '[PRE69]'
- en: Next, we shall print the `dist.items` data frame.
  id: totrans-428
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将打印 `dist.items` 数据框。
- en: '[PRE70]'
  id: totrans-429
  prefs: []
  type: TYPE_PRE
  zh: '[PRE70]'
- en: 'The result is as follows:'
  id: totrans-430
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Step 3 - training and evaluating model performance](img/image_03_048.jpg)'
  id: totrans-431
  prefs: []
  type: TYPE_IMG
  zh: '![步骤 3 - 训练和评估模型性能](img/image_03_048.jpg)'
- en: Next, the distance measure ignores `0-0` matches altogether. The binary method
    shall be used in the `dist()` function. In the binary method, the non-zero elements
    are on and zero-elements are off since the vectors are considered binary bits.
  id: totrans-432
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，距离度量完全忽略 `0-0` 匹配。在 `dist()` 函数中应使用二进制方法。在二进制方法中，非零元素处于开启状态，而零元素处于关闭状态，因为向量被视为二进制位。
- en: '[PRE71]'
  id: totrans-433
  prefs: []
  type: TYPE_PRE
  zh: '[PRE71]'
- en: Next, we shall print the data frame, `dist.items.2`, to observe the result.
  id: totrans-434
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将打印数据框 `dist.items.2` 以观察结果。
- en: 'The result is as follows:'
  id: totrans-435
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Step 3 - training and evaluating model performance](img/image_03_049.jpg)'
  id: totrans-436
  prefs: []
  type: TYPE_IMG
  zh: '![步骤 3 - 训练和评估模型性能](img/image_03_049.jpg)'
- en: Next, the distance measure ignores `1-1` matches altogether. The binary method
    shall be used in the `dist()` function. In the binary method, the non-zero elements
    are on and zero-elements are off since the vectors are considered binary bits.
  id: totrans-437
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，距离度量完全忽略 `1-1` 匹配。在 `dist()` 函数中应使用二进制方法。在二进制方法中，非零元素处于开启状态，而零元素处于关闭状态，因为向量被视为二进制位。
- en: '[PRE72]'
  id: totrans-438
  prefs: []
  type: TYPE_PRE
  zh: '[PRE72]'
- en: Next, we shall print the data frame, `dist.items.3`, to observe the result.
  id: totrans-439
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将打印数据框 `dist.items.3` 以观察结果。
- en: 'The result is as follows:'
  id: totrans-440
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Step 3 - training and evaluating model performance](img/image_03_050.jpg)'
  id: totrans-441
  prefs: []
  type: TYPE_IMG
  zh: '![步骤 3 - 训练和评估模型性能](img/image_03_050.jpg)'
- en: The next step is to perform clustering using the `complete` method. The `hclust()`
    function is used. In order to perform cluster analysis on a set of dissimilarities
    for *n* objects, the `hclust()` function is used. At the first stage, each of
    the objects is assigned to its own cluster. The algorithm then proceeds iteratively
    at each stage joining the two most similar clusters. This process continues till
    there is just a single cluster left. The `hclust()` function requires us to provide
    the data in the form of a distance matrix. The `dist1` data frame is passed. By
    default, the complete linkage method is used. There can be multiple agglomeration
    methods which can be used, some of them could be `ward.D`, `ward.D2`, `single`,
    `complete`, or `average`.
  id: totrans-442
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是使用 `complete` 方法进行聚类。使用 `hclust()` 函数。为了对 *n* 个对象的相似性集进行聚类分析，使用 `hclust()`
    函数。在第一阶段，每个对象都被分配到它自己的簇中。然后算法在每个阶段迭代地连接两个最相似的簇。这个过程一直持续到只剩下一个簇为止。`hclust()` 函数要求我们以距离矩阵的形式提供数据。`dist1`
    数据框被传递。默认情况下，使用完整链接方法。可以有多个聚合方法可供使用，其中一些可能是 `ward.D`、`ward.D2`、`single`、`complete`
    或 `average`。
- en: 'The method used is complete. When the complete method is used, the cluster
    that is formed has the maximum distance between any object in the cluster and
    the other object:'
  id: totrans-443
  prefs: []
  type: TYPE_NORMAL
  zh: 使用的方法是完整的。当使用完整方法时，形成的簇中任何对象与其他对象之间的最大距离：
- en: '[PRE73]'
  id: totrans-444
  prefs: []
  type: TYPE_PRE
  zh: '[PRE73]'
- en: 'The call to the `items.complete.link` function results in display of the agglomeration
    method used, the manner in which the distance is calculated, and the number of
    objects. The results are as follows:'
  id: totrans-445
  prefs: []
  type: TYPE_NORMAL
  zh: 调用 `items.complete.link` 函数会导致显示所使用的聚合方法、计算距离的方式以及对象的数量。结果如下：
- en: '![Step 3 - training and evaluating model performance](img/image_03_051.jpg)'
  id: totrans-446
  prefs: []
  type: TYPE_IMG
  zh: '![步骤 3 - 训练和评估模型性能](img/image_03_051.jpg)'
- en: Step 4 - plotting the model
  id: totrans-447
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 第 4 步 - 绘制模型
- en: The `plot()` function is a generic function for the plotting R objects. Here,
    the `plot()` function is used to plot the complete linkage dendrogram.
  id: totrans-448
  prefs: []
  type: TYPE_NORMAL
  zh: '`plot()` 函数是 R 对象的通用绘图函数。在这里，`plot()` 函数用于绘制完整链接树状图。'
- en: 'Complete linkage is used for hierarchical clustering, and ensures the distance
    between two clusters is the maximum distance. At each step of the algorithm when
    using complete linkage, two of the nearest clusters are merged together. The process
    is iterated until the entire dataset is merged into a single cluster:'
  id: totrans-449
  prefs: []
  type: TYPE_NORMAL
  zh: 完整链接用于层次聚类，并确保两个簇之间的距离是最大距离。在算法的每个步骤中使用完整链接时，将两个最近的簇合并在一起。这个过程迭代进行，直到整个数据集合并成一个单一的簇：
- en: '[PRE74]'
  id: totrans-450
  prefs: []
  type: TYPE_PRE
  zh: '[PRE74]'
- en: 'The result is as follows:'
  id: totrans-451
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Step 4 - plotting the model](img/image_03_052.jpg)'
  id: totrans-452
  prefs: []
  type: TYPE_IMG
  zh: '![步骤 4 - 绘制模型](img/image_03_052.jpg)'
- en: 'Next, we shall be performing single linkage on the dendrogram. In single linkage
    hierarchical clustering, each step is merged into two clusters based on the smallest
    distance to other objects, or the smallest minimum pairwise distance between the
    clusters:'
  id: totrans-453
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将在树状图上执行单链接。在单链接层次聚类中，每一步都是基于与其他对象的最小距离合并成两个簇，或者簇之间的最小成对距离：
- en: '[PRE75]'
  id: totrans-454
  prefs: []
  type: TYPE_PRE
  zh: '[PRE75]'
- en: 'The call to the `items.sing.link` function results in display of the agglomeration
    method used, the manner in which the distance is calculated, and the number of
    objects. The results are as follows:'
  id: totrans-455
  prefs: []
  type: TYPE_NORMAL
  zh: 调用 `items.sing.link` 函数将显示使用的聚合方法、距离计算方式以及对象数量。结果如下：
- en: '![Step 4 - plotting the model](img/image_03_053.jpg)'
  id: totrans-456
  prefs: []
  type: TYPE_IMG
  zh: '![步骤 4 - 绘制模型](img/image_03_053.jpg)'
- en: 'Here, the `plot()` function is used to plot the complete linkage dendrogram.
    `items.sing.link` is passed as a data frame:'
  id: totrans-457
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，`plot()` 函数用于绘制完整的链接树状图。`items.sing.link` 作为数据框传递：
- en: '[PRE76]'
  id: totrans-458
  prefs: []
  type: TYPE_PRE
  zh: '[PRE76]'
- en: 'The result is as follows:'
  id: totrans-459
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Step 4 - plotting the model](img/image_03_054.jpg)'
  id: totrans-460
  prefs: []
  type: TYPE_IMG
  zh: '![步骤 4 - 绘制模型](img/image_03_054.jpg)'
- en: Step 5 - K-medoids clustering
  id: totrans-461
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 步骤 5 - K-medoids 聚类
- en: 'Loading the `cluster()` library:'
  id: totrans-462
  prefs: []
  type: TYPE_NORMAL
  zh: 加载 `cluster()` 库：
- en: '[PRE77]'
  id: totrans-463
  prefs: []
  type: TYPE_PRE
  zh: '[PRE77]'
- en: In order to calculate the average silhouette width, we write a function.
  id: totrans-464
  prefs: []
  type: TYPE_NORMAL
  zh: 为了计算平均轮廓宽度，我们编写了一个函数。
- en: Silhouette refers to a method for interpreting and validating consistency within clusters
    of data. In order to provide the position of the object in the cluster, the technique
    uses graphical representation. The silhouette range of is between -1 and 1, with
    1 indicating the highest match and -1 indicating the poorest match of the object
    to its own cluster. In a cluster, if most of the objects have a high value, for
    instance closer to 1, the clustering configuration is appropriate.
  id: totrans-465
  prefs: []
  type: TYPE_NORMAL
  zh: 轮廓是指一种用于解释和验证数据簇内一致性的方法。为了提供对象在簇中的位置，该技术使用图形表示。轮廓范围在 -1 到 1 之间，其中 1 表示对象与其自身簇的最高匹配度，-1
    表示对象与其自身簇的最低匹配度。在一个簇中，如果大多数对象具有高值，例如接近 1，则聚类配置是合适的。
- en: '[PRE78]'
  id: totrans-466
  prefs: []
  type: TYPE_PRE
  zh: '[PRE78]'
- en: '`rep()` is a generic function that is used to replicate the values of `my.k.choices`.
    The result is stored in the data frame `avg.sil.width`:'
  id: totrans-467
  prefs: []
  type: TYPE_NORMAL
  zh: '`rep()` 是一个通用函数，用于复制 `my.k.choices` 的值。结果存储在数据框 `avg.sil.width` 中：'
- en: '[PRE79]'
  id: totrans-468
  prefs: []
  type: TYPE_PRE
  zh: '[PRE79]'
- en: '**PAM** stands for **Partitioning Around Medoids**. PAM requires that one be aware
    of the number of clusters desired (like k-means clustering), but it does more
    computation than k-means in order to ensure that the medoids it finds are truly
    representative of the observations within a given cluster.'
  id: totrans-469
  prefs: []
  type: TYPE_NORMAL
  zh: '**PAM** 代表 **基于聚类中心的划分**。PAM 要求用户知道期望的簇数（类似于 k-means 聚类），但它比 k-means 聚类进行更多的计算，以确保找到的聚类中心真正代表给定簇内的观测值。'
- en: '[PRE80]'
  id: totrans-470
  prefs: []
  type: TYPE_PRE
  zh: '[PRE80]'
- en: Printing the value of choices with silhouette values calculated.
  id: totrans-471
  prefs: []
  type: TYPE_NORMAL
  zh: 打印带有轮廓值的选项值。
- en: '[PRE81]'
  id: totrans-472
  prefs: []
  type: TYPE_PRE
  zh: '[PRE81]'
- en: 'The result is as follows:'
  id: totrans-473
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Step 5 - K-medoids clustering](img/image_03_055.jpg)'
  id: totrans-474
  prefs: []
  type: TYPE_IMG
  zh: '![步骤 5 - K-medoids 聚类](img/image_03_055.jpg)'
- en: 'Performing clustering on the basis of 2 clusters:'
  id: totrans-475
  prefs: []
  type: TYPE_NORMAL
  zh: 基于两个簇进行聚类：
- en: '[PRE82]'
  id: totrans-476
  prefs: []
  type: TYPE_PRE
  zh: '[PRE82]'
- en: 'The result is as follows:'
  id: totrans-477
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Step 5 - K-medoids clustering](img/image_03_056.jpg)'
  id: totrans-478
  prefs: []
  type: TYPE_IMG
  zh: '![步骤 5 - K-medoids 聚类](img/image_03_056.jpg)'
- en: 'The `lapply()` function returns a list of the same length as X, each element
    of which is the result of applying `FUN` to the corresponding element of X:'
  id: totrans-479
  prefs: []
  type: TYPE_NORMAL
  zh: '`lapply()` 函数是一个通用函数，用于复制 `my.k.choices` 的值。结果存储在数据框 `avg.sil.width` 中：'
- en: '[PRE83]'
  id: totrans-480
  prefs: []
  type: TYPE_PRE
  zh: '[PRE83]'
- en: 'The result is as follows:'
  id: totrans-481
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Step 5 - K-medoids clustering](img/image_03_057.jpg)'
  id: totrans-482
  prefs: []
  type: TYPE_IMG
  zh: '![步骤 5 - K-medoids 聚类](img/image_03_057.jpg)'
- en: Performing clustering on the basis of 3 clusters.
  id: totrans-483
  prefs: []
  type: TYPE_NORMAL
  zh: 基于三个簇进行聚类。
- en: '[PRE84]'
  id: totrans-484
  prefs: []
  type: TYPE_PRE
  zh: '[PRE84]'
- en: 'The result is as follows:'
  id: totrans-485
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Step 5 - K-medoids clustering](img/image_03_058.jpg)'
  id: totrans-486
  prefs: []
  type: TYPE_IMG
  zh: '![步骤 5 - K-medoids 聚类](img/image_03_058.jpg)'
- en: '[PRE85]'
  id: totrans-487
  prefs: []
  type: TYPE_PRE
  zh: '[PRE85]'
- en: 'The result is as follows:'
  id: totrans-488
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Step 5 - K-medoids clustering](img/image_03_059.jpg)'
  id: totrans-489
  prefs: []
  type: TYPE_IMG
  zh: '![步骤 5 - K-medoids 聚类](img/image_03_059.jpg)'
- en: K-means clustering - European countries protein consumption
  id: totrans-490
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: K-means 聚类 - 欧洲国家蛋白质消耗
- en: A food consumption pattern is of great interest in the field of medicine and
    nutrition. Food consumption is correlated to the overall health of an individual,
    the nutritional value of the food, the economics involved in purchasing a food
    item, and the environment in which it is consumed. This analysis is concerned
    with the relationship between meat and other food items in 25 European countries.
    It is interesting to observe the correlation between meat and other food items.
    The data includes measures of red meat, white meat, eggs, milk, fish, cereals,
    starchy foods, nuts (including pulses and oil-seeds), fruits, and vegetables.
  id: totrans-491
  prefs: []
  type: TYPE_NORMAL
  zh: 在医学和营养学领域，食物消费模式非常有趣。食物消费与个人的整体健康、食物的营养价值、购买食物项涉及的经济以及消费的环境相关。这项分析关注的是 25 个欧洲国家中肉类与其他食物项之间的关系。观察肉类与其他食物项之间的相关性很有趣。数据包括红肉、白肉、鸡蛋、牛奶、鱼类、谷物、淀粉类食物、坚果（包括豆类和油料种子）、水果和蔬菜的测量值。
- en: Getting ready
  id: totrans-492
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备中
- en: In order to perform K-means clustering, we shall be using a dataset collected
    on protein consumption for 25 European countries.
  id: totrans-493
  prefs: []
  type: TYPE_NORMAL
  zh: 为了执行 K-means 聚类，我们将使用收集的 25 个欧洲国家的蛋白质消费数据集。
- en: Step 1 - collecting and describing data
  id: totrans-494
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 步骤 1 - 收集和描述数据
- en: The dataset titled `protein` which is in the CSV format shall be used. The dataset
    is in standard format. There are 25 rows of data and are 10 variables.
  id: totrans-495
  prefs: []
  type: TYPE_NORMAL
  zh: 标题为 `protein` 的数据集，该数据集为 CSV 格式，应被使用。数据集为标准格式。共有 25 行数据，包含 10 个变量。
- en: 'The numeric variables are:'
  id: totrans-496
  prefs: []
  type: TYPE_NORMAL
  zh: 数值变量是：
- en: '`RedMeat`'
  id: totrans-497
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`红肉`'
- en: '`WhiteMeat`'
  id: totrans-498
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`白肉`'
- en: '`Eggs`'
  id: totrans-499
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`鸡蛋`'
- en: '`Milk`'
  id: totrans-500
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`牛奶`'
- en: '`Fish`'
  id: totrans-501
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`鱼类`'
- en: '`Cereals`'
  id: totrans-502
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`谷物`'
- en: '`Starch`'
  id: totrans-503
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`淀粉`'
- en: '`Nuts`'
  id: totrans-504
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`坚果`'
- en: '`Fr&Veg`'
  id: totrans-505
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`水果和蔬菜`'
- en: 'The non-numeric variable is:'
  id: totrans-506
  prefs: []
  type: TYPE_NORMAL
  zh: 非数值变量是：
- en: '`Country`'
  id: totrans-507
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`国家`'
- en: How to do it...
  id: totrans-508
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: Let's get into the details.
  id: totrans-509
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们深入了解。
- en: Step 2 - exploring data
  id: totrans-510
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 步骤 2 - 探索数据
- en: Note
  id: totrans-511
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'Version info: Code for this page was tested in R version 3.2.3 (2015-12-10)'
  id: totrans-512
  prefs: []
  type: TYPE_NORMAL
  zh: 版本信息：本页面的代码在 R 版本 3.2.3（2015-12-10）上进行了测试
- en: 'Let''s explore the data and understand relationships among the variables. We''ll
    begin by importing the CSV file named `protein.csv`. We will be saving the data
    to the `protein` data frame:'
  id: totrans-513
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们探索数据并了解变量之间的关系。我们将从导入名为 `protein.csv` 的 CSV 文件开始。我们将把数据保存到 `protein` 数据框中：
- en: '[PRE86]'
  id: totrans-514
  prefs: []
  type: TYPE_PRE
  zh: '[PRE86]'
- en: The `head()` returns the first or last parts of a vector, matrix, table, data
    frame, or function. The `protein` data frame is passed to the `head()` function.
  id: totrans-515
  prefs: []
  type: TYPE_NORMAL
  zh: '`head()` 返回向量、矩阵、表、数据框或函数的第一部分或最后一部分。将 `protein` 数据框传递给 `head()` 函数。'
- en: '[PRE87]'
  id: totrans-516
  prefs: []
  type: TYPE_PRE
  zh: '[PRE87]'
- en: 'The result is as follows:'
  id: totrans-517
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Step 2 - exploring data](img/image_03_060.jpg)'
  id: totrans-518
  prefs: []
  type: TYPE_IMG
  zh: '![步骤 2 - 探索数据](img/image_03_060.jpg)'
- en: Step 3 - clustering
  id: totrans-519
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 步骤 3 - 聚类
- en: Start clustering on the basis of three clusters.
  id: totrans-520
  prefs: []
  type: TYPE_NORMAL
  zh: 基于三个聚类开始聚类。
- en: 'In order to find a random number of clusters at the initial stage, call the
    `set.seed()` function. The `set.seed()` function results in the generation of
    random numbers:'
  id: totrans-521
  prefs: []
  type: TYPE_NORMAL
  zh: 为了在初始阶段找到随机的聚类数量，调用 `set.seed()` 函数。`set.seed()` 函数的结果是生成随机数：
- en: '[PRE88]'
  id: totrans-522
  prefs: []
  type: TYPE_PRE
  zh: '[PRE88]'
- en: 'The `kmeans()` function shall carry out the K-means clustering on the data
    matrix. The `protein` data matrix is passed as an object that can be coerced to
    a numeric matrix of data. `centers=3` signifies the number of initial (distinct)
    cluster centers. Since, the number of clusters is denoted by a number, `nstart=10`
    defines the number of random sets to be chosen:'
  id: totrans-523
  prefs: []
  type: TYPE_NORMAL
  zh: '`kmeans()` 函数将对数据矩阵执行 K-means 聚类。`protein` 数据矩阵作为可以强制转换为数值矩阵的对象传递。`centers=3`
    表示初始（不同）聚类中心的数量。由于聚类数量用数字表示，`nstart=10` 定义了要选择的随机集的数量：'
- en: '[PRE89]'
  id: totrans-524
  prefs: []
  type: TYPE_PRE
  zh: '[PRE89]'
- en: 'The result is as follows:'
  id: totrans-525
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Step 3 - clustering](img/image_03_061.jpg)'
  id: totrans-526
  prefs: []
  type: TYPE_IMG
  zh: '![步骤 3 - 聚类](img/image_03_061.jpg)'
- en: 'Next, the listing of cluster assignments takes place. The `order()` function returns
    a permutation that rearranges its first argument, produced in ascending or descending
    order. The data frame `groupMeat` is passed as a data frame object:'
  id: totrans-527
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，进行聚类分配的列表。`order()` 函数返回一个排列，它重新排列其第一个参数，以升序或降序排列。将数据框 `groupMeat` 作为数据框对象传递：
- en: '[PRE90]'
  id: totrans-528
  prefs: []
  type: TYPE_PRE
  zh: '[PRE90]'
- en: 'The call to the `data.frame()` function results in displaying the countries
    and the clusters in which they are placed:'
  id: totrans-529
  prefs: []
  type: TYPE_NORMAL
  zh: 调用 `data.frame()` 函数的结果是显示国家和它们所在的聚类：
- en: '[PRE91]'
  id: totrans-530
  prefs: []
  type: TYPE_PRE
  zh: '[PRE91]'
- en: 'The result is as follows:'
  id: totrans-531
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Step 3 - clustering](img/image_03_062.jpg)'
  id: totrans-532
  prefs: []
  type: TYPE_IMG
  zh: '![步骤 3 - 聚类](img/image_03_062.jpg)'
- en: 'The `plot()` function is a generic function for the plotting R objects. The
    argument type signifies the type of plot to be drawn. The `xlim` argument means
    arguments should be given the extremes of the range, not a range. `xlab` and `ylab`
    provide the title for the *x-*axis and *y-*axis respectively:'
  id: totrans-533
  prefs: []
  type: TYPE_NORMAL
  zh: '`plot()`函数是一个通用的绘图R对象函数。参数类型表示要绘制的图类型。`xlim`参数意味着应该给出范围的极限，而不是一个范围。`xlab`和`ylab`分别提供*x-*轴和*y-*轴的标题：'
- en: '[PRE92]'
  id: totrans-534
  prefs: []
  type: TYPE_PRE
  zh: '[PRE92]'
- en: 'The result is as follows:'
  id: totrans-535
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Step 3 - clustering](img/image_03_063.jpg)'
  id: totrans-536
  prefs: []
  type: TYPE_IMG
  zh: '![步骤 3 - 聚类](img/image_03_063.jpg)'
- en: Step 4 - improving the model
  id: totrans-537
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 步骤 4 - 改进模型
- en: Next, clustering on all the nine protein groups takes place and seven clusters
    are created. There is a close significance between the colored scatter-plot for white
    meat against red meat. Countries in close geographic proximity tend to be clustered
    into the same group.
  id: totrans-538
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，对所有九个蛋白质组进行聚类，创建了七个簇。白色肉类与红色肉类的彩色散点图之间存在密切的相关性。地理位置相近的国家往往被聚类到同一个组。
- en: 'The `set.seed()` function results in the generation of random numbers:'
  id: totrans-539
  prefs: []
  type: TYPE_NORMAL
  zh: '`set.seed()`函数会导致随机数的生成：'
- en: '[PRE93]'
  id: totrans-540
  prefs: []
  type: TYPE_PRE
  zh: '[PRE93]'
- en: '`centers=7` signifies the number of initial (distinct) cluster centers:'
  id: totrans-541
  prefs: []
  type: TYPE_NORMAL
  zh: '`centers=7`表示初始（不同）簇中心的数量：'
- en: '[PRE94]'
  id: totrans-542
  prefs: []
  type: TYPE_PRE
  zh: '[PRE94]'
- en: Seven different clusters are formed. Each of the 25 countries is placed in one
    of the clusters.
  id: totrans-543
  prefs: []
  type: TYPE_NORMAL
  zh: 形成了七个不同的簇。25个国家中的每一个都被放置在一个簇中。
- en: 'The result is as follows:'
  id: totrans-544
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Step 4 - improving the model](img/image_03_064.jpg)'
  id: totrans-545
  prefs: []
  type: TYPE_IMG
  zh: '![步骤 4 - 改进模型](img/image_03_064.jpg)'
- en: '[PRE95]'
  id: totrans-546
  prefs: []
  type: TYPE_PRE
  zh: '[PRE95]'
- en: 'The `clustplot()` function creates a bivariate plot that can be visualized
    as a partition (clustering) of the data. All observations are represented by points
    in the plot, using principal components. Around each cluster, an ellipse is drawn.
    The data frame, protein is passed as an object:'
  id: totrans-547
  prefs: []
  type: TYPE_NORMAL
  zh: '`clustplot()`函数创建了一个双变量图，可以将其可视化为数据的分区（聚类）。所有观测值都通过图中的点表示，使用主成分。在每个簇周围画一个椭圆。将数据框`protein`作为对象传递：'
- en: '[PRE96]'
  id: totrans-548
  prefs: []
  type: TYPE_PRE
  zh: '[PRE96]'
- en: 'The result is as follows:'
  id: totrans-549
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Step 4 - improving the model](img/image_03_065.jpg)'
  id: totrans-550
  prefs: []
  type: TYPE_IMG
  zh: '![步骤 4 - 改进模型](img/image_03_065.jpg)'
- en: 'Another approach is to view it in hierarchical form. The `agnes()` function
    is used. By putting `diss=FALSE`, the dissimilarity matrix is used for calculating
    from raw data. `metric="euclidean`" indicates the use of the Euclidean distance
    measure:'
  id: totrans-551
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种方法是将其以层次形式查看。使用`agnes()`函数。通过将`diss=FALSE`，使用原始数据计算距离矩阵。`metric="euclidean"`表示使用欧几里得距离度量：
- en: '[PRE97]'
  id: totrans-552
  prefs: []
  type: TYPE_PRE
  zh: '[PRE97]'
- en: 'The result is as follows:'
  id: totrans-553
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Step 4 - improving the model](img/image_03_066.jpg)'
  id: totrans-554
  prefs: []
  type: TYPE_IMG
  zh: '![步骤 4 - 改进模型](img/image_03_066.jpg)'
- en: '[PRE98]'
  id: totrans-555
  prefs: []
  type: TYPE_PRE
  zh: '[PRE98]'
- en: 'The result is as follows:'
  id: totrans-556
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Step 4 - improving the model](img/image_03_067.jpg)'
  id: totrans-557
  prefs: []
  type: TYPE_IMG
  zh: '![步骤 4 - 改进模型](img/image_03_067.jpg)'
- en: 'The `cutree()` function cuts a tree into several groups by specifying either
    the desired number(s) of groups or the cut height(s):'
  id: totrans-558
  prefs: []
  type: TYPE_NORMAL
  zh: '`cutree()`函数通过指定所需的组数或切割高度将树切割成几个组：'
- en: '[PRE99]'
  id: totrans-559
  prefs: []
  type: TYPE_PRE
  zh: '[PRE99]'
- en: '![Step 4 - improving the model](img/image_03_068.jpg)'
  id: totrans-560
  prefs: []
  type: TYPE_IMG
  zh: '![步骤 4 - 改进模型](img/image_03_068.jpg)'
- en: '[PRE100]'
  id: totrans-561
  prefs: []
  type: TYPE_PRE
  zh: '[PRE100]'
- en: 'The result is as follows:'
  id: totrans-562
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Step 4 - improving the model](img/image_03_069.jpg)'
  id: totrans-563
  prefs: []
  type: TYPE_IMG
  zh: '![步骤 4 - 改进模型](img/image_03_069.jpg)'
- en: K-means clustering - foodstuff
  id: totrans-564
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: K-means聚类 - 食品
- en: Nutrients in the food we consume can be classified by the role they play in
    building body mass. These nutrients can be divided into either macronutrients
    or essential micronutrients. Some examples of macronutrients are carbohydrates,
    protein, and fat while some examples of essential micronutrients are vitamins,
    minerals, and water.
  id: totrans-565
  prefs: []
  type: TYPE_NORMAL
  zh: 我们摄入的食物中的营养素可以根据它们在构建身体质量中的作用进行分类。这些营养素可以分为宏量营养素或必需的微量营养素。宏量营养素的一些例子是碳水化合物、蛋白质和脂肪，而必需的微量营养素的一些例子是维生素、矿物质和水。
- en: Getting ready
  id: totrans-566
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Let's get started with the recipe.
  id: totrans-567
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从食谱开始。
- en: Step 1 - collecting and describing data
  id: totrans-568
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 步骤 1 - 收集和描述数据
- en: 'In order to perform K-means clustering we shall be using a dataset collected
    on various food items and their respective `Energy`, `Protein`, `Fat`, `Calcium`,
    and `Iron` content. The numeric variables are:'
  id: totrans-569
  prefs: []
  type: TYPE_NORMAL
  zh: 为了执行K-means聚类，我们将使用收集的各种食品及其相应的`能量`、`蛋白质`、`脂肪`、`钙`和`铁`含量的数据集。数值变量包括：
- en: '`Energy`'
  id: totrans-570
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`能量`'
- en: '`Protein`'
  id: totrans-571
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`蛋白质`'
- en: '`Fat`'
  id: totrans-572
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`脂肪`'
- en: '`Calcium`'
  id: totrans-573
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`钙`'
- en: '`Iron`'
  id: totrans-574
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`铁`'
- en: 'The non-numeric variable is:'
  id: totrans-575
  prefs: []
  type: TYPE_NORMAL
  zh: 非数值变量是：
- en: '`Food`'
  id: totrans-576
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`食品`'
- en: How to do it...
  id: totrans-577
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: Let's get into the details.
  id: totrans-578
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们深入了解细节。
- en: Step 2 - exploring data
  id: totrans-579
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 步骤 2 - 探索数据
- en: Note
  id: totrans-580
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'Version info: Code for this page was tested in R version 3.2.3 (2015-12-10).'
  id: totrans-581
  prefs: []
  type: TYPE_NORMAL
  zh: 版本信息：本页面的代码在R版本3.2.3（2015-12-10）中进行了测试。
- en: Loading the `cluster()` library.
  id: totrans-582
  prefs: []
  type: TYPE_NORMAL
  zh: 加载`cluster()`库。
- en: '[PRE101]'
  id: totrans-583
  prefs: []
  type: TYPE_PRE
  zh: '[PRE101]'
- en: 'Let''s explore the data and understand relationships among the variables. We''ll
    begin by importing the text file named `foodstuffs.txt`. We will be saving the
    data to the `food.energycontent` data frame:'
  id: totrans-584
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们探索数据并了解变量之间的关系。我们将从导入名为 `foodstuffs.txt` 的文本文件开始。我们将数据保存到 `food.energycontent`
    数据框中：
- en: '[PRE102]'
  id: totrans-585
  prefs: []
  type: TYPE_PRE
  zh: '[PRE102]'
- en: 'The `head()` returns the first or last parts of a vector, matrix, table, data
    frame, or function. The `food.energycontent` data frame is passed to the `head()`
    function:'
  id: totrans-586
  prefs: []
  type: TYPE_NORMAL
  zh: '`head()` 函数返回向量、矩阵、表、数据框或函数的第一部分或最后一部分。`food.energycontent` 数据框传递给 `head()`
    函数：'
- en: '[PRE103]'
  id: totrans-587
  prefs: []
  type: TYPE_PRE
  zh: '[PRE103]'
- en: 'The result is as follows:'
  id: totrans-588
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Step 2 - exploring data](img/image_03_070.jpg)'
  id: totrans-589
  prefs: []
  type: TYPE_IMG
  zh: '![步骤 2 - 探索数据](img/image_03_070.jpg)'
- en: 'The `str()` function returns the provided information on the structure of the
    `food.energycontent` data frame. It compactly displays the internal structure:'
  id: totrans-590
  prefs: []
  type: TYPE_NORMAL
  zh: '`str()` 函数返回有关 `food.energycontent` 数据框结构的提供信息。它紧凑地显示内部结构：'
- en: '[PRE104]'
  id: totrans-591
  prefs: []
  type: TYPE_PRE
  zh: '[PRE104]'
- en: 'The result is as follows:'
  id: totrans-592
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Step 2 - exploring data](img/image_03_071.jpg)'
  id: totrans-593
  prefs: []
  type: TYPE_IMG
  zh: '![步骤 2 - 探索数据](img/image_03_071.jpg)'
- en: Step 3 - transforming data
  id: totrans-594
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 步骤 3 - 转换数据
- en: 'The `apply()` function carries out entry-by-entry changes to data frames and
    matrices. It returns a vector, array, or list of values obtained by applying a
    function to margins of an array or matrix. 2 indicates column subscripts the function
    will be applied over. `sd` is for standard deviation function, which is to be
    applied on the data frame:'
  id: totrans-595
  prefs: []
  type: TYPE_NORMAL
  zh: '`apply()` 函数对数据框和矩阵进行逐项更改。它返回一个向量、数组或列表，该列表是通过将函数应用于数组的边缘或矩阵的边缘而获得的值。2 表示函数将应用到的列子索引。`sd`
    是标准差函数，它将应用于数据框：'
- en: '[PRE105]'
  id: totrans-596
  prefs: []
  type: TYPE_PRE
  zh: '[PRE105]'
- en: 'The result is as follows:'
  id: totrans-597
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Step 3 - transforming data](img/image_03_072.jpg)'
  id: totrans-598
  prefs: []
  type: TYPE_IMG
  zh: '![步骤 3 - 转换数据](img/image_03_072.jpg)'
- en: 'The `sweep()` function returns an array obtained from an input array by sweeping
    out a summary statistic. `food.energycontent[,-1]` is passed as an array. 2 indicates
    column subscripts which the function will be applied over. `standard.deviation`
    is the summary statistic which is to be swept out:'
  id: totrans-599
  prefs: []
  type: TYPE_NORMAL
  zh: '`sweep()` 函数返回一个从输入数组中通过清除汇总统计量获得的数组。`food.energycontent[,-1]` 作为数组传递。2 表示函数将应用到的列子索引。`standard.deviation`
    是要清除的汇总统计量：'
- en: '[PRE106]'
  id: totrans-600
  prefs: []
  type: TYPE_PRE
  zh: '[PRE106]'
- en: 'The result is as follows:'
  id: totrans-601
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Step 3 - transforming data](img/image_03_073.jpg)'
  id: totrans-602
  prefs: []
  type: TYPE_IMG
  zh: '![步骤 3 - 转换数据](img/image_03_073.jpg)'
- en: Step 4 - clustering
  id: totrans-603
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 步骤 4 - 聚类
- en: 'The `kmeans()` function shall carry out K-means clustering on the data matrix.
    The data matrix `foodergycnt.stddev` is passed as an object that can be coerced
    to the numeric matrix of data. `centers=5` signifies the number of initial (distinct)
    cluster centers. `iter.max=100` means the maximum number of iterations allowed.
    Since the number of clusters is denoted by a number, `nstart=25` defines the number
    of random sets to be chosen:'
  id: totrans-604
  prefs: []
  type: TYPE_NORMAL
  zh: '`kmeans()` 函数应在数据矩阵上执行 K-means 聚类。数据矩阵 `foodergycnt.stddev` 作为可以强制转换为数据数值矩阵的对象传递。`centers=5`
    表示初始（不同）聚类中心的数量。`iter.max=100` 表示允许的最大迭代次数。由于聚类数量用数字表示，`nstart=25` 定义了要选择的随机集的数量：'
- en: '[PRE107]'
  id: totrans-605
  prefs: []
  type: TYPE_PRE
  zh: '[PRE107]'
- en: 'The result is as follows:'
  id: totrans-606
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Step 4 - clustering](img/image_03_074.jpg)'
  id: totrans-607
  prefs: []
  type: TYPE_IMG
  zh: '![步骤 4 - 聚类](img/image_03_074.jpg)'
- en: '[PRE108]'
  id: totrans-608
  prefs: []
  type: TYPE_PRE
  zh: '[PRE108]'
- en: 'The result is as follows:'
  id: totrans-609
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Step 4 - clustering](img/image_03_075.jpg)'
  id: totrans-610
  prefs: []
  type: TYPE_IMG
  zh: '![步骤 4 - 聚类](img/image_03_075.jpg)'
- en: 'Printing the clustering vector for the 4-cluster solution:'
  id: totrans-611
  prefs: []
  type: TYPE_NORMAL
  zh: 打印 4 聚类解决方案的聚类向量：
- en: '[PRE109]'
  id: totrans-612
  prefs: []
  type: TYPE_PRE
  zh: '[PRE109]'
- en: 'The result is as follows:'
  id: totrans-613
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Step 4 - clustering](img/image_03_076.jpg)'
  id: totrans-614
  prefs: []
  type: TYPE_IMG
  zh: '![步骤 4 - 聚类](img/image_03_076.jpg)'
- en: Next, we shall be printing the clusters for the 4-cluster solution in terms
    of food labels.
  id: totrans-615
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将按食品标签打印 4 聚类解决方案的聚类。
- en: 'The `lapply()` function returns a list of the same length as X:'
  id: totrans-616
  prefs: []
  type: TYPE_NORMAL
  zh: '`lapply()` 函数返回一个与 X 长度相同的列表：'
- en: '[PRE110]'
  id: totrans-617
  prefs: []
  type: TYPE_PRE
  zh: '[PRE110]'
- en: 'The result is as follows:'
  id: totrans-618
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Step 4 - clustering](img/image_03_077.jpg)'
  id: totrans-619
  prefs: []
  type: TYPE_IMG
  zh: '![步骤 4 - 聚类](img/image_03_077.jpg)'
- en: Step 5 - visualizing the clusters
  id: totrans-620
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 步骤 5 - 可视化聚类
- en: Using the `pairs()` function, a matrix of scatterplots is produced. `food.energycontent[,-1]`
    provides the coordinates of points given as numeric columns of a matrix or data
    frame.
  id: totrans-621
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `pairs()` 函数，生成一个散点图矩阵。`food.energycontent[,-1]` 提供了作为矩阵或数据框的数值列的点坐标。
- en: '[PRE111]'
  id: totrans-622
  prefs: []
  type: TYPE_PRE
  zh: '[PRE111]'
- en: 'The result is as follows:'
  id: totrans-623
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Step 5 - visualizing the clusters](img/image_03_078.jpg)'
  id: totrans-624
  prefs: []
  type: TYPE_IMG
  zh: '![步骤 5 - 可视化聚类](img/image_03_078.jpg)'
- en: 'The `princomp()`function performs a principal components analysis on the given
    numeric data matrix. The function produces an unrotated principal component analysis.
    `cor=T` signifies a logical value indicating that the calculation should use the
    correlation matrix:'
  id: totrans-625
  prefs: []
  type: TYPE_NORMAL
  zh: '`princomp()`函数对给定的数值数据矩阵执行主成分分析。该函数产生一个未旋转的主成分分析。`cor=T`表示一个逻辑值，指示计算应使用相关矩阵：'
- en: '[PRE112]'
  id: totrans-626
  prefs: []
  type: TYPE_PRE
  zh: '[PRE112]'
- en: 'The `par()` function combines multiple plots into one overall graph. `s` generates
    a square plotting region:'
  id: totrans-627
  prefs: []
  type: TYPE_NORMAL
  zh: '`par()`函数将多个图表组合成一个整体图形。`s`生成一个正方形绘图区域：'
- en: '[PRE113]'
  id: totrans-628
  prefs: []
  type: TYPE_PRE
  zh: '[PRE113]'
- en: 'Plotting the cluster:'
  id: totrans-629
  prefs: []
  type: TYPE_NORMAL
  zh: 绘制聚类图：
- en: '[PRE114]'
  id: totrans-630
  prefs: []
  type: TYPE_PRE
  zh: '[PRE114]'
- en: 'The result is as follows:'
  id: totrans-631
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Step 5 - visualizing the clusters](img/image_03_079.jpg)'
  id: totrans-632
  prefs: []
  type: TYPE_IMG
  zh: '![第5步 - 可视化聚类](img/image_03_079.jpg)'
