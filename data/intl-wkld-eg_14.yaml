- en: '*Chapter 10*: Reviewing the Solution with AWS Well-Architected Framework'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第10章*：使用 AWS Well-Architected Framework 审查解决方案'
- en: You now have the skills required to create edge **machine learning** (**ML**)
    solutions. This chapter acts as both a summary of the key lessons that have been
    learned throughout this book and follows through on why they are best practices
    by reviewing the delivered solution. By reviewing the solution, we can see how
    the Home Base Solutions prototype hub design holds up and where there are further
    opportunities to improve it. You will learn what it is like to perform a deep
    analysis of the solution using the **AWS Well-Architected Framework**, a mechanism
    that was created for reviewing complex solutions. Finally, we'll leave you with
    suggested next steps for your journey as a practitioner of delivering intelligent
    workloads to the edge.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 您现在拥有了创建边缘**机器学习**（**ML**）解决方案所需的技能。本章既是本书所学关键课程的总结，也是通过回顾提供的解决方案来证明它们是最佳实践的依据。通过回顾解决方案，我们可以看到
    Home Base Solutions 原型中心设计如何保持稳定，以及进一步改进的机会在哪里。您将了解如何使用**AWS Well-Architected
    Framework**对解决方案进行深入分析，这是一个为审查复杂解决方案而创建的机制。最后，我们将为您提供作为边缘智能工作负载交付实践者的旅程中建议的下一步行动。
- en: 'In this chapter, we''re going to cover the following main topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主要主题：
- en: Summarizing the key lessons
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 总结关键课程
- en: Describing the AWS Well-Architected Framework
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 描述 AWS Well-Architected Framework
- en: Reviewing the solution
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 审查解决方案
- en: Diving deeper into AWS services
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 深入了解 AWS 服务
- en: Summarizing the key lessons
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结关键课程
- en: In this section, we will group and summarize the key lessons from throughout
    this book as a quick reference to ensure that the most important lessons were
    not missed. There is a loose chronology to the groupings based on the material
    from *Chapters 1 to 9*, but some lessons may appear in a group outside the order
    in which they appeared in this book.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将对本书中的关键课程进行分组和总结，作为快速参考，以确保不会错过最重要的课程。这些分组基于从*第1章到第9章*的材料，有一个大致的时间顺序，但某些课程可能出现在它们在本书中出现的顺序之外的组中。
- en: Defining edge ML solutions
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 定义边缘机器学习解决方案
- en: 'The following key lessons capture the definition, value proposition, and shape
    of an edge ML solution:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 以下关键课程捕捉了边缘机器学习解决方案的定义、价值主张和形态：
- en: '**Definition of an edge ML solution**: Bringing intelligent workloads to the
    edge means applying ML technology that''s been incorporated into cyber-physical
    solutions that interoperate the analog and digital spaces. An edge ML solution
    uses devices that have sufficient compute power to run ML workloads and either
    directly interface with physical components such as sensors and actuators, or
    indirectly interface with end devices over a local network or serial protocol.'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**边缘机器学习解决方案的定义**：将智能工作负载带到边缘意味着应用已融入网络物理解决方案的机器学习技术，这些解决方案可以交互模拟和数字空间。边缘机器学习解决方案使用具有足够计算能力来运行机器学习工作负载的设备，可以直接与物理组件（如传感器和执行器）接口，或者通过本地网络或串行协议间接与终端设备接口。'
- en: '**Key benefits for ML at the edge**: The four key benefits of bringing intelligent
    workloads to the edge are reducing the latency of reacting to a measured event,
    improving the solution''s availability by reducing its runtime dependency on a
    remote network entity such as a server, reducing the cost of operations by reducing
    the quantity of data to transmit over the WAN, and enabling compliance with data
    governance policies by handling protected data exclusively at the edge.'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**边缘机器学习的关键益处**：将智能工作负载带到边缘的四个关键益处是减少对测量事件的反应延迟、通过减少对远程网络实体（如服务器）的运行时依赖来提高解决方案的可用性、通过减少在广域网中传输的数据量来降低运营成本，以及通过仅在边缘处理受保护数据来符合数据治理政策。'
- en: '**Tools for edge ML solutions**: The three tools that are needed to operate
    intelligent workloads at the edge are a runtime for orchestrating your edge software,
    a ML library and ML model, and a mechanism for exchanging data bi-directionally
    throughout the edge and with remote services.'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**边缘机器学习解决方案的工具**：在边缘运行智能工作负载所需的三个工具是用于编排您的边缘软件的运行时、机器学习库和机器学习模型，以及在整个边缘和远程服务之间双向交换数据的机制。'
- en: '**Decoupled, isolated services**: Design your edge ML solutions using principles
    from the service-oriented architecture to deliver a cohesive whole made up of
    isolated services that use decoupling mechanisms to interact. Code that''s been
    designed with a singular purpose is easier to write, test, reuse, and maintain.
    The code that acquires measurements from a sensor does not need to know how to
    directly invoke a ML inference service. The inference service does not need to
    know how to emit results directly to a connected actuator. The degree of isolation
    and separation of concerns to achieve is a spectrum and a balancing act for architects
    to consider trade-offs.'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**解耦、隔离的服务**：使用面向服务的架构的原则来设计您的边缘机器学习解决方案，以提供由隔离服务组成的整体，这些服务使用解耦机制进行交互。具有单一目的设计的代码更容易编写、测试、重用和维护。从传感器获取测量值的代码不需要知道如何直接调用机器学习推理服务。推理服务也不需要知道如何直接将结果发送到连接的执行器。要达到的隔离和关注点分离的程度是一个范围，也是架构师需要考虑权衡的问题。'
- en: '**Don''t re-engineer solved problems**: Use proven, trusted technologies to
    solve implementation details that aren''t core to the business problems that are
    solved by your edge ML solution. For example, don''t create a new messaging protocol
    or data storage layer unless none already satisfy your business requirements.'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**不要重新设计已解决的问题**：使用经过验证、值得信赖的技术来解决边缘机器学习解决方案解决的业务问题中不是核心的实现细节。例如，除非没有其他协议或数据存储层能满足您的业务需求，否则不要创建新的消息协议或数据存储层。'
- en: '**Common edge topologies**: Four topologies that are common in building edge
    solutions are **star**, **bus**, **tree**, and **hybrid**. The star topology describes
    how leaf devices interact with a hub or gateway device that tends to run any ML
    workloads. The bus topology describes how isolated services can interact with
    each other using decoupling mechanisms. The tree topology describes how a fleet
    of edge solutions can be managed from a central service. The hybrid topology describes
    the general shape of any macro-level architecture of edge solutions interacting
    with cloud services.'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**常见的边缘拓扑**：在构建边缘解决方案中常见的四种拓扑是 **星型**、**总线型**、**树型** 和 **混合型**。星型拓扑描述了叶设备如何与一个通常运行任何机器学习工作负载的枢纽或网关设备交互。总线型拓扑描述了隔离服务如何使用解耦机制相互交互。树型拓扑描述了如何从中心服务管理边缘解决方案的舰队。混合型拓扑描述了任何与云服务交互的宏观级别架构的一般形状。'
- en: Using IoT Greengrass
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 IoT Greengrass
- en: 'The following key lessons summarize the definition of **AWS IoT Greengrass**
    and the best practices for using it to deliver edge ML solutions:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 以下关键经验总结了对 **AWS IoT Greengrass** 的定义以及使用它来提供边缘机器学习解决方案的最佳实践：
- en: '**What is Greengrass?** AWS IoT Greengrass is a runtime orchestration tool
    designed for delivering intelligent workloads to the edge by solving many of the
    implementation details common to IoT and ML solutions, enabling architects to
    focus on rapidly delivering business objectives. Greengrass supports a service-oriented
    architecture by letting developers define components that run independently and
    optionally interact with the wider solution by using decoupled mechanisms such
    as interprocess communication channels, streams, files, or message queues. Greengrass
    natively interacts with AWS services to deliver common functionality that architects
    would otherwise need to solve for, such as deploying software, fetching resources,
    and transmitting data to the cloud.'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**什么是 Greengrass？** AWS IoT Greengrass 是一个运行时编排工具，旨在通过解决物联网和机器学习解决方案中常见的许多实现细节，将智能工作负载交付到边缘，使架构师能够快速交付业务目标。Greengrass
    通过允许开发者定义独立运行并可选择通过解耦机制（如进程间通信通道、流、文件或消息队列）与更广泛解决方案交互的组件，支持面向服务的架构。Greengrass
    与 AWS 服务原生交互，以提供架构师通常需要解决的常见功能，例如部署软件、获取资源以及将数据传输到云。'
- en: '**Building with components**: Greengrass defines units of functionality as
    **components**, which are recipes for bundling static resources such as artifacts,
    configuration, dependencies, and runtime behavior. Developers can run any kind
    of code as a component, be it a shell script, interpreted code, a compiled binary,
    an AWS Lambda function, or a container such as Docker.'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**使用组件构建**：Greengrass 将功能单元定义为 **组件**，这些组件是打包静态资源（如工件、配置、依赖项和运行时行为）的配方。开发者可以将任何类型的代码作为组件运行，无论是shell脚本、解释型代码、编译后的二进制文件、AWS
    Lambda 函数，还是像Docker这样的容器。'
- en: '**Deploying components to the edge**: Components can be deployed locally during
    development cycles using the Greengrass CLI on a test device. For production use,
    components are registered in the AWS IoT Greengrass service and deployed remotely
    as part of a rollout to one or more grouped devices. A **deployment** defines
    a set of components to include the version of the component in and optionally
    any configuration to apply to those components at the time of deployment. A device
    can belong to multiple groups and will aggregate all the current deployments of
    the groups that it belongs to.'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**将组件部署到边缘**：在开发周期中，可以使用测试设备上的 Greengrass CLI 本地部署组件。对于生产使用，组件在 AWS IoT Greengrass
    服务中注册，并作为向一个或多个分组设备推出的部分远程部署。**部署**定义了一组组件，包括组件的版本，并在部署时可选地应用任何配置。一个设备可以属于多个组，并将聚合它所属的所有组的当前部署。'
- en: '**Security model between the edge and the cloud**: The security model between
    a Greengrass device and AWS services uses a combination of asymmetric cryptography,
    roles, and policies. Greengrass identifies itself to AWS IoT services using a
    private key and certificate registered with AWS IoT Core. This certificate is
    attached to an IoT policy that grants permissions, such as connecting and exchanging
    messages. The device can request temporary AWS credentials from the **AWS IoT
    Core** credentials provider service to identify itself with other AWS services.
    This works by specifying an **AWS Identity and Access Management** role that has
    policies attached to it to grant permissions to other AWS services. Before you
    add another AWS service interaction to your Greengrass solution, you need to attach
    a new policy or update an attached policy to include the appropriate permission
    for that API.'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**边缘和云之间的安全模型**：Greengrass 设备与 AWS 服务之间的安全模型使用非对称加密、角色和策略的组合。Greengrass 使用与
    AWS IoT Core 注册的私钥和证书向 AWS IoT 服务进行身份验证。此证书附加到一个 IoT 策略，该策略授予连接和交换消息等权限。设备可以从
    **AWS IoT Core** 凭证提供者服务请求临时 AWS 凭证以使用其他 AWS 服务进行身份验证。这是通过指定一个附加了策略的 **AWS 身份和访问管理**
    角色来实现的，该策略授予其他 AWS 服务权限。在将另一个 AWS 服务交互添加到你的 Greengrass 解决方案之前，你需要附加一个新策略或更新附加策略，以包括该
    API 的适当权限。'
- en: '**Accelerate building with managed components**: Use AWS-managed components
    to solve requirements when applicable. These components solve common requirements
    such as interacting with AWS services, deploying a local MQTT broker to connect
    to local devices, synchronizing device state between the edge and the cloud, and
    running ML workloads.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**使用托管组件加速构建**：当适用时，使用 AWS 托管组件来解决需求。这些组件解决常见需求，例如与 AWS 服务交互、部署本地 MQTT 代理以连接到本地设备、在边缘和云之间同步设备状态以及运行机器学习工作负载。'
- en: Modeling data and ML workloads
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 模型数据和机器学习工作负载
- en: 'The following key lessons summarize the techniques and patterns you should
    consider when breaking down a problem into modeled data and the ML workloads that
    you use in your edge ML solutions:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 以下关键课程总结了在将问题分解为模型数据和你在边缘机器学习解决方案中使用的机器学习工作负载时应该考虑的技术和模式：
- en: '**Types of structured data**: Data that''s acquired at the edge can be classified
    into three types: **structured** (a well-defined schema), **semi-structured**
    (a schema with some variance in terms of used keys), and **unstructured data**
    (a schema with high variance or no schema). All three kinds of data can be evaluated
    by ML workloads, but the training methods and algorithms may differ for each.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**结构化数据类型**：在边缘获取的数据可以分为三种类型：**结构化**（一个定义良好的模式）、**半结构化**（一个在使用的键方面有一些差异的模式）和**非结构化数据**（一个具有高方差或没有模式的模式）。所有三种类型的数据都可以由机器学习工作负载进行评估，但每种的训练方法和算法可能不同。'
- en: '**Analyze data to select implementation choices**: Use data modeling techniques
    to break down a high-level problem from the conceptual model, to a logical model,
    to a physical model to inform implementation decisions when choosing technologies
    for collecting, storing, and accessing data. Analyze your data''s size, shape,
    velocity, and consistency requirements to inform implementation decisions when
    choosing data storage technologies.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分析数据以选择实现选择**：使用数据建模技术将高级问题从概念模型分解为逻辑模型，再到物理模型，以在为收集、存储和访问数据选择技术时提供实施决策的信息。分析你数据的大小、形状、速度和一致性要求，以在为选择数据存储技术时提供实施决策的信息。'
- en: '**Common data flow patterns**: Some of the common data flow patterns that can
    be used in an edge ML architecture are **extract, transform, load** (**ETL**),
    **event-driven** (**streaming**), **micro-batch processing**, and **Lambda architecture**
    (**parallel hot**/**cold paths**). Avoid anti-patterns for edge architecture such
    as complex event detection, batch processing, data replication, and data archiving.
    These patterns are best implemented at layers in your topologies, such as a data
    center or cloud services.'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**常见的数据流模式**：在边缘机器学习架构中可以使用的常见数据流模式包括**提取、转换、加载**（**ETL**）、**事件驱动**（**流式处理**）、**微批处理**和**Lambda架构**（**并行热**/**冷路径**）。避免边缘架构的反模式，如复杂事件检测、批处理、数据复制和数据归档。这些模式最好在拓扑层的各个层级中实现，例如数据中心或云服务。'
- en: '**Domain-driven design**: Consider the 10 principles of domain-driven design
    to best organize your data: manage data ownership through domains, define domains
    using bounded contexts, link a bounded context to application workloads, share
    the ubiquitous language within the bounded context, preserve the original sourced
    data, associate the data with metadata, use the right tool for the right job,
    tier your data storage, secure and govern the data pipeline, and design for scale.'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**领域驱动设计**：考虑领域驱动设计的10个原则，以最佳方式组织您的数据：通过领域管理数据所有权，使用边界上下文定义领域，将边界上下文与应用工作负载链接，在边界上下文中共享通用语言，保留原始来源数据，将数据与元数据关联，为不同的任务使用合适的工具，分层存储数据，确保并管理数据管道，以及为可扩展性设计。'
- en: '**The three laws of edge workloads**: Keep data workloads at the edge (instead
    of the cloud) when you must observe the three laws. The **law of physics** means
    that the latency between the edge and the cloud has limits, and sometimes your
    workload requirements cannot tolerate this latency. The **law of economics** means
    it may be cost-prohibitive to move all your data to the cloud. The **law of the
    land** means that there are data governance and compliance requirements that necessitate
    that some data remains at the edge.'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**边缘工作负载的三大定律**：在必须遵守三大定律时，将数据工作负载保持在边缘（而不是云中）。**物理定律**意味着边缘和云之间的延迟有限，有时您的工作负载需求无法容忍这种延迟。**经济定律**意味着将所有数据移动到云中可能成本过高。**法律定律**意味着存在数据治理和合规要求，需要某些数据保持在边缘。'
- en: '**Types of ML training algorithms**: ML models can be trained with one of three
    patterns: **supervised** (the training data is labeled by a human), **unsupervised**
    (the training data is unlabelled; the machine finds patterns or conclusions on
    its own), or **semi-supervised** (a mix of labeled and unlabelled data). Training
    a model to mimic the work of a human expert, such as classifying objects in an
    image, typically means using a supervised or semi-supervised pattern. Training
    a model to find relationships between data typically means using an unsupervised
    pattern.'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**机器学习训练算法的类型**：机器学习模型可以使用三种模式之一进行训练：**监督学习**（训练数据由人类标记），**无监督学习**（训练数据未标记；机器自行发现模式或结论），或**半监督学习**（标记数据和未标记数据的混合）。训练一个模型来模仿人类专家的工作，例如在图像中分类对象，通常意味着使用监督或半监督模式。训练一个模型来发现数据之间的关系通常意味着使用无监督模式。'
- en: '**Iterating the data-to-model life cycle**: Use the **Cross-Industry Standard
    Process for Data Mining** (**CRISP-DM**) to iterate your ML workloads, from understanding
    your data to preparing it for training, to evaluating model performance, and then
    deploying models to the edge.'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**迭代数据到模型的生命周期**：使用**跨行业标准数据挖掘流程**（**CRISP-DM**）迭代您的机器学习工作负载，从理解您的数据到为训练做准备，到评估模型性能，然后部署模型到边缘。'
- en: '**Use ML appropriately**: Not every problem can or should be solved with ML.
    Small datasets or data with low signal-to-noise ratios tend not to train useful
    models. Simple requirements (such as needing a one-off prediction) can be solved
    with conventional data analysis, querying, and regression techniques.'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**适当地使用机器学习**：并非所有问题都可以或应该用机器学习来解决。小数据集或信噪比较低的数据往往无法训练出有用的模型。简单的需求（例如需要一次性的预测）可以用传统的数据分析、查询和回归技术来解决。'
- en: '**Value of the cloud in training models**: Use the scale of the cloud to train
    models efficiently and on sufficiently large datasets. Once your models are performing
    well in the evaluation phase, use model optimization to compress the model so
    that it has high efficiency and a small footprint on the target hardware platform
    running your edge ML solution. Continue to test and evaluate the performance of
    your compressed model on the device and after any retraining events.'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**云在训练模型中的价值**：使用云的规模来高效地训练模型并在足够大的数据集上进行训练。一旦您的模型在评估阶段表现良好，请使用模型优化来压缩模型，使其在运行您的边缘ML解决方案的目标硬件平台上具有高效率和小的占用空间。继续在设备上测试和评估压缩模型的性能，并在任何重新训练事件之后。'
- en: '**ML needs a team**: A single technical resource can push all the buttons needed
    to gather data, train a model, and deploy it to the edge, but the process of training
    an effective model is multi-faceted. Training effective models and deploying them
    to the edge requires experts from multiple domains to reach a successful outcome.
    It''s okay that one person can''t do it all.'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**机器学习需要一个团队**：单个技术资源可以推动所有必要的按钮来收集数据、训练模型并将其部署到边缘，但训练一个有效模型的过程是多方面的。训练有效模型并将其部署到边缘需要来自多个领域的专家才能达到成功的成果。一个人无法完成所有事情是可以接受的。'
- en: Operating a production solution
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 操作生产解决方案
- en: 'The following key lessons summarize important distinctions in the production
    version of your solution and how to operate the solution at scale:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 以下关键课程总结了您解决方案生产版本中的重要区别以及如何大规模操作解决方案：
- en: '**DevOps is cultural**: **Developer operations** (**DevOps**) is not just about
    new technology and tools. It represents a cultural shift in how organizations
    promote ownership, collaboration, and cohesiveness across teams to foster innovation.
    The DevOps paradigm yields benefits to the software delivery life cycle of edge
    ML solutions, in addition to traditional software development.'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**DevOps是文化的**：**开发者操作**（**DevOps**）不仅仅是关于新技术和工具。它代表了组织在促进团队所有权、协作和凝聚力方面的文化转变，以促进创新。DevOps范式为边缘ML解决方案的软件交付生命周期带来了好处，除了传统的软件开发之外。'
- en: '**Use managed components for monitoring**: Use components provided by AWS to
    store logs and metrics in your **Amazon CloudWatch** account. This will help your
    team operate a fleet of devices by diagnosing issues remotely through the logs
    and monitoring for unhealthy devices with alarms on the metrics.'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**使用托管组件进行监控**：使用AWS提供的组件将日志和指标存储在您的**Amazon CloudWatch**账户中。这将帮助您的团队通过日志远程诊断问题，并通过指标上的警报监控不健康的设备，从而操作设备车队。'
- en: '**IaC is valuable for the edge, too**: Store and deploy your solution as **Infrastructure
    as Code** (**IaC**) resources where possible. This makes it easier to maintain
    your solution''s definition and reliably reproduce results across deployments.'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**IaC对边缘也很有价值**：尽可能将您的解决方案存储和部署为**基础设施即代码**（**IaC**）资源。这使得维护解决方案的定义并可靠地在部署之间重现结果变得更加容易。'
- en: '**Your device life cycle begins with manufacturing**: Providing identities
    to devices and defining their provisioning processes has implications for your
    device''s supply chain. Provisioning a test device on your desk is easy. Creating
    a provisioning pipeline for a production fleet is much more challenging. Communicate
    the requirements early with your **supply chain vendors**, **original equipment
    manufacturers** (**OEMs**), and **original device manufacturers** (**ODMs**).'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**您的设备生命周期始于制造**：为设备提供身份并定义其配置过程会影响您的设备供应链。在您的办公桌上配置测试设备很容易。为生产车队创建配置管道则更具挑战性。尽早与您的**供应链供应商**、**原始设备制造商**（**OEM**）和**原始设备制造商**（**ODM**）沟通需求。'
- en: '**Ship code in virtualized environments**: Your software components can be
    defined as scripts, source code, binaries, and anything in between. Prefer to
    ship your code in virtualized environments such as Docker and AWS Lambda where
    possible to deliver more predictability for runtime operations at the edge.'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**在虚拟化环境中发布代码**：您的软件组件可以定义为脚本、源代码、二进制文件以及介于两者之间的任何内容。尽可能在Docker和AWS Lambda等虚拟化环境中发布您的代码，以在边缘的运行时操作中提供更多可预测性。'
- en: '**MLOps is circular**: Much like the CRISP-DM model for solving problems with
    data science, the pattern of building and operating ML models is circular. MLOps
    with models deployed to the edge can be extra challenging as devices are often
    remote, offline, or exposed to unpredictable elements. Design MLOps into your
    product life cycle early to lean into good habits. Adding it later is only harder.'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**MLOps是循环的**：与用于解决数据科学问题的CRISP-DM模型类似，构建和运营ML模型的模式是循环的。将MLOps部署到边缘的模型可能会更加具有挑战性，因为设备通常是远程的、离线的或暴露在不可预测的元素中。尽早将MLOps设计到您的产品生命周期中，以养成良好的习惯。稍后添加它会更困难。'
- en: '**Deployments can be expensive**: Services such as AWS IoT Greengrass make
    it easy to deploy software to the edge, but the cost of transmitting data must
    be considered. Many edge solutions are at the end of expensive network connections
    where you cannot afford to incrementally push models over and over again or fix
    broken deployments. Set up your DevOps and MLOps pipelines so that you have the
    highest confidence in your deployments before they go out to the production fleet.'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**部署可能很昂贵**：如AWS IoT Greengrass等服务使部署软件到边缘变得容易，但必须考虑数据传输的成本。许多边缘解决方案位于昂贵的网络连接的末端，您无法负担得起反复增量推送模型或修复损坏的部署。设置您的DevOps和MLOps管道，以便在它们推向生产编队之前，您对部署有最高的信心。'
- en: '**Scale the provisioning process**: **Certificate authorities** (**CAs**) let
    you define your device''s identity with unique certificates. Use your own CA,
    one from a trusted vendor, or the one provided by AWS to scale up the identities
    of your device fleets. Use automated provisioning strategies such as **Just-in-Time**
    (**JIT**) provisioning to onboard devices as they connect to your service for
    the first time.'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**扩展配置过程**：**证书颁发机构**（**CAs**）允许您使用独特的证书定义您的设备身份。使用您自己的CA、来自受信任供应商的CA或AWS提供的CA来扩展您的设备编队的身份。使用如**即时**（**JIT**）配置等自动化配置策略，在设备首次连接到您的服务时将设备上线。'
- en: '**Operators need to scale, too**: Scaled production fleets of devices can mean
    managing thousands to millions of devices. Use tooling that simplifies how to
    operate that many entities by focusing on outliers and high severity issues. This
    means you need a solution that captures and indexes this kind of operational data.
    You also need a solution that makes it easy to dive deep into a single device
    or apply a fix to a large selection of impacted devices at a time.'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**操作员也需要扩展**：扩展的生产设备编队可能意味着管理数千到数百万台设备。使用工具简化操作这么多实体的方式，关注异常和高严重性问题。这意味着您需要一个能够捕获和索引此类运营数据的解决方案。您还需要一个解决方案，使其能够轻松深入单个设备或一次性对大量受影响的设备应用修复。'
- en: In the next section, you will learn about a framework provided by AWS for evaluating
    design trade-offs when building solutions on the platform.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，您将了解AWS为在平台上构建解决方案时评估设计权衡提供的框架。
- en: Describing the AWS Well-Architected Framework
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 描述AWS好架构框架
- en: In 2015, **AWS** launched a framework for guiding developers through the process
    of making good design decisions when building on AWS. The AWS Well-Architected
    Framework codifies the best practices for defining, deploying, and operating workloads
    on the AWS cloud. It exists as a whitepaper of best practices and a web-based
    tool to approach a solution evaluation as a checklist of considerations and suggested
    mitigation strategies. This expertise aims to serve AWS customers but is delivered
    in a format that is generally useful for evaluating any kind of digital workload.
    We will use this framework to retroactively review this book's solution of the
    Home Base Solutions appliance monitoring product.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 2015年，**AWS**推出了一项框架，指导开发者在AWS上构建时做出良好的设计决策。AWS好架构框架将定义、部署和运营AWS云上工作负载的最佳实践编码化。它作为一个最佳实践白皮书和基于网络的工具存在，将解决方案评估作为一个考虑事项清单和建议缓解策略的清单。这种专业知识旨在服务于AWS客户，但以一种对评估任何类型的数字工作负载都普遍有用的格式提供。我们将使用这个框架来回顾性地审查这本书的Home
    Base Solutions设备监控产品的解决方案。
- en: 'The Well-Architected Framework organizes best practices into five pillars.
    A **pillar** is a section of the framework that aggregates design principles and
    guiding questions to resolve under a common purpose. The five pillars are as follows:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 好架构框架将最佳实践组织成五个支柱。**支柱**是框架的一部分，它汇集了设计原则和指导性问题，以共同目标为基础进行解决。五个支柱如下：
- en: '**Operational excellence**'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**运营卓越**'
- en: '**Security**'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**安全性**'
- en: '**Reliability**'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可靠性**'
- en: '**Performance efficiency**'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**性能效率**'
- en: '**Cost optimization**'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**成本优化**'
- en: You may recognize some of these pillars as the key benefits we used to define
    the value proposition of edge ML solutions in [*Chapter 1*](B17595_01_Final_SS_ePub.xhtml#_idTextAnchor013),
    *Introduction to the Data-Driven Edge with Machine Learning*! Each pillar includes
    a narrative and a set of questions to evaluate and consider. The questions that
    the architect does not have a clear response or existing mitigation strategy for
    are then used to define the gap between how well the solution is architected now
    and where it needs to be. For example, if the review helps us identify a single
    point of failure in our architecture, then we would decide between the acceptability
    of that risk in our solution or whether to refactor with a failover mechanism.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能会认出这些柱子是我们用来定义边缘机器学习解决方案价值主张的关键好处，在[*第一章*](B17595_01_Final_SS_ePub.xhtml#_idTextAnchor013)，*数据驱动边缘机器学习简介*中提到！每个柱子都包含一个叙述和一组评估和考虑的问题。对于架构师没有明确回答或现有缓解策略的问题，用于定义解决方案当前架构的完善程度和需要达到的地方之间的差距。例如，如果审查帮助我们确定我们的架构中存在一个单点故障，那么我们会决定在我们解决方案中接受该风险的可行性，或者是否使用故障转移机制进行重构。
- en: It's important to understand that when you're answering the framework's questions
    to review your solution, there are no objectively right or wrong answers. The
    overall posture of your solution is not a quantifiable outcome of completing a
    review. The process you use to answer individual questions may identify important
    refactors or highlight gaps in the original design. It's up to your team's *definition
    of done* to decide how complete or thorough your answers must be and how many
    questions are resolved, in the sense that your team is satisfied with the due
    diligence that's been performed. A lazy or superficial review may not lead to
    any meaningful change. As the criticality of the solution increases, the amount
    of rigor in your review may scale proportionally or even non-linearly.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 重要的是要理解，当您回答框架的问题以审查您的解决方案时，没有客观上是正确或错误的答案。您解决方案的整体状态不是完成审查的可量化结果。您用于回答单个问题的过程可能会确定重要的重构或突出原始设计中的差距。您的团队*完成定义*决定您的答案必须多么完整或彻底，以及有多少问题得到解决，即您的团队对已进行的尽职调查感到满意。懒惰或肤浅的审查可能不会导致任何有意义的改变。随着解决方案的重要性增加，审查的严谨程度可能成比例或甚至非线性地增加。
- en: In your application of the framework, you may find value in moving pillar by
    pillar, answering each question in series, or by crafting a subset of prioritized
    questions as a cross-section of all the pillars. It is also recommended and more
    common to review the framework between the steps of designing the solution and
    implementing it. This helps architects prevent failures and raise the security
    posture before investing time and resources in building the solution. For this
    book, we elected to save the review for the end to move quickly into the hands-on
    projects, recognizing that we are practicing in a safe, prototype environment.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在您应用框架的过程中，您可能会发现按柱子逐个移动、连续回答每个问题，或者创建一个所有柱子的优先问题子集作为横截面是有价值的。还建议在设计和实施解决方案的步骤之间审查框架，这是更常见的方法。这有助于架构师在投入时间和资源构建解决方案之前防止失败并提高安全性。对于这本书，我们选择将审查留到结尾，以便快速进入实践项目，认识到我们在一个安全、原型环境中进行实践。
- en: The AWS Well-Architected Framework also includes extensions that are referred
    to as **lenses**. A lens is a collection of additional best practices related
    to a particular domain or type of solution, such as a SaaS application or an IoT
    solution. These lenses help architects within their domains to critically analyze
    their solutions, though the guidance within doesn't broadly apply to all kinds
    of solutions, such as the main body of the framework. Our review in this chapter
    will use a mix of framework questions between the main body and the IoT Lens.
    Links to both resources are included in this chapter's *References* section. In
    the next section, we will review our solution using a subset of the questions
    posed by the AWS Well-Architected Framework.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: AWS 架构良好框架还包括被称为**透镜**的扩展。透镜是一系列与特定领域或解决方案类型相关的额外最佳实践，例如SaaS应用或物联网解决方案。这些透镜帮助架构师在其领域内批判性地分析其解决方案，尽管其中的指导并不广泛适用于所有类型的解决方案，如框架的主体。在本章中，我们的审查将结合框架主体和物联网透镜之间的问题。这两个资源的链接都包含在本章的*参考文献*部分。在下一节中，我们将使用AWS架构良好框架提出的问题子集来审查我们的解决方案。
- en: Reviewing the solution
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 审查解决方案
- en: Before we perform a solution review, let's restate the problem, revisit the
    target solution, and reflect on what was built in this book. This will help us
    refresh our memory and contextualize the solution review using the Well-Architected
    Framework.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们进行解决方案审查之前，让我们重申问题，回顾目标解决方案，并反思在这本书中构建的内容。这将帮助我们刷新我们的记忆，并使用Well-Architected框架来具体化解决方案审查。
- en: Reflecting upon the solution
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 反思解决方案
- en: 'Our fictional narrative had us working at Home Base Solutions as the IoT architect
    responsible for designing a new home appliance monitoring product. This product
    was a combination of a hub device that connects to consumers'' home networks and
    interacts with paired appliance monitoring kits. These kits are attached to consumers''
    large appliances, such as furnaces or washing machines, and send telemetry data
    to the hub device. The hub device processes telemetry data, streams it to the
    cloud to train ML models, and hosts local inference workloads using new telemetry
    and the deployed models. The following diagram shows how these entities are related
    in consumers'' homes:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的虚构叙述中，我们作为Home Base Solutions的物联网架构师，负责设计一款新的家用电器监控产品。该产品结合了一个连接消费者家庭网络并与配对的监控套件交互的枢纽设备。这些套件附着在消费者的大型家用电器上，如锅炉或洗衣机，并将遥测数据发送到枢纽设备。枢纽设备处理遥测数据，将其流式传输到云端以训练机器学习模型，并使用新的遥测数据和部署的模型在本地执行推理工作负载。以下图表显示了这些实体在消费者家庭中的相互关系：
- en: '![Figure 10.1 – Reviewing the HBS smart hub product''s design'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '![图10.1 – 检查HBS智能中心产品设计'
- en: '](img/B17595_10_01.jpg)'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17595_10_01.jpg)'
- en: Figure 10.1 – Reviewing the HBS smart hub product's design
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.1 – 检查HBS智能中心产品设计
- en: Our target solution was to prototype the hub device on a **Raspberry Pi** to
    collect telemetry data and run the ML workloads, all while using a **SenseHAT**
    expansion module to collect sensor data and signal results visually to the LED
    matrix. We used **AWS IoT Greengrass** to deploy a runtime environment to the
    hub device that could install and run our code as components. These components
    encapsulated our business logic to collect sensor telemetry, route data through
    the edge and cloud, fetch resources from the cloud, and run our ML inference workloads.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的目标解决方案是在**树莓派**上原型化枢纽设备以收集遥测数据并运行机器学习工作负载，同时使用**SenseHAT**扩展模块收集传感器数据并将信号结果以视觉方式显示到LED矩阵。我们使用**AWS
    IoT Greengrass**将运行时环境部署到枢纽设备，以便作为组件安装和运行我们的代码。这些组件封装了我们的业务逻辑，用于收集传感器遥测数据，通过边缘和云路由数据，从云中获取资源，并运行我们的机器学习推理工作负载。
- en: 'We used **Amazon SageMaker** to train a new ML model in the cloud using the
    sensor telemetry that was acquired by the hub device and streamed it to the cloud
    as training data. This ML model was deployed to the edge to intelligently assess
    the health of our monitored appliance and signal to the consumer if any anomalous
    behavior is detected. Finally, we planned how to scale up our solution to a fleet
    of hub devices, their monitoring kits, and ML models, and how to operate this
    fleet in a production environment. The following diagram reviews our solution
    architecture:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用**Amazon SageMaker**在云中训练一个新的机器学习模型，该模型使用由枢纽设备获取并作为训练数据流式传输到云端的传感器遥测数据。该机器学习模型被部署到边缘，以智能地评估我们监控的设备健康状况，并在检测到任何异常行为时向消费者发出信号。最后，我们计划如何将我们的解决方案扩展到一组枢纽设备、它们的监控套件和机器学习模型，以及如何在生产环境中运营这个车队。以下图表回顾了我们的解决方案架构：
- en: '![Figure 10.2 – The original solution architecture diagram from Chapter 1,
    Introduction to the Data-Driven Edge with Machine Learning](img/B17595_10_02.jpg)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![图10.2 – 第1章“数据驱动边缘机器学习简介”中的原始解决方案架构图](img/B17595_10_02.jpg)'
- en: Figure 10.2 – The original solution architecture diagram from [*Chapter 1*](B17595_01_Final_SS_ePub.xhtml#_idTextAnchor013)*,
    Introduction to the Data-Driven Edge with Machine Learning*
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.2 – 第1章[*“数据驱动边缘机器学习简介”*](B17595_01_Final_SS_ePub.xhtml#_idTextAnchor013)中的原始解决方案架构图
- en: With this brief review of our business objective and solution architecture to
    set the context, let's apply the AWS Well-Architected Framework to analyze our
    solution.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 在简要回顾我们的业务目标和解决方案架构以设定背景后，让我们应用AWS Well-Architected框架来分析我们的解决方案。
- en: Applying the framework
  id: totrans-72
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 应用框架
- en: The format we will use for the Well-Architected review is to state a question
    from the framework and then respond with an answer in the role of the HBS IoT
    architect. As a reminder, highlights from the framework were selected from the
    base material and the IoT Lens to drive interesting analysis for this chapter.
    There are more best practices to consider in the complete body of the framework.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将用于架构良好审查的格式是先从框架中提出一个问题，然后以HBS物联网架构师的身份回答。提醒一下，框架中的亮点是从基础材料和物联网透镜中选出的，以推动本章有趣的案例分析。框架中还有更多最佳实践需要考虑。
- en: Note
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The following sections pull in questions from the AWS Well-Architected Framework
    and the IoT Lens extension. Questions labeled as *OPS 4*, for example, indicate
    that they are from the *Well-Architected Framework*. A question labeled as *IOTOPS
    4* indicates it is from the *IoT Lens extension*. This distinction is not relevant
    for this chapter but it identifies which source material the question was copied
    from.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 以下部分从AWS架构良好框架和物联网透镜扩展中提取问题。例如，标记为*OPS 4*的问题表示它们来自*架构良好框架*。标记为*IOTOPS 4*的问题表示它来自*物联网透镜扩展*。这种区别对本章不相关，但它确定了问题是从哪个原始材料中复制的。
- en: Operational excellence
  id: totrans-76
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 运营卓越
- en: 'The **operational excellence** pillar reinforces thinking about how we operate
    the live solution. It organizes its guidance into four sub-areas: **organization**,
    **preparation**, **operation**, and **evolution**. This pillar stresses the importance
    of an organization''s work culture and mechanisms for anticipating the inevitability
    of failure, reducing the influence of human error, and learning from mistakes.
    Now, let''s review a selection of the questions from this pillar and some sample
    responses we might see as output from the architect.'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '**运营卓越**支柱强化了对我们如何操作实时解决方案的思考。它将其指导分为四个子领域：**组织**、**准备**、**运营**和**演进**。这个支柱强调了组织工作文化的重要性，以及预测失败不可避免性的机制、减少人为错误的影响和从错误中学习的重要性。现在，让我们回顾这个支柱的一些问题以及我们可能会从架构师那里看到的样本回答。'
- en: OPS 4, OPS 8, and OPS 9 – How do you design your workload so that you can understand
    its state? How do you understand the health of your workload? How do you understand
    the health of your operations?
  id: totrans-78
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: OPS 4、OPS 8和OPS 9 – 你如何设计你的工作负载，以便你可以理解其状态？你如何理解工作负载的健康状况？你如何理解运营的健康状况？
- en: We will summarize a response to these three related questions from the operational
    excellence pillar. In this context, the workload means anything related to meeting
    our business objectives, such as informing customers of their failing appliances.
    This is different than operations, which refers to anything related to the technical
    implementation we use to operate the workload, such as the deployment mechanisms
    or tools we use to notify our team of the impact.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将总结对这三个相关问题的回答，这些问题来自运营卓越支柱。在这个背景下，工作负载意味着与满足我们的业务目标相关的一切，例如通知客户他们的设备故障。这与运营不同，运营指的是与技术实施相关的一切，例如我们用来通知团队工作负载影响的部署机制或工具。
- en: We have designed each level of our workload to report some kind of health state.
    Our workload can be defined at three levels, each with mechanisms for reporting
    its state so that we can automate monitoring and alerting. These three levels
    are the fleet of devices, the components running on a hub device, and the cloud
    pipeline of training ML models. At the fleet level, hub devices report the health
    of their deployments and connectivity status to the cloud with services such as
    AWS IoT Greengrass and Amazon CloudWatch. We can use services such as **AWS IoT
    Device Management** to monitor for devices in unhealthy states and take action
    against them. The components that are running on devices are monitored by the
    IoT Greengrass core software, and logs for each component can be shipped to the
    cloud for automated analysis. The ML training pipeline reports metrics on training
    accuracy so that we can measure the overall state of meeting our business objectives.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经设计了工作负载的每个级别，以便报告某种健康状态。我们的工作负载可以在三个级别上进行定义，每个级别都有报告其状态的机制，以便我们可以自动化监控和警报。这三个级别是设备编队、运行在网关设备上的组件以及训练机器学习模型的云管道。在编队级别，网关设备通过
    AWS IoT Greengrass 和 Amazon CloudWatch 等服务报告其部署的健康状况和与云的连接状态。我们可以使用 **AWS IoT
    设备管理** 等服务来监控不健康状态的设备，并对它们采取行动。运行在设备上的组件由 IoT Greengrass 核心软件进行监控，每个组件的日志可以发送到云中进行自动化分析。机器学习训练管道报告训练准确性的指标，以便我们可以衡量满足业务目标的整体状态。
- en: We will implement threshold alarms on critical failures, such as devices failing
    deployments and appliance monitoring kits losing connection to their hub devices.
    These enable us to proactively mitigate failures before they impact our customers,
    or reach out to customers to inform them of actions they can take to restore local
    operations.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在关键故障（如设备部署失败和监控套件与网关设备断开连接）上实施阈值警报。这使我们能够在故障影响我们的客户或客户需要采取行动以恢复本地操作之前，主动减轻故障。
- en: OPS 5 and OPS 6 – How do you reduce defects, ease remediation, and improve the
    flow into production? How do you mitigate deployment risks?
  id: totrans-82
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: OPS 5 和 OPS 6 – 如何减少缺陷、简化修复并提高生产流程的流畅度？如何减轻部署风险？
- en: To reduce defects and mitigate deployment risks, we must include a physical
    copy of each target hardware profile running our solution in our testing and deployment
    pipeline. These devices will be the first to receive new deployments through Greengrass
    by specifying them as a separate group in AWS IoT Core. We can configure our CI/CD
    pipeline to create new deployments for that group and wait for these deployments
    to be reported as successful before advancing the deployment to the first wave
    of production devices.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 为了减少缺陷和减轻部署风险，我们必须在我们的测试和部署流程中包含运行我们解决方案的每个目标硬件配置的物理副本。这些设备将是首先通过 Greengrass
    接收新部署的，通过在 AWS IoT Core 中将它们指定为单独的组来实现。我们可以配置我们的 CI/CD 流水线为该组创建新的部署，并在这些部署报告为成功之前，将部署推进到第一波生产设备。
- en: We get some out-of-the-box remediation value from Greengrass anyway because,
    by default, it will roll back failed deployments to the previous state. This helps
    minimize the downtime of production devices and instantly signals to our team
    that something is wrong with the deployment. Greengrass can also stop the fleet
    of grouped devices from being deployed if a certain portion of them fail their
    deployment activity.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 无论如何，Greengrass 都会为我们提供一些即插即用的修复价值，因为默认情况下，它将回滚失败的部署到之前的状态。这有助于最小化生产设备的停机时间，并立即向我们的团队发出部署出现问题的信号。如果其中一部分设备在部署活动中失败，Greengrass
    还可以停止部署分组设备。
- en: IOTOPS 3 – How are you ensuring that newly provisioned devices have the required
    operational prerequisites?
  id: totrans-85
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: IOTOPS 3 – 你是如何确保新配置的设备具备所需的操作先决条件的？
- en: In our solution of using Greengrass, we know what the documented minimum requirements
    are for running the Greengrass software. We used the **IoT Device Tester** software
    to validate that our target hardware platform is compatible with Greengrass's
    requirements and can connect to the AWS service. We should use the IoT Device
    Tester software to validate any future hardware platforms that we want to use
    as HBS hub devices.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们使用 Greengrass 的解决方案中，我们了解运行 Greengrass 软件的文档化最低要求。我们使用了 **IoT 设备测试器** 软件来验证我们的目标硬件平台符合
    Greengrass 的要求，并且可以连接到 AWS 服务。我们应该使用 IoT 设备测试器软件来验证我们想要用作 HBS 网关设备的任何未来硬件平台。
- en: We should also calculate the necessary additional resources that are consumed
    by all of our components. For example, if we know that all of our total static
    resources will consume 1 GB on disk, we know we need at least that much, plus
    room for storing logs, temporary resources, and so on. Once we have calculated
    the minimum requirements for our solution, we can add a custom test to IoT Device
    Tester that can validate that each new hardware target is ready to run our solution.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还应该计算所有组件消耗的必要额外资源。例如，如果我们知道所有总静态资源将在磁盘上消耗1 GB，我们知道我们需要至少这么多，再加上存储日志、临时资源等的空间。一旦我们计算了解决方案的最小需求，我们就可以向IoT设备测试器添加一个自定义测试，以验证每个新的硬件目标是否准备好运行我们的解决方案。
- en: Security
  id: totrans-88
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 安全
- en: 'The security pillar reinforces thinking about how to maintain or raise your
    workload''s security posture, such as protecting access to data and systems. It
    organizes best practices into the following sub-areas: Identity and Access Management,
    detection, infrastructure protection, data protection, and incident response.
    This pillar stresses clearly defining the resources and actors in your workload,
    the boundaries and access patterns between them, and the mechanisms for enforcing
    those boundaries.'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 安全支柱强化了对如何维护或提高工作负载安全态势的思考，例如保护对数据和系统的访问。它将最佳实践组织成以下子领域：身份和访问管理、检测、基础设施保护、数据保护和事件响应。该支柱明确强调了定义工作负载中的资源和参与者、它们之间的边界和访问模式，以及强制执行这些边界的机制。
- en: SEC 2 and SEC 3 – How do you manage identities for people and machines? How
    do you manage permissions for people and machines?
  id: totrans-90
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: SEC 2和SEC 3 – 你如何管理人和机器的身份？你如何管理人和机器的权限？
- en: The identities and permissions for people are managed by AWS Identity Access
    and Management. Our customers will log into their management app using federated
    identities from OAuth providers such as Google or Facebook or create new usernames
    directly with us using **Amazon Cognito**. We will tie Cognito identities to the
    devices they own and interact with using policies.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 人的身份和权限由AWS身份访问管理（IAM）管理。我们的客户将使用来自OAuth提供者（如Google或Facebook）的联合身份登录到他们的管理应用，或者直接使用**Amazon
    Cognito**创建新的用户名。我们将使用策略将Cognito身份与其拥有的设备和交互的设备绑定。
- en: Identities and permissions for devices are managed by a combination of AWS IAM
    and AWS IoT Core. The device-to-cloud identity uses an X.509 private key and certificate
    registered with AWS IoT Core to establish MQTT connections. This can be used to
    exchange a certificate for temporary AWS credentials. These temporary AWS credentials
    are tied to an IAM role that has policies attached to it to determine what the
    credentials are allowed to do with various AWS services. By using unique private
    keys on each device, the identity of a device cannot be spoofed by a malicious
    actor.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 设备的身份和权限由AWS IAM和AWS IoT Core的组合管理。设备到云的身份使用与AWS IoT Core注册的X.509私钥和证书来建立MQTT连接。这可以用来交换证书以获取临时的AWS凭证。这些临时AWS凭证与一个附加了策略的IAM角色绑定，以确定凭证可以与各种AWS服务做什么。通过在每个设备上使用唯一的私钥，恶意行为者无法伪造设备身份。
- en: IOTSEC 10 – How do you classify, manage, and protect your data in transit and
    at rest?
  id: totrans-93
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: IOTSEC 10 – 你如何对传输中和静止状态下的数据进行分类、管理和保护？
- en: At the edge, we can classify data as either runtime data that is derived from
    sensors or used to deliver business outcomes or operational data that comes from
    software and system logs. In our current design, we do not handle runtime and
    operational data any differently in terms of management or protection. Here, we
    have the opportunity to better safeguard any potential customer privacy data,
    such as video feeds from connected cameras.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 在边缘，我们可以将数据分类为运行时数据，这些数据来自传感器或用于实现业务成果，或者操作数据，这些数据来自软件和系统日志。在我们的当前设计中，我们在管理或保护方面对运行时数据和操作数据没有进行任何不同的处理。在这里，我们有更好的机会保护任何潜在的客户隐私数据，例如来自连接摄像头的视频流。
- en: At the edge, any data that's in transit between the components of the Greengrass
    solution is not encrypted. We use the permissions model of Greengrass's components
    and interprocess communication (IPC) to protect access to data that's published
    over IPC. Data in transit between leaf devices and the Greengrass device using
    MQTT is encrypted over the network using the private key and certificate with
    mutual TLS.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 在边缘，Greengrass解决方案组件之间的任何传输中的数据都没有加密。我们使用Greengrass组件的权限模型和进程间通信（IPC）来保护通过IPC发布的数据的访问权限。使用MQTT在叶子设备和Greengrass设备之间传输的数据在网络中使用私钥和证书以及相互TLS进行加密。
- en: At the edge, data at rest is not encrypted and instead relies on the permissions
    of the Unix filesystem to protect access to data. We must ensure we use proper
    user and group configurations to protect access to data at rest. Here, we have
    the opportunity to put a validation mechanism in place to alert us if new system
    users or groups are created or modified. To perform security threat analysis each
    time, we must add a new component to the solution to check whether it has the
    proper security in place for data access.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 在边缘，静态数据没有加密，而是依赖于Unix文件系统的权限来保护对数据的访问。我们必须确保我们使用适当的用户和组配置来保护静态数据的访问。在这里，我们有建立验证机制的机会，以在创建或修改新的系统用户或组时提醒我们。为了每次进行安全威胁分析，我们必须向解决方案中添加一个新的组件，以检查它是否为数据访问提供了适当的安全措施。
- en: From the edge to the cloud, we should use mutual TLS to encrypt MQTT traffic
    in transit and Amazon Signature Version 4 to encrypt any other traffic that's
    exchanged with AWS APIs with the temporary credentials. Data at rest that's stored
    in AWS services uses the encryption policies of each service. For example, data
    stored in Amazon Simple Storage Service (S3) can use server-side encryption with
    AWS-managed encryption keys.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 从边缘到云，我们应该使用相互TLS来加密传输中的MQTT流量，并使用Amazon Signature Version 4来加密与AWS API交换的任何其他流量，使用临时凭据。存储在AWS服务中的静态数据使用每个服务的加密策略。例如，存储在Amazon
    Simple Storage Service (S3)中的数据可以使用AWS管理的加密密钥进行服务器端加密。
- en: IOTSEC 11 – How do you prepare to respond to an incident that impacts a single
    device or a fleet of devices?
  id: totrans-98
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: IOTSEC 11 – 你如何准备应对影响单个设备或设备群的突发事件？
- en: Our operations team has alarms set on the operational health metrics of the
    fleet of devices. For example, if a device fails a deployment, the operations
    team will receive an incident ticket as a notification from the alarm. If a group
    of devices fails a deployment, we will page our operations team for immediate
    triaging.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的运营团队在设备群的运行健康指标上设置了警报。例如，如果一个设备部署失败，运营团队将收到警报的通知。如果一组设备部署失败，我们将立即呼叫我们的运营团队进行分类处理。
- en: We will author a series of runbooks for anticipated failure events for our operations
    team to follow as a first response. The first step will be to define the minimum
    set of runbooks needed before we are comfortable with the first wave of production
    devices.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将为我们的运营团队编写一系列针对预期故障事件的运行手册，以便作为第一响应。第一步将是定义在感到对第一波生产设备满意之前所需的运行手册的最小集合。
- en: IOTSEC 8 – How are you planning the security life cycle of your IoT devices?
  id: totrans-101
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: IOTSEC 8 – 你是如何规划你的物联网设备的安全生命周期的？
- en: We will work with our **ODM** to document the security life cycle from the supply
    chain of parts, through assembly and delivery to our warehouse for inclusion in
    the retail packaging. It is important to us that parts such as the central processor,
    volatile and non-volatile memory, and the **Trusted Platform Module** (**TPM**),
    which houses the private key, are authentic and haven't been tampered with before
    they are assembled into our product.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将与我们的**ODM**合作，从零部件的供应链开始，通过组装和交付到我们的仓库，以包括在零售包装中，来记录安全生命周期。对我们来说，重要的是像中央处理器、易失性和非易失性内存以及存放私钥的**可信平台模块**（**TPM**）这样的部件在组装到我们的产品之前是真实的，并且没有被篡改。
- en: All TPMs provided by the ODM for our devices will be associated with a CA that
    we will register in AWS IoT Core. We will pre-provision each device in the cloud
    so that the devices can simply connect using their protected credentials and not
    require any JIT registration process.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 我们设备中由ODM提供的所有TPM都将与我们在AWS IoT Core中注册的CA相关联。我们将在云中预先配置每个设备，以便设备可以简单地使用其受保护的凭据进行连接，而不需要任何即时注册过程。
- en: Should we identify any device as having a compromised identity, we will assess
    whether a certificate rotation activity is a sufficient mitigation. If not, we
    will revoke its certificate in AWS IoT Core to prevent it from exchanging further
    data and proactively reach out to the customer to start an exchange process.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们识别出任何设备存在身份受损的情况，我们将评估证书轮换活动是否是足够的缓解措施。如果不是，我们将撤销其在AWS IoT Core中的证书，以防止其进一步交换数据，并主动联系客户开始交换流程。
- en: Reliability
  id: totrans-105
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 可靠性
- en: 'The reliability pillar reinforces that a workload should continue to operate
    as it was designed and when it is expected to. It organizes best practices into
    the following sub-areas: foundations, workload architecture, change management,
    and failure management. This pillar stresses concepts such as failover and healing
    mechanisms in response to failures, testing recovery scenarios, and monitoring
    for availability during steady-state operations and after deploying a change.'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 可靠性支柱强调工作负载应继续按照其设计的方式运行，并在预期的时间运行。它将最佳实践组织到以下子领域：基础、工作负载架构、变更管理和故障管理。该支柱强调诸如故障转移和恢复机制等概念，以应对故障，测试恢复场景，并在稳态操作期间以及部署变更后监控可用性。
- en: REL 3 – How do you design your workload service architecture?
  id: totrans-107
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: REL 3 – 你如何设计你的工作负载服务架构？
- en: We have designed our workload service architecture using a service-oriented
    architecture and implemented the principles of isolated, decoupled services. We
    use this architecture to make it easier to design, author, test, and ship code,
    as well as to minimize the impact that an isolated service experiencing faults
    will have on the solution. We codify this architecture design using the mechanisms
    defined by the core Greengrass software and its components.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用面向服务的架构设计了我们的工作负载服务架构，并实现了隔离、解耦服务的原则。我们使用这种架构来简化设计、编写、测试和发布代码，以及最小化孤立服务出现故障对解决方案的影响。我们使用核心Greengrass软件及其组件定义的机制来规范化这种架构设计。
- en: REL 8 – How do you implement change?
  id: totrans-109
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: REL 8 – 你如何实施变更？
- en: For our edge solution, we use versioned components to incrementally update the
    software running on our devices through Greengrass deployments. We deploy changes
    on test devices before rolling those changes out to production devices. Deployments
    that fail on a device will be automatically rolled back. Deployments that fail
    to 10% of a fleet will roll back the entire deployment to that fleet.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我们的边缘解决方案，我们通过Greengrass部署使用版本化组件来逐步更新设备上运行的软件。我们在测试设备上部署更改之前，会将这些更改部署到生产设备上。在设备上失败的部署将自动回滚。如果整个机队的10%部署失败，则将整个部署回滚到该机队。
- en: For our cloud solutions, we use CloudFormation templates and stacks to provision
    cloud resources and make changes to them. We do not make any changes to the production
    infrastructure not authored through IaC mechanisms. These changes must be reviewed
    by a peer on the team before they can be deployed. We can use CloudWatch Metrics
    and Logs for our provisioned resources to monitor for any unhealthy statuses and
    roll back CloudFormation changes in the event of operational impact.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我们的云解决方案，我们使用CloudFormation模板和堆栈来配置云资源并对其进行更改。我们不通过IaC机制编写的生产基础设施进行任何更改。这些更改在部署之前必须由团队中的同事进行审查。我们可以使用CloudWatch度量指标和日志来监控我们配置的资源，以检测任何不健康的状态，并在运营影响的情况下回滚CloudFormation更改。
- en: IOTREL 3 – How do you handle device reliability when communicating with the
    cloud?
  id: totrans-112
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: IOTREL 3 – 在与云通信时，你如何处理设备可靠性？
- en: Our edge ML solutions are designed to operate independently from the cloud.
    Some features are impacted during periods of network instability, such as publishing
    failure events to the cloud for customer push notifications to their mobile app.
    Events, telemetry data, and logs that are destined for the cloud are buffered
    locally and will eventually get to the cloud once network instability has been
    resolved. Data that is published to the cloud but does not get an acknowledgment
    of this will be retried, such as with an MQTT quality of service set to an *at
    least once* level of service.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 我们设计的边缘机器学习解决方案旨在独立于云运行。在网络不稳定期间，某些功能会受到 影响，例如将失败事件发布到云中，以便向客户的移动应用推送通知。预定发送到云的事件、遥测数据和日志将在本地缓冲，并在网络不稳定问题解决后最终到达云中。已发布到云但未收到确认的数据将重试，例如，使用MQTT服务质量设置为*至少一次*的服务级别。
- en: When the cloud is trying to communicate with devices, such as when a new deployment
    is ready to be fetched, we use durable services such as Greengrass, which keep
    track of devices that are offline and haven't completed a pending deployment activity
    yet.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 当云尝试与设备通信时，例如当新的部署准备就绪等待获取时，我们使用持久化服务，如 Greengrass，这些服务会跟踪离线且尚未完成待定部署活动的设备。
- en: REL 11 and IOTREL 6 – How do you design your workload to withstand component
    failures? How do you verify different levels of hardware failure modes for your
    physical assets?
  id: totrans-115
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: REL 11 和 IOTREL 6 – 你如何设计你的工作负载以承受组件故障？你如何验证你物理资产的不同硬件故障模式？
- en: (In this case, *component failure* does not mean Greengrass components specifically.)
    Here, we use a service-oriented architecture to withstand component failures so
    that any of our custom services should be able to fail without bringing down the
    entire solution. For example, if the component that reads measurements from the
    temperature sensor fails, the hub device and edge solution will still be operational,
    albeit with less accuracy when it comes to detecting appliance anomalies.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: （在这种情况下，“组件故障”并不特指 Greengrass 组件。）在这里，我们使用面向服务的架构来承受组件故障，以便我们的任何自定义服务都应该能够在不使整个解决方案崩溃的情况下失败。例如，如果读取温度传感器的组件失败，中心设备边缘解决方案仍然可以运行，尽管在检测设备异常时的准确性会降低。
- en: There are some components provided by Greengrass that, if failing, could impact
    multiple outcomes in our solution, such as the IPC messaging bus. If components
    such as these fail, our custom components will not be able to publish new messages,
    and receiving components would stop getting new messages to work with. We should
    update our custom component code, which publishes messages, so that it can buffer
    messages where we cannot afford to drop messages while IPC is unavailable. We
    should also study the behavior of Greengrass and its ability to self-recover when
    a provided function such as IPC is impacted.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: Greengrass 提供的一些组件，如果失败，可能会影响我们解决方案的多个结果，例如 IPC 消息总线。如果这些组件失败，我们的自定义组件将无法发布新消息，接收组件将停止接收新消息以进行处理。我们应该更新发布消息的自定义组件代码，以便在
    IPC 不可用的情况下能够缓冲消息，我们还应研究 Greengrass 的行为及其在提供的功能（如 IPC）受到影响时的自我恢复能力。
- en: If any of our cyber-physical hardware interfaces fail, such as a sensor no longer
    being able to be read, we would stop seeing values being published over IPC and
    get error messages in the corresponding software component that uses the sensor.
    We may be able to triage events like these remotely using uploaded logs. If any
    of our compute, memory, disk, or network hardware components fail, the entire
    solution will likely be disabled and require on-premises triaging or the device
    being exchanged through our customer support program.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们的任何网络物理硬件接口失败，例如传感器不再能够被读取，我们就不会再看到通过 IPC 发布的值，并在使用传感器的相应软件组件中收到错误消息。我们可能能够通过上传的日志远程对这些事件进行分类。如果我们的计算、内存、磁盘或网络硬件组件失败，整个解决方案可能会被禁用，需要本地分类或通过我们的客户支持计划更换设备。
- en: Performance efficiency
  id: totrans-119
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 性能效率
- en: 'The performance efficiency pillar reinforces that we strike a balance between
    consumed resources and the available budget and that we continue to seek out efficiency
    gains as technology evolves. It organizes best practices into the following sub-areas:
    selection, review, monitoring, and tradeoffs. This pillar stresses delegating
    complex tasks for solved problems, planning for data to be at the right place
    at the right time, and reducing how much infrastructure your team must manage.'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 性能效率支柱强调我们在消耗的资源与可用预算之间取得平衡，并且随着技术的发展，我们继续寻求效率提升。它将最佳实践组织到以下子领域：选择、审查、监控和权衡。此支柱强调将复杂任务委托给已解决的问题，规划数据在正确的时间出现在正确的位置，并减少你的团队必须管理的基础设施数量。
- en: PERF 2 – How do you select your compute solution?
  id: totrans-121
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: PERF 2 – 你如何选择你的计算解决方案？
- en: Concerning our ML model training needs, we will initially select compute instances
    on AWS based on our default settings and evaluate whether there are more cost-effective
    instance profiles to use in our training life cycle through trial and error. Since
    ML is a differentiator for our consumer product, we want to enable the ML model
    on our customers' devices within an appropriate **service-level agreement** (**SLA**),
    such as within one business day after accumulating enough training data to produce
    an accurate model. As we ramp up our production fleet, we may find value in batching
    training jobs to maximize the utilization of provisioned compute instances.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 关于我们机器学习模型训练的需求，我们最初将在AWS上根据默认设置选择计算实例，并通过试错法评估是否还有更经济的实例配置可供我们在训练生命周期中使用。由于机器学习是我们消费者产品的差异化优势，我们希望在客户设备上通过适当的服务级别协议（**SLA**），例如在积累足够训练数据以生成准确模型后的一个工作日内，启用机器学习模型。随着我们生产规模的扩大，我们可能会发现批量处理训练作业以最大化利用已分配的计算实例是有价值的。
- en: Concerning our target device hardware at the edge, we will measure the performance
    of our full production workload on the prototype device, such as a Raspberry Pi,
    and iterate toward a production hardware profile based on the overall utilization
    of the compute device. We want to leave some buffer room in the total utilization
    in case we deploy new workloads to devices as a future upgrade.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 关于我们边缘的目标设备硬件，我们将测量原型设备（如树莓派）上我们的完整生产工作负载的性能，并根据计算设备的整体利用率迭代到生产硬件配置文件。我们希望在总利用率中留出一些缓冲空间，以防将来作为未来升级部署新工作负载。
- en: PERF 6 – How do you evolve your workload to take advantage of new releases?
  id: totrans-124
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: PERF 6 - 你如何演进你的工作负载以利用新版本？
- en: We will monitor new releases from AWS for opportunities to bring in new managed
    Greengrass components that handle even more undifferentiated heavy lifting for
    our edge workload. We will also monitor new releases in the Amazon SageMaker and
    **Amazon Elastic Cloud Compute** portfolios for opportunities to optimize our
    ML training pipeline.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将监控AWS的新版本，以寻找引入新的管理Greengrass组件的机会，这些组件可以为我们边缘工作负载处理更多的无差别重负载。我们还将监控Amazon
    SageMaker和**Amazon Elastic Cloud Compute**产品组合的新版本，以寻找优化我们的机器学习训练管道的机会。
- en: PERF 7 – How do you monitor your resources to ensure they are performing?
  id: totrans-126
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: PERF 7 - 你如何监控你的资源以确保它们的表现？
- en: We will use the managed component for enabling **AWS IoT Device Defender** to
    collect system-level metrics from each device, such as compute, memory, and disk
    utilization. We will monitor for anomalies and threshold breaches and act in response
    to any detected impacts.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用管理组件来启用**AWS IoT Device Defender**从每个设备收集系统级指标，例如计算、内存和磁盘利用率。我们将监控异常和阈值违规，并对任何检测到的影响采取行动。
- en: IOTPERF 10 – How frequently is data transmitted from devices to your IoT application?
  id: totrans-128
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: IOTPERF 10 - 设备到你的物联网应用的数据传输频率是多少？
- en: For high-priority business outcomes and operational alerts, such as informing
    others of a detected anomaly or a drop in sensor values, data will be transmitted
    from devices to the cloud as soon as such data is available. For other classes
    of data, such as reporting component logs or sensor telemetry to use in a new
    ML training job, data can be transmitted in batches daily.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 对于高优先级的业务成果和操作警报，例如通知他人检测到的异常或传感器值下降，数据将从设备传输到云，一旦此类数据可用。对于其他类别的数据，例如将组件日志或传感器遥测数据用于新的机器学习训练作业，数据可以每天批量传输。
- en: Cost optimization
  id: totrans-130
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 成本优化
- en: 'The cost optimization pillar reinforces how to operate a solution that meets
    business needs at the lowest cost. It organizes best practices into the following
    sub-areas: financial management, usage awareness, cost-effective resources, managing
    demand and supply, and optimizing over time. This pillar stresses measuring the
    overall efficiency of your cloud expenditure, measuring return on investment to
    prioritize where next to optimize, and seeking implementation details that can
    lower costs without compromising on requirements.'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 成本优化支柱强调了如何以最低成本运营满足业务需求解决方案的方法。它将最佳实践组织到以下子领域：财务管理、使用意识、经济高效的资源、管理供需以及随时间优化。该支柱强调衡量云支出的整体效率，衡量投资回报以确定下一步优化的优先级，并寻求可以降低成本而不影响要求的实施细节。
- en: COST 3 – How do you monitor usage and cost?
  id: totrans-132
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 成本3 - 你如何监控使用情况和成本？
- en: We will use a combination of Amazon CloudWatch for metrics and logs, as well
    as the AWS Billing console to monitor the usage and cost of consumed AWS services.
    The most significant source of cost is anticipated to be cloud compute instances
    for our ML training workloads. We will monitor the costs associated with each
    device for outliers where individual devices are consuming more in cloud costs
    than the fleet's average.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将结合使用 Amazon CloudWatch 来监控指标和日志，以及 AWS 计费控制台来监控消耗的 AWS 服务的使用情况和成本。预计最大的成本来源将是我们的机器学习训练工作负载所需的云计算实例。我们将监控与每个设备相关的成本，以识别异常情况，即单个设备在云成本上的消耗超过了整个机队的平均值。
- en: IOTCOST 1 and IOTCOST 3 – How do you select an approach for batch, enriched,
    and aggregate data that's delivered from your IoT platform to other services?
    How do you optimize the payload's size between devices and your IoT platform?
  id: totrans-134
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: IOTCOST 1 和 IOTCOST 3 – 您如何选择从您的物联网平台向其他服务提供批量、丰富和聚合数据的方法？您如何优化设备与您的物联网平台之间的有效载荷大小？
- en: To capture sensor telemetry from our appliance monitoring kits, we will batch
    the telemetry data for daily transmission to the cloud, which will go directly
    to AmazonS3\. This will dramatically lower the cost of the transmission compared
    to sending each payload as it is published by the sensor components. We do not
    have plans to further optimize the payload sizes for any operational messages
    that are exchanged between Greengrass devices and the cloud because we do not
    anticipate these messages to make up a significant expense.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 为了从我们的设备监控套件中捕获传感器遥测数据，我们将批量处理遥测数据，以便每天传输到云端，这些数据将直接发送到 AmazonS3。这将大大降低传输成本，与传感器组件发布每个有效载荷时的传输成本相比。我们没有计划进一步优化任何在
    Greengrass 设备和云端之间交换的操作消息的有效载荷大小，因为我们预计这些消息不会构成显著的费用。
- en: That concludes our sample responses to the AWS Well-Architected review. Are
    there any responses you disagree with or would otherwise modify? The review process
    is a guideline and is not designed to contain right or wrong answers. It is up
    to you and your team of collaborators to define how complete the answers should
    be and whether or not you have action items as a result of the review. Questions
    that the team has no answer to or cannot articulate a detailed answer to are good
    opportunities to learn more about your architecture and anticipate problems before
    they surface in your solution. In the next section, we will provide some final
    coverage of the AWS features you may find useful but that did not fit in the scope
    of this book.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 这就结束了我们对 AWS 优秀架构审查的示例回答。您是否对任何回答有异议或希望进行修改？审查过程是一个指南，并不是为了包含正确或错误的答案。定义答案的完整性以及是否因审查而产生行动项目取决于您和您的协作团队。团队无法回答或无法详细回答的问题是深入了解您的架构和提前预见问题的良好机会。在下一节中，我们将提供一些关于
    AWS 功能的最终覆盖，这些功能可能对您有用，但未包含在本书的范围之内。
- en: Diving deeper into AWS services
  id: totrans-137
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 深入了解 AWS 服务
- en: This book focused on a specific use case as a fictitious narrative to selectively
    highlight features available from AWS that can be used to deliver intelligent
    workloads to the edge. There is so much more you can achieve with AWS IoT Greengrass,
    the other services in the AWS IoT suite, the ML suite of services, and the rest
    of AWS than what we could cover in a single book.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 本书以一个虚构的叙事作为特定用例，有选择性地突出 AWS 可用的功能，这些功能可用于将智能工作负载交付到边缘。您可以使用 AWS IoT Greengrass、AWS
    IoT 套件中的其他服务、ML 服务套件以及 AWS 的其他部分实现更多功能，这些功能超出了我们在这本书中能够涵盖的范围。
- en: In this section, we will point out a few more features and services that may
    be of interest to you as an architect in this space, as well as offer some ideas
    on how to extend the solution you've built so far to further your proficiency.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将指出一些可能对您作为该领域架构师感兴趣的功能和服务，同时提供一些关于如何扩展您迄今为止构建的解决方案以进一步提高您专业性的想法。
- en: AWS IoT Greengrass
  id: totrans-140
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: AWS IoT Greengrass
- en: The Greengrass features we used in the solution represent a subset of the flexibility
    that Greengrass solutions can offer. You learned how to build with components,
    deploy software to the edge, fetch ML resources, and make use of built-in features
    for routing messages throughout the edge and the cloud. The components we used
    in the hub device prototype primarily downloaded Python code and launched long-lived
    applications that interacted with the **IPC** messaging bus. Components can be
    designed to run one-off programs per deployment, per device boot, or on a schedule.
    They can be designed to run services that act as dependencies for your other component
    software, or wait to start once other dependencies in your component graph have
    run successfully.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 在解决方案中使用的 Greengrass 功能代表了 Greengrass 解决方案可以提供的灵活性的一个子集。你学习了如何使用组件进行构建，将软件部署到边缘，获取机器学习资源，并利用内置功能在整个边缘和云中路由消息。我们在中心设备原型中使用的组件主要下载
    Python 代码并启动与 **IPC** 消息总线交互的长生命期应用程序。组件可以被设计为每次部署、每次设备启动或按计划运行一次性的程序。它们可以被设计为运行作为其他组件软件依赖项的服务，或者等待其他组件图中的依赖项成功运行后再启动。
- en: Your components can interact with the deployment life cycle by subscribing to
    notifications about deployment events. For example, your software can request
    a deferment until a safe milestone is met (such as draining a queue or writing
    in-memory records to disk), or signal to the Greengrass nucleus that it is now
    ready for an update.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 您的组件可以通过订阅有关部署事件的通知来与部署生命周期交互。例如，您的软件可以请求延迟，直到达到一个安全里程碑（例如清空队列或将内存中的记录写入磁盘），或者向
    Greengrass 核心发出信号，表明它现在已准备好更新。
- en: Components can signal to other components that they should pause or resume their
    functionality. For example, if a component responsible for a limited resource
    such as disk space or memory identifies a high utilization event, it could request
    that the components consuming those resources pause until the utilization comes
    back into the desired range.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 组件可以向其他组件发出信号，指示它们应该暂停或恢复其功能。例如，如果一个负责有限资源（如磁盘空间或内存）的组件识别到高利用率事件，它可以请求消耗这些资源的组件暂停，直到利用率回到期望的范围。
- en: Components can interact with each other's configuration by requesting the current
    configuration state, subscribing to further changes, or setting a new value for
    a component's configuration. Returning to the previous example, if a resource
    watchdog component didn't want to fully pause a consuming component, it could
    specify a new configuration value for the consuming component to write sampled
    values less frequently or enter a low-power state.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 组件可以通过请求当前配置状态、订阅进一步的更改或为组件的配置设置新值来相互交互配置。回到之前的例子，如果一个资源看门狗组件不想完全暂停消耗组件，它可以指定消耗组件的新配置值，以便更频繁地写入样本值或进入低功耗状态。
- en: All three of the previously mentioned features work using Greengrass IPC and
    are simple applications of local messaging between your components and the Greengrass
    nucleus that govern the component life cycle. There is lots of utility for these
    features in your solution design and they demonstrate how you can build systems
    for component interaction on top of IPC.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 所提到的三个功能都使用 Greengrass IPC 实现，并且是您组件和治理组件生命周期的 Greengrass 核心之间的本地消息传递的简单应用。这些功能在您的解决方案设计中有很多实用价值，并且展示了您如何在
    IPC 之上构建组件交互的系统。
- en: 'Here are a few more features of Greengrass that you should be aware of as you
    continue your journey as an edge ML solution architect. The documentation for
    Greengrass''s features can be found online at [https://docs.aws.amazon.com/greengrass](https://docs.aws.amazon.com/greengrass):'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 在您继续作为边缘机器学习解决方案架构师之旅的过程中，以下是一些您应该了解的 Greengrass 的更多功能。有关 Greengrass 功能的文档可以在网上找到：[https://docs.aws.amazon.com/greengrass](https://docs.aws.amazon.com/greengrass)：
- en: '**Nucleus configuration**: When installing the Greengrass core software on
    your device (or later, through deployments of updated configuration), you have
    several options to explore for optimizing consumed resources, network configuration,
    and how the device interacts with the cloud service. All of these have intelligent
    defaults to get you started, but your production implementations may need to include
    refinements of these per the results of your well-architected review!'
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**核配置**：当在您的设备上安装Greengrass核心软件（或稍后通过更新配置的部署）时，您有几种选项可以探索以优化消耗的资源、网络配置以及设备如何与云服务交互。所有这些都有智能默认设置以帮助您开始，但您的生产实现可能需要根据您精心设计的审查结果对这些设置进行细化！'
- en: '**Run Greengrass inside a Docker container**: In this book''s solution, we
    installed Greengrass as a service running on the Raspberry Pi. Greengrass can
    also be installed on a device running in its own Docker container. You may find
    this valuable for simplifying a custom installation across devices using IaC.
    This can also be used to ship your entire Greengrass solution as an isolated service
    as part of a grander solution architecture running on the device.'
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**在Docker容器中运行Greengrass**：在这本书的解决方案中，我们将Greengrass作为在Raspberry Pi上运行的服务安装。Greengrass也可以安装在运行在其自己的Docker容器中的设备上。您可能会发现这对于使用IaC简化跨设备的自定义安装很有价值。这也可以用来将您的整个Greengrass解决方案作为一个隔离的服务作为更大解决方案架构的一部分来部署到设备上。'
- en: '**Run Docker containers as components**: Your Docker containers can be imported
    into an edge ML solution without modification if you wrap them as a new component.
    Greengrass offers a managed component for interacting with Docker Engine running
    on the device. It can pull images down from Docker Hub and Amazon Elastic Container
    Registry. This can expedite your path to adopting Greengrass in existing workloads
    where your business logic is already defined in Docker containers.'
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**将Docker容器作为组件运行**：如果您将Docker容器作为新组件包装，则无需修改即可将其导入边缘ML解决方案。Greengrass提供了一个管理组件，用于与设备上运行的Docker
    Engine交互。它可以从Docker Hub和Amazon Elastic Container Registry下载镜像。这可以加快您在现有工作负载中采用Greengrass的步伐，其中您的业务逻辑已经在Docker容器中定义。'
- en: Now, let's review a few more features in the wider suite of AWS IoT services
    that can power up your next project.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们回顾AWS IoT服务套件中的更多功能，这些功能可以为您的下一个项目提供动力。
- en: AWS IoT services
  id: totrans-151
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: AWS IoT服务
- en: 'The suite of AWS IoT services covers use cases for device connectivity and
    control, managing a fleet at scale, detecting and mitigating security vulnerabilities,
    performing complex event detection, analyzing industrial IoT operations, and more.
    Greengrass is a model implementation of designing edge solutions on top of existing
    AWS IoT services and also natively integrates with them in powerful ways. Here
    are a few more features in the AWS IoT suite to take a look at when designing
    your next edge ML solution. The documentation for these features can be found
    at [https://docs.aws.amazon.com/iot](https://docs.aws.amazon.com/iot):'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: AWS IoT服务套件涵盖了设备连接和控制、大规模管理车队、检测和缓解安全漏洞、执行复杂事件检测、分析工业物联网操作等多种用例。Greengrass是设计边缘解决方案的模型实现，它基于现有的AWS
    IoT服务，并以强大的方式与它们原生集成。在设计您的下一个边缘ML解决方案时，这里有一些AWS IoT套件中的更多功能可以查看。这些功能的文档可以在[https://docs.aws.amazon.com/iot](https://docs.aws.amazon.com/iot)找到：
- en: '**Secure tunneling**: In [*Chapter 4*](B17595_04_Final_SS_ePub.xhtml#_idTextAnchor073),
    *Extending the Cloud to the Edge*, you uploaded system and component logs to Amazon
    CloudWatch to remotely triage your device. What happens if you need more information
    than what your logs are capturing or you need to run a command on the device but
    don''t want to write a component just for that? With secure tunneling, you can
    signal your devices to establish SSH tunnels to your operators, eliminating the
    necessity for inbound network connections to your device. Greengrass has a managed
    component to enable this feature on your device.'
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**安全隧道**：在[*第4章*](B17595_04_Final_SS_ePub.xhtml#_idTextAnchor073)“将云扩展到边缘”中，您已将系统和组件日志上传到Amazon
    CloudWatch以远程诊断您的设备。如果您需要比日志捕获的信息更多，或者需要在设备上运行命令但不想只为该命令编写组件，会发生什么？使用安全隧道，您可以指示您的设备建立到操作员的SSH隧道，从而消除对设备入站网络连接的需求。Greengrass有一个管理组件可以在您的设备上启用此功能。'
- en: '**Fleet indexing**: When using the shadow service of AWS IoT Core to synchronize
    the state of your Greengrass devices, leaf devices connected to hubs, and even
    your components, all of your shadows can be indexed for queries and dynamic groups
    using the fleet indexing service of AWS IoT Device Management. Fleet indexing
    makes it easy to search for shadow-backed entities in your solution for analysis
    and action. For example, you could create a dynamic group of devices reporting
    under 20% battery level and inform your remote technicians to prioritize battery
    replacements on those devices.'
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**舰队索引**：当使用AWS IoT Core的影子服务同步您的Greengrass设备、连接到中心节点的叶设备以及您的组件的状态时，您可以使用AWS
    IoT设备管理的舰队索引服务对所有的影子进行索引，以便进行查询和动态组。舰队索引使您能够轻松搜索解决方案中基于影子的实体进行分析和操作。例如，您可以创建一个报告电池电量低于20%的设备的动态组，并通知您的远程技术人员优先更换这些设备的电池。'
- en: '**Device Defender**: AWS IoT Device Defender is a service for automating the
    process of detecting and mitigating security vulnerabilities that can use ML to
    build a profile of your fleets'' normal behavior. The service can inform your
    security team of devices operating in unusual ways, such as a spike in network
    traffic or disconnection events that could represent a malicious actor interfering
    with your device.'
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**设备卫士**：AWS IoT设备卫士是一项自动化检测和缓解安全漏洞的服务，可以使用机器学习构建您车队正常行为的配置文件。该服务可以向您的安全团队报告以异常方式运行的设备，例如网络流量激增或断开连接事件，这可能代表恶意行为者干扰您的设备。'
- en: Now, let's review a few more services in the ML suite of AWS that add more intelligence
    to your workloads.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们回顾AWS机器学习套件中的更多服务，这些服务可以为您的工作负载添加更多智能。
- en: Machine learning services
  id: totrans-157
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 机器学习服务
- en: 'The ML services of AWS span from tools that help developers train and deploy
    models to high-level artificial intelligence services that solve specific use
    cases. While the following services run exclusively in the AWS cloud today, they
    can help augment your AI edge solutions that can work with remote services:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: AWS的机器学习服务涵盖了从帮助开发者训练和部署模型到解决特定用例的高级人工智能服务。虽然以下服务目前仅在AWS云中运行，但它们可以帮助增强您与远程服务协同工作的AI边缘解决方案：
- en: '**Amazon Lex and Polly**: You can build voice interfaces into your solutions
    using the same technology that powers Amazon''s Alexa voice assistant. Lex is
    a service for building interactive experiences from voice and text inputs. Polly
    is a service for translating text to speech. You can use both to process audio
    requests from your devices and return a lifelike synthesized response.'
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Amazon Lex和Polly**：您可以使用为Amazon的Alexa语音助手提供动力的相同技术将语音界面构建到您的解决方案中。Lex是一项用于从语音和文本输入构建交互式体验的服务。Polly是一项将文本转换为语音的服务。您可以使用两者来处理来自您的设备的音频请求，并返回逼真的合成响应。'
- en: '**Amazon Rekognition**: You can augment an intelligent workload at the edge
    with deeper insights from the cloud. For example, your edge ML workload may use
    a simpler motion or object detection model to capture significant events as video
    clips, then send only these clips to the cloud for deeper analysis with a service
    such as Rekognition. This pattern of escalation can help you cut down on the resources
    that are needed at the edge and reduce the costs of operating ML workloads exclusively
    in the cloud.'
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Amazon Rekognition**：您可以使用来自云端的更深入见解来增强边缘的智能工作负载。例如，您的边缘机器学习工作负载可能使用更简单的运动或对象检测模型来捕获重要事件作为视频剪辑，然后将这些剪辑仅发送到云端，由Rekognition等服务进行更深入的分析。这种升级模式可以帮助您减少边缘所需的资源，并降低仅在云中运行机器学习工作负载的成本。'
- en: Next, we will provide a few ideas on the next steps you could take to extend
    this book's solution.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将提供一些想法，关于您可以采取的下一步行动来扩展本书的解决方案。
- en: Ideas for further proficiency
  id: totrans-162
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 提高熟练度的想法
- en: 'With your working solution of a hub device running a local ML workload, you
    have practiced using all the necessary tools to deploy intelligent workloads to
    the edge. You may already have a project in mind to apply the lessons you''ve
    learned from this book and reinforce what you''ve learned through practical application.
    If you are looking for inspiration on the next steps to take, we have compiled
    a few ideas for extending what you have already built as a means to develop further
    proficiency with this book''s topics:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 在您的中心设备运行本地机器学习工作负载的解决方案中，您已经练习了使用所有必要的工具将智能工作负载部署到边缘。您可能已经有了将本书中学到的知识应用于实际项目并巩固所学内容的计划。如果您正在寻找下一步行动的灵感，我们已整理了一些想法，以扩展您已经构建的内容，从而进一步提高您对本书主题的熟练度：
- en: '**Add a new cyber-physical interface**: The Raspberry Pi''s GPIO interface,
    USB ports, and audio output jack offer a wide design space for extending the cyber-physical
    interfaces of your hub device. You could add a new sensor, author a custom component
    for reading values from it, stream values to the cloud, and train your ML model
    to detect anomalies in that feed. You could plug in a speaker and generate audio
    alerts in response to the object detection model we deployed in [*Chapter 4*](B17595_04_Final_SS_ePub.xhtml#_idTextAnchor073),
    *Extending the Cloud to the Edge*. You could go one step further and synthesize
    custom speech audio from Amazon Polly and play that over the speaker!'
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**添加新的网络物理接口**：Raspberry Pi 的 GPIO 接口、USB 端口和音频输出插孔为扩展网关设备的网络物理接口提供了广泛的设计空间。你可以添加一个新的传感器，编写一个用于读取其值的自定义组件，将值流式传输到云端，并训练你的机器学习模型以检测该数据流中的异常。你可以插入一个扬声器并生成针对我们在[*第
    4 章*](B17595_04_Final_SS_ePub.xhtml#_idTextAnchor073)中部署的对象检测模型的音频警报。你可以更进一步，从
    Amazon Polly 合成自定义语音音频，并通过扬声器播放！'
- en: '**Build a prototype of the appliance monitoring kit**: In this book, we used
    an onboard sensor from SenseHAT to acquire measurements as an approximation of
    the appliance monitoring kit. With two devices, you could provision one as the
    hub device and another as the monitoring kit, connecting the kit to the hub over
    MQTT, as demonstrated in [*Chapter 4*](B17595_04_Final_SS_ePub.xhtml#_idTextAnchor073),
    *Extending the Cloud to the Edge*. Remove the component from the hub device that
    emits sensor readings and write a new component that subscribes to an MQTT topic
    and forwards new messages from the monitoring kit to the same IPC topic, as defined
    in [*Chapter 3*](B17595_03_Final_SS_ePub.xhtml#_idTextAnchor052), *Building the
    Edge*. Your monitoring kit device doesn''t need to deploy Greengrass; it can run
    an application similar to the one we saw in [*Chapter 4*](B17595_04_Final_SS_ePub.xhtml#_idTextAnchor073),
    *Extending the Cloud to the Edge*, for connecting to the Greengrass MQTT broker
    using the AWS IoT Device SDK.'
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**构建设备监控套件的原型**：在这本书中，我们使用 SenseHAT 的板载传感器来获取测量值，作为设备监控套件的近似。使用两个设备，你可以将一个设备配置为网关设备，另一个配置为监控套件，通过
    MQTT 将套件连接到网关，如[*第 4 章*](B17595_04_Final_SS_ePub.xhtml#_idTextAnchor073)中所示，*将云扩展到边缘*。从网关设备中移除发出传感器读数的组件，并编写一个新的组件，该组件订阅
    MQTT 主题，并将监控套件的新消息转发到相同的 IPC 主题，如[*第 3 章*](B17595_03_Final_SS_ePub.xhtml#_idTextAnchor052)中定义的，*构建边缘*。你的监控套件设备不需要部署
    Greengrass；它可以运行类似于我们在[*第 4 章*](B17595_04_Final_SS_ePub.xhtml#_idTextAnchor073)中看到的，*将云扩展到边缘*的应用程序，用于通过
    AWS IoT 设备 SDK 连接到 Greengrass MQTT 代理。'
- en: '**Perform your own AWS Well-Architected review**: The sample review that we
    provided in this chapter highlighted a few of the questions that are posed to
    architects and kept answers at a somewhat high-level analysis. As your next step,
    you could complete the rest of the review with questions that have not been included
    in this chapter and also take the opportunity to document your answers to the
    same questions, perhaps for your workload.'
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**执行自己的 AWS 架构审查**：本章中我们提供的示例审查突出了向架构师提出的一些问题，并保持答案在较高层次的分析。作为下一步，你可以完成剩余的审查，使用本章未包含的问题，并利用这个机会记录你对相同问题的答案，也许是为了你的工作负载。'
- en: Do you have other suggestions for project extensions or want to show off what
    you've built? Feel free to engage with our community of readers and architects
    by opening a pull request or issue in this book's GitHub repository!
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 你是否有其他项目扩展的建议，或者想要展示你构建的内容？请随时通过在本书的 GitHub 仓库中打开拉取请求或问题与我们的读者和架构师社区互动！
- en: Summary
  id: totrans-168
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: That's all we have for you! We, the authors, believe that these are the best
    techniques, practices, and tools you can use to continue your journey as an architect
    of edge ML solutions. While some of the tools are specific to AWS, everything
    else should generally serve you in building these kinds of solutions. Solutions
    built with AWS IoT Greengrass can just as easily include components that communicate
    with your web services or the services of cloud vendors such as Microsoft or Google.
    The guiding principle of this book was to prioritize teaching you how to build
    and how to think about building edge ML solutions over using specific tools.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是我们为您准备的所有内容！我们，作为作者，相信这些是您可以使用的最佳技术、实践和工具，以继续您作为边缘机器学习解决方案架构师的旅程。虽然一些工具是特定于
    AWS 的，但其他所有内容通常都应能帮助您构建这类解决方案。使用 AWS IoT Greengrass 构建的系统可以轻松地包括与您的网络服务或微软、谷歌等云服务提供商的服务进行通信的组件。本书的指导原则是优先教授您如何构建以及如何思考构建边缘机器学习解决方案，而不是使用特定的工具。
- en: As you take your next steps, whether they are extending this book's prototype
    hub device, starting a new solution, or modernizing an existing solution, we hope
    you find value in reflecting upon the lessons you've learned and critically thinking
    about the tradeoffs that help you reach your goals. We welcome your feedback on
    this book's content and the technical examples through the communication methods
    included in this book's GitHub repository. We are committed to the continued excellence
    of the examples and tutorials provided, recognizing that in the world of information
    technology, tools evolve, dependencies update, and code breaks.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 在您迈出下一步时，无论是扩展本书的原型中心设备、启动一个新的解决方案还是现代化现有的解决方案，我们希望您能从反思您学到的经验教训和批判性地思考有助于您实现目标的权衡中找到价值。我们欢迎您通过本书
    GitHub 存储库中包含的沟通方式对我们本书的内容和技术示例提供反馈。我们致力于持续提供优秀的示例和教程，认识到在信息技术领域，工具会进化，依赖关系会更新，代码会出错。
- en: We are sincerely grateful that you decided to invest your precious time in exploring
    the world of bringing intelligent workloads to the edge with our book. We wish
    you the best of luck in your future endeavors!
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 我们衷心感谢您决定抽出宝贵的时间来探索使用我们书籍带来的智能工作负载到边缘的世界。我们祝愿您在未来的努力中一切顺利！
- en: References
  id: totrans-172
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考文献
- en: 'Take a look at the following resources for additional information on the concepts
    that were discussed in this chapter:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 以下资源提供了关于本章讨论的概念的更多信息：
- en: 'Infrastructure as Code whitepaper: [https://d1.awsstatic.com/whitepapers/DevOps/infrastructure-as-code.pdf](https://d1.awsstatic.com/whitepapers/DevOps/infrastructure-as-code.pdf)'
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基础设施即代码白皮书：[https://d1.awsstatic.com/whitepapers/DevOps/infrastructure-as-code.pdf](https://d1.awsstatic.com/whitepapers/DevOps/infrastructure-as-code.pdf)
- en: 'AWS Architecture Center (IoT): [https://aws.amazon.com/architecture/iot/](https://aws.amazon.com/architecture/iot/)'
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AWS 架构中心（物联网）：[https://aws.amazon.com/architecture/iot/](https://aws.amazon.com/architecture/iot/)
- en: 'AWS IoT Greengrass documentation: [https://docs.aws.amazon.com/greengrass](https://docs.aws.amazon.com/greengrass)'
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AWS IoT Greengrass 文档：[https://docs.aws.amazon.com/greengrass](https://docs.aws.amazon.com/greengrass)
- en: 'AWS Well-Architected home page: [https://aws.amazon.com/architecture/well-architected/](https://aws.amazon.com/architecture/well-architected/)'
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AWS 优秀架构主页：[https://aws.amazon.com/architecture/well-architected/](https://aws.amazon.com/architecture/well-architected/)
- en: 'AWS AI services: [https://aws.amazon.com/machine-learning/ai-services/](https://aws.amazon.com/machine-learning/ai-services/)'
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AWS 人工智能服务：[https://aws.amazon.com/machine-learning/ai-services/](https://aws.amazon.com/machine-learning/ai-services/)
- en: 'IoT Atlas: [https://iotatlas.net](https://iotatlas.net)'
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 物联网图集：[https://iotatlas.net](https://iotatlas.net)
