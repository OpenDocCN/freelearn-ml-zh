- en: '13'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '13'
- en: Document AI – An End-to-End Solution for Processing Documents
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 文档人工智能 - 处理文档的端到端解决方案
- en: Almost every business relies on some kind of document to convey information
    daily. This can be in the form of emails, contracts, forms, PDFs, and so on. Because
    this data is unstructured, many businesses often fail to take advantage of the
    value coming from this data. If there is a way to convert this huge amount of
    data from documents into machine-readable format, it can help with many useful
    tasks, such as automating business processes, doing analytics, applying AI and
    ML, and more. Considering the size of the data, it’s often not possible to parse
    these documents manually to extract information. Tools such as **optical character
    recognition** (**OCR**) can help in partially automating the task of at least
    converting the document into text format, but it will still be unstructured and
    more effort is required to make it useful.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 几乎每家企业都依赖于某种形式的文档来日常传达信息。这可能包括电子邮件、合同、表格、PDF 等等。由于这些数据是非结构化的，许多企业往往无法充分利用这些数据带来的价值。如果有一种方法可以将这些大量文档数据转换为机器可读格式，它可以帮助完成许多有用的任务，例如自动化业务流程、进行数据分析、应用人工智能和机器学习，等等。考虑到数据量的大小，通常不可能手动解析这些文档来提取信息。像**光学字符识别**（**OCR**）这样的工具可以帮助部分自动化将文档转换为文本格式的任务，但仍然是非结构化的，并且需要更多的努力才能使其有用。
- en: Document AI is Google Cloud’s managed service that converts unstructured content
    (different types of documents) into structured data. It is an end-to-end cloud-based
    platform for extracting and classifying information in a structured way, such
    as key-value pairs, so that it is easy to make this data useful. Document AI is
    a complex solution that involves many AI and ML-based algorithms such as OCR,
    image recognition, **natural language processing** (**NLP**), entity extraction,
    machine translation, and many others.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 文档人工智能是 Google Cloud 提供的一项托管服务，它将非结构化内容（不同类型的文档）转换为结构化数据。它是一个端到端基于云的平台，用于以结构化的方式提取和分类信息，例如键值对，以便使这些数据易于使用。文档人工智能是一个复杂的解决方案，涉及许多基于人工智能和机器学习的算法，如
    OCR、图像识别、**自然语言处理**（**NLP**）、实体提取、机器翻译等等。
- en: 'In this chapter, we will learn how to work with Document AI on GCP to extract
    useful information for any business problem. The following main topics will be
    covered in this chapter:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将学习如何在 GCP 上使用文档人工智能来提取任何业务问题的有用信息。本章将涵盖以下主要内容：
- en: What is Document AI?
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 什么是文档人工智能？
- en: Overview of existing Document AI processors
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 现有文档人工智能处理器的概述
- en: Creating custom Document AI processors
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建自定义文档人工智能处理器
- en: Technical requirements
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'The code examples shown in this chapter can be found in the following GitHub
    repository: [https://github.com/PacktPublishing/The-Definitive-Guide-to-Google-Vertex-AI/tree/main/Chapter13](https://github.com/PacktPublishing/The-Definitive-Guide-to-Google-Vertex-AI/tree/main/Chapter13).'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中展示的代码示例可以在以下 GitHub 仓库中找到：[https://github.com/PacktPublishing/The-Definitive-Guide-to-Google-Vertex-AI/tree/main/Chapter13](https://github.com/PacktPublishing/The-Definitive-Guide-to-Google-Vertex-AI/tree/main/Chapter13)。
- en: What is Document AI?
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是文档人工智能？
- en: Document AI is an end-to-end AI-based solution for extracting and classifying
    useful information from any kind of unstructured documents, including scanned
    images, PDFs, forms, emails, and contracts. Document AI’s solution includes pre-trained
    ML models for extraction and other document-related tasks, and it also provides
    the flexibility to uptrain existing models and train custom models without writing
    much code. Document AI is one unified solution that can help businesses manage
    the entire unstructured document life cycle, ensuring a high level of accuracy
    and low costs to accelerate deployment to meet customer expectations.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 文档人工智能是一种端到端的人工智能解决方案，用于从任何类型的非结构化文档中提取和分类有用的信息，包括扫描图像、PDF、表格、电子邮件和合同。文档人工智能的解决方案包括用于提取和其他文档相关任务的预训练机器学习模型，并且它还提供了灵活性，可以重新训练现有模型和训练自定义模型，而无需编写大量代码。文档人工智能是一个统一的解决方案，可以帮助企业管理整个非结构化文档生命周期，确保高精度和低成本，以加速部署以满足客户期望。
- en: 'Some key features of Google Cloud’s Document AI platform are as follows:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: Google Cloud 文档人工智能平台的一些关键特性如下：
- en: '**Google’s state-of-the-art AI**: The Document AI platform is built upon Google’s
    industry-leading AI innovations in various fields, including computer vision (including
    OCR), NLP, and semantic search, to make this platform highly accurate and useful.'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Google 的最先进人工智能**：文档人工智能平台建立在 Google 在计算机视觉（包括 OCR）、NLP 和语义搜索等各个领域的行业领先人工智能创新之上，使该平台非常准确且有用。'
- en: '**A unified console**: It has one unified console that lets us quickly access
    all the related models and tools, including OCR and form parsers. Document AI
    Workbench lets us create custom or uptrain existing models with minimal effort.
    Document AI Warehouse lets us store, search for, and manage documents, and even
    trigger workflows.'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**统一的控制台**：它有一个统一的控制台，让我们可以快速访问所有相关的模型和工具，包括 OCR 和表单解析器。文档 AI 工作台让我们可以轻松地创建自定义或微调现有模型。文档
    AI 仓库让我们可以存储、搜索和管理文档，甚至触发工作流。'
- en: '**Google Knowledge Graph**: We can leverage Google’s Knowledge Graph technology
    to validate and enrich parsed information, such as addresses and phone numbers,
    against entities on the internet.'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Google 知识图谱**：我们可以利用 Google 的知识图谱技术来验证和丰富解析信息，如地址和电话号码，与互联网上的实体进行对比。'
- en: '**Human-in-the-loop AI**: This feature can help us achieve higher accuracy
    with the assurance of human review. Along with accuracy, it can also help in interpreting
    predictions using purpose-built tools.'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**人机协作 AI**：此功能可以帮助我们在确保人工审核的情况下实现更高的准确性。除了准确性之外，它还可以帮助使用专门构建的工具来解释预测。'
- en: Now let’s take a look at Document AI processors.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们来看看文档 AI 处理器。
- en: Document AI processors
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 文档 AI 处理器
- en: 'A Document AI processor is an interface between a document file and an underlying
    ML model that performs a document processing-related task. A processor can be
    used to classify, split, parse, or analyze a document. Document AI processors
    can be classified into the following three categories:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 文档 AI 处理器是文档文件和执行文档处理相关任务的底层机器学习模型之间的接口。处理器可以用来分类、拆分、解析或分析文档。文档 AI 处理器可以分为以下三个类别：
- en: '**General**: These are prebuilt processors and can be applied to any use case.
    OCR is an example of a general-purpose processor that is use case or document-independent.'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**通用**：这些是预构建的处理器，可以应用于任何用例。OCR 是一个通用处理器示例，它是用例或文档无关的。'
- en: '**Specialized**: These are also prebuilt processors that are specifically built
    to work well with some fixed types of documents. As these are specialized, they
    are often highly accurate in performing their tasks. Specialized processors are
    more useful in use cases related to identifying verification, lending applications,
    contracts, and payment-related documents such as invoices and receipts.'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**专用**：这些也是预构建的处理器，专门构建来与某些固定类型的文档良好地工作。由于这些是专用的，它们在执行任务时通常非常准确。专用处理器在识别验证、贷款应用、合同以及与发票和收据等付款相关文档相关的用例中更有用。'
- en: '**Custom**: These can be created on a use case and requirement basis. Sometimes,
    we may need to uptrain existing models or train custom models. Custom processors
    provide the flexibility of using the solution as per the customer’s needs.'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**自定义**：这些可以根据用例和需求创建。有时，我们可能需要微调现有模型或训练自定义模型。自定义处理器提供了根据客户需求使用解决方案的灵活性。'
- en: '*Figure 13**.1* can help in determining which processor is more suitable for
    a given use case:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 13*.1 可以帮助确定哪种处理器更适合特定的用例：'
- en: '![Figure 13.1 – Document processing overview on Google Cloud](img/B17792_13_1.jpg)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.1 – Google Cloud 上的文档处理概述](img/B17792_13_1.jpg)'
- en: Figure 13.1 – Document processing overview on Google Cloud
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.1 – Google Cloud 上的文档处理概述
- en: Now that we have a good understanding of the Document AI platform from a theoretical
    perspective, next, we will go through some exercises on how to use this solution
    to solve a business problem.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 既然我们从理论层面已经对文档 AI 平台有了很好的理解，接下来，我们将通过一些练习来了解如何使用这个解决方案来解决业务问题。
- en: Overview of existing Document AI processors
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 现有文档 AI 处理器的概述
- en: 'As discussed previously, the Document AI platform provides prebuilt parsers
    for general-purpose, as well as some specialized, use cases. As these processors
    are prebuilt, they are readily available to use in any relevant use case with
    very little effort. Before jumping into an example of how these processors work,
    let’s first look at the list of available processors as part of Google Cloud’s
    Document AI platform:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，文档 AI 平台为通用用途以及一些专用用途提供了预构建的解析器。由于这些处理器是预构建的，它们可以轻松地用于任何相关用例，几乎不需要任何努力。在举例说明这些处理器的工作原理之前，让我们首先查看作为
    Google Cloud 文档 AI 平台一部分的可用处理器列表：
- en: '**Document OCR**: Identify and extract both machine-printed as well as handwritten
    text from documents in over 200 languages'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**文档 OCR**：识别和提取超过 200 种语言中的机器打印文本和手写文本'
- en: '**Form Parser**: Extract key-value pairs (entity and checkbox), tables, and
    generic entities in addition to OCR text'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**表单解析器**：除了OCR文本外，还提取键值对（实体和复选框）、表格和通用实体'
- en: '**Intelligent Document Quality Processor**: Assesses the quality of documents
    based on their readability and provides a quality score'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**智能文档质量处理器**：根据文档的可读性评估文档质量并提供质量评分'
- en: '**Document Splitter**: Automatically splits documents based on logical boundaries'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**文档分割器**：根据逻辑边界自动分割文档'
- en: 'Document AI provides us with numerous specialized processors as well. Some
    common examples of specialized prebuilt processors are as follows:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: Document AI为我们提供了许多专业化的处理器。以下是一些常见的专业预构建处理器的示例：
- en: '**Contract Parser**: Extract text and values from legal contacts, such as agreement
    date, effective date, and parties'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**合同解析器**：从法律合同中提取文本和值，如协议日期、生效日期和各方'
- en: '**France Driver License Parser**: Extract fields such as names, document ID,
    date of birth, and so on from French driver’s licenses.'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**法国驾照解析器**：从法国驾照中提取姓名、文件ID、出生日期等字段。'
- en: '**US Passport Parser**: Extract important fields such as name, date of birth,
    and document ID from US passport images'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**美国护照解析器**：从美国护照图像中提取重要字段，如姓名、出生日期和文件ID'
- en: '**Pay Slip Parser**: Extract name, business, and amounts from pay slip documents'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**工资单解析器**：从工资单文档中提取姓名、公司名称和金额等信息'
- en: '**Invoice Parser**: Extract values such as invoice number, supplier name, amount,
    tax amount, due date, and so on'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**发票解析器**：提取发票号码、供应商名称、金额、税额、到期日等信息'
- en: Now, let’s go ahead and try out one of these parsers on example documents.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们尝试在示例文档上使用这些解析器之一。
- en: Using Document AI processors
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用Document AI处理器
- en: 'There are three major steps to using Document AI processors to start processing
    documents:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Document AI处理器开始处理文档有三个主要步骤：
- en: '**Choosing a processor**: Choosing the best processor for a use case is very
    important to get the best results out of it. The documentation of the Document
    AI solution can help in determining the best parser for a given use case.'
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**选择处理器**：为特定用例选择最佳处理器对于获得最佳结果至关重要。Document AI解决方案的文档可以帮助确定给定用例的最佳解析器。'
- en: '**Creating a processor**: Creating a processor means deploying a prebuilt processor
    to an endpoint so that it can accept requests.'
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**创建处理器**：创建处理器意味着将预构建处理器部署到端点，以便它可以接受请求。'
- en: '**Processing documents**: In this step, we send document processing requests
    to the endpoint to get extracted structured information.'
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**处理文档**：在此步骤中，我们将文档处理请求发送到端点以获取提取的结构化信息。'
- en: Now, let’s follow the aforementioned steps and try out one of the parsers. In
    this example, we will try out the general-purpose Document OCR parser to extract
    the text information from an example document.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们按照上述步骤尝试其中一个解析器。在这个例子中，我们将尝试通用的Document OCR解析器，从示例文档中提取文本信息。
- en: 'The first step is to open the Google Cloud console, go to **Document AI**,
    and click on **Processor gallery** in the left pane. **Processor gallery** consists
    of all the prebuilt document processors with categories. Go to the **Document
    OCR** parser and click on the **Create processor** button. It will ask us to provide
    a processor name and region to deploy it. After a few seconds, we should be able
    to see this processor inside the **My Processors** tab, as shown in *Figure 13**.2*:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 第一步是打开Google Cloud控制台，转到**Document AI**，然后在左侧面板中点击**处理器画廊**。**处理器画廊**包含所有带有类别的预构建文档处理器。转到**文档OCR**解析器，并点击**创建处理器**按钮。它将要求我们提供处理器名称和部署区域。几秒钟后，我们应该能在**我的处理器**标签中看到这个处理器，如图*图13.2*所示：
- en: '![Figure 13.2 – Creating a custom processor within Google Cloud’s Document
    AI](img/B17792_13_2.jpg)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![图13.2 – 在Google Cloud的Document AI中创建自定义处理器](img/B17792_13_2.jpg)'
- en: Figure 13.2 – Creating a custom processor within Google Cloud’s Document AI
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.2 – 在Google Cloud的Document AI中创建自定义处理器
- en: 'We can get the prediction endpoint and other useful information by clicking
    on the processor’s name (see *Figure 13**.3*):'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 通过点击处理器的名称，我们可以获取预测端点和其他有用信息（见*图13.2*）：
- en: '![Figure 13.3 – Document AI processor details in the Google Cloud console UI](img/B17792_13_3.jpg)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![图13.3 – Google Cloud控制台UI中的Document AI处理器详细信息](img/B17792_13_3.jpg)'
- en: Figure 13.3 – Document AI processor details in the Google Cloud console UI
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.3 – Google Cloud控制台UI中的Document AI处理器详细信息
- en: 'The console UI, as shown in the previous screenshot, also gives us the option
    to directly upload a document and test the results. Let’s try this out by uploading
    a sample document. To make things a little more complicated and interesting, I
    have written something on a piece of paper in my bad handwriting. Let’s see how
    it works on that (see *Figure 13**.4*):'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 如前一个屏幕截图所示的控制台 UI，也提供了直接上传文档并测试结果的选择。让我们通过上传一个示例文档来试试这个功能。为了使事情更加复杂和有趣，我在一张纸上用我糟糕的笔迹写了一些东西。让我们看看它在上面是如何工作的（见图
    *13**.4*）：
- en: '![Figure 13.4 – Document OCR analysis results on an example handwritten image](img/B17792_13_4.jpg)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.4 – 在示例手写图像上的文档 OCR 分析结果](img/B17792_13_4.jpg)'
- en: Figure 13.4 – Document OCR analysis results on an example handwritten image
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.4 – 在示例手写图像上的文档 OCR 分析结果
- en: As we can see, Document OCR works great on handwritten documents.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们所见，文档 OCR 在手写文档上工作得很好。
- en: 'Now, let’s try this out within a Jupyter Notebook cell to get the output through
    an API request using Python. Upon going to the **MANAGE VERSIONS** tab within
    the console, you can choose from different trained API versions to use (see *Figure
    13**.5*):'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们在一个 Jupyter Notebook 单元中尝试这个功能，通过使用 Python 进行 API 请求来获取输出。在控制台中转到 **管理版本**
    选项卡时，你可以从不同的训练 API 版本中选择使用（见图 *13**.5*）：
- en: '![Figure 13.5 – Managing versions for Document AI processors](img/B17792_13_5.jpg)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.5 – 管理文档 AI 处理器的版本](img/B17792_13_5.jpg)'
- en: Figure 13.5 – Managing versions for Document AI processors
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.5 – 管理文档 AI 处理器的版本
- en: '*Figure 13**.6* shows how a Python request can be used to get the response
    from the Document OCR solution from within a notebook. The full code can be accessed
    in the GitHub repository for this chapter:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 13**.6* 展示了如何在笔记本中通过 Python 请求从文档 OCR 解决方案中获取响应。完整的代码可在本章的 GitHub 仓库中找到：'
- en: '![Figure 13.6 – Using a Python request to get predictions from Document AI
    processors](img/B17792_13_6.jpg)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.6 – 使用 Python 请求从文档 AI 处理器获取预测](img/B17792_13_6.jpg)'
- en: Figure 13.6 – Using a Python request to get predictions from Document AI processors
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.6 – 使用 Python 请求从文档 AI 处理器获取预测
- en: 'In this screenshot of Jupyter Notebook, we are using the `process_document_sample`
    function. This function is available in Google Cloud’s public GitHub samples.
    This function is also available in the GitHub repository for this chapter. I ran
    the following code snippet for this function:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个 Jupyter Notebook 的屏幕截图中，我们正在使用 `process_document_sample` 函数。这个函数可在 Google
    Cloud 的公共 GitHub 示例中找到。此函数也可在本章的 GitHub 仓库中找到。我为这个函数运行了以下代码片段：
- en: '[PRE0]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'You must set `api_endpoint` if you’re using a location other than `us`:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用的是除 `us` 之外的位置，你必须设置 `api_endpoint`：
- en: '[PRE1]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Now, we must load binary data into the Document AI `RawDocument` object:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们必须将二进制数据加载到文档 AI 的 `RawDocument` 对象中：
- en: '[PRE2]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: With that, we have a good idea of how to work with prebuilt Document AI processors
    and get results by using an API call on the underlying ML models. In the next
    section, we will learn how to create a custom processor if a use case doesn’t
    quite fit the prebuilt processors.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这样，我们就有了一个很好的了解如何使用预构建的文档 AI 处理器，并通过在底层机器学习模型上使用 API 调用来获取结果。在下一节中，我们将学习如何在预构建处理器不完全符合用例时创建自定义处理器。
- en: Creating custom Document AI processors
  id: totrans-69
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建自定义文档 AI 处理器
- en: 'If we are unable to find a suitable prebuilt processor for our use case, Document
    AI Workbench lets us build and train our own tailored processors from scratch
    and with minimal effort. If we go to the **Workbench** tab inside Document AI,
    we’ll get the following options for creating a custom processor (see *Figure 13**.7*):'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们无法找到适合我们用例的预构建处理器，文档 AI 工作台允许我们从零开始构建和训练自己的定制处理器，并且几乎不需要任何努力。如果我们进入文档 AI
    中的 **工作台** 选项卡，我们将获得以下创建自定义处理器的选项（见图 *13**.7*）：
- en: '![Figure 13.7 – Document AI Workbench for creating custom model-based processors](img/B17792_13_7.jpg)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.7 – 用于创建基于模型的自定义处理器的文档 AI 工作台](img/B17792_13_7.jpg)'
- en: Figure 13.7 – Document AI Workbench for creating custom model-based processors
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.7 – 用于创建基于模型的自定义处理器的文档 AI 工作台
- en: 'In this exercise, we will work with the **Custom Document Extractor** solution
    to create a custom processor. Once we click on **CREATE PROCESSOR**, we will be
    able to find this processor within the **My Processors** tab. If we click on the
    processor, we will get options for training, evaluating, and testing our custom
    processor, as well as options for managing deployed versions of custom models.
    After training a version, we can also configure the **Human-in-the-loop** feature.
    See *Figure 13**.8* for these options:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个练习中，我们将使用**自定义文档提取器**解决方案来创建自定义处理器。一旦我们点击**创建处理器**，我们就可以在**我的处理器**标签页中找到这个处理器。如果我们点击处理器，我们将获得训练、评估和测试自定义处理器的选项，以及管理自定义模型部署版本的选项。训练一个版本后，我们还可以配置**人工反馈**功能。参见*图13*.8中的这些选项：
- en: '![Figure 13.8 – Custom Document AI processor details in the Google Cloud console
    UI](img/B17792_13_8.jpg)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![图13.8 – Google Cloud控制台UI中的自定义文档AI处理器详细信息](img/B17792_13_8.jpg)'
- en: Figure 13.8 – Custom Document AI processor details in the Google Cloud console
    UI
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.8 – Google Cloud控制台UI中的自定义文档AI处理器详细信息
- en: As you can see, creating a custom processor requires a training dataset so that
    we can fine-tune existing ML models on our specific use case-related documents.
    We should only go for a custom processor if the prebuilt general solution is not
    meeting our business expectations in terms of text extraction accuracy. This is
    because curating our own training dataset can be a complex process as it requires
    manual effort. If we have a good dataset already available, then training a custom
    processor is just a few clicks away using the Document AI platform.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所见，创建一个自定义处理器需要一个训练数据集，这样我们就可以在我们的特定用例相关文档上微调现有的机器学习模型。只有当预构建的通用解决方案在文本提取准确性方面不能满足我们的业务期望时，我们才应该选择自定义处理器。这是因为创建自己的训练数据集可能是一个复杂的过程，因为它需要人工努力。如果我们已经有一个好的数据集可用，那么使用文档AI平台训练自定义处理器只需几步点击即可。
- en: Once our custom processor has finished training and shows good results in testing,
    we can move on to deploying it as a model version. This version can then be utilized
    in production by making API calls, much like how prebuilt processors are used.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们的自定义处理器完成训练并在测试中显示出良好的结果，我们就可以将其作为模型版本部署。然后，可以通过API调用在生产中使用这个版本，就像预构建处理器被使用一样。
- en: Summary
  id: totrans-78
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: This chapter highlighted the fact that every business or company uses many forms
    of documents (such as emails, contracts, forms, PDFs, and images) to share and
    store information. Document AI is an end-to-end solution on Google Cloud that
    lets us extract this information in a structured way such that it can be readily
    used to train ML models or perform other downstream tasks to make a lot of value
    out of the information within these documents.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 本章强调了这样一个事实：每个企业或公司都使用多种形式的文档（如电子邮件、合同、表格、PDF和图像）来共享和存储信息。文档AI是Google Cloud上的端到端解决方案，它使我们能够以结构化的方式提取这些信息，以便可以轻松地用于训练机器学习模型或执行其他下游任务，从而从这些文档中的信息中获取大量价值。
- en: By completing this chapter, you should now be confident about Document AI and
    its importance for every business. You should also have a good understanding of
    prebuilt processors within Document AI and should be able to integrate them into
    their application easily. Finally, if prebuilt processors don’t fulfill your expectations,
    there are options to build custom processors to meet the goal of your use case.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 通过完成本章，你现在应该对文档AI及其对每个企业的重要性充满信心。你也应该对文档AI中的预构建处理器有一个良好的理解，并且应该能够轻松地将它们集成到应用程序中。最后，如果预构建处理器不能满足你的期望，你可以选择构建自定义处理器以满足你的用例目标。
- en: We now have a good understanding of Document AI on Google Cloud. In the next
    chapter, we will learn about more Google productions related to vision, NLP, and
    speech.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在对Google Cloud上的文档AI有了很好的理解。在下一章中，我们将学习更多与视觉、自然语言处理和语音相关的Google产品。
