- en: Understanding the Basics of Differential Robots
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解差动机器人的基础知识
- en: In the previous chapter, we discussed the basics of ROS, how to install it,
    and the basics of the Gazebo robot simulator. As we have already mentioned, we
    are going to create an autonomous wheeled robot from scratch. The robot that we
    are going to design is a differential drive robot, which involves having two wheels
    on opposite sides of the robot chassis, enabling the robot's direction to be adjusted
    by changing the speed of each of the two wheels.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们讨论了ROS的基础知识、如何安装它以及Gazebo机器人模拟器的基础知识。正如我们已经提到的，我们将从头开始创建一个自主轮式机器人。我们将要设计的机器人是一个差动驱动机器人，这涉及到在机器人底盘的相对两侧安装两个轮子，使得机器人的方向可以通过改变两个轮子的速度来调整。
- en: It will be good to understand the basic ideas and terminology behind differential
    wheel robots before programming the robot. This chapter will give you an idea
    of how to analyze the robot mathematically and how to solve the robot's kinematics
    equation. The kinematics equation helps you to predict the robot's position from
    its sensor data.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在编程机器人之前，了解差动轮式机器人的基本思想和术语将是有益的。本章将向您展示如何从数学角度分析机器人，以及如何解决机器人的运动学方程。运动学方程有助于您根据传感器的数据预测机器人的位置。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Mathematical modeling of differential drive robots
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 差动驱动机器人的数学建模
- en: Forward kinematics of differential drive robots
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 差动驱动机器人的前向运动学
- en: Inverse kinematics of differential drive robots
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 差动驱动机器人的逆运动学
- en: Mathematical modeling of the robot
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 机器人的数学建模
- en: An important part of a mobile robot is its steering system. This will help the
    robot to navigate its environment. One of the simplest and most cost-effective
    steering systems is the differential drive system. A differential drive robot
    consists of two main wheels mounted on a common axis that are controlled by separate
    motors. A differential drive system/steering system is a nonholonomic system,
    which means that it has constraints for the changing the robot's pose.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 移动机器人的一个重要部分是其转向系统。这将帮助机器人导航其环境。最简单且成本效益最高的转向系统之一是差动驱动系统。差动驱动机器人由两个主要轮子组成，这两个轮子安装在共同轴上，并由单独的电机控制。差动驱动系统/转向系统是一个非完整系统，这意味着它对机器人姿态的变化有约束。
- en: A car is an example of a nonholonomic system, as it cannot change its position
    without changing its pose. Let's look at how this type of robot works and how
    we can model the robot in terms of its mathematics.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 汽车是一个非完整系统的例子，因为它不能在不改变其姿态的情况下改变其位置。让我们看看这种类型的机器人是如何工作的，以及我们如何从数学角度对机器人进行建模。
- en: Introduction to the differential drive system and robot kinematics
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 差动驱动系统和机器人运动学的介绍
- en: '**Robot kinematics** is the study of the mathematics of motion without considering
    the forces that affect the motion. It mainly deals with the geometric relationships
    that govern the system. **Robot dynamics** is the study of motion in robots in
    which all the forces involved in the robots'' movement are modeled.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**机器人运动学**是研究不考虑影响运动的力的运动数学，它主要处理控制系统的几何关系。**机器人动力学**是研究机器人的运动，其中涉及机器人运动的全部力都被建模。'
- en: 'A mobile robot or vehicle has six **degrees of freedom** (**DOFs**) expressed
    by the pose (x, y, z, roll, pitch, and yaw). These DOFs consist of the position
    (x, y, z) and attitude (roll, pitch, and yaw). **Roll** refers to sidewise rotation,
    **pitch** refers to forward and backward rotation, and **yaw** (called the heading
    or orientation) refers to the direction in which the robot moves in the x-y plane.
    The differential drive robot moves from x to y in the horizontal plane, so the
    2D pose contains mainly x, y, and θ, where θ is the heading of the robot that
    points in the robot''s forward direction. This information is sufficient to describe
    a differential robot pose:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 移动机器人或车辆有六个**自由度**（**DOFs**），由姿态（x、y、z、滚转、俯仰和偏航）表示。这些自由度包括位置（x、y、z）和姿态（滚转、俯仰和偏航）。**滚转**指的是侧向旋转，**俯仰**指的是前后旋转，而**偏航**（称为航向或方向）指的是机器人在x-y平面中的移动方向。差动驱动机器人在水平面上从x移动到y，因此2D姿态主要包含x、y和θ，其中θ是机器人的航向，指向机器人的前方方向。这些信息足以描述差动机器人的姿态：
- en: '![](img/bf59012e-07c6-40a5-8ae5-d64ce234c08f.png)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![](img/bf59012e-07c6-40a5-8ae5-d64ce234c08f.png)'
- en: The pose of the robot in x, y, and θ in the global coordinate system
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 机器人在全局坐标系中的x、y和θ姿态
- en: 'In a differential drive robot, the motion can be controlled by adjusting the
    velocity of two independently controlled motors on the left-hand and right-hand
    side, named V-left and V-right, respectively. The following image shows a couple
    of popular differential drive robots available on the market:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在差动驱动机器人中，运动可以通过调整左右两侧独立控制的两个电机的速度来控制，分别命名为V-left和V-right。以下图像显示了市场上一些流行的差动驱动机器人：
- en: '![](img/f2612c91-4061-421d-b7c6-fdb1007c3c1c.jpg)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f2612c91-4061-421d-b7c6-fdb1007c3c1c.jpg)'
- en: Robot Roomba ([https://en.wikipedia.org/wiki/IRobot](https://en.wikipedia.org/wiki/IRobot))
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 机器人Roomba ([https://en.wikipedia.org/wiki/IRobot](https://en.wikipedia.org/wiki/IRobot))
- en: The Roomba series of autonomous vacuum cleaners is a popular differential robot
    from iRobot.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: iRobot的Roomba系列自动吸尘器是一款流行的差动驱动机器人。
- en: '![](img/1d830fcb-1a56-4031-983a-665969eb0f52.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1d830fcb-1a56-4031-983a-665969eb0f52.png)'
- en: Pioneer 3-DX ([http://robots.ros.org/pioneer-3-dx/](http://robots.ros.org/pioneer-3-dx/))
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: Pioneer 3-DX ([http://robots.ros.org/pioneer-3-dx/](http://robots.ros.org/pioneer-3-dx/))
- en: The Pioneer 3-DX is a popular differential drive research platform from Omron
    Adept Mobile Robots.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: Pioneer 3-DX是来自Omron Adept Mobile Robots的流行的差动驱动研究平台。
- en: Forward kinematics of a differential robot
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 差动式机器人的正向运动学
- en: 'The forward kinematics equations for a robot with a differential drive system
    are used to solve the following problem:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 差动驱动系统机器人的正向运动学方程用于解决以下问题：
- en: If a robot is standing in a position (*x*, *y*, *θ*) at time *t*, determine
    the pose (*x'*, *y'*, *θ'*) at *t + δt* given the control parameters *V-left*
    and *V-right*.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 如果机器人在时间 *t* 处处于位置 (*x*, *y*, *θ*)，则根据控制参数 *V-left* 和 *V-right*，确定在 *t + δt*
    时的姿态 (*x'*, *y'*, *θ'*)。
- en: This technique can be calculated by the robot to follow a particular trajectory.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 这种技术可以通过机器人计算来遵循特定的轨迹。
- en: Explanations of the forward kinematics equation
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 正向运动学方程的解释
- en: 'We can start by formulating a solution for forward kinematics. The following
    figure is an illustration of one of the wheels of the robot:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以从为正向运动学制定解决方案开始。以下图是机器人一个轮子的示意图：
- en: '![](img/48ecb864-dd75-4b41-bb95-75c5e84ebb18.png)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![](img/48ecb864-dd75-4b41-bb95-75c5e84ebb18.png)'
- en: A single wheel of the robot rotating along the local y-axis
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 机器人单个轮子沿局部y轴旋转
- en: The motion around the **y-axis** is known as the roll; everything else is called
    the slip. Let's assume that no slip occurs in this case. When the wheel completes
    one full rotation, it covers a distance of *2π r*, where *r* is the radius of
    the wheel. We will assume that the movement is two-dimensional. This means that
    the surface is flat and even.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 围绕**y轴**的运动称为滚动；其他所有运动都称为滑动。让我们假设在这种情况下没有滑动发生。当轮子完成一周旋转时，它覆盖的距离为 *2π r*，其中 *r*
    是轮子的半径。我们将假设运动是二维的。这意味着表面是平坦且均匀的。
- en: 'When the robot is about to perform a turning motion, the robot must rotate
    around a point that lies along its common left and right wheel axis. The point
    that the robot rotates around is known as the **ICC****-the instantaneous center
    of curvature**. The ICC is located outside the robot. The following diagram shows
    the wheel configuration of the differential drive robot in relation to its ICC:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 当机器人即将进行转向运动时，机器人必须绕其共同左右轮轴上的一个点旋转。机器人旋转的点称为**ICC**-瞬时曲率中心。ICC位于机器人外部。以下图显示了差动驱动机器人的轮子配置与其ICC的关系：
- en: '![](img/68098a0b-6c98-4d16-96fc-f8f4b711e9fd.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![](img/68098a0b-6c98-4d16-96fc-f8f4b711e9fd.png)'
- en: Wheel configuration for a robot with a differential drive
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 差动驱动机器人的轮子配置
- en: The central concept for the derivation of the kinematic equation is the *ω*
    angular velocity of the robot. Each wheel on the robot rotates around the ICC
    along the circumference of a circle with a wheel radius of *r*.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 推导运动学方程的中心概念是机器人的角速度 *ω*。机器人的每个轮子都绕ICC沿着半径为 *r* 的圆周旋转。
- en: 'The speed of the wheel is *v = 2 π r / T,* where *T* is the time taken to complete
    one full turn around the ICC. The *ω* angular velocity is defined as *2 π / T*,
    and typically has the unit of radians (or degrees) per second. Combining the equations
    for *v* and *w* yields *ω= 2 π / T*, and we can conclude the following:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 轮子的速度为 *v = 2 π r / T,* 其中 *T* 是轮子绕ICC完成一周所需的时间。角速度 *ω* 定义为 *2 π / T*，通常以每秒弧度（或度）为单位。将
    *v* 和 *ω* 的方程结合，得到 *ω= 2 π / T*，我们可以得出以下结论：
- en: '![](img/5fab14c0-adf5-440c-a61e-854469611148.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5fab14c0-adf5-440c-a61e-854469611148.png)'
- en: Equation of linear velocity
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 线性速度方程
- en: 'A detailed model of the differential drive system is shown in the following
    diagram:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 差动驱动系统的详细模型如下所示：
- en: '![](img/12a41d8a-cd5c-47b4-844e-7c4a6bf21a95.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![](img/12a41d8a-cd5c-47b4-844e-7c4a6bf21a95.png)'
- en: Detailed diagram of the differential drive system
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 差动驱动系统的详细图示
- en: 'If we apply the previous equation to both wheels, the result will be the same-that
    is, *ω*:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们将前一个公式应用于两个轮子，结果将是相同的，即 *ω*：
- en: '![](img/773ce22d-2687-4115-b74c-5b23fcf1dedf.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![](img/773ce22d-2687-4115-b74c-5b23fcf1dedf.png)'
- en: Differential drive wheel equation
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 差动驱动轮方程
- en: 'Here, *R* is the distance between the ICC and the midpoint of the wheel axis
    and *l* is the length of the wheel axis. After solving *ω* and *R*, we get the
    following result:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，*R* 是 ICC 和轮轴中点的距离，*l* 是轮轴的长度。在解出 *ω* 和 *R* 后，我们得到以下结果：
- en: '![](img/1fd4d9c5-ed25-45bf-8a81-c68514c97b5b.jpg)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1fd4d9c5-ed25-45bf-8a81-c68514c97b5b.jpg)'
- en: Equation to find the distance from the ICC to the center of the robot and the
    angular velocity of the robot
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 找到 ICC 到机器人中心的距离和机器人角速度的公式
- en: 'The previous equation is useful for solving the forward kinematics problem.
    Suppose the robot moves with an angular velocity of *ω* for *δt* seconds. This
    will result in the robot''s orientation or heading changed to the following:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 前一个公式对于解决正向运动学问题很有用。假设机器人以 *ω* 的角速度移动 *δt* 秒。这将导致机器人的方向或航向改变如下：
- en: '![](img/d4e8350f-5c86-4814-b29c-6c7b3dfc6f5c.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d4e8350f-5c86-4814-b29c-6c7b3dfc6f5c.png)'
- en: Equation to find the change in heading
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 找到航向变化的公式
- en: 'Here, the center of the ICC rotation is given by basic trigonometry as the
    following:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，ICC 旋转的中心由以下基本三角学给出：
- en: '![](img/030cd85a-4949-421f-88a3-083513f2b820.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![](img/030cd85a-4949-421f-88a3-083513f2b820.png)'
- en: Equation to find the ICC
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 找到 ICC 的公式
- en: '![](img/bc25e56a-10d8-49bf-a264-73e05f89888a.png)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![](img/bc25e56a-10d8-49bf-a264-73e05f89888a.png)'
- en: Rotating the robot ωδt degrees around the ICC
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在 ICC 附近旋转机器人 ωδt 度
- en: 'Given a starting position (*x*, *y*), the new position (*x''*, *y''*) can be
    computed using the 2D rotation matrix. The rotation around the ICC with the angular
    velocity *ω* for *δt* seconds yields the following position at the time *t + δt*:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 给定起始位置（*x*, *y*），可以使用二维旋转矩阵计算新位置（*x'*, *y'*）。在 ICC 附近以角速度 *ω* 旋转 *δt* 秒后，在时间
    *t + δt* 时的位置如下：
- en: '![](img/17131971-5654-46bd-88b9-5a325e0e6cde.png)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![](img/17131971-5654-46bd-88b9-5a325e0e6cde.png)'
- en: Equation to calculate the new position of the robot
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 计算机器人新位置的公式
- en: The new pose (*x'*, *y'*, and *θ'*) can be computed from equation (6) and (8),
    given *ω*, *δt*, and *R*.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 新的姿态（*x'*, *y'*, 和 *θ'*)可以从公式（6）和（8）中计算得出，给定 *ω*, *δt*, 和 *R*。
- en: '*ω* can be computed from equation (5); *Vr* and *Vl* are often more difficult
    to measure accurately. Instead of measuring the velocity, the rotation of each
    wheel can be measured using sensors called **wheel encoders**. The data from the
    wheel encoders is the robot''s **odometry** values. These sensors are mounted
    on the wheel axes and deliver binary signals for each degree that the wheel rotates
    (each degree may be in the order of 0.1 mm). We will look at the detailed workings
    of the wheel encoders in *Chapter 6, Interfacing Actuators and Sensors to the
    Robot Controller*. These signals are fed to a counter so that *vδt is* the distance
    traveled from the time *t* to *t + δt*. We can write the following:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '*ω* 可以从公式（5）中计算得出；*Vr* 和 *Vl* 往往更难准确测量。而不是测量速度，可以使用称为**轮编码器**的传感器来测量每个轮子的旋转。轮编码器提供的数据是机器人的**里程计**值。这些传感器安装在轮轴上，并为每个轮子旋转的每度提供二进制信号（每度可能为0.1毫米的量级）。我们将在*第6章，将执行器和传感器与机器人控制器接口*中查看轮编码器的详细工作原理。这些信号被输入到一个计数器中，以便
    *vδt* 是从时间 *t* 到 *t + δt* 期间行驶的距离。我们可以写出以下公式：'
- en: '*n * step = vδt*'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '*n * step = vδt*'
- en: 'From this, we can calculate *v*:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 从这个公式中，我们可以计算出 *v*：
- en: '![](img/0f7407a2-41a9-4346-a4ae-a4dedf783efc.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0f7407a2-41a9-4346-a4ae-a4dedf783efc.png)'
- en: Equation calculating the linear velocity from the encoder data
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 从编码器数据计算线性速度的公式
- en: 'If we insert equation (9) in equations (3) and (4), we get the following result:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们将公式（9）插入到公式（3）和（4）中，我们得到以下结果：
- en: '![](img/684655cc-d7fe-4fde-b4b6-158e71e52d2e.png)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![](img/684655cc-d7fe-4fde-b4b6-158e71e52d2e.png)'
- en: Equation to calculate R from the encoder values
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 从编码器值计算 R 的公式
- en: 'Here, ***nl*** and ***nr*** are the encoder counts of the left and right wheels.
    ***Vl*** and ***Vr*** are the speeds of the left and right wheels respectively.
    Thus, the robot stands in pose (*x*, *y*, *θ*) and moves ***nl*** and ***nr***
    counts during a time frame of *δt*; the new pose (*x''*, *y''*, *θ''*) is given
    by calculating the following:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，***nl*** 和 ***nr*** 是左右轮的编码器计数。***Vl*** 和 ***Vr*** 分别是左右轮的速度。因此，机器人在姿态 (*x*,
    *y*, *θ*) 处站立，并在时间框架 *δt* 内移动 ***nl*** 和 ***nr*** 个计数；新的姿态 (*x'*, *y'*, *θ'*)
    通过以下计算得出：
- en: '![](img/ec40f018-8896-4c85-923e-7caadac6fc8d.png)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/ec40f018-8896-4c85-923e-7caadac6fc8d.png)'
- en: Equation to calculate the robot's position from the encoder values
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 计算机器人位置从编码器值的方程
- en: where,
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 其中，
- en: '![](img/2e9dc917-0d2f-46a9-9cbe-5e7b3ca7c704.png)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/2e9dc917-0d2f-46a9-9cbe-5e7b3ca7c704.png)'
- en: Equation to calculate the ICC and other parameters from the encoder values
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 计算ICC和其他参数的方程
- en: The derived kinematic equation depends mainly on the design and geometry of
    the robot. Different designs can lead to different equations.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 推导出的运动学方程主要取决于机器人的设计和几何形状。不同的设计可能导致不同的方程。
- en: Inverse kinematics
  id: totrans-74
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 反向运动学
- en: The forward kinematics equation provides an updated pose at a given wheel speed.
    We can now think about the inverse problem.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 前向运动学方程提供了给定轮速度时的更新姿态。我们现在可以思考逆问题。
- en: Stand in pose (*x*, *y*, *θ*) at time *t* and determine the *V-left* and *V-right*
    control parameters so that the pose at time *t + δt* is (*x'*, *y'*, *θ'*).
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 在时间 *t* 处以姿态 (*x*, *y*, *θ*) 站立，并确定 *V-left* 和 *V-right* 控制参数，以便在时间 *t + δt*
    时的姿态是 (*x'*, *y'*, *θ'*)。
- en: In differential drive systems, this problem may not always have a solution because
    this kind of robot can't be moved to any pose by simply setting the wheel velocity.
    It's because of the nonholonomic robots' constraints.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 在差速驱动系统中，这个问题可能并不总是有解，因为这种机器人不能仅通过设置轮速度就被移动到任何姿态。这是因为非完整机器人有约束。
- en: 'In nonholonomic robots, there are some ways to increase the constrained mobility
    if we allow a sequence of different (*V-left*, *V-right*) movements. If we insert
    the values from equations (12) and (15), we can identify some special movements
    that we can program:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 在非完整机器人中，如果我们允许一系列不同的 (*V-left*, *V-right*) 移动，有一些方法可以增加约束移动性。如果我们从方程 (12) 和
    (15) 中插入值，我们可以识别一些可以编程的特殊动作：
- en: If *V-right = V-left* => *nr = nl* => *R = ∞*, *ωδT = 0* =>, this means that
    the robot moves in a straight line and *θ* remains the same
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果 *V-right = V-left* => *nr = nl* => *R = ∞*，*ωδT = 0* =>，这意味着机器人沿直线移动，*θ*
    保持不变
- en: If *V-right = -V-left* => *nr = -nl* => *R=0*, *ωδt = 2nl * step / l* and ![](img/ce532925-1a49-4e36-a478-09cfd6e45b62.png)=>
    *x' = x*, *y' = y*, *θ' = θ + ωδt* =>, this means the robot rotates in position
    around ICC-that is, any *θ* is reachable, while (*x*, *y*) remains unchanged
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果 *V-right = -V-left* => *nr = -nl* => *R=0*，*ωδt = 2nl * step / l* 和 ![图片](img/ce532925-1a49-4e36-a478-09cfd6e45b62.png)
    => *x' = x*，*y' = y*，*θ' = θ + ωδt* =>，这意味着机器人在ICC位置旋转，即任何 *θ* 都是可达到的，而 (*x*,
    *y*) 保持不变
- en: 'Combining these operations, the following steps can be used to reach any target
    pose from the starting pose:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 结合这些操作，以下步骤可以用来从起始姿态到达任何目标姿态：
- en: Rotate until the robot's orientation coincides with the line leading from the
    starting position to the target position, *V-right = -V-left = V-rot*.
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 旋转直到机器人的方向与从起始位置到目标位置的直线一致，*V-right = -V-left = V-rot*。
- en: Drive straight until the robot's position coincides with the target position,
    *V-right = V-left = V-ahead*.
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 直行驱动直到机器人的位置与目标位置一致，*V-right = V-left = V-ahead*。
- en: Rotate until the robot's orientation coincides with the target orientation,
    *V-right = -V-left = V-rot*. Here, *V-rot* and *V-ahead* can be chosen arbitrarily.
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 旋转直到机器人的方向与目标方向一致，*V-right = -V-left = V-rot*。在这里，*V-rot* 和 *V-ahead* 可以任意选择。
- en: We will see how we can implement the kinematics equation of the robot using
    ROS in the upcoming chapters.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的章节中，我们将看到如何使用ROS实现机器人的运动学方程。
- en: Summary
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 概述
- en: This chapter was about the fundamental concepts of differential drive robots,
    and looked at how you can derive the kinematics equations of such robots. At the
    start of the chapter, we saw the basics of differential drive robots, and then
    we discussed the forward kinematics equations that are used in these robots. These
    equations were explained using diagrams. After looking at forward kinematics equations,
    we looked at the inverse kinematics equations for differential drive robots. We
    also looked at the basics of inverse kinematics equations.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 本章讲述了差动驱动机器人的基本概念，并探讨了如何推导这类机器人的运动学方程。在章节开头，我们了解了差动驱动机器人的基础知识，然后讨论了在这些机器人中使用的正向运动学方程。这些方程通过图表进行了解释。在研究了正向运动学方程之后，我们接着探讨了差动驱动机器人的逆向运动学方程。我们还讨论了逆向运动学方程的基本内容。
- en: In the next chapter, we will see how we can create a simulation of the autonomous
    mobile robot using ROS and Gazebo.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将看到如何使用ROS和Gazebo创建自主移动机器人的模拟。
- en: Questions
  id: totrans-89
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: What are holonomic and nonholonomic configurations?
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 什么是全运动和非全运动配置？
- en: What are robot kinematics and dynamics?
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 机器人运动学和动力学是什么？
- en: What is the ICC of a differential drive robot?
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 差动驱动机器人的ICC是什么？
- en: What is the forward kinematic equation in a differential robot?
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 差动机器人中的正向运动学方程是什么？
- en: What is the inverse kinematic equation in a differential robot?
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 差动机器人中的逆向运动学方程是什么？
- en: Further information
  id: totrans-95
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更多信息
- en: Refer to [http://www8.cs.umu.se/~thomash/reports/KinematicsEquationsForDifferentialDriveAndArticulatedSteeringUMINF-11.19.pdf](http://www8.cs.umu.se/~thomash/reports/KinematicsEquationsForDifferentialDriveAndArticulatedSteeringUMINF-11.19.pdf)
    for more information on kinematic equations.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 如需了解更多关于运动学方程的信息，请参阅[http://www8.cs.umu.se/~thomash/reports/KinematicsEquationsForDifferentialDriveAndArticulatedSteeringUMINF-11.19.pdf](http://www8.cs.umu.se/~thomash/reports/KinematicsEquationsForDifferentialDriveAndArticulatedSteeringUMINF-11.19.pdf)。
