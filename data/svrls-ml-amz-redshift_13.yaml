- en: '13'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '13'
- en: Operationalizing and Optimizing Amazon Redshift ML Models
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实施和优化 Amazon Redshift 机器学习模型
- en: Now that you have learned how to create many different types of ML models, we
    will show you how you can operationalize your model training pipelines. Once you
    have moved your model to production, you want to refresh the model regularly and
    automate the process to do this. Additionally, it is important to periodically
    evaluate your models to maintain and improve their accuracy.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经学会了如何创建许多不同类型的机器学习模型，我们将向您展示如何实施您的模型训练管道。一旦您的模型投入生产，您希望定期刷新模型并自动化此过程。此外，定期评估您的模型以维护和提升其准确性也很重要。
- en: 'In this chapter, we will go through the following main topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将讨论以下主要主题：
- en: Operationalizing your ML models
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实施您的机器学习模型
- en: Optimizing the Redshift model for accuracy
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 优化 Redshift 模型以提高准确性
- en: Technical requirements
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'This chapter requires a web browser and access to the following:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 本章需要网络浏览器以及访问以下内容：
- en: An AWS account
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个 AWS 账户
- en: An Amazon Redshift Serverless endpoint
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个 Amazon Redshift 无服务器端点
- en: Amazon Redshift Query Editor v2
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Amazon Redshift 查询编辑器 v2
- en: An Amazon EC2 Linux instance (optional)
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个 Amazon EC2 Linux 实例（可选）
- en: 'You can find the code used in this chapter here: [https://github.com/PacktPublishing/Serverless-Machine-Learning-with-Amazon-Redshift/](https://github.com/PacktPublishing/Serverless-Machine-Learning-with-Amazon-Redshift/).'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在此处找到本章中使用的代码：[https://github.com/PacktPublishing/Serverless-Machine-Learning-with-Amazon-Redshift/](https://github.com/PacktPublishing/Serverless-Machine-Learning-with-Amazon-Redshift/).
- en: Operationalizing your ML models
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实施您的机器学习模型
- en: Once a model is validated and used on a regular basis for running predictions,
    it should be operationalized. The reasons for this are to remove the manual tasks
    of retraining your models and to ensure that your model still retains high accuracy
    after your data distribution has changed over time, also referred to as **data
    drift**. When data drift occurs, you need to retrain the model using an updated
    training set.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦模型经过验证并定期用于运行预测，它应该被实施。这样做的原因是消除重新训练模型的手动任务，并确保在数据分布随时间变化后，您的模型仍然保持高精度，也称为**数据漂移**。当发生数据漂移时，您需要使用更新的训练集重新训练模型。
- en: In the following sections, we will do a simple model retraining, then show you
    how you can create a version from an existing model.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下章节中，我们将进行简单的模型重新训练，然后向您展示如何从现有模型创建版本。
- en: Model retraining process without versioning
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 无版本控制的模型重新训练过程
- en: To walk through the retraining process, we will use one of our previously used
    models.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 为了演示重新训练过程，我们将使用我们之前使用的一个模型。
- en: In [*Chapter 7*](B19071_07.xhtml#_idTextAnchor111), we discussed different regression
    models, so let’s use the `chapter7_regressionmodel.predict_ticket_price_auto`
    model. This model solved a multi-input regression problem and **SageMaker Autopilot**
    chose the **XGBoost algorithm**.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在[*第 7 章*](B19071_07.xhtml#_idTextAnchor111)中，我们讨论了不同的回归模型，因此让我们使用 `chapter7_regressionmodel.predict_ticket_price_auto`
    模型。该模型解决了一个多输入回归问题，**SageMaker Autopilot** 选择了 **XGBoost 算法**。
- en: Let’s assume this model is performing well and, based on our data loading processes,
    we want to retrain this model weekly.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 假设这个模型表现良好，并且根据我们的数据加载过程，我们希望每周重新训练此模型。
- en: 'To retrain this model, we must first remove the existing model and then re-execute
    the `CREATE MODEL` command as follows:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 要重新训练此模型，我们必须首先删除现有模型，然后按照以下方式重新执行 `CREATE MODEL` 命令：
- en: '[PRE0]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'You can set this up to run on a regular schedule using various techniques,
    which could include using the Query Editor v2 scheduling feature or running scripts.
    For more information on scheduling queries with Query Editor v2, refer to the
    following:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用各种技术设置定期运行，这包括使用查询编辑器 v2 的调度功能或运行脚本。有关使用查询编辑器 v2 调度查询的更多信息，请参阅以下内容：
- en: '[https://docs.aws.amazon.com/redshift/latest/mgmt/query-editor-v2-schedule-query.html](https://docs.aws.amazon.com/redshift/latest/mgmt/query-editor-v2-schedule-query.html).'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://docs.aws.amazon.com/redshift/latest/mgmt/query-editor-v2-schedule-query.html](https://docs.aws.amazon.com/redshift/latest/mgmt/query-editor-v2-schedule-query.html).'
- en: The model retraining process with versioning
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 带版本控制的模型重新训练过程
- en: This approach of simply dropping and recreating the model might be fine in some
    cases, but there is no model history available since we are simply dropping and
    recreating the model. This makes comparing the newly trained model to previous
    versions very difficult, if not impossible.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 这种简单地删除和重新创建模型的方法在某些情况下可能可行，但由于我们只是删除和重新创建模型，因此没有模型历史记录。这使得将新训练的模型与之前的版本进行比较变得非常困难，甚至不可能。
- en: At the time of writing, Redshift ML does not have native versioning capabilities.
    However, you can still do versioning by implementing a few simple SQL techniques
    and leveraging the **bring our own model** (**BYOM**) capability, which you learned
    about in [*Chapter 11*](B19071_11.xhtml#_idTextAnchor192).
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在撰写本文时，Redshift ML 没有原生版本控制功能。然而，您仍然可以通过实现一些简单的 SQL 技巧并利用**自带模型**（**BYOM**）功能来进行版本控制，这些内容您可以在[*第11章*](B19071_11.xhtml#_idTextAnchor192)中了解到。
- en: BYOM is great for leveraging pre-built Amazon SageMaker models in order to run
    your inference queries in Amazon Redshift and you can also use BYOM for models
    that were built using Redshift ML, which means we can create a *version* of an
    existing model that was previously created by Redshift ML.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: BYOM 非常适合利用预构建的 Amazon SageMaker 模型，以便在 Amazon Redshift 中运行推理查询，您还可以使用 BYOM
    对使用 Redshift ML 构建的模型进行操作，这意味着我们可以创建一个由 Redshift ML 创建的现有模型的 *版本*。
- en: 'Let’s take a quick refresher on the syntax of BYOM for local inference:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们快速回顾一下 BYOM 的语法，用于本地推理：
- en: '[PRE1]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'We need the job name, the data types of the model inputs, and the output. We
    can get the information we need for the `CREATE MODEL` statement by running the
    `SHOW MODEL` statement on our existing model. Run the following command in Query
    Editor v2:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要作业名称、模型输入的数据类型和输出。我们可以通过在现有模型上运行 `SHOW MODEL` 语句来获取 `CREATE MODEL` 语句所需的信息。在
    Query Editor v2 中运行以下命令：
- en: '[PRE2]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The result is as follows:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: "![Figure 13.1 – \uFEFFThe SHOW MODEL output](img/B19071_13_01.jpg)"
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.1 – SHOW MODEL 输出](img/B19071_13_01.jpg)'
- en: Figure 13.1 – The SHOW MODEL output
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.1 – SHOW MODEL 输出
- en: 'The following is the `CREATE MODEL` statement to create a version of the current
    model using the `SHOW MODEL` command. You will also need to include the function
    parameter types from *Figure 13**.1* in `FUNCTION` here and include the data type
    of `Target Column`(`FINAL_TICKET_PRICE`). Note that we append the date (`YYYYMMDD`)
    to the end of the model name and function name to create our version. You can
    run the following code in Query Editor v2 to create a version of your model:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的 `CREATE MODEL` 语句用于使用 `SHOW MODEL` 命令创建当前模型的版本。您还需要在 `FUNCTION` 中包含来自 *图
    13*.1 的函数参数类型，并包含 `Target Column`（`FINAL_TICKET_PRICE`）的数据类型。请注意，我们将日期（`YYYYMMDD`）附加到模型名称和函数名称的末尾以创建我们的版本。您可以在
    Query Editor v2 中运行以下代码以创建模型的版本：
- en: '[PRE3]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Run the following `SHOW` `MODEL` command:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下 `SHOW MODEL` 命令：
- en: '[PRE4]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'In *Figure 13**.2*, notice that **Inference Type** shows **Local**, which designates
    this as BYOM with local inference:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在 *图 13*.2 中，请注意**推理类型**显示为**本地**，这表明这是带有本地推理的 BYOM：
- en: "![Figure 13.2 – \uFEFFThe SHOW MODEL output](img/B19071_13_02.jpg)"
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.2 – SHOW MODEL 输出](img/B19071_13_02.jpg)'
- en: Figure 13.2 – The SHOW MODEL output
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.2 – SHOW MODEL 输出
- en: Now that you have learned how to create a version of a previously trained Redshift
    ML model, we will show you how you can automate this process.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经学会了如何创建之前训练的 Redshift ML 模型的版本，我们将向您展示如何自动化此过程。
- en: Automating the CREATE MODEL statement for versioning
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 自动化创建模型语句进行版本控制
- en: 'We have included the scripts here: [https://github.com/PacktPublishing/Serverless-Machine-Learning-with-Amazon-Redshift/tree/main/CodeFiles/chapter13.](https://github.com/PacktPublishing/Serverless-Machine-Learning-with-Amazon-Redshift/tree/main/CodeFiles/chapter13\.
    )'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在此处包含了脚本：[https://github.com/PacktPublishing/Serverless-Machine-Learning-with-Amazon-Redshift/tree/main/CodeFiles/chapter13.](https://github.com/PacktPublishing/Serverless-Machine-Learning-with-Amazon-Redshift/tree/main/CodeFiles/chapter13\.
    )
- en: You can use these scripts and customize them as needed. These contain all the
    components needed to automate the process of performing model versioning. The
    example in this chapter uses Bash scripts with RSQL running on an EC2 instance.
    If you prefer, you can also install RSQL on Windows or macOS.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用这些脚本并根据需要对其进行自定义。这些脚本包含自动化模型版本控制过程所需的所有组件。本章的示例使用在 EC2 实例上运行的 Bash 脚本和
    RSQL。如果您愿意，您也可以在 Windows 或 macOS 上安装 RSQL。
- en: 'You may find more information on using RSQL to interact with Amazon Redshift
    here: [https://docs.aws.amazon.com/redshift/latest/mgmt/rsql-query-tool-getting-started.html](https://docs.aws.amazon.com/redshift/latest/mgmt/rsql-query-tool-getting-started.html).'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在以下位置找到有关使用RSQL与Amazon Redshift交互的更多信息：[https://docs.aws.amazon.com/redshift/latest/mgmt/rsql-query-tool-getting-started.html](https://docs.aws.amazon.com/redshift/latest/mgmt/rsql-query-tool-getting-started.html)。
- en: 'To download all the code for this book, you may run the commands given in the
    following link on an EC2 instance running on Linux or Windows or on your local
    Windows or Mac machine:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 要下载本书的所有代码，您可以在运行Linux或Windows的EC2实例或您本地的Windows或Mac机器上运行以下链接中给出的命令：
- en: '[https://github.com/PacktPublishing/Serverless-Machine-Learning-with-Amazon-Redshift.git](https://github.com/PacktPublishing/Serverless-Machine-Learning-with-Amazon-Redshift.git).'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/PacktPublishing/Serverless-Machine-Learning-with-Amazon-Redshift.git](https://github.com/PacktPublishing/Serverless-Machine-Learning-with-Amazon-Redshift.git)。'
- en: 'Before running the scripts, we need to create the schema and the table needed
    to generate the `CREATE MODEL` command for the model version. You can run the
    following steps in Query Editor v2:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 在运行脚本之前，我们需要创建用于生成模型版本`CREATE MODEL`命令所需的模式和表。您可以在查询编辑器v2中执行以下步骤：
- en: 'Create the schema:'
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建模式：
- en: '[PRE5]'
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Create the table to contain the metadata needed to auto-generate the `CREATE`
    `MODEL` command:'
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建包含自动生成`CREATE MODEL`命令所需元数据的表：
- en: '[PRE6]'
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '[PRE7]'
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '[PRE8]'
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '[PRE9]'
  id: totrans-56
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '[PRE10]'
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '[PRE11]'
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '[PRE12]'
  id: totrans-59
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '[PRE13]'
  id: totrans-60
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '[PRE14]'
  id: totrans-61
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '[PRE15]'
  id: totrans-62
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Initialize the `local_inf_ml_components` table.
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 初始化`local_inf_ml_components`表。
- en: 'Note that you will just need to initialize this table once, with the model
    name, schema name, the data type of the target value we are predicting, the **Amazon
    Resource Name** (**ARN**) of the IAM role, and the S3 bucket to be used for the
    Redshift ML artifacts. The table will get updated with the additional data needed
    as part of the automation script:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，您只需初始化此表一次，包括模型名称、模式名称、我们预测的目标值的类型、IAM角色的**Amazon资源名称**（**ARN**）以及用于Redshift
    ML工件要使用的S3存储桶。该表将随着自动化脚本所需额外数据的更新而更新：
- en: '[PRE16]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Now, we are ready to run the automation script. *Figure 13**.3* illustrates
    this flow using our `predict_ticket_price_auto` model from [*Chapter 7*](B19071_07.xhtml#_idTextAnchor111).
    **Step 1** creates the model version by using BYOM and appending the timestamp
    and **Step 2** drops and creates the new model:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们已经准备好运行自动化脚本。*图13.3*使用我们的`predict_ticket_price_auto`模型说明了此流程，该模型来自[*第7章*](B19071_07.xhtml#_idTextAnchor111)。**步骤1**通过使用BYOM并附加时间戳创建模型版本，**步骤2**删除并创建新的模型：
- en: '![Figure 13.3 – Automation script steps 1 and 2](img/B19071_13_03.jpg)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![图13.3 – 自动化脚本步骤1和2](img/B19071_13_03.jpg)'
- en: Figure 13.3 – Automation script steps 1 and 2
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.3 – 自动化脚本步骤1和2
- en: Let’s walk through the steps in *Figure 13**.3*.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过*图13.3*中的步骤进行说明。
- en: Step 1 – creating a version from the existing model
  id: totrans-70
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 步骤1 – 从现有模型创建版本
- en: You may refer to the `step1_create_model_version.sh` script at [https://github.com/PacktPublishing/Serverless-Machine-Learning-with-Amazon-Redshift/tree/main/CodeFiles/chapter13](https://github.com/PacktPublishing/Serverless-Machine-Learning-with-Amazon-Redshift/tree/main/CodeFiles/chapter13)
    or where you placed the file after running the `git` `clone` command.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以参考位于[https://github.com/PacktPublishing/Serverless-Machine-Learning-with-Amazon-Redshift/tree/main/CodeFiles/chapter13](https://github.com/PacktPublishing/Serverless-Machine-Learning-with-Amazon-Redshift/tree/main/CodeFiles/chapter13)或您在运行`git
    clone`命令后放置文件的位置的`step1_create_model_version.sh`脚本。
- en: 'The contents of the `step1_create_model_version.sh` script are also shown in
    the following code snippet. As you can see, it calls other scripts and commands
    as follows:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '`step1_create_model_version.sh`脚本的内容也显示在以下代码片段中。如您所见，它调用其他脚本和命令如下：'
- en: '[PRE17]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Before you execute this script, read through the following subsections as they
    contain instructions on some setup steps.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 在执行此脚本之前，请阅读以下子节，因为它们包含一些设置步骤的说明。
- en: Creating the show_model_sql command
  id: totrans-75
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 创建show_model_sql命令
- en: 'We have a simple script called `generate_show_model_sql.sh` with code as shown
    here:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有一个名为`generate_show_model_sql.sh`的简单脚本，其代码如下所示：
- en: '[PRE18]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: This script takes as input the model name. In the script provided, we have already
    supplied the model name in the `step1_create_model_version.sh` driver script.
    You can modify this as needed for your models.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 此脚本将模型名称作为输入。在提供的脚本中，我们已经在`step1_create_model_version.sh`驱动脚本中提供了模型名称。您可以根据需要修改它。
- en: The script creates a `SHOW MODEL` command that is written to a file called `show_model.sql`
    to be read in the `show_model.sh` script.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 该脚本创建一个写入名为`show_model.sql`的文件的`SHOW MODEL`命令，以便在`show_model.sh`脚本中读取。
- en: Reading the SHOW MODEL output and writing it to a file
  id: totrans-80
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 读取SHOW MODEL输出并将其写入文件。
- en: This step executes an Amazon Redshift RSQL script called `show_model.sh`, which
    reads the `show_model.sql` file and writes the output to a file called `create_model.txt`.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 此步骤执行一个名为`show_model.sh`的Amazon Redshift RSQL脚本，该脚本读取`show_model.sql`文件并将输出写入名为`create_model.txt`的文件。
- en: Copying the SHOW MODEL output to the model info table
  id: totrans-82
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 将SHOW MODEL输出复制到模型信息表中。
- en: This copies the `create_model.txt` file into an S3 bucket.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 这将`create_model.txt`文件复制到S3存储桶中。
- en: Loading the SHOW MODEL output and prepping the table to generate `CREATE MODEL`
  id: totrans-84
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 加载SHOW MODEL输出并准备表以生成`CREATE MODEL`。
- en: 'This step executes another Amazon Redshift RSQL script called `prep_create_model.sh`,
    which performs the following:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 此步骤执行另一个名为`prep_create_model.sh`的Amazon Redshift RSQL脚本，该脚本执行以下操作：
- en: Creates and loads the `model_info` table
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建并加载`model_info`表。
- en: Updates `local_inf_ml_model_components` from the `model_info` table so that
    the `CREATE MODEL` statement can be generated for the model version
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从`model_info`表中更新`local_inf_ml_model_components`，以便可以生成用于模型版本的`CREATE MODEL`语句。
- en: Inserts the generated `CREATE MODEL` statement into the `create_model_sql` table
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将生成的`CREATE MODEL`语句插入到`create_model_sql`表中。
- en: Generating the SQL to create the model version
  id: totrans-89
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 生成创建模型版本的SQL语句。
- en: This step calls an Amazon Redshift RSQL script called `generate_create_model_version_sql.sh`,
    which reads the `create_model` table and writes the SQL to a text file called
    `model_version.txt`.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 此步骤调用一个名为`generate_create_model_version_sql.sh`的Amazon Redshift RSQL脚本，该脚本读取`create_model`表并将SQL写入名为`model_version.txt`的文本文件。
- en: Executing the SQL to create the model version
  id: totrans-91
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 执行SQL以创建模型版本。
- en: This step calls an Amazon Redshift RSQL script called `execute_create_model_version.sh`,
    which creates the version of our previously created model.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 此步骤调用一个名为`execute_create_model_version.sh`的Amazon Redshift RSQL脚本，该脚本创建我们之前创建的模型的版本。
- en: Now you can drop and create your model since we have the model version.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您可以根据模型版本删除和创建模型。
- en: Step 2 – retraining your Redshift ML model to create a version from the existing
    model
  id: totrans-94
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 步骤2 – 重新训练您的Redshift ML模型以从现有模型创建版本
- en: This step calls an Amazon Redshift RSQL script called `retrain_model.sh`, which
    drops and creates our model. It references `retrain_model.sql`, which you can
    modify for your needs.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 此步骤调用一个名为`retrain_model.sh`的Amazon Redshift RSQL脚本，该脚本删除并创建我们的模型。它引用`retrain_model.sql`，您可以根据需要修改它。
- en: Now that you have learned how to automate the process of retraining your Redshift
    ML models, let’s discuss how to optimize the accuracy of your models.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经学会了如何自动化重新训练Redshift ML模型的过程，让我们讨论如何优化模型准确性。
- en: Optimizing the Redshift models’ accuracy
  id: totrans-97
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 优化Redshift模型准确性
- en: In this section, we will review best practices for maintaining the optimal accuracy
    of your models.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将回顾维护您模型最佳准确性的最佳实践。
- en: 'You will need to continually monitor your models over time to ensure the scores
    stay stable between model training runs. Consider the new version of the model
    we created here:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要持续监控您的模型，以确保在模型训练运行之间分数保持稳定。考虑我们在这里创建的模型的新版本：
- en: '![Figure 13.4 – New model output](img/B19071_13_04.jpg)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![图13.4 – 新模型输出](img/B19071_13_04.jpg)'
- en: Figure 13.4 – New model output
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.4 – 新模型输出
- en: 'Create a table similar to this and track each week’s mean square error (MSE)
    score from the `SHOW` `MODEL` output:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个类似此表，并跟踪每周的均方误差（MSE）分数，从SHOW MODEL输出中获取：
- en: '[PRE19]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: The variance will be the difference in the score of each successive version
    of a model.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 方差将是模型连续版本分数的差异。
- en: 'Check how your models are trending by writing a query like this:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 通过编写类似此查询来检查您的模型趋势：
- en: '[PRE20]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: If variances are not within a reasonable amount, you will need to look at ways
    to improve the model scores.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 如果方差不在合理的范围内，您需要寻找提高模型分数的方法。
- en: Let’s explore how we can improve the model quality by using more data and experimenting
    with different model types and algorithms.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们探讨如何通过使用更多数据和尝试不同的模型类型和算法来提高模型质量。
- en: Model quality
  id: totrans-109
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 模型质量
- en: The first best practice is to use more data to improve the model’s quality.
    Also, you can add more training time to your model by increasing the `MAX_RUNTIME`
    parameter.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 第一项最佳实践是使用更多数据来提高模型的质量。您还可以通过增加`MAX_RUNTIME`参数来为模型增加更多训练时间。
- en: Ensure you are using a representative dataset for training and create at least
    a 10% sample for validation.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 确保您使用的是具有代表性的训练数据集，并为验证创建至少10%的样本。
- en: 'Experiment with different model types and algorithms to get the best model.
    For example, in [*Chapter 7*](B19071_07.xhtml#_idTextAnchor111), we tried two
    different algorithms for the multi-input regression models. On the first one,
    we tried linear learning and we got an MSE score of 701:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试不同的模型类型和算法以获得最佳模型。例如，在第[*第7章*](B19071_07.xhtml#_idTextAnchor111)中，我们为多输入回归模型尝试了两种不同的算法。在第一个中，我们尝试了线性学习，并得到了MSE分数为701：
- en: "![Figure 13.5 – MSE score of \uFEFFthe linear learner model type](img/B19071_13_05.jpg)"
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![图13.5 – 线性学习模型类型的MSE分数](img/B19071_13_05.jpg)'
- en: Figure 13.5 – MSE score of the linear learner model type
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.5 – 线性学习模型类型的MSE分数
- en: 'When we ran it again without specifying the model type, SageMaker Autopilot
    chose XGBoost as the model type and it gave a better MSE score of **0.711260**:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们再次运行它而没有指定模型类型时，SageMaker Autopilot选择了XGBoost作为模型类型，并给出了更好的MSE分数**0.711260**：
- en: '![Figure 13.6 – MSE score of XGBoost model type](img/B19071_13_06.jpg)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
  zh: '![图13.6 – XGBoost模型类型的MSE分数](img/B19071_13_06.jpg)'
- en: Figure 13.6 – MSE score of XGBoost model type
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.6 – XGBoost模型类型的MSE分数
- en: Model explainability
  id: totrans-118
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 模型可解释性
- en: The second best practice is to use the explainability report to better understand
    which inputs to your model carried the most weight.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个最佳实践是使用可解释性报告来更好地了解哪些输入到你的模型中承载了最多的权重。
- en: 'Run the following SQL command in Query Editor v2:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 在Query Editor v2中运行以下SQL命令：
- en: '[PRE21]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'This returns Shapley values for the inputs used to train the model:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 这返回了用于训练模型的输入的Shapley值：
- en: '[PRE22]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: You will notice that `list_ticket_price` has the highest value of `36.364` –
    this means it was the highest weighted input. You can experiment by removing the
    input columns with very low weights as inputs to your model training. Check to
    see whether you still get the same approximate model score by removing unnecessary
    columns for the training input and helping improve training times.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 你会注意到`list_ticket_price`具有最高的值**36.364** – 这意味着它是权重最高的输入。你可以通过移除模型训练中权重非常低的输入列来实验。检查通过移除不必要的训练输入列是否仍然得到相同的近似模型分数，并有助于提高训练时间。
- en: Probabilities
  id: totrans-125
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 概率
- en: For classification problems, leverage the built-in function that is generated
    so that you can see the probability of a given prediction. Refer to [*Chapter
    5*](B19071_05.xhtml#_idTextAnchor068) for detailed examples of this.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 对于分类问题，利用生成的内置函数，你可以看到给定预测的概率。有关此功能的详细示例，请参阅[*第5章*](B19071_05.xhtml#_idTextAnchor068)。
- en: Let’s now take a look at some useful notebooks that are generated by Amazon
    SageMaker Autopilot.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们来看看由Amazon SageMaker Autopilot生成的有用笔记本。
- en: Using SageMaker Autopilot notebooks
  id: totrans-128
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用SageMaker Autopilot笔记本
- en: 'Your Autopilot job generates a data exploration notebook and a candidate definition
    notebook. To view these notebooks, follow these steps:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 你的Autopilot作业生成一个数据探索笔记本和一个候选定义笔记本。要查看这些笔记本，请按照以下步骤操作：
- en: 'In the AWS console, search for `SageMaker`, then choose **Amazon SageMaker**:'
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在AWS控制台中，搜索“SageMaker”，然后选择**Amazon SageMaker**：
- en: '![Figure 13.7 – Choosing Amazon SageMaker](img/B19071_13_07.jpg)'
  id: totrans-131
  prefs: []
  type: TYPE_IMG
  zh: '![图13.7 – 选择Amazon SageMaker](img/B19071_13_07.jpg)'
- en: Figure 13.7 – Choosing Amazon SageMaker
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.7 – 选择Amazon SageMaker
- en: 'Then, choose **Studio**:'
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，选择**Studio**：
- en: '![Figure 13.8 – Choosing Studio](img/B19071_13_08.jpg)'
  id: totrans-134
  prefs: []
  type: TYPE_IMG
  zh: '![图13.8 – 选择Studio](img/B19071_13_08.jpg)'
- en: Figure 13.8 – Choosing Studio
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.8 – 选择Studio
- en: 'Next, choose **Open Studio**:'
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，选择**Open Studio**：
- en: '![Figure 13.9 – Choosing Open Studio](img/B19071_13_09.jpg)'
  id: totrans-137
  prefs: []
  type: TYPE_IMG
  zh: '![图13.9 – 选择Open Studio](img/B19071_13_09.jpg)'
- en: Figure 13.9 – Choosing Open Studio
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.9 – 选择Open Studio
- en: 'Next, choose **AutoML**:'
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，选择**AutoML**：
- en: '![Figure 13.10 – Choosing AutoML](img/B19071_13_10.jpg)'
  id: totrans-140
  prefs: []
  type: TYPE_IMG
  zh: '![图13.10 – 选择AutoML](img/B19071_13_10.jpg)'
- en: Figure 13.10 – Choosing AutoML
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.10 – 选择AutoML
- en: 'After you choose **AutoML**, the following screen will show up:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 选择**AutoML**后，以下屏幕将显示：
- en: '![Figure 13.11 – List of model names](img/B19071_13_11.jpg)'
  id: totrans-143
  prefs: []
  type: TYPE_IMG
  zh: '![图13.11 – 模型名称列表](img/B19071_13_11.jpg)'
- en: Figure 13.11 – List of model names
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.11 – 模型名称列表
- en: 'Choose the model name you want to evaluate. You can get this by using the AutoML
    job name from your `SHOW MODEL` output. In this example, I used `SHOW MODEL` on
    the `predict_ticket_price_auto` model:'
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择你想要评估的模型名称。你可以通过使用`SHOW MODEL`输出的AutoML作业名称来获取它。在这个例子中，我在`predict_ticket_price_auto`模型上使用了`SHOW
    MODEL`：
- en: "![Figure 13.12 – \uFEFFThe SHOW MODEL output](img/B19071_13_12.jpg)"
  id: totrans-146
  prefs: []
  type: TYPE_IMG
  zh: '![图13.12 – SHOW MODEL输出](img/B19071_13_12.jpg)'
- en: Figure 13.12 – The SHOW MODEL output
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.12 – SHOW MODEL输出
- en: 'You will see output like this:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 你将看到如下输出：
- en: '![Figure 13.13 – AutoML best model](img/B19071_13_13.jpg)'
  id: totrans-149
  prefs: []
  type: TYPE_IMG
  zh: '![图13.13 – AutoML最佳模型](img/B19071_13_13.jpg)'
- en: Figure 13.13 – AutoML best model
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.13 – AutoML最佳模型
- en: In *Figure 13**.13*, you can see a list of models that were trained, and the
    *best* model is highlighted. This also shows the objective of **Mse**, the values,
    and which algorithm was used, and there are links to view the model details, the
    candidate generation notebook, and the data exploration notebook.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 在**图13**.13中，您可以查看已训练的模型列表，其中*最佳*模型被突出显示。这还显示了**Mse**的目标、值以及所使用的算法，并且有链接可以查看模型详情、候选生成笔记本和数据探索笔记本。
- en: 'Click on **View model details** – this is another way you can see feature importance
    or explainability:'
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**查看模型详情** – 这是您查看特征重要性或可解释性的另一种方式：
- en: '![Figure 13.14 – Feature importance](img/B19071_13_14.jpg)'
  id: totrans-153
  prefs: []
  type: TYPE_IMG
  zh: '![图13.14 – 特征重要性](img/B19071_13_14.jpg)'
- en: Figure 13.14 – Feature importance
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.14 – 特征重要性
- en: 'You can also see the hyperparameters used by SageMaker Autopilot:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以查看SageMaker Autopilot使用的超参数：
- en: '![Figure 13.15 – Hyperparameters](img/B19071_13_15.jpg)'
  id: totrans-156
  prefs: []
  type: TYPE_IMG
  zh: '![图13.15 – 超参数](img/B19071_13_15.jpg)'
- en: Figure 13.15 – Hyperparameters
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.15 – 超参数
- en: 'Now, try clicking on **Open data** **exploration notebook**:'
  id: totrans-158
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，尝试点击**打开数据** **探索笔记本**：
- en: '![Figure 13.16 – Data exploration report](img/B19071_13_16.jpg)'
  id: totrans-159
  prefs: []
  type: TYPE_IMG
  zh: '![图13.16 – 数据探索报告](img/B19071_13_16.jpg)'
- en: Figure 13.16 – Data exploration report
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.16 – 数据探索报告
- en: This will show you the data exploration report and you can see things such as
    **Target Analysis**, **Feature Summary**, **Duplicate Rows**, and other statistics.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 这将向您展示数据探索报告，您可以看到诸如**目标分析**、**特征摘要**、**重复行**和其他统计数据。
- en: 'Here is what `predict_ticket_price_auto` model:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 这是`predict_ticket_price_auto`模型：
- en: '![Figure 13.17 – Target Analysis](img/B19071_13_17.jpg)'
  id: totrans-163
  prefs: []
  type: TYPE_IMG
  zh: '![图13.17 – 目标分析](img/B19071_13_17.jpg)'
- en: Figure 13.17 – Target Analysis
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.17 – 目标分析
- en: 'To learn more about the data exploration notebook, you may refer to this link:
    [https://docs.aws.amazon.com/sagemaker/latest/dg/autopilot-data-exploration-report.html](https://docs.aws.amazon.com/sagemaker/latest/dg/autopilot-data-exploration-report.html).'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多关于数据探索笔记本的信息，您可以参考此链接：[https://docs.aws.amazon.com/sagemaker/latest/dg/autopilot-data-exploration-report.html](https://docs.aws.amazon.com/sagemaker/latest/dg/autopilot-data-exploration-report.html)。
- en: 'Now, click on **Open candidate** **generation notebook**:'
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，点击**打开候选** **生成笔记本**：
- en: '![Figure 13.18 – Candidate definition notebook](img/B19071_13_18.jpg)'
  id: totrans-167
  prefs: []
  type: TYPE_IMG
  zh: '![图13.18 – 候选定义笔记本](img/B19071_13_18.jpg)'
- en: Figure 13.18 – Candidate definition notebook
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.18 – 候选定义笔记本
- en: This notebook contains information about the processing steps, algorithms, and
    hyperparameters. To learn more about using the candidate generation notebook,
    refer to [https://docs.aws.amazon.com/sagemaker/latest/dg/autopilot-candidate-generation-notebook.html](https://docs.aws.amazon.com/sagemaker/latest/dg/autopilot-candidate-generation-notebook.html).
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 这个笔记本包含了处理步骤、算法和超参数的信息。要了解更多关于使用候选生成笔记本的信息，请参阅[https://docs.aws.amazon.com/sagemaker/latest/dg/autopilot-candidate-generation-notebook.html](https://docs.aws.amazon.com/sagemaker/latest/dg/autopilot-candidate-generation-notebook.html)。
- en: Summary
  id: totrans-170
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, you learned techniques to operationalize your models in Amazon
    Redshift ML.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您学习了在Amazon Redshift ML中实现模型的技术。
- en: We discussed how you can create a version of your model. This is important to
    track the quality of your model over time and to be able to run inferences with
    different versions.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 我们讨论了您如何创建模型的一个版本。这很重要，可以跟踪您模型的质量随时间的变化，并能够使用不同版本进行推理。
- en: We then showed you how to optimize your Redshift ML models for accuracy and
    how you can use the notebooks generated by Amazon SageMaker Autopilot to deepen
    your understanding of tasks that Autopilot is performing.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 我们向您展示了如何优化您的Redshift ML模型以提高准确性，以及您如何使用Amazon SageMaker Autopilot生成的笔记本来加深对Autopilot执行的任务的理解。
- en: 'We hope you have found this book useful. Our goal when we set out to write
    this book was to help you gain confidence in these main areas:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 我们希望您觉得这本书有用。我们开始写这本书的目标是帮助您在这些主要领域获得信心：
- en: Gaining a better understanding of machine learning and how to use it to solve
    everyday business problems
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 深入了解机器学习以及如何将其用于解决日常业务问题。
- en: Implementing an end-to-end serverless architecture for ingestion, analytics,
    and machine learning using Redshift Serverless and Redshift ML
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Redshift Serverless和Redshift ML实现端到端的无服务器架构，用于数据摄取、分析和机器学习。
- en: Creating supervised and unsupervised models, and various techniques to influence
    your model
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建监督和非监督模型，以及各种影响您模型的技术
- en: Running inference queries at scale in Redshift to solve a variety of business
    problems using models created with Redshift ML or natively in Amazon SageMaker
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Redshift中进行大规模推理查询，以使用Redshift ML或直接在Amazon SageMaker中创建的模型解决各种商业问题
- en: We thank you very much for your time and investment in reading this book. We
    would welcome your feedback on how we can make Redshift and Redshift ML better.
    You can find us on LinkedIn.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 我们非常感谢您花时间阅读这本书，并欢迎您就如何使Redshift和Redshift ML变得更好提供反馈。您可以在LinkedIn上找到我们。
