- en: Chapter 7. Building Recommendation Systems for Businesses
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第7章. 为企业构建推荐系统
- en: '*"By leveraging Azure Machine Learning and the Recommendations API, we have
    launched a new Personalized Commerce Experience for retailers that grows shopper
    conversion and engagement on any channel."*'
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: “通过利用Azure机器学习和推荐API，我们为零售商推出了一种新的个性化商业体验，这有助于在任何渠道上增加购物者的转化率和参与度。”
- en: ''
  id: totrans-2
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: – Frank Kouretas, Chief Product Officer at Orckestra
  id: totrans-3
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: – Frank Kouretas，Orckestra的首席产品官
- en: In the previous chapter, we covered the remaining language APIs. In this chapter,
    we will look at the Recommendations Solution template. This is a template for
    Microsoft Azure that contains the resources required to run Recommendations Solution.
    This is a solution well suited for e-commerce applications, where you can recommend
    different items based on different criteria. Recommending items in an online store
    is a process that can be very time-consuming if it is done by following a rule
    set. The Recommendations Solution allows us to utilize the power of machine learning
    to get good recommendations, potentially increasing the number of sales.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们介绍了剩余的语言API。在本章中，我们将探讨推荐解决方案模板。这是一个包含运行推荐解决方案所需资源的Microsoft Azure模板。这是一个非常适合电子商务应用的解决方案，您可以根据不同的标准推荐不同的商品。在在线商店中，如果按照规则集进行推荐，这个过程可能会非常耗时。推荐解决方案允许我们利用机器学习的力量获得良好的推荐，从而可能增加销售额。
- en: 'This chapter will cover the following topics:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Deploying the Recommendations Solution template
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 部署推荐解决方案模板
- en: Training the recommendation model
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 训练推荐模型
- en: Consuming recommendations
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 消费推荐
- en: Providing personalized recommendations
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 提供个性化推荐
- en: If you run an e-commerce site, a feature that is nice for your customers to
    have is recommendations. Using the Recommendation Solution, you can easily add
    this. Utilizing Microsoft Azure Machine Learning, the API can be trained to recognize
    items that should be recommended.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您运营一个电子商务网站，一个对客户来说很棒的功能就是推荐。使用推荐解决方案，您可以轻松地添加这个功能。利用Microsoft Azure机器学习，API可以被训练以识别应该被推荐的商品。
- en: 'There are two common scenarios for recommendations, as follows:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 推荐有两种常见的场景，如下所示：
- en: '**Item-to-Item Recommendations (I2I)**: I2I is the scenario where certain items
    are often viewed after other items. Typically, this will be in the form of *people
    who visited this item also visited this other item*.'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**商品到商品推荐（I2I）**：I2I是某些商品经常在查看其他商品之后的场景。通常，这将以“访问此商品的访客也访问了此其他商品”的形式出现。'
- en: '**Customer-to-Item Recommendations (U2I)**: U2I is the scenario where you utilize
    a customer''s previous actions to recommend items. If you sell movies, for example,
    then you can recommend other movies based on a customer''s previous movie choices.'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**客户到商品推荐（U2I）**：U2I是利用客户的先前行为来推荐商品的场景。例如，如果您销售电影，那么您可以根据客户的先前电影选择推荐其他电影。'
- en: 'The general steps to use the Recommendation Solution are as follows:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 使用推荐解决方案的一般步骤如下：
- en: Deploy the template in Azure
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Azure中部署模板
- en: Import the catalog data (the items in your e-commerce site)
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入目录数据（您的电子商务网站中的商品）
- en: Import usage data
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入使用数据
- en: Train a recommendation model
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 训练推荐模型
- en: Consume recommendations
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 消费推荐
- en: If you have not already done so, you should sign up for an API key at [https://portal.azure.com](https://portal.azure.com).
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您还没有这样做，您应该在 [https://portal.azure.com](https://portal.azure.com) 注册一个API密钥。
- en: Deploying the Recommendation Solution template in Azure
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在Azure中部署推荐解决方案模板
- en: To deploy the Recommendations Solution, you must have an active Microsoft Azure
    subscription.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 要部署推荐解决方案，您必须有一个有效的Microsoft Azure订阅。
- en: 'Head over to [https://github.com/Microsoft/Product-Recommendations/tree/master/deploy](https://github.com/Microsoft/Product-Recommendations/tree/master/deploy)
    to start the deployment. Click on **Deploy to Azure**, as shown in the following
    screenshot:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 转到 [https://github.com/Microsoft/Product-Recommendations/tree/master/deploy](https://github.com/Microsoft/Product-Recommendations/tree/master/deploy)
    开始部署。点击如图所示的“部署到Azure”：
- en: '![Deploying the Recommendation Solution template in Azure](img/B12373_07_01.jpg)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![在Azure中部署推荐解决方案模板](img/B12373_07_01.jpg)'
- en: 'This will take you to the following page in Microsoft Azure:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 这将带您进入 Microsoft Azure 的以下页面：
- en: '![Deploying the Recommendation Solution template in Azure](img/B12373_07_02.jpg)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![在Azure中部署推荐解决方案模板](img/B12373_07_02.jpg)'
- en: Enter the required information, accept the terms and conditions, and click on
    **Purchase**. This will start the process of deploying the required resources
    for the Recommendations Solution.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 输入所需信息，接受条款和条件，然后点击 **购买**。这将开始部署推荐解决方案所需资源的流程。
- en: After a few minutes, the deployment is done. You are now ready to upload data
    to train a model.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 几分钟后，部署完成。现在您可以上传数据以训练模型。
- en: Importing catalog data
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 导入目录数据
- en: With the solution deployed, we can add catalog data. This is where you would
    typically add items from your database. Items need to be uploaded as files. The
    files need to be in CSV format.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 部署解决方案后，我们可以添加目录数据。通常，您会在这里添加数据库中的项目。项目需要作为文件上传。文件需要是 CSV 格式。
- en: 'The following table describes the data that is required for each item in your
    catalog:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表格描述了您目录中每个项目所需的数据：
- en: '| Name | Description |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 描述 |'
- en: '| --- | --- |'
  id: totrans-33
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| Item ID | A unique identifier for a given item |'
  id: totrans-34
  prefs: []
  type: TYPE_TB
  zh: '| 项目 ID | 给定项目的唯一标识符 |'
- en: '| Item name | The name of the item |'
  id: totrans-35
  prefs: []
  type: TYPE_TB
  zh: '| 项目名称 | 项目的名称 |'
- en: '| Item category | The category for the item, such as hardware, software, book
    genre, and so on |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '| 项目类别 | 项目的类别，例如硬件、软件、书籍类型等 |'
- en: 'In addition, there are a few data fields that are optional. These are described
    in the following table:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，还有一些可选的数据字段。这些字段在以下表格中进行了描述：
- en: '| Name | Description |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 描述 |'
- en: '| --- | --- |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| Description | A description of the item |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
  zh: '| 描述 | 项目的描述 |'
- en: '| Feature list | A comma-separated feature list that can enhance recommendations
    |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
  zh: '| 功能列表 | 一个以逗号分隔的功能列表，可以增强推荐 |'
- en: 'A file that has all the data included may have items that look like the following:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 包含所有数据的文件可能包含如下所示的项目：
- en: '[PRE0]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: It is typically better to add features as this improves the recommendations.
    Any new item that has little usage is unlikely to be recommended if no features
    exist.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，添加功能会更好，因为这可以提高推荐的质量。如果不存在任何功能，那么使用率较低的新项目不太可能被推荐。
- en: Features should be categorical. This means that a feature can be a price range.
    A price alone would not serve as a good feature.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 功能应该是分类的。这意味着一个功能可以是一个价格范围。单独的价格不会作为一个好的功能。
- en: You can add up to 20 features per item. When a catalog containing features for
    items is uploaded, you need to perform a rank build. This will rank each feature,
    where features of a higher ranking will typically be better to use.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以为每个项目添加多达 20 个功能。当上传包含项目功能的目录时，您需要执行排名构建。这将为每个功能进行排名，通常排名较高的功能更适合使用。
- en: The code example for this chapter contains a sample catalog. We will use this
    for the following example. Alternatively, you can download some data from Microsoft
    from [http://aka.ms/RecoSampleData](http://aka.ms/RecoSampleData). We want to
    use the data from `MsStoreData.zip`.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的代码示例包含一个示例目录。我们将使用此目录作为以下示例。或者，您可以从 Microsoft 下载一些数据，[http://aka.ms/RecoSampleData](http://aka.ms/RecoSampleData)。我们想使用
    `MsStoreData.zip` 中的数据。
- en: 'With the files downloaded, we can upload the catalog to our storage. This can
    be done by heading to your newly created storage account and creating a new blob
    container for the catalog, as shown in the following screenshot:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 下载完文件后，我们可以将目录上传到我们的存储中。这可以通过前往您新创建的存储帐户并为目录创建一个新的 blob 容器来完成，如下面的截图所示：
- en: '![Importing catalog data](img/B12373_07_03.jpg)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![导入目录数据](img/B12373_07_03.jpg)'
- en: Click on **Upload**, browse to the sample files you downloaded, and choose the
    `catalog.csv` file. This will upload the catalog.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 点击 **上传**，浏览到您下载的样本文件，并选择 `catalog.csv` 文件。这将上传目录。
- en: Note
  id: totrans-51
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 备注
- en: Note that the catalog file is not required, but it is recommended that you upload
    it in order to supply it to the model.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，目录文件不是必需的，但建议您上传它，以便将其提供给模型。
- en: The maximum number of items in a catalog is 100,000\. Any given catalog file
    cannot be larger than 200 MB. If your file is larger, and you still have more
    items, you can upload several files.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 目录中的项目最大数量为 100,000。任何给定的目录文件都不能超过 200 MB。如果您的文件更大，并且您还有更多项目，您可以上传多个文件。
- en: Importing usage data
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 导入使用数据
- en: The next step we need to make is to upload usage data. This is a file describing
    all the transactions from your customers in the past. The file contains rows,
    with transactions, where each transaction is a comma-separated line containing
    data.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个步骤是我们需要上传使用数据。这是一个描述您过去客户所有交易的文件。文件包含行，其中每行是一个包含数据的逗号分隔行，表示交易。
- en: 'The required data fields are as follows:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 必需的数据字段如下：
- en: '| Name | Description |'
  id: totrans-57
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 描述 |'
- en: '| --- | --- |'
  id: totrans-58
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| User ID | A unique identifier for each customer |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '| 用户ID | 每个客户的唯一标识符 |'
- en: '| Item ID | A unique identifier for items that correlate to the catalog |'
  id: totrans-60
  prefs: []
  type: TYPE_TB
  zh: '| 项目ID | 与目录相关联的项目唯一标识符 |'
- en: '| Time | The time of the transaction |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '| 时间 | 交易时间 |'
- en: In addition, it is possible to have a field called `Event`. This describes the
    type of transaction. The allowed values for this field are `Click`, `RecommendationClick`,
    `AddShopCart`, `RemoveShopCart`, and `Purchase`.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，还可以有一个名为`Event`的字段。这描述了交易类型。此字段的允许值是`Click`、`RecommendationClick`、`AddShopCart`、`RemoveShopCart`和`Purchase`。
- en: 'Given the preceding example from the catalog, a line in the usage file may
    look as follows:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 根据目录中的先前示例，用法文件中的一行可能如下所示：
- en: '[PRE1]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The maximum file size for a usage file is 200 MB.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 用法文件的最大文件大小为200 MB。
- en: The quality of recommendations relies on the amount of usage data. Typically,
    you should have about 20 transactions registered per item. This means that if
    you have 100 items in the catalog, you should aim for 2,000 transactions in the
    usage file.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 推荐质量依赖于使用数据的数量。通常，你应该为每个项目注册大约20笔交易。这意味着如果你在目录中有100个项目，你应该在用法文件中争取达到2,000笔交易。
- en: Note that the current maximum number of transactions that the API accepts is
    5 million. If new transactions are added above this maximum, the oldest data will
    be deleted.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，当前API接受的交易最大数量为500万。如果新增交易超过此最大值，最旧的数据将被删除。
- en: Again, you can find an example usage file at [http://aka.ms/RecoSampleData](http://aka.ms/RecoSampleData).
    Create another blob container called `usage` and click on **Upload**. Upload all
    the usage files from the sample folder.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 再次，你可以在[http://aka.ms/RecoSampleData](http://aka.ms/RecoSampleData)找到示例用法文件。创建另一个名为`usage`的blob容器，然后点击**上传**。上传样本文件夹中的所有用法文件。
- en: Training a model
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 训练模型
- en: With the catalog and usage data in place, it is time to train a model.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 在目录和用法数据就绪后，是时候训练一个模型了。
- en: Starting to train
  id: totrans-71
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 开始训练
- en: To start a training process, we need to make an API call to an endpoint on the
    newly created app service. This can be done using a tool, such as Postman, or
    through your own application. We will use Postman for the purposes of this book.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始训练过程，我们需要向新创建的应用服务上的端点发起API调用。这可以使用工具，如Postman，或通过您自己的应用程序完成。我们将使用Postman来完成本书的目的。
- en: Note
  id: totrans-73
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 备注
- en: To download Postman, please visit [https://www.getpostman.com/](https://www.getpostman.com/).
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 下载Postman，请访问[https://www.getpostman.com/](https://www.getpostman.com/)。
- en: 'The training process can be started by sending a POST request to the following
    URL:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过向以下URL发送POST请求来开始训练过程：
- en: '[PRE2]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The request must include a header, `x-api-key`, with your API key. It must also
    include another header, `Content-Type`, which should be set to `application/json`.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 请求必须包含一个头信息，`x-api-key`，包含你的API密钥。它还必须包含另一个头信息，`Content-Type`，应设置为`application/json`。
- en: 'In addition, the request must contain a body containing the following:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，请求必须包含包含以下内容的正文：
- en: '| Property | Mandatory | Description |'
  id: totrans-79
  prefs: []
  type: TYPE_TB
  zh: '| 属性 | 必需 | 描述 |'
- en: '| --- | --- | --- |'
  id: totrans-80
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| `description` | No | Textual description. |'
  id: totrans-81
  prefs: []
  type: TYPE_TB
  zh: '| `description` | 否 | 文本描述。 |'
- en: '| `blobContainerName` | Yes | Name of the blob container where the catalog
    and usage data are stored. |'
  id: totrans-82
  prefs: []
  type: TYPE_TB
  zh: '| `blobContainerName` | 是 | 存储目录和用法数据的blob容器的名称。 |'
- en: '| `usageRelativePath` | Yes | Relative path to either a virtual directory that
    contains the usage file(s) or a specific usage file to be used for training. |'
  id: totrans-83
  prefs: []
  type: TYPE_TB
  zh: '| `usageRelativePath` | 是 | 要用于训练的虚拟目录（包含用法文件）或特定用法文件的相对路径。 |'
- en: '| `catalogFileRelativePath` | No | Relative path to the catalog file. |'
  id: totrans-84
  prefs: []
  type: TYPE_TB
  zh: '| `catalogFileRelativePath` | 否 | 目录文件的相对路径。 |'
- en: '| `evaluationUsageRelativePath` | No | Relative path to either a virtual directory
    that contains the usage file(s) or to a specific usage file to be used for evaluation.
    |'
  id: totrans-85
  prefs: []
  type: TYPE_TB
  zh: '| `evaluationUsageRelativePath` | 否 | 要用于评估的虚拟目录（包含用法文件）或特定用法文件的相对路径。 |'
- en: '| `supportThreshold` | No | How conservative the model is, measured in the
    number of cooccurrences of items to be considered for modeling. |'
  id: totrans-86
  prefs: []
  type: TYPE_TB
  zh: '| `supportThreshold` | 否 | 模型保守程度，以建模要考虑的项目共现次数衡量。 |'
- en: '| `cooccurrenceUnit` | No | Indicates how to group usage events before counting
    cooccurrence. |'
  id: totrans-87
  prefs: []
  type: TYPE_TB
  zh: '| `cooccurrenceUnit` | 否 | 指示在计数共现之前如何分组使用事件。 |'
- en: '| `similarityFunction` | No | Defines the similarity function to be used. Can
    be Jaccard, Cooccurrence, or Lift. |'
  id: totrans-88
  prefs: []
  type: TYPE_TB
  zh: '| `similarityFunction` | 否 | 定义要使用的相似度函数。可以是Jaccard、Cooccurrence或Lift。 |'
- en: '| `enableColdItemPlacement` | No | This will be either `true` or `false`. Indicates
    whether recommendations should push cold items via feature similarity. |'
  id: totrans-89
  prefs: []
  type: TYPE_TB
  zh: '| `enableColdItemPlacement` | 否 | 这将是 `true` 或 `false`。指示是否应通过特征相似性推送冷项目。|'
- en: '| `enableColdToColdRecommendations` | No | This will be either `true` or `false`.
    Indicates whether or not the similarity between pairs of cold items should be
    calculated. |'
  id: totrans-90
  prefs: []
  type: TYPE_TB
  zh: '| `enableColdToColdRecommendations` | 否 | 这将是 `true` 或 `false`。指示是否应计算冷项目对之间的相似性。|'
- en: '| `enableUserAffinity` | No | This will be either `true` or `false`. Defines
    whether the event type and time of event should be considered as inputs to the
    result. |'
  id: totrans-91
  prefs: []
  type: TYPE_TB
  zh: '| `enableUserAffinity` | 否 | 这将是 `true` 或 `false`。定义是否应将事件类型和时间作为结果的输入。|'
- en: '| `enableBackfilling` | No | This will be either `true` or `false`. This will
    backfill with popular items if not enough relevant items are returned. |'
  id: totrans-92
  prefs: []
  type: TYPE_TB
  zh: '| `enableBackfilling` | 否 | 这将是 `true` 或 `false`。如果没有足够的相关项返回，这将使用热门项进行回填。|'
- en: '| `allowSeedItemsInRecommendations` | No | This will be either `true` or `false`.
    Determines whether input items can be returned as results. |'
  id: totrans-93
  prefs: []
  type: TYPE_TB
  zh: '| `allowSeedItemsInRecommendations` | 否 | 这将是 `true` 或 `false`。确定输入项是否可以作为结果返回。|'
- en: '| `decayPeriodInDays` | No | The decay period in days. The longer the time
    since an event has occurred, the less weight the event will have. |'
  id: totrans-94
  prefs: []
  type: TYPE_TB
  zh: '| `decayPeriodInDays` | 否 | 事件发生的天数衰减期。事件发生的时间越长，该事件的重要性就越低。|'
- en: '| `enableUserToItemRecommendations` | No | This will be either `true` or `false`.
    If `true`, the user ID will be taken into account when personalized recommendations
    are requested. |'
  id: totrans-95
  prefs: []
  type: TYPE_TB
  zh: '| `enableUserToItemRecommendations` | 否 | 这将是 `true` 或 `false`。如果为 `true`，则在请求个性化推荐时将考虑用户
    ID。|'
- en: 'A successful call may yield the following result:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 一个成功的调用可能会产生以下结果：|
- en: '![Starting to train](img/B12373_07_04.jpg)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![开始训练](img/B12373_07_04.jpg)|'
- en: The `id` field returned can be used to check the training status.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 返回的 `id` 字段可用于检查训练状态。|
- en: Verifying the completion of training
  id: totrans-99
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 验证训练完成情况|
- en: 'Using the ID returned in the previous request, we can now run a `GET` request
    to the following endpoint:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 使用前一个请求返回的 ID，我们现在可以运行一个 `GET` 请求到以下端点：|
- en: '[PRE3]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'This request requires a header, `x-api-key`, containing your API key. A successful
    request may give the following response:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 此请求需要一个包含您的 API 密钥的标题，`x-api-key`。一个成功的请求可能会给出以下响应：|
- en: '![Verifying the completion of training](img/B12373_07_05.jpg)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![验证训练完成情况](img/B12373_07_05.jpg)|'
- en: Response of GET request
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: GET 请求的响应|
- en: As you can see, a `modelStatus` field is presented. Once this is `Completed`,
    the model is trained and ready to be used. You will also be presented with statistics,
    such as the duration of training, among other details.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，有一个 `modelStatus` 字段。一旦这是 `Completed`，模型就训练完成并准备好使用。您还将看到其他详细信息，例如训练时长等统计数据。|
- en: Tip
  id: totrans-106
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士|
- en: If you prefer to use a user interface for the model training, you can visit
    https://<your_service>.azurewebsites.net/ui.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您希望使用用户界面进行模型训练，您可以访问 https://<your_service>.azurewebsites.net/ui。|
- en: Consuming recommendations
  id: totrans-108
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 消费推荐|
- en: To use the recommendation models we just created, we will create a new example
    application. Create this using the MVVM template we created previously.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用我们刚刚创建的推荐模型，我们将创建一个新的示例应用程序。使用我们之前创建的 MVVM 模板创建此应用程序。|
- en: At the time of writing, there is no client package for the recommendations API.
    This means that we need to rely on web requests, as we saw in [Chapter 6](ch06.html
    "Chapter 6. Understanding Text"), *Understanding Text*. To speed up the development
    time, copy the `WebRequest.cs` file from the example code in [Chapter 6](ch06.html
    "Chapter 6. Understanding Text"), *Understanding Text*. Paste this file into the
    `Model` folder, and make sure that you update the namespace.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 在撰写本文时，没有为推荐 API 提供客户端包。这意味着我们需要依赖网络请求，正如我们在[第 6 章](ch06.html "第 6 章。理解文本")中看到的，*理解文本*。为了加快开发时间，请从[第
    6 章](ch06.html "第 6 章。理解文本")的示例代码中复制 `WebRequest.cs` 文件。将此文件粘贴到 `Model` 文件夹中，并确保更新命名空间。|
- en: Note
  id: totrans-111
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意|
- en: Remember to add references to System.Web and System.Runtime.Serialization.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 记得添加对 System.Web 和 System.Runtime.Serialization 的引用。|
- en: As there is no need for much UI, we are going to add everything in the `MainView.xaml`
    file. We are going to need two `ComboBox` elements. These will list our recommendation
    models and catalog items. We also need a `Button` element to get the recommendations
    and a `TextBox` element to show the resultant recommendations.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 由于不需要太多的 UI，我们将所有内容添加到 `MainView.xaml` 文件中。我们需要两个 `ComboBox` 元素。这些将列出我们的推荐模型和目录项。我们还需要一个
    `Button` 元素来获取推荐和一个 `TextBox` 元素来显示结果推荐。
- en: The corresponding `ViewModel`, `MainViewModel.cs`, will need properties to correspond
    to the UI elements. Add an `ObservableCollection` of a `RecommendationModel` type
    to hold our models. We will look at the type in a bit. We need a property of a
    `RecommendationModel` type to hold the selected model. Add an `ObservableCollection`
    property of a `Product` type with a corresponding `Product` property for the available
    and selected properties. We will also need a `string` property for the results
    and an `ICommand` property for our button.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 相应的 `ViewModel`，`MainViewModel.cs`，将需要属性来对应 UI 元素。添加一个 `ObservableCollection`
    的 `RecommendationModel` 类型来保存我们的模型。我们稍后会查看这个类型。我们需要一个 `RecommendationModel` 类型的属性来保存选中的模型。添加一个
    `ObservableCollection` 属性的 `Product` 类型，以及相应的 `Product` 属性用于可用和选中的属性。我们还需要一个 `string`
    类型的属性用于结果和一个 `ICommand` 类型的属性用于我们的按钮。
- en: Add a `private` member of a `WebRequest` type so that we can call the API.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 添加一个 `private` 类型的 `WebRequest` 成员，以便我们可以调用 API。
- en: 'Add a new file called `Product` in the `Model` folder. To use the items from
    our catalog, we will load the catalog file into the application, creating a `Product`
    for each item. Ensure that `Product` looks as follows:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `Model` 文件夹中添加一个名为 `Product` 的新文件。为了使用目录中的项目，我们将加载目录文件到应用程序中，为每个项目创建一个 `Product`。确保
    `Product` 看起来如下：
- en: '[PRE4]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: We need the `Id` of an item, as well as the `Name` and the `Category`.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要一个项目的 `Id`，以及 `Name` 和 `Category`。
- en: 'The constructor should create a `WebRequest` object, as shown in the following
    code:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 构造函数应创建一个 `WebRequest` 对象，如下面的代码所示：
- en: '[PRE5]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: When we create the `WebRequest` object, we specify the recommendation endpoint
    and our API key. The `RecommendCommand` phrase is the `ICommand` object, as a
    `DelegateCommand`. We need to specify the action to be executed and the conditions
    under which we are allowed to execute the command. We should be allowed to execute
    the command if we have selected a recommendation model and a product.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们创建 `WebRequest` 对象时，我们指定推荐端点和我们的 API 密钥。`RecommendCommand` 语句是 `ICommand`
    对象，作为一个 `DelegateCommand`。我们需要指定要执行的操作以及允许执行命令的条件。如果我们已选中推荐模型和产品，我们应该可以执行该命令。
- en: 'The `Initialize` phrase will make sure that we fetch our recommendation models
    and products, as shown in the following code:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '`Initialize` 语句将确保我们获取我们的推荐模型和产品，如下面的代码所示：'
- en: '[PRE6]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The `GetModels` method will make a call to the API, as shown in the following
    code:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '`GetModels` 方法将调用 API，如下面的代码所示：'
- en: '[PRE7]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: This call is a `GET` request, so we specify this in `GetModels`. A successful
    call should result in a JSON response that we then deserialize into a `RecommendationModel`
    object. This is a data contract, so add a file called `Models.cs` in a folder
    called `Contracts`.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 此调用是一个 `GET` 请求，因此在 `GetModels` 中指定这一点。成功的调用应导致一个 JSON 响应，然后我们将其反序列化为 `RecommendationModel`
    对象。这是一个数据合约，因此在一个名为 `Contracts` 的文件夹中添加一个名为 `Models.cs` 的文件。
- en: 'A successful result will give the following output:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 成功的结果将给出以下输出：
- en: '[PRE8]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: We have an array of `models`. Each item in this array has an `id`, `name`, `description`,
    `createdDateTime`, `activeBuildId`, and `catalogDisplayName`. Make sure that the
    `RecommendationModels` class contains this data.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有一个 `models` 数组。这个数组中的每个项目都有一个 `id`、`name`、`description`、`createdDateTime`、`activeBuildId`
    和 `catalogDisplayName`。确保 `RecommendationModels` 类包含这些数据。
- en: 'If the call succeeds, we add the models to the `ObservableCollection` of available
    models, as shown in the following code:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 如果调用成功，我们将模型添加到可用模型的 `ObservableCollection` 中，如下面的代码所示：
- en: '[PRE9]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: When all items are added, we set the `SelectedModel` to the first available
    option.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 当所有项目都添加后，我们将 `SelectedModel` 设置为第一个可用选项。
- en: 'To add the items from our catalog, we need to read from the catalog file. In
    the example code provided with the book, this file is added to the project and
    copied to the output directory. The `GetProducts` method will look as follows:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 要添加目录中的项目，我们需要从目录文件中读取。在书中提供的示例代码中，此文件被添加到项目中并复制到输出目录。`GetProducts` 方法将如下所示：
- en: '[PRE10]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: This is a basic file operation, reading in each line from the catalog. For each
    item, we get the required information, creating a `Product` for each item. This
    is then added to the `AvailableProducts` in the `ObservableCollection` property,
    and the `SelectedProduct` is the first available.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个基本的文件操作，从目录中读取每一行。对于每个项目，我们获取所需的信息，为每个项目创建一个`Product`。然后将其添加到`ObservableCollection`属性的`AvailableProducts`中，`SelectedProduct`是第一个可用的。
- en: 'Now that we have our recommendation models and our products, we can execute
    the recommendation request, as shown in the following code:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有了我们的推荐模型和我们的产品，我们可以执行推荐请求，如下面的代码所示：
- en: '[PRE11]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: The call to get the recommendations is a `GET` request. This requires us to
    add `itemIds`.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 获取推荐信息的调用是一个`GET`请求。这需要我们添加`itemIds`。
- en: The `itemIds` parameter must be the ID of a selected product.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '`itemIds`参数必须是所选产品的ID。'
- en: 'We call the `RecommendItem` method on the `_webRequest` object. This is a `GET`
    request, and we need to specify the ID of the `SelectedModel` in the query string.
    We also need to add a bit to the query string so that we reach the correct endpoint.
    A successful response will result in JSON output, which will look as follows:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在`_webRequest`对象上调用`RecommendItem`方法。这是一个`GET`请求，我们需要在查询字符串中指定`SelectedModel`的ID。我们还需要在查询字符串中添加一些内容，以便到达正确的端点。成功的响应将产生JSON输出，如下所示：
- en: '[PRE12]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: The result consists of an array of objects. Each item will have a `recommendedItemId`
    and a `score`. The score gives an indication of how likely a customer is to want
    the given item.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 结果由一个对象数组组成。每个项目都将有一个`recommendedItemId`和`score`。分数表示客户想要给定项目的可能性。
- en: This result should be deserialized into a list of data contracts of a `RecommandedItem`
    type, so make sure you add this in the `Contracts` folder.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 此结果应反序列化为`RecommandedItem`类型的数据契约列表，因此请确保您在`Contracts`文件夹中添加此内容。
- en: 'When we have made a successful call, we want to display this in the UI, as
    follows:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们成功调用后，我们希望在UI中显示如下：
- en: '[PRE13]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'First, we check to see whether we have any recommendations. If we do not have
    any, we will not move on. If we do have any items, we create a `StringBuilder`
    to format our output, as follows:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们检查是否有任何推荐。如果没有，我们不会继续。如果有项目，我们创建一个`StringBuilder`来格式化我们的输出，如下所示：
- en: '[PRE14]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: We loop through all the `recommendedItems`. We output the `score` and the `id`.
    This will be printed in the UI.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 我们遍历所有的`recommendedItems`。我们输出`score`和`id`。这将打印在UI上。
- en: 'A successful test run may give the following result:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 成功的测试运行可能给出以下结果：
- en: '![Consuming recommendations](img/B12373_07_06.jpg)'
  id: totrans-150
  prefs: []
  type: TYPE_IMG
  zh: '![消费推荐](img/B12373_07_06.jpg)'
- en: 'There are a few special cases to note:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 有几个特殊情况需要注意：
- en: If the item list contains a single item that does not exist in the catalog,
    then an empty result is returned
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果项目列表中只有一个不存在于目录中的项目，则返回空结果
- en: If the item list contains some items that are not in the catalog, then these
    are removed from the query
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果项目列表中包含一些不在目录中的项目，则从查询中删除这些项目
- en: If the item list contains only cold items (items that have no usage data connected
    to them), then the most popular recommendation is returned
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果项目列表中只包含冷门商品（与它们没有关联使用数据的商品），则返回最受欢迎的推荐
- en: If the item list contains some cold items, then recommendations are returned
    for the other items
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果项目列表中包含一些冷门商品，则将返回其他商品的推荐
- en: Recommending items based on prior activities
  id: totrans-156
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 基于先前活动推荐项目
- en: To make recommendations based on user activity, we need a list of users. As
    such a list would be too cumbersome to create just for an example, we will only
    look at the steps and parameters that are required to make this kind of recommendation.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 要根据用户活动进行推荐，我们需要一个用户列表。由于这样的列表仅为了示例而创建可能会过于繁琐，我们将只查看制作此类推荐所需的步骤和参数。
- en: 'The endpoint for this usage is a bit different, as it is another `GET` call.
    In code, it would look as follows:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 此用途的端点略有不同，因为它是一个另一个`GET`调用。在代码中，它将如下所示：
- en: '[PRE15]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'The parameters in the query string are as follows:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 查询字符串中的参数如下：
- en: '| Parameter | Description |'
  id: totrans-161
  prefs: []
  type: TYPE_TB
  zh: '| 参数 | 描述 |'
- en: '| --- | --- |'
  id: totrans-162
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `userId` (required) | A unique identifier of a given user. |'
  id: totrans-163
  prefs: []
  type: TYPE_TB
  zh: '| `userId` (required) | 给定用户的唯一标识符。 |'
- en: '| `numberOfResults` (required) | The number of recommendations returned. |'
  id: totrans-164
  prefs: []
  type: TYPE_TB
  zh: '| `numberOfResults` (required) | 返回的推荐数量。 |'
- en: '| `itemsIds` (optional) | A list or single ID of the selected item(s). |'
  id: totrans-165
  prefs: []
  type: TYPE_TB
  zh: '| `itemsIds` (optional) | 选定项目（的）列表或单个ID。 |'
- en: '| `includeMetadata` (optional) | If true, then the item''s metadata will be
    included. |'
  id: totrans-166
  prefs: []
  type: TYPE_TB
  zh: '| `includeMetadata` (optional) | 如果为true，则将包括项目的元数据。|'
- en: '| `buildId` (optional) | A number identifying the build we want to use. If
    none is specified, then the active build is used. |'
  id: totrans-167
  prefs: []
  type: TYPE_TB
  zh: '| `buildId` (optional) | 一个标识我们想要使用的构建的数字。如果没有指定，则使用活动构建。|'
- en: A successful call will result in the same JSON output as the other recommendation
    models. Recommended items will, of course, be based on users' past activities.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 成功的调用将产生与其他推荐模型相同的JSON输出。推荐的项目当然将基于用户的过去活动。
- en: Note
  id: totrans-169
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Note that, to be able to use this, U2I must be set to `true` when creating a
    model build.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，为了能够使用此功能，在创建模型构建时必须将U2I设置为`true`。
- en: Summary
  id: totrans-171
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we dived into the recommendations API. We learned how to set
    up recommendation models using existing catalog and usage data. Using these models,
    we learned how to utilize these in a simple example application.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们深入探讨了推荐API。我们学习了如何使用现有的目录和用法数据设置推荐模型。使用这些模型，我们学习了如何在简单的示例应用程序中利用它们。
- en: In the next chapter, we will start with the knowledge APIs. We will learn how
    to structure natural language queries and evaluate query expressions. In addition,
    we will learn how to add autocompletion to natural language queries.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将从知识API开始。我们将学习如何构建自然语言查询并评估查询表达式。此外，我们还将学习如何为自然语言查询添加自动补全功能。
