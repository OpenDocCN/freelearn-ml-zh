- en: Chapter 7. Classification Models
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第7章. 分类模型
- en: Classification is another kind of supervised machine learning. In this chapter,
    before getting into the details of building a classification model using ML Studio,
    you will start with gaining the basic knowledge about a classification algorithm
    and how a model is evaluated. Then, you will build models with different datasets
    using different algorithms.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 分类是另一种监督机器学习方法。在本章中，在深入了解使用ML Studio构建分类模型之前，您将首先了解分类算法的基本知识以及如何评估模型。然后，您将使用不同的算法和不同的数据集构建模型。
- en: Understanding classification
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解分类
- en: 'Consider you are given the following hypothetical dataset containing data of
    patients: the size of the tumor in their body, their age, and a class that justifies
    whether they are affected by cancer or not, 1 being positive (affected by cancer)
    and 0 being negative (not affected by cancer):'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 假设您得到了以下假设数据集，其中包含患者的数据：他们体内肿瘤的大小、他们的年龄以及一个类别，表示他们是否受到癌症的影响，1表示阳性（受癌症影响）和0表示阴性（不受癌症影响）：
- en: '| Age | Tumor size | Class |'
  id: totrans-4
  prefs: []
  type: TYPE_TB
  zh: '| 年龄 | 肿瘤大小 | 类别 |'
- en: '| --- | --- | --- |'
  id: totrans-5
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| 22 | 135 | 0 |'
  id: totrans-6
  prefs: []
  type: TYPE_TB
  zh: '| 22 | 135 | 0 |'
- en: '| 37 | 121 | 0 |'
  id: totrans-7
  prefs: []
  type: TYPE_TB
  zh: '| 37 | 121 | 0 |'
- en: '| 18 | 156 | 1 |'
  id: totrans-8
  prefs: []
  type: TYPE_TB
  zh: '| 18 | 156 | 1 |'
- en: '| 55 | 162 | 1 |'
  id: totrans-9
  prefs: []
  type: TYPE_TB
  zh: '| 55 | 162 | 1 |'
- en: '| 67 | 107 | 0 |'
  id: totrans-10
  prefs: []
  type: TYPE_TB
  zh: '| 67 | 107 | 0 |'
- en: '| 73 | 157 | 1 |'
  id: totrans-11
  prefs: []
  type: TYPE_TB
  zh: '| 73 | 157 | 1 |'
- en: '| 36 | 123 | 0 |'
  id: totrans-12
  prefs: []
  type: TYPE_TB
  zh: '| 36 | 123 | 0 |'
- en: '| 42 | 189 | 1 |'
  id: totrans-13
  prefs: []
  type: TYPE_TB
  zh: '| 42 | 189 | 1 |'
- en: '| 29 | 148 | 0 |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
  zh: '| 29 | 148 | 0 |'
- en: Here, the patients are classified as cancer-affected or not. A new patient comes
    in at the age 17 and is diagnosed of having a tumor the of size 149\. Now, you
    need to predict the classification of this new patient based on the previous data.
    That's classification for you as you need to predict the class of the dependent
    variable; here it is **0** or **1**—you may also think of it as true or false.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，患者被分类为受癌症影响或不受影响。一位新患者以17岁的年龄出现，并被诊断出患有大小为149的肿瘤。现在，您需要根据以前的数据预测这位新患者的分类。这就是分类，您需要预测因变量的类别；这里它是**0**或**1**——您也可以将其视为真或假。
- en: For a regression problem, you predict a number, for example, the housing price
    or a numerical value. In a classification problem, you predict a categorical value,
    though it may be represented with a number, such as **0** or **1**.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 对于回归问题，您预测一个数字，例如房价或数值。在分类问题中，您预测一个分类值，尽管它可能用数字表示，如**0**或**1**。
- en: You should not be confused between a regression and classification problem.
    Consider a case where you need to predict the housing price not as a number, but
    as categories, such as greater than 100K or less than 100K. In this case, though
    you are predicting the housing price, you are indeed predicting a class or category
    for the housing price and hence, it's a classification problem.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 您不应混淆回归和分类问题。考虑一个需要预测房价的情况，不是作为一个数字，而是作为类别，如大于10万美元或小于10万美元。在这种情况下，尽管您正在预测房价，但实际上您正在预测房价的类别或类别，因此这是一个分类问题。
- en: You build a classification model by training an algorithm with the given training
    data. In the training dataset, the class or target variable is already known.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 您通过使用给定的训练数据训练算法来构建分类模型。在训练数据集中，类别或目标变量已经已知。
- en: Evaluation metrics
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 评估指标
- en: Suppose that you have built a model and trained a classification algorithm with
    the dataset in Table 7.1 as the training data. Now, you are using the following
    table as your test data. As you can see, the last column has the predicted class.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 假设您已经构建了一个模型，并使用表7.1中的数据集作为训练数据训练了一个分类算法。现在，您正在使用以下表格作为测试数据。如您所见，最后一列显示了预测的类别。
- en: '| Age | Tumor size | Actual class | Predicted class |   |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '| 年龄 | 肿瘤大小 | 实际类别 | 预测类别 |   |'
- en: '| --- | --- | --- | --- | --- |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- |'
- en: '| 32 | 135 | 0 | 0 | TN |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| 32 | 135 | 0 | 0 | TN |'
- en: '| 47 | 121 | 0 | 1 | FP |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '| 47 | 121 | 0 | 1 | FP |'
- en: '| 28 | 156 | 1 | 0 | FN |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
  zh: '| 28 | 156 | 1 | 0 | FN |'
- en: '| 45 | 162 | 1 | 1 | TP |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '| 45 | 162 | 1 | 1 | TP |'
- en: '| 77 | 107 | 0 | 1 | FP |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
  zh: '| 77 | 107 | 0 | 1 | FP |'
- en: True positive
  id: totrans-28
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 真阳性
- en: This is the number of times an actual class was positive and was predicted as
    positive. For example, the patient is actually affected by cancer and the model
    is also predicted positive.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 这是实际类别为正且被预测为正的次数。例如，患者实际上受到癌症的影响，模型也预测为阳性。
- en: In our preceding example, there is one instance where the **Actual Class** =
    **1** and **Predicted Class** = **1**. So here, **TP** = **1**.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们前面的例子中，有一个实例，其中**实际类别** = **1**和**预测类别** = **1**。因此，这里的**TP** = **1**。
- en: False positive
  id: totrans-31
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 假阳性
- en: This is the number of times an actual class was negative and was predicted as
    positive. For example, the patient is actually *not* affected by cancer but the
    model is predicted as positive.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 这是实际类别为负且被预测为正的次数。例如，患者实际上没有受到癌症的影响，但模型预测为阳性。
- en: In our preceding example, there are two instances where the **Actual Class**
    = **0** and **Predicted Class** = **1**. So here, **FP** = **2**.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们前面的例子中，有两个实例，其中**实际类别** = **0**和**预测类别** = **1**。所以在这里，**FP** = **2**。
- en: True negative
  id: totrans-34
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 真阴性
- en: This is the number of times an actual class was negative and it was predicted
    as negative. For example, the patient is actually NOT affected by cancer and the
    model also predicted it as negative.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 这是实际类别为负且被预测为负的次数。例如，患者实际上没有受到癌症的影响，而模型也预测为阴性。
- en: In our preceding example, there was one instance where the **Actual Class**
    = **0** and **Predicted Class** = **0**. So here, **TN** = **1**.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们前面的例子中，有一个实例，其中**实际类别** = **0**和**预测类别** = **0**。所以在这里，**TN** = **1**。
- en: False negative
  id: totrans-37
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 假阴性
- en: This is the number of times an actual class was positive but was predicted as
    negative. For example, the patient is actually affected by cancer but the model
    predicted it as negative.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 这是实际类别为正但被预测为负的次数。例如，患者实际上受到癌症的影响，但模型预测为阴性。
- en: In our preceding example, there was one instance where the **Actual Class**
    = **1** and **Predicted Class** = **0**. So here, **FN** = **1**.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们前面的例子中，有一个实例，其中**实际类别** = **1**和**预测类别** = **0**。所以在这里，**FN** = **1**。
- en: 'The following table shows **TP**, **TN**, **FP**, and **FN** in a matrix:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 下表显示了矩阵中的**TP**、**TN**、**FP**和**FN**：
- en: '![False negative](img/0792EN_07_27.jpg)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![假阴性](img/0792EN_07_27.jpg)'
- en: Accuracy
  id: totrans-42
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 准确度
- en: 'It is the proportion of a true prediction to the total number of predictions.
    While true prediction is *TP + TN*, the total number of predictions are of the
    size of a test dataset, which is also *TP + TN + FP + FN*. So, accuracy can be
    represented in a formula as follows:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 这是真实预测与总预测数之比。而真实预测是*TP + TN*，总预测数是测试数据集的大小，也就是*TP + TN + FP + FN*。因此，准确度可以用以下公式表示：
- en: Accuracy = (TP + TN) / (TP + TN + FP + FN)
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 准确度 = (TP + TN) / (TP + TN + FP + FN)
- en: So in our example, *Accuracy = (1 + 1) / (1 + 1 + 2 + 1) = 2/5 = .4*.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 所以在我们的例子中，*准确度 = (1 + 1) / (1 + 1 + 2 + 1) = 2/5 = .4*。
- en: Accuracy can also be represented as a percentage of the prediction that was
    accurate. So, in our example, accuracy is 40 percent.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 准确度也可以表示为预测正确的百分比。所以，在我们的例子中，准确度是40%。
- en: Note
  id: totrans-47
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Note that the preceding figures are just for illustration of how the calculation
    is done. In practice, when you build a model, it should have an accuracy of more
    than 50 percent; otherwise, the model is no good because even a random trial will
    have 50 percent accuracy.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，前面的数字只是为了说明计算方法。在实践中，当你构建模型时，它应该有超过50%的准确度；否则，模型就不太好，因为即使是随机试验也会有50%的准确度。
- en: Precision
  id: totrans-49
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 精确度
- en: 'The positive predictive value or precision is the proportion of positive cases
    that the model has correctly identified. Precision can be represented in the formula
    form, as follows:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 阳性预测值或精确度是模型正确识别的正例的比例。精确度可以用以下公式表示：
- en: Precision = TP / (TP + FP)
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 精确度 = TP / (TP + FP)
- en: So in our example, *Precision = 1 / ( 1+1) = 1/2 = .5*.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 所以在我们的例子中，*精确度 = 1 / (1+1) = 1/2 = .5*。
- en: Recall
  id: totrans-53
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 召回率
- en: 'Sensitivity or recall is the proportion of actual positive cases that are correctly
    identified. The formula for recall is:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 灵敏度或召回率是正确识别的实际正例的比例。召回率的公式是：
- en: '*Recall = TP / (TP + FN)*'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '*召回率 = TP / (TP + FN)*'
- en: So in our example, *Recall = 1 / (1 +2) = 1/3 = .33*.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 所以在我们的例子中，*召回率 = 1 / (1 +2) = 1/3 = .33*。
- en: The F1 score
  id: totrans-57
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: F1分数
- en: 'The F1 Score can be defined as a formula, as follows:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: F1分数可以用以下公式定义：
- en: '*F1 = 2TP / (2TP + FP + FN)*'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '*F1 = 2TP / (2TP + FP + FN)*'
- en: 'The F1 Score can also be defined in terms of precision (P) and recall (R),
    as follows:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: F1分数也可以用精确度（P）和召回率（R）来定义，如下所示：
- en: '*F1 = 2PR/(P+R)*'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '*F1 = 2PR/(P+R)*'
- en: So in our example, *F1 = (1 * 2) / {(1 * 2) + 2 + 1 } = 2/ (2 + 2 +1) = 2/5
    =.4*.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 所以在我们的例子中，*F1 = (1 * 2) / {(1 * 2) + 2 + 1 } = 2/ (2 + 2 +1) = 2/5 =.4*。
- en: Threshold
  id: totrans-63
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 阈值
- en: Threshold is the value above which the threshold belongs to the first class
    and all the other values belong to the second class. For example, if the threshold
    is **0.5**, then any patient who has scored more than or equal to **0.5** is identified
    as sick; otherwise, the patient is identified as healthy. You can think of threshold
    as probability. To illustrate, if there is a probability of 80 percent or **.8**
    percent that it may rain today, then you may predict that rain for today is true.
    Similarly, if it is less than **.8**, then you can predict that it won't rain.
    So your prediction would depend on the threshold here.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 阈值是值，高于此值属于第一类，所有其他值属于第二类。例如，如果阈值是**0.5**，那么任何得分超过或等于**0.5**的患者被识别为患病；否则，患者被识别为健康。你可以把阈值看作概率。为了说明，如果有80%或**0.8**的几率今天可能会下雨，那么你可以预测今天会下雨。同样，如果小于**0.8**，那么你可以预测不会下雨。所以你的预测将取决于这里的阈值。
- en: Understanding ROC and AUC
  id: totrans-65
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 理解ROC和AUC
- en: The **receiver** **operating characteristics** (**ROC**) graph is a two-dimensional
    graph in which the true positive rate (TP) is plotted on the *y* axis and the
    false positive rate (FP) is plotted on the x axis. An ROC graph depicts the relative
    tradeoffs between benefits (true positives) and costs (false positives).
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '**接收者操作特征**（**ROC**）图是一个二维图，其中真实阳性率（TP）绘制在*y*轴上，而假阳性率（FP）绘制在x轴上。ROC图描述了收益（真实阳性）和成本（假阳性）之间的相对权衡。'
- en: The **Area Under the Curve** (**AUC**) is a portion of the area under the ROC
    curve of the unit square; its value will always be between *0* and *1*, where
    *1* is the best case or everything is predicted correctly. However, because random
    guessing produces the diagonal line between *(0, 0)* and *(1, 1)*, which has an
    area of **0.5**, no realistic classifier should have an AUC less than **0.5**.
    AUC is often used as a measure of quality of a classification model.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '**曲线下面积**（**AUC**）是单位正方形下ROC曲线下的面积部分；其值始终在*0*和*1*之间，其中*1*是最佳情况或所有预测都正确。然而，由于随机猜测产生了从*(0,
    0)*到*(1, 1)*的对角线，其面积为**0.5**，没有现实中的分类器应该有小于**0.5**的AUC。AUC通常用作分类模型质量的衡量标准。'
- en: 'In the following diagram, the blue curve shows the ROC while the area painted
    in red shows the AUC. The yellow painted diagonal line represents the random guessing:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下图中，蓝色曲线表示ROC，红色涂色的区域表示AUC。黄色涂色的对角线代表随机猜测：
- en: '![Understanding ROC and AUC](img/0792EN_07_23.jpg)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![理解ROC和AUC](img/0792EN_07_23.jpg)'
- en: Motivation for the matrix to consider
  id: totrans-70
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 考虑矩阵的动机
- en: While choosing an algorithm for your model, you will have to rely on the preceding
    metrics that are defined. Often, one metric may not be sufficient to take a decision.
    To start with, you may look at accuracy, but at times it might be deceptive. Consider
    a case where you are making a prediction for a rare disease where in reality,
    99 percent negative cases and 1 percent of positive cases appear. If your classification
    model predicts all the cases as true negatives, then the accuracy is still 99
    percent. In this case, the F1 score might be useful as it would give you a clear
    picture. AUC might also be useful for this.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 当选择模型算法时，你将不得不依赖于之前定义的指标。通常，一个指标可能不足以做出决定。首先，你可能查看准确率，但有时它可能具有误导性。考虑这样一个案例，你正在为一个罕见疾病做出预测，实际上，99%是阴性病例，1%是阳性病例。如果你的分类模型预测所有病例为真正的阴性，那么准确率仍然是99%。在这种情况下，F1分数可能是有用的，因为它会给你一个清晰的画面。AUC也可能是有用的。
- en: Consider another scenario. Let's stick to our disease prediction example. Suppose
    you are predicting whether a patient has cancer or not. If you predict a false
    case (where the patient is NOT affected by the disease) as true, it's a false
    positive case. In the practical scenario, after such a prediction, the patient
    will have further medical tests to manually declare as not affected by cancer.
    However, if you have a predicted true case (where the patient is actually affected
    by the disease) as false, then it's a false negative case. In practical scenarios,
    after such a prediction, the patient is left free and allowed to go home without
    medication. This might be dangerous as the patient might lose life. You may never
    like to make such a prediction. In such a scenario, as in this story, you may
    reduce the threshold value to reduce the chance of releasing any true positive
    cases. Hence, it would result in higher recall and lower precision.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑另一种场景。让我们继续我们的疾病预测示例。假设您正在预测一个患者是否患有癌症。如果您将一个假病例（患者实际上未受疾病影响）预测为真，那么这是一个假阳性病例。在实际场景中，在这样一个预测之后，患者将进行进一步的医学检查，手动声明未受癌症影响。然而，如果您将一个预测为真的病例（患者实际上受疾病影响）预测为假，那么这是一个假阴性病例。在实际场景中，在这样一个预测之后，患者被允许自由离开并允许不带药物回家。这可能是危险的，因为患者可能会失去生命。您可能永远不会喜欢做出这样的预测。在这种情况下，就像这个故事一样，您可能会降低阈值值以减少释放任何真阳性病例的机会。因此，这将导致更高的召回率和更低的精确度。
- en: In the scenario opposite to the preceding, say you have a classification model
    to predict the fraud for an online transaction. Here, predicting a case as fraud,
    (which is actually not—a case of false positive) may result in poor customer satisfaction.
    So in this scenario, you may increase the threshold value and hence it would result
    in higher precision and lower recall.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在前一个场景相反的情况下，比如说您有一个用于预测在线交易欺诈的分类模型。在这里，将一个案例预测为欺诈（实际上不是——一个假阳性案例）可能会导致客户满意度下降。因此，在这种情况下，您可能会提高阈值值，这将导致更高的精确度和更低的召回率。
- en: As you may find from the preceding definition, the F1 score is a balanced approach
    for measurement, which involves both precision and recall.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 如您从前面的定义中可能发现的，F1分数是一种平衡的测量方法，它涉及精确度和召回率。
- en: When you are not too worried about precision and recall or you are not so sure
    about them, you can just follow the value of AUC (the higher the better). Many
    find AUC the best way to measure the performance of a classification model. AUC
    also provides a graphical representation. However, it is always a good idea to
    take a note of more than one metric.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 当您不太担心精确度和召回率，或者您对它们不太确定时，您可以直接遵循AUC（越高越好）的值。许多人认为AUC是衡量分类模型性能的最佳方式。AUC还提供了一个图形表示。然而，始终注意记录多个指标是一个好主意。
- en: Training, scoring, and evaluating modules
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 训练、评分和评估模块
- en: As with regression problems, which you saw in the previous chapter, with classification
    problems, you can start with an algorithm and train it with data. You can then
    score ideally with the test data and evaluate the performance of the model.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 与您在上一章中看到的回归问题一样，对于分类问题，您可以从一个算法开始，并用数据对其进行训练。然后，您可以使用测试数据评分，并评估模型的性能。
- en: Navigate to the **Train** | **Score** | **Evaluate** option on the screen.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 在屏幕上导航到**训练**|**评分**|**评估**选项。
- en: The **Train**, **Score**, and **Evaluate** modules are the same as you used
    for regression. The **Train** module requires the name of the target (class) variable.
    The **Evaluate** module generates evaluation metrics for classification.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '**训练**、**评分**和**评估**模块与你在回归中使用的相同。**训练**模块需要目标（类别）变量的名称。**评估**模块为分类生成评估指标。'
- en: If you want to tune parameters of an algorithm by parameter sweeping, you can
    use the same **Sweep Parameters** module.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想通过参数扫描调整算法的参数，你可以使用相同的**扫描参数**模块。
- en: Classifying diabetes or not
  id: totrans-81
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 是否对糖尿病进行分类
- en: 'The **Pima Indians Diabetes Binary Classification dataset** module is present
    as a sample dataset in ML Studio. It contains all of the data of female patients
    of the same age belonging to Pima Indian heritage. The data includes medical data,
    such as glucose and insulin levels, as well as lifestyle factors of the patients.
    The columns in the dataset are as follows:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '**皮马印第安人糖尿病二分类数据集**模块作为样本数据集存在于ML Studio中。它包含属于皮马印第安人血统的相同年龄的女性患者的所有数据。数据包括医疗数据，如葡萄糖和胰岛素水平，以及患者的生活方式因素。数据集中的列如下：'
- en: Number of times pregnant
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 怀孕次数
- en: Plasma glucose concentration of 2 hours in an oral glucose tolerance test
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 口服葡萄糖耐量测试2小时血浆葡萄糖浓度
- en: Diastolic blood pressure (mm Hg)
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 舒张压（毫米汞柱）
- en: Triceps skin fold thickness (mm)
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 三头肌皮肤褶皱厚度（毫米）
- en: 2-hour serum insulin (mu U/ml)
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 2小时血清胰岛素（微单位/毫升）
- en: Body mass index (weight in kg/(height in m)^2)
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 体质指数（体重（千克）/身高（米）的平方）
- en: Diabetes pedigree function
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 糖尿病家系函数
- en: Age (years)
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 年龄（年）
- en: Class variable (0 or 1)
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 类别变量（0或1）
- en: The last column is the target variable or class variable that takes the value
    0 or 1, where 1 is positive or affected by diabetes and 0 means that the patient
    is not affected.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一列是目标变量或类别变量，其值为0或1，其中1表示阳性或受糖尿病影响，0表示患者未受影响。
- en: You have to build models that could predict whether a patient has diabetes or
    tests positive or not.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 你必须构建模型来预测患者是否患有糖尿病或测试结果为阳性。
- en: Two-class bayes point machine
  id: totrans-94
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 双类贝叶斯点机
- en: Two-class Bayes Point Machine is a simple-to-train yet powerful linear classifier.
    We will build our first classification model using it.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 双类贝叶斯点机是一种易于训练且功能强大的线性分类器。我们将使用它来构建我们的第一个分类模型。
- en: Start a new experiment. On the left-hand side module palette on the screen,
    expand the **Saved Datasets** option, scroll down, and drag the **Pima Indians
    Diabetes Binary Classification dataset** module to the canvas. Alternatively,
    you could just type `pima` in the search box to locate the module and then drag
    it.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 开始一个新的实验。在屏幕左侧的模块调色板中，展开**保存的数据集**选项，向下滚动，并将**皮马印第安人糖尿病二分类数据集**模块拖放到画布上。或者，您也可以在搜索框中键入`pima`以定位模块，然后将其拖动。
- en: Right-click on its output port and click on the **Visualize** option to explore
    the dataset. You can note that it now has 768 rows and 9 columns.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 右键单击其输出端口，然后单击**可视化**选项以探索数据集。您会注意到它现在有768行和9列。
- en: You have to split this dataset into two to prepare your train and test dataset.
    So, drag the **Split** module to the canvas and connect the output of the dataset
    module to the input of the **Split** module. Set **0.8** as the parameter; the
    **Fraction of rows** option is the first output dataset that splits itself in
    the ratio of 80:20 to get your train and test dataset, respectively.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 您必须将此数据集分成两部分以准备训练和测试数据集。因此，将**分割**模块拖放到画布上，并将数据集模块的输出连接到**分割**模块的输入。将**0.8**作为参数；**行分数**选项是第一个输出数据集，它以80:20的比例分割自身，以分别获得您的训练和测试数据集。
- en: Drag the **Two-Class Bayes Point Machine** module, which you can find by navigating
    to **Machine Learning** | **Initialize Model** | **Classification** on the left-hand
    side module's palette to the canvas.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 将**双类贝叶斯点机**模块拖放到画布上，您可以通过在左侧模块调色板中导航到**机器学习** | **初始化模型** | **分类**来找到该模块。
- en: This module has three parameter values to set. The **Number of training iterations**
    module is the value that decides the number of times the algorithm iterates over
    the dataset. The default value **30** is sufficient most of the time. The **Include
    bias** checkbox if ticked or set to true, adds a constant feature or bias to each
    instance in training and prediction. The default value is true and it is required
    to be true most of the time. The last parameter, **Allow unknown values in categorical
    features**, if ticked or set to true, creates an additional level for each categorical
    column. Any levels in the test dataset not available in the training dataset are
    mapped to this additional level. Unless you are doing the required data preprocessing,
    it is suggested that you tick this or leave it at the default value.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 此模块有三个参数值需要设置。**训练迭代次数**模块是决定算法在数据集上迭代次数的值。默认值**30**在大多数情况下是足够的。如果勾选**包含偏差**复选框或设置为true，则在每个训练和预测实例中添加一个常数特征或偏差。默认值是true，在大多数情况下需要设置为true。最后一个参数，如果勾选**允许分类特征中的未知值**或设置为true，将为每个分类列创建一个额外的级别。测试数据集中未在训练数据集中出现的任何级别都将映射到这个额外级别。除非您正在进行所需的数据预处理，否则建议您勾选此选项或保留默认值。
- en: '![Two-class bayes point machine](img/0792EN_07_26.jpg)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![双类贝叶斯点机](img/0792EN_07_26.jpg)'
- en: 'Drag the **Train Model** module to the canvas and connect the output port of
    the **Two-Class Bayes Point Machine** module to the first input port of the **Train
    Model** module. Connect the first output port of the **Split** module to the second
    input of the **Train Model** module. In the properties pane for the **Train Model**
    module, click on the **Launch column selector** button and when the pop-up appears,
    set **Class variable (0 or 1)** as the column''s target variable, as shown in
    the following screenshot:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 将**训练模型**模块拖动到画布上，并将**双类贝叶斯点机**模块的输出端口连接到**训练模型**模块的第一个输入端口。将**分割**模块的第一个输出端口连接到**训练模型**模块的第二个输入。在**训练模型**模块的属性面板中，点击**启动列选择器**按钮，当弹出窗口出现时，将**类变量（0或1）**设置为列的目标变量，如下面的截图所示：
- en: '![Two-class bayes point machine](img/0792EN_07_13.jpg)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![双类贝叶斯点机](img/0792EN_07_13.jpg)'
- en: 'Next, drag the **Score Model** and **Evaluate Model** modules to the canvas.
    Connect the output of the **Train Model** module to the first input of the **Score
    Model** module and the second output of the **Split** module to the second input
    of the **Score Model** module. Then, connect the output of the **Score Model**
    module to the first input of the **Evaluate Model** module. Let''s take a look
    at the following screenshot:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，将**得分模型**和**评估模型**模块拖动到画布上。将**训练模型**模块的输出连接到**得分模型**模块的第一个输入，将**分割**模块的第二个输出连接到**得分模型**模块的第二个输入。然后，将**得分模型**模块的输出连接到**评估模型**模块的第一个输入。让我们看看下面的截图：
- en: '![Two-class bayes point machine](img/0792EN_07_14.jpg)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![双类贝叶斯点机](img/0792EN_07_14.jpg)'
- en: 'Click on **RUN** and run the experiment. When it finishes (after all the modules
    gets a green tick mark), right-click on the output of the **Evaluate Model** module
    and click on the **Visualize** option to view the **Evaluation Results**, as shown
    in the following screenshot:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 点击**运行**并运行实验。当它完成后（所有模块都得到绿色勾号后），右键单击**评估模型**模块的输出，并点击**可视化**选项来查看**评估结果**，如下面的截图所示：
- en: '![Two-class bayes point machine](img/0792EN_07_15.jpg)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![双类贝叶斯点机](img/0792EN_07_15.jpg)'
- en: By default, the graph shows the ROC curve. The more area it covers, the better
    the model performs. This is represented by the matric AUC. AUC, as you can find
    here, is **0.788**.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，图表显示ROC曲线。它覆盖的面积越大，模型的性能越好。这由矩阵AUC表示。AUC，如你在这里可以看到的，是**0.788**。
- en: Note the **Threshold** scrollbar, which is set to **0.51** at the moment, which
    is **0.5** by default. You can increase or decrease it by dragging it to the left
    or right. As you change the value of threshold, all the other metrics apart from
    AUC get changed. The reason is obvious because when there are changes to the value
    of true positive and true negative, the rest of the values change. At the current
    value, the **Threshold** (**0.51**) **Accuracy** option is set at **77.9** percent.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 注意**阈值**滚动条，目前设置为**0.51**，默认值为**0.5**。你可以通过将其拖动到左边或右边来增加或减少它。当你改变阈值值时，除了AUC之外的所有指标都会改变。原因很明显，因为当真实正例和真实负例的值发生变化时，其余的值也会变化。在当前值下，**阈值**（**0.51**）的**准确度**选项设置为**77.9**百分比。
- en: You can also view the graph for precision/recall and lift by clicking on the
    respective tab at the top-left corner of the screen.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以通过点击屏幕左上角相应的标签来查看精确度/召回率和提升图。
- en: Two-class neural network with parameter sweeping
  id: totrans-111
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 带参数扫描的双类神经网络
- en: We will use the same diabetes dataset that we used to build the model using
    the neural network and to tune the parameter by parameter sweeping.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用与使用神经网络构建模型和通过参数扫描调整参数相同的糖尿病数据集。
- en: Create a new experiment. Drag and connect the same dataset to the **Split**
    module, as you did in the previous section. Set **0.8** as the parameter; **Fraction
    of rows** in the first output dataset is split into 80-20 to get your train and
    test dataset, respectively.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个新的实验。将相同的数据集拖动并连接到**分割**模块，就像你在上一节中所做的那样。将**0.8**设置为参数；第一个输出数据集的**行分数**分为80-20，以获得你的训练集和测试集。
- en: 'Type `Sweep` in the search box in the modules palette to the left of the screen
    and when the **Sweep Parameters** module appears, drag it to the canvas. Then,
    join the first output of the **Split** module to the second input of the **Sweep
    Parameters** module and join the second output of the **Split** module to the
    third input of the **Sweep Parameters** module. Let''s take a look at the following
    screenshot:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 在屏幕左侧的模块面板中的搜索框中输入`Sweep`，当**扫描参数**模块出现时，将其拖动到画布上。然后，将**分割**模块的第一个输出连接到**扫描参数**模块的第二个输入，并将**分割**模块的第二个输出连接到**扫描参数**模块的第三个输入。让我们看看下面的截图：
- en: '![Two-class neural network with parameter sweeping](img/0792EN_07_16.jpg)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![具有参数扫描的双类神经网络](img/0792EN_07_16.jpg)'
- en: Now, you need to set the column of the dataset that is your target or label
    or class column for which you will train a model to make a prediction. In this
    case, **Class variable (0 or 1)** is the target variable or class for which you
    are going to make a prediction. Also, set the sweeping mode to **Entire grid**
    and **Metric for measure the performance for Classification** to **Accuracy**.
    Ignore the other parameter as this is a classification problem.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你需要设置数据集的列，它是你的目标或标签或类别列，你将训练一个模型来进行预测。在这种情况下，**类别变量（0或1）**是你要进行预测的目标变量或类别。同时，将扫描模式设置为**整个网格**，将**用于分类性能度量的指标**设置为**准确率**。忽略其他参数，因为这是一个分类问题。
- en: Type `Two-Class Neural Network` in search box at the top of the modules palette
    to the left and drag the **Two-Class Neural Network** module to the canvas. Connect
    it to the first input of the **Sweep Parameters** module. As usual, drag the **Score
    Model** and **Evaluate Model** modules to the canvas and make the necessary connections.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 在左侧模块面板顶部的搜索框中输入`Two-Class Neural Network`，并将**双类神经网络**模块拖动到画布上。将其连接到**扫描参数**模块的第一个输入。像往常一样，将**评分模型**和**评估模型**模块拖动到画布上，并建立必要的连接。
- en: Connect the second output port of the **Sweep Parameters** module to the first
    input port of the **Score Model** module and connect the second output of the
    **Split** module to the second input of the **Score Model** module. Then, connect
    the output of the **Score Model** module to the first input of the **Evaluate
    Model** module.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 将**扫描参数**模块的第二个输出端口连接到**评分模型**模块的第一个输入端口，并将**分割**模块的第二个输出连接到**评分模型**模块的第二个输入。然后，将**评分模型**模块的输出连接到**评估模型**模块的第一个输入。
- en: 'Run the experiment. Let''s take a look at the following screenshot:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 运行实验。让我们看看下面的截图：
- en: '![Two-class neural network with parameter sweeping](img/0792EN_07_17.jpg)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
  zh: '![具有参数扫描的双类神经网络](img/0792EN_07_17.jpg)'
- en: As the experiment finishes running, visualize the output of the **Evaluate Model**
    module to measure the performance of the model. Note the AUC and accuracy metrics.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 当实验运行完成后，可视化**评估模型**模块的输出以衡量模型的性能。注意AUC和准确率指标。
- en: 'While using parameter sweeping to find the best parameters for the model, it
    is a good practice to use a separate dataset to score and evaluate the prediction
    than what is used for training and parameter tuning. To illustrate the point,
    you can split your dataset into 60 percent and 40 percent. Then, use another split
    module to split the 40 percent (the second dataset) into 50 percent each. So now,
    you have three datasets containing 60 percent, 20 percent, and 20 percent of your
    original dataset. Then, use the first 60 percent and 20 percent for the **Sweep
    Parameters** module and the rest 20 percent for scoring and evaluation. Let''s
    take a look at the following screenshot:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用参数扫描来寻找模型的最佳参数时，使用一个单独的数据集来评分和评估预测结果，而不是用于训练和参数调整的数据集，这是一个好的实践。为了说明这一点，你可以将你的数据集分成60%和40%。然后，使用另一个分割模块将40%（第二个数据集）分成各50%。现在，你有了三个数据集，分别包含原始数据集的60%、20%和20%。然后，使用前60%和20%用于**扫描参数**模块，其余20%用于评分和评估。让我们看看下面的截图：
- en: '![Two-class neural network with parameter sweeping](img/0792EN_07_25.jpg)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
  zh: '![具有参数扫描的双类神经网络](img/0792EN_07_25.jpg)'
- en: Predicting adult income with decision-tree-based models
  id: totrans-124
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用基于决策树的模型预测成人收入
- en: 'ML Studio comes with three decision-tree-based algorithms for two-class classification:
    the **Two-Class Decision Forest**, **Two-Class Boosted Decision Tree**, and **Two-Class
    Decision Jungle** modules. These are known as ensemble models where more than
    one decision trees are assembled to obtain better predictive performance. Though
    all the three are based on decision trees, their underlying algorithms differ.'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: ML Studio提供了三个用于双分类的基于决策树的算法：**双分类决策森林**、**双分类提升决策树**和**双分类决策丛林**模块。这些被称为集成模型，其中多个决策树被组合起来以获得更好的预测性能。尽管这三个都是基于决策树的，但它们的底层算法不同。
- en: We will first build a model with the **Two-Class Decision Forest** module and
    then compare it with the **Two-Class Boosted Decision Tree** module for the **Adult
    Census Income Binary Classification dataset** module, which is one of the sample
    datasets available in ML Studio. The dataset is a subset of the 1994 US census
    database and contains the demographic information of working adults over the 16
    years age limit. Each instance or example in the dataset has a label or class
    variable that states whether a person earns 50K a year or not.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将首先使用**双分类决策森林**模块构建一个模型，然后将其与**双分类提升决策树**模块进行比较，该模块用于**成人人口普查收入二分类数据集**，这是ML
    Studio中可用的样本数据集之一。该数据集是1994年美国人口普查数据库的子集，包含超过16岁年龄限制的在职成人的人口统计信息。数据集中的每个实例或示例都有一个标签或类变量，表示一个人是否每年赚50K。
- en: 'Create an experiment and drag the dataset from the **Saved Datasets** group
    in the module palette. Right-click on the output port and click on **Visualize**
    to explore the dataset. When you click on the different columns, you can find
    that these columns contain a large number of missing values: **workclass**, **occupation**,
    and **native-country**. Other columns don''t have missing values. Let''s take
    a look at the following screenshot:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个实验，将模块调色板中的**已保存数据集**组中的数据集拖到画布上。右键单击输出端口，然后单击**可视化**以探索数据集。当您单击不同的列时，可以发现这些列包含大量缺失值：**workclass**、**occupation**和**native-country**。其他列没有缺失值。让我们看一下以下截图：
- en: '![Predicting adult income with decision-tree-based models](img/0792EN_07_18.jpg)'
  id: totrans-128
  prefs: []
  type: TYPE_IMG
  zh: '![使用基于决策树的模型预测成人收入](img/0792EN_07_18.jpg)'
- en: Though it would still work, if you still build models with missing values, we
    would get rid of these columns in our models. Missing values may impact the predicted
    result.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管如果仍然使用含有缺失值的模型仍然可以工作，但我们会在模型中去除这些列。缺失值可能会影响预测结果。
- en: 'In the search box, type `Project` and drag the **Project Columns** module to
    the canvas. Connect the dataset module to this module. On the properties pane,
    click on the **Launch Column Selector** module, so that the pop-up columns selector
    comes up. As you can see in the following screenshot, begin with all the columns
    and exclude the columns with the missing values: **workclass**, **occupation**,
    and **native-country**:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 在搜索框中输入“项目”，将**项目列**模块拖到画布上。将数据集模块连接到该模块。在属性面板中，单击**启动列选择器**模块，以便弹出列选择器。如图所示，从所有列开始，排除具有缺失值的列：**workclass**、**occupation**和**native-country**：
- en: '![Predicting adult income with decision-tree-based models](img/0792EN_07_19.jpg)'
  id: totrans-131
  prefs: []
  type: TYPE_IMG
  zh: '![使用基于决策树的模型预测成人收入](img/0792EN_07_19.jpg)'
- en: Expand the **Data Transformation** group and then expand the **Sample and Split**
    option in the modules palette and drag the **Split** module to the canvas. Set
    the **Fraction of rows** parameter in the first output dataset to **0.8** and
    leave the others at their default values. You are splitting the dataset so that
    80 percent of the data will be used to train and rest 20 percent will be used
    for test.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 展开**数据转换**组，然后在模块调色板中展开**样本和拆分**选项，将**拆分**模块拖到画布上。将第一个输出数据集的**行分数**参数设置为**0.8**，其余的保留默认值。您正在拆分数据集，以便80%的数据将用于训练，其余20%将用于测试。
- en: Likewise, now drag the **Two-Class Decision Forest** module to the canvas. Type
    `Decision Forest` in the search box in the modules palette to the left and when
    the module appears, drag it to the canvas. Set the **Resampling method** property
    to **Bagging** and leave the rest of the parameters at their default values. Leave
    the module with the default values for the properties.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，现在将**双分类决策森林**模块拖到画布上。在模块调色板左侧的搜索框中输入“决策森林”，当模块出现时，将其拖到画布上。将**重采样方法**属性设置为**Bagging**，其余参数保留默认值。保留模块的默认属性值。
- en: Drag a **Train Model** module to the canvas and connect the output port of the
    **Two-Class Decision Forest** module to the first input port of the **Train Model**
    module. Connect the first output port of the **Split** module to the second input
    of the **Train Model** module. In the properties pane for the **Train** module,
    click on the **column selector** option and set **income** as the column's target
    variable.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 将**训练模型**模块拖动到画布上，并将**双分类决策森林**模块的输出端口连接到**训练模型**模块的第一个输入端口。将**分割**模块的第一个输出端口连接到**训练模型**模块的第二个输入端口。在**训练**模块的属性面板中，点击**列选择器**选项，将**收入**设置为列的目标变量。
- en: Next, drag the **Score Model** and **Evaluate Model** modules to the canvas.
    Connect the output of the **Train Model** module to the first input of the **Score
    Model** module and connect the second output of the **Split** module to the second
    input of the **Score Model** module. Then, connect the output of the **Score Model**
    module to the first input of the **Evaluate Model** module.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，将**评分模型**和**评估模型**模块拖动到画布上。将**训练模型**模块的输出连接到**评分模型**模块的第一个输入端口，并将**分割**模块的第二个输出端口连接到**评分模型**模块的第二个输入端口。然后，将**评分模型**模块的输出连接到**评估模型**模块的第一个输入端口。
- en: 'Run the experiment and after its successful execution, visualize the evaluation
    result. Let''s take a look at the following screenshot:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 运行实验，并在其成功执行后，可视化评估结果。让我们看一下下面的截图：
- en: '![Predicting adult income with decision-tree-based models](img/0792EN_07_20.jpg)'
  id: totrans-137
  prefs: []
  type: TYPE_IMG
  zh: '![使用基于决策树的模型预测成人收入](img/0792EN_07_20.jpg)'
- en: As with any experiment, you can now compare your model with another algorithm.
    You built a model using the **Two-Class Decision Forest** module. Now, use another
    algorithm, such as the **Two-Class Boosted Decision Tree** module and evaluate
    it.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 就像任何实验一样，你现在可以比较你的模型与另一个算法。你使用**双分类决策森林**模块构建了一个模型。现在，使用另一个算法，例如**双分类提升决策树**模块，并对其进行评估。
- en: To do so, start with the experiment and select the **Train** and **Score** modules
    by pressing *ctrl* on your keyboard and clicking on both the modules. Then, copy
    the selected modules and paste them on the canvas by right-clicking on them and
    pasting them or just by pressing *ctrl* + *v* on your keyboard. It supports copy
    paste much like any other MS product, for example, MS Word.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 要这样做，首先从实验开始，通过按键盘上的*ctrl*键并点击两个模块来选择**训练**和**评分**模块。然后，通过右键单击它们并粘贴或直接按键盘上的*ctrl*
    + *v*来复制选定的模块，并将它们粘贴到画布上。它支持复制粘贴，就像任何其他MS产品一样，例如MS Word。
- en: 'Now, click anywhere on the canvas to unselect the pasted modules and rearrange
    them so that no module is placed on another and all are readable. Remove the connection
    between the **Two-Class Decision Forest** and the **Train Model** modules by selecting
    them and pressing *Delete*. Drag the **Two-Class Boosted Decision Tree** module
    from the left-hand side palette, to the canvas and connect the output of the module
    to the **Train Model** module. Leave it at the default property values. Connect
    the output of the **Score Model** module to the second input of the **Evaluate
    Model** module and run the experiment. Let''s take a look at the following screenshot:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，点击画布上的任何位置以取消选择粘贴的模块，并重新排列它们，以确保没有模块放置在另一个模块上，并且所有模块都易于阅读。通过选择它们并按*Delete*键来删除**双分类决策森林**和**训练模型**模块之间的连接。从左侧调色板中将**双分类提升决策树**模块拖动到画布上，并将模块的输出连接到**训练模型**模块。保留默认属性值。将**评分模型**模块的输出连接到**评估模型**模块的第二个输入端口，并运行实验。让我们看一下下面的截图：
- en: '![Predicting adult income with decision-tree-based models](img/0792EN_07_21.jpg)'
  id: totrans-141
  prefs: []
  type: TYPE_IMG
  zh: '![使用基于决策树的模型预测成人收入](img/0792EN_07_21.jpg)'
- en: After the successful run, right-click on the output port of the **Evaluate Model**
    module and click on **Visualize** to find the evaluation result of the two models
    on a single canvas.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 在成功运行后，右键单击**评估模型**模块的输出端口，并点击**可视化**以在单个画布上找到两个模型的评估结果。
- en: '![Predicting adult income with decision-tree-based models](img/0792EN_07_22.jpg)'
  id: totrans-143
  prefs: []
  type: TYPE_IMG
  zh: '![使用基于决策树的模型预测成人收入](img/0792EN_07_22.jpg)'
- en: As you can see in the preceding graph, with the current settings, the model
    with the **Two-Class Boosted Decision Tree** module has higher values than the
    other when you see the AUC and accuracy figures.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 如前图所示，在当前设置下，当您看到AUC和准确度数值时，**双分类提升决策树**模块的模型值比其他模型更高。
- en: So, we know that it is performing better than the other one.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们知道它的表现比其他模型更好。
- en: Do it yourself – comparing models to choose the best
  id: totrans-146
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 自己动手 – 比较模型以选择最佳模型
- en: 'You have already tried two algorithms for the **Adult Census Income Binary
    Classification dataset** module. Now, try another two modules to choose the best
    one for your final model: the **Two-Class Boosted Decision Tree** and the **Two-Class
    Neural Network** modules. Try out different parameters; use the **Sweep Parameters**
    module to optimize the parameters for the algorithms. The following screenshot
    is just for your reference—your experiment might differ. You may also try this
    with other available algorithms, for example, the **Two-Class Averaged Perceptron**
    or the **Two-Class Logistic** **Regression** modules to find the best model. Let''s
    take a look at the following screenshot:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 您已经尝试了 **Adult Census Income Binary Classification 数据集模块** 的两种算法。现在，尝试另外两个模块以选择最适合您最终模型的模块：**双类提升决策树**和**双类神经网络**模块。尝试不同的参数；使用**参数扫描**模块来优化算法的参数。以下截图仅供参考——您的实验可能会有所不同。您还可以尝试其他可用的算法，例如**双类平均感知器**或**双类逻辑回归**模块以找到最佳模型。让我们看一下以下截图：
- en: '![Do it yourself – comparing models to choose the best](img/0792EN_07_11.jpg)'
  id: totrans-148
  prefs: []
  type: TYPE_IMG
  zh: '![自己动手 – 比较模型以选择最佳](img/0792EN_07_11.jpg)'
- en: Multiclass classification
  id: totrans-149
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 多类分类
- en: 'The classification you have seen and experienced so far is a two-class classification
    where the target variable can be of two classes. In multiclass classification,
    you classify in more than two classes, for example continuing on our hypothetical
    tumor problem, for a given tumor size and age of a patient, you might predict
    one of these three classes as the possibility of a patient being affected with
    cancer: High, Medium, and Low. In theory, a target variable can have any number
    of classes.'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 您迄今为止所见和经历的分类是二类分类，其中目标变量可以是两类。在多类分类中，您将分类超过两类，例如，继续我们的假设肿瘤问题，对于一个特定肿瘤大小和患者年龄，您可能会预测以下三个类别之一作为患者患癌症的可能性：高、中、低。理论上，目标变量可以有任意数量的类别。
- en: Evaluation metrics – multiclass classification
  id: totrans-151
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 评估指标 – 多类分类
- en: 'ML Studio lets you evaluate your model with an accuracy that is calculated
    as a ratio of the number of correct predictions versus the incorrect ones. Consider
    the following table:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: ML Studio 允许您使用以下公式计算模型的准确率：正确预测的数量与错误预测的数量之比。请参考以下表格：
- en: '| Age | Tumor size | Actual class | Predicted class |'
  id: totrans-153
  prefs: []
  type: TYPE_TB
  zh: '| 年龄 | 肿瘤大小 | 实际类别 | 预测类别 |'
- en: '| --- | --- | --- | --- |'
  id: totrans-154
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- |'
- en: '| 32 | 135 | Low | Medium |'
  id: totrans-155
  prefs: []
  type: TYPE_TB
  zh: '| 32 | 135 | 低 | 中等 |'
- en: '| 47 | 121 | Medium | Medium |'
  id: totrans-156
  prefs: []
  type: TYPE_TB
  zh: '| 47 | 121 | 中等 | 中等 |'
- en: '| 28 | 156 | Medium | High |'
  id: totrans-157
  prefs: []
  type: TYPE_TB
  zh: '| 28 | 156 | 中等 | 高 |'
- en: '| 45 | 162 | High | High |'
  id: totrans-158
  prefs: []
  type: TYPE_TB
  zh: '| 45 | 162 | 高 | 高 |'
- en: '| 77 | 107 | Medium | Medium |'
  id: totrans-159
  prefs: []
  type: TYPE_TB
  zh: '| 77 | 107 | 中等 | 中等 |'
- en: 'The following can be the evaluation metrics where in the columns, the text
    is marked in bold and have background colors according to the accuracy per class.
    For example, there were three actual classes as Medium, but only two were correctly
    predicted, so *accuracy = 2/ 3 = 66.6 %*. It also shows that 33.3 percent of the
    Medium class was inaccurately predicted as High. This is also known as the confusion
    matrix. Let''s take a look at the following table:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 以下可以是评估指标，其中列中的文本以粗体标记，并根据每个类别的准确率具有背景颜色。例如，有三个实际类别为中等，但只有两个被正确预测，因此*准确率 = 2/3
    = 66.6%*。它还显示33.3%的中等类别被错误地预测为高。这也被称为混淆矩阵。让我们看一下以下表格：
- en: '| Predicted Actual | Low | Medium | High |'
  id: totrans-161
  prefs: []
  type: TYPE_TB
  zh: '| 预测实际 | 低 | 中等 | 高 |'
- en: '| --- | --- | --- | --- |'
  id: totrans-162
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- |'
- en: '| **Low** | 0 (0 percent) | 1 (100 percent) |   |'
  id: totrans-163
  prefs: []
  type: TYPE_TB
  zh: '| **低** | 0 (0%) | 1 (100%) |   |'
- en: '| **Medium** |   | 2 (66.6 percent) | 1(33.3 percent) |'
  id: totrans-164
  prefs: []
  type: TYPE_TB
  zh: '| **中等** |   | 2 (66.6%) | 1 (33.3%) |'
- en: '| **High** |   |   | 1 (100 percent) |'
  id: totrans-165
  prefs: []
  type: TYPE_TB
  zh: '| **高** |   |   | 1 (100%) |'
- en: Multiclass classification with the Iris dataset
  id: totrans-166
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Iris 数据集进行的多类分类
- en: 'The **Iris** dataset is one of the classic and simple datasets. It contains
    the observations about the Iris plant. Each instance has four features: the sepal
    length, sepal width, petal length, and petal width. All the measurements are in
    centimeters. The dataset contains three classes for the target variable, where
    each class refers to a type of Iris plant: **Iris Setosa**, **Iris Versicolour**,
    and **Iris Virginica**.'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: '**Iris** 数据集是经典且简单的数据集之一。它包含了关于 Iris 花的观察数据。每个实例有四个特征：萼片长度、萼片宽度、花瓣长度和花瓣宽度。所有测量值都是以厘米为单位。数据集包含三个目标变量的类别，每个类别代表一种
    Iris 花的类型：**Iris Setosa**、**Iris Versicolour** 和 **Iris Virginica**。'
- en: You can find more information on this dataset at [http://archive.ics.uci.edu/ml/datasets/Iris](http://archive.ics.uci.edu/ml/datasets/Iris).
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在[http://archive.ics.uci.edu/ml/datasets/Iris](http://archive.ics.uci.edu/ml/datasets/Iris)找到关于这个数据集的更多信息。
- en: As this dataset is not present as a sample dataset in ML Studio, you need to
    import it to ML Studio using a reader module before building any model on it.
    Note that the **Iris dataset** present in the **Saved Dataset** section is the
    subset of the original dataset and is only present for two classes.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 由于这个数据集在ML Studio中不是作为样本数据集存在的，你需要在构建任何模型之前使用读取模块将其导入ML Studio。请注意，**Saved Dataset**部分中的**Iris数据集**是原始数据集的子集，并且只包含两个类别。
- en: Multiclass decision forest
  id: totrans-170
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 多类决策森林
- en: Decision forest is also available for multiclass classification. We will first
    use this with parameter sweep to train the model.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 决策森林也适用于多类分类。我们将首先使用参数扫描来训练模型。
- en: 'Follow the given steps to import the Iris dataset:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 按照给定的步骤导入Iris数据集：
- en: Go to ML Studio. Click on the **+NEW** button and choose **Blank Experiment**.
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往ML Studio。点击**+NEW**按钮并选择**Blank Experiment**。
- en: From the modules palette, find the **Reader** module under the **Data Input
    and Output** group and drag it to the experiment canvas.
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从模块面板中，在**Data Input and Output**组下找到**Reader**模块并将其拖拽到实验画布上。
- en: The module properties pane is displayed after this. Choose the data source as
    **HTTP**.
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此后显示模块属性面板。选择数据源为**HTTP**。
- en: 'Specify a complete URL: [http://archive.ics.uci.edu/ml/machine-learning-databases/iris/iris.data](http://archive.ics.uci.edu/ml/machine-learning-databases/iris/iris.data).'
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 指定一个完整的URL：[http://archive.ics.uci.edu/ml/machine-learning-databases/iris/iris.data](http://archive.ics.uci.edu/ml/machine-learning-databases/iris/iris.data)。
- en: Specify the data format as **CSV**.
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将数据格式指定为**CSV**。
- en: Don't tick the checkbox for the header row, as the dataset does not contain
    any header. You might end up with something as follows:![Multiclass decision forest](img/0792EN_07_01.jpg)
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 不要勾选标题行复选框，因为数据集不包含任何标题。你可能会得到如下结果：![多类决策森林](img/0792EN_07_01.jpg)
- en: Run the experiment and when you see the green tick mark on the **Reader** module,
    right-click on the output port and click on **Visualize**. Clicking on any column,
    you can notice that ML Studio shows a missing value.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 运行实验，当你看到**Reader**模块上的绿色勾选标记时，右键点击输出端口并点击**Visualize**。点击任何一列，你可以注意到ML Studio显示了一个缺失值。
- en: 'Use the **Clean Missing Data** module to remove the row containing the missing
    value. Drag the module that can be found under the **Data Transformation** group
    and then under **Manipulation** in the modules palette to the canvas. Connect
    the output port of the **Reader** module to the input port of this module. On
    the properties pane, choose **Remove entire row** for the property for **Cleaning
    mode**, as shown in the following screenshot:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 使用**Clean Missing Data**模块来删除包含缺失值的行。将可以在**Data Transformation**组下，然后在模块面板的**Manipulation**下找到的模块拖拽到画布上。将**Reader**模块的输出端口连接到该模块的输入端口。在属性面板上，选择**Cleaning
    mode**的属性为**Remove entire row**，如图所示：
- en: '![Multiclass decision forest](img/0792EN_07_02.jpg)'
  id: totrans-181
  prefs: []
  type: TYPE_IMG
  zh: '![多类决策森林](img/0792EN_07_02.jpg)'
- en: Expand the **Data Transformation** group and then expand the **Sample and Split**
    option in the modules palette and drag the **Split** module to the canvas. Set
    the **Fraction of rows** parameter in the first output dataset to **0.7** and
    leave the others at their default values. You are splitting the dataset so that
    70 percent of the data will be used to train and the other 30 percent will be
    used for test.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 展开**Data Transformation**组，然后在模块面板中展开**Sample and Split**选项，并将**Split**模块拖拽到画布上。将第一个输出数据集的**Fraction
    of rows**参数设置为**0.7**，其余的保持默认值。这样你就在分割数据集，使得70%的数据将用于训练，其余的30%将用于测试。
- en: Likewise, now drag the **Multiclass Decision Forest** module to canvas. To do
    so, type `Decision Forest` in the search box in the modules palette to the left
    and when the module appears, drag it to the canvas. Set the **Resampling method**
    property to **Bagging** and leave the rest of the properties at their default
    values. Leave the module with the default values for the properties.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，现在将**Multiclass Decision Forest**模块拖拽到画布上。要做到这一点，在左侧模块面板的搜索框中输入`Decision
    Forest`，当模块出现时，将其拖拽到画布上。将**Resampling method**属性设置为**Bagging**，其余属性保持默认值。保持模块的属性为默认值。
- en: Drag a **Train Model** module to the canvas and connect the output port of the
    **Multiclass Decision Forest** module to the first input port of the **Train Model**
    module. Connect the first output port of the **Split** module to the second input
    of the **Train Medel** module. In the properties pane for the **Train Model**
    module, click on the column selector and set **Col5** as the column's target variable.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 将一个 **Train Model** 模块拖动到画布上，并将 **Multiclass Decision Forest** 模块的输出端口连接到 **Train
    Model** 模块的第一个输入端口。将 **Split** 模块的第一个输出端口连接到 **Train Model** 模块的第二个输入。在 **Train
    Model** 模块的属性面板中，点击列选择器并将 **Col5** 设置为列的目标变量。
- en: 'Next, drag the **Score Model** and **Evaluate Model** modules to the canvas.
    Connect the output of the **Train Model** module to the first input of the **Score
    Model** module and connect the second output of the **Split** module to the second
    input of the **Score Model** module. Then, connect the output of the **Score Model**
    module to the first input of the **Evaluate** **Model** module. Let''s take a
    look at the following screenshot:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，将 **Score Model** 和 **Evaluate Model** 模块拖动到画布上。将 **Train Model** 模块的输出连接到
    **Score Model** 模块的第一个输入，并将 **Split** 模块的第二个输出连接到 **Score Model** 模块的第二个输入。然后，将
    **Score Model** 模块的输出连接到 **Evaluate Model** 模块的第一个输入。让我们看一下下面的截图：
- en: '![Multiclass decision forest](img/0792EN_07_04.jpg)'
  id: totrans-186
  prefs: []
  type: TYPE_IMG
  zh: '![多类决策森林](img/0792EN_07_04.jpg)'
- en: Now, run the experiment and after its completion, visualize the output of the
    **Evaluate Model** module to know the performance of the model.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，运行实验，实验完成后，可视化 **Evaluate Model** 模块的输出以了解模型的性能。
- en: '![Multiclass decision forest](img/0792EN_07_05.jpg)'
  id: totrans-188
  prefs: []
  type: TYPE_IMG
  zh: '![多类决策森林](img/0792EN_07_05.jpg)'
- en: As you can see in the preceding graph, the **Iris Versicolour** class has **92.3%**
    accuracy, while others have **100%**. Also, **7.7%** of the time the **Iris Versicolour**
    class has been misclassified as **Iris Virginica**.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 如前图所示，**Iris Versicolour** 类别的准确率为 **92.3**%，而其他类别均为 **100**%。此外，**7.7**% 的时间，**Iris
    Versicolour** 类别被错误地分类为 **Iris Virginica**。
- en: Note that you have not done any optimization by tuning the parameters. You can
    try out different values for the parameters and evaluate the performance or simply
    use the **Sweep Parameters** module to get the best parameters.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，您还没有通过调整参数进行任何优化。您可以尝试不同的参数值来评估性能，或者简单地使用 **Sweep Parameters** 模块来获取最佳参数。
- en: Comparing models – multiclass decision forest and logistic regression
  id: totrans-191
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 比较模型 – 多类决策森林和逻辑回归
- en: As with any experiment, you can now compare your model with another algorithm.
    You built a model using multiclass decision forest. Now, use another algorithm,
    such as multiclass logistic regression to evaluate the prediction.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 就像任何实验一样，您现在可以比较您的模型与另一个算法。您使用多类决策森林构建了一个模型。现在，使用另一个算法，例如多类逻辑回归来评估预测。
- en: 'To do so, start with the experiment and select the **Train** and **Score**
    modules by pressing *ctrl* on your keyboard and click on both the modules. Then,
    copy the selected modules and paste them on the canvas by right-clicking on it
    and pasting them or just by pressing *ctrl* + *v* on your keyboard. Now, click
    anywhere on the canvas to unselect the pasted modules and rearrange them so that
    no module is placed on another and all are readable. Let''s take a look at the
    following screenshot:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 要这样做，首先从实验开始，通过按键盘上的 *ctrl* 选择 **Train** 和 **Score** 模块，然后点击这两个模块。然后，通过在画布上右键单击并粘贴或直接按
    *ctrl* + *v* 在键盘上粘贴来复制选定的模块。现在，点击画布上的任何位置以取消选择粘贴的模块，并重新排列它们，确保没有模块放置在另一个模块上，并且所有模块都易于阅读。让我们看一下下面的截图：
- en: '![Comparing models – multiclass decision forest and logistic regression](img/0792EN_07_06.jpg)'
  id: totrans-194
  prefs: []
  type: TYPE_IMG
  zh: '![比较模型 – 多类决策森林和逻辑回归](img/0792EN_07_06.jpg)'
- en: 'Now, remove the connection between the **Multiclass Decision Forest** and **Train
    Model** modules by selecting the connection and pressing *Delete*. Note the connection
    in the preceding screenshot. Drag the **Multiclass Logistic Regression** module
    from the left-hand side palette to the canvas and connect the output of the module
    to the **Train Model** module. Leave the properties of the **Multiclass Logistic
    Regression** module at their default values. Connect the output of the **Score
    Model** module to the second input of the **Evaluate Model** module. Let''s take
    a look at the following screenshot:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，通过选择连接并按 *Delete* 键来移除 **Multiclass Decision Forest** 和 **Train Model** 模块之间的连接。注意前面的截图中的连接。从左侧调色板中将
    **Multiclass Logistic Regression** 模块拖到画布上，并将模块的输出连接到 **Train Model** 模块。将 **Multiclass
    Logistic Regression** 模块的属性保留为默认值。将 **Score Model** 模块的输出连接到 **Evaluate Model**
    模块的第二个输入。让我们看看下面的截图：
- en: '![Comparing models – multiclass decision forest and logistic regression](img/0792EN_07_07.jpg)'
  id: totrans-196
  prefs: []
  type: TYPE_IMG
  zh: '![比较模型 – 多类决策森林和逻辑回归](img/0792EN_07_07.jpg)'
- en: You can run the model to find out how the new model is performing and then you
    can compare the evaluation metrics. After the experiment finishes running, visualize
    the output of the **Evaluate Model** module to know the performance of the model.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以运行模型以找出新模型的性能，然后你可以比较评估指标。实验运行完成后，可视化 **Evaluate Model** 模块的输出以了解模型的性能。
- en: '![Comparing models – multiclass decision forest and logistic regression](img/0792EN_07_08.jpg)'
  id: totrans-198
  prefs: []
  type: TYPE_IMG
  zh: '![比较模型 – 多类决策森林和逻辑回归](img/0792EN_07_08.jpg)'
- en: As you can note, for the model with the logistic regression, you are getting
    **100%** accuracy for all the classes. Given such a scenario, you know which model
    to pick up.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你可以注意到的，对于逻辑回归模型，你在所有类别中都得到了 **100%** 的准确率。在这种场景下，你知道应该选择哪个模型。
- en: Multiclass classification with the Wine dataset
  id: totrans-200
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Wine 数据集进行多类分类
- en: 'The **Wine** dataset is another classic and simple dataset hosted in the UCI
    machine learning repository. It contains chemical analysis of the content of wines
    grown in the same region in Italy, but derived from three different cultivars.
    It is used to determine models for classification problems by predicting the source
    (cultivar) of wine as class or target variable. The dataset has the following
    13 features (dependent variables), which are all numeric:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: '**Wine** 数据集是另一个经典且简单的数据集，托管在 UCI 机器学习仓库中。它包含了对在意大利同一地区种植的但来自三个不同品种的葡萄酒内容的化学分析。它通过预测葡萄酒的来源（品种）作为类别或目标变量来确定分类问题的模型。该数据集具有以下
    13 个特征（因变量），它们都是数值型：'
- en: Alcohol
  id: totrans-202
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 酒精
- en: Malic acid
  id: totrans-203
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 马来酸
- en: Ash
  id: totrans-204
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 灰分
- en: Alcalinity of ash
  id: totrans-205
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 灰分的碱性
- en: Magnesium
  id: totrans-206
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 镁
- en: Total phenols
  id: totrans-207
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 总酚
- en: Flavanoids
  id: totrans-208
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 黄烷醇
- en: Nonflavanoid phenols
  id: totrans-209
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 非黄烷醇酚
- en: Proanthocyanins
  id: totrans-210
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 原花青素
- en: Color intensity
  id: totrans-211
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 颜色强度
- en: Hue
  id: totrans-212
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 色调
- en: OD280/OD315 of diluted wines
  id: totrans-213
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 稀释葡萄酒的 OD280/OD315
- en: Proline
  id: totrans-214
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 精氨酸
- en: 'The examples or instances are classified into three classes: 1, 2 and 3.'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 示例或实例被分为三个类别：1、2 和 3。
- en: You can find more about the dataset at [http://archive.ics.uci.edu/ml/datasets/Wine](http://archive.ics.uci.edu/ml/datasets/Wine).
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在 [http://archive.ics.uci.edu/ml/datasets/Wine](http://archive.ics.uci.edu/ml/datasets/Wine)
    上找到更多关于数据集的信息。
- en: Multiclass neural network with parameter sweep
  id: totrans-217
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 带参数扫描的多类神经网络
- en: We will build a model with multiclass neural network and optimize the parameters
    with the **Sweep Parameter** module.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用多类神经网络构建模型，并使用 **Sweep Parameter** 模块优化参数。
- en: As you did the last time, use the **Reader** module to import the dataset from
    [http://archive.ics.uci.edu/ml/machine-learning-databases/wine/wine.data](http://archive.ics.uci.edu/ml/machine-learning-databases/wine/wine.data).
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 如同上次一样，使用 **Reader** 模块从 [http://archive.ics.uci.edu/ml/machine-learning-databases/wine/wine.data](http://archive.ics.uci.edu/ml/machine-learning-databases/wine/wine.data)
    导入数据集。
- en: 'It is in the CSV format and has no header row, as shown in the following screenshot:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 它是 CSV 格式，没有标题行，如下面的截图所示：
- en: '![Multiclass neural network with parameter sweep](img/0792EN_07_10.jpg)'
  id: totrans-221
  prefs: []
  type: TYPE_IMG
  zh: '![带参数扫描的多类神经网络](img/0792EN_07_10.jpg)'
- en: Use the **Split** module and split it into the ratio of 70:30 for a train and
    test dataset, respectively.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 **Split** 模块，将其分割为 70:30 的比例，分别用于训练数据和测试数据集。
- en: Type `Sweep` in the search box in the modules palette to the left and when the
    **Sweep Parameters** module appears, drag it to the canvas. Then, join the first
    output of the **Split** module to the second input of the **Sweep Parameters**
    module and join the second output of the **Split** module to the third input of
    the **Sweep Parameters** module.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 在左侧模块调色板中的搜索框中输入`Sweep`，当出现**Sweep Parameters**模块时，将其拖动到画布上。然后，将**Split**模块的第一个输出连接到**Sweep
    Parameters**模块的第二个输入，并将**Split**模块的第二个输出连接到**Sweep Parameters**模块的第三个输入。
- en: Now, you need to set the column of the dataset that is your target, label, or
    class column for which you will train a model to make a prediction. In this case,
    **Col1** is the target variable or class for which you are going to make a prediction.
    Also, set the sweeping mode to **Entire grid** for metric to measure the performance
    of the **Classification to Accuracy** option.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你需要设置数据集的列，这是你的目标列、标签列或类别列，你将训练模型进行预测。在这种情况下，**Col1**是你要进行预测的目标变量或类别。同时，将扫描模式设置为**Entire
    grid**，以测量**Classification to Accuracy**选项的性能指标。
- en: Also, get the **Multiclass Neural Network** module and connect it to the first
    input of the **Sweep Parameters** module. As usual, drag the **Score Model** and
    **Evaluate Model** modules to the canvas. Connect the second output port of the
    **Sweep Parameters** module to the first input port of the **Score Model** module
    and connect the second output of the **Split** module to the second input of the
    **Score Model** module. Then, connect the output of the **Score Model** module
    to the first input of the **Evaluate Model** module.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，获取**Multiclass Neural Network**模块并将其连接到**Sweep Parameters**模块的第一个输入。像往常一样，将**Score
    Model**和**Evaluate Model**模块拖动到画布上。将**Sweep Parameters**模块的第二个输出端口连接到**Score Model**模块的第一个输入端口，并将**Split**模块的第二个输出连接到**Score
    Model**模块的第二个输入端口。然后，将**Score Model**模块的输出连接到**Evaluate Model**模块的第一个输入。
- en: Run the experiment.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 运行实验。
- en: '![Multiclass neural network with parameter sweep](img/0792EN_07_09.jpg)'
  id: totrans-227
  prefs: []
  type: TYPE_IMG
  zh: '![多类神经网络参数扫描](img/0792EN_07_09.jpg)'
- en: As the experiment finishes running, visualize the output of the **Evaluate Model**
    module to know the performance of the model.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 当实验运行完成后，可视化**Evaluate Model**模块的输出，以了解模型的性能。
- en: Do it yourself – multiclass decision jungle
  id: totrans-229
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 自己动手做——多类决策丛林
- en: Use the same Wine dataset and build a model using the **Multiclass Decision
    Jungle** module. You can use the Sweep Parameters module to optimize the parameters
    of the algorithms. After you run the experiment, check out the evaluation metrics.
    Do you find any improvement in the performance than the previous model you built
    with neural network or any other available algorithms?
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 使用相同的Wine数据集，并使用**Multiclass Decision Jungle**模块构建模型。你可以使用Sweep Parameters模块来优化算法的参数。在运行实验后，检查评估指标。你是否发现与之前使用神经网络或其他可用算法构建的模型相比，性能有所提升？
- en: Summary
  id: totrans-231
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: You started the chapter with understanding predictive analysis with classification
    and explored the concepts of training, testing, and validating a classification
    model. You then proceeded to carry on building experiments with different two-class
    and multiclass classification models, such as logistic regression, decision forest,
    neural network, and boosted decision trees inside ML Studio. You learned how to
    score and evaluate a model after training. You also learned how to optimize different
    parameters for a learning algorithm by the module, Sweep Parameters.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 你以理解使用分类进行预测分析开始本章，并探讨了训练、测试和验证分类模型的概念。然后，你继续在ML Studio中使用不同的两类和多类分类模型进行实验，例如逻辑回归、决策森林、神经网络和提升决策树。你学习了在训练后如何评分和评估模型。你还学习了如何通过Sweep
    Parameters模块优化学习算法的不同参数。
- en: After exploring the two-class classification, you understood multiclass classification
    and learnt how to evaluate a model for the same. You then built a couple of models
    for multiclass classification using different available algorithms.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 在探索了两类分类之后，你理解了多类分类，并学习了如何评估相同的模型。然后，你使用不同的可用算法为多类分类构建了几个模型。
- en: In the next chapter, you will explore the process of building a model using
    clustering, an unsupervised learning algorithm.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，你将探索使用聚类（一种无监督学习算法）构建模型的过程。
