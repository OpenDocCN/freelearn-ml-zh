- en: Image Classification and Detection with SageMaker
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 SageMaker 进行图像分类和检测
- en: We have studied a type of deep learning algorithm called a **Convolutional Neural
    Network** (**CNN**), which is capable of classifying images. However, implementing
    such an algorithm in practice is extremely complex and requires a lot of expertise. Amazon SageMaker
    offers features that allow you to train machine learning models such as image
    classification algorithms using deep learning capabilities.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 我们研究了一种称为**卷积神经网络**（**CNN**）的深度学习算法，它能够对图像进行分类。然而，在实际中实现这样的算法极其复杂，需要大量的专业知识。Amazon
    SageMaker 提供了功能，允许您使用深度学习能力训练机器学习模型，例如图像分类算法。
- en: 'We''ll cover the following topics in this chapter:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章我们将涵盖以下主题：
- en: Introducing Amazon SageMaker for image classification
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 介绍 Amazon SageMaker 用于图像分类
- en: Training a deep learning model using Amazon SageMaker
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Amazon SageMaker 训练深度学习模型
- en: Classifying images using Amazon SageMaker
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Amazon SageMaker 对图像进行分类
- en: Introducing Amazon SageMaker for image classification
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍 Amazon SageMaker 用于图像分类
- en: The field of data science has been revolutionized because of services such as
    Tensorflow and SageMaker. Complex algorithms, such as Deep learning, were only
    accessible to large corporations and research labs in the past. However, thanks
    to services such as SageMaker, anyone who can write code to call these services
    can train and use sophisticated machine learning algorithms. This has enabled
    teenagers, with a working knowledge of machine learning, to create applications
    that can perform complex machine learning tasks. You will have the power to perform
    machine learning tasks at the same level as the world's top scientists by accessing
    state-of-the-art machine learning models in SageMaker marketplace.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 Tensorflow 和 SageMaker 等服务，数据科学领域已经发生了革命。过去，复杂的算法，如深度学习，只有大公司和研究实验室才能访问。然而，得益于
    SageMaker 等服务，任何能够编写代码调用这些服务的人都可以训练和使用复杂的机器学习算法。这使得对机器学习有实际了解的青少年能够创建能够执行复杂机器学习任务的应用程序。通过访问
    SageMaker 市场中的最先进机器学习模型，您将能够以与世界顶级科学家相同的能力执行机器学习任务。
- en: Amazon SageMaker offers a large number of algorithms that data scientists can
    use to train their machine learning models, and it also offers tools to generate
    predictions on a batch of test data or create an endpoint to use the model as
    a service. When we work on smaller test datasets, we can use Python machine learning
    libraries, such as `scikit-learn`. However, when we are working on a larger dataset,
    we have to rely on frameworks, such as Apache Spark, and use the libraries, such
    as `MLLib`.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon SageMaker 提供了大量的算法，数据科学家可以使用这些算法来训练他们的机器学习模型，并且它还提供了工具来对一批测试数据进行预测或创建一个端点以将模型作为服务使用。当我们处理较小的测试数据集时，我们可以使用
    Python 机器学习库，如 `scikit-learn`。然而，当我们处理较大的数据集时，我们必须依赖框架，如 Apache Spark，并使用库，如 `MLLib`。
- en: Amazon offers a suite of machine learning libraries in SageMaker where we can
    use pre-tuned models from various vendors to train our machine learning models.
    Hence, when you are working on a problem, you can search the Amazon SageMaker
    marketplace to find algorithms that are already available. If there are multiple
    algorithms and models available from different vendors, you can choose between
    algorithms based on their pricing models and accuracy.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 亚马逊在 SageMaker 中提供了一系列机器学习库，我们可以使用来自不同供应商的预调优模型来训练我们的机器学习模型。因此，当您处理问题时，您可以在
    Amazon SageMaker 市场中搜索已可用的算法。如果有来自不同供应商的多个算法和模型可供选择，您可以根据它们的定价模型和准确性来选择算法。
- en: The SageMaker marketplace can be used to select models offered by vendors other
    than Amazon. Hence, if you need a specialized algorithm that is tuned to functions
    in the field of genetic engineering or a specialized version of an image classification
    algorithm, such as **Construction-worker Detector**, you can select one of the
    pre-trained models and directly get predictions.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: SageMaker 市场可以用来选择亚马逊以外的供应商提供的模型。因此，如果您需要一个针对遗传工程领域功能进行优化的专用算法，或者像**建筑工人检测器**这样的图像分类算法的专用版本，您可以选择一个预训练模型并直接获取预测。
- en: Amazon SageMaker also offers jobs to tune parameters of the algorithms that
    are available in the marketplace so that they can be adapted to your cluster size
    and applications. Such jobs are called **Hyperparameter-tuning Jobs**. You can
    provide various values of parameters to check an algorithm. Amazon SageMaker can
    then automatically train to select what tuning parameters would work best for
    your application. You can also set the values of these parameters manually.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 亚马逊 SageMaker 还提供调整市场算法参数的作业，以便它们可以适应您的集群大小和应用。这类作业被称为**超参数调整作业**。您可以为参数提供各种值来检查一个算法。然后，亚马逊
    SageMaker 可以自动训练以选择最适合您应用的调整参数。您也可以手动设置这些参数的值。
- en: In this chapter, we'll present how to use Amazon SageMaker using an example
    of an image classifier. This algorithm learns from a labeled set of images and
    then detects objects in the testing dataset by assigning a probability of the
    existence of each object in the test image. For this test, we use a publicly available
    dataset called `Caltech265` ([http://www.vision.caltech.edu/Image_Datasets/Caltech256/](http://www.vision.caltech.edu/Image_Datasets/Caltech256/)).
    This dataset contains 30,608 images. The dataset is labeled with 256 objects.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将通过一个图像分类器的示例来展示如何使用亚马逊 SageMaker。该算法从标记的图像集中学习，然后通过为测试图像中的每个对象分配存在概率来检测测试数据集中的对象。对于这次测试，我们使用了一个公开的数据集，称为
    `Caltech265` ([http://www.vision.caltech.edu/Image_Datasets/Caltech256/](http://www.vision.caltech.edu/Image_Datasets/Caltech256/))。该数据集包含
    30,608 张图像。数据集用 256 个对象进行了标记。
- en: Please download the following dataset files to your AWS S3 bucket: [http://data.mxnet.io/data/caltech-256/caltech-256-60-train.rec](http://data.mxnet.io/data/caltech-256/caltech-256-60-train.rec) 
    and   [http://data.mxnet.io/data/caltech-256/caltech-256-60-val.rec](http://data.mxnet.io/data/caltech-256/caltech-256-60-val.rec)
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 请将以下数据集文件下载到您的 AWS S3 桶中：[http://data.mxnet.io/data/caltech-256/caltech-256-60-train.rec](http://data.mxnet.io/data/caltech-256/caltech-256-60-train.rec)
    和 [http://data.mxnet.io/data/caltech-256/caltech-256-60-val.rec](http://data.mxnet.io/data/caltech-256/caltech-256-60-val.rec)
- en: For the purpose of our experiment, we'll store the training data files in the
    AWS bucket under the `image-classification-full-training/train` folder. This file
    contains 15,420 image files that are resized to 224 x 224 pixels.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 为了我们的实验目的，我们将训练数据文件存储在 AWS 桶中的 `image-classification-full-training/train` 文件夹下。该文件包含
    15,420 个图像文件，这些图像已调整为 224 x 224 像素。
- en: Training a deep learning model using Amazon SageMaker
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用亚马逊 SageMaker 训练深度学习模型
- en: In this section, we will show how to train image classification models using
    this dataset. Similarly, download the `validation` file to the AWS bucket under
    the `image-classification-full-training/validation` folder.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将展示如何使用此数据集训练图像分类模型。同样，将 `validation` 文件下载到 `image-classification-full-training/validation`
    文件夹下的 AWS 桶中。
- en: In [Chapter 7](c832a5c1-d877-4c90-bfb5-e3a0fe99d19a.xhtml), *Implementing Deep
    Learning Algorithms*, we studied an algorithm called a CNN, which uses deep neural
    networks to build an object detection model. This model trains on labeled images
    and learns how to identify objects in an image using various layers of deep neural
    networks. Building this deep learning model from scratch is difficult. Amazon
    SageMaker offers an easy way to train image classification algorithms using your
    own dataset and then deploys that model to detect objects in images. We'll provide
    a code example of training a model using the `caltech256` dataset and then we'll
    test it on image files in the next section, *Classifying images using Amazon SageMaker*.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在 [第 7 章](c832a5c1-d877-4c90-bfb5-e3a0fe99d19a.xhtml)，*实现 AWS 上的深度学习算法*中，我们研究了一种称为
    CNN 的算法，该算法使用深度神经网络构建对象检测模型。该模型在标记图像上训练，并学习如何使用各种深度神经网络层识别图像中的对象。从头开始构建这个深度学习模型是困难的。亚马逊
    SageMaker 提供了一种简单的方法，使用您自己的数据集来训练图像分类算法，然后将该模型部署到检测图像中的对象。我们将提供一个使用 `caltech256`
    数据集训练模型的代码示例，然后在下一节，*使用亚马逊 SageMaker 分类图像*中对其进行测试。
- en: 'Similar to Chapter 8, *Implementing Deep Learning with TensorFlow on AWS*,
    you will have to start a new SageMaker instance and use Jupyter Notebooks to start
    the test. Amazon SageMaker already offers a large amount of example code for you
    to get started. To access these examples, please refer to the SageMaker Examples
    tab:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 与第 8 章，*在 AWS 上使用 TensorFlow 实现深度学习*类似，您将需要启动一个新的 SageMaker 实例并使用 Jupyter Notebooks
    来开始测试。亚马逊 SageMaker 已经为您提供了大量的示例代码以供开始。要访问这些示例，请参考 SageMaker 示例标签页：
- en: '![](img/fd2105b1-8f7c-445e-b19e-766c8774aadb.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/fd2105b1-8f7c-445e-b19e-766c8774aadb.png)'
- en: 'The code that we use in this chapter is also a modification of the image classification
    example provided by SageMaker. You can create a new notebook with the kernel of `conda_python3`:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中使用的代码也是对SageMaker提供的图像分类示例的修改。您可以使用`conda_python3`内核创建一个新的笔记本：
- en: In chapters such as Chapter 5, *Customer Segmentation Using Clustering Algorithms*, and
    Chapter 6, *Analyzing Visitor Patterns to Make Recommendations*, we used the high-level
    `sagemaker` Python library provided by Amazon. Here, we have chosen to show how
    to use the SageMaker generic client from the `boto3` library. This library provides
    a declarative interface that more closely resembles the API behind SageMaker.
    Hopefully, you the reader can grasp the lower-level calls made to the API through
    the examples in this chapter.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在第5章“使用聚类算法进行客户细分”和第6章“分析访客模式以提供建议”等章节中，我们使用了亚马逊提供的Amazon SageMaker高级`sagemaker`
    Python库。在这里，我们选择展示如何从`boto3`库中使用SageMaker通用客户端。这个库提供了一个声明式接口，更接近SageMaker背后的API。希望读者您能通过本章的示例理解API的低级调用。
- en: We provide a code example here on how to use the boto3 client to create an image
    classification model using Amazon Sagemaker.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在此提供了一个代码示例，说明如何使用boto3客户端通过Amazon Sagemaker创建图像分类模型。
- en: 'Initialize the role and the image-classification image that we want to use
    in SageMaker, then specify the name of our bucket:'
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 初始化我们想在SageMaker中使用的角色和**image-classification**图像，然后指定我们桶的名称：
- en: '[PRE0]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The training image called **image-classification** is a Docker image of the
    image-classification algorithm. Amazon SageMaker provides a large variety of such
    images, which you can use to train your classifiers. Each image has its own tuning
    parameters, which you can also provide when training that algorithm.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 被称为**image-classification**的训练图像是图像分类算法的Docker镜像。Amazon SageMaker提供了大量此类镜像，您可以使用它们来训练您的分类器。每个镜像都有自己的调整参数，您也可以在训练该算法时提供。
- en: 'We will declare these tuning parameters, in the following code block:'
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将在以下代码块中声明这些调整参数：
- en: '[PRE1]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: An image classification algorithm uses deep neural networks; these parameters
    will be familiar to you as we studied them in [Chapter 7](c832a5c1-d877-4c90-bfb5-e3a0fe99d19a.xhtml), *Implementing
    Deep Learning Algorithms*.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 图像分类算法使用深度神经网络；这些参数对我们来说很熟悉，因为我们已经在[第7章](c832a5c1-d877-4c90-bfb5-e3a0fe99d19a.xhtml)，“实现深度学习算法”中研究过。
- en: We define the number of hidden layers that will be used by the deep learning
    algorithm. We also have to specify the number of channels and the size of each
    image. We define the number of training images and the number of classes (object
    types). The number of epochs defines the number of times we will iterate over
    the training dataset. The accuracy of the deep learning classifier increases with
    the number of iterations we have over the dataset. The learning rate defines the
    number of changes the deep learning algorithm is allowed to make to the weights.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 我们定义深度学习算法将使用的隐藏层数量。我们还需要指定通道数和每个图像的大小。我们定义训练图像的数量和类（对象类型）的数量。迭代次数定义了我们将在训练数据集上迭代的次数。深度学习分类器的准确率随着我们对数据集迭代的次数增加而提高。学习率定义了深度学习算法允许对权重进行的更改次数。
- en: We would recommend that you run this algorithm with different parameters to
    observe the effects on evaluation and training time.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 我们建议您使用不同的参数运行此算法，以观察对评估和训练时间的影响。
- en: Once we define the parameters, we initialize the boto3 client for S3, where
    we have stored our training and validation files.
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦我们定义了参数，我们就会初始化用于S3的boto3客户端，我们在那里存储了我们的训练和验证文件。
- en: '[PRE2]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'We construct a JSON with all the parameters required to train our image classifier:'
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们构建了一个JSON，其中包含了训练我们的图像分类器所需的全部参数：
- en: '[PRE3]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: There are a lot of things to learn in this JSON. We define the algorithm that
    we want to use for training in the `AlgorithmSpecification` section. `OutputDataConfig`
    defines where the model will be stored. `ResourceConfig` defines the instance
    type to be used for a training job. Note that tasks such as image classification
    run faster on GPU-based instances on AWS. All the parameters for the algorithm
    are defined in the `HyperParameters` section. We set the training dataset and
    the validation dataset under the `InputDataConfig` section of JSON. This JSON
    configuration will be used in the next code block to set parameters for the training
    job.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个JSON中有很多东西要学习。我们在`AlgorithmSpecification`部分定义了我们想要用于训练的算法。`OutputDataConfig`定义了模型将存储的位置。`ResourceConfig`定义了用于训练作业的实例类型。请注意，在AWS上，基于GPU的实例可以更快地运行图像分类等任务。所有算法参数都在`HyperParameters`部分定义。我们在JSON的`InputDataConfig`部分下设置了训练数据集和验证数据集。此JSON配置将在下一个代码块中用于设置训练作业的参数。
- en: 'The following code block starts a `sagemaker` training job:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码块启动了一个`sagemaker`训练作业：
- en: '[PRE4]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'After you start the training job, you can observe its progress of the training
    job on your Amazon SageMaker dashboard:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在您开始训练作业后，您可以在Amazon SageMaker仪表板上观察训练作业的进度：
- en: '![](img/229b3113-8c8b-41d0-8177-b633091ff6d0.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![](img/229b3113-8c8b-41d0-8177-b633091ff6d0.png)'
- en: This dashboard also shows you statistics for your model, including the CPU and
    GPU usage, and the memory utilization. You can also observe the training and validation
    accuracy of the model we're training on this dashboard.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 此仪表板还显示了您模型的统计数据，包括CPU和GPU的使用情况，以及内存利用率。您还可以在此仪表板上观察我们正在训练的模型的训练和验证准确率。
- en: 'Since we are only using two epochs, the training accuracy of this model is
    low:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们只使用了两个epoch，因此此模型的训练准确率较低：
- en: '![](img/02b8ba3c-aeca-420c-a9b0-34140709c671.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![](img/02b8ba3c-aeca-420c-a9b0-34140709c671.png)'
- en: You have successfully trained an image classification model using SageMaker.
    SageMaker is very easy to use, as you just have to select the algorithm image,
    select the training dataset, and set the parameters for the algorithm. SageMaker
    automatically trains the model based on this information and also stores the model
    on your S3 bucket.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 您已成功使用SageMaker训练了一个图像分类模型。SageMaker非常易于使用，您只需选择算法镜像，选择训练数据集，并设置算法的参数。SageMaker将根据这些信息自动训练模型，并将模型存储在您的S3桶中。
- en: Classifying images using Amazon SageMaker
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Amazon SageMaker对图像进行分类
- en: The SageMaker models that you have trained are now available to be used to predict
    objects in images. As we discussed at the beginning of the chapter, SageMaker
    offers a marketplace where you can use many models directly to perform your tasks.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 您已训练的SageMaker模型现在可用于预测图像中的对象。正如我们在本章开头所讨论的，SageMaker提供了一个市场，您可以直接使用许多模型来执行您的任务。
- en: Since we trained our own machine learning model, we will have to create a SageMaker
    model that can be used for prediction. The following code shows how to generate
    a usable model in Amazon Sagemaker
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 由于我们训练了自己的机器学习模型，我们必须创建一个SageMaker模型，该模型可用于预测。以下代码展示了如何在Amazon Sagemaker中生成一个可用的模型。
- en: '[PRE5]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: To create a model in SageMaker, we have to specify the model name that was generated
    in the previous steps. In our example, the model name was set to `example-full-image-classification-model`.
    We also have to specify the container in which the model will be stored. Since
    we used the image-classification Docker image to generate this model, we have
    to specify it as a parameter. This image will help SageMaker read the trained
    model and define how it can be used for prediction.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 要在SageMaker中创建一个模型，我们必须指定在之前步骤中生成的模型名称。在我们的例子中，模型名称被设置为`example-full-image-classification-model`。我们还需要指定模型将存储的容器。由于我们使用了图像分类Docker镜像来生成此模型，我们必须将其指定为一个参数。此镜像将帮助SageMaker读取训练好的模型并定义如何用于预测。
- en: The `create_model` function will create the model and return an **Amazon Resource
    Name** (**ARN **) for the model. This can be used to call the model to generate
    predictions.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '`create_model`函数将创建模型并返回模型的**Amazon资源名称**（**ARN**）。这可以用于调用模型以生成预测。'
- en: 'For testing, we will download the raw images from the `Caltech256` dataset
    and store them in an `S3` bucket. We will use these images to generate predictions:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 对于测试，我们将从`Caltech256`数据集下载原始图像并将它们存储在一个`S3`桶中。我们将使用这些图像来生成预测：
- en: '[PRE6]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Once we have downloaded all the images and stored them in an S3 bucket, we
    specify the parameters for running a batch prediction job. This job will predict
    the probability of each of the 256 objects being present in an image:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们下载了所有图像并将它们存储在S3桶中，我们就会指定运行批量预测任务的参数。这个任务将预测图像中256个对象中每个对象存在的概率：
- en: '[PRE7]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: As you might have guessed, we have to specify the model name in the `ModelName`
    parameter and the input folder in the `TransformInput` parameter. We also have
    to specify the `output` folder where the predictions are stored. We have to specify
    the instance type that we are using in the `TransformResources` parameter and
    the max number of files to process in the `MaxConcurrentTransforms` parameter.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您所猜测的，我们必须在`ModelName`参数中指定模型名称，在`TransformInput`参数中指定输入文件夹。我们还需要指定存储预测的`output`文件夹。我们必须在`TransformResources`参数中指定我们使用的实例类型，并在`MaxConcurrentTransforms`参数中指定要处理的文件的最大数量。
- en: 'The following code uses the parameters and starts the `create_transform_job`:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码使用参数并启动`create_transform_job`：
- en: '[PRE8]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: You can monitor your transforms job on the SageMaker dashboard under Inference
    | Batch Transforms Jobs section. Once the task is finished, you can access the
    predictions in the S3 bucket you specified as the `output` folder.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在SageMaker仪表板上的推理 | 批量转换作业部分监控您的转换作业。一旦任务完成，您就可以访问您指定的作为`output`文件夹的S3桶中的预测结果。
- en: 'The predictions can be seen in the following format:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 预测结果可以按照以下格式查看：
- en: '[PRE9]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Since our model had 256 object categories, the output specifies the probability
    of each object being present in the image. You can run the model on various datasets
    to check whether your model can predict the objects in the dataset correctly.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们的模型有256个对象类别，输出指定了每个对象在图像中存在的概率。您可以在各种数据集上运行模型，以检查您的模型是否可以正确预测数据集中的对象。
- en: SageMaker offers a very easy-to-use service to not only train deep learning
    models but also to use them in applications to generate predictions. Although
    the service is very intuitive, SageMaker is expensive when you use the pre-built
    models on a large dataset to generate predictions. Based on the application being
    developed, data scientists should always consider the overall cost they would
    incur when using such services compared to building the same models on their own
    clusters in Apache Spark.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: SageMaker提供了一个非常易于使用的服务，不仅可以训练深度学习模型，还可以在应用程序中使用它们来生成预测。尽管该服务非常直观，但当您在大数据集上使用预构建的模型生成预测时，SageMaker的成本很高。根据正在开发的应用程序，数据科学家应该始终考虑使用此类服务时相比在Apache
    Spark自己的集群上构建相同模型所承担的整体成本。
- en: Summary
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we studied how Amazon SageMaker offers various ready-to-use
    machine learning models to generate predictions, as well as algorithm images that
    can be used to train your models. Amazon SageMaker generates a layer of abstraction
    between you and the messy details of setting up your own clusters to train and
    create your own machine learning model. Amazon SageMaker dashboards also offer
    a place to store your trained models and monitor your batch-processing jobs for
    predictions.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们研究了Amazon SageMaker如何提供各种现成的机器学习模型来生成预测，以及可以用于训练您的模型的算法镜像。Amazon SageMaker在您和设置自己的集群以训练和创建自己的机器学习模型这些杂乱的细节之间生成了一层抽象。Amazon
    SageMaker仪表板还提供了一个存储您的训练模型和监控您的预测批量处理作业的地方。
- en: You can also train your own machine learning models using your own datasets
    in SageMaker. We presented an example of training a machine learning model that
    is capable of performing object detection in images. We demonstrated how this
    model can then be deployed on SageMaker and used for running batch-prediction
    jobs. You will be able to use this as a template to work on other algorithms in
    Amazon SageMaker.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以使用SageMaker和自己的数据集训练自己的机器学习模型。我们展示了如何训练一个能够在图像中执行对象检测的机器学习模型。我们演示了如何将此模型部署在SageMaker上，并用于运行批量预测任务。您将能够使用这个模板在Amazon
    SageMaker上工作其他算法。
- en: In this book, our aim is to provide you with an understanding of how machine
    learning algorithms work and how you can utilize powerful tools such as Apache
    Spark, Tensorflow, and SageMaker to deploy large-scale training and prediction
    jobs using machine learning.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 在这本书中，我们的目标是向您解释机器学习算法是如何工作的，以及您如何利用Apache Spark、Tensorflow和SageMaker等强大工具来部署大规模的训练和预测任务。
- en: Exercises
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 练习
- en: For each of the examples provide in previous chapters, find an algorithm in
    Amazon SageMaker Marketplace that would be applicable to solve that problem.
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于前几章中提供的每个示例，在Amazon SageMaker市场中找到一个适用于解决该问题的算法。
- en: Amazon SageMaker also provides a service to create endpoints to generate predictions.
    For the preceding example, create an endpoint for the model that we trained and
    generate predictions for one image.
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Amazon SageMaker还提供了一种创建端点以生成预测的服务。对于前面的示例，为训练好的模型创建一个端点，并为一张图片生成预测。
