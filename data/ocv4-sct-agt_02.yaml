- en: Preparing for the Mission
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备任务
- en: '"Q: I''ve been saying for years, sir, that our special equipment is obsolete.
    And now, computer analysis reveals an entirely new approach: miniaturization."'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: “Q：多年来，先生，我一直说我们的专用设备已经过时了。而现在，计算机分析揭示了一种全新的方法：小型化。”
- en: – On Her Majesty's Secret Service (1969)
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: – 《她的秘密服务》（1969年）
- en: James Bond is not a pedestrian. He cruises in a submarine car; he straps on
    a rocket belt; and, oh, how he skis, how he skis! He always has the latest stuff,
    and he is never afraid to put a dent in it, much to the dismay of Q, the engineer.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 007不是个普通人。他驾驶着潜艇车；他绑上火箭腰带；哦，他滑雪的样子，多么潇洒，多么潇洒！他总是拥有最新的装备，而且从不害怕在上面留下划痕，这让工程师Q感到非常沮丧。
- en: As software developers in the 2010s, we have witnessed an explosion of the adoption
    of new platforms. Under one family's roof, we might find a mix of Windows, Mac,
    iOS, and Android devices. Mom and Dad's workplaces provide different platforms.
    The kids have three game consoles, or five, if you count the mobile versions.
    The toddler has a LeapFrog learning tablet. Smart glasses are becoming more affordable.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 作为2010年代的软件开发者，我们见证了新平台采用率的激增。在一个家庭屋檐下，我们可能会发现Windows、Mac、iOS和Android设备的混合。妈妈和爸爸的工作场所提供不同的平台。孩子们有三个或五个游戏机，如果你算上移动版本的话。幼儿有一个LeapFrog学习平板。智能眼镜变得越来越便宜。
- en: We must not be afraid to try new platforms and consider new ways to combine
    them. After all, our users do.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 我们不能害怕尝试新的平台，并考虑新的组合方式。毕竟，我们的用户是这样的。
- en: This book embraces multiplatform development. It presents weird and wonderful
    applications that we can deploy in unexpected places. It uses several of the computer's
    senses, but especially computer vision, to breathe new life into the humdrum,
    heterogeneous clutter of devices that surrounds us.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 这本书涵盖了多平台开发。它展示了我们可以部署在意想不到的地方的奇特而美妙的应用。它使用计算机的多种感官，尤其是计算机视觉，为围绕我们的平淡无奇、异构的设备堆叠注入新的活力。
- en: Before Agent 007 runs amok with the gadgets, he is obligated to listen to Q's
    briefing. This chapter will performs Q's role. It is the setup chapter.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在007特工用这些小玩意儿胡闹之前，他必须听从Q的简报。这一章将扮演Q的角色。这是设置章节。
- en: 'By the end of this chapter, you will have obtained all the tools to develop
    OpenCV applications in Python for Windows, Mac, or Linux, and in Java for Android.
    You will also be the proud new user of a Raspberry Pi single-board computer. (This
    additional hardware is optional.) You will even know a bit about Unity, a game
    engine into which we can integrate OpenCV. Specifically, this chapter will cover
    the following approaches to setting up a development environment:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 到这一章结束时，你将拥有所有在Windows、Mac或Linux上使用Python开发OpenCV应用程序，以及在Android上使用Java的工具。你还将成为Raspberry
    Pi单板计算机的骄傲新用户。（这额外的硬件是可选的。）你甚至会对Unity游戏引擎有了一些了解，我们可以将其与OpenCV集成。具体来说，这一章将涵盖以下设置开发环境的方法：
- en: Setting up Python and OpenCV on Windows. Optionally, this will include configuring
    and building OpenCV from a source with CMake and Visual Studio.
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Windows上设置Python和OpenCV。可选地，这包括使用CMake和Visual Studio配置和构建OpenCV。
- en: Setting up Python and OpenCV on Mac. This will include using either MacPorts
    or Homebrew as a package manager.
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Mac上设置Python和OpenCV。这包括使用MacPorts或Homebrew作为包管理器。
- en: Setting up Python and OpenCV on Debian Jessie or one of its derivatives, such
    as Raspbian, Ubuntu, or Linux Mint. This will include using the **Advanced Package
    Tool** (**APT**) package manager. Optionally, it will also include configuring
    and building OpenCV from a source with CMake and GCC.
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Debian Jessie或其衍生版本（如Raspbian、Ubuntu或Linux Mint）上设置Python和OpenCV。这包括使用**高级包工具**（**APT**）包管理器。可选地，它还将包括使用CMake和GCC从源代码配置和构建OpenCV。
- en: Setting up Python and OpenCV on Fedora or one of its derivatives, such as **Red
    Hat Enterprise Linux** (**RHEL**) or CentOS. This will include using the yum package
    manager.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Fedora或其衍生版本（如**Red Hat Enterprise Linux**（**RHEL**）或CentOS）上设置Python和OpenCV。这包括使用yum包管理器。
- en: Setting up Python and OpenCV on openSUSE. This will include using the yum package
    manager.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在openSUSE上设置Python和OpenCV。这包括使用yum包管理器。
- en: Setting up Android Studio and OpenCV's Android libraries on Windows, Mac, or
    Linux.
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Windows、Mac或Linux上设置Android Studio和OpenCV的Android库。
- en: Setting up Unity and OpenCV on Windows or Mac.
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Windows或Mac上设置Unity和OpenCV。
- en: Setting up a Raspberry Pi.
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置Raspberry Pi。
- en: If you find yourself a bit daunted by the extent of this setup chapter, be reassured
    that not all of the tools are required, and no single project uses all of them
    in combination. Although Q and I live for the big event of setting up multiple
    technologies at once, you can just skim this chapter and refer back to it later
    when the tools become useful, one by one, in our projects.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你发现这个设置章节的范围让你感到有些畏惧，请放心，并非所有工具都是必需的，也没有任何单个项目会同时使用所有这些工具。虽然我和 Q 都喜欢同时设置多个技术的大事件，但你只需浏览这一章，并在工具在我们的项目中一个接一个地变得有用时再回头查阅。
- en: Technical requirements
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: This is the setup chapter. There are no particular software prerequisites at
    the outset; we will set up everything as we go along.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 这是设置章节。一开始没有特定的软件先决条件；我们将随着进行逐步设置一切。
- en: Basic instructions for running Python code are covered in [Appendix C](c44b1aaa-fe12-4054-85fb-37d584f15d3b.xhtml),
    *Running with Snakes (or, First Steps with Python)*. After we set up a Python
    environment with OpenCV, you may want to refer to this appendix so that you know
    how to minimally test the environment.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 运行 Python 代码的基本说明包含在[附录 C](c44b1aaa-fe12-4054-85fb-37d584f15d3b.xhtml)，*与蛇共舞（或，Python
    初步探索）*中。在用 OpenCV 设置 Python 环境之后，你可能需要参考这个附录，以便了解如何最小化测试环境。
- en: Setting up a development machine
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置开发机器
- en: We can develop our OpenCV applications on a desktop, a notebook, or even the
    humble Raspberry Pi (covered later, in the *Setting up a Raspberry Pi* section).
    Most of our apps have a memory footprint of less than 128 MB, so they can still
    run (albeit slowly) on old or low-powered machines. To save time, develop on your
    fastest machine first and test on slower machines later.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在台式机、笔记本电脑甚至谦逊的树莓派（在后面的*设置树莓派*部分中介绍）上开发我们的 OpenCV 应用程序。我们的大部分应用程序的内存占用小于
    128 MB，因此它们仍然可以在旧或低功耗的机器上运行（尽管速度较慢）。为了节省时间，首先在最快的机器上开发，然后在较慢的机器上测试。
- en: 'This book assumes that you have one of the following operating systems on your
    development machine:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 本书假设你的开发机器上安装了以下操作系统之一：
- en: Windows 7 SP 1, or a later version.
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Windows 7 SP 1，或更高版本。
- en: Mac OS 10.7 (Lion), or a later version.
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Mac OS 10.7（Lion），或更高版本。
- en: 'Debian Jessie, a later version, or a derivative such as the following:'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Debian Jessie，更高版本，或以下衍生版本：
- en: Raspbian 2015-09-25, or a later version
  id: totrans-27
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Raspbian 2015-09-25，或更高版本
- en: Ubuntu 14.04, or a later version
  id: totrans-28
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ubuntu 14.04，或更高版本
- en: Linux Mint 17, or a later version
  id: totrans-29
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Linux Mint 17，或更高版本
- en: 'Fedora 28, a later version, or a derivative such as the following:'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Fedora 28，更高版本，或以下衍生版本：
- en: RHEL 8, or a later version
  id: totrans-31
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: RHEL 8，或更高版本
- en: CentOS 8, or a later version
  id: totrans-32
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: CentOS 8，或更高版本
- en: openSUSE Leap 42.3, openSUSE Leap 15.0, or a later version; openSUSE Tumbleweed,
    or a derivative.
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: openSUSE Leap 42.3，openSUSE Leap 15.0，或更高版本；openSUSE Tumbleweed，或其衍生版本。
- en: Other Unix-like systems might also work, but they will not be covered in this
    book.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 其他类 Unix 系统也可能工作，但本书不会涉及。
- en: You should have a USB webcam and any necessary drivers. Most webcams come with
    instructions for installing drivers on Windows and Mac. Linux distributions typically
    include the **USB Video Class** (**UVC**) Linux driver, which supports many webcams,
    listed at [http://www.ideasonboard.org/uvc/#devices](http://www.ideasonboard.org/uvc/#devices).
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该有一个 USB 网络摄像头和任何必要的驱动程序。大多数摄像头都附有在 Windows 和 Mac 上安装驱动程序的说明。Linux 发行版通常包括支持许多摄像头的
    **USB 视频类**（**UVC**）Linux 驱动程序，具体信息请见[http://www.ideasonboard.org/uvc/#devices](http://www.ideasonboard.org/uvc/#devices)。
- en: 'We are going to set up the following components:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将设置以下组件：
- en: On Mac, a third-party package manager to help us install libraries and their
    dependencies; we will use either MacPorts or Homebrew.
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Mac 上，一个第三方包管理器帮助我们安装库及其依赖项；我们将使用 MacPorts 或 Homebrew。
- en: A Python development environment—at the time of writing this book, OpenCV supports
    Python 2.7, 3.4, 3.5, 3.6, and 3.7. The Python code in this book supports all
    of these versions. As part of the Python development environment, we will use
    Python's package manager, pip.
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python 开发环境——在撰写本书时，OpenCV 支持 Python 2.7，3.4，3.5，3.6 和 3.7。本书中的 Python 代码支持所有这些版本。作为
    Python 开发环境的一部分，我们将使用 Python 的包管理器，pip。
- en: Popular Python libraries, such as NumPy (for numeric functions), SciPy (for
    numeric and scientific functions), Requests (for web requests), and wxPython (for
    cross-platform GUIs).
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 流行的 Python 库，如 NumPy（用于数值函数）、SciPy（用于数值和科学函数）、Requests（用于网络请求）和 wxPython（用于跨平台
    GUI）。
- en: PyInstaller, a cross-platform tool for bundling Python scripts, libraries, and
    data as redistributable apps, such that user machines do not require installations
    of Python, OpenCV, and other libraries. For this book's purposes, building redistributables
    of Python projects is an optional topic. We will cover the basics in [Chapter
    2](4ec4e82a-b63d-4fc1-bf3b-47c653c25a79.xhtml),* Searching for Luxury Accommodations
    Worldwide,* but you might need to do your own testing and debugging, as PyInstaller
    (like other Python bundling tools) does not show entirely consistent behavior
    across operating systems, Python versions, and library versions. It is not well
    supported on Raspberry Pi or other ARM devices.
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PyInstaller，一个跨平台工具，可以将 Python 脚本、库和数据捆绑为可重新分发的应用程序，这样用户机器就不需要安装 Python、OpenCV
    和其他库。就本书的目的而言，构建 Python 项目的可重新分发版本是一个可选主题。我们将在[第 2 章](4ec4e82a-b63d-4fc1-bf3b-47c653c25a79.xhtml)中介绍基础知识，*全球寻找豪华住宿*，但你可能需要进行自己的测试和调试，因为
    PyInstaller（就像其他 Python 捆绑工具一样）在操作系统、Python 版本和库版本之间并不总是表现出完全一致的行为。它在 Raspberry
    Pi 或其他 ARM 设备上支持不佳。
- en: Optionally, we can use a C++ development environment to enable us to build OpenCV
    from a source. On Windows, we use Visual Studio 2015 or later. On Mac, we use
    Xcode. On Linux, we use GCC, which comes as standard.
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可选地，我们可以使用 C++ 开发环境来使我们能够从源代码构建 OpenCV。在 Windows 上，我们使用 Visual Studio 2015 或更高版本。在
    Mac 上，我们使用 Xcode。在 Linux 上，我们使用 GCC，它是标准配置。
- en: A build of OpenCV and `opencv_contrib` (a set of extra OpenCV modules) with
    Python support, plus optimizations for certain desktop hardware. At the time of
    writing this book, OpenCV 4.0.x is the latest stable branch, and our instructions
    are tailored for this branch. However, generally, the code in this book also works
    with the previous stable branch, OpenCV 3.4.x, which is more widely available
    from package managers for users who prefer a prepackaged build.
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个带有 Python 支持的 OpenCV 和 `opencv_contrib`（一组额外的 OpenCV 模块）的构建，以及针对某些桌面硬件的优化。在撰写本书时，OpenCV
    4.0.x 是最新的稳定分支，我们的说明针对这个分支。然而，一般来说，本书中的代码也可以与之前的稳定分支 OpenCV 3.4.x 一起工作，它可以从包管理器中更广泛地获得，适用于喜欢预包装构建的用户。
- en: Another build of OpenCV with Java support, plus optimizations for certain Android
    hardware. At the time of writing, OpenCV 4.0.1 is the most recent release.
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 另一个带有 Java 支持的 OpenCV 构建，以及针对某些 Android 硬件的优化。在撰写本文时，OpenCV 4.0.1 是最新的发布版本。
- en: An Android development environment, including Android Studio and Android SDK.
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个包括 Android Studio 和 Android SDK 的 Android 开发环境。
- en: On 64-bit Windows or Mac, a three-dimensional game engine called **Unity**.
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 64 位 Windows 或 Mac 上，一个名为 **Unity** 的三维游戏引擎。
- en: Android Studio has a big memory footprint. Even if you want to use Raspberry
    Pi for developing desktop and Pi apps, use something with more RAM for developing
    Android apps.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: Android Studio 的内存占用很大。即使你想使用 Raspberry Pi 开发桌面和 Pi 应用程序，也请使用具有更多 RAM 的设备来开发
    Android 应用程序。
- en: Let's break this setup down into three sets of platform dependent steps for
    a Python and OpenCV environment, plus a set of platform independent steps for
    an Android Studio and OpenCV environment, and another set of platform independent
    steps for a Unity and OpenCV environment.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们将这个设置分解为三个平台相关的步骤集，用于 Python 和 OpenCV 环境，以及一组平台无关的步骤集，用于 Android Studio 和
    OpenCV 环境，还有另一组平台无关的步骤集，用于 Unity 和 OpenCV 环境。
- en: Setting up Python and OpenCV on Windows
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Windows 上设置 Python 和 OpenCV
- en: On Windows, we have the option of setting up a 32-bit development environment
    (to make apps that are compatible with both 32-bit and 64-bit Windows) or a 64-bit
    development environment (to make optimized apps that are only compatible with
    64-bit Windows). OpenCV is available in 32-bit and 64-bit versions.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Windows 上，我们有设置 32 位开发环境（以制作与 32 位和 64 位 Windows 兼容的应用程序）或 64 位开发环境（以制作仅与
    64 位 Windows 兼容的优化应用程序）的选择。OpenCV 提供了 32 位和 64 位版本。
- en: We also have a choice of either using binary installers or compiling OpenCV
    from source. For our Windows apps in this book, the binary installers provide
    everything we need. However, we also discuss the option of compiling from source
    because it enables us to configure additional features, which may be relevant
    to your future work or to our projects in other books.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还有选择使用二进制安装程序或从源代码编译 OpenCV。对于本书中的 Windows 应用程序，二进制安装程序提供了我们所需的一切。然而，我们也讨论了从源代码编译的选项，因为它使我们能够配置额外的功能，这些功能可能与你的未来工作或我们其他书籍中的项目相关。
- en: Regardless of our approach to obtaining OpenCV, we need a general-purpose Python
    development environment. We will set up this environment using a binary installer. The
    installers for Python are available from [http://www.python.org/getit/](http://www.python.org/getit/).
    Download and run the latest revision of Python 3.7, in either the 32-bit variant
    or the 64-bit variant.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 无论我们获取 OpenCV 的方式如何，我们都需要一个通用的 Python 开发环境。我们将使用二进制安装程序来设置这个环境。Python 的安装程序可以从
    [http://www.python.org/getit/](http://www.python.org/getit/) 获取。下载并运行 Python 3.7
    的最新版本，无论是 32 位版本还是 64 位版本。
- en: To make Python scripts run using our new Python 3.7 installation by default,
    let's edit the system's Path variable and append `;C:\Python3.7` (assuming Python
    3.7 is installed in the default location). Remove any previous Python paths, such
    as `;C:\Python2.7`. Log out and log back in (or reboot).
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 要使 Python 脚本默认使用我们新的 Python 3.7 安装程序运行，让我们编辑系统的 Path 变量并追加 `;C:\Python3.7`（假设
    Python 3.7 安装在默认位置）。删除任何以前的 Python 路径，例如 `;C:\Python2.7`。注销并重新登录（或重启）。
- en: 'Python comes with a package manager called `pip`, which simplifies the task
    of installing Python modules and their dependencies. Open Command Prompt and run
    the following command to install `numpy`, `scipy`, `requests`, `wxPython`, and
    `pyinstaller`:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: Python 附带了一个名为 `pip` 的包管理器，它简化了安装 Python 模块及其依赖项的任务。打开命令提示符并运行以下命令来安装 `numpy`、`scipy`、`requests`、`wxPython`
    和 `pyinstaller`：
- en: '[PRE0]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Now, we have a choice. We can either install the binaries of `OpenCV` and `opencv_contrib`
    as a prebuilt Python module, or we can build this module from source. To install
    a prebuilt module, simply run the following command:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们有一个选择。我们可以安装 `OpenCV` 和 `opencv_contrib` 的预构建二进制模块，或者我们可以从源代码构建这个模块。要安装预构建模块，只需运行以下命令：
- en: '[PRE1]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Alternatively, to build `OpenCV` and `opencv_contrib` from source, follow the
    instructions in the section *Building OpenCV on Windows with CMake and Visual
    Studio*, as follow.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，要从源代码构建 `OpenCV` 和 `opencv_contrib`，请按照 *在 Windows 上使用 CMake 和 Visual Studio
    构建 OpenCV* 这一部分的说明操作，如下所示。
- en: After either installing a prebuilt `OpenCV` and `opencv_contrib` module or building
    it from source, we will have everything we need to develop OpenCV applications
    for Windows. To develop for Android, we need to set up Android Studio as described
    in the section *Setting up Android Studio*, *and OpenCV*, later in this chapter.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在安装预构建的 `OpenCV` 和 `opencv_contrib` 模块或从源代码构建之后，我们将拥有开发 Windows 上 OpenCV 应用程序所需的一切。要为
    Android 开发，我们需要按照本章后面的 *设置 Android Studio* 和 *OpenCV* 这一部分的说明来设置 Android Studio。
- en: Building OpenCV on Windows with CMake and Visual Studio
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 CMake 和 Visual Studio 在 Windows 上构建 OpenCV
- en: 'To compile OpenCV from source, we need a general purpose C++ development environment.
    As our C++ development environment, we will use Visual Studio 2015 or later. Use
    any installation media you may have purchased, or go to the downloads page at [https://visualstudio.microsoft.com/downloads/](https://visualstudio.microsoft.com/downloads/). Download
    and run the installer for one of the following:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 要从源代码编译 OpenCV，我们需要一个通用的 C++ 开发环境。作为我们的 C++ 开发环境，我们将使用 Visual Studio 2015 或更高版本。使用您可能购买的任何安装介质，或者访问
    [https://visualstudio.microsoft.com/downloads/](https://visualstudio.microsoft.com/downloads/)
    的下载页面。下载并运行以下安装程序的其中一个：
- en: Visual Studio Community 2017, which is free
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 免费的 Visual Studio Community 2017
- en: Any of the paid Visual Studio 2017 versions, which have 30-day free trials
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 任何付费的 Visual Studio 2017 版本，这些版本有 30 天的免费试用期
- en: If the installer lists optional C++ components, we should opt to install them
    all. After the installer runs to completion, reboot.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 如果安装程序列出了可选的 C++ 组件，我们应该选择安装所有这些组件。安装程序运行完成后，重启。
- en: OpenCV uses a set of build tools called **CMake**, which we must install. Optionally,
    we may install several third-party libraries in order to enable extra features
    in OpenCV. As an example, let's install Intel **Thread Building Blocks** (**TBB**),
    which OpenCV can leverage in order to optimize some functions for multicore CPUs.
    After installing TBB, we will configure and build OpenCV. Lastly, we will ensure
    that our C++ and Python environments can find our build of OpenCV.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: OpenCV 使用一组名为 **CMake** 的构建工具，我们必须安装它。可选地，我们可以安装几个第三方库，以便在 OpenCV 中启用额外功能。例如，让我们安装
    Intel **线程构建块**（**TBB**），OpenCV 可以利用它来优化一些多核 CPU 的函数。安装 TBB 后，我们将配置和构建 OpenCV。最后，我们将确保我们的
    C++ 和 Python 环境可以找到我们的 OpenCV 构建。
- en: 'Here are the detailed steps:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是详细的步骤：
- en: Download and install the latest stable version of CMake from [https://cmake.org/download/](https://cmake.org/download/).
    CMake 3 or a newer version is required. Even if we are using 64-bit libraries
    and compilers, 32-bit CMake is compatible. When the installer asks about modifying
    PATH, select either Add CMake to the system PATH for all users or Add CMake to
    the system PATH for current user.
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 [https://cmake.org/download/](https://cmake.org/download/) 下载最新稳定的 CMake 版本。需要
    CMake 3 或更高版本。即使我们使用 64 位库和编译器，32 位 CMake 也是兼容的。当安装程序询问是否修改 PATH 时，选择将 CMake 添加到系统
    PATH 以供所有用户使用或仅添加到当前用户的系统 PATH。
- en: If your system uses a proxy server to access the internet, define two environment
    variables, `HTTP_PROXY` and `HTTPS_PROXY`, with values equal to the proxy server's
    URL, such as `http://myproxy.com:8080`. This ensures that CMake can use the proxy
    server to download some additional dependencies for OpenCV. (If in doubt, do not
    define these environment variables; you are probably not using a proxy server.)
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您的系统使用代理服务器访问互联网，请定义两个环境变量，`HTTP_PROXY` 和 `HTTPS_PROXY`，其值等于代理服务器的 URL，例如
    `http://myproxy.com:8080`。这确保 CMake 可以使用代理服务器下载一些额外的 OpenCV 依赖项。（如果有疑问，请不要定义这些环境变量；你很可能没有使用代理服务器。）
- en: Download the OpenCV Win pack from [http://opencv.org/releases.html](https://opencv.org/releases.html).
    (Choose the latest version.) The downloaded file may have an `.exe` extension,
    but actually, it is a self-extracting ZIP. Double-click on the file and, when
    prompted, enter any destination folder, which we will refer to as `<opencv_unzip_destination>`.
    A subfolder, `<opencv_unzip_destination>/opencv`, will be created.
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 [http://opencv.org/releases.html](https://opencv.org/releases.html) 下载 OpenCV
    Win 包。（选择最新版本。）下载的文件可能有 `.exe` 扩展名，但实际上它是一个自解压的 ZIP 文件。双击文件，当提示时，输入任何目标文件夹，我们将称之为
    `<opencv_unzip_destination>`。将创建一个子文件夹 `<opencv_unzip_destination>/opencv`。
- en: Download `opencv_contrib` as a ZIP from [https://github.com/opencv/opencv_contrib/releases](https://github.com/opencv/opencv_contrib/releases).
    (Choose the latest version.) Unzip it to any destination folder, which we will
    refer to as `<opencv_contrib_unzip_destination>`.
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 [https://github.com/opencv/opencv_contrib/releases](https://github.com/opencv/opencv_contrib/releases)
    下载 `opencv_contrib` 作为 ZIP 文件。（选择最新版本。）将其解压到任何目标文件夹，我们将称之为 `<opencv_contrib_unzip_destination>`。
- en: Download the latest stable version of TBB from [https://www.threadingbuildingblocks.org/download](https://www.threadingbuildingblocks.org/download).
    It includes both 32-bit and 64-bit binaries. Unzip it to any destination, which
    we will refer to as `<tbb_unzip_destination>`.
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 [https://www.threadingbuildingblocks.org/download](https://www.threadingbuildingblocks.org/download)
    下载最新稳定的 TBB 版本。它包括 32 位和 64 位二进制文件。将其解压到任何目标，我们将称之为 `<tbb_unzip_destination>`。
- en: 'Open Command Prompt. Create a folder to store our build:'
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开命令提示符。创建一个文件夹来存储我们的构建：
- en: '[PRE2]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Change directories to the newly created build folder:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 切换到新创建的构建文件夹：
- en: '[PRE3]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Having set up our dependencies, we can now configure OpenCV''s build system.
    To understand all the configuration options, we can read the code in `<opencv_unzip_destination>/opencv/sources/CMakeLists.txt`.
    However, as an example, we will just use the options for a release build that
    includes Python bindings and multiprocessing through TBB:'
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在设置好我们的依赖项之后，我们现在可以配置 OpenCV 的构建系统。要了解所有配置选项，我们可以阅读 `<opencv_unzip_destination>/opencv/sources/CMakeLists.txt`
    中的代码。然而，作为一个例子，我们将只使用用于包含 Python 绑定和通过 TBB 的多进程的发布构建的选项：
- en: 'To create a 32-bit project for Visual Studio 2017, run the following command
    (but replace the angle brackets and their contents with the actual paths):'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要为 Visual Studio 2017 创建一个 32 位项目，请运行以下命令（但将尖括号及其内容替换为实际路径）：
- en: '[PRE4]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Alternatively, to create a 64-bit project for Visual Studio 2017, run the following
    command (but replace the angle brackets and their contents with the actual paths):'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 或者，要为 Visual Studio 2017 创建一个 64 位项目，请运行以下命令（但将尖括号及其内容替换为实际路径）：
- en: '[PRE5]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: CMake will produce a report on the dependencies that it did or did not find.
    OpenCV has many optional dependencies, so do not panic (yet) about missing dependencies.
    However, if the build does not finish successfully, try installing missing dependencies.
    (Many are available as prebuilt binaries.) Then, repeat this step.
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CMake 将生成一个报告，说明它找到了或没有找到的依赖项。OpenCV 有许多可选依赖项，所以不要恐慌（目前还不要），关于缺失的依赖项。然而，如果构建没有成功完成，请尝试安装缺失的依赖项。（许多可以作为预构建的二进制文件获得。）然后，重复此步骤。
- en: Now that our build system is configured, we can compile OpenCV. Open `<build_folder>/OpenCV.sln`
    in Visual Studio. Select the Release configuration and build the solution. (You
    may get errors if you select another build configuration besides Release, because
    most Python installations do not include debug libraries.)
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们已经配置了构建系统，我们可以编译OpenCV。在Visual Studio中打开`<build_folder>/OpenCV.sln`。选择发布配置并构建解决方案。（如果您选择除了发布以外的其他构建配置，可能会出现错误，因为大多数Python安装不包括调试库。）
- en: We should ensure that our Python installation does not already include some
    other version of OpenCV. Find and delete any OpenCV files in your Python `DLLs`
    folder and your Python `site-packages` folder. For example, the paths to these
    files might match the `C:\Python37\DLLs\opencv_*.dll`, `C:\Python37\Lib\site-packages\opencv`,
    and `C:\Python37\Lib\site-packages\cv2.pyd` patterns.
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们应该确保我们的Python安装中不包含其他版本的OpenCV。在您的Python `DLLs`文件夹和Python `site-packages`文件夹中查找并删除任何OpenCV文件。例如，这些文件的路径可能与`C:\Python37\DLLs\opencv_*.dll`、`C:\Python37\Lib\site-packages\opencv`和`C:\Python37\Lib\site-packages\cv2.pyd`模式匹配。
- en: Finally, we need to install OpenCV to a location where Python and other processes
    can find it. To do this, right-click on the OpenCV solution's INSTALL project
    (in the Solution Explorer pane of Visual Studio) and build it. When this build
    finishes, quit Visual Studio. Edit the system's `Path` variable and append `;<build_folder>\install\x86\vc15\bin`
    (for a 32-bit build) or `;<build_folder>\install\x64\vc15\bin` (for a 64-bit build),
    which is the location where the OpenCV DLL files are located. Also, append `;<tbb_unzip_destination>\lib\ia32\vc14` (32-bit)
    or `;<tbb_unzip_ destination>\lib\intel64\vc14`(64-bit), which is the location
    where the TBB DLL files are located. Log out and log back in (or reboot). The
    OpenCV Python module is located at a path such as `C:\Python37\Lib\site-packages\cv2.pyd`.
    Python will find it there, so you do not need to take any further steps.
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，我们需要将OpenCV安装到一个Python和其他进程可以找到的位置。为此，在Visual Studio的解决方案资源管理器窗格中右键单击OpenCV解决方案的INSTALL项目，并构建它。当构建完成时，退出Visual
    Studio。编辑系统的`Path`变量，并追加`;<build_folder>\install\x86\vc15\bin`（对于32位构建）或`;<build_folder>\install\x64\vc15\bin`（对于64位构建），这是OpenCV
    DLL文件所在的位置。此外，追加`;<tbb_unzip_destination>\lib\ia32\vc14`（32位）或`;<tbb_unzip_destination>\lib\intel64\vc14`(64位)，这是TBB
    DLL文件所在的位置。注销并重新登录（或重启）。OpenCV的Python模块位于路径`C:\Python37\Lib\site-packages\cv2.pyd`，Python会在这里找到它，因此您不需要采取任何其他步骤。
- en: If you are using Visual Studio 2015, replace `vs2017` with `vs2015` , replace `Visual
    Studio 15 2017` with `Visual Studio 14 2015`, and replace `vc15` with `vc14`.
    However, for TBB, note that the folder named `vc14` contains the DLL files that
    work for both Visual Studio 2015 and Visual Studio 2017.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您使用的是Visual Studio 2015，将`vs2017`替换为`vs2015`，将`Visual Studio 15 2017`替换为`Visual
    Studio 14 2015`，并将`vc15`替换为`vc14`。然而，对于TBB，请注意，名为`vc14`的文件夹包含适用于Visual Studio
    2015和Visual Studio 2017的DLL文件。
- en: You might want to look at the code samples in `<opencv_unzip_destination>/opencv/sources/samples/python`.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能想查看`<opencv_unzip_destination>/opencv/sources/samples/python`中的代码示例。
- en: At this point, we have everything we need to develop OpenCV applications for
    Windows. To also develop for Android, we need to set up Android Studio, as described
    in the *Setting up Android Studio and OpenCV* section, later in this chapter.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经拥有了开发Windows上OpenCV应用程序所需的一切。要开发Android应用程序，我们需要设置Android Studio，如本章后面的*设置Android
    Studio和OpenCV*部分所述。
- en: Setting up Python and OpenCV on Mac
  id: totrans-87
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Mac上设置Python和OpenCV
- en: Mac comes with Python preinstalled. However, the preinstalled Python has been customized
    by Apple for the system's internal needs. Normally, we should not install any
    libraries on top of Apple's Python. If we do, our libraries might break during
    system updates, or worse, they might conflict with preinstalled libraries that
    the system requires. Instead, we should install standard Python 3.7 and then install
    our libraries on top of it.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: Mac预装了Python。然而，预装的Python已被Apple为系统内部需求进行了定制。通常，我们不应该在Apple的Python之上安装任何库。如果我们这样做，我们的库可能在系统更新期间损坏，或者更糟的是，它们可能与系统所需的预装库冲突。相反，我们应该安装标准的Python
    3.7，然后在其之上安装我们的库。
- en: For Mac, there are several possible approaches to obtaining standard Python
    3.7 and Python-compatible libraries, such as OpenCV. All approaches ultimately
    require some components to be compiled from source, using Xcode developer tools. However,
    depending on the approach we choose, the task of building these components is
    automated for us by third-party tools in various ways.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Mac，有几种可能的方法可以获得标准Python 3.7和与Python兼容的库，例如OpenCV。所有方法最终都需要使用Xcode开发者工具从源代码编译某些组件。然而，根据我们选择的方法，构建这些组件的任务将以各种方式由第三方工具自动完成。
- en: 'Let''s begin by setting up Xcode and the Xcode command-line tools, which give
    us a complete C++ development environment:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们先设置Xcode和Xcode命令行工具，这为我们提供了一个完整的C++开发环境：
- en: Download and install Xcode from the Mac App Store or [https://developer.apple.com/xcode/](https://developer.apple.com/xcode/).
    If the installer provides an option to install command-line tools, select it.
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从Mac App Store或[https://developer.apple.com/xcode/](https://developer.apple.com/xcode/)下载并安装Xcode。如果安装程序提供了安装命令行工具的选项，请选择它。
- en: Open Xcode. If a license agreement is presented, accept it.
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开Xcode。如果有许可协议出现，请接受它。
- en: 'If command-line tools were not already installed, we must install them now.
    Go to Xcode | Preferences | **Downloads** and click on the Install button next
    to command-line tools. Wait for the installation to finish. Then, quit Xcode.
    Alternatively, if you do not find an option to install command-line tools from
    inside Xcode, open the Terminal and run the following command:'
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果命令行工具尚未安装，我们现在必须安装它们。转到Xcode | 首选项 | **下载**，然后点击命令行工具旁边的安装按钮。等待安装完成。然后，退出Xcode。或者，如果您在Xcode内部找不到安装命令行工具的选项，请打开终端并运行以下命令：
- en: '[PRE6]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Now, we will look at ways to automate our builds using MacPorts or Homebrew.
    These two tools are package managers, which help us resolve dependencies and separate
    our development libraries from the system libraries.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将探讨使用MacPorts或Homebrew自动化构建的方法。这两个工具是包管理器，帮助我们解决依赖关系，并将我们的开发库与系统库分开。
- en: Generally, I recommend MacPorts. Compared to Homebrew, MacPorts offers more
    patches and configuration options for OpenCV. On the other hand, Homebrew offers
    more timely updates for OpenCV. At the time of writing, Homebrew offers a package
    for OpenCV 4.0.1, but MacPorts is still lagging at OpenCV 3.4.3\. Homebrew and
    MacPorts can coexist with the Python package manager, pip, and we can use pip
    to get OpenCV 4.0.1, even though MacPorts does not package this version yet. Normally,
    MacPorts and Homebrew should not be installed on the same machine.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，我推荐使用MacPorts。与Homebrew相比，MacPorts为OpenCV提供了更多的补丁和配置选项。另一方面，Homebrew为OpenCV提供了更及时更新。在撰写本文时，Homebrew提供了OpenCV
    4.0.1的包，但MacPorts仍然停留在OpenCV 3.4.3。Homebrew和MacPorts可以与Python包管理器pip共存，即使MacPorts尚未打包此版本，我们也可以使用pip获取OpenCV
    4.0.1。通常，MacPorts和Homebrew不应安装在同一台机器上。
- en: Our installation methods for Mac do not give us the OpenCV sample projects.
    To get these, download the latest source code archive from [https://opencv.org/releases.html](https://opencv.org/releases.html) and
    unzip it to any location. Find the samples in `<opencv_unzip_destination>/samples/python`.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 我们为Mac的安装方法并没有提供OpenCV的示例项目。要获取这些项目，请从[https://opencv.org/releases.html](https://opencv.org/releases.html)下载最新的源代码存档，并将其解压到任何位置。在`<opencv_unzip_destination>/samples/python`中找到示例。
- en: Now, depending on your preference, let's proceed to either the *Mac with MacPorts*
    section or the *Mac with Homebrew* section.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，根据您的偏好，让我们继续到*Mac with MacPorts*部分或*Mac with Homebrew*部分。
- en: Mac with MacPorts
  id: totrans-99
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Mac with MacPorts
- en: MacPorts provides Terminal commands that automate the process of downloading,
    compiling, and installing various pieces of **open source software** (**OSS**).
    MacPorts also installs dependencies, as needed. For each piece of software, the
    dependencies and build recipe are defined in a configuration file called a **Portfile**.
    A MacPorts repository is a collection of Portfiles.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: MacPorts提供终端命令，可以自动化下载、编译和安装各种开源软件（**OSS**）的过程。MacPorts还需要根据需要安装依赖项。对于每个软件包，依赖项和构建配方都定义在一个名为**Portfile**的配置文件中。MacPorts仓库是一系列Portfile的集合。
- en: 'Starting from a system where Xcode and its command-line tools are already set
    up, the following steps will give us an OpenCV installation through MacPorts:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 从一个已经设置好Xcode及其命令行工具的系统开始，以下步骤将通过MacPorts为我们提供一个OpenCV安装：
- en: Download and install MacPorts from [http://www.macports.org/install.php](http://www.macports.org/install.php).
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从[http://www.macports.org/install.php](http://www.macports.org/install.php)下载并安装MacPorts。
- en: 'Open the Terminal and run the following command to update MacPorts:'
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开终端并运行以下命令以更新 MacPorts：
- en: '[PRE7]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: When prompted, enter your password.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 当提示时，输入您的密码。
- en: 'Run the following commands to install Python 3.7, pip, NumPy, SciPy, and Requests:'
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下命令安装 Python 3.7、pip、NumPy、SciPy 和 Requests：
- en: '[PRE8]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'The Python installation executable is named python3.7\. To link the default
    python executable to python3.7, and to link the default pip executable to this
    Python pip installation, let''s also run the following:'
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Python 安装可执行文件名为 python3.7。要将默认的 python 可执行文件链接到 python3.7，并将默认的 pip 可执行文件链接到这个
    Python pip 安装，让我们也运行以下命令：
- en: '[PRE9]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'At the time of writing, MacPorts only has packages for relatively old versions
    of wxPython and PyInstaller. Let''s use the following `pip` command to install
    more recent versions:'
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在撰写本文时，MacPorts 只提供相对较旧的 wxPython 和 PyInstaller 软件包。让我们使用以下 `pip` 命令安装更近期的版本：
- en: '[PRE10]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'To check whether MacPorts has an OpenCV 4 package, run `$ port list opencv`.
    At the time of writing, this produces the following output:'
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要检查 MacPorts 是否有 OpenCV 4 软件包，请运行 `$ port list opencv`。在撰写本文时，这会产生以下输出：
- en: '[PRE11]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Here, `@3.4.3` means that OpenCV 3.4.3 is the latest available package from
    MacPorts. However, if your output shows `@4.0.0` or a more recent version, you
    can use MacPorts to configure, build, and install OpenCV 4, by running a command
    such as the following:'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这里，`@3.4.3` 表示 OpenCV 3.4.3 是来自 MacPorts 的最新可用软件包。然而，如果你的输出显示 `@4.0.0` 或更高版本，你可以通过运行类似以下命令的命令来使用
    MacPorts 配置、构建和安装 OpenCV 4：
- en: '[PRE12]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'By adding `+avx2 +contrib +opencl +python37` to the command, we are specifying
    that we want the `opencv` variant (build configuration) with AVX2 CPU optimizations,
    `opencv_contrib` extra modules, OpenCL GPU optimizations, and Python 3.7 bindings. To
    see the full list of available variants before installing, we can enter the following:'
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过在命令中添加 `+avx2 +contrib +opencl +python37`，我们指定我们想要具有 AVX2 CPU 优化的 `opencv`
    变体（构建配置）、`opencv_contrib` 额外模块、OpenCL GPU 优化和 Python 3.7 绑定的版本。在安装之前，我们可以输入以下命令来查看所有可用的变体：
- en: '[PRE13]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Depending on our customization needs, we can add other variants to the `install`
    command.
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 根据我们的定制需求，我们可以在 `install` 命令中添加其他变体。
- en: 'On the other hand, if the output from `$ port list opencv` showed that MacPorts
    does not have an OpenCV 4 package yet, we can instead install OpenCV 4 and the
    `opencv_contrib` extra modules with pip, by running the following command:'
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 另一方面，如果 `$ port list opencv` 的输出显示 MacPorts 尚未提供 OpenCV 4 软件包，我们可以通过运行以下命令来使用
    pip 安装 OpenCV 4 和 `opencv_contrib` 额外模块：
- en: '[PRE14]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Now, we have everything we need to develop OpenCV applications for Mac. To also
    develop for Android, we need to set up Android Studio, as we will describe in
    the following *Android Studio* section*.*
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们已经有了一切开发 Mac OpenCV 应用程序所需的东西。要开发 Android，我们需要设置 Android Studio，我们将在以下
    *Android Studio* 部分中描述。
- en: Mac with Homebrew
  id: totrans-122
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Mac with Homebrew
- en: Like MacPorts, Homebrew is a package manager that provides Terminal commands
    to automate the process of downloading, compiling, and installing various pieces
    of open source software.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 与 MacPorts 类似，Homebrew 是一个包管理器，它提供终端命令来自动化下载、编译和安装各种开源软件的过程。
- en: 'Starting from a system where Xcode and its command-line tools are already set
    up, the following steps will give us an OpenCV installation through Homebrew:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 从已经设置好 Xcode 及其命令行工具的系统开始，以下步骤将通过 Homebrew 为我们提供 OpenCV 安装：
- en: 'Open Terminal and run the following command to install Homebrew:'
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开终端并运行以下命令以安装 Homebrew：
- en: '[PRE15]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Unlike MacPorts, Homebrew does not automatically put its executables in `PATH`.
    To do so, create or edit the `~/.profile` file and add this line at the top:'
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 与 MacPorts 不同，Homebrew 不会自动将其可执行文件放入 `PATH`。要这样做，创建或编辑 `~/.profile` 文件，并在顶部添加此行：
- en: '[PRE16]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Save the file and run this command to refresh `PATH`:'
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 保存文件并运行此命令以刷新 `PATH`：
- en: '[PRE17]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Note that executables installed by Homebrew now take precedence over executables
    installed by the system.
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 注意，现在由 Homebrew 安装的可执行文件优先于由系统安装的可执行文件。
- en: 'For Homebrew''s self-diagnostic report, run:'
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于 Homebrew 的自我诊断报告，请运行：
- en: '[PRE18]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Follow any troubleshooting advice it gives.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 遵循它提供的任何故障排除建议。
- en: 'Now, update Homebrew:'
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，更新 Homebrew：
- en: '[PRE19]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Run the following command to install Python 3.7:'
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下命令安装 Python 3.7：
- en: '[PRE20]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Now, we can use Homebrew to install OpenCV and its dependencies, including
    NumPy. Run the following command:'
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们可以使用 Homebrew 安装 OpenCV 及其依赖项，包括 NumPy。运行以下命令：
- en: '[PRE21]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Similarly, run the following command to install SciPy:'
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 同样，运行以下命令安装 SciPy：
- en: '[PRE22]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'At the time of writing, Homebrew does not have packages for `requests` and
    `pyinstaller`, and its `wxPython` package is a relatively old version, so instead,
    we will use `pip` to install these modules. Run the following command:'
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在撰写本文时，Homebrew 没有提供 `requests` 和 `pyinstaller` 的软件包，并且它的 `wxPython` 软件包是一个相对较旧的版本，因此我们将使用
    `pip` 安装这些模块。运行以下命令：
- en: '[PRE23]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Now, we have everything we need to develop OpenCV applications for Mac. To also
    develop for Android, we need to set up **Tegra Android Development Pack** (**TADP**),
    as described in the following *Tegra Android Development Pack* section.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们已经拥有了开发 Mac 版 OpenCV 应用程序所需的一切。要同时为 Android 开发，我们需要设置 **Tegra Android 开发包**（**TADP**），如下面的
    *Tegra Android 开发包* 部分所述。
- en: Setting up Python and OpenCV on Debian Jessie and its derivatives, including
    Raspbian, Ubuntu, and Linux Mint
  id: totrans-146
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Debian Jessie 及其衍生版本（包括 Raspbian、Ubuntu 和 Linux Mint）上设置 Python 和 OpenCV
- en: For information on setting up the Raspbian operating system, see the *Setting
    up a Raspberry Pi* section, later in this chapter.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 关于设置 Raspbian 操作系统的信息，请参阅本章后面的 *设置 Raspberry Pi* 部分。
- en: 'On Debian Jessie, Raspbian, Ubuntu, Linux Mint, and their derivatives, the
    python executable is Python 2.7, which comes preinstalled. We can use the system
    package manager, apt, to install NumPy, SciPy, and Requests from the standard
    repository. To update the apt package index and install the packages, run the
    following commands in Terminal:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Debian Jessie、Raspbian、Ubuntu、Linux Mint 及其衍生版本上，python 可执行文件是 Python 2.7，它是预安装的。我们可以使用系统包管理器
    apt 从标准仓库安装 NumPy、SciPy 和 Requests。要更新 apt 软件包索引并安装软件包，请在终端中运行以下命令：
- en: '[PRE24]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'The standard repository''s latest packaged version of wxPython varies, depending
    on the operating system. On Ubuntu 14.04 and its derivatives, including Linux
    Mint 17, the latest packaged version is wxPython 2.8\. Install it by running the
    following command:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 标准仓库的 wxPython 最新打包版本因操作系统而异。在 Ubuntu 14.04 及其衍生版本（包括 Linux Mint 17）上，最新的打包版本是
    wxPython 2.8。通过运行以下命令安装它：
- en: '[PRE25]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'On Ubuntu 18.04 and newer versions, as well as derivatives such as Linux Mint
    19, the latest packaged version is wxPython 4.0\. Install it by running the following
    command:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Ubuntu 18.04 及更高版本以及衍生版本（如 Linux Mint 19）上，最新的打包版本是 wxPython 4.0。通过运行以下命令安装它：
- en: '[PRE26]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'On most other systems in the Debian Jessie family, wxPython 3.0 is the latest
    packaged version. Install it by running the following command:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Debian Jessie 家族中的大多数其他系统上，wxPython 3.0 是最新的打包版本。通过运行以下命令安装它：
- en: '[PRE27]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'The standard repository does not offer a PyInstaller package. Instead, let''s
    use Python''s own package manager, `pip`, to obtain PyInstaller. First, to ensure
    that `pip` is installed, run the following command:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 标准仓库不提供 PyInstaller 软件包。相反，让我们使用 Python 自身的包管理器 `pip` 来获取 PyInstaller。首先，为了确保已安装
    `pip`，请运行以下命令：
- en: '[PRE28]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Now, install PyInstaller by running the following command:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，通过运行以下命令安装 PyInstaller：
- en: '[PRE29]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'The standard repository contains a `python-opencv` package, but it is an old
    version (3.2.0 or older, depending on the operating system) and it is missing
    the `opencv_contrib` modules, so it lacks some of the functionality used in this
    book. Thus, we have a choice of either using `pip` to obtain OpenCV 4 with the
    `opencv_contrib` modules, or building the same from source. To install a prebuilt
    version of OpenCV 4 and `opencv_contrib` with `pip`, run the following command:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 标准仓库包含一个 `python-opencv` 包，但它是一个较旧的版本（3.2.0 或更早版本，取决于操作系统），并且缺少 `opencv_contrib`
    模块，因此缺少了本书中使用的一些功能。因此，我们有两种选择：要么使用 `pip` 获取带有 `opencv_contrib` 模块的 OpenCV 4，要么从源代码构建。要使用
    `pip` 安装预构建版本的 OpenCV 4 和 `opencv_contrib`，请运行以下命令：
- en: '[PRE30]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: If you prefer to use the `python3` executable, which is Python 3.4 or a newer
    version (depending on the operating system), modify all the `apt-get` commands
    in the preceding instructions to use package names like `python3-numpy`, instead
    of names like `python-numpy`. Similarly, replace the `pip` commands with the `pip3`
    commands.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你更喜欢使用 `python3` 可执行文件，它是 Python 3.4 或更新的版本（取决于操作系统），请将前面指令中的所有 `apt-get`
    命令修改为使用类似 `python3-numpy` 的包名，而不是类似 `python-numpy` 的名称。同样，将 `pip` 命令替换为 `pip3`
    命令。
- en: Alternatively, to build `OpenCV` and `opencv_contrib` from source, follow the
    instructions in the following *Building OpenCV on Debian Jessie and its derivates
    with CMake and GCC* section.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，要从源代码构建 `OpenCV` 和 `opencv_contrib`，请遵循以下 *在 Debian Jessie 及其衍生版本上使用 CMake
    和 GCC 构建 OpenCV* 部分的说明。
- en: After either installing a prebuilt `OpenCV` and `opencv_contrib` module or building
    it from source, we will have everything we need to develop OpenCV applications
    for Debian Jessie or a derivative. To also develop for Android, we need to set
    up Android Studio, as described in the *Setting up Android Studio and OpenCV* section,
    later in this chapter.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 在安装预构建的 `OpenCV` 和 `opencv_contrib` 模块或从源代码构建之后，我们将拥有为 Debian Jessie 或其衍生版本开发
    OpenCV 应用程序所需的一切。要为 Android 开发，我们需要设置 Android Studio，如本章后面的 *设置 Android Studio
    和 OpenCV* 部分所述。
- en: Building OpenCV on Debian Jessie and its derivatives with CMake and GCC
  id: totrans-165
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 CMake 和 GCC 在 Debian Jessie 及其衍生版本上构建 OpenCV
- en: To compile OpenCV from source, we need a general-purpose C++ development environment.
    On Linux, the standard C++ development environment includes the g++ compiler and
    the Make build system, which defines build instructions in a file format known
    as **Makefile**.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 要从源代码编译 OpenCV，我们需要一个通用的 C++ 开发环境。在 Linux 上，标准的 C++ 开发环境包括 g++ 编译器和 Make 构建系统，该系统在名为
    **Makefile** 的文件格式中定义了构建指令。
- en: OpenCV uses a set of build tools called **CMake**, which automates the use of
    Make, g++, and other tools. CMake 3 or a newer version is required, and we must
    install it. Also, we will install several third-party libraries. Some of these
    are required for standard OpenCV features, while others are optional dependencies
    that enable extra features.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: OpenCV 使用一组称为 **CMake** 的构建工具，它自动化了 Make、g++ 和其他工具的使用。需要 CMake 3 或更高版本，我们必须安装它。此外，我们还将安装几个第三方库。其中一些是标准
    OpenCV 功能所需的，而其他则是可选依赖项，它们可以启用额外功能。
- en: 'As an example, let''s install the following optional dependencies:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，让我们安装以下可选依赖项：
- en: '`libdc1394`: This is a library to programmatically control IEEE 1394 (FireWire)
    cameras, which are quite common in industrial use. OpenCV can leverage this library
    to capture photos or video from some of these cameras.'
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`libdc1394`：这是一个用于程序化控制 IEEE 1394（火线）摄像头的库，这些摄像头在工业应用中相当常见。OpenCV 可以利用这个库从这些摄像头中捕获照片或视频。'
- en: '`libgphoto2`: This is a library to programmatically control photo cameras through
    a wired or wireless connection. The `libgphoto2` library supports a large number
    of cameras from Canon, Fuji, Leica, Nikon, Olympus, Panasonic, Sony, and other
    manufacturers. OpenCV can leverage this library to capture photos or video from
    some of these cameras.'
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`libgphoto2`：这是一个用于通过有线或无线连接程序化控制相机的库。`libgphoto2` 库支持来自佳能、富士、莱卡、尼康、奥林巴斯、松下、索尼和其他制造商的大量相机。OpenCV
    可以利用这个库从这些相机中捕获照片或视频。'
- en: 'After installing dependencies, we will configure, build, and install `OpenCV`.
    Here are the detailed steps:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 在安装依赖项之后，我们将配置、构建和安装 `OpenCV`。以下是详细步骤：
- en: 'On Ubuntu 14.04 and its derivatives, including Linux Mint 17, the `cmake` package
    in the standard repository is CMake 2, which is too old for our purposes. We need
    to ensure that the `cmake` package is not installed, and then we need to install
    the `cmake3` package, as well as other essential development and packaging tools.
    To accomplish this, run the following commands:'
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Ubuntu 14.04 及其衍生版本，包括 Linux Mint 17 上，标准仓库中的 `cmake` 软件包是 CMake 2，这对于我们的目的来说太老了。我们需要确保不安装
    `cmake` 软件包，然后我们需要安装 `cmake3` 软件包，以及其他必要的发展和打包工具。为此，请运行以下命令：
- en: '[PRE31]'
  id: totrans-173
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'On more recent versions of Ubuntu and its derivatives, and on Debian Jessie,
    the `cmake3` package does not exist; rather, the `cmake` package is CMake 3\.
    Install it, as well as other essential development and packaging tools, by running
    the following command:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Ubuntu 和其衍生版本以及 Debian Jessie 的较新版本上，`cmake3` 软件包不存在；相反，`cmake` 软件包是 CMake
    3。通过运行以下命令安装它，以及其他必要的发展和打包工具：
- en: '[PRE32]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: If your system uses a proxy server to access the internet, define two environment
    variables, `HTTP_PROXY` and `HTTPS_PROXY`, with values equal to the proxy server
    URL, such as `http://myproxy.com:8080`. This ensures that CMake can use the proxy
    server to download some additional dependencies for OpenCV. (If in doubt, do *not* define
    these environment variables; you are probably *not* using a proxy server.)
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您的系统使用代理服务器访问互联网，定义两个环境变量 `HTTP_PROXY` 和 `HTTPS_PROXY`，其值等于代理服务器 URL，例如 `http://myproxy.com:8080`。这确保
    CMake 可以使用代理服务器下载 OpenCV 的一些附加依赖项。（如果有疑问，请不要定义这些环境变量；您可能**没有**使用代理服务器。）
- en: 'Run the following command to install OpenCV''s dependencies for Python bindings
    and for video capture from **Video4Linux** (**V4L**)-compatible cameras, including
    most webcams:'
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下命令以安装 OpenCV 的 Python 绑定和从 **Video4Linux**（**V4L**）兼容摄像头进行视频捕获的依赖项，包括大多数网络摄像头：
- en: '[PRE33]'
  id: totrans-178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: If you prefer to use Python 3, replace `python-dev` with `python3-dev` in the
    preceding command.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想使用 Python 3，请在上述命令中将 `python-dev` 替换为 `python3-dev`。
- en: 'Run the following command to install optional OpenCV dependencies:'
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下命令以安装可选的 OpenCV 依赖项：
- en: '[PRE34]'
  id: totrans-181
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: Download the OpenCV source's ZIP from [http://opencv.org/releases.html](https://opencv.org/releases.html).
    (Choose the latest version.) Unzip it to any destination folder, which we will
    refer to as `<opencv_unzip_destination>`.
  id: totrans-182
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 [http://opencv.org/releases.html](http://opencv.org/releases.html) 下载 OpenCV
    源的 ZIP 文件。（选择最新版本。）将其解压到任何目标文件夹中，我们将称该文件夹为 `<opencv_unzip_destination>`。
- en: Download `opencv_contrib` as a ZIP from [https://github.com/opencv/opencv_contrib/releases](https://github.com/opencv/opencv_contrib/releases).
    (Choose the latest version.) Unzip it to any destination folder, which we will
    refer to as `<opencv_contrib_unzip_destination>`.
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 [https://github.com/opencv/opencv_contrib/releases](https://github.com/opencv/opencv_contrib/releases)
    下载 `opencv_contrib` 的 ZIP 文件。（选择最新版本。）将其解压到任何目标文件夹中，我们将称该文件夹为 `<opencv_contrib_unzip_destination>`。
- en: 'Open Command Prompt. Create a folder to store our build:'
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开命令提示符。创建一个文件夹来存储我们的构建：
- en: '[PRE35]'
  id: totrans-185
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'Change the directory to the newly created build folder:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 将目录更改为新创建的构建文件夹：
- en: '[PRE36]'
  id: totrans-187
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Having set up our dependencies, we can now configure OpenCV''s build system.
    To understand all the configuration options, we can read the code in `<opencv_unzip_destination>/opencv/sources/CMakeLists.txt`.
    However, as an example, we will just use the options for a release build that
    includes Python bindings, support for OpenGL interoperability, and support for
    extra camera types and video types. To create Makefiles for OpenCV with Python
    2.7 bindings, run the following command (but replace the angle brackets and their
    contents with the actual paths):'
  id: totrans-188
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在设置好依赖项后，我们现在可以配置 OpenCV 的构建系统。要了解所有配置选项，我们可以阅读 `<opencv_unzip_destination>/opencv/sources/CMakeLists.txt`
    中的代码。然而，作为一个例子，我们将只使用用于包含 Python 绑定、OpenGL 互操作性和额外相机类型及视频类型的发布构建的选项。要为 OpenCV
    创建带有 Python 2.7 绑定的 Makefiles，请运行以下命令（但将尖括号及其内容替换为实际路径）：
- en: '[PRE37]'
  id: totrans-189
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'Alternatively, to create Makefiles for OpenCV with bindings for Python 3, run
    the following command (but replace the angle brackets and their contents with
    the actual paths, and replace `3.6` with your actual Python 3 version, if it is
    not 3.6):'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，要为 OpenCV 创建带有 Python 3 绑定的 Makefiles，请运行以下命令（但将尖括号及其内容替换为实际路径，如果您的 Python
    3 版本不是 3.6，请将其替换为您的实际版本）：
- en: '[PRE38]'
  id: totrans-191
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'Run the following commands to build and install OpenCV in the manner specified
    by the Makefiles:'
  id: totrans-192
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下命令以按 Makefiles 中指定的方式构建和安装 OpenCV：
- en: '[PRE39]'
  id: totrans-193
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: At this point, we have everything we need to develop OpenCV applications for
    Debian Jessie or a derivative. To also develop for Android, we need to set up
    Android Studio, as described in the *Setting up Android Studio and OpenCV* section,
    later in this chapter.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经拥有了为 Debian Jessie 或其衍生版本开发 OpenCV 应用程序所需的一切。要为 Android 也进行开发，我们需要设置
    Android Studio，如本章后面的 *设置 Android Studio 和 OpenCV* 部分所述。
- en: Setting up Python and OpenCV on Fedora and its derivatives, including RHEL and
    CentOS
  id: totrans-195
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Fedora 及其衍生版本（包括 RHEL 和 CentOS）上设置 Python 和 OpenCV
- en: 'On Fedora, RHEL, and CentOS, the `python` executable is Python 2.7, which comes
    preinstalled. We can use the system package manager, yum, to install NumPy, SciPy,
    Requests, and wxPython from the standard repository. To do this, open Terminal
    and run the following command:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Fedora、RHEL 和 CentOS 上，`python` 可执行文件是 Python 2.7，它是预安装的。我们可以使用系统包管理器 yum
    从标准仓库安装 NumPy、SciPy、Requests 和 wxPython。为此，打开终端并运行以下命令：
- en: '[PRE40]'
  id: totrans-197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'The standard repository does not offer a PyInstaller package. Instead, let''s
    use Python''s own package manager, `pip`, to obtain PyInstaller. First, to ensure
    that `pip` is installed, run the following command:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 标准仓库不提供 PyInstaller 软件包。相反，让我们使用 Python 自身的包管理器 `pip` 来获取 PyInstaller。首先，为了确保已安装
    `pip`，请运行以下命令：
- en: '[PRE41]'
  id: totrans-199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'Now, install PyInstaller by running the following command:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，通过运行以下命令安装 PyInstaller：
- en: '[PRE42]'
  id: totrans-201
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'The standard repository contains an `opencv` package, which includes the `opencv_contrib`
    modules and Python bindings, but it is an old version (3.4.4 or older, depending
    on the operating system). Thus, we want to use `pip` to obtain OpenCV 4 with the
    `opencv_contrib` modules. Run the following command:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 标准仓库包含一个 `opencv` 软件包，其中包含 `opencv_contrib` 模块和 Python 绑定，但它是一个旧版本（3.4.4 或更早版本，具体取决于操作系统）。因此，我们想使用
    `pip` 获取带有 `opencv_contrib` 模块的 OpenCV 4。运行以下命令：
- en: '[PRE43]'
  id: totrans-203
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: If you prefer to use the `python3` executable, which is Python 3.6 or 3.7 (depending
    on the operating system), replace the preceding `pip` commands with the `pip3` commands.
    You do not need to modify the `yum` commands, as the relevant packages, such as
    `numpy`, include sub-packages for both Python 2 and Python 3.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你更喜欢使用 `python3` 可执行文件，它是 Python 3.6 或 3.7（取决于操作系统），将前面的 `pip` 命令替换为 `pip3`
    命令。你不需要修改 `yum` 命令，因为相关的包，如 `numpy`，包括 Python 2 和 Python 3 的子包。
- en: Now, we have everything we need to develop OpenCV applications for Fedora or
    a derivative. To also develop for Android, we need to set up Android Studio, as
    described in the following *Setting up Android Studio and OpenCV* section.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们已经拥有了开发 Fedora 或其衍生版本 OpenCV 应用程序所需的一切。要开发 Android 应用，我们需要设置 Android Studio，如以下
    **设置 Android Studio 和 OpenCV** 部分所述。
- en: Setting up Python and OpenCV on openSUSE and its derivatives
  id: totrans-206
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 openSUSE 及其衍生版本上设置 Python 和 OpenCV
- en: 'On openSUSE, the `python` executable is Python 2.7, which comes preinstalled.
    We can use the system package manager, yum, to install NumPy, SciPy, Requests,
    and wxPython from the standard repository. To do this, open Terminal and run the
    following command:'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 在 openSUSE 上，`python` 可执行文件是 Python 2.7，它是预安装的。我们可以使用系统包管理器 yum，从标准仓库安装 NumPy、SciPy、Requests
    和 wxPython。为此，打开终端并运行以下命令：
- en: '[PRE44]'
  id: totrans-208
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: Although openSUSE and Fedora both use the yum package manager, they use different
    standard repositories with different package names.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然 openSUSE 和 Fedora 都使用 yum 包管理器，但它们使用不同的标准仓库，包名也不同。
- en: 'The standard repository does not offer a PyInstaller package. Instead, let''s
    use Python''s own package manager, `pip`, to obtain PyInstaller. First, to ensure
    that pip is installed, run the following command:'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 标准仓库不提供 PyInstaller 包。相反，让我们使用 Python 自带的包管理器 `pip` 来获取 PyInstaller。首先，为了确保
    pip 已安装，运行以下命令：
- en: '[PRE45]'
  id: totrans-211
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'Now, install PyInstaller by running the following command:'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，通过运行以下命令来安装 PyInstaller：
- en: '[PRE46]'
  id: totrans-213
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'The standard repository contains a `python2-opencv` package (and a `python3-opencv`
    package for Python 3), but it is an old version of OpenCV (3.4.3 or older, depending
    on the operating system). Thus, we want to use pip to obtain OpenCV 4 with the
    `opencv_contrib` modules. Run the following command:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 标准仓库包含一个 `python2-opencv` 包（以及 Python 3 的 `python3-opencv` 包），但它是一个较旧的 OpenCV
    版本（3.4.3 或更早，取决于操作系统）。因此，我们想使用 pip 获取带有 `opencv_contrib` 模块的 OpenCV 4。运行以下命令：
- en: '[PRE47]'
  id: totrans-215
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: If you prefer to use the `python3` executable, which is Python 3.4, 3.6, or
    3.7 (depending on the operating system), replace the preceding `pip` commands
    with the `pip3` commands. You do not need to modify the `yum` commands, as the
    relevant packages, such as `python-numpy`, include sub-packages for both Python
    2 and Python 3.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你更喜欢使用 `python3` 可执行文件，它是 Python 3.4、3.6 或 3.7（取决于操作系统），将前面的 `pip` 命令替换为 `pip3`
    命令。你不需要修改 `yum` 命令，因为相关的包，如 `python-numpy`，包括 Python 2 和 Python 3 的子包。
- en: Now, we have everything we need to develop OpenCV applications for openSUSE
    or a derivative. Next, we need to follow the cross-platform steps for setting
    up an Android development environment.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们已经拥有了开发 openSUSE 或其衍生版本 OpenCV 应用程序所需的一切。接下来，我们需要遵循跨平台步骤来设置 Android 开发环境。
- en: Setting up Android Studio and OpenCV
  id: totrans-218
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置 Android Studio 和 OpenCV
- en: Android Studio is Google's official **integrated development environment** (**IDE**)
    for Android app development. Since its first stable release in 2014, Android Studio
    has grown in popularity and has replaced Eclipse as the IDE of choice for Android
    developers. Although some of the OpenCV documentation still contains outdated
    tutorials on Android development in Eclipse, nowadays, the OpenCV Android library
    and Android sample projects are primarily intended for use with Android Studio,
    instead.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: Android Studio 是 Google 为 Android 应用开发提供的官方 **集成开发环境**（**IDE**）。自 2014 年首次稳定发布以来，Android
    Studio 的受欢迎程度不断提高，并取代了 Eclipse，成为 Android 开发者的首选 IDE。尽管一些 OpenCV 文档仍然包含关于 Eclipse
    中 Android 开发的过时教程，但现在，OpenCV Android 库和 Android 示例项目主要是为了与 Android Studio 一起使用。
- en: Google provides a good cross-platform tutorial on Android Studio installation
    at [https://developer.android.com/studio/install](https://developer.android.com/studio/install).
    Follow the part of the tutorial that is relevant to your operating system.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: Google 在 [https://developer.android.com/studio/install](https://developer.android.com/studio/install)
    提供了一个关于 Android Studio 安装的优秀跨平台教程。请遵循与你的操作系统相关的教程部分。
- en: 'Download the latest version of the OpenCV Android pack from [https://opencv.org/releases.html](https://opencv.org/releases.html).
    Unzip it to any destination, which we will refer to as `<opencv_android_pack_unzip_destination>`.
    This has two subfolders:'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 从 [https://opencv.org/releases.html](https://opencv.org/releases.html) 下载最新的
    OpenCV Android 包。将其解压到任何位置，我们将此位置称为 `<opencv_android_pack_unzip_destination>`。它包含两个子文件夹：
- en: '`<opencv_android_pack_unzip_destination>/sdk` contains the `OpenCV4Android`
    SDK. This consists of Java and C++ libraries, as well as build instructions, which
    we can import into Android Studio projects.'
  id: totrans-222
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<opencv_android_pack_unzip_destination>/sdk` 包含了 `OpenCV4Android` SDK。这包括
    Java 和 C++ 库，以及构建说明，我们可以将其导入到 Android Studio 项目中。'
- en: '`<opencv_android_pack_unzip_destination>/samples` contains sample projects
    that can be built in Android Studio. Unfortunately, as of OpenCV 4.0.1, these
    samples are outdated. On Android 6.0 and newer versions, the samples fail to access
    the camera, because they do not request user permission at runtime in the required
    manner.'
  id: totrans-223
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<opencv_android_pack_unzip_destination>/samples` 包含可以在 Android Studio 中构建的示例项目。不幸的是，截至
    OpenCV 4.0.1，这些示例已经过时。在 Android 6.0 及更高版本上，这些示例无法访问相机，因为它们没有以正确的方式在运行时请求用户权限。'
- en: At this point, we have obtained the core components of our development environment
    for the OpenCV Android apps. Next, let's look at Unity, a game engine that can
    deploy to Android and other platforms.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经获得了 OpenCV Android 应用开发环境的核心组件。接下来，让我们看看 Unity，这是一个可以将游戏部署到 Android
    和其他平台的游戏引擎。
- en: Setting up Unity and OpenCV
  id: totrans-225
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置 Unity 和 OpenCV
- en: Unity ([https://unity3d.com](https://unity3d.com)) is a three-dimensional game
    engine that supports development on 64-bit Windows or Mac, and deployment to many
    platforms, including Windows, Mac, Linux, iOS, Android, WebGL, and several game
    consoles. For one of our projects, we will use Unity along with a plugin called
    **OpenCV for Unity**, which is developed by Enox Software ([http://enoxsoftware.com/](http://enoxsoftware.com/).) 
    The main programming language for Unity projects is C#, and OpenCV for Unity provides
    a C# API that is modeled on the OpenCV Java API for Android.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: Unity ([https://unity3d.com](https://unity3d.com)) 是一款支持在 64 位 Windows 或 Mac
    上进行开发，并部署到包括 Windows、Mac、Linux、iOS、Android、WebGL 以及多款游戏主机在内的多个平台的 三维游戏引擎。在我们的一个项目中，我们将使用
    Unity 以及一个名为 **OpenCV for Unity** 的插件，该插件由 Enox Software ([http://enoxsoftware.com/](http://enoxsoftware.com/))
    开发。Unity 项目的主体编程语言是 C#，OpenCV for Unity 提供了一个基于 OpenCV Java API for Android 的
    C# API。
- en: Unity has three license plans, Personal, Plus, and Pro, which all support the
    plugin that we want to use. The different editions are for different sizes of
    companies, as described in the licensing information at [https://store.unity.com](https://store.unity.com). The
    Personal license is free. The Plus and Pro licenses have subscription costs. If
    you are not already a Unity subscriber, you may want to wait and purchase a subscription
    when you are ready to start working on our Unity project in [Chapter 6](5c9b90d0-e860-4d65-8af2-9d6537a2e0c7.xhtml)*,
    Creating a Physics Simulation Based on a Pen and Paper Sketch*. Once you are ready,
    obtain your license from [https://store.unity.com](https://store.unity.com) and
    download Unity Hub from [https://unity3d.com/get-unity/download](https://unity3d.com/get-unity/download).
    Unity Hub is an application to manage your Unity licenses and installations. Use
    it to set up Unity on your system. You can purchase OpenCV for Unity from the
    Unity Asset Store at [https://assetstore.unity.com/packages/tools/integration/opencv-for-unity-21088](https://assetstore.unity.com/packages/tools/integration/opencv-for-unity-21088),
    but we will cover details about obtaining the plugin in [Chapter 6](5c9b90d0-e860-4d65-8af2-9d6537a2e0c7.xhtml), *Creating
    a Physics Simulation Based on a Pen and Paper Sketch,* when we set up a Unity
    project.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: Unity 有三种许可计划：个人版、专业版和高级版，它们都支持我们想要使用的插件。不同的版本适用于不同规模的公司，具体请参阅 [https://store.unity.com](https://store.unity.com)
    上的许可信息。个人版是免费的。专业版和高级版有订阅费用。如果您还不是 Unity 订阅者，您可能需要等待，并在准备开始在第 6 章 [创建基于笔和纸的物理模拟](5c9b90d0-e860-4d65-8af2-9d6537a2e0c7.xhtml)*时购买订阅。一旦准备好，从
    [https://store.unity.com](https://store.unity.com) 获取您的许可证，并从 [https://unity3d.com/get-unity/download](https://unity3d.com/get-unity/download)
    下载 Unity Hub。Unity Hub 是一个用于管理您的 Unity 许可证和安装的应用程序。使用它来设置系统上的 Unity。您可以从 Unity
    资产商店 [https://assetstore.unity.com/packages/tools/integration/opencv-for-unity-21088](https://assetstore.unity.com/packages/tools/integration/opencv-for-unity-21088)
    购买 OpenCV for Unity，但我们将详细说明在设置 Unity 项目时如何获取插件的内容，在第 6 章 [创建基于笔和纸的物理模拟](5c9b90d0-e860-4d65-8af2-9d6537a2e0c7.xhtml)*中介绍。
- en: Even before installing Unity, we can get inspiration from the demos at [https://unity3d.com/unity/demos/](https://unity3d.com/unity/demos).
    These demos include videos, articles about the development process, and in some
    cases, playable games that you can download for various platforms. They also include
    source code and art assets that you can open in Unity. After installing Unity,
    we can learn from these and other demo projects. Take a look at the resources
    available for download at [https://unity3d.com/learn/resources/downloads](https://unity3d.com/learn/resources/downloads).
    Also, check out the tutorials, videos, and documentation at [https://unity3d.com/learn](https://unity3d.com/learn).
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 在安装Unity之前，我们就可以从[https://unity3d.com/unity/demos/](https://unity3d.com/unity/demos/)上的演示中获得灵感。这些演示包括视频、关于开发过程的文章，在某些情况下，还有可以下载到各种平台上的可玩游戏。它们还包括可以在Unity中打开的源代码和艺术资源。安装Unity后，我们可以从这些和其他演示项目中学习。查看可下载的资源，请访问[https://unity3d.com/learn/resources/downloads](https://unity3d.com/learn/resources/downloads)。此外，还可以查看[https://unity3d.com/learn](https://unity3d.com/learn)上的教程、视频和文档。
- en: As you can see, there are a lot of official resources for Unity beginners, so
    I will let you explore these on your own for now.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，有很多官方资源可供Unity初学者使用，所以现在我将让您自己探索这些资源。
- en: Setting up a Raspberry Pi
  id: totrans-230
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置Raspberry Pi
- en: Raspberry Pi is a **single-board computer** (**SBC**) with a low cost and low
    power consumption. It can be used as a desktop, a server, or an embedded system
    that controls other electronics. The Pi comes in several models. Currently, the
    flagship is Model 3 B+, which costs about $35\. Compared to other models, it offers
    a faster CPU, more memory, and a faster Ethernet port, so it is a good candidate
    for computer vision experiments that rely on either local computing resources
    or the cloud. However, other models are also usable for computer vision projects.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: Raspberry Pi是一款低成本、低功耗的单板计算机（**SBC**）。它可以作为台式机、服务器或控制其他电子设备的嵌入式系统使用。Pi有多种型号。目前，旗舰产品是Model
    3 B+，售价约35美元。与其他型号相比，它提供了更快的CPU、更多内存和更快的以太网端口，因此它是依赖于本地计算资源或云的计算机视觉实验的良好候选者。然而，其他型号也可以用于计算机视觉项目。
- en: Several operating systems are available for Raspberry Pi. We will use Raspbian,
    which is a port of Debian Stretch (a major Linux distribution) to ARM.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Raspberry Pi，有几种操作系统可供选择。我们将使用Raspbian，它是Debian Stretch（一个主要的Linux发行版）的ARM端口。
- en: Download the latest Raspbian disk image from [http://downloads.raspberrypi.org/raspbian_latest](http://downloads.raspberrypi.org/raspbian_latest).
    You do not need to unzip the downloaded file. At the time of writing, the ZIP
    is called `2018-11-13-raspbian-stretch.zip` . Since your filenames may differ,
    we will refer to the file as `<raspbian_zip>`.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 从[http://downloads.raspberrypi.org/raspbian_latest](http://downloads.raspberrypi.org/raspbian_latest)下载最新的Raspbian磁盘镜像。您不需要解压缩下载的文件。在撰写本文时，ZIP文件名为`2018-11-13-raspbian-stretch.zip`。由于您的文件名可能不同，我们将称该文件为`<raspbian_zip>`。
- en: 'The `<raspbian_zip>` file contains a disk image, which we need to burn to an
    SD card with a capacity of at least 4 GB. (Note that 8 GB or larger is preferable,
    to allow plenty of room for OpenCV and our projects.) Any existing data on the
    card will be lost in the process. To burn the card, let''s use a cross-platform,
    open source application called **Etcher**. Download it from [https://www.balena.io/etcher/](https://www.balena.io/etcher/) and
    set it up. (An installer is available for Windows or Mac. Alternatively, a portable
    application is available for Windows, Mac, or Linux). Insert an SD card and open
    Etcher. You should see the following window:'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: '`<raspbian_zip>`文件包含一个磁盘镜像，我们需要将其烧录到至少4GB容量的SD卡上。（注意，8GB或更大的容量更佳，以便为OpenCV和我们的项目留出足够的空间。）在烧录过程中，卡上的现有数据将会丢失。为了烧录卡，让我们使用一个跨平台的开源应用程序**Etcher**。从[https://www.balena.io/etcher/](https://www.balena.io/etcher/)下载它并设置。（Windows或Mac都有安装程序。或者，Windows、Mac或Linux都有便携式应用程序）。插入SD卡并打开Etcher。您应该会看到以下窗口：'
- en: '![](img/0e98fffc-eb6f-4f9e-84a7-9d71319ccb52.png)'
  id: totrans-235
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/0e98fffc-eb6f-4f9e-84a7-9d71319ccb52.png)'
- en: Etcher's user interface is so self-explanatory that even James Bond might struggle
    to find a double meaning in it. Click on the Select image button and select `<raspbian_zip>`.
    Click on the Select drive button and select your SD drive. Click on the Flash!
    button to burn the image to the SD card. Wait for the burning process to finish.
    Quit Etcher and eject the card.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: Etcher的用户界面非常直观，即使是詹姆斯·邦德也可能在其中找不到双重含义。点击“选择镜像”按钮并选择`<raspbian_zip>`。点击“选择驱动器”按钮并选择您的SD驱动器。点击“闪存！”按钮将镜像烧录到SD卡上。等待烧录过程完成。退出Etcher并弹出卡片。
- en: Now, let's turn our attention to the Raspberry Pi hardware. Ensure that the
    Raspberry Pi micro-USB power cable is disconnected. Connect an HDMI monitor or
    TV, USB keyboard, USB mouse, and (optionally) Ethernet cable. Then, insert the
    SD card firmly into the slot on the bottom of the Pi. Connect the Pi power cable.
    The Pi should start booting from the SD card. During this first bootup, the filesystem
    expands to fill the entire SD card. When the Raspbian desktop appears for the
    first time, the system displays a series of setup dialogs. Follow the instructions
    in the dialogs in order to set your login password, and select an appropriate
    locale, time zone, and keyboard. Raspbian defaults to a UK keyboard layout, which
    will cause problems if you have a US or other keyboard. If you have an internet
    connection, you can also use the setup dialogs to perform a system update.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们将注意力转向 Raspberry Pi 硬件。确保 Raspberry Pi 的 micro-USB 电源线已断开。连接一个 HDMI 显示器或电视、USB
    键盘、USB 鼠标，以及（可选）以太网线。然后，将 SD 卡牢固地插入 Pi 底部的插槽中。连接 Pi 电源线。Pi 应该从 SD 卡启动。在第一次启动过程中，文件系统会扩展以填充整个
    SD 卡。当 Raspbian 桌面首次出现时，系统会显示一系列设置对话框。按照对话框中的说明设置您的登录密码，并选择合适的区域设置、时区和键盘。Raspbian
    默认为英国键盘布局，如果您使用的是美国或其他键盘，这可能会引起问题。如果您有互联网连接，您还可以使用设置对话框执行系统更新。
- en: 'Once the setup is complete, take some time to admire the Raspbian desktop wallpaper
    and explore the system''s infinite horizons, as I am doing in the following photograph:'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 设置完成后，花点时间欣赏 Raspbian 桌面的壁纸并探索系统的无限视野，就像我在以下照片中所做的那样：
- en: '![](img/45d96998-7f4e-46bc-836b-cb87a6e5bad7.png)'
  id: totrans-239
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/45d96998-7f4e-46bc-836b-cb87a6e5bad7.png)'
- en: In its heart (or in its seeds), Raspbian is just Debian Linux with an LXDE desktop
    and some special developer tools. If you are familiar with Debian or derivatives
    such as Ubuntu, you should feel right at home. Otherwise, you might want to explore
    the documentation and guides for beginners that are posted on the Raspberry Pi
    website, at [https://www.raspberrypi.org/help/](https://www.raspberrypi.org/help/).
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 在其核心（或在其种子中），Raspbian 只是 Debian Linux，带有 LXDE 桌面和一些特殊的开发工具。如果您熟悉 Debian 或其衍生产品，如
    Ubuntu，您应该会感到非常自在。否则，您可能想探索 Raspberry Pi 网站上发布的初学者文档和指南，网址为 [https://www.raspberrypi.org/help/](https://www.raspberrypi.org/help/)。
- en: Now, as an exercise, let's share our Raspbian desktop through **Virtual Network
    Computing** (**VNC**) so that we can control it from a Windows, Mac, or Linux
    machine.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，作为一个练习，让我们通过 **虚拟网络计算**（**VNC**）共享我们的 Raspbian 桌面，这样我们就可以从 Windows、Mac 或
    Linux 机器上控制它。
- en: 'On the Pi, we need to first determine our local network address, which we will
    refer to as `<pi_ip_address>`. Open LXTerminal and run the following command:'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Pi 上，我们首先需要确定我们的本地网络地址，我们将称之为 `<pi_ip_address>`。打开 LXTerminal 并运行以下命令：
- en: '[PRE48]'
  id: totrans-243
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: The output should include a line beginning with something like `inet addr:192.168.1.93`,
    although the numbers will probably differ. In this example, `<pi_ip_address>`
    is `192.168.1.93`.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 输出应包含以类似 `inet addr:192.168.1.93` 开头的一行，尽管数字可能不同。在这个例子中，`<pi_ip_address>` 是
    `192.168.1.93`。
- en: 'Now, we need to install a VNC server on the Pi by running the following command:'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们需要通过运行以下命令在 Pi 上安装一个 VNC 服务器：
- en: '[PRE49]'
  id: totrans-246
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'To start the server, run this command:'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 要启动服务器，请运行此命令：
- en: '[PRE50]'
  id: totrans-248
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'When prompted, enter a password, which other users must enter when connecting
    to this VNC server. Later, if you want to change the password, run this command:'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 当提示输入密码时，输入一个密码，其他用户在连接到此 VNC 服务器时必须输入。稍后，如果您想更改密码，请运行此命令：
- en: '[PRE51]'
  id: totrans-250
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: Unless the Pi (or the Ethernet socket to which it is connected) has a static
    IP address, the address may change whenever we reboot. Thus, upon reboot, we would
    need to run `ifconfig` again to determine the new address. Also, after rebooting,
    we need to run `tightvncserver` to relaunch the VNC server. For instructions on
    making the Pi's IP address static and automatically running `tightvncserver` upon
    boot, see Neil Black's online Raspberry Pi Beginner Guide, at [http://www.neil-black.co.uk/raspberrypi/raspberry-pi-beginners-guide/](http://www.neil-black.co.uk/raspberrypi/raspberry-pi-beginners-guide/).
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 除非 Pi（或连接到它的以太网插座）有一个静态 IP 地址，否则地址可能会在每次重启时更改。因此，在重启后，我们需要再次运行 `ifconfig` 以确定新地址。此外，在重启后，我们需要运行
    `tightvncserver` 以重新启动 VNC 服务器。有关将 Pi 的 IP 地址设置为静态并在启动时自动运行 `tightvncserver` 的说明，请参阅
    Neil Black 的在线 Raspberry Pi 初学者指南，网址为 [http://www.neil-black.co.uk/raspberrypi/raspberry-pi-beginners-guide/](http://www.neil-black.co.uk/raspberrypi/raspberry-pi-beginners-guide/)。
- en: 'Now, on another machine on the same local network, we can access the Pi''s
    desktop through a VNC client. The steps are platform dependent, as follows:'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，在同一个本地网络上的另一台机器上，我们可以通过VNC客户端访问Pi的桌面。步骤取决于平台，如下所示：
- en: On Windows, download VNC Viewer from [https://www.realvnc.com/download/](https://www.realvnc.com/download/).
    Unzip it to any destination and run the executable file (such as `VNC-Server-6.4.0-Windows.exe`),
    which is inside the unzipped folder. Enter `vnc://<pi_ip_address>:5901` in the
    VNC server field and click on the Connect button. When prompted, enter the VNC
    password that you created earlier.
  id: totrans-253
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Windows上，从[https://www.realvnc.com/download/](https://www.realvnc.com/download/)下载VNC
    Viewer。将其解压到任何位置并运行解压文件夹中的可执行文件（例如`VNC-Server-6.4.0-Windows.exe`）。在VNC服务器字段中输入`vnc://<pi_ip_address>:5901`并点击连接按钮。当提示时，输入你之前创建的VNC密码。
- en: On Mac, open Safari and enter `vnc://<pi_ip_address>:5901` in the address bar.
    A window, Connect to Shared Computer, should appear. Click on the Connect button.
    When prompted, enter the VNC password that you created earlier.
  id: totrans-254
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Mac上，打开Safari并在地址栏中输入`vnc://<pi_ip_address>:5901`。应该会出现一个名为“连接到共享计算机”的窗口。点击连接按钮。当提示时，输入你之前创建的VNC密码。
- en: 'Ubuntu normally comes with a VNC client called **Vinagre**. However, if we
    do not already have Vinagre, we can install it on Ubuntu or any Debian-based system
    by running the following command in Terminal:'
  id: totrans-255
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Ubuntu通常自带一个名为**Vinagre**的VNC客户端。但是，如果我们还没有Vinagre，我们可以在Ubuntu或任何基于Debian的系统上通过在终端中运行以下命令来安装它：
- en: '[PRE52]'
  id: totrans-256
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: 'Open Vinagre (it might be listed as **Remote Desktop Viewer** in the system''s applications
    menu or launcher). Click on the **Connect** button in the toolbar. Enter `vnc://<pi_ip_address>:5901`
    in the Host: field. Click on the **Connect** button in the lower-right corner.'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 打开Vinagre（它可能在系统的应用程序菜单或启动器中列为**远程桌面查看器**）。在工具栏中点击**连接**按钮。在主机：字段中输入`vnc://<pi_ip_address>:5901`。在右下角点击**连接**按钮。
- en: Now you know how to prepare and serve Pi.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经知道如何准备和提供Pi。
- en: Setting up the Raspberry Pi camera module
  id: totrans-259
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置Raspberry Pi相机模块
- en: 'Raspbian supports most USB webcams out of the box. Also, it supports the following
    **Camera Serial Interface** (**CSI**) cameras, which offer faster transfer speeds:'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: Raspbian默认支持大多数USB摄像头。它还支持以下**相机串行接口**（**CSI**）摄像头，它们提供更快的传输速度：
- en: '**Raspberry Pi camera module**: A $25 RGB camera'
  id: totrans-261
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Raspberry Pi相机模块**：一个25美元的RGB相机'
- en: '**Pi NoIR**: A $30 variant of the same camera, with the **infrared radiation**
    (**IR**) block filter removed so that it is sensitive to not only visible light,
    but also the nearest-to-visible part of the infrared spectrum, **near infrared**
    (**NIR**)'
  id: totrans-262
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Pi NoIR**：与相同相机的30美元版本，移除了**红外辐射**（**IR**）阻挡过滤器，使其不仅对可见光敏感，还对可见光谱的最近部分，即**近红外**（**NIR**）敏感'
- en: Compared to a USB webcam, the camera module or NoIR improves our chances of
    achieving high enough frame rates for interactive computer vision on the Pi. For
    this reason, I recommend these Pi-specific CSI cameras. However, in accordance
    with the low price, they have poor color rendition, mediocre auto-exposure, and
    fixed focus.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 与USB摄像头相比，相机模块或NoIR提高了我们在Pi上实现足够高的帧率以进行交互式计算机视觉的机会。因此，我推荐这些针对Pi的特定CSI相机。然而，根据低价格，它们的色彩表现不佳，自动曝光一般，并且对焦固定。
- en: If in doubt, choose the camera module over the NoIR, because depending on the
    subject and lighting, NIR may interfere with vision, rather than aid it.
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 如果有疑问，请选择相机模块而不是NoIR，因为根据主题和照明条件，NIR可能会干扰视觉，而不是帮助它。
- en: 'See the official tutorial at [http://www.raspberrypi.org/help/camera-module-setup/](http://www.raspberrypi.org/help/camera-module-setup/)
    for details about setting up either the camera module or the NoIR. Once the hardware
    is set up, you need to configure Raspbian to use the camera. From the Raspbian
    launch menu, select Preferences | Raspbian Pi Configuration, as shown in the following
    screenshot:'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 有关设置相机模块或NoIR的详细信息，请参阅官方教程[http://www.raspberrypi.org/help/camera-module-setup/](http://www.raspberrypi.org/help/camera-module-setup/)。一旦硬件设置完毕，您需要配置Raspbian以使用相机。从Raspbian启动菜单中选择首选项
    | Raspbian Pi配置，如下面的截图所示：
- en: '![](img/d161b6dc-23d8-455a-a293-e74d6d76d347.png)'
  id: totrans-266
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/d161b6dc-23d8-455a-a293-e74d6d76d347.png)'
- en: 'The Raspberry Pi Configuration window should appear. Go to the Interfaces tab
    and select Camera: Enable, as shown in the following screenshot:'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 应该会出现Raspberry Pi配置窗口。转到接口选项卡并选择相机：启用，如下面的截图所示：
- en: '![](img/83a7cd41-0969-4608-824a-6986591521b0.png)'
  id: totrans-268
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/83a7cd41-0969-4608-824a-6986591521b0.png)'
- en: Click on OK and, when prompted, reboot the system.
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 点击确定，当提示时，重新启动系统。
- en: 'At the time of writing, the camera module and NoIR do not work out of the box
    with OpenCV. We need to load a kernel module that adds support for the cameras
    through the **Video for Linux 2** (**V4L2**) drivers. To do this for a single
    session, run the following command in Terminal:'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 在撰写本文时，摄像头模块和 NoIR 无法与 OpenCV 直接工作。我们需要通过 **Video for Linux 2**（**V4L2**）驱动程序加载一个内核模块，以添加对摄像头的支持。为此，在终端中运行以下命令：
- en: '[PRE53]'
  id: totrans-271
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'Alternatively, to always load the kernel module upon bootup, run the following
    command, which appends the module to the `/etc/modules` file:'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，要始终在启动时加载内核模块，请运行以下命令，该命令将模块追加到 `/etc/modules` 文件中：
- en: '[PRE54]'
  id: totrans-273
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: Future versions of Raspbian (later than version 2018-11-13) might be preconfigured
    to use this kernel module. You can edit `/etc/modules` to check whether `bcm2835-v4l2`
    is already listed there.
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: Raspbian 的未来版本（晚于 2018-11-13 版本）可能预先配置为使用此内核模块。您可以通过编辑 `/etc/modules` 来检查 `bcm2835-v4l2`
    是否已列在那里。
- en: Reboot the system again so that the kernel module is loaded. Now, we can use
    the `Camera` module or the NoIR with any camera software that supports V4L2 drivers,
    including OpenCV.
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 再次重启系统，以便加载内核模块。现在，我们可以使用 `Camera` 模块或 NoIR 与任何支持 V4L2 驱动程序的摄像头软件一起使用，包括 OpenCV。
- en: Finding OpenCV documentation, help, and updates
  id: totrans-276
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 查找 OpenCV 文档、帮助和更新
- en: OpenCV's documentation is online, at [https://docs.opencv.org/master/](https://docs.opencv.org/master/).
    The documentation includes a combined API reference for the latest OpenCV C++
    API and its latest Python API (which is based on the C++ API). The latest Java
    API documentation is online, at [http://docs.opencv.org/master/javadoc/](http://docs.opencv.org/master/javadoc/).
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: OpenCV 的文档在线上，可在 [https://docs.opencv.org/master/](https://docs.opencv.org/master/)
    找到。该文档包括最新 OpenCV C++ API 和其最新 Python API（基于 C++ API）的综合 API 参考。最新的 Java API 文档也在线，可在
    [http://docs.opencv.org/master/javadoc/](http://docs.opencv.org/master/javadoc/)
    查看。
- en: 'If the documentation seems to leave your questions unanswered, try reaching
    out to the OpenCV community instead. The following sites are good venues for questions,
    answers, and shared experience:'
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 如果文档似乎没有回答您的问题，请尝试联系 OpenCV 社区。以下网站是提问、回答和分享经验的良好场所：
- en: The official OpenCV forum, at [http://answers.opencv.org/questions/](http://answers.opencv.org/questions/)
  id: totrans-279
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 官方 OpenCV 论坛，可在 [http://answers.opencv.org/questions/](http://answers.opencv.org/questions/)
    查看
- en: The PyImageSearch site, where Adrian Rosebrock teaches computer vision and machine
    learning, at [https://www.pyimagesearch.com/](https://www.pyimagesearch.com/)
  id: totrans-280
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Adrian Rosebrock 教授计算机视觉和机器学习的 PyImageSearch 网站，可在 [https://www.pyimagesearch.com/](https://www.pyimagesearch.com/)
    查看
- en: The support site for my OpenCV books, at [http://nummist.com/opencv/](http://nummist.com/opencv/)
  id: totrans-281
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我 OpenCV 书籍的支持网站，可在 [http://nummist.com/opencv/](http://nummist.com/opencv/)
    查看
- en: Finally, if you are an advanced user who wants to try new features, bug-fixes,
    and sample scripts from the latest (unstable) OpenCV source code, have a look
    at the project's repository at [https://github.com/opencv/opencv/](https://github.com/opencv/opencv/),
    as well as the repository for the `opencv_contrib` modules at [https://github.com/opencv/opencv_contrib/](https://github.com/opencv/opencv_contrib/).
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，如果您是想要尝试最新（不稳定）OpenCV 源代码中的新功能、错误修复和示例脚本的进阶用户，请查看项目的仓库 [https://github.com/opencv/opencv/](https://github.com/opencv/opencv/)，以及
    `opencv_contrib` 模块的仓库 [https://github.com/opencv/opencv_contrib/](https://github.com/opencv/opencv_contrib/)。
- en: Alternatives to Raspberry Pi
  id: totrans-283
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 树莓派的替代品
- en: 'Besides Raspberry Pi, many other low-cost SBCs are suitable for running a desktop
    Linux distribution and OpenCV applications. The Raspberry Pi 3 models offer a
    quad-core ARMv8 processor and 1 GB RAM. However, some of the competing SBCs offer
    octa-core ARM processors and 2 GB RAM and can run more complex computer vision
    algorithms in real time. Moreover, unlike any current model of Pi, some of the
    competitors offer a USB 3 interface, which supports a wide range of high-resolution
    or high-speed cameras. These advantages tend to come with a higher price tag and
    higher power consumption. Here are some examples:'
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 除了树莓派，许多其他低成本单板计算机（SBC）也适合运行桌面 Linux 发行版和 OpenCV 应用程序。树莓派 3 型号提供四核 ARMv8 处理器和
    1 GB RAM。然而，一些竞争性的 SBC 提供八核 ARM 处理器和 2 GB RAM，并且可以在实时中运行更复杂的计算机视觉算法。此外，与任何当前的
    Pi 模型不同，一些竞争对手提供 USB 3 接口，支持广泛的高分辨率或高速摄像头。这些优势往往伴随着更高的价格标签和更高的功耗。以下是一些示例：
- en: 'Odroid XU4 ([https://www.hardkernel.com/shop/odroid-xu4-special-price/](https://www.hardkernel.com/shop/odroid-xu4-special-price/)):
    An octa-core SBC with 2 GB RAM and a USB 3 interface. It can run Ubuntu and other
    Linux distributions. At the time of writing, it is available from Odroid at a
    promotional price of $49.'
  id: totrans-285
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Odroid XU4 ([https://www.hardkernel.com/shop/odroid-xu4-special-price/](https://www.hardkernel.com/shop/odroid-xu4-special-price/)):
    一款配备 2 GB RAM 和 USB 3 接口的八核单板计算机。它可以运行 Ubuntu 和其他 Linux 发行版。在撰写本文时，Odroid 正在以促销价格
    49 美元出售。'
- en: 'Banana Pi M3 ([http://www.banana-pi.org/m3.html](http://www.banana-pi.org/m3.html)):
    An octa-core SBC with 2 GB RAM and a SATA interface for fast storage devices. It
    is compatible with many Raspberry Pi accessories and can run Ubuntu, Raspbian,
    and other Linux distributions. It typically costs around $75, if ordered factory-direct.'
  id: totrans-286
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Banana Pi M3 ([http://www.banana-pi.org/m3.html](http://www.banana-pi.org/m3.html)):
    一款配备 2 GB RAM 和 SATA 接口的八核单板计算机，用于快速存储设备。它与许多 Raspberry Pi 配件兼容，可以运行 Ubuntu、Raspbian
    和其他 Linux 发行版。如果直接从工厂订购，通常价格约为 75 美元。'
- en: 'Orange Pi 3 ([http://www.orangepi.org/Orange%20Pi%203/](http://www.orangepi.org/Orange%20Pi%203/)):
    A quad-core SBC with 2 GB RAM and a USB 3 interface. It can run Ubuntu and other
    Linux distributions. It typically costs around $40, if ordered factory-direct.'
  id: totrans-287
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Orange Pi 3 ([http://www.orangepi.org/Orange%20Pi%203/](http://www.orangepi.org/Orange%20Pi%203/)):
    一款配备 2 GB RAM 和 USB 3 接口的四核单板计算机。它可以运行 Ubuntu 和其他 Linux 发行版。如果直接从工厂订购，通常价格约为 40
    美元。'
- en: If you would like to share your experience with using SBCs in computer vision
    projects, please write to me at [josephhowse@nummist.com](mailto:josephhowse@nummist.com).
    I will post the community's wisdom to [http://nummist.com/opencv/](http://nummist.com/opencv/).
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想分享你在计算机视觉项目中使用单板计算机的经验，请给我写信至 [josephhowse@nummist.com](mailto:josephhowse@nummist.com)。我将把社区的智慧发布在
    [http://nummist.com/opencv/](http://nummist.com/opencv/) 上。
- en: Summary
  id: totrans-289
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: '*This was all a setup!* I hear you gasp. Yes, but we did it for good reason.
    Now, we have a diverse set of development tools that will enable us to explore
    OpenCV in many contexts. Besides, it never hurts to learn some things about a
    lot of application frameworks and to have them all set up, in case someone asks
    us to do a project in a hurry.'
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: '*这全是一个设置!* 我听到你倒吸一口凉气。是的，但我们这么做是有好理由的。现在，我们有一套多样化的开发工具，这将使我们能够在许多环境中探索 OpenCV。此外，了解许多应用程序框架并让它们都设置好，以防有人紧急要求我们做一个项目，这从来都不是坏事。'
- en: Remember, James Bond has encyclopedic knowledge. In a highly symbolic conversation
    about rare and deadly fish, he goes toe-to-toe with Karl Stromberg, the diabolical
    oceanographer (*The Spy Who Loved Me*, 1977). Although we never see Bond studying
    the fish books, he must do it as bedtime reading after the camera cuts out.
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 记住，詹姆斯·邦德拥有百科全书式的知识。在一次关于稀有和致命鱼类的象征性对话中，他与邪恶的海洋学家卡尔·斯特龙伯格针锋相对（*《007之太空城》*，1977年）。尽管我们从未看到邦德研究鱼类书籍，但他必须在摄像机切换后作为睡前阅读来做这件事。
- en: The moral is, be prepared. Next, we will use OpenCV, along with several of the
    Python libraries and tools that we have installed, to build a GUI application
    that finds and classifies images on the web.
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 道理是，要做好准备。接下来，我们将使用 OpenCV，以及我们已安装的几个 Python 库和工具，来构建一个图形用户界面应用程序，该应用程序可以在网络上查找和分类图像。
