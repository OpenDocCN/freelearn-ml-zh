- en: Mobile Application Using Google Vision
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Google Vision 的移动应用程序
- en: 'As we saw in [Chapter 1](51fcaf51-eb68-4493-afc2-0b02f1c1d50e.xhtml), *Introduction
    to Machine Learning on Mobile,* we know that machine learning in mobile applications
    can be implemented either on-device or it can be implemented using machine learning
    cloud provider services. There are various machine learning cloud providers:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在[第 1 章](51fcaf51-eb68-4493-afc2-0b02f1c1d50e.xhtml)，“移动机器学习简介”中看到的，我们知道移动应用程序中的机器学习可以是在设备上实现，也可以使用机器学习云提供商服务实现。有各种机器学习云提供商：
- en: Clarifai
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Clarifai
- en: Google Cloud Vision
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Google Cloud Vision
- en: Microsoft Azure Cognitive Services
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Microsoft Azure 认知服务
- en: IBM Watson
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: IBM Watson
- en: Amazon Machine Learning
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Amazon Machine Learning
- en: 'In this chapter, we are going to dive deeply into Google Cloud Vision to understand
    the following:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将深入探讨 Google Cloud Vision，以了解以下内容：
- en: Features of Google Cloud Vision
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Google Cloud Vision 的功能
- en: How to utilize the Google Cloud Vision label-detection technique in an Android
    Mobile application to determine what is the picture taken by the camera. That
    is, we basically feed an image into Google Cloud Vision and see how it labels
    the image. Google Vision is going to predict the image that it receives from the
    mobile application and provide a label for the image.
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何在 Android 移动应用程序中使用 Google Cloud Vision 标签检测技术来确定相机拍摄的照片是什么。也就是说，我们基本上将图像输入到
    Google Cloud Vision 中，看看它如何标记图像。Google Vision 将预测它从移动应用程序接收到的图像，并为图像提供标签。
- en: Features of Google Cloud Vision
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Google Cloud Vision 的功能
- en: 'Google Cloud Vision API comprises various complex and powerful machine learning
    models that help to perform image analysis. It classifies images into various
    categories using an easy-to-use REST API. The important features provided by Google
    Cloud Vision include the following:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: Google Cloud Vision API 包含各种复杂且强大的机器学习模型，有助于执行图像分析。它使用易于使用的 REST API 将图像分类到各种类别。Google
    Cloud Vision 提供的重要功能包括以下内容：
- en: '**Label detection**: This enables us to classify images into thousands of categories.
    The images can be categorized into various common category labels, such as *animals*
    and *fruits*.'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**标签检测**：这使我们能够将图像分类到数千个类别。图像可以被分类到各种常见的类别标签，例如*动物*和*水果*。'
- en: '**Image attribute detection**: This enables us to detect individual objects
    from within images. It can also detect attributes such as prominent color.'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**图像属性检测**：这使我们能够从图像中检测单个对象。它还可以检测诸如显著颜色等属性。'
- en: '**Face detection**: This enables us to detect faces from within images. If
    there are multiple faces in the images, each can be detected individually. It
    can also detect the prominent attributes associated with a face, such as wearing
    a helmet.'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**人脸检测**：这使我们能够从图像中检测人脸。如果图像中有多个面孔，每个面孔都可以单独检测。它还可以检测与面孔相关的一些显著属性，例如戴头盔。'
- en: '**Logo detection**: This enables us to detect printed words from images. Prominent
    logos are trained which can be detected.'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Logo 检测**：这使我们能够从图像中检测印刷文字。训练了显著的品牌标志，可以检测到。'
- en: '**Landmark detection**: It is trained to detect prominent landmarks – natural
    and man-made–so these are detected through Google Vision.'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**地标检测**：它被训练来检测显著的地标——自然和人工的，因此这些地标是通过 Google Vision 进行检测的。'
- en: '**Optical character recognition**: This helps to detect the text within images
    even if they aren''t in English. This supports a wide range of languages.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**光学字符识别**：即使图像不是英文的，它也能帮助检测图像中的文本。这支持广泛的多种语言。'
- en: '**Explicit content detection**: This helps to identify the type of content
    or sentiment of the content, such as *violent* or *humorous*. It enables us to
    perform sentiment analysis of images by leveraging the metadata information that
    can be built.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**显式内容检测**：这有助于识别内容的类型或内容情感，例如*暴力*或*幽默*。它使我们能够通过利用可以构建的元数据信息来执行图像的情感分析。'
- en: '**Search web**: This searches the web for similar images.'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**搜索网页**：这将在网络上搜索类似图像。'
- en: All these features provided by Google Cloud Vision can be used by invoking simple
    RESTful APIs provided by Google. However, for their use, there is a price attached
    to using each feature. A combination of features can also be used. The pricing
    details can be found on the Google Cloud Vision website: [https://cloud.google.com/vision/](https://cloud.google.com/vision/).
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些由 Google Cloud Vision 提供的功能都可以通过调用 Google 提供的简单 RESTful API 来使用。然而，对于它们的使用，每个功能都有一定的费用。也可以使用功能组合。定价详情可以在
    Google Cloud Vision 网站上找到：[https://cloud.google.com/vision/](https://cloud.google.com/vision/)。
- en: Sample mobile application using Google Cloud Vision
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Google Cloud Vision 的示例移动应用程序
- en: In this section, we are going to try a sample Android mobile application using
    Google Cloud Vision. We are going to capture an image from the camera of the cell
    phone, upload the image to Google Cloud Vision, and see what it predicts the image
    to be. This is going to use the label detection feature of Google Cloud Vision,
    which determines the label of the uploaded image.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将尝试使用Google Cloud Vision的Android移动应用程序示例。我们将从手机的相机捕获图像，将图像上传到Google Cloud
    Vision，并查看它预测的图像是什么。这将使用Google Cloud Vision的标签检测功能，该功能确定上传图像的标签。
- en: How does label detection work?
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 标签检测是如何工作的？
- en: The Vision API can detect and extract information about entities within an image,
    across a broad group of categories. Labels can identify objects, locations, activities,
    animal species, products, and more. Labels are returned in English only.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 视觉API可以检测和提取图像中实体信息，涵盖广泛的类别。标签可以识别对象、位置、活动、动物种类、产品等。标签仅以英语返回。
- en: 'The image whose label is to be determined and the features of the Google Vision
    that we intend to use needs to be sent in the request API. The feature can be
    any of the features listed in the *Features of Google Cloud Vision* section, such
    as label detection or logo detection. If there is any additional image context
    that needs to be sent across along with the image, it can be sent as an additional
    parameter. The request API JSON format is provided here:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 需要确定标签的图像和我们要使用的Google Vision功能需要发送到请求API。功能可以是*Google Cloud Vision功能*部分中列出的任何功能，例如标签检测或标志检测。如果需要与图像一起发送任何额外的图像上下文，它可以作为附加参数发送。请求API
    JSON格式在此提供：
- en: '[PRE0]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The image object can be a base64-encoded string or it can be a URL of the image
    that needs to be analyzed. The URL can be a Google Cloud Storage image location,
    or a publicly accessible image URL.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 图像对象可以是base64编码的字符串，也可以是需要分析的图像的URL。该URL可以是Google Cloud Storage图像位置，或公开可访问的图像URL。
- en: 'The response for the request is going to be a list of annotations based on
    the features requested. In our case, it is going to be label annotations:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 请求的响应将是一个基于请求的功能的注释列表。在我们的案例中，它将是标签注释：
- en: '[PRE1]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The returned `EntityAnnotation` object is going to contain the label of the
    image, the prediction score, and other useful information. All labels that match
    the input image object are returned as an array list with the prediction score,
    based on which we could perform the required inference needed in our application.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 返回的`EntityAnnotation`对象将包含图像的标签、预测分数和其他有用信息。所有与输入图像对象匹配的标签都作为包含预测分数的数组列表返回，基于此，我们可以在应用程序中执行所需的推理。
- en: Now that we understand the basics of how label detection works, let's start
    creating the Android application.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经了解了标签检测的基本工作原理，让我们开始创建Android应用程序。
- en: Prerequisites
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前提条件
- en: 'In order to get started start exploring the Google Vision and to write a program
    using the services exposed by Google vision, the following are required to be
    setup, so we can get our hands dirty:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 为了开始探索Google Vision并编写使用Google视觉公开的服务编写的程序，以下是需要设置的内容，以便我们可以亲自动手：
- en: A Google Cloud Platform account
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个Google Cloud Platform账户
- en: A Project on Google Cloud Console
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Google Cloud Console上的一个项目
- en: The latest version of Android Studio
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Android Studio的最新版本
- en: A mobile phone running Android 5.0 or higher
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运行Android 5.0或更高版本的移动电话
- en: Preparations
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'This section gives details about the key activities we need to do before we
    can start using the Google Cloud Vision API from our mobile application:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 本节提供了在使用我们的移动应用程序开始使用Google Cloud Vision API之前我们需要做的关键活动的详细信息：
- en: 'The Google Cloud Vision API should be enabled in the Google Cloud Console and
    an API key should be created that will be used in the mobile application code.
    Please perform the following steps to get the Cloud Vision API key:'
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Google Cloud Vision API应在Google Cloud控制台中启用，并创建一个将在移动应用程序代码中使用的API密钥。请执行以下步骤以获取Cloud
    Vision API密钥：
- en: Open [cloud.google.com/vision](http://Google%20Cloud%20Vision).
  id: totrans-41
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开[cloud.google.com/vision](http://Google%20Cloud%20Vision)。
- en: Go to Console. If you do no have a trial account, it will ask you to create
    one and complete the process.
  id: totrans-42
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往控制台。如果您没有试用账户，它将要求您创建一个并完成过程。
- en: Enable billing so we get $300 free credit. Once we have the account, we can
    go to Console and complete the process of creating the key.
  id: totrans-43
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启用计费以获得300美元的免费信用额度。一旦我们有了账户，我们就可以进入控制台并完成创建密钥的过程。
- en: From the Console, create a project.
  id: totrans-44
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从控制台创建一个项目。
- en: Open that project. Go to API services | Library search for cloud vision API.
  id: totrans-45
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开该项目。前往API服务 | 搜索云视觉API库。
- en: Click on it and enable it.
  id: totrans-46
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击它并启用它。
- en: Go to API Services | Credentials.
  id: totrans-47
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往API服务 | 凭据。
- en: Go to Credentials | API Key.
  id: totrans-48
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往凭据 | API密钥。
- en: Create the API key.
  id: totrans-49
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建API密钥。
- en: Copy the API key; this will be used in the mobile application code.
  id: totrans-50
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 复制API密钥；这将在移动应用程序代码中使用。
- en: 'Add the dependencies required in the mobile client application to use the Google
    Cloud Vision API. The Google API Client will be needed and hence this needs to
    be added to the client project. These will need to be specified in the Gradle
    build file. The sample Gradle file with the key dependencies is as follows:'
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在移动客户端应用程序中添加使用Google Cloud Vision API所需的依赖项。需要Google API客户端，因此需要将其添加到客户端项目中。这些需要在Gradle构建文件中指定。以下是一个包含关键依赖项的示例Gradle文件：
- en: '[PRE2]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Understanding the Application
  id: totrans-53
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解应用程序
- en: In this section, we will see the key flows of the source code to understand
    how the Google Vision API works from an Android mobile application.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将查看源代码的关键流程，以了解从Android移动应用程序的角度如何使用Google Vision API。
- en: 'The Vision class represents the Google API Client for Cloud Vision. The first
    step is to initialize the Vision class. We do it through the Builder, to which
    we specify the transport mechanism and the JSON factory to be used:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: Vision类代表Google API客户端的Cloud Vision。第一步是初始化Vision类。我们通过Builder来完成，我们指定要使用的传输机制和JSON工厂：
- en: '[PRE3]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The next step is to assign the API key to the Vision Builder so it can start
    interacting with the cloud APIs. The key we have created is given here:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是将API密钥分配给Vision Builder，以便它可以开始与云API交互。我们创建的密钥如下所示：
- en: '[PRE4]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The final step is to get the Vision instance through which the cloud APIs can
    be invoked:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一步是通过Vision实例来调用云API：
- en: '[PRE5]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Now we are going to capture a picture and send the picture to the cloud API
    to detect its label. The code to capture the picture through the camera is the
    usual Android stuff. The following code provides details on how the image is converted
    into a Vision Request for label detection:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将捕获一张图片并将其发送到云API以检测其标签。通过相机捕获图片的代码是常规的Android代码。以下代码提供了如何将图像转换为用于标签检测的Vision请求的详细信息：
- en: '[PRE6]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Google Cloud Vision will be called as an **async task**. The response received
    from the API will be analyzed to provide data in user-readable format. The following
    code provides details of the response received from Google Vision:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: Google Cloud Vision将被作为一个**异步任务**来调用。从API收到的响应将被分析，以提供用户可读格式的数据。以下代码提供了从Google
    Vision收到的响应的详细信息：
- en: '[PRE7]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: The labels returned for the image can be viewed by the user.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 用户可以查看返回的图像标签。
- en: Output
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 输出
- en: 'This section displays the Android application screen when a mobile phone has
    been captured and sent to the vision API. Possible labels are listed in the output
    screen:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 当一部手机被捕获并发送到视觉API时，此部分将显示Android应用程序屏幕。可能的标签列在输出屏幕上：
- en: '![](img/30a0c8ed-bd27-429a-a9a1-fb23cce4d065.png)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/30a0c8ed-bd27-429a-a9a1-fb23cce4d065.png)'
- en: Summary
  id: totrans-69
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we looked at how Google Cloud Vision works, and can how to
    invoke it from a mobile application without much effort. We saw how easy it is
    to make complex machine learning predictions without the hassles of model selection
    and training. In the next chapter, we will explore the future of machine learning
    in the field of mobile applications.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们探讨了Google Cloud Vision的工作原理，以及如何轻松地从移动应用程序中调用它。我们看到了如何轻松地进行复杂的机器学习预测，而无需选择和训练模型。在下一章中，我们将探索移动应用程序领域中机器学习的未来。
