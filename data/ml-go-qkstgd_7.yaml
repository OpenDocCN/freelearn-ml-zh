- en: Conclusion - Successful ML Projects
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论 - 成功的机器学习项目
- en: So far in this book, we have focused on how to prepare and use ML algorithms
    in Go. This included the preparation of data in [Chapter 2](532d8304-b31d-41ef-81c1-b13f4c692824.xhtml),
    *Setting Up the Development Environment*, and the use of data to build models
    in [Chapter 3](48817ff3-5622-4f43-88e7-d3dfccacb25d.xhtml), *Supervised Learning*,
    and [Chapter 4](26788e93-3614-413f-bcde-5580516f9c5f.xhtml), *Unsupervised Learning*.
    We also looked at how to integrate an existing ML model into a Go application
    in [Chapter 5](815e42bb-64e4-4f04-9dbd-c58af28f2580.xhtml), *Using Pretrained
    Models*. Finally, we covered how to integrate ML into production systems in [Chapter
    6](a48ed496-8a06-4293-80fb-0413d05e7a3e.xhtml), *Deploying Machine Learning Applications*.
    To conclude, we will take a look at the different stages in a typical project,
    and how to manage the end-to-end process of developing and deploying a successful
    ML system.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，在这本书中，我们主要关注如何在Go语言中准备和使用机器学习算法。这包括在[第2章](532d8304-b31d-41ef-81c1-b13f4c692824.xhtml)“设置开发环境”中准备数据，以及在[第3章](48817ff3-5622-4f43-88e7-d3dfccacb25d.xhtml)“监督学习”和[第4章](26788e93-3614-413f-bcde-5580516f9c5f.xhtml)“无监督学习”中使用数据来构建模型。我们还探讨了如何在[第5章](815e42bb-64e4-4f04-9dbd-c58af28f2580.xhtml)“使用预训练模型”中将现有的机器学习模型集成到Go应用中。最后，我们在[第6章](a48ed496-8a06-4293-80fb-0413d05e7a3e.xhtml)“部署机器学习应用”中介绍了如何将机器学习集成到生产系统中。为了总结，我们将探讨典型项目中的不同阶段，以及如何管理开发和部署成功的机器学习系统的端到端流程。
- en: AI expert Andrej Karparthy has written^([1]) about how ML can be used to simplify
    what were previously very complex systems. Often, it is simpler to allow a machine
    to learn from data than it is to express all the logic we need in code. For example,
    Google's automatic translation application was simplified from 500,000 lines of
    conventional code to 500 lines of ML code using a neural network system. Changing
    from conventional code to a ML system requires different skill sets, and a different
    approach to software development.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 人工智能专家安德烈·卡帕尔蒂（Andrej Karparthy）已经写了一些关于如何使用机器学习来简化以前非常复杂的系统。通常，让机器从数据中学习比在代码中表达所有需要的逻辑要简单得多。例如，谷歌的自动翻译应用通过使用神经网络系统，将传统的500,000行代码简化为500行机器学习代码。从传统代码转换为机器学习系统需要不同的技能集，以及软件开发的不同方法。
- en: Much of the technical literature on ML focuses on how to optimize or choose
    models to achieve the best performance, as measured against a test dataset. While
    this is important in advancing state-of-the-art ML, most real-world projects will
    succeed or fail against very different criteria. For example, it is crucial to
    understand how business needs are best translated into ML tasks, what the limitations
    of your ML systems are, and how best to manage the overall process of designing
    and maintaining ML applications.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数关于机器学习（ML）的技术文献都集中在如何优化或选择模型以实现最佳性能，这种性能是通过测试数据集来衡量的。虽然这在推进最先进的机器学习方面很重要，但大多数现实世界的项目将根据非常不同的标准成功或失败。例如，理解如何将业务需求最佳地转化为机器学习任务，了解你的机器学习系统的局限性，以及如何最好地管理设计和维护机器学习应用的整体流程，这些都是至关重要的。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: When to use ML
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 何时使用机器学习
- en: Typical stages in a ML project
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 机器学习项目的典型阶段
- en: When to combine ML with traditional code
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 何时将机器学习与传统代码结合使用
- en: When to use ML
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 何时使用机器学习
- en: 'At the outset of any new project, you will need to identify whether ML is the
    correct approach. This depends on three key factors:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在任何新项目的开始阶段，你需要确定机器学习是否是正确的方法。这取决于三个关键因素：
- en: First of all, it is crucial to understand your business requirements, and whether
    it can indeed be tackled by ML. Think about what the goals of your project are.
    For example, do you want to reduce the cost of a process that currently requires
    significant manual work and cost? Are you trying to create a better experience
    for your end customer, for example, by adding personalized features that would
    be too time-consuming to build using traditional code?
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 首先，理解你的业务需求，以及它是否确实可以通过机器学习来解决，这是至关重要的。考虑你项目的目标是什么。例如，你是否希望降低目前需要大量人工工作和成本的过程的成本？你是否试图为最终客户提供更好的体验，例如，通过添加使用传统代码构建将花费太多时间的个性化功能？
- en: Next, ask yourself whether you have the data required to make your proposed
    ML system work. If not, how will you acquire the data you need, and what potential
    issues will need to be solved? For example, you might need to bring together datasets
    from different areas within your organization, or you may find that privacy issues
    will impact how you can make appropriate use of your data.
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 接下来，问问自己您是否拥有使您提出的机器学习系统运行所需的数据。如果没有，您将如何获取所需的数据，以及需要解决哪些潜在问题？例如，您可能需要将来自组织内部不同领域的数据集汇集在一起，或者您可能会发现隐私问题会影响您如何适当使用您的数据。
- en: Finally, consider the limitations of ML and how these might impact your end
    product. For example, if you are going to use information from a customer database
    that contains many more men than women, then any ML system that you build from
    it may show a bias in its output unless you take steps to correct it. Typically,
    ML systems can generate unpredictable outputs when presented with data that is
    very different from that used in training and development. If you design a system
    to trade financial securities, think about what will happen if the input data
    changes suddenly, for example, following a market crash? How will you make sure
    that your system behaves safely, and does not emit nonsensical or catastrophic
    output?
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后，考虑机器学习的局限性以及这些局限性可能对您的最终产品产生的影响。例如，如果您打算使用包含男性比女性多得多的客户数据库中的信息，那么除非您采取措施纠正，否则您从该数据库构建的任何机器学习系统在其输出中可能会显示出偏见。通常，当机器学习系统面对与训练和开发中使用的非常不同的数据时，可以生成不可预测的输出。如果您设计一个用于交易金融证券的系统，考虑一下如果输入数据突然变化会发生什么，例如，在市场崩溃之后？您将如何确保您的系统安全运行，并且不会产生无意义或灾难性的输出？
- en: 'In many cases, you will not be able to know the answers to all of these questions
    at the start. A good approach in this situation is to start by identifying and
    building a **proof-of-concept** (**PoC**). Think of this as the simplest and cheapest
    possible demonstration that you can build of your ML application. With a good
    PoC, you should be able to do the following:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在许多情况下，您在项目开始时可能无法知道所有这些问题的答案。在这种情况下，一个好的方法是首先识别和构建一个**概念验证**（PoC）。将其视为您可以构建的关于您的机器学习应用的简单且成本最低的演示。一个好的PoC应该能够做到以下几点：
- en: Answer questions about whether ML is the right approach, and whether it addresses
    your business needs.
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 回答关于机器学习是否是正确的方法以及它是否满足您的业务需求的问题。
- en: Uncover potential problems that you will have to address when building your
    full system.
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 揭示在构建完整系统时必须解决的问题。
- en: Create a demonstration for stakeholders within your organization, allowing you
    to get feedback on whether your system will be fit-for-purpose, and what improvements
    and changes will need to be considered.
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在您的组织内部为利益相关者创建一个演示，这样您可以获得反馈，了解您的系统是否适合用途，以及需要考虑哪些改进和变化。
- en: A PoC or **minimum viable product** (**MVP**) is a simple and cheap demonstration
    of a ML product. Use it to answer questions you have about how your product will
    work before you spend time and money building a full production system.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: PoC（概念验证）或**最小可行产品**（MVP）是机器学习产品的简单且成本低的演示。在您花费时间和金钱构建完整的生产系统之前，使用它来回答您对产品如何工作的疑问。
- en: Typical stages in a ML project
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 机器学习项目的典型阶段
- en: 'As we have seen throughout this book, ML is highly dependent on the data that
    is used for training and testing. For this reason, we find it helpful to view
    a typical project through the stages in the following diagram, which comes from
    the **Cross Industry Standard Process for Data Mining** (**CRISP-DM**), a popular
    method for managing data science projects^([3]):'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在整本书中看到的那样，机器学习高度依赖于用于训练和测试的数据。因此，我们发现通过以下图表中的阶段来观察典型项目是有帮助的，该图表来自**跨行业数据挖掘标准流程**（CRISP-DM），这是一种流行的数据科学项目管理方法^([3])：
- en: '![](img/8f6bb152-5824-4ccc-af13-bd01366218bc.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/8f6bb152-5824-4ccc-af13-bd01366218bc.png)'
- en: In contrast to some other engineering systems, ML normally never produces perfect
    output, so, for this reason, projects are often iterative. Refinements to the
    datasets and models allow you to produce progressively better results, provided
    they are justified by your business needs.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 与其他一些工程系统相比，机器学习通常永远不会产生完美的输出，因此，出于这个原因，项目通常是迭代的。对数据集和模型的改进使您能够产生越来越好的结果，前提是它们符合您的业务需求。
- en: Business and data understanding
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 商业和数据理解
- en: Having decided to use ML, a crucial step in planning your project involves translating
    your **business success criteria** into **technical requirements** and objectives
    for the model. For example, what **performance metrics** should you use to build
    your model, both in terms of its accuracy and other factors, like computational
    speed and cost? What other systems does your product need to integrate with? Do
    you need to make sure that its predictions are free from bias, and, if so how,
    will you test for this?
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 决定使用机器学习后，规划项目的一个关键步骤是将你的**业务成功标准**转换为模型的**技术要求**和目标。例如，你应该使用哪些**性能指标**来构建你的模型，无论是其准确性还是其他因素，如计算速度和成本？你的产品需要与哪些其他系统集成？你是否需要确保其预测没有偏见，如果是这样，你将如何测试这一点？
- en: While business understanding helps you design a product that will be valuable, **data
    understanding** helps you determine what is possible from the data that you have.
    By working with your data scientists, you can identify any problems with your
    datasets, and start to identify promising insights which may form the basis of
    your model.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然对商业的理解有助于你设计一个有价值的产品，但**数据理解**有助于你确定从你拥有的数据中可能实现的内容。通过与你的数据科学家合作，你可以识别数据集中存在的问题，并开始识别可能成为你模型基础的潜在见解。
- en: Data preparation
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据准备
- en: As we have seen throughout this book, having access to correctly prepared data
    is essential when building a ML application. Too often, the challenges in this
    area of **data engineering** are overlooked, resulting in slow progress as more
    and more time is spent on ad hoc work to integrate data sources and fix quality
    issues.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在整本书中看到的那样，在构建机器学习应用时，能够访问正确准备的数据是至关重要的。在这个**数据工程**领域，挑战往往被忽视，导致进度缓慢，因为越来越多的时间被花在临时工作中，以整合数据源和修复质量问题。
- en: 'For this reason, it is worth thinking about how you will build your **data
    pipeline**: where does your data come from, what preprocessing will it require,
    and where will you store it? What checks should you run on your data to make sure
    any quality problems get identified quickly, before getting baked-in to a trained
    model?'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，值得考虑你将如何构建你的**数据管道**：你的数据从哪里来，它需要什么样的预处理，你将把它存储在哪里？你应该在数据上运行哪些检查，以确保在数据被嵌入到训练模型之前，任何质量问题都能迅速被发现？
- en: A variety of tools now exist to help automate and simplify data pipelines, for
    example, the Apache Airflow project^([4]), and managed services such as Google's
    Cloud Composer^([5]) and Amazon's AWS data pipeline^([6]).
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 现在存在各种工具来帮助自动化和简化数据管道，例如 Apache Airflow 项目^([4])，以及像Google的Cloud Composer^([5])和Amazon的AWS数据管道^([6])这样的托管服务。
- en: A **data pipeline** is a system that collects, transforms, and stores data in
    a common format, allowing it to be used as the input to your ML application.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '**数据管道**是一个收集、转换和以通用格式存储数据的系统，使其能够作为你的机器学习应用的输入。'
- en: Modelling and evaluation
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 建模和评估
- en: 'At this stage, you need to develop, fine-tune, and evaluate models for your
    data. Usually, there are three options regarding how to do this:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个阶段，你需要为你的数据开发、微调和评估模型。通常，有三种选择来决定如何进行：
- en: Use an off-the-shelf ML solution with your own data. For example, Google Vision^([7]) provides
    an API for a fully managed image classification system. Often, these services
    are a good way to get fast results at the PoC stage, but should be approached
    with caution on bigger projects. Because you have not trained the model yourself,
    it is often difficult to be sure that it captures the important features of your
    own data.
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用现成的机器学习解决方案并使用你自己的数据。例如，Google Vision^([7]) 提供了一个完全管理的图像分类系统的API。通常，这些服务在PoC阶段快速获得结果是一个好方法，但在更大的项目中应谨慎对待。因为你没有自己训练模型，所以通常很难确保它捕捉到了你自己的数据的重要特征。
- en: Take an existing open source model and retrain/customize it for your own purposes.
    For example, if you want to build a system that detects objects in images, it
    makes sense to leverage all the R&D effort that large organizations have already
    put into this problem^([8]). You can use these models to give you a head-start,
    and then retrain them on your own datasets.
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 采用现有的开源模型，并重新训练/定制它以适应你自己的目的。例如，如果你想构建一个检测图像中物体的系统，利用大型组织已经投入的大量研发努力是有意义的^([8])。你可以使用这些模型来给你一个先发优势，然后在你的数据集上重新训练它们。
- en: Develop and train a model from scratch using the techniques that we learned
    about in [Chapter 3](48817ff3-5622-4f43-88e7-d3dfccacb25d.xhtml), *Supervised
    Learning*, and [Chapter 4](26788e93-3614-413f-bcde-5580516f9c5f.xhtml), *Unsupervised
    Learning*. While this can be the most time-consuming approach, it often yields
    the best results if your problem is unique to your organization.
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用我们在[第3章](48817ff3-5622-4f43-88e7-d3dfccacb25d.xhtml)“监督学习”和[第4章](26788e93-3614-413f-bcde-5580516f9c5f.xhtml)“无监督学习”中学到的技术从头开始开发和训练一个模型。虽然这可能是一种最耗时的方法，但如果你的问题仅限于你的组织，它通常会产生最佳结果。
- en: Regardless of the option you choose, it is important to ensure that your model's
    development and testing are **reproducible**. Make sure it is documented, and
    that both the model and its data requirements are captured in a version control
    system. Doing so will allow different team members to work on the same model and
    be confident in getting the same results.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 无论你选择哪种选项，确保你的模型开发和测试是**可复现的**都很重要。确保它有文档记录，并且模型及其数据需求都包含在版本控制系统中。这样做将允许不同的团队成员在同一个模型上工作，并对其获得相同的结果有信心。
- en: A **reproducible** **model** is one that has sufficient code and documentation
    to allow it to be retrained easily on the same dataset that was used during development.
    It should also include the version numbers of all the software libraries and frameworks
    that it depends on.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 一个**可复现**的**模型**是指拥有足够的代码和文档，以便能够轻松地在开发期间使用的相同数据集上重新训练。它还应包括它所依赖的所有软件库和框架的版本号。
- en: Deployment
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 部署
- en: A ML model is only useful if it can be deployed into a production system. In [Chapter
    6](a48ed496-8a06-4293-80fb-0413d05e7a3e.xhtml), *Deploying Machine Learning Applications*,
    we explored techniques for how to achieve this in Go. Following these techniques
    will allow you to deploy your model reliably. As you start to iterate through
    the project stages to improve your product, it is also important to track the
    different model versions as they enter production. One option is to check all
    of your saved models into a version control system such as Git, although this
    can be problematic if your model contains large files. Another option is to use
    **Data Version Control** (**DVC**), which is able to track the code, models, and
    datasets that they depend on.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 一个机器学习模型只有在其可以被部署到生产系统时才有用。在[第6章](a48ed496-8a06-4293-80fb-0413d05e7a3e.xhtml)“部署机器学习应用程序”中，我们探讨了如何在Go中实现这一目标的技巧。遵循这些技巧将允许你可靠地部署你的模型。当你开始迭代项目阶段以改进你的产品时，跟踪进入生产的不同模型版本也很重要。一个选择是将所有保存的模型检查到版本控制系统，如Git，尽管如果模型包含大文件，这可能会出现问题。另一个选择是使用**数据版本控制**（**DVC**），它能够跟踪代码、模型和它们所依赖的数据集。
- en: When to combine ML with traditional code
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 何时将机器学习与传统代码结合使用
- en: While most of this book has focused on how to write and use ML code, you will
    have also noticed that a lot of traditional, non-ML code is needed to support
    what we have done. Much of this is hidden inside the software libraries we have
    used, but there are cases where you may need to add to this.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管这本书的大部分内容都集中在如何编写和使用机器学习代码，但你也会注意到需要大量的传统、非机器学习代码来支持我们所做的工作。其中大部分隐藏在我们使用的软件库中，但有些情况下你可能需要添加更多。
- en: 'One example is where you need to enforce certain constraints on your model
    output, for instance, to handle an edge case or implement some safety-critical
    constraints. Suppose you are writing software for a self-driving car: you might
    use ML to process image data from the cars cameras, but when it comes to actuating
    the vehicles steering, engine, and brake controls, you will most likely need to
    use traditional code to ensure that the car is controlled safely. Similarly, unless
    your ML system is trained to handle unexpected data inputs, for example, from
    a failed sensor, then you will want to add logic to deal with these cases. Make
    sure that you test your models with outlier data and edge cases before deployment
    so that you understand the circumstances under which its performance will degrade.'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 一个例子是当你需要对你的模型输出施加某些约束时，例如处理边缘情况或实施一些安全关键约束。假设你正在为自动驾驶汽车编写软件：你可能使用机器学习来处理来自汽车摄像头的图像数据，但当涉及到控制车辆的转向、发动机和制动控制时，你很可能会需要使用传统代码来确保汽车的安全控制。同样，除非你的机器学习系统被训练来处理意外的数据输入，例如来自失败的传感器，否则你将想要添加逻辑来处理这些情况。确保在部署之前用异常数据和边缘情况测试你的模型，以便了解其性能可能降低的情况。
- en: In all real-world systems, you need to think carefully about what you have trained
    your ML model to do, what its limitations are, and how to make sure your end-to-end
    system behaves as expected.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在所有现实世界的系统中，你需要仔细思考你训练的机器学习模型要做什么，它的局限性是什么，以及如何确保你的端到端系统按预期运行。
- en: Summary
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this book, you have learned about many important techniques that are required
    to develop ML applications in Go, and deploy them as production systems. The best
    way to develop your knowledge is with hands-on experience, so dive in and start
    adding ML software into your own Go applications. The skills you have learned
    here will allow you to start adding cutting-edge ML capabilities to the projects
    that you are working on.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在这本书中，你已经学习了在Go中开发机器学习应用所需的重要技术，并将它们作为生产系统部署。发展你的知识的最佳方式是通过实践操作，所以深入其中，开始将机器学习软件添加到你的Go应用中。在这里学到的技能将使你能够开始将前沿的机器学习功能添加到你正在工作的项目中。
- en: ML is a rapidly evolving field with new algorithms and datasets being published
    every week, both by academics and technology companies. We recommend that you
    read the technical blogs, papers, and code repositories that cover this research,
    many of which we have referenced throughout this book. You might find a new state-of-the-art
    model that solves a problem you have been working on, waiting for you to implement
    it in Go.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 机器学习是一个快速发展的领域，每周都有新的算法和数据集被学术界和技术公司发布。我们建议你阅读涵盖这一研究的技术博客、论文和代码库，其中许多我们在本书中都有引用。你可能会发现一个新的最先进的模型，它可以解决你一直在努力解决的问题，等待你在Go中实现它。
- en: Further readings
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: '[https://medium.com/@karpathy/software-2-0-a64152b37c35](https://medium.com/@karpathy/software-2-0-a64152b37c35).
    Retrieved May 17, 2019.'
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[https://medium.com/@karpathy/software-2-0-a64152b37c35](https://medium.com/@karpathy/software-2-0-a64152b37c35).
    获取日期：2019年5月17日。'
- en: '[https://jack-clark.net/2017/10/09/import-ai-63-google-shrinks-language-translation-code-from-500000-to-500-lines-with-ai-only-25-of-surveyed-people-believe-automationbetter-jobs/](https://jack-clark.net/2017/10/09/import-ai-63-google-shrinks-language-translation-code-from-500000-to-500-lines-with-ai-only-25-of-surveyed-people-believe-automationbetter-jobs/).
    Retrieved May 17, 2019.'
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[https://jack-clark.net/2017/10/09/import-ai-63-google-shrinks-language-translation-code-from-500000-to-500-lines-with-ai-only-25-of-surveyed-people-believe-automationbetter-jobs/](https://jack-clark.net/2017/10/09/import-ai-63-google-shrinks-language-translation-code-from-500000-to-500-lines-with-ai-only-25-of-surveyed-people-believe-automationbetter-jobs/).
    获取日期：2019年5月17日。'
- en: '[https://pdfs.semanticscholar.org/48b9/293cfd4297f855867ca278f7069abc6a9c24.pdf](https://pdfs.semanticscholar.org/48b9/293cfd4297f855867ca278f7069abc6a9c24.pdf).
    Retrieved May 18, 2019.'
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[https://pdfs.semanticscholar.org/48b9/293cfd4297f855867ca278f7069abc6a9c24.pdf](https://pdfs.semanticscholar.org/48b9/293cfd4297f855867ca278f7069abc6a9c24.pdf).
    获取日期：2019年5月18日。'
- en: '[https://airflow.apache.org/](https://airflow.apache.org/). Retrieved May 18, 2019.'
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[https://airflow.apache.org/](https://airflow.apache.org/). 获取日期：2019年5月18日。'
- en: '[https://cloud.google.com/composer/](https://cloud.google.com/composer/). Retrieved
    May 18,  2019.'
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[https://cloud.google.com/composer/](https://cloud.google.com/composer/). 获取日期：2019年5月18日。'
- en: '[https://aws.amazon.com/datapipeline/](https://aws.amazon.com/datapipeline/).
    Retrieved May 18, 2019.'
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[https://aws.amazon.com/datapipeline/](https://aws.amazon.com/datapipeline/).
    获取日期：2019年5月18日。'
- en: '[https://cloud.google.com/vision/](https://cloud.google.com/vision/). Retrieved
    May 18, 2019.'
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[https://cloud.google.com/vision/](https://cloud.google.com/vision/). 获取日期：2019年5月18日。'
- en: '[https://github.com/tensorflow/models/tree/master/research/object_detection](https://github.com/tensorflow/models/tree/master/research/object_detection).
    Retrieved May 18, 2019.'
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[https://github.com/tensorflow/models/tree/master/research/object_detection](https://github.com/tensorflow/models/tree/master/research/object_detection).
    获取日期：2019年5月18日。'
- en: '[https://dvc.org/](https://dvc.org/). Retrieved May 22, 2019.'
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[https://dvc.org/](https://dvc.org/). 获取日期：2019年5月22日。'
- en: '[https://becominghuman.ai/how-to-version-control-your-machine-learning-task-ii-d37da60ef570](https://becominghuman.ai/how-to-version-control-your-machine-learning-task-ii-d37da60ef570).
    Retrieved May 22, 2019.'
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[https://becominghuman.ai/how-to-version-control-your-machine-learning-task-ii-d37da60ef570](https://becominghuman.ai/how-to-version-control-your-machine-learning-task-ii-d37da60ef570).
    获取日期：2019年5月22日。'
