- en: Appendix
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 附录
- en: 1\. Introduction to Scikit-Learn
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 1\. Scikit-Learn 简介
- en: 'Activity 1.01: Selecting a Target Feature and Creating a Target Matrix'
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 活动 1.01：选择目标特征并创建目标矩阵
- en: 'Solution:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 解决方案：
- en: 'Load the `titanic` dataset using the `seaborn` library:'
  id: totrans-4
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `seaborn` 库加载 `titanic` 数据集：
- en: '[PRE0]'
  id: totrans-5
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The first couple of rows should look as follows:'
  id: totrans-6
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 前几行应该如下所示：
- en: '![Figure 1.22: An image showing the first 10 instances of the Titanic dataset'
  id: totrans-7
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 1.22：显示泰坦尼克数据集前 10 个实例的图像'
- en: '](img/B15781_01_22.jpg)'
  id: totrans-8
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B15781_01_22.jpg)'
- en: 'Figure 1.22: An image showing the first 10 instances of the Titanic dataset'
  id: totrans-9
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 1.22：显示泰坦尼克数据集前 10 个实例的图像
- en: Select your preferred target feature for the goal of this activity.
  id: totrans-10
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择你偏好的目标特征，作为本活动的目标。
- en: The preferred target feature could be either `survived` or `alive`. This is
    mainly because both of them label whether a person survived the crash. For the
    following steps, the variable that's been chosen is `survived`. However, choosing
    `alive` will not affect the final shape of the variables.
  id: totrans-11
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 偏好的目标特征可以是 `survived` 或 `alive`。这主要是因为这两个特征都标记了一个人是否在事故中生还。在接下来的步骤中，选择的变量是 `survived`。然而，选择
    `alive` 不会影响最终变量的形状。
- en: 'Create both the features matrix and the target matrix. Make sure that you store
    the data from the features matrix in a variable, X, and the data from the target
    matrix in another variable, Y:'
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建特征矩阵和目标矩阵。确保将特征矩阵的数据存储在变量 X 中，将目标矩阵的数据存储在另一个变量 Y 中：
- en: '[PRE1]'
  id: totrans-13
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Print out the shape of `X`, as follows:'
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打印出 `X` 的形状，如下所示：
- en: '[PRE2]'
  id: totrans-15
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The output is as follows:'
  id: totrans-16
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE3]'
  id: totrans-17
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Do the same for `Y`:'
  id: totrans-18
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对 `Y` 执行相同操作：
- en: '[PRE4]'
  id: totrans-19
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The output is as follows:'
  id: totrans-20
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE5]'
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Note
  id: totrans-22
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: To access the source code for this specific section, please refer to [https://packt.live/37BwgSv](https://packt.live/37BwgSv).
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 若要访问此特定部分的源代码，请参考 [https://packt.live/37BwgSv](https://packt.live/37BwgSv)。
- en: You can also run this example online at [https://packt.live/2MXFtuP](https://packt.live/2MXFtuP).
    You must execute the entire Notebook in order to get the desired result.
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你还可以在 [https://packt.live/2MXFtuP](https://packt.live/2MXFtuP) 上在线运行此示例。你必须执行整个
    Notebook，才能获得期望的结果。
- en: You have successfully split the dataset into two subsets, which will be used
    later on to train a model.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 你已成功将数据集拆分为两个子集，稍后将使用这些子集来训练模型。
- en: 'Activity 1.02: Pre-processing an Entire Dataset'
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 活动 1.02：预处理整个数据集
- en: 'Solution:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 解决方案：
- en: 'Import `seaborn` and the `LabelEncoder` class from scikit-learn. Next, load
    the `titanic` dataset and create the features matrix, including the following
    features: `sex`, `age`, `fare`, `class`, `embark_town`, and `alone`:'
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入 `seaborn` 和 scikit-learn 中的 `LabelEncoder` 类。接着，加载 `titanic` 数据集，并创建包含以下特征的特征矩阵：`sex`、`age`、`fare`、`class`、`embark_town`
    和 `alone`：
- en: '[PRE6]'
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The features matrix was created as copies of the dataset in order to avoid getting
    a warning message every time the matrix was to be updated through the preprocessing
    process.
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 特征矩阵是数据集的副本，以避免每次通过预处理过程更新矩阵时出现警告信息。
- en: 'The output is as follows:'
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE7]'
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Check for missing values in all the features. As we did previously, use `isnull()`
    to determine whether a value is missing and use `sum()` to sum up the occurrences
    of missing values along each feature:'
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查所有特征中的缺失值。像之前一样，使用 `isnull()` 来判断值是否缺失，并使用 `sum()` 来计算每个特征中缺失值的总数：
- en: '[PRE8]'
  id: totrans-34
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'The output will look as follows:'
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出将如下所示：
- en: '[PRE9]'
  id: totrans-36
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'As you can see from the preceding output, only one feature contains a significant
    amount of missing values: `age`. As it contains many missing values that account
    for almost 20% of the total, the values should be replaced. The mean imputation
    methodology will be applied, as shown in the following code:'
  id: totrans-37
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从前面的输出可以看出，只有一个特征包含大量缺失值：`age`。由于缺失值占总数的近 20%，应当替换这些缺失值。将应用均值插补方法，如下所示：
- en: '[PRE10]'
  id: totrans-38
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Next, discover the outliers present in the numeric features. Let''s use three
    standard deviations as the measure to calculate the min and max threshold for
    numeric features:'
  id: totrans-39
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 接下来，发现数值特征中的异常值。我们使用三倍标准差作为计算数值特征最小值和最大值阈值的标准：
- en: '[PRE11]'
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'The output is as follows:'
  id: totrans-41
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE12]'
  id: totrans-42
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: The total count of outliers for the age and fare features is 7 and 20, respectively,
    reducing the shape of the initial matrix by 27 instances.
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 年龄和票价特征的异常值总数分别为 7 和 20，导致初始矩阵的形状减少了 27 个实例。
- en: 'Next, using a `for` loop, discover outliers present in text features. The `value_counts()`
    function is used to count the occurrence of the classes in each feature:'
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 接下来，使用 `for` 循环，查找文本特征中的异常值。`value_counts()` 函数用于计算每个特征中类别的出现次数：
- en: '[PRE13]'
  id: totrans-45
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'The output is as follows:'
  id: totrans-46
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![Figure 1.23: Count of occurrence of the classes in each feature'
  id: totrans-47
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 1.23：每个特征中类别的出现次数](img/B15781_01_23.jpg)'
- en: '](img/B15781_01_23.jpg)'
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B15781_01_23.jpg)'
- en: 'Figure 1.23: Count of occurrence of the classes in each feature'
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 1.23：每个特征中类别的出现次数
- en: None of the classes for any of the features are considered to be outliers as
    they all represent over 5% of the entire dataset.
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 任何特征的类别都不被认为是异常值，因为它们都代表了整个数据集的 5% 以上。
- en: 'Convert all text features into their numeric representations. Use scikit-learn''s
    `LabelEncoder` class, as shown in the following code:'
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将所有文本特征转换为其数值表示。使用 scikit-learn 的 `LabelEncoder` 类，如下代码所示：
- en: '[PRE14]'
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Print out the top five instances of the features matrix to view the result
    of the conversion:'
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 打印出特征矩阵的前五个实例，查看转换结果：
- en: '[PRE15]'
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'The output is as follows:'
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![Figure 1.24: A screenshot displaying the first five instances of the features
    matrix'
  id: totrans-56
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 1.24：显示特征矩阵前五个实例的截图](img/B15781_01_24.jpg)'
- en: '](img/B15781_01_24.jpg)'
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B15781_01_24.jpg)'
- en: 'Figure 1.24: A screenshot displaying the first five instances of the features
    matrix'
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 1.24：显示特征矩阵前五个实例的截图
- en: Rescale your data, either by normalizing or standardizing it.
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重新调整您的数据，可以通过标准化或规范化它。
- en: 'As you can see from the following code, all features go through the normalization
    process, but only those that don''t meet the criteria of a normalized variable
    are changed:'
  id: totrans-60
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如以下代码所示，所有特征都经过标准化处理，但只有那些不符合标准化变量标准的特征才会被更改：
- en: '[PRE16]'
  id: totrans-61
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'The top 10 rows of the final output are shown in the following screenshot:'
  id: totrans-62
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 最终输出的前 10 行如以下截图所示：
- en: '![Figure 1.25: Displaying the first 10 instances of the normalized dataset'
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 1.25：显示标准化数据集的前 10 个实例](img/B15781_01_25.jpg)'
- en: '](img/B15781_01_25.jpg)'
  id: totrans-64
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B15781_01_25.jpg)'
- en: 'Figure 1.25: Displaying the first 10 instances of the normalized dataset'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.25：显示标准化数据集的前 10 个实例
- en: Note
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: To access the source code for this specific section, please refer to [https://packt.live/2MY1wld](https://packt.live/2MY1wld).
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 要访问此特定部分的源代码，请参阅 [https://packt.live/2MY1wld](https://packt.live/2MY1wld)。
- en: You can also run this example online at [https://packt.live/3e2lyqt](https://packt.live/3e2lyqt).
    You must execute the entire Notebook in order to get the desired result.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 您也可以在 [https://packt.live/3e2lyqt](https://packt.live/3e2lyqt) 在线运行此示例。必须执行整个
    Notebook 才能得到预期的结果。
- en: You have successfully performed data preprocessing over a dataset, which can
    now be used to train a ML algorithm.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 您已成功完成数据预处理，现在可以使用该数据集来训练机器学习算法。
- en: 2\. Unsupervised Learning – Real-Life Applications
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 2. 无监督学习——实际应用
- en: 'Activity 2.01: Using Data Visualization to Aid the Pre-processing Process'
  id: totrans-71
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 活动 2.01：使用数据可视化辅助预处理过程
- en: 'Solution:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 解决方案：
- en: 'Import all the required elements to load the dataset and pre-process it:'
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入加载数据集和预处理所需的所有元素：
- en: '[PRE17]'
  id: totrans-74
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Load the previously downloaded dataset by using pandas'' `read_csv()` function.
    Store the dataset in a pandas DataFrame named `data`:'
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 pandas 的 `read_csv()` 函数加载之前下载的数据集。将数据集存储在名为 `data` 的 pandas DataFrame 中：
- en: '[PRE18]'
  id: totrans-76
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Check for missing values in your DataFrame. Using the `isnull()` function plus
    the `sum()` function, count the missing values of the entire dataset at once:'
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查 DataFrame 中的缺失值。使用 `isnull()` 函数加上 `sum()` 函数，一次性计算整个数据集的缺失值：
- en: '[PRE19]'
  id: totrans-78
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'The output is as follows:'
  id: totrans-79
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE20]'
  id: totrans-80
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: As you can see from the preceding screenshot, there are no missing values in
    the dataset.
  id: totrans-81
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如您从前面的截图中看到的那样，数据集中没有缺失值。
- en: Check for outliers in your DataFrame. Mark as outliers all the values that are
    three standard deviations away from the mean.
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查 DataFrame 中的异常值。标记为异常值的所有值是距离均值三个标准差以外的值。
- en: 'The following code snippet allows you to look for outliers in the entire set
    of features at once. However, another valid method would be to check for outliers
    one feature at a time:'
  id: totrans-83
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 以下代码片段允许您一次性查找所有特征集中的异常值。然而，另一种有效的方法是一次只检查一个特征中的异常值：
- en: '[PRE21]'
  id: totrans-84
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'The count of outliers for each of the features is as follows:'
  id: totrans-85
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 每个特征的异常值计数如下：
- en: '[PRE22]'
  id: totrans-86
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: As you can see from the preceding screenshot, some features do have outliers.
    Considering that there are only a few outliers for each feature, there are two
    possible ways to handle them.
  id: totrans-87
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如您从前面的截图中看到的那样，某些特征确实存在异常值。考虑到每个特征只有少量异常值，有两种可能的处理方法。
- en: 'First, you could decide to delete the outliers. This decision can be supported
    by displaying a histogram for the features with outliers:'
  id: totrans-88
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 首先，你可以决定删除离群点。这个决定可以通过为带有离群点的特征显示直方图来支持：
- en: '[PRE23]'
  id: totrans-89
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'The output is as follows:'
  id: totrans-90
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![Figure 2.14: An example histogram plot for the “Fresh” feature'
  id: totrans-91
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 2.14：为“Fresh”特征绘制的示例直方图'
- en: '](img/B15781_02_14.jpg)'
  id: totrans-92
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B15781_02_14.jpg)'
- en: '[PRE24]'
  id: totrans-93
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'The output is as follows:'
  id: totrans-94
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![Figure 2.15: A pie chart showing the participation of outliers from the Detergents_papers
    feature in the dataset'
  id: totrans-95
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 2.15：饼图显示数据集中“Detergents_papers”特征中离群点的参与情况'
- en: '](img/B15781_02_15.jpg)'
  id: totrans-96
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B15781_02_15.jpg)'
- en: 'Figure 2.15: A pie chart showing the participation of outliers from the Detergents_papers
    feature in the dataset'
  id: totrans-97
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 2.15：饼图显示数据集中“Detergents_papers”特征中离群点的参与情况
- en: The preceding diagram shows the participation of the outliers from the `Detergents_papers`
    feature, which was the feature with the most outliers in the dataset. Only 2.27%
    of the values are outliers, a value so low that it will not affect the performance
    of the model either.
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 上图显示了来自 `Detergents_papers` 特征的离群点参与情况，这是数据集中离群点最多的特征。只有 2.27% 的值是离群点，这个比例如此之低，几乎不会影响模型的性能。
- en: For the solution in this book, it was decided to keep the outliers since they
    are not likely to affect the performance of the model.
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于本书中的解决方案，决定保留离群点，因为它们不太可能影响模型的性能。
- en: Rescale the data.
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重缩放数据。
- en: 'For this solution, the formula for standardization has been used. Note that
    the formula can be applied to the entire dataset at once, instead of being applied
    individually to each feature:'
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于此解决方案，使用了标准化公式。请注意，这个公式可以应用于整个数据集，而不是单独应用于每个特征：
- en: '[PRE25]'
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'The output is as follows:'
  id: totrans-103
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![Figure 2.16: Rescaled data'
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 2.16：重缩放后的数据'
- en: '](img/B15781_02_16.jpg)'
  id: totrans-105
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B15781_02_16.jpg)'
- en: 'Figure 2.16: Rescaled data'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.16：重缩放后的数据
- en: Note
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: To access the source code for this specific section, please refer to [https://packt.live/2Y3ooGh](https://packt.live/2Y3ooGh).
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 要访问此特定部分的源代码，请参阅 [https://packt.live/2Y3ooGh](https://packt.live/2Y3ooGh)。
- en: You can also run this example online at [https://packt.live/2B8vKPI](https://packt.live/2B8vKPI).
    You must execute the entire Notebook in order to get the desired result.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以通过在线运行此示例，访问[https://packt.live/2B8vKPI](https://packt.live/2B8vKPI)。你必须执行整个
    Notebook 才能获得期望的结果。
- en: You have successfully pre-processed the Wholesale Customers dataset, which will
    be used in subsequent activities to build a model that will classify these observations
    into clusters.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 你已经成功地预处理了批发客户数据集，这个数据集将在后续的活动中用于构建一个模型，将这些观测值分类到不同的聚类中。
- en: 'Activity 2.02: Applying the k-means Algorithm to a Dataset'
  id: totrans-111
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 活动 2.02：将 k-means 算法应用于数据集
- en: 'Solution:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 解决方案：
- en: Open the Jupyter Notebook that you used for the previous activity. There, you
    should have imported all the required libraries and performed the necessary steps
    to pre-process the dataset.
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开你在前一个活动中使用的 Jupyter Notebook。在那里，你应该已经导入了所有所需的库，并执行了预处理数据集的必要步骤。
- en: 'The standardized data should look as follows:'
  id: totrans-114
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 标准化后的数据应如下所示：
- en: '![Figure 2.17: A screenshot displaying the first five instances of the standardized
    dataset'
  id: totrans-115
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 2.17：显示标准化数据集前五个实例的截图'
- en: '](img/B15781_02_17.jpg)'
  id: totrans-116
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B15781_02_17.jpg)'
- en: 'Figure 2.17: A screenshot displaying the first five instances of the standardized
    dataset'
  id: totrans-117
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 2.17：显示标准化数据集前五个实例的截图
- en: Calculate the average distance of data points from its centroid in relation
    to the number of clusters. Based on this distance, select the appropriate number
    of clusters to train the model on.
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 计算数据点与其质心之间的平均距离，并根据聚类数量来选择合适的聚类数目来训练模型。
- en: 'First, import the algorithm class:'
  id: totrans-119
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 首先，导入算法类：
- en: '[PRE26]'
  id: totrans-120
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Next, using the code in the following snippet, calculate the average distance
    of data points from its centroid based on the number of clusters created:'
  id: totrans-121
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 接下来，使用以下代码片段，计算数据点与其质心之间的平均距离，基于创建的聚类数量：
- en: '[PRE27]'
  id: totrans-122
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Finally, plot the relation to find the breaking point of the line and select
    the number of clusters:'
  id: totrans-123
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 最后，绘制关系图以找到线的断点并选择聚类数：
- en: '[PRE28]'
  id: totrans-124
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'The output is as follows:'
  id: totrans-125
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![Figure 2.18: The output of the plot function used'
  id: totrans-126
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 2.18：绘图函数的输出结果'
- en: '](img/B15781_02_18.jpg)'
  id: totrans-127
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B15781_02_18.jpg)'
- en: 'Figure 2.18: The output of the plot function used'
  id: totrans-128
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 2.18：绘图函数的输出结果
- en: Again, the *x-axis* represents the number of clusters, while the *y-axis* refers
    to the calculated average distance of the data points in a cluster from their
    centroid.
  id: totrans-129
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 再次，*x轴*表示簇的数量，而*y轴*则表示数据点与其质心之间的计算平均距离。
- en: Train the model and assign a cluster to each data point in your dataset. Plot
    the results.
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 训练模型并为数据集中的每个数据点分配一个簇。绘制结果。
- en: 'To train the model, use the following code:'
  id: totrans-131
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要训练模型，请使用以下代码：
- en: '[PRE29]'
  id: totrans-132
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: The number of clusters selected is `6`; however, since there is no exact breaking
    point, values between 5 and 10 are also acceptable.
  id: totrans-133
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 选择的簇的数量为`6`；然而，由于没有精确的分割点，值在5到10之间也是可以接受的。
- en: 'Finally, plot the results of the clustering process. Since the dataset contains
    eight different features, choose two features to draw at once, as shown in the
    following code:'
  id: totrans-134
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 最后，绘制聚类过程的结果。由于数据集包含八个不同的特征，选择两个特征同时绘制，如以下代码所示：
- en: '[PRE30]'
  id: totrans-135
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'The output is as follows:'
  id: totrans-136
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出结果如下：
- en: '![Figure 2.19: Two example plots obtained after the clustering process'
  id: totrans-137
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 2.19：聚类过程后获得的两个示例图]'
- en: '](img/B15781_02_19.jpg)'
  id: totrans-138
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B15781_02_19.jpg)'
- en: 'Figure 2.19: Two example plots obtained after the clustering process'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.19：聚类过程后获得的两个示例图
- en: Note
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: To access the source code for this activity, please refer to [https://packt.live/3fhgO0y](https://packt.live/3fhgO0y).
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 要访问本次活动的源代码，请参考[https://packt.live/3fhgO0y](https://packt.live/3fhgO0y)。
- en: You can also run this example online at [https://packt.live/3eeEOB6](https://packt.live/3eeEOB6).
    You must execute the entire Notebook in order to get the desired result.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 您也可以在[https://packt.live/3eeEOB6](https://packt.live/3eeEOB6)在线运行此示例。您必须执行整个Notebook才能获得期望的结果。
- en: The `subplots()` function from `matplotlib` has been used to plot two scatter
    graphs at a time. For each graph, the axes represent the values for a selected
    feature in relation to the values of another feature. As can be seen from the
    plots, there is no obvious visual relation due to the fact that we are only able
    to use two of the eight features present in the dataset. However, the final output
    of the model creates six different clusters that represent six different profiles
    of clients.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: '`matplotlib`中的`subplots()`函数已用于同时绘制两个散点图。每个图的轴代表一个选定特征与另一个特征值之间的关系。从图中可以看出，由于我们仅能使用数据集中八个特征中的两个，因此没有明显的视觉关系。然而，模型的最终输出创建了六个不同的簇，代表了六种不同的客户画像。'
- en: 'Activity 2.03: Applying the Mean-Shift Algorithm to a Dataset'
  id: totrans-144
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 活动 2.03：将均值偏移算法应用于数据集
- en: 'Solution:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 解决方案：
- en: Open the Jupyter Notebook that you used for the previous activity.
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开您在之前活动中使用的 Jupyter Notebook。
- en: Train the model and assign a cluster to each data point in your dataset. Plot the results.
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 训练模型并为数据集中的每个数据点分配一个簇。绘制结果。
- en: 'First, import the algorithm class:'
  id: totrans-148
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 首先，导入算法类：
- en: '[PRE31]'
  id: totrans-149
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'To train the model, use the following code:'
  id: totrans-150
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要训练模型，请使用以下代码：
- en: '[PRE32]'
  id: totrans-151
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: The model was trained using a bandwidth of `0.4`. However, feel free to test
    other values to see how the result changes.
  id: totrans-152
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 该模型是使用带宽`0.4`训练的。不过，您可以尝试其他值，看看结果如何变化。
- en: 'Finally, plot the results of the clustering process. As the dataset contains
    eight different features, choose two features to draw at once, as shown in the
    following snippet. Similar to the previous activity, the separation between clusters
    is not seen visually due to the capability to only draw two out of the eight features:'
  id: totrans-153
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 最后，绘制聚类过程的结果。由于数据集包含八个不同的特征，选择两个特征同时绘制，如以下代码片段所示。与之前的活动类似，由于只能绘制八个特征中的两个，聚类之间的分隔在视觉上并不可见：
- en: '[PRE33]'
  id: totrans-154
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'The output is as follows:'
  id: totrans-155
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出结果如下：
- en: '![Figure 2.20: Example plots obtained at the end of the process'
  id: totrans-156
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 2.20：处理结束时获得的示例图]'
- en: '](img/B15781_02_20.jpg)'
  id: totrans-157
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B15781_02_20.jpg)'
- en: 'Figure 2.20: Example plots obtained at the end of the process'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.20：处理结束时获得的示例图
- en: For each of the plots, the axes represent the values of a selected feature,
    against the values of another feature.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 对于每个图，轴代表选定特征的值，相对于另一个特征的值。
- en: Note
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: To access the source code for this activity, please refer to [https://packt.live/3fviVy1](https://packt.live/3fviVy1).
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 要访问本次活动的源代码，请参考[https://packt.live/3fviVy1](https://packt.live/3fviVy1)。
- en: You can also run this example online at [https://packt.live/2Y1aqEF](https://packt.live/2Y1aqEF).
    You must execute the entire Notebook in order to get the desired result.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 您也可以在[https://packt.live/2Y1aqEF](https://packt.live/2Y1aqEF)在线运行此示例。您必须执行整个Notebook才能获得期望的结果。
- en: You have successfully applied the mean-shift algorithm over the Wholesale Customers
    dataset. Later on, you will be able to compare the results of the different algorithms
    over the same dataset to choose the one that performs the best.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 你已经成功地在Wholesale Customers数据集上应用了mean-shift算法。稍后，你将能够比较不同算法在相同数据集上的结果，以选择表现最好的算法。
- en: 'Activity 2.04: Applying the DBSCAN Algorithm to the Dataset'
  id: totrans-164
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 活动2.04：将DBSCAN算法应用于数据集
- en: 'Solution:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 解决方案：
- en: Open the Jupyter Notebook that you used for the previous activity.
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开你在之前活动中使用的Jupyter Notebook。
- en: Train the model and assign a cluster to each data point in your dataset. Plot
    the results.
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 训练模型，并为数据集中的每个数据点分配一个聚类。绘制结果。
- en: 'First, import the algorithm class:'
  id: totrans-168
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 首先，导入算法类：
- en: '[PRE34]'
  id: totrans-169
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'To train the model, use the following code:'
  id: totrans-170
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要训练模型，使用以下代码：
- en: '[PRE35]'
  id: totrans-171
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE35]'
- en: The model was trained using an epsilon value of `0.8`. However, feel free to
    test other values to see how the results change.
  id: totrans-172
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 该模型使用`0.8`的epsilon值进行训练。然而，可以自由测试其他值，看看结果如何变化。
- en: 'Finally, plot the results of the clustering process. As the dataset contains
    eight different features, choose two features to draw at once, as shown in the
    following code:'
  id: totrans-173
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 最后，绘制聚类过程的结果。由于数据集包含八个不同的特征，因此选择两个特征同时绘制，如下面的代码所示：
- en: '[PRE36]'
  id: totrans-174
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'The output is as follows:'
  id: totrans-175
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出结果如下：
- en: '![Figure 2.21: Example plots obtained at the end of the clustering process'
  id: totrans-176
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图2.21：聚类过程结束时获得的示例图'
- en: '](img/B15781_02_21.jpg)'
  id: totrans-177
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B15781_02_21.jpg)'
- en: 'Figure 2.21: Example plots obtained at the end of the clustering process'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.21：聚类过程结束时获得的示例图
- en: Note
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: To access the source code for this activity, please refer to [https://packt.live/2YCFvh8](https://packt.live/2YCFvh8).
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 要访问本活动的源代码，请参考[https://packt.live/2YCFvh8](https://packt.live/2YCFvh8)。
- en: You can also run this example online at [https://packt.live/2MZgnvC](https://packt.live/2MZgnvC).
    You must execute the entire Notebook in order to get the desired result.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以在[https://packt.live/2MZgnvC](https://packt.live/2MZgnvC)上在线运行这个示例。你必须执行整个Notebook才能得到预期的结果。
- en: Similar to the previous activity, the separation between clusters is not seen
    visually due to the capability to only draw two out of the eight features at once.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 与之前的活动类似，由于只能同时绘制八个特征中的两个，因此无法直观地看到聚类之间的分离。
- en: 'Activity 2.05: Measuring and Comparing the Performance of the Algorithms'
  id: totrans-183
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 活动2.05：衡量和比较算法的性能
- en: 'Solution:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 解决方案：
- en: Open the Jupyter Notebook that you used for the previous activity.
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开你在之前活动中使用的Jupyter Notebook。
- en: Calculate both the Silhouette Coefficient score and the Calinski–Harabasz index
    for all the models that you trained previously.
  id: totrans-186
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 计算所有你之前训练的模型的轮廓系数分数和Calinski–Harabasz指数。
- en: 'First, import the metrics:'
  id: totrans-187
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 首先，导入度量：
- en: '[PRE37]'
  id: totrans-188
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'Calculate the Silhouette Coefficient score for all the algorithms, as shown
    in the following code:'
  id: totrans-189
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 计算所有算法的轮廓系数分数，如下面的代码所示：
- en: '[PRE38]'
  id: totrans-190
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE38]'
- en: The scores come to be around `0.3515`, `0.0933`, and `0.1685` for the k-means,
    mean-shift, and DBSCAN algorithms, respectively.
  id: totrans-191
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于k-means、mean-shift和DBSCAN算法，分数分别约为`0.3515`、`0.0933`和`0.1685`。
- en: 'Finally, calculate the Calinski–Harabasz index for all the algorithms. The
    following is a snippet of the code for this:'
  id: totrans-192
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 最后，计算所有算法的Calinski–Harabasz指数。以下是这部分代码的片段：
- en: '[PRE39]'
  id: totrans-193
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE39]'
- en: The scores come to be approximately `145.73`, `112.90`, and `42.45` for the
    three algorithms in the order given in the preceding code snippet.
  id: totrans-194
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于前面代码片段中的三个算法，它们的分数分别大约是`145.73`、`112.90`和`42.45`。
- en: Note
  id: totrans-195
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: To access the source code for this activity, please refer to [https://packt.live/2Y2xHWR](https://packt.live/2Y2xHWR).
  id: totrans-196
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要访问本活动的源代码，请参考[https://packt.live/2Y2xHWR](https://packt.live/2Y2xHWR)。
- en: You can also run this example online at [https://packt.live/3hszegy](https://packt.live/3hszegy).
    You must execute the entire Notebook in order to get the desired result.
  id: totrans-197
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你也可以在[https://packt.live/3hszegy](https://packt.live/3hszegy)上在线运行这个示例。你必须执行整个Notebook才能得到预期的结果。
- en: By quickly looking at the results we obtained for both metrics, it is possible
    to conclude that the k-means algorithm outperforms the other models, and hence
    should be the one that's selected to solve the data problem.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 通过快速查看我们获得的两个度量的结果，可以得出结论：k-means算法优于其他模型，因此应选择它来解决数据问题。
- en: 3\. Supervised Learning – Key Steps
  id: totrans-199
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 3. 监督学习——关键步骤
- en: 'Activity 3.01: Data Partitioning on a Handwritten Digit Dataset'
  id: totrans-200
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 活动3.01：手写数字数据集上的数据分割
- en: 'Solution:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 解决方案：
- en: 'Import all the required elements to split a dataset, as well as the `load_digits`
    function from scikit-learn to load the `digits` dataset. Use the following code
    to do so:'
  id: totrans-202
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入所有所需的元素以拆分数据集，以及从scikit-learn导入`load_digits`函数来加载`digits`数据集。使用以下代码进行操作：
- en: '[PRE40]'
  id: totrans-203
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'Load the `digits` dataset and create Pandas DataFrames containing the features
    and target matrices:'
  id: totrans-204
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 加载`digits`数据集并创建包含特征和目标矩阵的Pandas数据框：
- en: '[PRE41]'
  id: totrans-205
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'The shape of your features and target matrices should be as follows, respectively:'
  id: totrans-206
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 特征矩阵和目标矩阵的形状应分别如下所示：
- en: '[PRE42]'
  id: totrans-207
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE42]'
- en: Perform the conventional split approach, using a split ratio of 60/20/20%.
  id: totrans-208
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 执行常规的拆分方法，使用60/20/20%的拆分比例。
- en: 'Using the `train_test_split` function, split the data into an initial train
    set and a test set:'
  id: totrans-209
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用`train_test_split`函数将数据拆分为初步训练集和测试集：
- en: '[PRE43]'
  id: totrans-210
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'The shape of the sets that you created should be as follows:'
  id: totrans-211
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你创建的集合的形状应如下所示：
- en: '[PRE44]'
  id: totrans-212
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'Next, calculate the value of `test_size`, which sets the size of the dev set
    equal to the size of the test set that was created previously:'
  id: totrans-213
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 接下来，计算`test_size`的值，将开发集的大小设置为之前创建的测试集的大小：
- en: '[PRE45]'
  id: totrans-214
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE45]'
- en: The result of the preceding operation is `0.2505`.
  id: totrans-215
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 前面的操作结果是`0.2505`。
- en: 'Finally, split `X_new` and `Y_new` into the final train and dev sets. Use the
    following code to do so:'
  id: totrans-216
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 最后，将`X_new`和`Y_new`拆分为最终的训练集和开发集。使用以下代码进行操作：
- en: '[PRE46]'
  id: totrans-217
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'The output from the preceding snippet is as follows:'
  id: totrans-218
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 前面代码段的输出如下所示：
- en: '[PRE47]'
  id: totrans-219
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE47]'
- en: Using the same DataFrames, perform a 10-fold cross-validation split.
  id: totrans-220
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用相同的数据框，执行10折交叉验证拆分。
- en: 'First, divide the datasets into initial training and testing sets:'
  id: totrans-221
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 首先，将数据集划分为初步的训练集和测试集：
- en: '[PRE48]'
  id: totrans-222
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'Using the `KFold` class, perform a 10-fold split:'
  id: totrans-223
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用`KFold`类执行10折拆分：
- en: '[PRE49]'
  id: totrans-224
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'Remember that cross-validation performs a different configuration of splits,
    shuffling data each time. Considering this, perform a `for` loop that will go
    through all the split configurations:'
  id: totrans-225
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 记住，交叉验证会执行不同的拆分配置，每次都会洗牌数据。考虑到这一点，执行一个`for`循环，遍历所有的拆分配置：
- en: '[PRE50]'
  id: totrans-226
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'The code in charge of training and evaluating the model should be inside the
    body of the `for` loop in order to train and evaluate the model with each configuration
    of splits:'
  id: totrans-227
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 负责训练和评估模型的代码应放在`for`循环体内，以便使用每种拆分配置来训练和评估模型：
- en: '[PRE51]'
  id: totrans-228
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'By printing the shape of all the subsets, as per the preceding snippet, the
    output is as follows:'
  id: totrans-229
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 按照前面的代码段打印所有子集的形状，输出如下：
- en: '[PRE52]'
  id: totrans-230
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE52]'
- en: Note
  id: totrans-231
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: To access the source code for this specific section, please refer to [https://packt.live/37xatv3](https://packt.live/37xatv3).
  id: totrans-232
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要访问此特定部分的源代码，请参阅[https://packt.live/37xatv3](https://packt.live/37xatv3)。
- en: You can also run this example online at [https://packt.live/2Y2nolS](https://packt.live/2Y2nolS).
    You must execute the entire Notebook in order to get the desired result.
  id: totrans-233
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你还可以在[https://packt.live/2Y2nolS](https://packt.live/2Y2nolS)在线运行此示例。必须执行整个Notebook以获得所需结果。
- en: You have successfully split a dataset using both the conventional split approach,
    as well as the cross-validation one. These sets can now be used to train outstanding
    models that perform well on unseen data.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 你已经成功地使用常规拆分方法和交叉验证方法拆分了数据集。这些数据集现在可以用来训练表现优异的模型，这些模型能够在未见过的数据上取得良好的表现。
- en: 'Activity 3.02: Evaluating the Performance of the Model Trained on a Handwritten
    Dataset'
  id: totrans-235
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 活动 3.02：评估在手写数据集上训练的模型的性能
- en: 'Solution:'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 解决方案：
- en: 'Import all the required elements to load and split a dataset in order to train
    a model and evaluate the performance of the classification tasks:'
  id: totrans-237
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入所有所需的元素，以加载并拆分数据集，以便训练模型并评估分类任务的性能：
- en: '[PRE53]'
  id: totrans-238
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'Load the `digits` toy dataset from scikit-learn and create Pandas DataFrames
    containing the features and target matrices:'
  id: totrans-239
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从scikit-learn加载`digits`玩具数据集，并创建包含特征和目标矩阵的Pandas数据框：
- en: '[PRE54]'
  id: totrans-240
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE54]'
- en: 'Split the data into training and testing sets. Use 20% as the size of the testing
    set:'
  id: totrans-241
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将数据拆分为训练集和测试集。使用20%的数据作为测试集：
- en: '[PRE55]'
  id: totrans-242
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE55]'
- en: 'Train a decision tree on the train set. Then, use the model to predict the
    class label on the test set (hint: to train the decision tree, revisit *Exercise
    3.04*, *Calculating Different Evaluation Metrics on a Classification Task*):'
  id: totrans-243
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在训练集上训练决策树。然后，使用该模型预测测试集上的类别标签（提示：要训练决策树，请回顾*练习 3.04*，*计算分类任务的不同评估指标*）：
- en: '[PRE56]'
  id: totrans-244
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE56]'
- en: 'Use scikit-learn to construct a confusion matrix:'
  id: totrans-245
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用scikit-learn构建混淆矩阵：
- en: '[PRE57]'
  id: totrans-246
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE57]'
- en: 'The output of the confusion matrix is as follows:'
  id: totrans-247
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 混淆矩阵的输出如下所示：
- en: '![Figure 3.14: Output of the confusion matrix'
  id: totrans-248
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 3.14：混淆矩阵的输出'
- en: '](img/B15781_03_14.jpg)'
  id: totrans-249
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B15781_03_14.jpg)'
- en: 'Figure 3.14: Output of the confusion matrix'
  id: totrans-250
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 3.14：混淆矩阵的输出
- en: 'Calculate the accuracy of the model:'
  id: totrans-251
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 计算模型的准确率：
- en: '[PRE58]'
  id: totrans-252
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE58]'
- en: The accuracy is equal to `84.72`%.
  id: totrans-253
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 准确率为 `84.72`%。
- en: 'Calculate the precision and recall. Considering that both the precision and
    recall can only be calculated on binary data, we''ll assume that we are only interested
    in classifying instances as number 6 or any other number:'
  id: totrans-254
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 计算精确度和召回率。考虑到精确度和召回率只能在二元数据上计算，我们假设我们只对将实例分类为数字 6 或其他任何数字感兴趣：
- en: '[PRE59]'
  id: totrans-255
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE59]'
- en: 'The output from the preceding code snippet is as follows:'
  id: totrans-256
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 上述代码片段的输出如下：
- en: '[PRE60]'
  id: totrans-257
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE60]'
- en: According to this, the precision and recall scores should be equal to `98.41`%
    and `98.10`%, respectively.
  id: totrans-258
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 根据此，精确度和召回率分数应分别等于`98.41`%和`98.10`%。
- en: Note
  id: totrans-259
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: To access the source code for this specific section, please refer to [https://packt.live/2UJMFPC](https://packt.live/2UJMFPC).
  id: totrans-260
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要访问此特定部分的源代码，请参考[https://packt.live/2UJMFPC](https://packt.live/2UJMFPC)。
- en: You can also run this example online at [https://packt.live/2zwqkgX](https://packt.live/2zwqkgX).
    You must execute the entire Notebook in order to get the desired result.
  id: totrans-261
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您还可以在线运行此示例，网址为[https://packt.live/2zwqkgX](https://packt.live/2zwqkgX)。必须执行整个笔记本才能获得预期结果。
- en: You have successfully measured the performance of classification tasks.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 您已成功衡量了分类任务的性能。
- en: 'Activity 3.03: Performing Error Analysis on a Model Trained to Recognize Handwritten
    Digits'
  id: totrans-263
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 活动 3.03：对训练识别手写数字的模型进行错误分析
- en: 'Solution:'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 解决方案：
- en: 'Import the required elements to load and split a dataset. We will do this to
    train the model and measure its accuracy:'
  id: totrans-265
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入所需的元素以加载和拆分数据集。我们将这样做以训练模型并衡量其准确性：
- en: '[PRE61]'
  id: totrans-266
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE61]'
- en: 'Load the `digits` toy dataset from scikit-learn and create Pandas DataFrames
    containing the features and target matrices:'
  id: totrans-267
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 scikit-learn 加载 `digits` 玩具数据集，并创建包含特征和目标矩阵的 Pandas DataFrame：
- en: '[PRE62]'
  id: totrans-268
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE62]'
- en: 'Split the data into training, validation, and testing sets. Use `0.1` as the
    size of the test set, and an equivalent number to build a validation set of the
    same shape:'
  id: totrans-269
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将数据拆分为训练集、验证集和测试集。使用 `0.1` 作为测试集的大小，并使用等量数据构建具有相同形状的验证集：
- en: '[PRE63]'
  id: totrans-270
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE63]'
- en: 'The resulting shapes are as follows:'
  id: totrans-271
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 结果形状如下：
- en: '[PRE64]'
  id: totrans-272
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE64]'
- en: 'Create a train/dev set for both the features and the target values that contains
    `90` instances/labels of the train set and `90` instances/labels of the dev set:'
  id: totrans-273
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为特征和目标值创建训练/开发集，其中包含`90`个训练集实例/标签和`90`个开发集实例/标签：
- en: '[PRE65]'
  id: totrans-274
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE65]'
- en: 'The resulting shapes are as follows:'
  id: totrans-275
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 结果形状如下：
- en: '[PRE66]'
  id: totrans-276
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE66]'
- en: 'Train a decision tree on that training set data:'
  id: totrans-277
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在训练集数据上训练决策树：
- en: '[PRE67]'
  id: totrans-278
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE67]'
- en: 'Calculate the error rate for all sets of data and determine which condition
    is affecting the performance of the model:'
  id: totrans-279
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 计算所有数据集的错误率，并确定哪种情况影响模型的表现：
- en: '[PRE68]'
  id: totrans-280
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE68]'
- en: 'The output is as follows:'
  id: totrans-281
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE69]'
  id: totrans-282
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE69]'
- en: 'The error rates can be seen in the following table:'
  id: totrans-283
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 错误率可以在下表中看到：
- en: '![Figure 3.15: Error rates of the Handwritten Digits model'
  id: totrans-284
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 3.15：手写数字模型的错误率'
- en: '](img/B15781_03_15.jpg)'
  id: totrans-285
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B15781_03_15.jpg)'
- en: 'Figure 3.15: Error rates of the Handwritten Digits model'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.15：手写数字模型的错误率
- en: From the preceding results, it can be concluded that the model is equally suffering
    from variance and data mismatch.
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 从之前的结果可以得出结论，模型同样受到方差和数据不匹配的影响。
- en: Note
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: To access the source code for this specific section, please refer to [https://packt.live/3d0c4uM](https://packt.live/3d0c4uM).
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 要访问此特定部分的源代码，请参考[https://packt.live/3d0c4uM](https://packt.live/3d0c4uM)。
- en: You can also run this example online at [https://packt.live/3eeFlTC](https://packt.live/3eeFlTC).
    You must execute the entire Notebook in order to get the desired result.
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以在线运行此示例，网址为[https://packt.live/3eeFlTC](https://packt.live/3eeFlTC)。必须执行整个笔记本才能获得预期结果。
- en: You have now successfully performed an error analysis to determine a course
    of action to improve the model's performance.
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 您现在已经成功地执行了错误分析，以确定改进模型性能的行动方案。
- en: '4\. Supervised Learning Algorithms: Predicting Annual Income'
  id: totrans-292
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 4. 有监督学习算法：预测年收入
- en: 'Activity 4.01: Training a Naïve Bayes Model for Our Census Income Dataset'
  id: totrans-293
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 活动 4.01：为我们的普查收入数据集训练朴素贝叶斯模型
- en: 'Solution:'
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 解决方案：
- en: 'In a Jupyter Notebook, import all the required elements to load and split the
    dataset, as well as to train a Naïve Bayes algorithm:'
  id: totrans-295
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Jupyter Notebook 中，导入所有所需的元素以加载和拆分数据集，并训练朴素贝叶斯算法：
- en: '[PRE70]'
  id: totrans-296
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE70]'
- en: 'Load the pre-processed Census Income dataset. Next, separate the features from
    the target by creating two variables, `X` and `Y`:'
  id: totrans-297
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 加载预处理后的普查收入数据集。接下来，通过创建两个变量 `X` 和 `Y`，将特征与目标分开：
- en: '[PRE71]'
  id: totrans-298
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE71]'
- en: Note that there are several ways to achieve the separation of `X` and `Y`. Use
    the one that you feel most comfortable with. However, take into account that `X`
    should contain the features of all instances, while `Y` should contain the class
    labels of all instances.
  id: totrans-299
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 请注意，分离`X`和`Y`的方法有多种。使用你最熟悉的方法。不过，请考虑到，`X`应该包含所有实例的特征，而`Y`应该包含所有实例的类标签。
- en: 'Divide the dataset into training, validation, and testing sets, using a split
    ratio of 10%:'
  id: totrans-300
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将数据集分为训练集、验证集和测试集，使用10%的分割比例：
- en: '[PRE72]'
  id: totrans-301
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE72]'
- en: 'The final shape will look as follows:'
  id: totrans-302
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 最终的形状如下：
- en: '[PRE73]'
  id: totrans-303
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE73]'
- en: 'Use the `fit` method to train a Naïve Bayes model on the training sets (`X_train`
    and `Y_train`):'
  id: totrans-304
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`fit`方法在训练集（`X_train`和`Y_train`）上训练一个朴素贝叶斯模型：
- en: '[PRE74]'
  id: totrans-305
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE74]'
- en: 'Finally, perform a prediction using the model that you trained previously for
    a new instance with the following values for each feature – `39`, `6`, `13`, `4`,
    `0`, `2174`, `0`, `40`, `38`:'
  id: totrans-306
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，使用之前训练的模型对一个新实例进行预测，该实例的每个特征值如下：`39`、`6`、`13`、`4`、`0`、`2174`、`0`、`40`、`38`：
- en: '[PRE75]'
  id: totrans-307
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE75]'
- en: 'The output from the prediction is as follows:'
  id: totrans-308
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 预测的输出结果如下：
- en: '[PRE76]'
  id: totrans-309
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE76]'
- en: Note
  id: totrans-310
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: To access the source code for this specific section, please refer to [https://packt.live/3ht1TCs](https://packt.live/3ht1TCs).
  id: totrans-311
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要访问该特定部分的源代码，请参考[https://packt.live/3ht1TCs](https://packt.live/3ht1TCs)。
- en: You can also run this example online at [https://packt.live/2zwqxkf](https://packt.live/2zwqxkf).
    You must execute the entire Notebook in order to get the desired result.
  id: totrans-312
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你也可以在网上运行这个示例，网址是[https://packt.live/2zwqxkf](https://packt.live/2zwqxkf)。你必须执行整个Notebook才能得到预期的结果。
- en: This means that the individual has an income less than or equal to 50K, considering
    that 0 is the label for individuals with a salary less than or equal to 50K.
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着该个人的收入低于或等于50K，因为0是收入低于或等于50K的标签。
- en: 'Activity 4.02: Training a Decision Tree Model for Our Census Income Dataset'
  id: totrans-314
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 活动 4.02：为我们的普查收入数据集训练一个决策树模型
- en: 'Solution:'
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 解决方案：
- en: 'Open the Jupyter Notebook that you used for the previous activity and import
    the decision tree algorithm from scikit-learn:'
  id: totrans-316
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开你在前一个活动中使用的Jupyter Notebook，并从scikit-learn导入决策树算法：
- en: '[PRE77]'
  id: totrans-317
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE77]'
- en: 'Train the model using the `fit` method on the `DecisionTreeClassifier` class
    from scikit-learn. To train the model, use the training set data from the previous
    activity (`X_train` and `Y_train`):'
  id: totrans-318
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用scikit-learn的`DecisionTreeClassifier`类，通过`fit`方法训练模型。使用前一个活动中的训练集数据（`X_train`和`Y_train`）进行训练：
- en: '[PRE78]'
  id: totrans-319
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE78]'
- en: 'Finally, perform a prediction using the model that you trained before for a
    new instance with the following values for each feature – `39`, `6`, `13`, `4`,
    `0`, `2174`, `0`, `40`, `38`:'
  id: totrans-320
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，使用之前训练的模型对一个新实例进行预测，该实例的每个特征值如下：`39`、`6`、`13`、`4`、`0`、`2174`、`0`、`40`、`38`：
- en: '[PRE79]'
  id: totrans-321
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE79]'
- en: 'The output from the preceding code snippet is as follows:'
  id: totrans-322
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 前面代码片段的输出如下：
- en: '[PRE80]'
  id: totrans-323
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE80]'
- en: Note
  id: totrans-324
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: To access the source code for this specific section, please refer to [https://packt.live/2zxQIqV](https://packt.live/2zxQIqV).
  id: totrans-325
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要访问该特定部分的源代码，请参考[https://packt.live/2zxQIqV](https://packt.live/2zxQIqV)。
- en: You can also run this example online at [https://packt.live/2AC7iWX](https://packt.live/2AC7iWX).
    You must execute the entire Notebook in order to get the desired result.
  id: totrans-326
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你也可以在网上运行这个示例，网址是[https://packt.live/2AC7iWX](https://packt.live/2AC7iWX)。你必须执行整个Notebook才能得到预期的结果。
- en: This means that the subject has an income lower than or equal to 50K.
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着该对象的收入低于或等于50K。
- en: 'Activity 4.03: Training an SVM Model for Our Census Income Dataset'
  id: totrans-328
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 活动 4.03：为我们的普查收入数据集训练一个SVM模型
- en: 'Solution:'
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 解决方案：
- en: 'Open the Jupyter Notebook that you used for the previous activity and import
    the SVM algorithm from scikit-learn:'
  id: totrans-330
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开你在前一个活动中使用的Jupyter Notebook，并从scikit-learn导入SVM算法：
- en: '[PRE81]'
  id: totrans-331
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE81]'
- en: 'Train the model using the `fit` method on the `SVC` class from scikit-learn.
    To train the model, use the training set data from the previous activity (`X_train`
    and `Y_train`):'
  id: totrans-332
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用scikit-learn的`SVC`类，通过`fit`方法训练模型。使用前一个活动中的训练集数据（`X_train`和`Y_train`）进行训练：
- en: '[PRE82]'
  id: totrans-333
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE82]'
- en: 'Finally, perform a prediction using the model that you trained before for a
    new instance with the following values for each feature – `39`, `6`, `13`, `4`,
    `0`, `2174`, `0`, `40`, `38`:'
  id: totrans-334
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，使用之前训练的模型对一个新实例进行预测，该实例的每个特征值如下：`39`、`6`、`13`、`4`、`0`、`2174`、`0`、`40`、`38`：
- en: '[PRE83]'
  id: totrans-335
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE83]'
- en: 'The output is as follows:'
  id: totrans-336
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出结果如下：
- en: '[PRE84]'
  id: totrans-337
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE84]'
- en: The prediction for the individual is equal to zero, which means that the individual
    has an income below or equal to `50K`.
  id: totrans-338
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 该个人的预测值为零，这意味着该个人的收入低于或等于`50K`。
- en: Note
  id: totrans-339
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: To access the source code for this specific section, please refer to [https://packt.live/2Nb6J9z](https://packt.live/2Nb6J9z).
  id: totrans-340
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要查看本特定部分的源代码，请参阅 [https://packt.live/2Nb6J9z](https://packt.live/2Nb6J9z)。
- en: You can also run this example online at [https://packt.live/3hbpCGm](https://packt.live/3hbpCGm).
    You must execute the entire Notebook in order to get the desired result.
  id: totrans-341
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您还可以在 [https://packt.live/3hbpCGm](https://packt.live/3hbpCGm) 上在线运行此示例。必须执行整个
    Notebook 才能获得所需的结果。
- en: '5\. Artificial Neural Networks: Predicting Annual Income'
  id: totrans-342
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 5\. 人工神经网络：预测年收入
- en: 'Activity 5.01: Training an MLP for Our Census Income Dataset'
  id: totrans-343
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 活动 5.01：为我们的人口普查收入数据集训练 MLP
- en: 'Solution:'
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 解决方案：
- en: 'Import all the elements required to load and split a dataset, to train an MLP,
    and to measure accuracy:'
  id: totrans-345
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入加载和分割数据集所需的所有元素，以训练 MLP 并测量准确率：
- en: '[PRE85]'
  id: totrans-346
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE85]'
- en: 'Using the preprocessed Census Income Dataset, separate the features from the
    target, creating the variables `X` and `Y`:'
  id: totrans-347
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用预处理后的人口普查收入数据集，将特征与目标分开，创建变量 `X` 和 `Y`：
- en: '[PRE86]'
  id: totrans-348
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE86]'
- en: As explained previously, there are several ways to achieve the separation of
    `X` and `Y`, and the main thing to consider is that `X` should contain the features
    for all instances, while `Y` should contain the class label of all instances.
  id: totrans-349
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如前所述，有几种方法可以实现 `X` 和 `Y` 的分离，主要考虑的是 `X` 应包含所有实例的特征，而 `Y` 应包含所有实例的类标签。
- en: 'Divide the dataset into training, validation, and testing sets, using a split
    ratio of 10%:'
  id: totrans-350
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用分割比例为10%将数据集划分为训练、验证和测试集：
- en: '[PRE87]'
  id: totrans-351
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE87]'
- en: 'The shape of the sets created should be as follows:'
  id: totrans-352
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 创建的集合形状应如下：
- en: '[PRE88]'
  id: totrans-353
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE88]'
- en: 'Instantiate the `MLPClassifier` class from scikit-learn and train the model
    with the training data. Leave the hyperparameters to their default values. Again,
    use a `random_state` equal to `101`:'
  id: totrans-354
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 scikit-learn 实例化 `MLPClassifier` 类，并使用训练数据训练模型。将超参数保留为默认值。同样，使用 `random_state`
    等于 `101`：
- en: '[PRE89]'
  id: totrans-355
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE89]'
- en: 'Calculate the accuracy of the model for all three sets (training, validation,
    and testing):'
  id: totrans-356
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 计算所有三个集合（训练、验证和测试）的模型准确率：
- en: '[PRE90]'
  id: totrans-357
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE90]'
- en: 'The accuracy score for the three sets should be as follows:'
  id: totrans-358
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 三个集合的准确率分数应如下：
- en: '[PRE91]'
  id: totrans-359
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE91]'
- en: Note
  id: totrans-360
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: To access the source code for this specific section, please refer to [https://packt.live/3hneWFr](https://packt.live/3hneWFr).
  id: totrans-361
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要查看本特定部分的源代码，请参阅 [https://packt.live/3hneWFr](https://packt.live/3hneWFr)。
- en: This section does not currently have an online interactive example, and will
    need to be run locally.
  id: totrans-362
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此部分目前没有在线互动示例，需要在本地运行。
- en: You have successfully trained an MLP model to solve a real-life data problem.
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: 您已成功训练了一个 MLP 模型来解决现实生活中的数据问题。
- en: 'Activity 5.02: Comparing Different Models to Choose the Best Fit for the Census
    Income Data Problem'
  id: totrans-364
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 活动 5.02：比较不同模型以选择最适合人口普查收入数据问题的模型
- en: 'Solution:'
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: 解决方案：
- en: Open the Jupyter Notebooks that you used to train the models.
  id: totrans-366
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开您用来训练模型的 Jupyter Notebook。
- en: Compare the four models, based only on their accuracy scores.
  id: totrans-367
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 仅基于它们的准确率分数比较四个模型。
- en: 'By taking the accuracy scores of the models from the previous chapter, and
    the accuracy of the model trained in this chapter, it is possible to perform a
    final comparison to choose the model that best solves the data problem. To do
    so, the following table displays the accuracy scores for all four models:'
  id: totrans-368
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 通过使用上一章节模型的准确率分数以及本章节训练的模型的准确率，可以进行最终比较，以选择最佳解决数据问题的模型。为此，以下表格显示了所有四个模型的准确率分数：
- en: '![Figure 5.15: Accuracy scores of all four models for the Census Income Dataset'
  id: totrans-369
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 5.15：人口普查收入数据集所有四个模型的准确率分数'
- en: '](img/B15781_05_15.jpg)'
  id: totrans-370
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B15781_05_15.jpg)'
- en: 'Figure 5.15: Accuracy scores of all four models for the Census Income Dataset'
  id: totrans-371
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 5.15：人口普查收入数据集所有四个模型的准确率分数
- en: On the basis of the accuracy scores, identify the model that best solves the
    data problem.
  id: totrans-372
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根据准确率分数确定最佳解决数据问题的模型。
- en: To identify the model that best solves the data problem, begin by comparing
    the accuracy rates over the training sets. From this, it is possible to conclude
    that the decision tree model is a better fit for the data problem. Nonetheless,
    the performance over the validation and testing sets is lower than the one achieved
    using the MLP, which is an indication of the presence of high variance in the
    decision tree model.
  id: totrans-373
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要确定最佳解决数据问题的模型，首先比较训练集上的准确率。从中可以得出结论，决策树模型比数据问题更适合。尽管如此，在验证和测试集上的性能低于使用 MLP
    实现的性能，这表明决策树模型存在高方差的迹象。
- en: Hence, a good approach would be to address the high variance of the decision
    tree model by simplifying the model. This can be achieved by adding a pruning
    argument that "trims" the leaves of the tree to simplify it and ignore some of
    the details of the tree in order to generalize the model to the data. Ideally,
    the model should be able to reach a similar level of accuracy for all three sets,
    which would make it the best model for the data problem.
  id: totrans-374
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 因此，一个好的方法是通过简化决策树模型来解决其高方差问题。这可以通过添加一个剪枝参数来实现，该参数会“修剪”树的叶子，简化模型并忽略树的一些细节，从而使模型能够更好地泛化到数据。理想情况下，模型应该能够在所有三个数据集上达到相似的准确率，这将使它成为数据问题的最佳模型。
- en: However, if the model is not able to overcome the high variance, and assuming
    that all the models have been fine-tuned to achieve the maximum performance possible,
    the MLP should be the model that is selected, considering that it performs best
    over the testing sets. This is mainly because the performance of the model over
    the testing set is the one that defines its overall performance over unseen data,
    which means that the one with higher testing-set performance will be more useful
    in the long term.
  id: totrans-375
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 然而，如果模型无法克服高方差，并且假设所有模型都已经经过精调以实现最大性能，那么应选择MLP模型，因为它在测试集上的表现最好。主要原因是模型在测试集上的表现定义了其在未见数据上的总体表现，这意味着测试集表现更好的模型在长期使用中将更加有用。
- en: 6\. Building Your Own Program
  id: totrans-376
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 6\. 构建你自己的程序
- en: 'Activity 6.01: Performing the Preparation and Creation Stages for the Bank
    Marketing Dataset'
  id: totrans-377
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 活动6.01：为银行营销数据集执行准备和创建阶段
- en: 'Solution:'
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: 解决方案：
- en: Note
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: To ensure the reproducibility of the results available at [https://packt.live/2RpIhn9](https://packt.live/2RpIhn9),
    make sure that you use a `random_state` of `0` when splitting the datasets and
    a `random_state` of `2` when training the models.
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: 为确保[https://packt.live/2RpIhn9](https://packt.live/2RpIhn9)中结果的可重复性，请确保在划分数据集时使用`random_state`为`0`，在训练模型时使用`random_state`为`2`。
- en: 'Open a Jupyter Notebook and import all the required elements:'
  id: totrans-381
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开Jupyter Notebook并导入所有必需的元素：
- en: '[PRE92]'
  id: totrans-382
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE92]'
- en: 'Load the dataset into the notebook. Make sure that you load the one that was
    edited previously, named `bank-full-dataset.csv`, which is also available at [https://packt.live/2wnJyny](https://packt.live/2wnJyny):'
  id: totrans-383
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将数据集加载到笔记本中。确保加载先前编辑过的数据集，文件名为`bank-full-dataset.csv`，该数据集也可以在[https://packt.live/2wnJyny](https://packt.live/2wnJyny)找到：
- en: '[PRE93]'
  id: totrans-384
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE93]'
- en: 'The output is as follows:'
  id: totrans-385
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出结果如下：
- en: '![Figure 6.8: A screenshot showing the first 10 instances of the dataset'
  id: totrans-386
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图6.8：显示数据集前10个实例的截图'
- en: '](img/B15781_06_08.jpg)'
  id: totrans-387
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B15781_06_08.jpg)'
- en: 'Figure 6.8: A screenshot showing the first 10 instances of the dataset'
  id: totrans-388
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图6.8：显示数据集前10个实例的截图
- en: The missing values are shown as `NaN`, as explained previously.
  id: totrans-389
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 缺失值显示为`NaN`，如前所述。
- en: Select the metric that's the most appropriate for measuring the performance
    of the model, considering that the purpose of the study is to detect clients who
    would subscribe to the term deposit.
  id: totrans-390
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择最适合衡量模型性能的指标，考虑到本研究的目的是检测哪些客户会订阅定期存款。
- en: The metric to evaluate the performance of the model is the **precision** metric,
    as it compares the correctly classified positive labels against the total number
    of instances predicted as positive.
  id: totrans-391
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 评估模型性能的指标是**精确度**指标，因为它比较正确分类的正标签与被预测为正的所有实例的总数。
- en: Pre-process the dataset.
  id: totrans-392
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 预处理数据集。
- en: 'The process of handling missing values is handled as per the concepts we learned
    about in *Chapter 1*, *Introduction to Scikit-Learn*, and that have been applied
    throughout this book. Use the following code to check for missing values:'
  id: totrans-393
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 处理缺失值的过程按照我们在*第1章*，《Scikit-Learn介绍》中学到的概念进行，并已在本书中应用。使用以下代码检查缺失值：
- en: '[PRE94]'
  id: totrans-394
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE94]'
- en: 'Based on the results, you will observe that only four features contain missing
    values: `job` (288), `education` (1,857), `contact` (13,020), and `poutcome` (36,959).'
  id: totrans-395
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 根据结果，你会观察到只有四个特征包含缺失值：`job`（288），`education`（1,857），`contact`（13,020），和`poutcome`（36,959）。
- en: The first two features can be left unhandled, considering that the missing values
    represent less than 5% of the entire data. On the other hand, 28.8% of the values
    are missing from the `contact` feature, and taking into account that the feature
    refers to the mode of contact, which is considered to be irrelevant for determining
    whether a person will subscribe to a new product, it is safe to remove this feature
    from the study. Finally, the `poutcome` feature is missing 81.7% of its values,
    which is why this feature is also removed from the study.
  id: totrans-396
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 前两个特征可以不处理，因为缺失值占整个数据的比例低于5%。另一方面，`contact`特征的缺失值占28.8%，并且考虑到该特征表示的是联系方式，这与判断一个人是否会订阅新产品无关，因此可以安全地将该特征从研究中移除。最后，`poutcome`特征缺失了81.7%的值，这也是该特征被从研究中移除的原因。
- en: 'Using the following code, the preceding two features are dropped:'
  id: totrans-397
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用以下代码，将前述两个特征删除：
- en: '[PRE95]'
  id: totrans-398
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE95]'
- en: As we explained in *Chapter 1*, *Introduction to Scikit-Learn*, and applied
    throughout this book, the process of converting categorical features into their
    numeric form is as follows.
  id: totrans-399
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 正如我们在*第一章*中解释的那样，*Scikit-Learn简介*，并在全书中应用，将分类特征转换为数值形式的过程如下所示。
- en: 'For all nominal features, use the following code:'
  id: totrans-400
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于所有的名义特征，使用以下代码：
- en: '[PRE96]'
  id: totrans-401
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE96]'
- en: The preceding code, as explained in previous chapters, converts all the qualitative
    features into their numeric forms.
  id: totrans-402
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如前所述，前面的代码将所有定性特征转换为它们的数值形式。
- en: 'Next, to handle the ordinal feature, we must use the following code, as mentioned
    in *Step 4*:'
  id: totrans-403
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 接下来，为了处理有序特征，我们必须使用以下代码，如*步骤4*中所述：
- en: '[PRE97]'
  id: totrans-404
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE97]'
- en: Here, the first line converts `NaN` values into the word `unknown`, while the
    second line sets the order of the values in the feature. Next, a `for` loop is
    used to replace each word with a number that follows an order. For the preceding
    example, `0` will be used to replace the word `unknown`, then `1` will be used
    instead of `primary`, and so on. Finally, the whole column is converted into an
    integer type since the `replace` function writes down the numbers as strings.
  id: totrans-405
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这里，第一行将`NaN`值转换为`unknown`，而第二行设置了特征中值的顺序。接下来，使用`for`循环将每个单词替换为一个按顺序排列的数字。在上述示例中，`0`将替换`unknown`，然后`1`将替换`primary`，以此类推。最后，整个列被转换为整数类型，因为`replace`函数将数字写入为字符串。
- en: 'If we display the head of the resulting DataFrame, the output is as follows:'
  id: totrans-406
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果我们显示结果数据框的头部，输出如下所示：
- en: '![Figure 6.9: A screenshot showing the first five instances of the dataset
    after converting the categorical features into numerical ones'
  id: totrans-407
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图6.9：截图显示将分类特征转换为数值特征后数据集的前五个实例'
- en: '](img/B15781_06_09.jpg)'
  id: totrans-408
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B15781_06_09.jpg)'
- en: '[PRE98]'
  id: totrans-409
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE98]'
- en: 'If we print the resulting dictionary, we get the following output:'
  id: totrans-410
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果我们打印出结果字典，输出如下所示：
- en: '[PRE99]'
  id: totrans-411
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE99]'
- en: As we can see, the outliers do not account for more than 5% of the total values
    in each feature, which is why they can be left unhandled.
  id: totrans-412
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 正如我们所见，离群值在每个特征中的占比都不超过5%，因此可以不处理这些离群值。
- en: This can be verified by taking the feature with the most outliers (`pdays`)
    and dividing the number of outliers by the total number of instances (1,723 divided
    by 45,211). The result from that operation is 0.038, which is equivalent to 3.8%.
    This means that the feature only has 3.8% of the outlier values.
  id: totrans-413
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 通过取特征中最具离群值的特征（`pdays`），并将离群值的数量除以实例的总数（1,723除以45,211），可以验证这一点。这个操作的结果是0.038，相当于3.8%。这意味着该特征的离群值只占3.8%。
- en: Separate the features from the class label and split the dataset into three
    sets (training, validation, and testing).
  id: totrans-414
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将特征与类别标签分开，并将数据集分成三部分（训练集、验证集和测试集）。
- en: 'To separate the features from the target value, use the following code:'
  id: totrans-415
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要将特征与目标值分开，使用以下代码：
- en: '[PRE100]'
  id: totrans-416
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE100]'
- en: 'Next, to perform a 60/20/20 split, use the following code:'
  id: totrans-417
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 接下来，为了进行60/20/20的拆分，使用以下代码：
- en: '[PRE101]'
  id: totrans-418
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE101]'
- en: 'If we print the shape of all the subsets, the output is as follows:'
  id: totrans-419
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果我们打印出所有子集的形状，输出如下所示：
- en: '[PRE102]'
  id: totrans-420
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE102]'
- en: 'Use the decision tree algorithm on the dataset and train the model:'
  id: totrans-421
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对数据集使用决策树算法并训练模型：
- en: '[PRE103]'
  id: totrans-422
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE103]'
- en: Note
  id: totrans-423
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注释
- en: As a reminder, the output from calling the `fit` method consists of the model
    currently being trained with all the parameters that it takes in.
  id: totrans-424
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 提醒一下，调用`fit`方法时的输出是正在训练的模型及其所包含的所有参数。
- en: 'Use the multilayer perceptron algorithm on the dataset and train the model.
    To revisit this, go to *Chapter 5*, *Artificial Neural Networks: Predicting Annual
    Income*:'
  id: totrans-425
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对数据集使用多层感知器算法并训练模型。要回顾这一点，请参阅*第五章*，*人工神经网络：预测年收入*：
- en: '[PRE104]'
  id: totrans-426
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE104]'
- en: Evaluate both models by using the metric that was selected previously.
  id: totrans-427
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用之前选择的指标评估两个模型。
- en: 'Using the following code, it is possible to measure the precision score of
    the decision tree model:'
  id: totrans-428
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用以下代码，可以测量决策树模型的精度分数：
- en: '[PRE105]'
  id: totrans-429
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE105]'
- en: 'If we print the list containing the precision score for each of the sets for
    the decision tree model, the output is as follows:'
  id: totrans-430
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果我们打印包含决策树模型每个数据集精度分数的列表，输出如下：
- en: '[PRE106]'
  id: totrans-431
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE106]'
- en: 'The same code can be modified to calculate the score for the multilayer perceptron:'
  id: totrans-432
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 相同的代码可以修改，用于计算多层感知器的分数：
- en: '[PRE107]'
  id: totrans-433
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE107]'
- en: 'If we print the list containing the precision score for each of the sets for
    the multilayer perceptron model, the output is as follows:'
  id: totrans-434
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果我们打印包含多层感知器模型每个数据集精度分数的列表，输出如下：
- en: '[PRE108]'
  id: totrans-435
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE108]'
- en: 'The precision score for all subsets of data for both models is shown in the
    following table:'
  id: totrans-436
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 以下表格显示了两个模型在所有数据子集上的精度分数：
- en: '![Figure 6.10: Precision scores for both models'
  id: totrans-437
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 6.10: 两个模型的精度分数'
- en: '](img/B15781_06_10.jpg)'
  id: totrans-438
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/B15781_06_10.jpg)'
- en: 'Figure 6.10: Precision scores for both models'
  id: totrans-439
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '图 6.10: 两个模型的精度分数'
- en: Fine-tune some of the hyperparameters to fix the issues that were detected during
    the evaluation of the model by performing error analysis.
  id: totrans-440
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过执行错误分析，微调一些超参数，修正评估模型时检测到的问题。
- en: Although the precision of the decision tree on the training sets is perfect,
    on comparing it against the results of the other two sets, it is possible to conclude
    that the model suffers from high variance.
  id: totrans-441
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 尽管决策树在训练集上的精度完美，但与其他两个数据集的结果进行比较后，可以得出模型存在高方差的结论。
- en: On the other hand, the multilayer perceptron has a similar performance on all
    three sets, but the overall performance is low, which means that the model is
    more likely to be suffering from high bias.
  id: totrans-442
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 另一方面，多层感知器在所有三个数据集上的表现相似，但整体表现较低，这意味着该模型更可能存在高偏差。
- en: Considering this, for the decision tree model, both the minimum number of samples
    required to be at a leaf node and the maximum depth of the tree are changed in
    order to simplify the model. On the other hand, for the multilayer perceptron,
    the number of iterations, the number of hidden layers, the number of units in
    each layer, and the tolerance for optimization are changed.
  id: totrans-443
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 考虑到这一点，对于决策树模型，为了简化模型，修改了叶节点所需的最小样本数和树的最大深度。另一方面，对于多层感知器，修改了迭代次数、隐藏层数、每层的单元数以及优化的容忍度。
- en: 'The following code shows the final values that were used for the hyperparameters
    of the decision tree algorithm, considering that to arrive at them it is required
    to try different values:'
  id: totrans-444
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 以下代码显示了决策树算法超参数的最终值，考虑到为了得到这些值需要尝试不同的参数：
- en: '[PRE109]'
  id: totrans-445
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE109]'
- en: 'The following snippet displays the final values used for the hyperparameters
    of the multilayer perceptron algorithm:'
  id: totrans-446
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 以下代码片段显示了多层感知器算法的超参数最终值：
- en: '[PRE110]'
  id: totrans-447
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE110]'
- en: Note
  id: totrans-448
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: As a reminder, the output from calling the `fit` method consists of the model
    currently being trained with all the parameters that it takes in.
  id: totrans-449
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 提醒一下，调用`fit`方法的输出包括正在训练的模型，以及它所接受的所有参数。
- en: Compare the final versions of your models and select the one that you consider
    best fits the data.
  id: totrans-450
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 比较你模型的最终版本，并选择你认为最适合数据的那个。
- en: 'Using the same code as in previous steps, it is possible to calculate the precision
    of the decision tree model over the different sets of data:'
  id: totrans-451
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用与前几步相同的代码，可以计算决策树模型在不同数据集上的精度：
- en: '[PRE111]'
  id: totrans-452
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE111]'
- en: 'The output list should look as follows:'
  id: totrans-453
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出列表应如下所示：
- en: '[PRE112]'
  id: totrans-454
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE112]'
- en: 'To calculate the precision of the multilayer perceptron, the following code
    snippet can be used:'
  id: totrans-455
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要计算多层感知器的精度，可以使用以下代码片段：
- en: '[PRE113]'
  id: totrans-456
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE113]'
- en: 'The resulting list should look as follows:'
  id: totrans-457
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 结果列表应如下所示：
- en: '[PRE114]'
  id: totrans-458
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE114]'
- en: 'By calculating the precision score for all three sets for the newly trained
    models, we obtain the following values:'
  id: totrans-459
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 通过计算新训练模型在三个数据集上的精度分数，我们获得以下值：
- en: '![Figure 6.11: Precision scores for the newly trained models'
  id: totrans-460
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 6.11: 新训练模型的精度分数'
- en: '](img/B15781_06_11.jpg)'
  id: totrans-461
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15781_06_11.jpg)'
- en: 'Figure 6.11: Precision scores for the newly trained models'
  id: totrans-462
  prefs: []
  type: TYPE_NORMAL
  zh: '图 6.11: 新训练模型的精度分数'
- en: Note
  id: totrans-463
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: To access the source code for this specific section, please refer to [https://packt.live/2RpIhn9](https://packt.live/2RpIhn9).
  id: totrans-464
  prefs: []
  type: TYPE_NORMAL
  zh: 要访问此特定部分的源代码，请参考[https://packt.live/2RpIhn9](https://packt.live/2RpIhn9)。
- en: This section does not currently have an online interactive example, and will
    need to be run locally.
  id: totrans-465
  prefs: []
  type: TYPE_NORMAL
  zh: 本节当前没有在线交互示例，需要在本地运行。
- en: An improvement in performance for both models is achieved, and by comparing
    the values, it is possible to conclude that the multilayer perceptron outperforms
    the decision tree model. Based on this, the multilayer perceptron is selected
    as the better model for solving the data problem.
  id: totrans-466
  prefs: []
  type: TYPE_NORMAL
  zh: 对两个模型的性能进行了提升，并通过比较其值，可以得出结论：多层感知机优于决策树模型。基于此，多层感知机被选择为解决数据问题的更好模型。
- en: Note
  id: totrans-467
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: You are encouraged to continue to fine-tune the parameters to reach an even
    higher precision score.
  id: totrans-468
  prefs: []
  type: TYPE_NORMAL
  zh: 我们鼓励你继续微调参数，以达到更高的精度评分。
- en: 'Activity 6.02: Saving and Loading the Final Model for the Bank Marketing Dataset'
  id: totrans-469
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 活动 6.02：保存和加载银行营销数据集的最终模型
- en: 'Solution:'
  id: totrans-470
  prefs: []
  type: TYPE_NORMAL
  zh: 解决方案：
- en: Open the Jupyter Notebook from *Activity 6.01*, *Performing the Preparation
    and Creation Stages for the Bank Marketing Dataset*.
  id: totrans-471
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开*活动 6.01*中的 Jupyter Notebook，*执行银行营销数据集的准备和创建阶段*。
- en: For learning purposes, take the model that you selected as the best model, remove
    the `random_state` argument, and run it a couple of times.
  id: totrans-472
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了学习目的，使用你选择的最佳模型，去除`random_state`参数，并运行几次。
- en: Save the model that you choose as the best performing one into a file named
    `final_model.pkl`.
  id: totrans-473
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将你选择的最佳表现模型保存到一个名为`final_model.pkl`的文件中。
- en: '[PRE115]'
  id: totrans-474
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE115]'
- en: 'Open a new Jupyter Notebook and import the required modules and class:'
  id: totrans-475
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开一个新的 Jupyter Notebook，并导入所需的模块和类：
- en: '[PRE116]'
  id: totrans-476
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE116]'
- en: 'Load the saved model:'
  id: totrans-477
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 加载保存的模型：
- en: '[PRE117]'
  id: totrans-478
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE117]'
- en: 'Perform a prediction for an individual by using the following values: `42`,
    `2`, `0`, `0`, `1`, `2`, `1`, `0`, `5`, `8`, `380`, `1`, `-1`, `0`:'
  id: totrans-479
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下值为个体进行预测：`42`、`2`、`0`、`0`、`1`、`2`、`1`、`0`、`5`、`8`、`380`、`1`、`-1`、`0`：
- en: '[PRE118]'
  id: totrans-480
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE118]'
- en: Note
  id: totrans-481
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: To access the source code for this specific section, please refer to [https://packt.live/2UIWFss](https://packt.live/2UIWFss).
  id: totrans-482
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要访问此特定部分的源代码，请参考[https://packt.live/2UIWFss](https://packt.live/2UIWFss)。
- en: This section does not currently have an online interactive example, and will
    need to be run locally.
  id: totrans-483
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 本节当前没有在线交互示例，需要在本地运行。
- en: If we printing the `pred` variable, the output is `0`, which is the numeric
    form of `No`. This means that the individual is more likely to not subscribe to
    the new product.
  id: totrans-484
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们打印`pred`变量，输出为`0`，这是`No`的数值形式。这意味着该个体更有可能不会订阅新产品。
- en: 'Activity 6.03: Allowing Interaction with the Bank Marketing Dataset Model'
  id: totrans-485
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 活动 6.03：允许与银行营销数据集模型进行交互
- en: 'Solution:'
  id: totrans-486
  prefs: []
  type: TYPE_NORMAL
  zh: 解决方案：
- en: 'In a text editor, create a class object that contains two main functions. One
    should be an initializer that loads the saved model, while the other should be
    a `predict` method where the data is fed to the model to retrieve an output:'
  id: totrans-487
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在文本编辑器中，创建一个包含两个主要函数的类对象。一个应是加载保存模型的初始化器，另一个应是`predict`方法，用于将数据传递给模型以获取输出：
- en: '[PRE119]'
  id: totrans-488
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE119]'
- en: 'As per the preceding snippet, the first step is to import all the required
    elements to locate the saved model and deserialize it:'
  id: totrans-489
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 根据前面的代码片段，第一步是导入所有所需的元素以定位并反序列化保存的模型：
- en: '[PRE120]'
  id: totrans-490
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE120]'
- en: Next, as per the preceding code snippet, the class that will connect the saved
    model with the channel of interaction is programmed. It should have an initializer
    method to deserialize and load the saved model, and a `predict` method to feed
    the input data to the model to perform a prediction.
  id: totrans-491
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 接下来，根据前面的代码片段，编写将保存的模型与交互通道连接的类。该类应具有一个初始化方法，用于反序列化并加载保存的模型，以及一个`predict`方法，用于将输入数据传递给模型进行预测。
- en: 'In a Jupyter Notebook, import and initialize the class that you created in
    the previous step. Next, create the variables that will hold the values for the
    features of a new observation and use the following values: `42`, `2`, `0`, `0`,
    `1`, `2`, `1`, `0`, `5`, `8`, `380`, `1`, `-1`, `0`:'
  id: totrans-492
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Jupyter Notebook 中，导入并初始化在前一步创建的类。接下来，创建变量来存储新观测值的特征值，并使用以下值：`42`、`2`、`0`、`0`、`1`、`2`、`1`、`0`、`5`、`8`、`380`、`1`、`-1`、`0`：
- en: '[PRE121]'
  id: totrans-493
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE121]'
- en: 'Perform a prediction by applying the `predict` method:'
  id: totrans-494
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 通过应用`predict`方法进行预测：
- en: '[PRE122]'
  id: totrans-495
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE122]'
- en: 'By printing the variable, the prediction is equal to `0`; that is, the individual
    with the given features is not likely to subscribe to the product, as can be seen
    here:'
  id: totrans-496
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 通过打印变量，预测值为`0`；也就是说，具有给定特征的个体不太可能订阅该产品，正如这里所看到的：
- en: '[PRE123]'
  id: totrans-497
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE123]'
- en: Note
  id: totrans-498
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: To access the source code for this specific section, please refer to [https://packt.live/2Y2yBCJ](https://packt.live/2Y2yBCJ).
  id: totrans-499
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要访问此特定部分的源代码，请参考[https://packt.live/2Y2yBCJ](https://packt.live/2Y2yBCJ)。
- en: You can also run this example online at [https://packt.live/3d6ku3E](https://packt.live/3d6ku3E).
    You must execute the entire Notebook in order to get the desired result.
  id: totrans-500
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你也可以在[https://packt.live/3d6ku3E](https://packt.live/3d6ku3E)在线运行这个示例。你必须执行整个Notebook才能得到预期的结果。
- en: Throughout the activities in this chapter, you have successfully learned how
    to develop a complete machine learning solution, going from data pre-processing
    and training the model to selecting the best performing model using error analysis
    and saving the model to be able to make use of it effectively.
  id: totrans-501
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章的所有活动中，你已经成功地学会了如何开发一个完整的机器学习解决方案，从数据预处理和训练模型，到使用误差分析选择最佳性能的模型，并保存模型以便有效利用。
