- en: Deploying, Managing, and Monitoring Database Solutions containing R Code
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 部署、管理和监控包含 R 代码的数据库解决方案
- en: 'Operationalizing R code in a SQL Server database means that data scientists/database
    developers can also leverage productionizing data science solutions as part of
    **Database Lifecycle Management** (**DLM**). This includes the following:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在 SQL Server 数据库中运营 R 代码意味着数据科学家/数据库开发者也可以利用将数据科学解决方案作为数据库生命周期管理（**DLM**）的一部分进行生产化。这包括以下内容：
- en: Checking in R code as part of a SQL Server database project into a version control
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将 R 代码作为 SQL Server 数据库项目的一部分提交到版本控制
- en: Adding the stored procedures for the data science solution as part of SQL Server
    unit tests
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将数据科学解决方案的存储过程作为 SQL Server 单元测试的一部分添加
- en: Integrating the data science solution into the **Continuous Integration/Continuous
    Delivery** (**CI/CD**) process
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将数据科学解决方案集成到 **持续集成/持续交付**（**CI/CD**）流程中
- en: Monitoring performance of the data science solution in the production on a regular
    basis
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定期监控生产中数据科学解决方案的性能
- en: In this chapter, we will be using **SQL Server Data Tools** (**SSDT**) in Visual
    Studio 2017 and Visual Studio Team Services to perform this DLM workflow. However,
    the underlying concept can be applied to any other CI/CD platform that you or
    your team might already be using.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将使用 Visual Studio 2017 和 Visual Studio Team Services 中的 **SQL Server
    数据工具**（**SSDT**）来执行此 DLM 工作流程。然而，这个基本概念可以应用于您或您的团队可能已经使用的任何其他 CI/CD 平台。
- en: Integrating R into the SQL Server Database lifecycle workflow
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将 R 集成到 SQL Server 数据库生命周期工作流程中
- en: Earlier in [Chapter 7](part0102.html#318PC0-e3f81285367248f4bbc6431bcd4f926d),
    *Operationalizing R Prediction Models*, we discussed how to create an R project
    in Visual Studio 2017\. We also talked about integrating R code as part of `sp_execute_external_script`
    in SQL Server. Here, we will revisit Visual Studio 2017, specifically in the context
    of integrating R code in `sp_execute_external_script` as part of a SQL Server
    Database Project, and holistically as part of the database lifecycle workflow.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第 7 章](part0102.html#318PC0-e3f81285367248f4bbc6431bcd4f926d)“将 R 预测模型投入运营”中，我们讨论了如何在
    Visual Studio 2017 中创建 R 项目。我们还讨论了将 R 代码集成到 SQL Server 中的 `sp_execute_external_script`
    作为一部分。在这里，我们将重新审视 Visual Studio 2017，特别是在将 R 代码集成到 `sp_execute_external_script`
    作为 SQL Server 数据库项目的一部分，以及作为数据库生命周期工作流程的一部分。
- en: Preparing your environment for the database lifecycle workflow
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为数据库生命周期工作流程准备您的环境
- en: In this section, we will discuss the stages of the database lifecycle workflow
    and the tools that we will be using. For each of the stages in the workflow, there
    will also be some suggested alternatives for you to explore.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将讨论数据库生命周期工作流程的阶段以及我们将使用的工具。对于工作流程中的每个阶段，还将有一些建议供您探索。
- en: '**Coding and managing SQL Server database projects/solutions**: There are a
    few different ways to manage your SQL Server DML/DDL scripts that form a SQL Server
    database project. SQL SSDT in Visual Studio 2017 (VS2017) is a mature product
    that formalizes the creation and modification of Database Schema and Objects.
    In this section, we will use SSDT in VS2017.'
  id: totrans-11
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**编码和管理 SQL Server 数据库项目/解决方案**：管理构成 SQL Server 数据库项目的 SQL Server DML/DDL 脚本有几种不同的方法。Visual
    Studio 2017 (VS2017) 中的 SQL SSDT 是一个成熟的产品，它正式化了数据库模式和对象的创建和修改。在本节中，我们将使用 VS2017
    中的 SSDT。'
- en: 'You can use VS2017 Community, Professional, or Enterprise editions. Please
    check [https://www.visualstudio.com/vs/compare/](https://www.visualstudio.com/vs/compare/)
    for more up-to-date information on how these editions compare. In the walkthroughs
    and examples in this section, we will be using Visual Studio Enterprise Edition,
    but you can use any of the editions. You can download these from: [https://www.visualstudio.com/vs/](https://www.visualstudio.com/vs/).'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用 VS2017 Community、Professional 或 Enterprise 版本。请访问 [https://www.visualstudio.com/vs/compare/](https://www.visualstudio.com/vs/compare/)
    获取这些版本如何比较的最新信息。在本节的演练和示例中，我们将使用 Visual Studio Enterprise Edition，但您可以使用任何版本。您可以从
    [https://www.visualstudio.com/vs/](https://www.visualstudio.com/vs/) 下载这些版本。
- en: 'Other following alternatives worth trying are:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 值得尝试的其他替代方案包括：
- en: '**SQL Server Management Studio**: There are a few plugins developed by RedGate
    that can enrich DevOps/Database Lifecycle Management'
  id: totrans-14
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**SQL Server Management Studio**：RedGate 开发了一些插件，可以丰富 DevOps/数据库生命周期管理'
- en: '**SQL Operations Studio** (in Preview): This tool is built based on VS Code,
    which means that it has high potential of meeting DevOps workflows too, including
    source control'
  id: totrans-15
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**SQL Operations Studio**（预览版）：这个工具是基于 VS Code 构建的，这意味着它也有很高的潜力满足 DevOps 工作流程，包括源代码控制'
- en: '**Unit testing**: Just like application development, database development would
    benefit from a unit testing framework, especially if it can be automated. There
    are two well-known unit testing frameworks that are available for SQL Server databases,
    tSQLt, and SQL Server Unit Test integrated in Visual Studio. Here are the links:'
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**单元测试**：就像应用程序开发一样，数据库开发将从单元测试框架中受益，特别是如果它可以自动化的话。有两个广为人知的单元测试框架适用于 SQL Server
    数据库，即 tSQLt 和集成在 Visual Studio 中的 SQL Server 单元测试。以下是链接：'
- en: '**tSQLt**: [http://tsqlt.org/](http://tsqlt.org/)'
  id: totrans-17
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**tSQLt**：[http://tsqlt.org/](http://tsqlt.org/)'
- en: '**SQL Server Unit Test in Visual Studio**: [https://msdn.microsoft.com/en-us/library/jj851200(v=vs.103).aspx](https://msdn.microsoft.com/en-us/library/jj851200(v=vs.103).aspx)'
  id: totrans-18
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Visual Studio 中的 SQL Server 单元测试**：[https://msdn.microsoft.com/en-us/library/jj851200(v=vs.103).aspx](https://msdn.microsoft.com/en-us/library/jj851200(v=vs.103).aspx)'
- en: In this section, we will use SQL Server Unit Test in VS2017.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将使用 VS2017 中的 SQL Server 单元测试。
- en: 'Another tool worth trying is:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个值得尝试的工具是：
- en: RedGate SQL Test that is based on the tSQLt framework, an extension of SSMS
  id: totrans-21
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基于 tSQLt 框架的 RedGate SQL Test，它是 SSMS 的一个扩展
- en: '**Version Control**: There are a number of popular choices for Version Control
    systems out there, for example, Git and **Team Foundation Version Control** (**TFVC**).
    In this section, we will use TFVC hosted in **Visual Studio Team Services** (**VSTS**).
    VS2017 can connect to a VSTS repository. You can sign up for a VSTS account online
    at: [https://www.visualstudio.com/team-services/](https://www.visualstudio.com/team-services/).'
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**版本控制**：目前有许多流行的版本控制系统可供选择，例如 Git 和 **团队基础版本控制**（**TFVC**）。在本节中，我们将使用托管在 **Visual
    Studio Team Services**（**VSTS**）中的 TFVC。VS2017 可以连接到 VSTS 仓库。您可以在网上注册 VSTS 账户：[https://www.visualstudio.com/team-services/](https://www.visualstudio.com/team-services/)'
- en: 'Other alternatives worth trying are:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 值得尝试的其他替代方案包括：
- en: 'Using Visual Studio, you can connect to online version control hosts, such
    as GitHub and VSTS, as well as a private on-premises version control servers,
    such as **Team Foundation Server** (**TFS**):'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Visual Studio，您可以连接到在线版本控制主机，如 GitHub 和 VSTS，以及私有的本地版本控制服务器，如 **团队基础服务器**（**TFS**）：
- en: '**GitHub Extension for Visual Studio**: [https://visualstudio.github.com/](https://visualstudio.github.com/)'
  id: totrans-25
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Visual Studio 的 GitHub 扩展**：[https://visualstudio.github.com/](https://visualstudio.github.com/)'
- en: '**Team Foundation Server**: [https://www.visualstudio.com/tfs/](https://www.visualstudio.com/tfs/)'
  id: totrans-26
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**团队基础服务器**：[https://www.visualstudio.com/tfs/](https://www.visualstudio.com/tfs/)'
- en: '**CI/CD**: VSTS supports both hosted agent and private agent. Hosted agent
    is a cloud-based agent that performs continuous integration and continuous delivery.
    Private agent is an on-premises-based agent version, available in Visual Studio
    2017\. Having CI in place means that as the script is checked in, the agent will
    automatically build and optionally perform a number of tests. Having CD in place
    allows us to test the code release and/or the schema changes only against the
    baseline. In this chapter, we will use VSTS with a private agent to deploy against
    an on-premises SQL Server database.'
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**CI/CD**：VSTS 支持托管代理和私有代理。托管代理是一个基于云的代理，执行持续集成和持续交付。私有代理是一个基于本地的代理版本，可在 Visual
    Studio 2017 中使用。设置 CI 意味着当脚本被检查入时，代理将自动构建并可选择执行一系列测试。设置 CD 允许我们仅针对基线测试代码发布和/或模式更改。在本章中，我们将使用带有私有代理的
    VSTS 来部署到本地 SQL Server 数据库。'
- en: 'Other alternatives worth trying are:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 值得尝试的其他替代方案包括：
- en: VSTS supports the hosted agent, which allows you to deploy automatically to
    Azure VM
  id: totrans-29
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
  zh: VSTS 支持托管代理，允许您自动部署到 Azure VM
- en: VSTS supports the hosted agent, which allows you to deploy to the Azure SQL
    Database, which since October 2017, also supports R
  id: totrans-30
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: VSTS 支持托管代理，允许您将部署到 Azure SQL 数据库，自 2017 年 10 月起，它也支持 R
- en: '*Figure 8.1* shows a CI/CD workflow using VSTS, which we will use in this chapter
    for our sample SQL Server R Services solution:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 8.1* 展示了使用 VSTS 的 CI/CD 工作流程，我们将在此章中使用它来构建我们的示例 SQL Server R 服务解决方案：'
- en: '![](img/00124.jpeg)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00124.jpeg)'
- en: Figure 8.1 CI/CD process using VSTS
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.1 使用 VSTS 的 CI/CD 流程
- en: 'Source: [https://docs.microsoft.com/en-us/vsts/build-release/actions/ci-cd-part-1](https://docs.microsoft.com/en-us/vsts/build-release/actions/ci-cd-part-1)'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 来源：[https://docs.microsoft.com/en-us/vsts/build-release/actions/ci-cd-part-1](https://docs.microsoft.com/en-us/vsts/build-release/actions/ci-cd-part-1)
- en: Prerequisites for this chapter
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本章的先决条件
- en: '| **Tools** | **URL** | **Notes** |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '| **工具** | **URL** | **备注** |'
- en: '| **Visual Studio 2017** | To download: [https://www.visualstudio.com/downloads/](https://www.visualstudio.com/downloads/)
    | The Community Edition is free. |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '| **Visual Studio 2017** | 下载：[https://www.visualstudio.com/downloads/](https://www.visualstudio.com/downloads/)
    | 社区版是免费的。 |'
- en: '| **VSTS** | Sign up/sign in: [https://www.visualstudio.com/team-services/](https://www.visualstudio.com/team-services/)
    | Sign up for the personal account for free. |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '| **VSTS** | 注册/登录：[https://www.visualstudio.com/team-services/](https://www.visualstudio.com/team-services/)
    | 免费注册个人账户。 |'
- en: '| **Power Shell v2.0 or above** | Download PowerShell: [https://www.microsoft.com/en-us/download/details.aspx?id=42554](https://www.microsoft.com/en-us/download/details.aspx?id=42554)
    | You will need this for setting up the Private Agent locally. |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '| **PowerShell v2.0或更高版本** | 下载PowerShell：[https://www.microsoft.com/en-us/download/details.aspx?id=42554](https://www.microsoft.com/en-us/download/details.aspx?id=42554)
    | 您需要此软件来本地设置私有代理。 |'
- en: Creating the SQL Server database project
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建SQL Server数据库项目
- en: In this section, we will walk you through how to create a database project in
    VS2017.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将向您介绍如何在VS2017中创建数据库项目。
- en: In VS2017, click on File | New Project.
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在VS2017中，单击文件 | 新建项目。
- en: Choose SQL Server from Installed on the left pane and click on the SQL Server
    Database Project template.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在左侧面板中选择已安装的SQL Server，然后单击SQL Server数据库项目模板。
- en: 'Type `Ch08` in the Name: field and `SQL Server R Services Book` in the Solution
    name: file, as shown in the following screenshot:'
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在“名称”字段中输入`Ch08`，在“解决方案名称”字段中输入`SQL Server R Services Book`，如图所示：
- en: '![](img/00125.jpeg)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00125.jpeg)'
- en: Figure 8.2 New Project in Visual Studio
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.2 Visual Studio中的新项目
- en: Choose the Location to save the solution.
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择保存解决方案的位置。
- en: If you already have a local folder for your version control, you can specify
    the path here.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您已经有了用于版本控制的本地文件夹，您可以在此指定路径。
- en: In this example, my VSTS project is named SQL Server R Services Book, which
    is associated to my local folder named `C:\VSTS\SQL Server R Services Book`.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我的VSTS项目名为SQL Server R Services Book，它与我的本地文件夹`C:\VSTS\SQL Server R Services
    Book`相关联。
- en: Ensure that both Create directory for solution and Add to Source Control are
    checked.
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保已选中“为解决方案创建目录”和“添加到源代码控制”。
- en: 'Click on OK in the New Project dialog box. The Solution Explorer window should
    show something similar to the following screenshot:'
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在新建项目对话框中单击“确定”。解决方案资源管理器窗口应显示类似于以下截图的内容：
- en: '![](img/00126.jpeg)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00126.jpeg)'
- en: Figure 8.3 Database Project in Solution Explorer
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.3 解决方案资源管理器中的数据库项目
- en: From here, you can add new objects such as a table, a stored procedure, and
    many other objects.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 从这里，您可以添加新的对象，例如表、存储过程以及许多其他对象。
- en: Importing an existing database into the project
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将现有数据库导入到项目中
- en: 'Now that we have a blank database, we can import an existing database that
    you have created from Chapter 7, *Operationalizing R Prediction Models*:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有一个空白的数据库，我们可以导入从第7章“实现R预测模型”中创建的现有数据库：
- en: 'On Ch08, right-click and choose Import | Database:'
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Ch08上右键单击，选择导入 | 数据库：
- en: '![](img/00127.jpeg)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00127.jpeg)'
- en: Figure 8.4 Import database into a database project
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.4 将数据库导入到数据库项目中
- en: In the Import Database dialog box, click on Select Connection. Then, specify
    the database connection to the database that you previously created in [Chapter
    7](part0102.html#318PC0-e3f81285367248f4bbc6431bcd4f926d), *Operationalizing R
    Prediction Models*.
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在导入数据库对话框中，单击“选择连接”。然后，指定到您之前在[第7章](part0102.html#318PC0-e3f81285367248f4bbc6431bcd4f926d)，“实现R预测模型”中创建的数据库的连接。
- en: 'The Import Database dialog box should look like the following. Click on Start:'
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入数据库对话框应看起来如下。单击“开始”：
- en: '![](img/00128.jpeg)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00128.jpeg)'
- en: Figure 8.5 Import Database dialog box
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.5 导入数据库对话框
- en: 'The Import Database dialog box then shows Summary of the import progress:'
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后导入数据库对话框显示导入进度的摘要：
- en: '![](img/00129.jpeg)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00129.jpeg)'
- en: Figure 8.6 Summary of database project import
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.6 数据库项目导入摘要
- en: 'The solution should look something as follows:'
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 解决方案应看起来如下：
- en: '![](img/00130.jpeg)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00130.jpeg)'
- en: Figure 8.7 Solution Explorer displaying a database project after the database
    is imported
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.7 导入数据库后解决方案资源管理器显示的数据库项目
- en: Before we make any more changes, let's build the solution by right-clicking
    on the root Solution node and choose Build Solution, or you can also click on
    *Ctrl* + *Shift* + *B*.
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在我们进行任何更多更改之前，让我们通过在根解决方案节点上右键单击并选择“生成解决方案”，或者您也可以单击 *Ctrl* + *Shift* + *B*
    来生成解决方案。
- en: 'Note that the output should contain a number of warnings for each stored procedure
    referring to the `sp_execute_external` script similar to the following:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，输出应包含针对每个存储过程引用`sp_execute_external`脚本的多个警告，如下所示：
- en: '[PRE0]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Adding a new stored procedure object
  id: totrans-73
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 向存储过程添加新的存储过程对象
- en: 'Here''s an example of how to add a new object to an existing database project:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是向现有数据库项目添加新对象的一个示例：
- en: To create a new procedure, you can right-click on the `Stored Procedures` folder,
    then click on Add | Stored Procedure...
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要创建新过程，您可以右键单击“存储过程”文件夹，然后点击“添加”|“存储过程...”：
- en: 'Type `uspTrainTipPredictionModelWithRealTimeScoringDTree` in the Name  field
    as the new stored procedure:'
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在名称字段中输入`uspTrainTipPredictionModelWithRealTimeScoringDTree`作为新的存储过程：
- en: '![](img/00131.jpeg)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00131.jpeg)'
- en: Figure 8.8 Adding a new item to a Database Project
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.8 向数据库项目添加新项
- en: 'Add the following script to the stored procedure:'
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下脚本添加到存储过程中：
- en: '[PRE1]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Press *Ctrl* + *S* to save the file.
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按*Ctrl* + *S*保存文件。
- en: You can now rebuild the solution using *Ctrl* + *Shift* + *B*.
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您现在可以使用*Ctrl* + *Shift* + *B*重新构建解决方案。
- en: Publishing schema changes
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 发布模式更改
- en: 'There are two options of publishing changes to an environment:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 有两种将更改发布到环境的方法：
- en: Existing database
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 现有数据库
- en: New database
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 新数据库
- en: 'In this example, NYCTaxi already exists in the database. You can identify the
    schema changes and create an update script:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 在此示例中，NYCTaxi已经在数据库中存在。您可以识别模式更改并创建更新脚本：
- en: Right-click on Ch08 and choose Schema Compare.
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键单击“Ch08”并选择“模式比较”。
- en: Ensure that the source on the left is pointing to the database project path.
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保左侧的源指向数据库项目路径。
- en: On the Select Target drop-down list, click on it to set the target database.
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在“选择目标”下拉列表中，点击它以设置目标数据库。
- en: Choose Database and click on Select Connection. Here, you can provide connection
    to the existing `NYCTaxi` database.
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择“数据库”并点击“选择连接”。在这里，您可以提供对现有`NYCTaxi`数据库的连接。
- en: 'Click on Compare, which should only show one file:'
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“比较”，应该只显示一个文件：
- en: '![](img/00132.jpeg)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00132.jpeg)'
- en: Figure 8.9 Schema Compare in Visual Studio
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.9 Visual Studio中的模式比较
- en: Here, you can click on Update to make the changes directly to the database or
    click on the Generate Script icon to generate the script for the changes.
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在这里，您可以点击“更新”直接将更改应用到数据库中，或者点击“生成脚本”图标来生成更改的脚本。
- en: As a best practice, especially if you have a formal production change management
    process, you would choose generate script and include it in the change management
    request.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 作为最佳实践，尤其是如果您有一个正式的生产变更管理流程，您会选择生成脚本并将其包含在变更管理请求中。
- en: Adding a unit test against a stored procedure
  id: totrans-97
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 向存储过程添加单元测试
- en: 'Adding a unit test against programmability objects, such as stored procedures
    or functions, is part of good practice of programming:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 向存储过程或函数等可编程对象添加单元测试是编程的良好实践的一部分：
- en: 'Create a unit test suite by right-clicking on one of the stored procedures
    or functions, such as `Ch08 `| `dbo` | `Stored Procedures` | `uspTrainTipPredictionModel`.
    Then, choose Create Unit Tests...:'
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过右键单击存储过程或函数之一（如`Ch08`|`dbo`|`存储过程`|`uspTrainTipPredictionModel`）来创建单元测试套件。然后，选择“创建单元测试...”：
- en: '![](img/00133.jpeg)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00133.jpeg)'
- en: Figure 8.10 Creating unit test in Visual Studio
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.10 在Visual Studio中创建单元测试
- en: 'Choose the connection:'
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择连接：
- en: '![](img/00134.gif)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00134.gif)'
- en: Figure 8.11 SQL Server test configuration
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.11 SQL Server测试配置
- en: 'Once you click on OK, you will see a new unit test project created and an example
    of a unit test template created:'
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“确定”后，您将看到一个新创建的单元测试项目和创建的单元测试模板示例：
- en: '![](img/00135.jpeg)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00135.jpeg)'
- en: Figure 8.12 SQL Server unit test template
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.12 SQL Server单元测试模板
- en: 'On the top-right pane, you can curate your unit test cases. As  `dbo.uspTrianTipPredictionModel`
    trains sample data and stores the model as well as the AUC into `dbo.NYCTaxiModel`,
    we are going to create a unit test to ensure that:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 在右上角面板中，您可以管理您的单元测试用例。由于`dbo.uspTrianTipPredictionModel`训练样本数据并将模型以及AUC存储到`dbo.NYCTaxiModel`中，我们将创建一个单元测试来确保：
- en: The new record is inserted, and
  id: totrans-109
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
  zh: 新记录已插入，
- en: The AUC created meets a certain threshold
  id: totrans-110
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建的AUC达到一定的阈值
- en: 'Copy the following code:'
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 复制以下代码：
- en: '[PRE2]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[PRE3]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: In the Test Conditions pane, click on inconclusiveCondition1 and click on the
    red cross to delete it.
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在测试条件面板中，点击`inconclusiveCondition1`并点击红色十字删除它。
- en: Now, choose Scalar Value from Test Conditions and click on the plus button.
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，从测试条件中选择“标量值”并点击加号按钮。
- en: Then, right-click on the scalarValueCondition1 and click on Properties.
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，右键单击 scalarValueCondition1 并点击属性。
- en: 'Update the following values in the Properties window:'
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在属性窗口中更新以下值：
- en: '**Name**: `TestNYCTaxiModelAdded`'
  id: totrans-118
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**名称**：`TestNYCTaxiModelAdded`'
- en: '**Expected value**: `1`'
  id: totrans-119
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**预期值**：`1`'
- en: '**Null Expected**: `False`'
  id: totrans-120
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**预期为空**：`False`'
- en: 'Repeat steps 6 to 8 and change the following values in the Properties window:'
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重复步骤 6 到 8，并在属性窗口中更改以下值：
- en: '**Name**: `TestNYCTaxiModelAdded`'
  id: totrans-122
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**名称**：`TestNYCTaxiModelAdded`'
- en: '**Expected value**: `1`'
  id: totrans-123
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**预期值**：`1`'
- en: '**Null Expected**: `False`'
  id: totrans-124
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**预期为空**：`False`'
- en: 'Once you have set things up, your Visual Studio should look something like
    this now:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦设置完毕，你的 Visual Studio 应该看起来像这样：
- en: '![](img/00136.jpeg)'
  id: totrans-126
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00136.jpeg)'
- en: Figure 8.13 SQL Server unit test for dbo.uspTrainTipPredictionModel
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.13 dbo.uspTrainTipPredictionModel 的 SQL Server 单元测试
- en: Remove `UnitTest.cs`.
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 删除 `UnitTest.cs`。
- en: Then, right-click on the Ch08_Test project and click on Build.
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，右键单击 Ch08_Test 项目并点击构建。
- en: Navigate to Test Explorer and click on Run All.
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到测试资源管理器并点击运行所有。
- en: In a few seconds, `dbo_uspTrainTipPredictionModelTest` appears under Passed
    Test. Click on it to see a summary of the execution.
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 几秒钟后，`dbo_uspTrainTipPredictionModelTest` 出现在已通过测试下。点击它以查看执行摘要。
- en: 'Click on Output to see more details, for example:'
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击输出以查看更多详细信息，例如：
- en: '![](img/00137.jpeg)'
  id: totrans-133
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00137.jpeg)'
- en: Figure 8.14 Test execution results
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.14 测试执行结果
- en: You have now learned how to create a unit test against a stored procedure, executed
    against an existing stored procedure on an existing NYC Taxi Model. Ideally, the
    unit test is run against a recently published SQL Server.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你已经学会了如何创建针对存储过程的单元测试，该测试针对现有的 NYC Taxi Model 上的现有存储过程执行。理想情况下，单元测试是在最近发布的
    SQL Server 上运行的。
- en: Using version control
  id: totrans-136
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用版本控制
- en: From Visual Studio, we can check in the solution and manage changes in version
    control. In this specific instance, we are using VSTS to check in. It is assumed
    that you have created a project in VSTS.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 从 Visual Studio，我们可以提交解决方案并管理版本控制中的更改。在这个特定实例中，我们正在使用 VSTS 进行提交。假设你已经在一个 VSTS
    中创建了一个项目。
- en: 'Here are the prerequisites for the rest of this section:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是本节其余部分的要求：
- en: '**A VSTS project**: To set up a new VSTS project, simply go to: [https://www.visualstudio.com/team-services/](https://www.visualstudio.com/team-services/).'
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**VSTS 项目**：要设置新的 VSTS 项目，只需访问：[https://www.visualstudio.com/team-services/](https://www.visualstudio.com/team-services/)'
- en: 'The URL for a VSTS project should follow this format:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: VSTS 项目的 URL 应遵循以下格式：
- en: '`https://<your account>.visualstudio.com/<VSTS Project>`'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: '`https://<你的账户>.visualstudio.com/<VSTS 项目>`'
- en: The VSTS project referred to in this chapter is named `SQL Server R Services
    Book`. So, the URL in my case is    `https://mssqlgirl.visualstudio.com/SQL%20Server%20R%20Services%20Book`
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中提到的 VSTS 项目命名为 `SQL Server R Services Book`。因此，我的 URL 是 `https://mssqlgirl.visualstudio.com/SQL%20Server%20R%20Services%20Book`
- en: The VSTS project is mapped to a local folder.
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: VSTS 项目映射到本地文件夹。
- en: The local folder here mapped to the project is `C:\VSTS\SQL Server R Services
    Book`. Earlier in this chapter, we created the SQL Server database solution in
    this path.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 这里映射到项目的本地文件夹是 `C:\VSTS\SQL Server R Services Book`。在本章的早期部分，我们在该路径创建了 SQL Server
    数据库解决方案。
- en: 'Follow these steps to check in your solution from Visual Studio:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤从 Visual Studio 提交你的解决方案：
- en: On the Solution root node, right-click and choose Check In.
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在解决方案根节点上，右键单击并选择提交。
- en: In the Team Explorer window, under the Pending Changes, type `Initial check-in` in
    the Comment text box.
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在团队资源管理器窗口中，在挂起的更改下，在注释文本框中输入 `Initial check-in`。
- en: 'Review Related Work Items, Included Changes, and Excluded Changes before you
    click on Check In:'
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在点击提交之前，请先审查相关的工作项、包含的更改和排除的更改：
- en: '![](img/00138.jpeg)'
  id: totrans-149
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00138.jpeg)'
- en: Figure 8.15 Checking in Pending Changes
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.15 检查挂起的更改
- en: On the Check-in Confirmation dialog box, click on Yes.
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在提交确认对话框中，点击是。
- en: 'Once all the files are checked in successfully, you can also view them on the
    VSTS site. As an example:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦所有文件都成功提交，你还可以在 VSTS 网站上查看它们。例如：
- en: '`https://mssqlgirl.visualstudio.com/SQL%20Server%20R%20Services%20Book/_versionControl`'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: '`https://mssqlgirl.visualstudio.com/SQL%20Server%20R%20Services%20Book/_versionControl`'
- en: Setting up continuous integration
  id: totrans-154
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置持续集成
- en: The main idea of **continuous integration** (**CI**) is to perform builds that
    are automated based on one or more triggers. One of the triggers to perform a
    build is a check-in event. Another one could be a scheduled build. Choosing which
    trigger is appropriate depends on various factors, such as the complexity of the
    project and the culture of the team. In this section, because the project is small,
    we are going to automate the build triggered by check-ins. We will also add tests
    as part of the build.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: '**持续集成**（**CI**）的主要思想是基于一个或多个触发器执行自动化的构建。执行构建的一个触发器是检查事件。另一个可能是计划构建。选择哪个触发器合适取决于各种因素，例如项目的复杂性和团队的文化。在本节中，因为项目较小，我们将自动化由检查触发的构建。我们还将测试作为构建的一部分添加。'
- en: VSTS is a good platform to automate builds, deployments for testing, and monitoring.
    In this section, we will configure a build definition and schedule a continuous
    integration in VSTS.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: VSTS是一个自动化构建、测试部署和监控的好平台。在本节中，我们将配置构建定义并在VSTS中安排持续集成。
- en: Ensure that the Visual Studio solution, including the SQL Server database project
    and the SQL Server Unit Test project, are built successfully.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 确保Visual Studio解决方案，包括SQL Server数据库项目和SQL Server单元测试项目，构建成功。
- en: '*Figure 8.16* shows the SQL Server R Services Book team in VSTS online. In
    these next few sections, we will be using VSTS on your browser to configure CI:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: '*图8.16*显示了VSTS在线上的SQL Server R Services Book团队。在接下来的几个部分中，我们将使用浏览器上的VSTS来配置CI：'
- en: '![](img/00139.jpeg)'
  id: totrans-159
  prefs: []
  type: TYPE_IMG
  zh: '![图片1](img/00139.jpeg)'
- en: Figure 8.16 Checking in Pending Changes
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.16 检查挂起的更改
- en: 'Here is a prerequisite for the rest of this section:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 本节其余部分的一个先决条件是：
- en: To be able to deploy a SQL Server database project to an on-premises SQL Server
    instance, you will need to create a private agent hosted locally that is registered
    with VSTS. This is only available in Visual Studio 2017\. To set this up, follow
    the documentation at: [https://docs.microsoft.com/en-us/vsts/build-release/actions/agents/v2-windows](https://docs.microsoft.com/en-us/vsts/build-release/actions/agents/v2-windows).
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要将SQL Server数据库项目部署到本地SQL Server实例，您需要创建一个由VSTS注册的本地托管的私有代理。这仅在Visual Studio
    2017中可用。要设置此环境，请按照以下文档操作：[https://docs.microsoft.com/en-us/vsts/build-release/actions/agents/v2-windows](https://docs.microsoft.com/en-us/vsts/build-release/actions/agents/v2-windows)。
- en: Creating a build definition in VSTS
  id: totrans-163
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在VSTS中创建构建定义
- en: 'Follow these steps to create a build definition in VSTS:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤在VSTS中创建构建定义：
- en: On the VSTS project site, click on Build and Release from the top menu, then
    choose Builds. Choose New Definition.
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在VSTS项目网站上，点击顶部菜单中的构建和发布，然后选择构建。选择新定义。
- en: Start with Empty Process.
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从空流程开始。
- en: 'Under Tasks, go to Process and choose the private agent from the Agent queue
    drop-down list. In the mssqlgirl account, the private agent is named Default:'
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在任务下，转到流程并从代理队列下拉列表中选择私有代理。在mssqlgirl账户中，私有代理命名为Default：
- en: '![](img/00140.jpeg)'
  id: totrans-168
  prefs: []
  type: TYPE_IMG
  zh: '![图片2](img/00140.jpeg)'
- en: Figure 8.17 Selecting Private Agent (Default) for the tasks in the build
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.17 选择构建任务中的私有代理（默认）
- en: Review the selections in Get sources.
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 审查获取源中的选择。
- en: The local path under `$(build.sourcesdirectory)` is referring to the private
    agent's workspace to do builds and perform additional tasks.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 在`$(build.sourcesdirectory)`下的本地路径是指私有代理的工作空间，用于执行构建和执行其他任务。
- en: Click on Phase 1 and replace the Display name value with Build Phase.
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击第一阶段，并将显示名称值替换为构建阶段。
- en: On the top menu, choose Save from the Save &amp; Queue drop-down list.
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在顶部菜单中，从保存和排队下拉列表中选择保存。
- en: Review Save build definition and place a comment.
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 审查保存构建定义并添加注释。
- en: Add a task to Build Phase by clicking on the plus sign.
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过点击加号在构建阶段添加一个任务。
- en: In Add tasks, search for MS Build, then click on Add.
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在添加任务中，搜索MS Build，然后点击添加。
- en: Change Project to `$/SQL Server R Services Book/SQL Server R Services Book/SQL
    Server R Services Book.sln`.
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将项目更改为`$/SQL Server R Services Book/SQL Server R Services Book/SQL Server R
    Services Book.sln`。
- en: The default value is `**/*.sln`, which refers to all solution files in the VSTS
    project.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 默认值是`**/*.sln`，它指的是VSTS项目中的所有解决方案文件。
- en: On Build Phase, add another task, named Publish Build Artifacts. This allows
    us to get the files that can be important later, such as the DACPAC file.
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在构建阶段，添加另一个任务，命名为发布构建工件。这允许我们获取以后可能很重要的文件，例如DACPAC文件。
- en: 'On the Publish Build Artifacts task, specify the following details:'
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在发布构建工件任务中，指定以下详细信息：
- en: Path to publish: `$(Build.Repository.LocalPath)\SQL Server R Services Book\Ch08\bin\Debug`
  id: totrans-181
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 发布路径：`$(Build.Repository.LocalPath)\SQL Server R Services Book\Ch08\bin\Debug`
- en: 'Artifact name: `DACPAC`'
  id: totrans-182
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 工件名称：`DACPAC`
- en: 'Artifact publish location: `Visual Studio Team Services/TFS`'
  id: totrans-183
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 工件发布位置：`Visual Studio Team Services/TFS`
- en: In this step, we are only publishing the DACPAC file. Publishing this specific
    file in the Visual Studio Team Services area allows us to later refer to this
    DACPAC in the Release process (a Continuous Delivery step).
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 在此步骤中，我们只发布 DACPAC 文件。在 Visual Studio Team Services 区域发布此特定文件允许我们在发布过程中（一个持续交付步骤）稍后引用此
    DACPAC。
- en: Click on Save &amp; Queue to test the build definition.
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击保存并排队以测试构建定义。
- en: Review the options in queue build for SQL Server R Services Book-CI and click
    on Queue.
  id: totrans-186
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查看队列构建中 SQL Server R 服务 Book-CI 的选项，然后点击队列。
- en: 'The page will then show that a build is being queued, similar to the following:'
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 页面将显示正在排队构建，类似于以下内容：
- en: '![](img/00141.jpeg)'
  id: totrans-188
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00141.jpeg)'
- en: Figure 8.18 Adding publish artifact task
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.18 添加发布工件任务
- en: 'If the build is successful, you will see something similar to the following.
    Now would be a good time to get familiar with the Summary page of the build and
    the artifacts page:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 如果构建成功，您将看到类似以下内容。现在将是熟悉构建摘要页面和工件页面的好时机：
- en: '![](img/00142.jpeg)'
  id: totrans-191
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00142.jpeg)'
- en: Figure 8.19 Viewing build results
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.19 查看构建结果
- en: 'When you navigate to the Artifacts tab, you should be able to see the `DACPAC`
    folder. By clicking on Explore, you can see the files inside the solution including
    the build output similar to what a local build via Visual Studio would do:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 当您导航到工件选项卡时，您应该能够看到 `DACPAC` 文件夹。通过点击探索，您可以看到解决方案内的文件，包括类似于通过 Visual Studio
    本地构建的构建输出：
- en: '![](img/00143.jpeg)'
  id: totrans-194
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00143.jpeg)'
- en: Figure 8.20 Exploring Artifacts published from the previous successful build
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.20 探索从前一个成功构建发布的工件
- en: Deploying the build to a local SQL Server instance
  id: totrans-196
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将构建部署到本地 SQL Server 实例
- en: 'Now that the build via VSTS on the private agent is successful, let''s try
    deploying the database to an SQL Server instance. The prerequisite for this is
    that the private agent must be able to access the SQL Server instance. *Figure
    8.21* shows how VSTS with on-premises (Private) agent(s) can be used for deploying
    to multiple on-premises servers/environments:'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，通过 VSTS 在私有代理上的构建已成功，让我们尝试将数据库部署到 SQL Server 实例。此操作的前提是私有代理必须能够访问 SQL Server
    实例。*图 8.21* 展示了如何使用带有本地（私有）代理的 VSTS 将部署到多个本地服务器/环境：
- en: '![](img/00144.jpeg)'
  id: totrans-198
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00144.jpeg)'
- en: Figure 8.21 High level layout of VSTS and On-prem agents/environment
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.21 VSTS 和本地代理/环境的概要布局
- en: 'Source: [https://docs.microsoft.com/en-us/vsts/build-release/concepts/agents/agents](https://docs.microsoft.com/en-us/vsts/build-release/concepts/agents/agents)'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 来源：[https://docs.microsoft.com/en-us/vsts/build-release/concepts/agents/agents](https://docs.microsoft.com/en-us/vsts/build-release/concepts/agents/agents)
- en: 'When a SQL Server database project is built, it will produce a DACPAC file
    that can be used to create a new database. So, in the Build Phase of the SQL Server
    R Services Book-CI build definition, we will add a new task:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 当 SQL Server 数据库项目构建时，它将生成一个 DACPAC 文件，该文件可以用来创建一个新的数据库。因此，在 SQL Server R 服务
    Book-CI 构建定义的构建阶段，我们将添加一个新任务：
- en: Navigate to the SQL Server R Services Book-CI build definition.
  id: totrans-202
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到 SQL Server R 服务 Book-CI 构建定义。
- en: Click on Build Phase and add a new task.
  id: totrans-203
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击构建阶段并添加一个新任务。
- en: Search for `WinRM - SQL Server DB Deployment`. Then, click on Add.
  id: totrans-204
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 搜索 `WinRM - SQL Server DB 部署`。然后，点击添加。
- en: If it doesn't exist, click on Check out our Marketplace. Search for `IIS Web
    App Deployment using WinRM` and install it against your VSTS account.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 如果不存在，点击检查我们的市场。搜索 `使用 WinRM 的 IIS Web 应用部署` 并将其安装到您的 VSTS 账户。
- en: 'In Deploy using : DACPAC, type the following details:'
  id: totrans-206
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在使用 DACPAC 部署时，输入以下详细信息：
- en: 'Machines: `$(UATMachine)`'
  id: totrans-207
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 机器：`$(UATMachine)`
- en: 'Admin Login: `$(UATAdminUser)`'
  id: totrans-208
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 管理员登录：`$(UATAdminUser)`
- en: 'Password: `$(UATAdminPwd)`'
  id: totrans-209
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 密码：`$(UATAdminPwd)`
- en: 'DACPAC file: `$(Build.Repository.LocalPath)\SQL Server R Services Book\Ch08\bin\Debug\Ch08.dacpac`'
  id: totrans-210
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: DACPAC 文件：`$(Build.Repository.LocalPath)\SQL Server R 服务 Book\Ch08\bin\Debug\Ch08.dacpac`
- en: 'Specify SQL Using: `Publish Profile`'
  id: totrans-211
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 指定 SQL 使用：`发布配置文件`
- en: 'Publish Profile: `$(System.DefaultWorkingDirectory)$(UATPublishProfilePath)`'
  id: totrans-212
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 发布配置文件：`$(System.DefaultWorkingDirectory)$(UATPublishProfilePath)`
- en: 'Add the following new variables:'
  id: totrans-213
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加以下新变量：
- en: '| **Name** | **Value** | **Secret** |'
  id: totrans-214
  prefs: []
  type: TYPE_TB
  zh: '| **名称** | **值** | **秘密** |'
- en: '| `UATMachine` | {Enter your machine name in FQDN or IP address, for example:
    `uatpc.mssqlgirl.com`} | No |'
  id: totrans-215
  prefs: []
  type: TYPE_TB
  zh: '| `UATMachine` | {输入您的机器名称（FQDN 或 IP 地址），例如：`uatpc.mssqlgirl.com`} | 否 |'
- en: '| `UATAdminUser` | {Enter the admin user that can log in to the UAT Machine}
    | No |'
  id: totrans-216
  prefs: []
  type: TYPE_TB
  zh: '| `UATAdminUser` | {输入可以登录 UAT 机器的管理员用户} | 否 |'
- en: '| `UATAdminPwd` | {Enter the admin password for the admin} | Yes |'
  id: totrans-217
  prefs: []
  type: TYPE_TB
  zh: '| `UATAdminPwd` | {输入管理员密码} | 是 |'
- en: '| `UATPublisProfilePath` | `\SQL Server R Services Book\Ch08\Ch08-UAT.publish.xml`
    | No |'
  id: totrans-218
  prefs: []
  type: TYPE_TB
  zh: '| `UATPublisProfilePath` | `\SQL Server R Services Book\Ch08\Ch08-UAT.publish.xml`
    | 否 |'
- en: Click on Save and Queue to test the build.
  id: totrans-219
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击保存并排队以测试构建。
- en: Adding the test phase to the build definition
  id: totrans-220
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将测试阶段添加到构建定义中
- en: In this section, you will learn how to add a test phase to the SQL Server R
    Services Book-CI build definition. This test phase will perform the unit testing
    that we have done earlier.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，你将学习如何将测试阶段添加到 SQL Server R Services Book-CI 构建定义。此测试阶段将执行我们之前所做的单元测试。
- en: 'Before we can start unit testing, we need to prepare for the test. This includes
    populating the `dbo.nyctaxisample` table:'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们可以开始单元测试之前，我们需要为测试做准备。这包括向`dbo.nyctaxisample`表填充数据：
- en: To add a new Test Phase, go to Process**,** click on ...**,** and choose Add
    agent phase.
  id: totrans-223
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要添加新的测试阶段，转到流程**，点击 ...**，然后选择添加代理阶段。
- en: In Agent phase, type `Test Phase` in Display name.
  id: totrans-224
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在代理阶段，在显示名称中输入`Test Phase`。
- en: On Test Phase, add a new task.
  id: totrans-225
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在测试阶段，添加一个新任务。
- en: Search for `Command Line`. Then, click on `Add`.
  id: totrans-226
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 搜索`命令行`。然后，点击`添加`。
- en: 'In the Command Line task, type the following details:'
  id: totrans-227
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在命令行任务中输入以下详细信息：
- en: 'Tool: `bcp`'
  id: totrans-228
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 工具：`bcp`
- en: 'Arguments: `Ch08.dbo.nyctaxi_sample in "$(System.DefaultWorkingDirectory)$(UATSampleFilePath)"
    -c -t , -r \n -U $(UATDBUser) -P $(UATDBPwd)`'
  id: totrans-229
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 参数：`Ch08.dbo.nyctaxi_sample in "$(System.DefaultWorkingDirectory)$(UATSampleFilePath)"
    -c -t , -r \n -U $(UATDBUser) -P $(UATDBPwd)`
- en: Click on Save.
  id: totrans-230
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击保存。
- en: 'Now, we can add the step that creates and executes the unit testing:'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以添加创建和执行单元测试的步骤：
- en: On Test Phase, add a new task.
  id: totrans-232
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在测试阶段，添加一个新任务。
- en: Search for `Visual Studio Test`. Then, click on Add.
  id: totrans-233
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 搜索`Visual Studio 测试`。然后，点击添加。
- en: 'In `Visual Studio Test`, type the following details:'
  id: totrans-234
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `Visual Studio 测试`中输入以下详细信息：
- en: 'Display name: `Unit Test`'
  id: totrans-235
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 显示名称：`单元测试`
- en: 'Select tests using: `Test assemblies`'
  id: totrans-236
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下方式选择测试：`Test assemblies`
- en: 'Test assemblies: `**\Ch08_test*.dll`'
  id: totrans-237
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试程序集：`**\Ch08_test*.dll`
- en: 'Search folder: `$(System.DefaultWorkingDirectory)`'
  id: totrans-238
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 搜索文件夹：`$(System.DefaultWorkingDirectory)`
- en: 'Test platform station: `Visual Studio 2017`'
  id: totrans-239
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试平台站：`Visual Studio 2017`
- en: 'Test run title: `Ch08 SQL Server Testing`'
  id: totrans-240
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试运行标题：`Ch08 SQL Server Testing`
- en: Click on Save &amp; Queue.
  id: totrans-241
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击保存 & 排队。
- en: 'When you view the build, you should be able to see something like the following:'
  id: totrans-242
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当你查看构建时，你应该能够看到如下内容：
- en: '![](img/00145.jpeg)'
  id: totrans-243
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00145.jpeg)'
- en: Figure 8.22 Successful automated testing
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.22 自动化测试成功
- en: Automating the build for CI
  id: totrans-245
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 自动化 CI 构建过程
- en: 'Now that we have defined the SQL Server R Services Book-CI with Build Phase
    and Test Phase, we are ready to automate it:'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经定义了带有构建阶段和测试阶段的 SQL Server R Services Book-CI，我们准备自动化它：
- en: In VSTS, edit SQL Server R Services Book-CI.
  id: totrans-247
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 VSTS 中编辑 SQL Server R Services Book-CI。
- en: Click on the Triggers tab.
  id: totrans-248
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击触发器选项卡。
- en: Ensure that Enable continuous integration is checked.
  id: totrans-249
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保已勾选启用持续集成。
- en: 'Optionally, click on + Add for Scheduled:'
  id: totrans-250
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 可选地，点击+添加以添加计划：
- en: '![](img/00146.jpeg)'
  id: totrans-251
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00146.jpeg)'
- en: Figure 8.23 Configuring build for CI and specific schedule
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.23 配置 CI 和特定计划构建
- en: Click on the Options tab.
  id: totrans-253
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击选项卡。
- en: In Build Properties | Build number format, type `Build_$(Date:yyyyMMdd)$(Rev:.r)`.
  id: totrans-254
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在构建属性 | 构建号格式中，输入`Build_$(Date:yyyyMMdd)$(Rev:.r)`。
- en: Click on Save.
  id: totrans-255
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击保存。
- en: 'Now, to test if the automation works, let''s make a change to the solution,
    for example:'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，为了测试自动化是否工作，让我们对解决方案进行一些更改，例如：
- en: In Visual Studio, open the SQL Server R Services Book solution.
  id: totrans-257
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Visual Studio 中打开 SQL Server R Services Book 解决方案。
- en: 'Remove the following files from the Ch08 project:'
  id: totrans-258
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 Ch08 项目中删除以下文件：
- en: '`nyc_taxi_models.sql`'
  id: totrans-259
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`nyc_taxi_models.sql`'
- en: '`PersistModel.sql`'
  id: totrans-260
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`PersistModel.sql`'
- en: '`PredictTipBatchMode.sql`'
  id: totrans-261
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`PredictTipBatchMode.sql`'
- en: '`PredictTipSingleMode.sql`'
  id: totrans-262
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`PredictTipSingleMode.sql`'
- en: Let's check in the pending changes now. Right-click on the Solution node and
    choose Check In.
  id: totrans-263
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在让我们检查挂起的更改。右键单击解决方案节点并选择签入。
- en: Optionally, add a comment before clicking on the Check In button.
  id: totrans-264
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 可选地，在点击签入按钮之前添加注释。
- en: 'After a successful check-in, you should be able to see the Changeset number:'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 在成功签入后，你应该能够看到更改集编号：
- en: '![](img/00147.jpeg)'
  id: totrans-266
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00147.jpeg)'
- en: Figure 8.24 Checking Changeset information for Visual Studio
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.24 检查 Visual Studio 的更改集信息
- en: 'In VSTS, you should be able to go to the latest build and see the matching
    Source version, as shown here:'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 在 VSTS 中，你应该能够访问最新的构建并看到匹配的源版本，如下所示：
- en: '![](img/00148.jpeg)'
  id: totrans-269
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00148.jpeg)'
- en: Figure 8.25 Validating automated CI via Changeset information in VSTS
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.25 通过 VSTS 中的更改集信息验证自动化 CI
- en: Setting up continuous delivery
  id: totrans-271
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置持续交付
- en: 'Continuous delivery aims to ensure that we can deploy good builds to the desired
    environment. This could mean the UAT environment or the Production environment.
    In this section, we will use VSTS to implement continuous delivery:'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 持续交付旨在确保我们可以将良好的构建部署到所需的环境。这可能意味着 UAT 环境，或者生产环境。在本节中，我们将使用 VSTS 实现持续交付：
- en: In VSTS, go to the SQL Server R Services Book project.
  id: totrans-273
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 VSTS 中，转到 SQL Server R Services Book 项目。
- en: Navigate to Build and Release | Release from the top menu.
  id: totrans-274
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从顶部菜单导航到构建和发布 | 发布。
- en: Click on + | New Definition.
  id: totrans-275
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 + | 新定义。
- en: Review the Select Template pane. From here, you can choose from many options,
    including Run Automated Tests from Test Manager. This option is highly recommended
    for regularly checking the accuracy of your existing model, which will be discussed
    in the next step of what the manual process entails. For now, let's choose Empty
    and click on Add.
  id: totrans-276
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查看选择模板窗格。从这里，您可以从许多选项中进行选择，包括从测试管理器运行自动化测试。此选项强烈推荐用于定期检查现有模型的准确性，这将在下一步中讨论。现在，让我们选择空并点击添加。
- en: On the top title where it says All definitions **|** New Release Definition,
    click on the pencil icon to edit the name to `UAT Release`.
  id: totrans-277
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在顶部标题处，点击铅笔图标以编辑名称为 `UAT 发布` 的所有定义 **|** 新发布定义。
- en: 'Let''s continue with the Pipeline tab. There are two boxes: Artifacts and Environments.'
  id: totrans-278
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们继续到“管道”标签页。有两个框：工件和环境。
- en: In the Artifacts box, click on Add artifact.
  id: totrans-279
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在“工件”框中，点击添加工件。
- en: 'Provide the following details and click on Add:'
  id: totrans-280
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 提供以下详细信息并点击添加：
- en: '**Project**: SQL Server R Services Book'
  id: totrans-281
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**项目**：SQL Server R Services Book'
- en: '**Source** (build definition): SQL Server R Services Book-CI'
  id: totrans-282
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**源**（构建定义）：SQL Server R Services Book-CI'
- en: In the Environments box, click on 1 phase, 0 task in Environment 1.
  id: totrans-283
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在“环境”框中，点击环境 1 的 1 阶段，0 任务。
- en: In the Tasks tab, click on the first line that says Environment 1\. Change the
    Environment name to `UAT`.
  id: totrans-284
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在“任务”标签页中，点击第一行显示为“环境 1”。将环境名称更改为 `UAT`。
- en: 'In the Tasks tab, click on the Agent phase and provide the following details:'
  id: totrans-285
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在“任务”标签页中，点击代理阶段并提供以下详细信息：
- en: 'Display name: Deploy to UAT'
  id: totrans-286
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 显示名称：部署到 UAT
- en: 'Agent queue: Default'
  id: totrans-287
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 代理队列：默认
- en: Now, add a new task for Deploy to UAT.
  id: totrans-288
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，添加一个新任务用于部署到 UAT。
- en: Search for `WinRM - SQL Server DB Deployment` and click on Add.
  id: totrans-289
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 搜索 `WinRM - SQL Server DB Deployment` 并点击添加。
- en: 'In Deploy using : Dacpac, fill in the following details:'
  id: totrans-290
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在“使用 Dacpac 部署”中，填写以下详细信息：
- en: 'Machines: `$(UATMachine)`'
  id: totrans-291
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 机器：`$(UATMachine)`
- en: 'Admin Login: `$(UATAdminUser)`'
  id: totrans-292
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 管理员登录：`$(UATAdminUser)`
- en: 'Password: `` `$(UATAdminPwd)` ``'
  id: totrans-293
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 密码：`` `$(UATAdminPwd)` ``
- en: 'DACPAC File: `$(System.ArtifactsDirectory)\$(Build.DefinitionName)\DACPAC\Ch08.dacpac`'
  id: totrans-294
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: DACPAC 文件：`$(System.ArtifactsDirectory)\$(Build.DefinitionName)\DACPAC\Ch08.dacpac`
- en: 'Sever Name: `{specify the server name, for example: localhost}`'
  id: totrans-295
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 服务器名称：`{指定服务器名称，例如：localhost}`
- en: 'Database Name: `NYCTaxiUAT`'
  id: totrans-296
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 数据库名称：`NYCTaxiUAT`
- en: 'Go to the Variables tab and add the following variables:'
  id: totrans-297
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往“变量”标签页并添加以下变量：
- en: '| **Name** | **Value** | **Secret** |'
  id: totrans-298
  prefs: []
  type: TYPE_TB
  zh: '| **名称** | **值** | **秘密** |'
- en: '| `UATMachine` | {Enter your machine name in FQDN or IP address, for example:
    uatpc.mssqlgirl.com} | No |'
  id: totrans-299
  prefs: []
  type: TYPE_TB
  zh: '| `UATMachine` | {输入您的机器名称（FQDN 或 IP 地址），例如：uatpc.mssqlgirl.com} | 否 |'
- en: '| `UATAdminUser` | {Enter the admin user that can log in to the UAT Machine}
    | No |'
  id: totrans-300
  prefs: []
  type: TYPE_TB
  zh: '| `UATAdminUser` | {输入可以登录到 UAT 机器的管理员用户} | 否 |'
- en: '| `UATAdminPwd` | {Enter the admin password for the admin} | Yes |'
  id: totrans-301
  prefs: []
  type: TYPE_TB
  zh: '| `UATAdminPwd` | {输入管理员密码} | 是 |'
- en: Then, click on Save and accept the default values.
  id: totrans-302
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，点击保存并接受默认值。
- en: To test this release definition, under New Release Definition, click on + Release
    and choose Create **Release**, then choose ....
  id: totrans-303
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要测试此发布定义，在“新发布定义”下，点击 + 发布并选择创建 **发布**，然后选择 ...
- en: 'On the Create new release for New Release Definition, type `Test UAT deployment` in
    Release Description. Then, click on Create, as shown here:'
  id: totrans-304
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在“为新发布定义创建新发布”中，在发布描述中输入 `Test UAT deployment`。然后，点击创建，如图所示：
- en: '![](img/00149.jpeg)'
  id: totrans-305
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00149.jpeg)'
- en: Figure 8.26 Creating a new release for the UAT environment based on the latest
    successful build
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.26 基于最新成功构建创建 UAT 环境的新发布
- en: 'It is possible to deploy to multiple environments with different database connection
    settings. An extension that will help you achieve this is XDT Transform:'
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用不同的数据库连接设置部署到多个环境。一个帮助你实现这一点的扩展是 XDT Transform：
- en: '[https://marketplace.visualstudio.com/items?itemName=qetza.xdttransform](https://marketplace.visualstudio.com/items?itemName=qetza.xdttransform)'
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://marketplace.visualstudio.com/items?itemName=qetza.xdttransform](https://marketplace.visualstudio.com/items?itemName=qetza.xdttransform)'
- en: 'Once the release is completed, it will look as follows:'
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦发布完成，它将看起来如下：
- en: '![](img/00150.jpeg)'
  id: totrans-310
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00150.jpeg)'
- en: Figure 8.27 Results of a successful release
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.27 成功发布的成果
- en: 'To enable Continuous Deliverable on the release, you''ll have to edit the definition:'
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 要在发布上启用持续交付，你必须编辑定义：
- en: Go to the Releases view, click on ... of UAT Release, then choose Edit.
  id: totrans-313
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往发布视图，点击UAT发布的...，然后选择编辑。
- en: On the Pipeline view, go to SQL Server R Services Book-CI inside the Artifacts
    box.
  id: totrans-314
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在管道视图中，进入工件框中的SQL Server R服务Book-CI。
- en: 'Click on the Continuous deployment trigger, as shown here:'
  id: totrans-315
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击此处所示的持续部署触发器：
- en: '![](img/00151.jpeg)'
  id: totrans-316
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00151.jpeg)'
- en: Figure 8.28 Changing the Continuous Deployment Trigger
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.28 修改持续部署触发器
- en: In the Continuous deployment trigger window, ensure that the Enabled slider
    is on.
  id: totrans-318
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在持续部署触发器窗口中，确保启用滑块处于开启状态。
- en: Click on Save.
  id: totrans-319
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击保存。
- en: 'To test the UAT Release''s Continuous deliverable setup, you can invoke a new
    build on SQL Server R Services Book-CI. The view should look like this:'
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 要测试UAT发布的持续交付设置，你可以在SQL Server R服务Book-CI上调用一个新的构建。视图应如下所示：
- en: '![](img/00152.gif)'
  id: totrans-321
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00152.gif)'
- en: Figure 8.29 Results of a successful release through Continuous Development
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.29 通过持续开发成功发布的成果
- en: 'In the summary, the Details should say that the release is Triggered by SQL
    Server R Services Book-CI Build_20180101.1\. Therefore, we successfully created
    a basic Continuous Delivery process. Advanced steps like setting up integration
    testing and load testing can now be added to the release using similar steps to
    the ones shown earlier. For more information about setting this up in VSTS, please
    refer to the following tutorial from Microsoft: [https://docs.microsoft.com/en-us/vsts/build-release/test/example-continuous-testing#configure-cd](https://docs.microsoft.com/en-us/vsts/build-release/test/example-continuous-testing#configure-cd).'
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 在摘要中，详细信息应说明发布是由SQL Server R服务Book-CI构建_20180101.1触发的。因此，我们成功创建了一个基本的持续交付流程。现在可以添加高级步骤，如设置集成测试和负载测试，使用与前面显示的类似步骤。有关在VSTS中设置此信息的更多信息，请参阅以下Microsoft教程：[https://docs.microsoft.com/en-us/vsts/build-release/test/example-continuous-testing#configure-cd](https://docs.microsoft.com/en-us/vsts/build-release/test/example-continuous-testing#configure-cd)。
- en: Monitoring the accuracy of the productionized model
  id: totrans-324
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 监控生产化模型的准确性
- en: 'In [Chapter 6](part0096.html#2RHM00-e3f81285367248f4bbc6431bcd4f926d), *Predictive
    Modeling*, we discussed a number of predictive modeling examples. The model(s)
    created is/are based on trained data. In a real-world scenario, new data keeps
    coming in, for example, online transactions, taxi cab transactions (remember the
    earlier NYC taxi example), and air flight delay predictions. Therefore, the data
    model should be checked regularly to ensure that it is still satisfactory and
    that there is no other better model that could be generated for it. With the latter,
    a good data scientist would continuously be asking at least four of these questions:'
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第6章](part0096.html#2RHM00-e3f81285367248f4bbc6431bcd4f926d)“预测建模”中，我们讨论了许多预测建模示例。创建的模型是基于训练数据的。在现实世界中，新数据不断涌现，例如在线交易、出租车交易（记得之前提到的纽约市出租车示例）和航班延误预测。因此，应该定期检查数据模型，以确保它仍然令人满意，并且没有其他更好的模型可以生成。在这方面，优秀的数据科学家会持续至少提出以下四个问题：
- en: Is there a different algorithm to consider due to changes of the data?
  id: totrans-326
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 由于数据的变化，是否需要考虑不同的算法？
- en: For example, if the current model is using logistic regression (`rxLogit`),
    would the decision tree algorithm more accurate (`rxDTree`) either due to the
    size or due to changes in the expected outcome?
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果当前模型正在使用逻辑回归（`rxLogit`），那么决策树算法（`rxDTree`）是否会因为规模或预期结果的变化而更准确？
- en: Are there other features from newer transactions that are becoming more significant?
  id: totrans-328
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 是否有来自新交易的其他特征变得越来越重要？
- en: 'Consider the following scenario: Currently, tipping prediction on taxi rides
    are using passenger count, trip distance, trip time, and direct distance. Perhaps
    regularly checking whether other features, such as hour of day, day of week, pick-up
    zip code and/or drop-off zip code, holiday season, cleanliness of the taxi, or
    customer rating, would contribute more to the tipping prediction.'
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑以下场景：目前，出租车行程的小费预测正在使用乘客数量、行程距离、行程时间和直接距离。也许定期检查其他特征，如一天中的小时、一周中的日子、接单邮编和/或送单邮编、假日季节、出租车的清洁度或客户评分，是否会对小费预测有更大的贡献。
- en: Has there been changes in the requirements that can yield to actions to improve
    the business or customer?
  id: totrans-330
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 是否有变化的需求可以导致采取行动来改善业务或客户？
- en: In the taxi ride tipping prediction, the current prediction is a binary value,
    that is, true or false. The business might be interested in understanding more
    about how cleanliness of the taxi or the customer rating can be correlated to
    no tips, small tips, medium tips, or large tips. Cleanliness of the taxi cab is
    an action that the driver can use to drive better improvement.
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 在出租车行程小费预测中，当前的预测是一个二进制值，即真或假。企业可能希望了解出租车清洁度或客户评分如何与无小费、小额小费、中等小费或大量小费相关联。出租车清洁度是司机可以用来提高服务质量的行为。
- en: Is performance slow down caused by the model execution or input data bottleneck?
  id: totrans-332
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 性能下降是否由模型执行或输入数据瓶颈引起？
- en: It is possible that as the input dataset/data source grows and is not optimized,
    the end-to-end predictive modeling would also slow down.
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 可能随着输入数据集/数据源的增长且未优化，端到端的预测建模也会变慢。
- en: 'To capture the performance of the model, one should log the performance of
    the actual prediction or the reasonable representation of actual data. Here is
    an example of what the log table should look like:'
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 为了捕捉模型的性能，应该记录实际预测或实际数据的合理表示的性能。以下是一个日志表应该看起来像的例子：
- en: '| **Value** | **Data Type** | **Comments** |'
  id: totrans-335
  prefs: []
  type: TYPE_TB
  zh: '| **值** | **数据类型** | **注释** |'
- en: '| `LogID` | `INT` | Sequential ID for execution. |'
  id: totrans-336
  prefs: []
  type: TYPE_TB
  zh: '| `LogID` | `INT` | 执行的顺序ID。|'
- en: '| `Created On` | `DATETIME` | Date the model was generated and tested. |'
  id: totrans-337
  prefs: []
  type: TYPE_TB
  zh: '| `创建时间` | `DATETIME` | 模型生成和测试的日期。|'
- en: '| `ModelID` | `INT` | Unique ID for each model. |'
  id: totrans-338
  prefs: []
  type: TYPE_TB
  zh: '| `模型ID` | `INT` | 每个模型的唯一标识符。|'
- en: '| `Model` | `VARBINARY(MAX)` | This is the serialized representation of the
    model. |'
  id: totrans-339
  prefs: []
  type: TYPE_TB
  zh: '| `模型` | `VARBINARY(MAX)` | 这是模型的序列化表示。|'
- en: '| `RxFunction` | `VARCHAR(50)` | This is the rx function used in the model.
    |'
  id: totrans-340
  prefs: []
  type: TYPE_TB
  zh: '| `RxFunction` | `VARCHAR(50)` | 这是模型中使用的rx函数。|'
- en: '| `Formula` | `VARCHAR(1000)` | The formula for the prediction model. |'
  id: totrans-341
  prefs: []
  type: TYPE_TB
  zh: '| `公式` | `VARCHAR(1000)` | 预测模型的公式。|'
- en: '| `Training Input Query` | `VARCHAR(MAX)` | The training dataset that is reproducible
    |'
  id: totrans-342
  prefs: []
  type: TYPE_TB
  zh: '| `训练输入查询` | `VARCHAR(MAX)` | 可重复生成的训练数据集|'
- en: '| `AUC` | `FLOAT` | The AUC representation of the model. This can be any other
    metric that you can use to compare quality of the model. |'
  id: totrans-343
  prefs: []
  type: TYPE_TB
  zh: '| `AUC` | `FLOAT` | 模型的AUC表示。这可以是任何其他可以用来比较模型质量的指标。|'
- en: '| `Training Row Count` | `INT` | The number of row counts. |'
  id: totrans-344
  prefs: []
  type: TYPE_TB
  zh: '| `训练行数` | `INT` | 行数的数量。|'
- en: '| `CPU Time` | `INT` | The number of seconds to generate the model. |'
  id: totrans-345
  prefs: []
  type: TYPE_TB
  zh: '| `CPU时间` | `INT` | 生成模型所需的时间（秒数）。|'
- en: 'Once you capture the execution, you can analyze the AUC value and the CPU time,
    as shown in *Figure 8.30*:'
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦捕获了执行情况，就可以分析AUC值和CPU时间，如图8.30所示：
- en: '![](img/00153.jpeg)'
  id: totrans-347
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00153.jpeg)'
- en: Figure 8.30 Monitoring Model comparisons on AUC and CPU Time
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.30 监控模型在AUC和CPU时间上的比较
- en: 'These diagrams compare the performance of the following models:'
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: 这些图表比较了以下模型的性能：
- en: '|  | **Formula B** | **Formula C** |'
  id: totrans-350
  prefs: []
  type: TYPE_TB
  zh: '|  | **公式B** | **公式C** |'
- en: '| `rxDTree` | Model ID 2 | Model ID 3 |'
  id: totrans-351
  prefs: []
  type: TYPE_TB
  zh: '| `rxDTree` | 模型ID 2 | 模型ID 3 |'
- en: '| `rxLogit` | Model ID 4 | Model ID 5 |'
  id: totrans-352
  prefs: []
  type: TYPE_TB
  zh: '| `rxLogit` | 模型ID 4 | 模型ID 5 |'
- en: 'The description is as follows:'
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: 描述如下：
- en: Formula B is *tipped ~ passenger_count + trip_distance + trip_time_in_secs +
    direct_distance + payment_type*
  id: totrans-354
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 公式B是*tipped ~ passenger_count + trip_distance + trip_time_in_secs + direct_distance
    + payment_type*
- en: Formula C is *tipped ~ passenger_count + trip_distance + trip_time_in_secs +
    payment_type*
  id: totrans-355
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 公式C是*tipped ~ passenger_count + trip_distance + trip_time_in_secs + payment_type*
- en: 'And each of the models is run against:'
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: 每个模型都会与以下数据运行：
- en: Last 2 months of data
  id: totrans-357
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后2个月的数据
- en: Random top 5 percent of data
  id: totrans-358
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 随机选取的5%数据
- en: Based on the previously mentioned comparisons, we can see that Model ID 4, which
    is `rxLogit` with Formula B, has the highest AUC range and lowest CPU time. So,
    this model is the best out of the two. Next is to decide if this model should
    replace the ones in production.
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: 根据之前提到的比较，我们可以看到模型ID 4，即使用公式B的`rxLogit`，具有最高的AUC范围和最低的CPU时间。因此，这个模型是两个中最好的。接下来需要决定这个模型是否应该替换生产中的模型。
- en: Now that you have learned the technique of comparing models and some of the
    metrics that are important in prediction modeling, you can schedule this performance
    testing similar to the one shown earlier. The scheduling can be a SQL Agent job,
    as shown in [Chapter 7](part0102.html#318PC0-e3f81285367248f4bbc6431bcd4f926d), *Operationalizing
    R Code*, where you can get alerted should new results fall below a certain threshold.
    Or, you can issue this as part of a separate SQL Server database unit project
    deployed in VSTS to check against the database with the latest transactions data.
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经学会了比较模型的技术以及预测建模中一些重要的指标，你可以安排这种性能测试，类似于前面展示的。安排可以是SQL代理作业，如[第7章](part0102.html#318PC0-e3f81285367248f4bbc6431bcd4f926d)中所述的“操作R代码”，在那里如果新的结果低于某个阈值，你可以收到警报。或者，你可以在VSTS中部署一个独立的SQL
    Server数据库单元项目，作为单独的部分来执行，以检查最新的交易数据。
- en: Useful references
  id: totrans-361
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 有用参考资料
- en: 'Integrate SQL Server 2017 into your DevOps pipeline: [https://www.microsoft.com/en-us/sql-server/developer-get-started/sql-devops/](https://www.microsoft.com/en-us/sql-server/developer-get-started/sql-devops/)'
  id: totrans-362
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将SQL Server 2017集成到你的DevOps管道中：[https://www.microsoft.com/en-us/sql-server/developer-get-started/sql-devops/](https://www.microsoft.com/en-us/sql-server/developer-get-started/sql-devops/)
- en: 'Visual Studio Team Services (VSTS): [https://www.visualstudio.com/team-services/](https://www.visualstudio.com/team-services/)'
  id: totrans-363
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Visual Studio Team Services (VSTS)：[https://www.visualstudio.com/team-services/](https://www.visualstudio.com/team-services/)
- en: 'Compare Visual Studio 2017 IDEs: [https://www.visualstudio.com/vs/compare/](https://www.visualstudio.com/vs/compare/)'
  id: totrans-364
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 比较Visual Studio 2017 IDE：[https://www.visualstudio.com/vs/compare/](https://www.visualstudio.com/vs/compare/)
- en: 'Configure Hosted Agent in VS 2017: [https://docs.microsoft.com/en-us/vsts/build-release/actions/agents/v2-windows](https://docs.microsoft.com/en-us/vsts/build-release/actions/agents/v2-windows)'
  id: totrans-365
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在VS 2017中配置托管代理：[https://docs.microsoft.com/en-us/vsts/build-release/actions/agents/v2-windows](https://docs.microsoft.com/en-us/vsts/build-release/actions/agents/v2-windows)
- en: 'Continuous Delivery: [https://www.visualstudio.com/learn/what-is-continuous-delivery/](https://www.visualstudio.com/learn/what-is-continuous-delivery/)'
  id: totrans-366
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 持续交付：[https://www.visualstudio.com/learn/what-is-continuous-delivery/](https://www.visualstudio.com/learn/what-is-continuous-delivery/)
- en: Summary
  id: totrans-367
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: Visual Studio 2017 is a powerful IDE for data scientists/developers to manage
    their code, unit testing, and version control. Combined with Visual Studio Team
    Services, they form a complete toolkit to execute Database Lifecycle Management,
    which can also be easily adapted to DevOps practices. This chapter describes in
    detail how you can integrate SQL Server Machine Learning Services with R in SQL
    Server Database projects, DevOps practices, and CI/CD workflows. Finally, you
    have also learned how to monitor a Prediction Model accuracy over time.
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: Visual Studio 2017是一个强大的集成开发环境（IDE），数据科学家/开发者可以使用它来管理他们的代码、单元测试和版本控制。结合Visual
    Studio Team Services，它们形成了一个完整的工具集，用于执行数据库生命周期管理，这也易于适应DevOps实践。本章详细介绍了如何在SQL
    Server数据库项目中、DevOps实践中以及CI/CD工作流中集成SQL Server机器学习服务与R语言。最后，你也学习了如何监控预测模型随时间变化的准确性。
- en: In the next chapter, we'll discuss how DBAs can also take advantage of Machine
    Learning Services with R.
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将讨论数据库管理员（DBAs）如何利用R语言的优势来利用机器学习服务。
