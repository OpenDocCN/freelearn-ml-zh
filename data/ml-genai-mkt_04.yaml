- en: '4'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '4'
- en: Harnessing Seasonality and Trends for Strategic Planning
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 利用季节性和趋势进行战略规划
- en: Unless it is a one-time marketing event, such as opening pop-up stores or occasional
    celebratory product sales, there will always be impacts on the marketing outcomes
    from time components. For example, companies selling umbrellas will naturally
    see significant sales increases during rainy seasons. Not only can there be seasonal
    impacts on businesses but there can also be general trends in businesses. For
    example, businesses selling landline phones will see a gradual decline in their
    sales as people use mobile phones more and more.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 除非是一次性营销活动，例如开设临时商店或偶尔的产品促销活动，否则时间成分总会对营销结果产生影响。例如，销售雨伞的公司在雨季自然会看到显著的销售增长。不仅业务会受到季节性影响，而且业务中也可能存在一般趋势。例如，销售固定电话的业务随着人们越来越多地使用移动电话，其销售额将逐渐下降。
- en: This chapter discusses in depth the temporal impacts on marketing campaigns
    and how to utilize them for the most efficient marketing strategies. We will introduce
    the basics of time-series analysis, such as some of the common approaches to identifying
    overall trends and anomalies and visualizing time-series data. We’ll then move
    on to exploring how time-series data can be decomposed into trends and seasonalities,
    which will inform us of the contribution of breakdowns of certain events based
    on these factors and how this decomposition helps with building more efficient
    marketing strategies. We’ll end by learning how to build time-series forecasting
    models and understanding how these forecasts can be utilized for proper marketing
    campaigns. We will use a product sales dataset as an example and discuss how to
    conduct time-series analysis and modeling in Python.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章深入讨论了时间对营销活动的影响以及如何利用这些影响来制定最有效的营销策略。我们将介绍时间序列分析的基础，例如识别整体趋势和异常的一些常见方法，以及可视化时间序列数据。然后，我们将探讨如何将时间序列数据分解为趋势和季节性，这将告诉我们基于这些因素某些事件分解的贡献，以及这种分解如何帮助构建更有效的营销策略。我们将通过学习如何构建时间序列预测模型，以及理解这些预测如何被用于适当的营销活动来结束本章。我们将使用产品销售数据集作为例子，并讨论如何在Python中进行时间序列分析和建模。
- en: 'More specifically, we will cover the following topics:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 更具体地说，我们将涵盖以下主题：
- en: Time series analysis basics
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 时间序列分析基础
- en: Trend and seasonality decomposition in time-series data
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 时间序列数据中的趋势和季节性分解
- en: Time series forecasting models
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 时间序列预测模型
- en: Time series analysis basics
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 时间序列分析基础
- en: Understanding natural trends within businesses is critical, not only for marketers
    but also for operators, sales, and most other business units. Without a good grasp
    of how a business and its products are evolving and how customers are reacting
    and behaving around the services and products that you provide, it is very easy
    to fall behind, resulting in suboptimal revenue growth or even business growth
    slowing to a halt.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 理解企业中的自然趋势对于营销人员、运营人员、销售人员以及大多数其他业务部门来说至关重要。如果没有很好地掌握业务及其产品是如何演变，以及客户是如何围绕你提供的服务和产品做出反应和行为的，很容易落后，导致收入增长不理想，甚至业务增长放缓至停止。
- en: It is easy to find how businesses build their product strategies around this
    temporal component of the business cycle. In the fashion industry, clothing businesses
    typically market spring and summer clothes from late winter to early spring, while
    fall and winter clothes are advertised from early summer to early fall, as customers
    tend to shop before the actual season comes as a preparation. Then, spring and
    summer clothes typically go on sale during the summer, typically from mid-July,
    as the demand for these clothes is low during the actual season. This illustrates
    how businesses can optimize their business cycles for different seasons based
    on the customer demands that naturally form and how they can maximize sales while
    minimizing the excess inventory.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 很容易发现企业是如何围绕商业周期的时间成分构建其产品策略的。在时尚行业，服装企业通常从冬季晚期到春季早期开始推广春夏季服装，而秋冬服装则从夏季早期到秋季早期进行宣传，因为客户倾向于在季节真正到来之前购物作为准备。然后，春夏季服装通常在夏季进行促销，通常从7月中旬开始，因为这些服装在季节真正到来时的需求较低。这说明了企业如何根据自然形成的客户需求优化不同季节的商业周期，以及他们如何最大化销售同时最小化过剩库存。
- en: '**Time series analysis** comes in handy when we try to understand these natural
    temporal components within businesses. Time series analysis, in short, is a way
    of analyzing a series of data points over time and how **time** affects the changes
    in data values. In this chapter, we will be using a historical sales dataset as
    an example to discuss how to conduct time series analysis and modeling.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**时间序列分析**在尝试理解企业中的这些自然时间成分时非常有用。简而言之，时间序列分析是一种分析随时间变化的一系列数据点及其如何影响数据值变化的方法。在本章中，我们将使用一个历史销售数据集作为例子来讨论如何进行时间序列分析和建模。'
- en: '**Source code and data**:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**源代码和数据**:'
- en: '[https://github.com/PacktPublishing/Machine-Learning-and-Generative-AI-for-Marketing/tree/main/ch.4](https://github.com/PacktPublishing/Machine-Learning-and-Generative-AI-for-Marketing/tree/main/ch.4
    )'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/PacktPublishing/Machine-Learning-and-Generative-AI-for-Marketing/tree/main/ch.4](https://github.com/PacktPublishing/Machine-Learning-and-Generative-AI-for-Marketing/tree/main/ch.4
    )'
- en: '**Data source**: [https://community.tableau.com/s/question/0D54T00000CWeX8SAL/sample-superstore-sales-excelxls](https://community.tableau.com/s/question/0D54T00000CWeX8SAL/sample-superstore-sales-excelxls)'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**数据来源**: [https://community.tableau.com/s/question/0D54T00000CWeX8SAL/sample-superstore-sales-excelxls](https://community.tableau.com/s/question/0D54T00000CWeX8SAL/sample-superstore-sales-excelxls)'
- en: Basic time series trends
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 基本时间序列趋势
- en: 'Let’s look at overall monthly product sales using our example dataset. We will
    first need to load this data into a DataFrame and aggregate the data per month.
    Take a look at the following code (note that the CSV file used here is included
    in the book GitHub repository):'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用示例数据集查看整体月度产品销售额。我们首先需要将此数据加载到DataFrame中，并按月汇总数据。请看以下代码（注意，这里使用的CSV文件包含在本书的GitHub仓库中）：
- en: '[PRE0]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Here, we are loading the data into a `pandas` DataFrame. One thing that is different
    from previous chapters is the encoding parameter. This dataset contains non-UTF
    characters, so we are using `latin` encoding to load the data. Then, we convert
    the values in the `OrderDate` column into a datetime type and copy the key columns
    into a new `DataFrame`, `ts_df`. Lastly, for ease of use, we remove spaces in
    the column names by replacing all spaces with empty strings.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们将数据加载到`pandas` DataFrame中。与之前章节不同的是，编码参数。这个数据集包含非UTF字符，所以我们使用`latin`编码来加载数据。然后，我们将`OrderDate`列中的值转换为日期时间类型，并将关键列复制到一个新的`DataFrame`，`ts_df`。最后，为了便于使用，我们通过将所有空格替换为空字符串来删除列名中的空格。
- en: 'One way to resample and aggregate the data into monthly frequency is as follows:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 将数据重新采样并按月频率汇总的一种方法如下：
- en: '[PRE1]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: We are using the `resample` function within `pandas` with the argument `MS`,
    which will resample the data into a monthly timeframe, and then counting the number
    of unique `OrderID` values using the `nunique` function, which will give us monthly
    unique order count data. We then compute month-over-month changes in percentages
    by subtracting the previous month’s value from the current month’s value and dividing
    it by the previous month’s value. The `shift` function will move the data by one
    period, resulting in giving us the previous month’s value.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在`pandas`中使用`resample`函数，并带有`MS`参数，这将把数据重新采样到月度时间框架，然后使用`nunique`函数计算唯一的`OrderID`值的数量，这将给我们提供每月独立订单计数数据。然后我们通过从当前月的值中减去上个月的值并除以上个月的值来计算月度百分比变化。`shift`函数将数据移动一个周期，从而给出上个月的值。
- en: 'We can apply the same to compute monthly order quantities and sales, as in
    the following:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以将同样的方法应用于计算每月订单数量和销售额，如下所示：
- en: '[PRE2]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The simplest approach to visualizing time-series data is using line charts.
    Take a look at the following code:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 可视化时间序列数据最简单的方法是使用折线图。请看以下代码：
- en: '[PRE3]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'In this code, we are creating three line charts. The first one is for the monthly
    unique order, the second one is for the monthly order quantities, and the last
    one is for the monthly sales. This code generates the following charts:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在这段代码中，我们创建了三个折线图。第一个是每月独立订单数，第二个是每月订单数量，最后一个是每月销售额。此代码生成了以下图表：
- en: '![](img/B30999_04_01.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B30999_04_01.png)'
- en: 'Figure 4.1: Visualization of monthly time-series data'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.1：月度时间序列数据的可视化
- en: Let’s dive into these charts deeper. As you may notice, all three charts show
    clear repeating patterns. They spike in March, September, and November-December.
    This can be confirmed by both looking at the solid lines, which are overall monthly
    values, and looking at the dotted lines, which are month-over-month changes in
    the values. This suggests that this business is cyclical with a larger volume
    of sales in those corresponding months. Marketers should turn this insight into
    actions by marketing more heavily slightly before the peak seasons to capture
    the greatest amount of sales potential. Also, marketers can offer discounts during
    the months that show weaker sales volumes in an effort to manage the inventory,
    as well as boost off-season sales.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们更深入地研究这些图表。如您所注意到的，所有三个图表都显示出明显的重复模式。它们在三月、九月和十一月到十二月期间达到峰值。这可以通过查看实线（表示整体月度值）和虚线（表示月度值的变化）来确认。这表明该业务具有周期性，相应月份的销售量较大。营销人员应通过在高峰季节前稍作营销来捕捉最大的销售潜力。此外，营销人员可以在显示较弱销售量的月份提供折扣，以管理库存并促进淡季销售。
- en: As you can see, visualizing time-series data itself gives great insight into
    the business cycles and how to prepare for the peak and trough seasons. Another
    thing you may notice from these charts is they are overall in an uptrend, meaning
    the values are typically rising year over year. This overall trend is more easily
    identifiable when we look at the moving averages in the time-series charts.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，可视化时间序列数据本身就能提供关于业务周期以及如何为高峰和低谷季节做准备的深刻见解。您可能还会注意到，这些图表整体呈上升趋势，这意味着值通常每年都在上升。当我们查看时间序列图表中的移动平均值时，这种整体趋势更容易识别。
- en: You can not only sample time-series data by monthly frequency but also by daily,
    weekly, or yearly frequencies. There are many options you can resample by, so
    try different resample frequencies and see what other trends you can observe!
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 您不仅可以按月频率采样时间序列数据，还可以按日、周或年频率采样。您可以根据许多选项进行重采样，所以尝试不同的重采样频率，看看您能观察到哪些其他趋势！
- en: '**Reference**: https://pandas.pydata.org/pandas-docs/stable/user_guide/timeseries.html#resampling'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '**参考**：https://pandas.pydata.org/pandas-docs/stable/user_guide/timeseries.html#resampling'
- en: Moving averages
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 移动平均值
- en: '**Moving averages**, which are the averages over specific time periods, are
    good at smoothing out spiky or noisy time-series data and showing overall trends.
    They are essential tools to answer questions like “Are our product sales in an
    overall uptrend or downtrend?”. Within our example data, we can do the following
    to compute moving averages:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '**移动平均值**，即特定时间段的平均值，擅长平滑尖峰或噪声的时间序列数据，并显示整体趋势。它们是回答诸如“我们的产品销售是整体上升还是下降趋势？”等问题的重要工具。在我们的示例数据中，我们可以执行以下操作来计算移动平均值：'
- en: '[PRE4]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: As you can see from this code, you can use the `rolling` function within `pandas`
    and apply the `mean` function to get the moving average of monthly sales. The
    input into the `rolling` function defines how many periods you would like to average
    the values for. Here, we have computed the 6-period moving average and the 12-period
    moving average of monthly sales.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 如您从这段代码中看到的那样，您可以在`pandas`中使用`rolling`函数并应用`mean`函数来获取月度销售的移动平均值。`rolling`函数的输入定义了您想要平均值的周期数。在这里，我们计算了月度销售的6周期移动平均值和12周期移动平均值。
- en: 'You can use the following code to visualize the moving averages:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用以下代码来可视化移动平均值：
- en: '[PRE5]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The resulting chart will look as follows:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 生成的图表将如下所示：
- en: '![](img/B30999_04_02.png)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B30999_04_02.png)'
- en: 'Figure 4.2: Monthly sales with 6-month and 12-month moving averages'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.2：包含6个月和12个月移动平均值的月度销售
- en: As expected, the 12-month moving average chart is smoother than the 6-month
    moving average chart. However, the 6-month moving average chart is more responsive
    or captures the monthly trends more closely than the 12-month moving average chart
    while still smoothing out the spikes in the monthly sales chart. As you may notice,
    the moving average charts show a general uptrend in the monthly sales data, which
    may have been harder to notice due to spikes and noises when we were only looking
    at the monthly chart.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 如预期的那样，12个月移动平均值图表比6个月移动平均值图表更平滑。然而，6个月移动平均值图表比12个月移动平均值图表更敏感或更接近于捕捉月度销售图表中的趋势，同时仍然平滑了月度销售图表中的尖峰。如您所注意到的，移动平均值图表显示了月度销售数据的一般上升趋势，这在仅查看月度图表时可能更难注意到。
- en: 'Moving averages can also help you understand whether the spikes in certain
    months are within the normal range or are abnormal. Take a look at the following
    code:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 移动平均还可以帮助您了解某些月份的峰值是否在正常范围内或是不正常。看看以下代码：
- en: '[PRE6]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'This code calculates the moving standard deviations (which is the same as moving
    averages but measuring standard deviations over a certain period of time in the
    past) over a 6-month period by using the `std` function and visualizes data with
    the bands where the upper boundary is one standard deviation above the 6-month
    moving average and the lower boundary is one standard deviation below the 6-month
    moving average. The chart will look as follows:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 此代码通过使用`std`函数计算6个月期间的移动标准差（与移动平均相同，但测量过去一定时间内的标准差）并使用带有上下边界的带状图可视化数据，其中上边界是6个月移动平均线上一个标准差，下边界是6个月移动平均线下一个标准差。图表将如下所示：
- en: '![](img/B30999_04_03.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B30999_04_03.png)'
- en: 'Figure 4.3: Monthly sales with 6-month moving average and 1-std boundaries'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.3：带有6个月移动平均和1-std边界的月销售
- en: This chart shows how the monthly sales volumes look compared to the moving averages
    and one standard deviation boundaries. Depending on your preference, you may want
    to consider values within one standard deviation as normal or within two standard
    deviations as normal. Using this example, if we assume values within one standard
    deviation to be normal, we can see that the months of February, September, November,
    and December are abnormal months and went beyond the defined boundaries, where
    the sales in February dropped significantly lower than expected and the sales
    in September, November, and December increased significantly higher than expected.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 此图表显示了月销售量与移动平均线和一个标准差边界相比的情况。根据您的偏好，您可能希望将一个标准差内的值视为正常，或将两个标准差内的值视为正常。使用此示例，如果我们假设一个标准差内的值为正常值，我们可以看到二月、九月、十一月和十二月是不正常的月份，超出了定义的边界，其中二月份的销售量显著低于预期，而九月、十一月和十二月销售量显著高于预期。
- en: Understanding the overall trend of a business is equally as important as understanding
    the seasonal or cycles within a business. Depending on the general trend, you
    can be better informed as to whether to expect higher or lower sales and marketing
    potential than last year. If the overall trend is in an uptrend, you should expect
    the demand for a given month is likely to be higher than the demand for the same
    month in the previous year. Also, having a good grasp of the sales that go above
    or below the normal ranges, such as during Black Fridays or the Christmas season,
    can help to build efficient marketing strategies to overcome the shortages and
    the abundance of marketing potential. Moving averages and moving standard deviations
    are handy tools for identifying overall trends and normal expected ranges.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 理解企业的整体趋势与理解企业内的季节性或周期同样重要。根据一般趋势，您可以更好地了解是否比去年有更高的或更低的销售和营销潜力。如果整体趋势是上升趋势，您应该预计某个月的需求可能比去年同月的需求更高。此外，对超出或低于正常范围的销售有良好的掌握，例如在黑色星期五或圣诞节期间，可以帮助构建有效的营销策略来克服短缺和营销潜力的过剩。移动平均和移动标准差是识别整体趋势和正常预期范围的便捷工具。
- en: Autocorrelation
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 自相关
- en: 'Another basic time-series analysis that comes in handy is **autocorrelation**.
    Autocorrelation represents the correlation with lagged versions of itself. It
    will be easier to discuss with an example. Take a look at the following code:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个有用的基本时间序列分析是**自相关**。自相关表示与自身滞后版本的关联。以下将通过一个例子来讨论。看看以下代码：
- en: '[PRE7]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Here, we are utilizing the `statsmodels` package, which you can install using
    the `pip install statsmodels` command. The `plot_acf` function will plot the autocorrelation
    of a given series for you. Here, we are plotting the autocorrelation of the monthly
    sales for the past 25 periods. The chart should look as follows:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们使用`statsmodels`包，您可以使用`pip install statsmodels`命令安装它。`plot_acf`函数将为您绘制给定序列的自相关图。在这里，我们绘制了过去25期月销售的自相关图。图表应该如下所示：
- en: '![](img/B30999_04_04.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B30999_04_04.png)'
- en: 'Figure 4.4: Autocorrelation plot of monthly sales data'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.4：月销售数据的自相关图
- en: Let’s analyze this chart more closely. The x-axis represents the number of lags
    and the y-axis is the degree of correlation. This chart shows the correlation
    between the current point of time against one period before, two periods before,
    and up to 25 periods before. Here, in the monthly sales data, we have relatively
    strong positive correlations up to three lagged periods and slight negative correlations
    with the fourth and fifth periods. This suggests that if there were increases
    in sales for the past 3 months, it is likely that the current month’s sales will
    increase, and vice versa. Also, this means that observing an increase in sales
    4–5 months ago likely results in a decrease in sales during the current month.
    As this example shows, autocorrelation is a way to see how different time periods
    may have affected the current time period’s result. In the *Time series forecasting
    models* section of this chapter, we will experiment with the **autoregressive
    integrated moving average** (**ARIMA**) model, and the autoregression part of
    it uses these lagged variables for time-series forecast modeling.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们更仔细地分析这张图表。x轴代表滞后阶段数，y轴是关联程度。这张图表显示了当前时间点与一个周期前、两个周期前，以及直到25个周期前的关联。在这里，在月度销售数据中，我们有三滞后阶段的相对较强的正相关，与第四和第五个周期有轻微的负相关。这表明如果过去3个月有销售增加，那么本月销售很可能会增加，反之亦然。这也意味着观察4-5个月前的销售增加很可能会导致本月销售减少。正如这个例子所示，自相关是观察不同时间段如何影响当前时间段结果的一种方法。在本章的“时间序列预测模型”部分，我们将尝试**自回归积分移动平均**（**ARIMA**）模型，其中它的自回归部分使用这些滞后变量进行时间序列预测建模。
- en: '**Partial autocorrelation**, in contrast to autocorrelation, ignores the influences
    of intermediate lags. Unlike autocorrelation, partial autocorrelation measures
    the direct impact and correlation at each lag. The `plot_pacf` function can be
    used to plot partial autocorrelations, as in the following code:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '**偏自相关**，与自相关相比，忽略了中间滞后阶段的影响。与自相关不同，偏自相关测量的是每个滞后阶段的直接影响和关联。可以使用`plot_pacf`函数来绘制偏自相关，如下面的代码所示：'
- en: '[PRE8]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Here, we are plotting partial autocorrelations up to period 15\. The chart
    should look as follows:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们绘制了直到周期15的偏自相关图。图表应该如下所示：
- en: '![](img/B30999_04_05.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B30999_04_05.png)'
- en: 'Figure 4.5: Partial autocorrelation plot of monthly sales data'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.5：月度销售数据的偏自相关图
- en: As you can see, the degrees of correlations at each lag are different compared
    to the previous autoregression chart. This is due to the fact that partial autoregression
    measures the direct correlation at each lag, whereas autoregression includes the
    influence of intermediate lags. In this example, we can see that there is a significant
    positive partial autocorrelation at lag 1 and a negative partial autocorrelation
    at lag 4\. This suggests that the prior month’s increase or decrease in sales
    is likely to result in an increase and decrease in the current month’s sales,
    respectively, whereas the increase in sales 4 months ago is likely to result in
    a decrease in the current month’s sales, excluding the influences of the sales
    results in the months between. Intuitively, these can be a result of natural business
    cycles, where, if your business cycle is quarterly, then you will likely see negative
    autocorrelations at lags 3–4, and for semi-annual cycles, you are likely to see
    negative autocorrelations at lags 6–7.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，与之前的自回归图相比，每个滞后阶段的关联程度不同。这是因为偏自回归测量的是每个滞后阶段的直接关联，而自回归包括中间滞后阶段的影响。在这个例子中，我们可以看到在滞后1处存在显著的积极偏自相关，在滞后4处存在消极偏自相关。这表明上个月的销售增加或减少很可能会分别导致本月销售的增加和减少，而四个月前的销售增加很可能会导致本月销售的减少，排除中间月份销售结果的影响。直观地说，这些可能是自然商业周期的影响，如果你的商业周期是季度性的，那么你很可能会在滞后3-4处看到负自相关，而对于半年周期，你很可能会在滞后6-7处看到负自相关。
- en: Product trends
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 产品趋势
- en: All of the analysis and visualizations we have discussed so far can be applied
    to more granular levels. We have only looked at the overall monthly sales time-series
    data. However, we can dissect it by different products and discover how each product
    may have different overall trends and cyclical nature in the demands. We can also
    look at how different states or geographic regions show trends and business cycles
    that may be different from the overall sales trends.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 我们之前讨论的所有分析和可视化都可以应用于更细粒度的水平。我们只看了整体月度销售时间序列数据。然而，我们可以按不同的产品来剖析，发现每个产品可能具有不同的整体趋势和需求周期性。我们还可以观察不同州或地理区域如何显示出与整体销售趋势可能不同的趋势和商业周期。
- en: 'For illustration purposes, we will dissect the trends by different product
    categories. Take a look at the following code:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 为了说明目的，我们将按不同产品类别来剖析趋势。请看以下代码：
- en: '[PRE9]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'First, we create time-series records for each product category. Largely, we
    are creating three time series of monthly `Furniture`, `Office Supplies`, and
    `Technology` sales, and then showing these charts side by side. The resulting
    charts look as follows:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们为每个产品类别创建时间序列记录。主要来说，我们创建了三个月度销售时间序列，即“家具”、“办公用品”和“技术”，然后并排展示这些图表。生成的图表如下：
- en: '![](img/B30999_04_06.png)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B30999_04_06.png)'
- en: 'Figure 4.6: Visualization of monthly sales data for Furniture, Office Supplies,
    and Technology products'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.6：家具、办公用品和技术产品月度销售数据的可视化
- en: The overall trends are similar across these three product lines, where the sales
    spike in September and November/December. However, the spike in March sales is
    the most prominent in Technology sales and there was a rapid growth in Furniture
    sales from January 2017\. Also, Office Supplies sales seem to spike more frequently
    than the other two product lines; they seem to spike every quarter or so, which
    may be a result of quarterly restocking of office supplies. As these results show,
    different product lines tend to show slightly different behaviors across time.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 这三个产品线之间的整体趋势相似，销售在九月和十一/十二月达到峰值。然而，三月销售峰值在技术销售中最为突出，家具销售从2017年1月开始快速增长。此外，办公用品销售似乎比其他两个产品线更频繁地达到峰值；它们似乎每季度达到一次峰值，这可能是由于季度办公用品补货的结果。正如这些结果所示，不同的产品线往往在时间上表现出略有不同的行为。
- en: Try diving deeper into segmentation and how time-series data differs by different
    segmentations. Try dissecting different variables, such as region, city, and sub-category!
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试深入了解细分以及时间序列数据如何因不同的细分而异。尝试剖析不同的变量，如地区、城市和子类别！
- en: Trend and seasonality decomposition
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 趋势和季节性分解
- en: 'We have seen how there are natural trends and cycles that are shown from the
    time-series data. By visualizing charts and utilizing moving averages, we were
    able to identify overall trends and seasonalities. However, there are more statistical
    approaches to decomposing time-series data into trend and seasonality components.
    Largely, there are two main ways to do time-series decomposition:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经看到，从时间序列数据中显示了自然趋势和周期。通过可视化图表和利用移动平均线，我们能够识别出整体趋势和季节性。然而，还有更多统计方法可以将时间序列数据分解为趋势和季节性成分。主要来说，有两种主要的时间序列分解方法：
- en: '**Additive**: As the name suggests, the **additive** time-series decomposition
    method decomposes the data into trend, seasonality, and error (which is the component
    that cannot be explained by the overall trend and seasonality) so that when they
    are summed together, it can reconstruct the original time-series data:'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**加法分解**：正如其名所示，**加法分解**的时间序列分解方法将数据分解为趋势、季节性和误差（这是不能由整体趋势和季节性解释的成分），这样当它们相加时，可以重建原始时间序列数据：'
- en: '*Y*[t] = *Trend*[t] + *Seasonality*[t] + *Error*[t]'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '*Y*[t] = *Trend*[t] + *Seasonality*[t] + *Error*[t]'
- en: '**Multiplicative**: On the other hand, the **multiplicative** time-series decomposition
    method decomposes the data into trend, seasonality, and error in a way that when
    they are multiplied together, the original time-series data can be reconstructed.
    The equation looks as follows:'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**乘法分解**：另一方面，**乘法分解**的时间序列分解方法将数据分解为趋势、季节性和误差（这是不能由整体趋势和季节性解释的成分），当它们相乘时，可以重建原始时间序列数据。方程如下：'
- en: '*Y*[t] = *Trend*[t] * *Seasonality*[t] * *Error*[t]'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '*Y*[t] = *Trend*[t] * *Seasonality*[t] * *Error*[t]'
- en: Now let’s look at these methods in greater detail.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们更详细地看看这些方法。
- en: Additive time series decomposition
  id: totrans-79
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 加法时间序列分解
- en: 'Conveniently, the `statsmodels` package provides a function for easy trend
    and seasonality decomposition. As an example, we will decompose monthly `Furniture`
    sales data and see what trends and seasonality it has. Take a look at the following
    code:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 便利的是，`statsmodels`包提供了一个易于进行趋势和季节性分解的函数。作为一个例子，我们将分解月度`家具`销售数据，看看它有什么趋势和季节性。请看以下代码：
- en: '[PRE10]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: As this code suggests, we are using the `seasonal_decompose` function for the
    time-series decomposition of monthly `Furniture` sales data, which is in the variable
    with the name `furniture_monthly_sales`. Another thing to note is the `model`
    parameter to the `seasonal_decompose` function, with which you can decide whether
    to use additive or multiplicative approaches.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 如此代码所示，我们正在使用`seasonal_decompose`函数对月度`家具`销售数据进行时间序列分解，该数据存储在名为`furniture_monthly_sales`的变量中。另一个需要注意的事项是`seasonal_decompose`函数的`model`参数，通过它可以决定是否使用加法或乘法方法。
- en: 'This time-series decomposition can easily be visualized using the `plot` function
    of the output of the `seasonal_decompose` function. The chart should look something
    like the following:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过`seasonal_decompose`函数输出的`plot`函数轻松可视化此时间序列分解。图表应类似于以下内容：
- en: '![](img/B30999_04_07.png)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B30999_04_07.png)'
- en: 'Figure 4.7: Time-series decomposition plot of monthly furniture sales data'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.7：月度家具销售数据的时间序列分解图
- en: The top chart shows the original time-series data, which, in our case, is the
    monthly `Furniture` data. The second chart from the top shows the decomposed trend.
    As expected, there is a clear uptrend, where the sales grow year over year. The
    third chart is the decomposed seasonality chart. Here, it shows clear spikes in
    sales during September, November, and December and drops in sales during February.
    Lastly, the bottom chart shows the residuals or the error terms when this data
    is decomposed into trend and seasonality. According to the equation discussed
    in the previous section, these bottom three charts correspond to each decomposed
    component of the original time-series data.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 顶部图表显示了原始时间序列数据，在我们的案例中是月度`家具`数据。顶部第二张图表显示了分解的趋势。正如预期的那样，存在一个明显的上升趋势，销售额逐年增长。第三张图表是分解的季节性图表。在这里，它显示了9月、11月和12月销售量的明显峰值，以及2月销售量的下降。最后，底部图表显示了分解后的残差或误差项。根据前一小节中讨论的方程，这三张底部图表对应于原始时间序列数据的每个分解成分。
- en: 'When properly decomposed, the error terms should be stationary, meaning there
    should not be a noticeable pattern in the residuals that are dependent on time.
    In our example, there is no noticeable pattern across time in the residuals, so
    the decomposed series seems reasonable. We can examine how well the decomposed
    series captures the original series by reconstructing the time-series data based
    on the trend and seasonality decomposition and how big a gap there is between
    the original series and the reconstructed series. Take a look at the following
    code:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 当适当分解时，误差项应该是平稳的，这意味着残差中不应有依赖于时间的明显模式。在我们的例子中，残差在时间上没有明显的模式，因此分解序列似乎是合理的。我们可以通过基于趋势和季节性分解重构时间序列数据以及原始序列与重构序列之间的差距来检验分解序列捕捉原始序列的效果。请看以下代码：
- en: '[PRE11]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: The first line shows how we can reconstruct the time-series data using the decomposed
    trend and seasonality. Since we have used the additive approach for time-series
    decomposition in this example, we simply sum the trend and seasonality components
    together to get the reconstructed series.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 第一行显示了如何使用分解的趋势和季节性来重构时间序列数据。由于在本例中我们使用了加法方法进行时间序列分解，我们只需简单地将趋势和季节性成分相加即可得到重构序列。
- en: 'There are three metrics that we are using to measure the similarity or dissimilarity
    between the original series and the reconstructed series:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用三个指标来衡量原始序列与重构序列之间的相似性或差异性：
- en: '**Correlation**: Using the `numpy` package’s `corrcoef` function, this metric
    measures the similarity between the original and reconstructed series.'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**相关性**：使用`numpy`包的`corrcoef`函数，此指标衡量原始序列与重构序列之间的相似性。'
- en: '**Euclidean distance**: This is the square root of the sum of the squared errors.
    This metric measures how big of a gap there is between the original and reconstructed
    series.'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**欧几里得距离**：这是平方误差和的平方根。此指标衡量原始序列与重构序列之间有多大差距。'
- en: '**Root mean squared error** (**RMSE**): This is the square root of the mean
    of the squared errors. This metric measures the degree of error between the original
    and reconstructed series.'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**均方根误差**（**RMSE**）：这是平方误差均值的平方根。此指标衡量原始序列和重建序列之间的误差程度。'
- en: 'The following code can be used:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用以下代码：
- en: '[PRE12]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'The result should look like the following:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 结果应如下所示：
- en: '[PRE13]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'You can also visually compare the reconstructed series against the original
    series with the following code:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以使用以下代码直观地比较重建序列与原始序列：
- en: '[PRE14]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'The chart should look as follows:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 图表应如下所示：
- en: '![](img/B30999_04_08.png)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B30999_04_08.png)'
- en: 'Figure 4.8: Monthly furniture sales data along with decomposed trend and reconstructed
    series'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.8：家具月销售数据及其分解趋势和重建序列
- en: As you can see from this chart and as expected from the previous metrics, the
    reconstructed series does not capture 100% of the original series. However, they
    move closely together and the reconstructed series has a high degree of similarity
    with the original series.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 如您从这张图表中可以看到，并且正如之前指标所预期的那样，重建序列并没有捕捉到原始序列的100%。然而，它们紧密地移动在一起，并且重建序列与原始序列具有高度相似性。
- en: Multiplicative time series decomposition
  id: totrans-104
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 乘法时间序列分解
- en: 'We will compare the results of the additive approach against the results of
    the multiplicative approach results to see which one captures the original time
    series more closely. As you may have guessed, you can replace the `model` parameter
    of the `seasonal_decompose` function with `multiplicative`, as shown in the following
    code:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将比较加法方法的成果与乘法方法的成果，以查看哪一个更接近原始时间序列。正如你可能已经猜到的，你可以将`seasonal_decompose`函数的`model`参数替换为`multiplicative`，如下所示：
- en: '[PRE15]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'The resulting chart should look as follows:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 生成的图表应如下所示：
- en: '![](img/B30999_04_09.png)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B30999_04_09.png)'
- en: 'Figure 4.9: Time-series decomposition plot of monthly furniture sales data
    with the multiplicative approach'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.9：使用乘法方法对家具月销售数据进行的时间序列分解图
- en: 'This should look very similar to the chart with the additive approach. However,
    there are two key things that are noticeably different:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 这应该与加法方法的图表非常相似。然而，有两个关键的不同之处值得注意：
- en: The y-axis of the *Seasonal chart*, which is the second chart from the bottom,
    ranges from **0** to about **2.0**, whereas the y-axis of the Seasonal component
    of the additive chart ranges from about – 10,000 to 35,000.
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*季节图*的y轴，即从底部数的第二个图表，范围从**0**到大约**2.0**，而加法图的季节性成分的y轴范围从大约-10,000到35,000。'
- en: Similarly, the y-axis of the *Residual chart*, which is the bottom chart, ranges
    from **0** to about **1.5**.
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 同样，*残差图*的y轴，即最底部的图表，范围从**0**到大约**1.5**。
- en: 'As you may have guessed, this is because we used the multiplicative approach
    in this example as opposed to the additive approach. In order to reconstruct the
    original series from the decomposed trend and seasonality components, we need
    to multiply these two components together, as in the following code:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所猜到的，这是因为我们在本例中使用了乘法方法，而不是加法方法。为了从分解的趋势和季节性成分中重建原始序列，我们需要将这两个成分相乘，如下所示：
- en: '[PRE16]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Similar to before, we can measure the degree of similarity between the reconstructed
    series from the multiplicative approach and the original series based on the three
    metrics we have used before (correlation, Euclidean distance, and RMSE) using
    the following code:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 与之前类似，我们可以使用以下代码，通过我们之前使用的三个指标（相关系数、欧几里得距离和RMSE）来衡量从乘法方法重建的序列与原始序列之间的相似度：
- en: '[PRE17]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'The similarity measures can be viewed using the following code:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用以下代码查看相似度指标：
- en: '[PRE18]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'This gives us the following results:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 这给我们以下结果：
- en: '[PRE19]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: If you compare these results against the previous results with the additive
    approach, you will notice that the Euclidean distance and RMSE are much lower
    with the multiplicative approach, while the correlation measure is similar. The
    Euclidean distance with the multiplicative approach is about **700** less than
    it is with the additive approach, and the RMSE with the multiplicative approach
    is about **100** less than it is with the additive approach. This suggests that
    the multiplicative decomposition approach may capture the original time-series
    data better in this case than the additive approach.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你将这些结果与使用加法方法的前期结果进行比较，你会注意到，使用乘法方法时，欧几里得距离和RMSE要低得多，而相关度指标相似。乘法方法的欧几里得距离比加法方法低约**700**，乘法方法的RMSE比加法方法低约**100**。这表明，在这种情况下，乘法分解方法可能比加法方法更好地捕捉原始时间序列数据。
- en: 'Similarly, we can visually inspect the multiplicative approach’s reconstruction
    results with the following code:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，我们可以使用以下代码可视化检查乘法方法的重建结果：
- en: '[PRE20]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'The resulting chart should look as follows:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 生成的图表应如下所示：
- en: '![](img/B30999_04_10.png)'
  id: totrans-125
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B30999_04_10.png)'
- en: 'Figure 4.10: Monthly furniture sales plot with the decomposed trend and reconstructed
    series with the multiplicative approach'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.10：使用乘法方法分解趋势和重建系列后的月度家具销售图
- en: We have seen how we can decompose time-series data statistically with the `statsmodels`
    package in this section. As previously mentioned, having an in-depth understanding
    of general trends as well as seasonal trends is critical in formulating product
    and target marketing strategies as the alignments of the marketing strategies
    with these trends and the timing of the actions ahead of the expected trends dictate
    the successes and failures of marketing campaigns. You do not want to be too late
    in the trend but you also do not want to be too early in the trend. This time-series
    decomposition technique should be a handy tool to strategize and time your marketing
    campaigns.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们看到了如何使用`statsmodels`包统计地分解时间序列数据。如前所述，深入了解一般趋势以及季节性趋势对于制定产品和目标营销策略至关重要，因为营销策略与这些趋势的匹配以及提前于预期趋势采取行动的时间决定了营销活动的成功与失败。你不想在趋势中太晚，但也不想在趋势中太早。这种时间序列分解技术应该是一个便于策略规划和时间营销活动的实用工具。
- en: Time series forecasting models
  id: totrans-128
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 时间序列预测模型
- en: The overall trends and the seasonalities bring valuable insights for efficient
    and timely marketing campaigns. We have discussed how time-series decomposition
    can help marketers put out timely promotions in order to capture the maximum sales
    and marketing potential when the demands are expected to rise, as well as minimize
    the dips and excess inventory when the demands are expected to fall via out-of-season
    sales promotions or focusing on the products that have different peak and trough
    cycles.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 整体趋势和季节性为高效的及时营销活动提供了宝贵的见解。我们讨论了时间序列分解如何帮助营销人员及时推出促销活动，以便在需求预期上升时捕捉最大的销售和营销潜力，以及在需求预期下降时通过季节性销售促销或专注于具有不同峰值和谷值周期的产品来最小化下降和过剩库存。
- en: 'We can take a step further with **machine learning** (**ML**) and **artificial
    intelligence** (**AI**) and build time-series forecasting models. The future forecasts
    with these AI/ML models can play a pivotal role not only for marketing but also
    for various other business units, including sales, operations, finance, supply
    chain, procurement, and many others. By utilizing time-series forecasts, marketers
    can optimize their marketing goals in numerous ways:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以进一步利用**机器学习**（**ML**）和**人工智能**（**AI**）来构建时间序列预测模型。这些AI/ML模型的未来预测不仅对营销至关重要，而且对销售、运营、财务、供应链、采购等多个业务单元也起着关键作用。通过利用时间序列预测，营销人员可以以多种方式优化他们的营销目标：
- en: If a marketing goal is to promote a *new product*, then the time-series forecast
    model output can inform the marketer when will be the best time to start promoting
    based on the expected demand rises or falls of similar product categories.
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果营销目标是推广一个**新产品**，那么时间序列预测模型输出可以告知营销人员何时开始推广最为合适，这基于对类似产品类别预期需求上升或下降的预测。
- en: If a marketing goal is to promote an *off-season sales* increase, then the time-series
    model can be built to forecast the types of off-season promotions that may result
    in the highest sales.
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果营销目标是促进**季节性销售**的增长，那么可以构建时序模型来预测可能导致最高销售额的季节性促销类型。
- en: If a marketing goal is to clean out the *excess inventory*, a time-series model
    that forecasts the different demands in different regions or demographics can
    help the marketer target certain regions or demographics for maximum efficiency
    in reducing the excess inventory.
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果营销目标是清理**过剩库存**，那么可以预测不同地区或人口统计数据的不同需求的时序模型可以帮助营销人员针对特定地区或人口统计数据进行最大效率的过剩库存减少。
- en: 'There are numerous time-series forecasting algorithms that can be used to build
    forecast models. Ranging from traditional statistical time-series models to more
    modern deep learning-based time-series models, there are various algorithms that
    can be used to forecast time-series data. In this section, we will experiment
    with the two most frequently used time-series models: ARIMA and Prophet.'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多时间序列预测算法可以用来构建预测模型。从传统的统计时间序列模型到更现代的基于深度学习的时间序列模型，有各种算法可以用来预测时间序列数据。在本节中，我们将实验两种最常用的时序模型：ARIMA和Prophet。
- en: ARIMA
  id: totrans-135
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: ARIMA
- en: 'The **ARIMA** model is a statistical model that is often used to predict future
    time-series data based on past values. ARIMA is a form of regression analysis
    that we discussed in *Chapter 3*, but there are three key components that the
    ARIMA model is composed of:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '**ARIMA**模型是一种统计模型，通常用于根据历史值预测未来的时间序列数据。ARIMA是我们讨论过的回归分析的一种形式，它在**第3章**中有所提及，但ARIMA模型由以下三个关键组成部分构成：'
- en: '**Autoregression**: The **AR** part of the ARIMA model'
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**自回归**：ARIMA模型中的**AR**部分'
- en: Similar to what we discussed for autocorrelation, autoregression is a regression
    on its own lagged variables, where each lagged variable is a feature of the forecasting
    model.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 与我们讨论的自相关类似，自回归是对其滞后变量的回归，其中每个滞后变量都是预测模型的一个特征。
- en: '**Integrated**: The **I** part of the ARIMA model'
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**差分**：ARIMA模型中的**I**部分'
- en: This is the difference between the values and their previous values to achieve
    stationarity that, as discussed previously, means the errors do not depend on
    the time component.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 这是指值与其前一个值之间的差异，以实现平稳性，正如之前讨论的，这意味着误差不依赖于时间成分。
- en: '**Moving Average**: The **MA** part of the ARIMA model'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**移动平均**：ARIMA模型中的**MA**部分'
- en: As discussed previously, the moving average is an average over a rolling window
    and the ARIMA model regresses on these moving averages.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，移动平均是在滚动窗口上的平均，ARIMA模型对这些移动平均进行回归。
- en: 'Each of these three components – **Autoregression** (**AR**), **Integrated**
    (**I**), and **Moving Average** (**MA**) – in the ARIMA model has its own parameter.
    Typically, these parameters have notations of *p*, *d*, and *q*, and are defined
    as follows:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: ARIMA模型中的这三个组成部分——**自回归**（**AR**）、**差分**（**I**）和**移动平均**（**MA**）——各自有自己的参数。通常，这些参数用*p*、*d*和*q*表示，定义如下：
- en: '*p*: The number of lag periods in the model for the AR component'
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*p*：模型中AR部分的滞后期数'
- en: '*d*: The number of times data are differenced for the I component'
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*d*：I部分的差分次数'
- en: '*q*: The rolling window of the moving average for the MA component'
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*q*：MA部分的移动平均滚动窗口'
- en: Training the ARIMA model
  id: totrans-147
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 训练ARIMA模型
- en: 'The `statsmodels` package in Python has a module that makes it easy for us
    to build ARIMA models. Take a look at the following code:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: Python中的`statsmodels`包有一个模块，使我们能够轻松构建ARIMA模型。请看以下代码：
- en: '[PRE21]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: We recommend you try various combinations when you actually build a forecasting
    model with ARIMA to find the most optimal set of parameters. Here, we are training
    our ARIMA model up to June 2017 and we will test our predictions for July to December
    2017.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 我们建议您在用ARIMA实际构建预测模型时尝试各种组合，以找到最优的参数集。在这里，我们正在训练我们的ARIMA模型，直到2017年6月，并将测试2017年7月至12月的预测。
- en: 'With the following command, we can view the trained model results:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下命令，我们可以查看训练好的模型结果：
- en: '[PRE22]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'The model summary looks as follows:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 模型总结如下：
- en: '![](img/B30999_04_11.png)'
  id: totrans-154
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B30999_04_11.png)'
- en: 'Figure 4.11: Summary of the ARIMA model fit'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.11：ARIMA模型拟合的总结
- en: 'Some of the key things to note in this model summary output are as follows:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 在此模型总结输出中需要注意的一些关键事项如下：
- en: '**ar**: These are the AR components within the ARIMA model. As we have given
    12 for the AR component, there are 12 lagged variables that this model regresses
    on and each `coef` shows the coefficient of each lag variable with the target
    variable.'
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**ar**：这些是ARIMA模型中的AR成分。由于我们为AR成分给出了12，因此有12个滞后变量是这个模型回归的，每个`coef`显示了每个滞后变量与目标变量的系数。'
- en: '**ma**: These are the MA components within the ARIMA model. We have given 3
    for our example for the MA component, so there are three variables that the model
    regresses on and each `coef` shows the coefficient of each MA variable with the
    target variable.'
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**ma**：这些是ARIMA模型中的MA成分。在我们的例子中，我们为MA成分给出了3，因此有三个变量是模型回归的，每个`coef`显示了每个MA变量与目标变量的系数。'
- en: '**AIC/BIC**: We won’t go into too much detail about these metrics, but the
    **Akaike information criterion** (**AIC**) and the **Bayes information criterion**
    (**BIC**) are the metrics that can be used to evaluate the model fit and compare
    among different models. The lower the values, the better the model fit is without
    overfitting.'
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**AIC/BIC**：我们不会过多地详细介绍这些指标，但**赤池信息量准则**（**AIC**）和**贝叶斯信息准则**（**BIC**）是可以用来评估模型拟合度并比较不同模型的指标。值越低，模型的拟合度越好，且没有过度拟合。'
- en: To find an optimal set of parameters, you will have to run numerous simulations
    with different sets of `(p, q, d)` parameters. Or, you can also use a package,
    such as `pmdarima`, to automatically discover the optimal parameters for the ARIMA
    model.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 要找到一组最优的参数，您将不得不运行多个具有不同`(p, q, d)`参数集的模拟。或者，您也可以使用像`pmdarima`这样的包来自动发现ARIMA模型的最优参数。
- en: 'Reference: [https://alkaline-ml.com/pmdarima/modules/generated/pmdarima.arima.auto_arima.html](https://alkaline-ml.com/pmdarima/modules/generated/pmdarima.arima.auto_arima.html)'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 参考：[https://alkaline-ml.com/pmdarima/modules/generated/pmdarima.arima.auto_arima.html](https://alkaline-ml.com/pmdarima/modules/generated/pmdarima.arima.auto_arima.html)
- en: ARIMA model diagnostics
  id: totrans-162
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ARIMA模型诊断
- en: 'The `statsmodels` package provides a handy way of diagnosing the trained ARIMA
    model. The `plot_diagnostics` function of the `ARIMA` model can be used to visualize
    the key diagnostic plots, as in the following code:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: '`statsmodels`包提供了一个方便的方式来诊断训练好的ARIMA模型。`ARIMA`模型的`plot_diagnostics`函数可以用来可视化关键诊断图，如下面的代码所示：'
- en: '[PRE23]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'The chart should look as follows:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 图表应如下所示：
- en: '![](img/B30999_04_12.png)'
  id: totrans-166
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B30999_04_12.png)'
- en: 'Figure 4.12: ARIMA model diagnostics plots'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.12：ARIMA模型诊断图
- en: 'As shown in this chart, there are four components in this diagnostic plot.
    Let’s dive deeper into each of these:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 如此图表所示，此诊断图中包含四个组件。让我们深入探讨每个组件：
- en: '**Standardized residuals over time (top-left chart)**: This chart shows the
    residuals or the errors across time. For a perfect model, we would expect it to
    be completely random without any noticeable pattern. However, in our case, there
    still are some minor seasonal patterns that are noticeable.'
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**标准化残差随时间变化（左上角图表）**：此图表显示了随时间变化的残差或误差。对于一个完美的模型，我们期望它是完全随机的，没有任何明显的模式。然而，在我们的案例中，仍然有一些微小的季节性模式是可观察到的。'
- en: '**Histogram and estimated density of standardized residuals (top-right chart)**:
    This chart shows the distribution of the standardized residuals. For a perfect
    model, we would expect it to show a Gaussian or normal curve with a mean of 0
    and a standard deviation of 1\. Our model is very close to the theoretical normal
    curve, which suggests that the residuals are nearly normally distributed.'
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**直方图和标准化残差的估计密度（右上角图表）**：此图表显示了标准化残差的分布。对于一个完美的模型，我们期望它显示一个均值为0、标准差为1的高斯或正态曲线。我们的模型非常接近理论上的正态曲线，这表明残差几乎呈正态分布。'
- en: '**Normal Q-Q plot (bottom-left chart)**: This chart shows theoretical quantile
    distributions against the actual quantile distributions of the fitted model. It
    suggests that the residuals are normal when the dots are closely aligned with
    the straight line. In our case, it is not perfect but somewhat closely aligned
    with the straight line, which suggests that the residuals are nearly normally
    distributed.'
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**正态Q-Q图（左下角图表）**：此图表显示了理论分位数分布与拟合模型的实际分位数分布。它表明，当点紧密地与直线对齐时，残差是正态的。在我们的案例中，它并不完美，但与直线有些接近，这表明残差几乎呈正态分布。'
- en: '**Correlogram (bottom-right chart)**: This chart shows the autocorrelation
    of residual terms across lag periods. The smaller the correlation values, the
    more random the residuals are. Our example shows minimal correlations that suggest
    that the residuals are not correlated with each other.'
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**自相关图（右下角图表）**：此图表显示了滞后期间残差项的自相关。相关值越小，残差越随机。我们的示例显示了最小的相关性，这表明残差彼此之间没有相关性。'
- en: In summary, these diagnostic plots tell us that the residuals are generally
    normally distributed in our case.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 总结来说，这些诊断图告诉我们，在我们的情况下，残差通常是正态分布的。
- en: Forecasting with the ARIMA model
  id: totrans-174
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用ARIMA模型进行预测
- en: 'Now it is finally the time to make predictions with the ARIMA model that we
    have trained. Take a look at the following code first:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，终于到了使用我们训练好的ARIMA模型进行预测的时候了。首先看看以下代码：
- en: '[PRE24]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: The `statsmodels` package’s `ARIMA` model provides a function named `get_forecast`.
    The `steps` parameter is used to define how many steps into the future you would
    like to make predictions for. It also provides a function named `conf_int`, which
    gives a confidence band of the predictions.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: '`statsmodels`包的`ARIMA`模型提供了一个名为`get_forecast`的函数。`steps`参数用于定义您希望预测的未来步骤数。它还提供了一个名为`conf_int`的函数，它给出了预测的置信带。'
- en: 'We can easily plot the prediction results with the following code:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以用以下代码轻松地绘制预测结果：
- en: '[PRE25]'
  id: totrans-179
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'When you run this code, you should get a chart similar to the following:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 当您运行此代码时，您应该得到一个类似于以下图表的图表：
- en: '![](img/B30999_04_13.png)'
  id: totrans-181
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B30999_04_13.png)'
- en: 'Figure 4.13: ARIMA model prediction plot'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.13：ARIMA模型预测图
- en: This chart shows previous monthly furniture sales data as well as the predictions
    and confidence band or interval for the predictions. As you may remember, we have
    trained the model with data up to June 2017 and we have made predictions for six
    steps from July 2017, which is from July to December 2017.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 此图表显示了之前的月度家具销售数据以及预测和置信带或区间。如您所记得，我们使用截至2017年6月的数据训练了模型，并对2017年7月至12月的六个步骤进行了预测，即从7月到12月。
- en: 'As you can see from these predictions, the predictions from the ARIMA model
    are directionally well aligned with the actual observed data. Also, the actual
    values fall within the confidence bands, suggesting the reliability of the usage
    of the predictions based on the confidence intervals. One of the frequently used
    metrics for measuring the accuracy of time-series forecasts is RMSE, using the
    following code:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 如您从这些预测中可以看到，ARIMA模型的预测结果与实际观察到的数据方向上很好地吻合。此外，实际值落在置信带内，这表明基于置信区间的预测使用是可靠的。衡量时间序列预测准确率常用的指标之一是RMSE，以下代码展示了如何使用：
- en: '[PRE26]'
  id: totrans-185
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '[PRE27]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: This gives us the result `5913.227463714012`.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 这给出了结果`5913.227463714012`。
- en: Here, the RMSE of our predictions for the next 6 months was about 5913\. We
    will compare this value against other time-series forecasting models’ values that
    we will experiment with in the following sections.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们对未来6个月的预测的RMSE大约是5913。我们将在接下来的章节中与其他时间序列预测模型的值进行比较。
- en: There are many other metrics that can be used to measure the time-series model
    performance, aside from RMSE. Some other commonly used metrics are **mean absolute
    error** (**MAE**), **mean absolute percentage error** (**MAPE**), and **mean absolute
    scaled error** (**MASE**). Try some other regression metrics and see how they
    differ from each other!
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 除了RMSE之外，还有许多其他指标可以用来衡量时间序列模型的表现。一些其他常用的指标包括**平均绝对误差**（**MAE**）、**平均绝对百分比误差**（**MAPE**）和**平均绝对缩放误差**（**MASE**）。尝试一些其他的回归指标，看看它们之间有何不同！
- en: Prophet time-series modeling
  id: totrans-190
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Prophet时间序列建模
- en: '**Prophet** is an open-source package from Meta (formerly Facebook) for time-series
    forecasting. Similar to the ARIMA model we have just discussed, the Prophet model
    also takes trend and seasonality into consideration, except there is more flexibility
    and more parameters you can fine-tune the time-series models with, and holiday
    effects are also included. So, there are largely three components in the Prophet
    model:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: '**Prophet**是Meta（前身为Facebook）的一个开源包，用于时间序列预测。与刚刚讨论的ARIMA模型类似，Prophet模型也考虑了趋势和季节性，但具有更多的灵活性，并且可以调整更多参数来微调时间序列模型，还包括假日效应。因此，Prophet模型主要包含以下三个部分：'
- en: '**Growth (or trend)**: Prophet models overall growth or trend. There are three
    assumptions you can make for your growth factor of the time-series data:'
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**增长（或趋势）**：Prophet模型整体的增长或趋势。对于时间序列数据中的增长因子，您可以做出以下三个假设：'
- en: '**Linear**: This is the default assumption of Prophet and is used when the
    overall trend is expected to be linear.'
  id: totrans-193
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**线性**：这是Prophet的默认假设，当整体趋势预期为线性时使用。'
- en: '**Logistic**: This should be used when there is a cap or floor in the trend
    of your time-series data.'
  id: totrans-194
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**对数**：当您的时序数据趋势中存在上限或下限时，应使用此选项。'
- en: '**Flat**: This is when you assume there is no growth over time.'
  id: totrans-195
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**平稳**：这是指您假设随着时间的推移没有增长。'
- en: '**Seasonality**: By default, this is set to *auto*, but depending on your observations
    within your time-series data, you can set it to model daily, weekly, or yearly
    seasonalities.'
  id: totrans-196
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**季节性**：默认情况下，这设置为*auto*，但根据您在时间序列数据中的观察，您可以将其设置为模型每日、每周或年度季节性。'
- en: '**Holidays**: One of the key differentiators the Prophet has is its notion
    of holidays. As holidays have significant impacts on time-series outcomes, it
    is beneficial to be able to model holiday effects on your time-series data with
    Prophet.'
  id: totrans-197
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**节假日**：Prophet的一个关键区别在于其对节假日的理解。由于节假日对时间序列结果有重大影响，因此能够使用Prophet对时间序列数据中的节假日效应进行建模是有益的。'
- en: In this section, we are going to experiment with modeling the monthly furniture
    sales with Prophet.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将使用Prophet对月度家具销售进行建模实验。
- en: For more detailed information on the parameters that you can fine-tune with
    Prophet, we suggest you visit their official site ([https://facebook.github.io/prophet/docs/quick_start.html](https://facebook.github.io/prophet/docs/quick_start.html))
    or their GitHub page ([https://github.com/facebook/prophet/blob/main/python/prophet/forecaster.py](https://github.com/facebook/prophet/blob/main/python/prophet/forecaster.py)).
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 关于您可以使用Prophet微调的参数的更详细信息，我们建议您访问他们的官方网站([https://facebook.github.io/prophet/docs/quick_start.html](https://facebook.github.io/prophet/docs/quick_start.html))或他们的GitHub页面([https://github.com/facebook/prophet/blob/main/python/prophet/forecaster.py](https://github.com/facebook/prophet/blob/main/python/prophet/forecaster.py))。
- en: Training a Prophet model
  id: totrans-200
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 训练Prophet模型
- en: 'In order to train a Prophet model, make sure you have the package installed
    first. You can use the following command to have the package installed:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 为了训练一个Prophet模型，请确保您已经安装了该包。您可以使用以下命令来安装包：
- en: '[PRE28]'
  id: totrans-202
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'The first step to training a Prophet model is to prepare the data that it expects.
    Take a look at the following code:'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 训练Prophet模型的第一个步骤是准备它期望的数据。请看以下代码：
- en: '[PRE29]'
  id: totrans-204
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: As you can see from this code, we are using monthly furniture data up to December
    2016 as our train set. The requirements for the Prophet model for the train set
    are the columns `ds` and `y`, where `ds` is for the dates and times of a given
    record and `y` is for the time-series values.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 如您从这段代码中可以看到，我们使用截至2016年12月的月度家具数据作为我们的训练集。对于Prophet模型对训练集的要求是列`ds`和`y`，其中`ds`用于给定记录的日期和时间，而`y`用于时间序列值。
- en: 'With this train set, we can easily train a Prophet model using the following
    code:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 使用此训练集，我们可以轻松地使用以下代码训练一个Prophet模型：
- en: '[PRE30]'
  id: totrans-207
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: Here, we are initializing the model with the `Prophet` class and with the default
    parameters, which essentially instructs the model to assume linear growth trends
    and seasonality with no holiday effects. Then, we use the `fit` function with
    the train set DataFrame that we have prepared previously to train the model.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们使用`Prophet`类和默认参数初始化模型，这实际上指示模型假设线性增长趋势和没有节假日效应的季节性。然后，我们使用`fit`函数和之前准备好的训练集DataFrame来训练模型。
- en: Forecasting with a Prophet model
  id: totrans-209
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用Prophet模型进行预测
- en: 'Now that we have a trained Prophet model, it is time to make some predictions.
    One thing we need to do for a Prophet model to make predictions is to generate
    a series of dates it should make predictions for. Prophet provides a handy function
    to do this, as shown in the following:'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经训练了一个Prophet模型，是时候进行一些预测了。为了使Prophet模型能够进行预测，我们需要做的一件事是生成一系列它应该预测的日期。Prophet提供了一个方便的函数来完成这项工作，如下所示：
- en: '[PRE31]'
  id: totrans-211
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: Here, we are using the `make_future_dataframe` function. The `periods` parameter
    defines how many future dates or periods we would like to make predictions for
    and the `freq` parameter defines what the frequency of each future date or period
    should be, where we define it to be monthly with `'MS'` as an input for the parameter.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们使用`make_future_dataframe`函数。`periods`参数定义了我们希望预测多少未来的日期或周期，而`freq`参数定义了每个未来日期或周期的频率，我们将它定义为每月，以`'MS'`作为参数的输入。
- en: The newly created variable should now have dates ranging from January 2014 to
    December 2018\. As you may remember, we have used monthly series up to December
    2016 as our train set, so from January 2017 to December 2018 is essentially what
    we would like to make predictions for as out-of-sample predictions.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 新创建的变量现在应包含从2014年1月到2018年12月的日期。如您所记得，我们已将截至2016年12月为止的月度序列用作我们的训练集，因此从2017年1月到2018年12月基本上是我们想要进行预测的样本外预测。
- en: 'You can use the following code for generating predictions with the trained
    model:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用以下代码生成训练模型的预测：
- en: '[PRE32]'
  id: totrans-215
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'The `predict` function generates a DataFrame, `forecast`, which contains predicted
    data for each period, such as predicted value, upper and lower bound, modeled
    trend, and so forth. Some of the key fields within the `forecast` DataFrame that
    are the most relevant to us are as follows:'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: '`predict`函数生成一个DataFrame，名为`forecast`，其中包含每个时期的预测数据，例如预测值、上下限、模型趋势等。`forecast`
    DataFrame中与我们最相关的几个关键字段如下：'
- en: '![](img/B30999_04_14.png)'
  id: totrans-217
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B30999_04_14.png)'
- en: 'Figure 14.14: Prediction results of a Prophet model'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 图14.14：Prophet模型预测结果
- en: The `yhat` column is the predicted value for a given period and `yhat_lower`
    and `yhat_upper` are the lower and upper boundaries of the predicted confidence
    intervals.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: '`yhat`列是给定时期的预测值，`yhat_lower`和`yhat_upper`是预测置信区间的下限和上限。'
- en: 'We can easily visualize these predictions and prediction confidence intervals
    with the following code:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用以下代码轻松地可视化这些预测和预测置信区间：
- en: '[PRE33]'
  id: totrans-221
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Let’s take a closer look at this code. The Prophet model object has the `plot`
    function, which generates a plot with predictions as a line chart, prediction
    intervals as an area chart, and actual values as a scatter chart. Then, we add
    out-of-sample data points as a scatter plot with the marker `x`. This chart should
    look as follows:'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们仔细看看这段代码。Prophet模型对象有一个`plot`函数，它生成一个包含预测值的折线图、预测区间为面积图、实际值为散点图的图表。然后，我们添加样本外数据点作为带有标记`x`的散点图。此图表应如下所示：
- en: '![](img/B30999_04_15.png)'
  id: totrans-223
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B30999_04_15.png)'
- en: 'Figure 4.15: Prophet model prediction plot'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.15：Prophet模型预测图
- en: 'Similar to what we have done with the ARIMA model, we can also look at the
    RMSE of the Prophet model predictions using the following code:'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 与我们使用ARIMA模型所做的一样，我们也可以使用以下代码查看Prophet模型预测的RMSE：
- en: '[PRE34]'
  id: totrans-226
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'The result is as follows:'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '[PRE35]'
  id: totrans-228
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: Compared to the RMSE of the ARIMA model, which was around 5913, the Prophet
    model with an RMSE of about 4295 seems to have predictions that are closer to
    the actuals.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 与ARIMA模型的RMSE大约为5913相比，RMSE约为4295的Prophet模型似乎有更接近实际的预测。
- en: 'Lastly, Prophet also models trend and seasonality decompositions and provides
    an easy way to visualize them, as shown in the following code:'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，Prophet还建模趋势和季节性分解，并提供了一种简单的方式来可视化它们，如下面的代码所示：
- en: '[PRE36]'
  id: totrans-231
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'The resulting chart should look as follows:'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 生成的图表应如下所示：
- en: '![](img/B30999_04_16.png)'
  id: totrans-233
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B30999_04_16.png)'
- en: 'Figure 4.16: Prophet model time-series decomposition plot'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.16：Prophet模型时间序列分解图
- en: Similar to what we have seen previously when we decomposed the time-series data
    into trend and seasonality, the Prophet model also identified an overall uptrend
    and spikes in December and drops in January. As we have seen so far, Prophet provides
    handy and reliable tools for modeling time-series data.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 与我们之前将时间序列数据分解为趋势和季节性时所见到的类似，Prophet模型也识别出整体上升趋势、12月份的峰值和1月份的下降。到目前为止，我们已经看到，Prophet提供了方便且可靠的工具来建模时间序列数据。
- en: With this knowledge, we will look at another way of modeling time-series data
    with a deep learning approach in the following section.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 基于这些知识，我们将在下一节探讨使用深度学习方法建模时间序列数据的另一种方式。
- en: Other time-series models
  id: totrans-237
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 其他时间序列模型
- en: 'We have discussed time-series modeling with ARIMA and Prophet in this chapter.
    However, there are various other algorithms and models that can be used to model
    time-series data. There are largely three types of approaches to time-series modeling:'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们讨论了使用ARIMA和Prophet进行时间序列建模。然而，还有各种其他算法和模型可以用来建模时间序列数据。时间序列建模主要有以下三种方法：
- en: '**Statistical models**: The statistical approaches to modeling time-series
    data have been around for decades. The ARIMA model is one of the most frequently
    used statistical models and was developed in the 1970s and is still used to date.
    To name a few other statistical models that are often used:'
  id: totrans-239
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**统计模型**：用于建模时间序列数据的统计方法已经存在了几十年。ARIMA模型是最常用的统计模型之一，于20世纪70年代开发，至今仍在使用。以下是一些常用的其他统计模型：'
- en: '**Exponential smoothing**: One of the oldest time-series forecasting methods,
    which gives more weight to recent observations for averaging time-series data
    points'
  id: totrans-240
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**指数平滑法**：这是最古老的时间序列预测方法之一，它对最近的观测值给予更大的权重，用于平均时间序列数据点。'
- en: '**Generalized AutoRegressive Conditional Heteroskedasticity (GARCH)**: A frequently
    used model in finance that models the variance of the error terms that is dependent
    on time, such as increasing or decreasing volatility or variance over time'
  id: totrans-241
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**广义自回归条件异方差（GARCH）**：在金融领域常用的模型，用于建模误差项的方差，这些误差项依赖于时间，如随时间增加或减少波动性或方差。'
- en: '**Seasonal ARIMA (SARIMA)**: An extension of the ARIMA model that incorporates
    the seasonality component on top of the ARIMA components'
  id: totrans-242
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**季节性ARIMA（SARIMA）**：ARIMA模型的扩展，在ARIMA组件之上加入了季节性成分。'
- en: '**ML models**: Although not as frequently used as other statistical models
    and deep learning models, ML models are still used for time-series forecasting
    and for quick checks for predictability in time series. The advantage of ML models
    over statistical models is the ability to use various features when building forecasting
    models, whereas statistical models for time-series forecasting typically are univariate
    in nature. Here are some commonly used ML models:'
  id: totrans-243
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**机器学习（ML）模型**：尽管不如其他统计模型和深度学习模型常用，ML模型仍被用于时间序列预测和快速检查时间序列的可预测性。ML模型相对于统计模型的优势在于，在构建预测模型时可以使用各种特征，而用于时间序列预测的统计模型通常具有单变量性质。以下是一些常用的ML模型：'
- en: '**Linear regression**: One of the most basic regression models in ML that can
    be used to model time-series data with various features. Feature engineering is
    the key to making a linear regression model powerful.'
  id: totrans-244
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**线性回归**：在机器学习中是最基本的回归模型之一，可以用来模拟具有各种特征的时间序列数据。特征工程是使线性回归模型强大的关键。'
- en: '**Tree-based models**: XGBoost, which learns the data by sequentially building
    decision trees that learn from previous trees’ errors, or random forest, which
    learns the data by building a bag of decision trees that each learn subparts of
    the data, can be used for time-series forecasting. The ability to model interactions
    and relationships among various features provides an advantage in modeling time-series
    data that has complex intercorrelations among the features.'
  id: totrans-245
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**基于树的模型**：XGBoost通过顺序构建决策树来学习数据，这些决策树从先前树的错误中学习，或者随机森林，通过构建一个决策树集合来学习数据，每个决策树学习数据的一部分，可以用于时间序列预测。能够模拟各种特征之间的交互和关系，为建模具有复杂特征相互关系的时序数据提供了优势。'
- en: '**Support vector machine (SVM)**: SVM does not perform when the dataset is
    noisy or the dimensionality of the dataset is large as it learns the data by finding
    a hyperplane that maximally separates different categories, and building such
    an effective hyperplane in high-dimensional space is difficult, but SVM is still
    used for time-series forecasting.'
  id: totrans-246
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**支持向量机（SVM）**：当数据集有噪声或数据集的维度很大时，SVM无法执行，因为它通过找到最大化不同类别之间分离的超平面来学习数据，在高维空间中构建这样一个有效的超平面是困难的，但SVM仍被用于时间序列预测。'
- en: '**Deep learning (DL) models**: With the rising accessibility and availability
    of compute resources, there have been lots of developments in DL-driven time-series
    modeling. Similar to other tasks, such as image recognition and **Natural Language
    Processing** (**NLP**), DL models are used more and more often to make accurate
    time-series forecasts:'
  id: totrans-247
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**深度学习（DL）模型**：随着计算资源的可用性和可访问性的提高，DL驱动的时序建模已经取得了许多进展。与其他任务，如图像识别和**自然语言处理（NLP**），类似，DL模型越来越多地被用于制作准确的时间序列预测：'
- en: '**Recurrent neural network (RNN) models**: RNN is a type of neural network
    that is designed to process sequential data. Because RNN models “remember” the
    previous inputs for future predictions, they work well for sequential data, such
    as speech and time-series data. DeepAR, ESRNN, and AR-Net are some of the RNN-based
    models for time-series forecasting.'
  id: totrans-248
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**循环神经网络（RNN）模型**：RNN是一种设计用于处理序列数据的神经网络。由于RNN模型“记住”之前的输入以进行未来的预测，因此它们在处理如语音和时间序列数据等序列数据时表现良好。DeepAR、ESRNN和AR-Net是一些基于RNN的时间序列预测模型。'
- en: '**Multilayer perceptron (MLP) models**: MLP is a type of neural network where
    there are multiple layers of neurons, where each of the layers learns the data
    and extracts features. MLP-based models, such as N-BEATS, NHiTs, and TSMixer,
    typically have a deep stack of fully connected layers. This group of models is
    proven to work well in practice.'
  id: totrans-249
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**多层感知器（MLP）模型**：MLP是一种具有多个神经元层的神经网络，其中每个层都学习数据并提取特征。基于MLP的模型，如N-BEATS、NHiTs和TSMixer，通常具有深度堆叠的全连接层。这一组模型在实践中的应用已被证明效果良好。'
- en: '**Transformer-based models**: With the success of transformer-based models
    in NLP that use a multi-head attention mechanism that allows capturing different
    relationships and dependencies within the input, transformer-based time-series
    models and architectures are also actively being developed. **Temporal Fusion
    Transformer** (**TFT**) is an example of a transformer-based time-series forecasting
    model and is useful for multi-horizon and multivariate time-series forecasting.'
  id: totrans-250
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**基于Transformer的模型**：随着基于Transformer的模型在自然语言处理领域的成功，这些模型使用多头注意力机制，能够捕捉输入中的不同关系和依赖，因此基于Transformer的时间序列模型和架构也在积极开发中。**时间融合Transformer（TFT**）是一个基于Transformer的时间序列预测模型的例子，它适用于多步和多元时间序列预测。'
- en: '**How to build a DL model for time-series data**'
  id: totrans-251
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**如何构建用于时间序列数据的深度学习模型**'
- en: 'There is no shortage of Python packages that help you build time-series models.
    Darts, Kats, PyCaret, and PyTorch Forecasting are some of the frequently used
    Python packages that have easy-to-use implementations of DL models for time-series
    forecasting. If you’d like to see an example of N-BEATS model applications for
    this chapter, visit the following GitHub repository:'
  id: totrans-252
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有许多Python包可以帮助你构建时间序列模型。Darts、Kats、PyCaret和PyTorch Forecasting是一些常用的Python包，它们提供了易于使用的深度学习模型实现，用于时间序列预测。如果你想查看本章N-BEATS模型应用的示例，请访问以下GitHub仓库：
- en: '[https://github.com/yoonhwang/Machine-Learning-and-Generative-AI-for-Marketing/blob/main/ch.4/TimeSeriesAnalysis.ipynb](https://github.com/yoonhwang/Machine-Learning-and-Generative-AI-for-Marketing/blob/main/ch.4/TimeSeriesAnalysis.ipynb)'
  id: totrans-253
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[https://github.com/yoonhwang/Machine-Learning-and-Generative-AI-for-Marketing/blob/main/ch.4/TimeSeriesAnalysis.ipynb](https://github.com/yoonhwang/Machine-Learning-and-Generative-AI-for-Marketing/blob/main/ch.4/TimeSeriesAnalysis.ipynb)'
- en: Summary
  id: totrans-254
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we have discussed the importance of time-series analysis and
    its applications for marketing. From fundamental analyses of how data progresses
    over time and what stories and insights can be gathered from such analyses to
    the development of advanced time-series forecasting models, we have touched on
    a wide range of topics in time-series analysis. We have seen how moving averages
    and autocorrelations and visualizations of them play a critical role in understanding
    the big picture of events happening over time. We have also covered how time-series
    data can be decomposed into trends and seasonalities that uncover the hidden insights
    of cycles within businesses and different product lines. Lastly, we have experimented
    with two of the frequently used statistical methods of modeling the time-series
    data and how to make forecasts for the future that can then be used for more efficient
    and timely marketing campaigns. Although not discussed in depth in this chapter,
    we have shared some of the other AI/ML models that are used and are in development.
    Make sure you check out this chapter’s GitHub repository for an example of building
    a DL model for time-series forecasting. We will also go deeper into DL and Generative
    AI later, in Part IV of this book.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们讨论了时间序列分析的重要性及其在市场营销中的应用。从分析数据随时间进展的基本方法，以及从这些分析中可以收集到的故事和洞察，到高级时间序列预测模型的发展，我们触及了时间序列分析中的广泛主题。我们看到了移动平均数、自相关及其可视化在理解随时间发生的事件的全貌中扮演的关键角色。我们还介绍了如何将时间序列数据分解为趋势和季节性，从而揭示商业和不同产品线中周期性的隐藏洞察。最后，我们尝试了两种常用的统计方法来建模时间序列数据，以及如何对未来进行预测，以便用于更高效和及时的市场营销活动。尽管本章没有深入讨论，但我们分享了一些其他正在使用和开发的
    AI/ML 模型。请确保查看本章的 GitHub 仓库，以了解构建用于时间序列预测的深度学习模型的示例。我们将在本书的第四章中更深入地探讨深度学习和生成式
    AI。
- en: In the following chapter, we are going to explore language modeling and how
    you can benefit from it for your next marketing initiatives. We will be discussing
    how to use and apply some of the NLP techniques using sentiment analysis as an
    example and how it can equip marketers to gauge the public perception of the brand
    or products and monitor and refine the marketing messages for better alignment
    with customer preferences.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将探讨语言建模以及您如何从它中获得益处，用于您接下来的市场营销活动。我们将讨论如何使用和应用一些自然语言处理技术，以情感分析为例，以及它如何使营销人员能够衡量公众对品牌或产品的看法，并监控和优化营销信息，以更好地与客户偏好保持一致。
- en: Join our book’s Discord space
  id: totrans-257
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 加入我们书籍的 Discord 空间
- en: 'Join our Discord community to meet like-minded people and learn alongside more
    than 5000 members at:'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 加入我们的 Discord 社区，与志同道合的人相聚，并和超过 5000 名成员一起学习，详情请见：
- en: '[https://packt.link/genai](https://packt.link/genai)'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://packt.link/genai](https://packt.link/genai)'
- en: '![](img/QR_Code12856128601808671.png)'
  id: totrans-260
  prefs: []
  type: TYPE_IMG
  zh: '![二维码](img/QR_Code12856128601808671.png)'
