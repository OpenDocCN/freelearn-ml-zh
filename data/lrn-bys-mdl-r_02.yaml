- en: Chapter 2. The R Environment
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第二章：R环境
- en: R is currently one of the most popular programming environments for statistical
    computing. It was evolved as an open source language from the S programming language
    developed at Bell Labs. The main creators of R are two academicians, Robert Gentleman
    and Ross Ihaka, from the University of Auckland in New Zealand.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: R目前是统计计算中最受欢迎的编程环境之一。它是从贝尔实验室开发的S编程语言演变而来的开源语言。R的主要创造者是新西兰奥克兰大学的两位学者，罗伯特·甘特曼和罗斯·伊哈卡。
- en: 'The main reasons for the popularity of R, apart from free software under GNU
    General Public License, are the following:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: R流行的主要原因，除了在GNU通用公共许可证下的免费软件之外，还有以下几点：
- en: R is very easy to use. It is an interpreted language and at the same time can
    be used for procedural programming.
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: R非常易于使用。它是一种解释型语言，同时也可以用于过程式编程。
- en: R supports both functional and object-oriented paradigms. It has very strong
    graphical and data visualization capabilities.
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: R支持函数式和面向对象范式。它具有非常强大的图形和数据可视化能力。
- en: Through its LaTex-like documentation support, R can be used for making high-quality
    documentation.
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过其类似LaTeX的文档支持，R可以用来制作高质量的文档。
- en: Being an open source software, R has a large number of contributed packages
    that makes almost all statistical modeling possible in this environment.
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 作为开源软件，R拥有大量贡献的包，使得几乎所有的统计建模都可以在这个环境中实现。
- en: This chapter is intended to give a basic introduction to R so that any reader
    who is not familiar with the language can follow the rest of the book by reading
    through this chapter. It is not possible to give a detailed description of the
    R language in one chapter and the interested reader should consult books specially
    written in R programming. I would recommend *The Art of R Programming* (reference
    1 in the *References* section of this chapter) and *R Cookbook* (reference 2 in
    the *References* section of this chapter) for those users who are mainly interested
    in using R for analyzing and modeling data. For those who are interested in learning
    about the advanced features of R, for example, for writing complex programs or
    R packages, *Advanced R* (reference 3 in the *References* section of this chapter)
    is an excellent book.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 本章旨在提供一个基本的R介绍，以便任何不熟悉该语言的读者可以通过阅读本章来跟随本书的其余部分。不可能在一章中详细描述R语言，感兴趣的读者应参考专门为R编程编写的书籍。我推荐对那些主要对使用R进行数据分析和建模感兴趣的用户的*《R编程艺术》*（本章*参考文献*部分的第1条参考文献）和*《R食谱》*（本章*参考文献*部分的第2条参考文献）。对于那些对学习R的高级功能感兴趣的读者，例如编写复杂程序或R包，*《高级R》*（本章*参考文献*部分的第3条参考文献）是一本优秀的书籍。
- en: Setting up the R environment and packages
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置R环境和包
- en: R is a free software under GNU open source license. R comes with a basic package
    and also has a large number of user-contributed packages for advanced analysis
    and modeling. It also has a nice graphics user interface-based editor called RStudio.
    In this section, we will learn how to download R, set up the R environment in
    your computer, and write a simple R program.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: R是在GNU开源许可证下的免费软件。R附带一个基本包，并且还有大量用户贡献的高级分析和建模包。它还有一个名为RStudio的基于图形用户界面的编辑器。在本节中，我们将学习如何下载R，在您的计算机上设置R环境，并编写一个简单的R程序。
- en: Installing R and RStudio
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装R和RStudio
- en: '**The Comprehensive R Archive Network** (**CRAN**) hosts all releases of R
    and the contributed packages. R for Windows can be installed by downloading the
    binary of the base package from [http://cran.r-project.org](http://cran.r-project.org);
    a standard installation should be sufficient. For Linux and Mac OS X, the webpage
    gives instructions on how to download and install the software. At the time of
    writing this book, the latest release was version 3.1.2\. Various packages need
    to be installed separately from the package page. One can install any package
    from the R command prompt using the following command:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**综合R档案网络**（**CRAN**）托管了R的所有版本和贡献的包。R for Windows可以通过从[http://cran.r-project.org](http://cran.r-project.org)下载基础包的二进制文件来安装；标准安装应该足够。对于Linux和Mac
    OS X，网页提供了下载和安装软件的说明。在撰写本书时，最新版本是3.1.2。需要安装的各种包可以从包页面单独安装。用户可以使用以下命令从R命令提示符安装任何包：'
- en: '[PRE0]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'After installing the package, one needs to load the package before using it
    with the following command:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 安装包后，需要使用以下命令加载包才能使用：
- en: '[PRE1]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'A very useful **integrated development environment** (**IDE**) for R is RStudio.
    It can be downloaded freely from [http://www.rstudio.com/](http://www.rstudio.com/).
    RStudio works on Windows, Linux, and Mac platforms. It has both a desktop version
    and also a server version that can be used for writing R programs through a browser
    interface on a remote server. After installing R and RStudio, it is useful to
    set the default working directory to the directory of your choice. RStudio reads
    and writes files containing R codes into the working directory. To find out what
    the current directory is, use the R command `getwd( )`. To change the working
    directory to a directory of your preference, use the following command:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 一个非常实用的R的**集成开发环境**（**IDE**）是RStudio。它可以从[http://www.rstudio.com/](http://www.rstudio.com/)免费下载。RStudio在Windows、Linux和Mac平台上运行。它既有桌面版本，也有服务器版本，可以通过远程服务器上的浏览器界面编写R程序。安装R和RStudio后，将默认工作目录设置为所选目录很有用。RStudio将包含R代码的文件读入和写入工作目录。要找出当前目录，请使用R命令`getwd()`。要将工作目录更改为你偏好的目录，请使用以下命令：
- en: '[PRE2]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: You can also set this from the menu bar of RStudio by clicking on **Session**
    | **Set Working Directory**.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以通过点击RStudio菜单栏的**会话** | **设置工作目录**来设置此选项。
- en: Your first R program
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 你的第一个R程序
- en: 'Let us write a simple program to add two integers `x` and `y` resulting in
    their sum `z`. On the command prompt in RStudio, type the following commands and
    press *Enter*:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们编写一个简单的程序来添加两个整数`x`和`y`，得到它们的和`z`。在RStudio的命令提示符中，输入以下命令并按*Enter*键：
- en: '[PRE3]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Now, you can assign different values to `x` and `y` and print `z` to see how
    `z` changes. Instead of `print(z)`, you can also simply enter `z` to print its
    values.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你可以为`x`和`y`分配不同的值，并打印`z`以查看`z`如何变化。除了`print(z)`，你也可以简单地输入`z`来打印其值。
- en: Managing data in R
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: R中的数据管理
- en: Before we start any serious programming in R, we need to learn how to import
    data into an R environment and which data types R supports. Often, for a particular
    analysis, we will not use the entire dataset. Therefore, we need to also learn
    how to select a subset of the data for any analysis. This section will cover these
    aspects.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始使用R进行任何严肃的编程之前，我们需要学习如何将数据导入R环境以及R支持哪些数据类型。通常，对于特定的分析，我们可能不会使用整个数据集。因此，我们还需要学习如何为任何分析选择数据子集。本节将涵盖这些方面。
- en: Data Types in R
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: R中的数据类型
- en: 'R has five basic data types as follows:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: R有五种基本数据类型，如下所示：
- en: Integer
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 整数型
- en: Numeric (real)
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数值型（实数）
- en: Complex
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 复数型
- en: Character
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 字符型
- en: Logical (True/False)
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 逻辑型（True/False）
- en: The default representation of numbers in R is double precision real number (numeric).
    If you want an integer representation explicitly, you need to add the suffix `L`.
    For example, simply entering `1` on the command prompt will store `1` as a numeric
    object. To store `1` as an integer, you need to enter `1L`. The command `class(x)`
    will give the class (type) of the object `x`. Therefore, entering `class(1)` on
    command prompt will give the answer `numeric` whereas entering `class(1L)` will
    give the answer `integer`.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: R中数字的默认表示形式是双精度实数（数值型）。如果你想要显式地表示整型，需要添加后缀`L`。例如，在命令提示符中简单地输入`1`将存储为数值对象。要存储`1`为整型，需要输入`1L`。命令`class(x)`将给出对象`x`的类别（类型）。因此，在命令提示符中输入`class(1)`将得到答案`numeric`，而输入`class(1L)`将得到答案`integer`。
- en: R also has a special number `Inf` that represents Infinity. The number `NaN`
    (*not a number*) is used to represent an undefined value such as 0/0\. Missing
    values are represented by using the symbol `NA`.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: R还有一个特殊的数字`Inf`，表示无穷大。数字`NaN`（非数字）用于表示未定义的值，例如0/0。缺失值使用符号`NA`表示。
- en: Data structures in R
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: R中的数据结构
- en: 'The data structures in R can be classified as either homogeneous (all elements
    containing the same data type) or heterogeneous (elements containing different
    data types). Furthermore, each of these have different structures depending upon
    the number of dimensions:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: R中的数据结构可以分为同质型（所有元素包含相同的数据类型）或异质型（元素包含不同的数据类型）。此外，这些数据结构根据维数的不同而具有不同的结构：
- en: 'Homogeneous:'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 同质型：
- en: '**Atomic vector**: one-dimensional'
  id: totrans-36
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**原子向量**：一维'
- en: '**Matrix**: two-dimensional'
  id: totrans-37
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**矩阵**：二维'
- en: '**Array**: N-dimensional'
  id: totrans-38
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数组**：N维'
- en: 'Heterogeneous:'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 异质型：
- en: '**List**: one-dimensional'
  id: totrans-40
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**列表**：一维'
- en: '**Data frame**: two-dimensional'
  id: totrans-41
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据框**：二维'
- en: 'The most basic object in R is a vector. To create an empty integer vector of
    size 10, enter the following command on the R prompt:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: R中最基本的对象是向量。要在R提示符中创建一个大小为10的空整型向量，请输入以下命令：
- en: '[PRE4]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'You can assign the value *m* to *n*th component of the vector using the following
    command:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用以下命令将值 *m* 赋给向量的 *n* 个组件：
- en: '[PRE5]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Readers should note that unlike in many programming languages, the array index
    in R starts with 1 and not 0.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 读者应注意，与许多编程语言不同，R 中的数组索引从 1 开始，而不是从 0 开始。
- en: 'Whereas a vector can only contain objects of the same type, a list, although
    similar to the vector, can contain objects of different types. The following command
    will create a list containing integers, real numbers, and characters:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 与向量只能包含相同类型的对象不同，列表虽然与向量相似，但可以包含不同类型的对象。以下命令将创建一个包含整数、实数和字符的列表：
- en: '[PRE6]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Here, we used the `str()` function in R that shows the structure of any R object.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们使用了 R 中的 `str()` 函数，该函数显示了任何 R 对象的结构。
- en: 'R has a special function `c()` to combine multiple numbers of basic data into
    a vector or list. For example, `c(1,3,6,2,-1)` will produce a vector containing
    numbers from 1,2,3,6,-1:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: R 有一个特殊的函数 `c()`，用于将多个基本数据组合成一个向量或列表。例如，`c(1,3,6,2,-1)` 将生成一个包含数字 1,2,3,6,-1
    的向量：
- en: '[PRE7]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'A matrix is the generalization of a vector into two dimensions. Consider the
    following command:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 矩阵是向量在二维上的推广。考虑以下命令：
- en: '[PRE8]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: This command will generate a matrix `m` of size 3 x 3 containing numbers from
    1 to 9.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 此命令将生成一个 3 x 3 大小的矩阵 `m`，包含从 1 到 9 的数字。
- en: The most common data structure used for storing data in R is a data frame. A
    data frame, like the list, can contain data of different types (numeric, integer,
    Boolean, or character). It is essentially a list of vectors of equal length. Therefore,
    it has the same two-dimensional structure as a matrix. The length (found using
    `length( )`) of a data frame is the length of the underlying list that is the
    number of columns in the data frame. There are simple commands `nrow( )` and `ncol(
    )` for finding the number of rows and columns of a data frame. The other two attributes
    of a data frame are `rownames( )` and `colnames( )` that can be used to either
    set or find the names of rows or columns.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: R 中用于存储数据的常见数据结构是数据框。数据框，就像列表一样，可以包含不同类型的数据（数值、整数、布尔或字符）。它本质上是一个长度相等的向量的列表。因此，它具有与矩阵相同的二维结构。数据框的长度（使用
    `length( )` 查找）是底层列表的长度，即数据框中的列数。有简单的命令 `nrow( )` 和 `ncol( )` 用于查找数据框的行数和列数。数据框的其他两个属性是
    `rownames( )` 和 `colnames( )`，可以用来设置或查找行或列的名称。
- en: Importing data into R
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将数据导入 R
- en: 'Data that is in the form of a table can be easily loaded into R using the `read.table(…)`
    function. It has several arguments to make the import very flexible. Some of the
    useful arguments are the following:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 以表格形式存在的数据可以很容易地使用 `read.table(…)` 函数加载到 R 中。它有几个参数使导入非常灵活。其中一些有用的参数如下：
- en: '`file`: The name of a file or a complete URL'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`file`: 文件名或完整的 URL'
- en: '`header`: A logical value indicating whether the file has a header line containing
    names of the variables'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`header`: 一个逻辑值，指示文件是否包含包含变量名称的标题行'
- en: '`sep`: A character indicating the column separator field'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sep`: 表示列分隔符的字符'
- en: '`row.names`: A vector of row names'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`row.names`: 行名称的向量'
- en: '`col.names`: A vector of names for variables'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`col.names`: 变量名称的向量'
- en: '`skip`: The number of lines in the data file to be skipped before reading the
    data'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`skip`: 在读取数据之前要跳过的数据文件中的行数'
- en: '`nrows`: The number of rows in the dataset'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`nrows`: 数据集中的行数'
- en: '`stringsASFactors`: A logical value indicating if the character variables can
    be coded as factors or not'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`stringsASFactors`: 一个逻辑值，指示字符变量是否可以编码为因子'
- en: For small datasets, one can use `read.table("filename.txt")` without specifying
    other arguments; the rest R will figure out itself. Another useful function is
    `read.csv()` for reading CSV files only.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 对于小型数据集，可以使用 `read.table("filename.txt")` 而不指定其他参数；其余的 R 会自动处理。另一个有用的函数是 `read.csv()`，用于仅读取
    CSV 文件。
- en: 'In addition to loading data from text files, data can be imported into R by
    connecting to external databases through various interfaces. One such popular
    interface is **Open Database Connectivity** (**ODBC**). The **RODBC** package
    in R provides access to different databases through the ODBC interface. This package
    contains different functions for connecting with a database and performing various
    operations. Some of the important functions in the RODBC package are as follows:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 除了从文本文件加载数据外，还可以通过连接外部数据库通过各种接口将数据导入R。其中一种流行的接口是**开放数据库连接**（**ODBC**）。R中的**RODBC**包通过ODBC接口提供对不同数据库的访问。此包包含用于与数据库连接和执行各种操作的不同函数。RODBC包中的一些重要函数如下：
- en: '`odbcConnect(dsn, uid="user_name", pwd="password")`: Used to open a connection
    to an ODBC database having registered data source name `dsn`.'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`odbcConnect(dsn, uid="user_name", pwd="password")`: 用于打开一个连接到已注册数据源名称 `dsn`
    的ODBC数据库。'
- en: '`sqlFetch(channel, sqtable)`: Used to read a table from an ODBC database to
    a data frame.'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sqlFetch(channel, sqtable)`: 用于从ODBC数据库读取表到数据框。'
- en: '`sqlQuery(channel, query)`: Used to submit a query to an ODBC database and
    return the results.'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sqlQuery(channel, query)`: 用于向ODBC数据库提交查询并返回结果。'
- en: '`sqlSave(channel, mydf, tablename = sqtable, append = FALSE)`: Used to write
    or update (`append = TRUE`) a data frame to a table in the ODBC database.'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sqlSave(channel, mydf, tablename = sqtable, append = FALSE)`: 用于将数据框写入或更新到ODBC数据库中的表（`append
    = TRUE`）。'
- en: '`close(channel)`: Used to close the connection. Here, `channel` is the connection
    handle as returned by `odbcConnect`.'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`close(channel)`: 用于关闭连接。在这里，`channel`是`odbcConnect`返回的连接句柄。'
- en: Slicing and dicing datasets
  id: totrans-73
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 切割和切块数据集
- en: Often, in data analysis, one needs to slice and dice the full data frame to
    select a few variables or observations. This is called subsetting. R has some
    powerful and fast methods for doing this.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 在数据分析中，通常需要切割整个数据框以选择一些变量或观测值。这被称为子集化。R有一些强大且快速的方法来完成这项工作。
- en: 'To extract subsets of R objects, one can use the following three operators:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 要提取R对象的子集，可以使用以下三个运算符：
- en: '**Single bracket [ ]**: This returns an object of the same class as the original.
    The single bracket operator can be used to select more than one element of an
    object. Some examples are as follows:'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**单方括号 [ ]**: 返回与原始对象相同类的对象。单方括号运算符可以用于选择对象的一个或多个元素。以下是一些示例：'
- en: '[PRE9]'
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '**Double bracket [[ ]]**: This is used to extract a single element of a list
    or data frame. The returned object need not be the same type as the initial object.
    Some examples are as follows:'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**双方括号 [[ ]]**: 用于从列表或数据框中提取单个元素。返回的对象不必与初始对象类型相同。以下是一些示例：'
- en: '[PRE10]'
  id: totrans-79
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '**Dollar sign $**: This is used to extract elements of a list or data frame
    by name. Some examples are as follows:'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**美元符号 $**: 用于通过名称提取列表或数据框的元素。以下是一些示例：'
- en: '[PRE11]'
  id: totrans-81
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '**Use of negative index values**: This is used to drop a particular index or
    column—one subset with a negative sign for the corresponding index. For example,
    to drop Mary and Bob from the preceding list, use the following code:'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**使用负索引值**: 这用于删除特定的索引或列——对应索引有一个带负号的子集。例如，要从前面的列表中删除Mary和Bob，请使用以下代码：'
- en: '[PRE12]'
  id: totrans-83
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Vectorized operations
  id: totrans-84
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 向量化操作
- en: 'In R, many operations, such as arithmetical operations involving vectors and
    matrices, can be done very efficiently using vectorized operations. For example,
    if you are adding two vectors `x` and `y`, their elements are added in parallel.
    This also makes the code more concise and easier to understand. For example, one
    does not need a `for( )` loop to add two vectors in the code:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 在R中，许多操作，如涉及向量和矩阵的算术运算，可以使用向量化操作非常高效地完成。例如，如果你正在添加两个向量`x`和`y`，它们的元素是并行添加的。这也使得代码更加简洁，更容易理解。例如，在代码中添加两个向量不需要`for(
    )`循环：
- en: '[PRE13]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Another very useful example of vectorized operations is in the case of matrices.
    If `X` and `Y` are two matrices, the following operations can be carried out in
    R in a vectorized form:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 向量化操作的另一个非常有用的例子是在矩阵的情况下。如果`X`和`Y`是两个矩阵，则可以在R中以向量化的形式执行以下操作：
- en: '[PRE14]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Writing R programs
  id: totrans-89
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 编写R程序
- en: Although much data analysis in R can be carried out in an interactive manner
    using command prompt, often for more complex tasks, one needs to write R scripts.
    As mentioned in the introduction, R has both the perspective of a functional and
    object-oriented programming language. In this section, some of the standard syntaxes
    of the programming in R are described.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管在 R 中，许多数据分析可以通过命令提示符以交互式方式进行，但通常对于更复杂的任务，需要编写 R 脚本。如介绍中所述，R 具有函数式和面向对象编程语言的视角。在本节中，将描述
    R 编程的一些标准语法。
- en: Control structures
  id: totrans-91
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 控制结构
- en: 'Control structures are meant for controlling the flow of execution of a program.
    The standard control structures are as follows:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 控制结构用于控制程序执行的流程。标准控制结构如下：
- en: '`if` and `else`: To test a condition'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`if` 和 `else`: 测试条件'
- en: '`for`: To loop over a set of statements for a fixed number of times'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`for`: 循环一组语句固定次数'
- en: '`while`: To loop over a set of statements while a condition is true'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`while`: 当条件为真时循环一组语句'
- en: '`repeat`: To execute an infinite loop'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`repeat`: 执行无限循环'
- en: '`break`: To break the execution of a loop'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`break`: 用于中断循环的执行'
- en: '`next`: To skip an iteration of a loop'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`next`: 跳过循环的一次迭代'
- en: '`return`: To exit a function'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`return`: 退出函数'
- en: Functions
  id: totrans-100
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 函数
- en: If one wants to use R for more serious programming, it is essential to know
    how to write functions. They make the language more powerful and elegant. R has
    many built-in functions, such as `mean()`, `sort()`, `sin()`, `plot()`, and many
    more, which are written using R commands.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 如果想用 R 进行更严肃的编程，了解如何编写函数是至关重要的。它们使语言更加强大和优雅。R 有许多内置函数，例如 `mean()`、`sort()`、`sin()`、`plot()`
    等，这些函数都是使用 R 命令编写的。
- en: 'A function is defined as follows:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 函数的定义如下：
- en: '[PRE15]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Here, `fname` is the name of the function; `arg1`, `arg2`, and so on, are arguments
    passed to the function. Note that unlike in other languages, functions in R do
    not end with a return statement. By default, the last statement executed inside
    the body of the function is returned by the function.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，`fname` 是函数的名称；`arg1`、`arg2` 等是传递给函数的参数。请注意，与在其他语言中不同，R 中的函数不需要以返回语句结束。默认情况下，函数体内执行的最后一个语句由函数返回。
- en: 'Once a function is defined, it is executed simply by entering the function
    name with the values for the arguments:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦定义了函数，只需通过输入函数名并传递参数值来执行它：
- en: '[PRE16]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'The important properties of functions in R are as follows:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: R 中函数的重要特性如下：
- en: Functions are first-class citizens
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 函数是一等公民
- en: Functions can be passed as arguments to other functions
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 函数可以作为参数传递给其他函数
- en: One can define a function inside another function (nesting)
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以在另一个函数内部定义一个函数（嵌套）
- en: The arguments of the functions can be matched by position or name
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 函数的参数可以通过位置或名称进行匹配
- en: 'Let''s consider a simple example of a function, which given an input vector
    `x`, calculates its mean. To write this function, open a new window in RStudio
    for R script from the menu bar through **File** | **New File** | **R Script**.
    In this R script, enter the following lines of code:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们考虑一个函数的简单示例，给定一个输入向量 `x`，计算其平均值。要编写此函数，请通过菜单栏中的 **文件** | **新建文件** | **R 脚本**
    在 RStudio 中打开一个新的 R 脚本窗口。在此 R 脚本中，输入以下代码行：
- en: '[PRE17]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Select the entire code and use the keys *Ctrl* + *Enter* to execute the script.
    This completes the definition of the `myMean` function. To use this function on
    the command prompt, enter the following:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 选择整个代码，然后使用 *Ctrl* + *Enter* 键来执行脚本。这完成了 `myMean` 函数的定义。要在命令提示符中使用此函数，请输入以下内容：
- en: '[PRE18]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'This will generate the following result:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 这将生成以下结果：
- en: '[PRE19]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Scoping rules
  id: totrans-118
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 作用域规则
- en: 'In programming languages, it is very important to understand the scopes of
    all variables to avoid errors during execution. There are two types of scoping
    of a variable in a function: lexical scoping and dynamic scoping. In the case
    of lexical scoping, the value of a variable in a function is looked up in the
    environment in which the function was defined. Generally, this is the global environment.
    In the case of dynamic scoping, the value of a variable is looked up in the environment
    in which the function was called (the calling environment).'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 在编程语言中，理解所有变量的作用域非常重要，以避免执行过程中的错误。在函数中，变量的作用域有两种类型：词法作用域和动态作用域。在词法作用域的情况下，函数中的变量值是在函数定义的环境中进行查找的。通常，这是全局环境。在动态作用域的情况下，变量的值是在函数被调用的环境中查找的（调用环境）。
- en: 'R uses lexical scoping that makes it possible to write functions inside a function.
    This is illustrated with the following example:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: R使用词汇作用域，这使得在函数内部编写函数成为可能。以下示例说明了这一点：
- en: '[PRE20]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: The answer is `4` because while evaluating function `f`, the value of `x` is
    taken from the global environment, which is `0.1`, whereas while evaluating function
    `g`, the value of `x` is taken from the local environment of `g`, which is `5`.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 答案是`4`，因为在评估函数`f`时，`x`的值是从全局环境中获取的，即`0.1`，而在评估函数`g`时，`x`的值是从`g`的局部环境中获取的，即`5`。
- en: Lexical scoping has some disadvantages. Since the value of a variable is looked
    up from the environment in which the function is defined, all functions must carry
    a pointer to their respective defining environments. Also, all objects must be
    stored in memory during the execution of the program.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 词汇作用域有一些缺点。由于变量的值是从定义函数的环境中进行查找的，因此所有函数都必须携带指向它们各自定义环境的指针。此外，所有对象都必须在程序执行期间存储在内存中。
- en: Loop functions
  id: totrans-124
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 循环函数
- en: Often, we have a list containing some objects and we want to apply a function
    to every element of the list. For example, we have a list of results of a survey,
    containing *m* questions from *n* participants. We would like to find the average
    response for each question (assuming that all questions have a response as numeric
    values). One could use a `for` loop over the set of questions and find an average
    among *n* users using the `mean()` function in R. Loop functions come in handy
    in such situations and one can do such computations in a more compact way. These
    are like iterators in other languages such as Java.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，我们有一个包含一些对象的列表，并且想要将函数应用于列表的每个元素。例如，我们有一个包含来自*n*个参与者的*m*个问题的调查结果列表。我们希望找到每个问题的平均响应（假设所有问题都有作为数值的响应）。可以使用R中的`mean()`函数通过一个`for`循环遍历问题集并找到*n*个用户的平均值。在这种情况下，循环函数很有用，可以更紧凑地进行此类计算。这些在其他语言（如Java）中类似于迭代器。
- en: 'The following are the standard loop functions in R:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是在R中的标准循环函数：
- en: '`lapply`: To loop over a list and evaluate a function on each element'
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`lapply`: 遍历列表并对每个元素评估函数'
- en: '`sapply`: The same as `lapply`, but with the output in a more simpler form'
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sapply`: 与`lapply`相同，但输出形式更简单'
- en: '`mapply`: A multivariate version of `sapply`'
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`mapply`: `sapply`的多变量版本'
- en: '`apply`: To apply functions over array margins'
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`apply`: 在数组边缘应用函数'
- en: '`tapply`: To apply a function to each cell of a ragged array'
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`tapply`: 将函数应用于锯齿形数组的每个单元格'
- en: lapply
  id: totrans-132
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: lapply
- en: 'The `lapply()` function is used in the following manner:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: '`lapply()`函数的使用方式如下：'
- en: '[PRE21]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Here, `X` is a list or vector containing data. The `FUN` is the name of a function
    that needs to be applied on each element of the list or vector. The last argument
    represents optional arguments. The result of using `lapply` is always a list,
    regardless of the type of input.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，`X`是一个包含数据的列表或向量。`FUN`是需要应用于列表或向量每个元素的函数的名称。最后一个参数表示可选参数。使用`lapply`的结果始终是一个列表，无论输入类型如何。
- en: 'As an example, consider the quarterly revenue of four companies in billions
    of dollars (not real data). We would like to compute the yearly average revenue
    of all four companies as follows:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，考虑四家公司的季度收入（以十亿美元计，非真实数据）。我们希望计算四家公司的年收入平均值，如下所示：
- en: '[PRE22]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: sapply
  id: totrans-138
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: sapply
- en: 'The `sapply()` function is similar to `lapply()` with the additional option
    of simplifying the output into a desired form. For example, `sapply()` can be
    used in the previous dataset as follows:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '`sapply()`函数与`lapply()`类似，但增加了将输出简化为所需形式的选择。例如，`sapply()`可以在之前的数据集中如下使用：'
- en: '[PRE23]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: mapply
  id: totrans-141
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: mapply
- en: 'The `lapply()` and `sapply()` functions can only have one argument. If you
    want to apply a function with multiple variable arguments, then `mapply()` becomes
    handy. Here is how it is used:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: '`lapply()`和`sapply()`函数只能有一个参数。如果您想要使用多个变量参数应用函数，则`mapply()`很有用。以下是它的用法：'
- en: '[PRE24]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Here, ![mapply](img/image00250.jpeg) are the lists to which the function `FUN`
    needs to be applied. For example, consider the following list generation command:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，![mapply](img/image00250.jpeg)是需要应用函数`FUN`的列表。例如，考虑以下列表生成命令：
- en: '[PRE25]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Here, the `rep` function repeats the value of `x` five times. Suppose we want
    to create a list where the number 10 occurs 1 time, the number 20 occurs 2 times,
    and so on, we can use `mapply` as follows:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，`rep`函数重复`x`的值五次。假设我们想要创建一个列表，其中数字10出现1次，数字20出现2次，依此类推，我们可以使用`mapply`如下所示：
- en: '[PRE26]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: apply
  id: totrans-148
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: apply
- en: 'The `apply()` function is useful for applying a function to the margins of
    an array or matrix. The form of the function is as follows:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: '`apply()` 函数用于将函数应用于数组或矩阵的边缘。函数的形式如下：'
- en: '[PRE27]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Here, `MARGIN` is a vector giving the subscripts that the function will be
    applied over. For example, in the case of a matrix, `1` indicates rows and `2`
    indicates columns, and `c(1,2)` indicates rows and columns. Consider the following
    example as an illustration:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，`MARGIN` 是一个向量，它给出了函数将被应用到的子索引。例如，在矩阵的情况下，`1` 表示行，`2` 表示列，而 `c(1,2)` 表示行和列。以下是一个示例来说明：
- en: '[PRE28]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: tapply
  id: totrans-153
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: tapply
- en: 'The `tapply()` function is used to apply a function over the subsets of a vector.
    The function description is as follows:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: '`tapply()` 函数用于在向量的子集中应用函数。函数描述如下：'
- en: '[PRE29]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Let us consider the earlier example of the quarterly revenue of five companies:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们考虑之前提到的五家公司的季度营收示例：
- en: '[PRE30]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Using `lapply()`, we found the average yearly revenue of each company. Suppose
    we want to find the revenue per quarter averaged over all four companies, we can
    use `tapply()` as follows; here we use the function `c` instead of the list to
    create `X`:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `lapply()`，我们找到了每家公司的平均年营收。假设我们想找到所有四家公司按季度平均的营收，我们可以使用 `tapply()` 如下；这里我们使用函数
    `c` 而不是列表来创建 `X`：
- en: '[PRE31]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: By creating the factor list with levels as quarter values, we can apply the
    `mean` function for each quarter using `tapply()`.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用以季度值作为级别的因子列表，我们可以使用 `tapply()` 对每个季度应用 `mean()` 函数。
- en: Data visualization
  id: totrans-161
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据可视化
- en: 'One of the powerful features of R is its functions for generating high-quality
    plots and visualize data. The graphics functions in R can be divided into three
    groups:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: R 的一个强大功能是其生成高质量绘图和可视化数据的函数。R 中的绘图函数可以分为三组：
- en: High-level plotting functions to create new plots, add axes, labels, and titles.
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 高级绘图函数用于创建新绘图、添加坐标轴、标签和标题。
- en: Low-level plotting functions to add more information to an existing plot. This
    includes adding extra points, lines, and labels.
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 低级绘图函数用于向现有绘图添加更多信息。这包括添加额外的点、线和标签。
- en: Interactive graphics functions to interactively add information to, or extract
    information from, an existing plot.
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 交互式绘图函数用于交互式地向现有绘图添加信息或从现有绘图中提取信息。
- en: The R base package itself contains several graphics functions. For more advanced
    graph applications, one can use packages such as **ggplot2**, **grid**, or **lattice**.
    In particular, ggplot2 is very useful for generating visually appealing, multilayered
    graphs. It is based on the concept of *grammar of graphics*. Due to lack of space,
    we are not covering these packages in this book. Interested readers should consult
    the book by Hadley Wickham (reference 4 in the *References* section of this chapter).
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: R 的基础包本身包含几个绘图函数。对于更高级的图形应用，可以使用如 **ggplot2**、**grid** 或 **lattice** 等包。特别是，ggplot2
    对于生成视觉上吸引人的、多层图形非常有用。它基于 *图形语法* 的概念。由于篇幅限制，我们在这本书中不涵盖这些包。感兴趣的读者应参考本章 *参考文献* 部分的第
    4 个参考文献 Hadley Wickham 的书籍。
- en: High-level plotting functions
  id: totrans-167
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 高级绘图函数
- en: 'Let us start with the most basic plotting functions in R as follows:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从 R 中最基本的绘图函数开始，如下所示：
- en: '`plot( )`: This is the most common plotting function in R. It is a generic
    function where the output depends on the type of the first argument.'
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`plot( )`：这是 R 中最常见的绘图函数。它是一个泛型函数，其输出取决于第一个参数的类型。'
- en: '`plot(x, y)`: This produces a scatter plot of `y` versus `x`.'
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`plot(x, y)`：这会产生 `y` 与 `x` 的散点图。'
- en: '`plot(x)`: If `x` is a real value vector, the output will be a plot of the
    value of `x` versus its index on the *X* axis. If `x` is a complex number, then
    it will plot the real part versus the imaginary part.'
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`plot(x)`：如果 `x` 是实值向量，输出将是 `x` 的值与其在 *X* 轴上的索引的绘图。如果 `x` 是复数，则将实部与虚部进行绘图。'
- en: '`plot(f, y)`: Here, `f` is a factor object and `y` is a numeric vector. The
    function produces box plots of `y` for each level of `f`.'
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`plot(f, y)`：在这里，`f` 是因子对象，`y` 是数值向量。该函数为 `f` 的每个级别生成 `y` 的箱线图。'
- en: '`plot(y ~ expr)`: Here, `y` is any object and `expr` is a list of object names
    separated by *+* (for example, *p + q + r*). The function plots `y` against every
    object named in `expr`.'
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`plot(y ~ expr)`：在这里，`y` 是任何对象，`expr` 是由 *+* 分隔的对象名称列表。该函数将 `y` 与 `expr` 中命名的每个对象进行绘图。'
- en: 'There are two useful functions in R for visualizing multivariate data:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: R 中有两个用于可视化多元数据的实用函数：
- en: '`pairs(X)`: If `X` is a data frame containing numeric data, then this function
    produces a pair-wise scatter plot matrix of the variables defined by the columns
    of `X`.'
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pairs(X)`: 如果`X`是一个包含数值数据的data frame，那么这个函数将生成由`X`的列定义的变量的成对散点图矩阵。'
- en: '`coplot(y ~ x | z)`: If `y` and `x` are numeric vectors and `z` is a factor
    object, then this function plots `y` versus `x` for every level of `z`.'
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`coplot(y ~ x | z)`: 如果`y`和`x`是数值向量，而`z`是一个因子对象，那么这个函数将为`z`的每个水平绘制`y`与`x`的关系图。'
- en: 'For plotting distributions of data, one can use the following functions:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 对于绘制数据的分布，可以使用以下函数：
- en: '`hist(x)`: This produces a histogram of the numeric vector `x`.'
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`hist(x)`: 这条命令生成数值向量`x`的直方图。'
- en: '`qqplot(x, y)`: This plots the quantiles of `x` versus the quantiles of `y`
    to compare their respective distributions.'
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`qqplot(x, y)`: 这条命令将`x`的量数与`y`的量数进行比较，以比较它们的相应分布。'
- en: '`qqnorm(x)`: This plots the numeric vector `x` against the expected normal
    order scores.'
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`qqnorm(x)`: 这条命令将数值向量`x`与预期的正态顺序得分进行比较。'
- en: Low-level plotting commands
  id: totrans-181
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 低级绘图命令
- en: 'To add points and lines to a plot, the following commands can be used:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 要向图表添加点和线，可以使用以下命令：
- en: '`points(x, y)`: This adds point (x, y) to the current plot.'
  id: totrans-183
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`points(x, y)`: 这条命令将点(x, y)添加到当前图表。'
- en: '`lines(x, y)`: This adds a connecting line to the current plot.'
  id: totrans-184
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`lines(x, y)`: 这条命令向当前图表添加连接线。'
- en: '`abline(a, b)`: This adds a line of the slope `b` and intercepts `a` to the
    current plot.'
  id: totrans-185
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`abline(a, b)`: 这条命令向当前图表添加斜率为`b`、截距为`a`的直线。'
- en: '`polygon(x, y, …)`: This draws a polygon defined by the ordered vertices (x,
    y, …).'
  id: totrans-186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`polygon(x, y, …)`: 这条命令用于绘制由有序顶点(x, y, …)定义的多边形。'
- en: 'To add the text to a plot, use the following functions:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 要向图表添加文本，请使用以下函数：
- en: '`text(x, y, labels)`: This adds text to the current plot at point (x, y).'
  id: totrans-188
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`text(x, y, labels)`: 这条命令在当前图表的点(x, y)处添加文本。'
- en: '`legend(x, y, legend)`: This adds a legend to the current plot at point (x,
    y).'
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`legend(x, y, legend)`: 这条命令在当前图表的点(x, y)处添加图例。'
- en: '`title(main, sub)`: This adds a title `main` at the top of the current plot
    in a large font and a subtitle `sub` at the bottom in a smaller font.'
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`title(main, sub)`: 这条命令在当前图表的顶部添加一个标题`main`，使用大字体，并在底部添加一个副标题`sub`，使用小字体。'
- en: '`axis(side, …)`: This adds an axis to the current plot on the side given by
    the first argument. The `side` can take values from 1 to 4 counting clockwise
    from the bottom.'
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`axis(side, …)`: 这条命令在由第一个参数给出的侧边添加一个轴到当前图表。`side`可以取从1到4的值，从底部开始按顺时针方向计数。'
- en: 'The following example shows how to plot a scatter plot and add a trend line.
    For this, we will use the famous Iris dataset, created by R. A. Fisher, that is
    available in R itself:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例展示了如何绘制散点图并添加趋势线。为此，我们将使用由R.A. Fisher创建的著名Iris数据集，该数据集在R中本身可用：
- en: '[PRE32]'
  id: totrans-193
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: '![Low-level plotting commands](img/image00251.jpeg)'
  id: totrans-194
  prefs: []
  type: TYPE_IMG
  zh: '![低级绘图命令](img/image00251.jpeg)'
- en: Interactive graphics functions
  id: totrans-195
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 交互式图形函数
- en: 'There are functions in R that enable users to add or extract information from
    a plot using the mouse in an interactive manner:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: R中有函数允许用户以交互方式使用鼠标从图表中添加或提取信息：
- en: '`locator (n , type)`: This waits for the user to select the `n` locations on
    the current plot using the left-mouse button. Here, type is one of `n`, `p`, `l`
    or `o` to plot points or lines at these locations. For example, to place a legend
    *Outlier* near an outlier point, use the following code:'
  id: totrans-197
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`locator (n , type)`: 该命令等待用户使用左键在当前图表上选择`n`个位置。在这里，`type`可以是`n`、`p`、`l`或`o`，用于在这些位置绘制点或线。例如，要将图例*Outlier*放置在异常点附近，可以使用以下代码：'
- en: '[PRE33]'
  id: totrans-198
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: '`identify(x, y, label)`: This allows the user to highlight any of the points,
    `x` and `y`, selected using the left-mouse button by placing the label nearby.'
  id: totrans-199
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`identify(x, y, label)`: 这允许用户通过在附近放置标签来突出显示使用左键选择的任何点`x`和`y`。'
- en: Sampling
  id: totrans-200
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 抽样
- en: Often, we would be interested in creating a representative dataset, for some
    analysis or design of experiments, by sampling from a population. This is particularly
    the case for Bayesian inference, as we will see in the later chapters, where samples
    are drawn from posterior distribution for inference. Therefore, it would be useful
    to learn how to sample *N* points from some well-known distributions in this chapter.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，我们会对从总体中抽取的代表性数据集感兴趣，用于某些分析或实验设计。这在贝叶斯推断中尤其如此，正如我们将在后面的章节中看到的那样，样本是从后验分布中抽取的。因此，在本章中学习如何从某些已知分布中抽取*N*个点将是有用的。
- en: Before we use any particular sampling methods, readers should note that R, like
    any other computer program, uses pseudo random number generators for sampling.
    It is useful to supply a starting seed number to get reproducible results. This
    can be done using the `set.seed(n)` command with an integer `n` as the seed.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们使用任何特定的抽样方法之前，读者应该注意，R，像任何其他计算机程序一样，使用伪随机数生成器进行抽样。提供起始种子数以获得可重复的结果是有用的。这可以通过使用
    `set.seed(n)` 命令并使用整数 `n` 作为种子来完成。
- en: Random uniform sampling from an interval
  id: totrans-203
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 从区间进行随机均匀抽样
- en: 'To generate *n* random numbers (numeric) that are uniformly distributed in
    the interval *[a, b]*, one can use the `runif()` function:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 要生成在区间 *[a, b]* 内均匀分布的 *n* 个随机数（数值），可以使用 `runif()` 函数：
- en: '[PRE34]'
  id: totrans-205
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: Without any arguments, `runif()` will generate uniform random numbers between
    0 and 1.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 如果没有提供任何参数，`runif()` 将生成介于 0 和 1 之间的均匀随机数。
- en: 'If we want to generate random integers uniformly distributed in an interval,
    the function to use is `sample()`:'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们想要生成在区间内均匀分布的随机整数，可以使用 `sample()` 函数：
- en: '[PRE35]'
  id: totrans-208
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: The option `replace=T` indicates that the repetition is allowed.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 选项 `replace=T` 表示允许重复。
- en: Sampling from normal distribution
  id: totrans-210
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 从正态分布中进行抽样
- en: 'Often, we may want to generate data that is distributed according to a particular
    distribution, say normal distribution. In the case of univariate distributions,
    R has several in-built functions for this. For sampling data from a normal distribution,
    the function to be used is `rnorm()`. For example, consider the following code:'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，我们可能想要生成符合特定分布的数据，例如正态分布。在单变量分布的情况下，R 有几个内置函数用于此目的。对于从正态分布中抽样数据，要使用的函数是 `rnorm()`。例如，考虑以下代码：
- en: '[PRE36]'
  id: totrans-212
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: This generates five random numbers distributed according to a normal distribution
    with mean 0 and standard deviation 1.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 这将生成五个随机数，这些数遵循均值为 0、标准差为 1 的正态分布。
- en: Similarly, one can use the `rbinom()` function for sampling from a binomial
    distribution, `rpois()` to sample from a Poisson distribution, `rbeta()` to sample
    from a Beta distribution, and `rgamma()` to sample from a Gamma distribution to
    mention a few other distributions.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 类似地，可以使用 `rbinom()` 函数从二项分布中进行抽样，`rpois()` 用于从泊松分布中进行抽样，`rbeta()` 用于从 Beta 分布中进行抽样，以及
    `rgamma()` 用于从 Gamma 分布中进行抽样，以提及其他一些分布。
- en: Exercises
  id: totrans-215
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 练习
- en: 'For the following exercises in this chapter, we use the Auto MPG dataset from
    the UCI Machine Learning repository (references 5 and 6 in the *References* section
    of this chapter). The dataset can be downloaded from [https://archive.ics.uci.edu/ml/datasets.html](https://archive.ics.uci.edu/ml/datasets.html).
    The dataset contains the fuel consumption of cars in the US measured during 1970-1982\.
    Along with consumption values, there are attribute variables, such as the number
    of cylinders, displacement, horse power, weight, acceleration, year, origin, and
    the name of the car:'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 对于本章的以下练习，我们使用来自 UCI 机器学习存储库的 Auto MPG 数据集（本章参考文献部分的第 5 和 6 条）。数据集可以从 [https://archive.ics.uci.edu/ml/datasets.html](https://archive.ics.uci.edu/ml/datasets.html)
    下载。该数据集包含 1970-1982 年间在美国测量的汽车油耗。除了消耗值外，还有属性变量，如气缸数、排量、马力、重量、加速度、年份、产地和汽车名称：
- en: Load the dataset into R using the `read.table()` function.
  id: totrans-217
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `read.table()` 函数将数据集加载到 R 中。
- en: Produce a box plot of mpg values for each car name.
  id: totrans-218
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为每个汽车名称生成 mpg 值的箱线图。
- en: Write a function that will compute the scaled value (subtract the mean and divide
    by standard deviation) of a column whose name is given as an argument of the function.
  id: totrans-219
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编写一个函数，该函数将计算给定列名的缩放值（减去平均值并除以标准差）。
- en: Use the `lapply()` function to compute scaled values for all variables.
  id: totrans-220
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `lapply()` 函数计算所有变量的缩放值。
- en: Produce a scatter plot of mgp versus acceleration for each car name using `coplot()`.
    Use legends to annotate the graph.
  id: totrans-221
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `coplot()` 函数为每个汽车名称生成 mpg 与加速度的散点图。使用图例注释图形。
- en: References
  id: totrans-222
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考文献
- en: 'Matloff N. *The Art of R Programming – A Tour of Statistical Software Design*.
    No Starch Press. 2011\. ISBN-10: 1593273843'
  id: totrans-223
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'Matloff N. *R 编程艺术 – 统计软件设计之旅*. No Starch Press. 2011\. ISBN-10: 1593273843'
- en: 'Teetor P. *R Cookbook*. O''Reilly Media. 2011\. ISBN-10: 0596809158'
  id: totrans-224
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'Teetor P. *R 烹饪书*. O''Reilly Media. 2011\. ISBN-10: 0596809158'
- en: 'Wickham H. *Advanced R*. Chapman & Hall/CRC The R Series. 2015\. ISBN-10: 1466586966'
  id: totrans-225
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'Wickham H. *高级 R*. Chapman & Hall/CRC The R Series. 2015\. ISBN-10: 1466586966'
- en: 'Wickham H. *ggplot2: Elegant Graphics for Data Analysis (Use R!)*. Springer.
    2010\. ISBN-10: 0387981403'
  id: totrans-226
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'Wickham H. *ggplot2: 数据分析的优雅图形（使用 R!）*. Springer. 2010\. ISBN-10: 0387981403'
- en: Auto MPG Data Set, UCI Machine Learning repository, [https://archive.ics.uci.edu/ml/datasets/Auto+MPG](https://archive.ics.uci.edu/ml/datasets/Auto+MPG)
  id: totrans-227
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Auto MPG数据集，UCI机器学习仓库，[https://archive.ics.uci.edu/ml/datasets/Auto+MPG](https://archive.ics.uci.edu/ml/datasets/Auto+MPG)
- en: 'Quinlan R. "Combining Instance-Based and Model-Based Learning". In: Tenth International
    Conference of Machine Learning. 236-243\. University of Massachusetts, Amherst.
    Morgan Kaufmann. 1993'
  id: totrans-228
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'Quinlan R. "Combining Instance-Based and Model-Based Learning". In: Tenth International
    Conference of Machine Learning. 236-243\. University of Massachusetts, Amherst.
    Morgan Kaufmann. 1993'
- en: Tip
  id: totrans-229
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: '**Downloading the example code**'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: '**下载示例代码**'
- en: You can download the example code files from your account at [http://www.packtpub.com](http://www.packtpub.com)
    for all the Packt Publishing books you have purchased. If you purchased this book
    elsewhere, you can visit [http://www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files e-mailed directly to you.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从[http://www.packtpub.com](http://www.packtpub.com)下载您购买的所有Packt Publishing书籍的示例代码文件。如果您在其他地方购买了这本书，您可以访问[http://www.packtpub.com/support](http://www.packtpub.com/support)并注册，以便将文件直接通过电子邮件发送给您。
- en: Summary
  id: totrans-232
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, you were introduced to the R environment. After reading through
    this chapter, you learned how to import data into R, make a selection of subsets
    of data for their analysis, and write simple R programs using functions and control
    structures. Also, you should now be familiar with the graphical capabilities of
    R and some advanced capabilities, such as loop functions. In the next chapter,
    we will begin the central theme of this book, Bayesian inference.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您被介绍了R环境。阅读完本章后，您学习了如何将数据导入R，选择数据子集进行分析，以及使用函数和控制结构编写简单的R程序。此外，您现在应该熟悉R的图形功能以及一些高级功能，例如循环函数。在下一章中，我们将开始介绍本书的核心主题，贝叶斯推理。
