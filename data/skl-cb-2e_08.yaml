- en: Support Vector Machines
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 支持向量机
- en: 'In this chapter, we will cover these recipes:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下内容：
- en: Classifying data with a linear SVM
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用线性SVM进行数据分类
- en: Optimizing an SVM
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 优化SVM
- en: Multiclass classification with SVM
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用SVM进行多类分类
- en: Support vector regression
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持向量回归
- en: Introduction
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: In this chapter, we will start by using a **support vector machine** (**SVM**)
    with a linear kernel to get a rough idea of how SVMs work. They create a hyperplane,
    or linear surface in several dimensions, which best separates the data.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将首先使用**支持向量机**（**SVM**）与线性核，以大致了解SVM的工作原理。它们创建一个超平面，或在多个维度中的线性面，最佳地分隔数据。
- en: 'In two dimensions, this is easy to see: the hyperplane is a line that separates
    the data. We will see the array of coefficients and intercept of the SVM. Together
    they uniquely describe a scikit-learn linear SVC predictor.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在二维空间中，这很容易看出：超平面是分隔数据的直线。我们将看到SVM的系数和截距数组。它们一起唯一地描述了一个`scikit-learn`线性SVC预测器。
- en: In the rest of the chapter, the SVMs have a **radial basis function** (**RBF**)
    kernel. They are nonlinear, but with smooth separating surfaces. In practice,
    SVMs work well with many datasets and thus are an integral part of the `scikit-learn`
    library.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章的其余部分，SVM使用**径向基函数**（**RBF**）核。它们是非线性的，但具有平滑的分隔面。在实际应用中，SVM在许多数据集上表现良好，因此是`scikit-learn`库的一个重要组成部分。
- en: Classifying data with a linear SVM
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用线性SVM进行数据分类
- en: In the first chapter, we saw some examples of classification with SVMs. We focused
    on SVMs' slightly superior classification performance compared to logistic regression,
    but for the most part, we left SVMs alone.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在第一章中，我们看到了一些使用SVM进行分类的示例。我们重点讨论了SVM在分类性能上略优于逻辑回归，但大部分时间我们并未深入探讨SVM。
- en: Here, we will focus on them more closely. While SVMs do not have an easy probabilistic
    interpretation, they do have an easy visual-geometric one. The main idea behind
    linear SVMs is to separate two classes with the best possible plane.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们将更仔细地关注它们。虽然SVM没有容易的概率解释，但它们有一个直观的几何解释。线性SVM的主要思想是通过最佳的平面分隔两个类。
- en: Let's linearly separate two classes with an SVM.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用SVM对两个类进行线性分隔。
- en: Getting ready
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'Let us start by loading and visualizing the iris dataset available in scikit-learn:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从加载并可视化`scikit-learn`中提供的鸢尾花数据集开始：
- en: Load the data
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 加载数据
- en: 'Load part of the iris dataset. This will allow for easy comparison with the
    first chapter:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 加载部分鸢尾花数据集。这将使我们能够与第一章进行轻松的比较：
- en: '[PRE0]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Now, we will use a NumPy mask to focus on the first two classes:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将使用NumPy掩码来关注前两个类：
- en: '[PRE1]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Visualize the two classes
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 可视化这两个类
- en: Plot the classes `0` and `1` with matplotlib. Recall that the notation `X_0[:,0]`
    refers to the first column of a NumPy array.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 使用matplotlib绘制`0`和`1`类。请记住，`X_0[:,0]`表示NumPy数组的第一列。
- en: 'In the following code, `X_0` refers to the subset of inputs `X` that correspond
    to the target `y` being `0` and `X_1` is a subset with a matching target value
    of `1`:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下代码中，`X_0`表示与目标`y`为`0`相对应的输入子集，而`X_1`是目标值为`1`的匹配子集：
- en: '[PRE2]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![](img/e3e10b08-ae0c-441c-a69c-3b72d5ab0389.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e3e10b08-ae0c-441c-a69c-3b72d5ab0389.png)'
- en: From the graph, it is clear that we could find a straight line to separate these
    two classes.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 从图表中可以清楚地看出，我们可以找到一条直线来分隔这两个类。
- en: How to do it...
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'The process of finding the SVM line is straightforward. It is the same process
    as with any scikit-learn supervised learning estimator:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 找到SVM直线的过程很简单。这与任何`scikit-learn`的监督学习估计器的过程相同：
- en: Create training and testing sets.
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建训练集和测试集。
- en: Create an SVM model instance.
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建SVM模型实例。
- en: Fit the SVM model to the loaded data.
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将SVM模型拟合到加载的数据。
- en: Predict with the SVM model and measure the performance of the model in preparation
    for predictions of unseen data.
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用SVM模型进行预测，并在准备好对未见数据进行预测之前，衡量模型的性能。
- en: 'Let''s begin:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始吧：
- en: 'Split the dataset of the first two features of the first two classes. Stratify
    the target set:'
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将前两个类的前两个特征的数据集进行划分。对目标集进行分层：
- en: '[PRE3]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Create an SVM model instance. Set the kernel to be linear, as we want a line
    to separate the two classes that are involved in this example:'
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建SVM模型实例。将核设置为线性，因为我们希望有一条线来分隔这个例子中涉及的两个类：
- en: '[PRE4]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Fit the model (train the model):'
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 拟合模型（训练模型）：
- en: '[PRE5]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Predict using the test set:'
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用测试集进行预测：
- en: '[PRE6]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Measure the performance of the SVM on the test set:'
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测量SVM在测试集上的表现：
- en: '[PRE7]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: It did perfectly on the test set. This is not surprising, because when we visualized
    each class, they were easy to visually separate.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 它在测试集上表现得非常好。这并不奇怪，因为当我们可视化每个类别时，它们很容易被视觉上分开。
- en: 'Visualize the decision boundary, the line separating the classes, by using
    the estimator on a two-dimensional grid:'
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过在二维网格上使用估算器，来可视化决策边界，即分隔类别的直线：
- en: '[PRE8]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Plot the grid by coloring the predictions. Note that we have amended the previous
    visualization to include SVM predictions:'
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过为预测着色来绘制网格。请注意，我们已经修改了之前的可视化图像，加入了 SVM 的预测：
- en: '[PRE9]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '![](img/fe389784-e987-4481-9a99-a48e372f59b2.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![](img/fe389784-e987-4481-9a99-a48e372f59b2.png)'
- en: We fleshed out the SVM linear decision boundary by predicting on a two-dimensional
    grid.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 我们通过在二维网格上进行预测，详细描述了SVM线性决策边界。
- en: How it works...
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的……
- en: At times, it could be computationally expensive to predict on a whole grid of
    points, especially if the SVM is predicting many classes in many dimensions. In
    these cases, you will need access to the geometric information of the SVM decision
    boundary.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，在整个网格上进行预测计算可能非常昂贵，尤其是当 SVM 预测许多类别且维度较高时。在这种情况下，您将需要访问 SVM 决策边界的几何信息。
- en: 'A linear decision boundary, a hyperplane, is uniquely specified by a vector
    normal to the hyperplane and an intercept. The normal vectors are contained in
    the SVM instance''s `coef_ data` attribute. The intercepts are contained in the
    SVM instance''s `intercept_ data` attribute. View these two attributes:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 线性决策边界，一个超平面，是由一个垂直于超平面的向量和一个截距唯一确定的。法向量包含在SVM实例的`coef_ data`属性中。截距包含在SVM实例的`intercept_
    data`属性中。查看这两个属性：
- en: '[PRE10]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: You might be able to quickly see that the `coef_[0]` vector is perpendicular
    to the line we drew to separate both of the iris classes we have been viewing.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能会很快发现，`coef_[0]` 向量垂直于我们绘制的分隔两个鸢尾花类别的直线。
- en: 'Every time, these two NumPy arrays, `svm_inst.coef_` and `svm_inst.intercept_`,
    will have the same number of rows. Each row corresponds to each plane separating
    the classes involved. In the example, there are two classes linearly separated
    by one hyperplane. The particular SVM type, SVC in this case, implements a one-versus-one
    classifier: it will draw a unique plane separating every pair of classes involved.'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 每次，这两个 NumPy 数组 `svm_inst.coef_` 和 `svm_inst.intercept_` 的行数是相同的。每一行对应一个分隔相关类别的平面。在这个例子中，两个类别通过一个超平面线性分开。特定的
    SVM 类型，SVC 在这种情况下实现了一个一对一分类器：它会绘制一个唯一的平面来分隔每一对类别。
- en: 'If we were trying to separate three classes, there would be three possible
    combinations, 3 x 2/2 = 3\. For *n* classes, the number of planes provided by
    SVC is as follows:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们尝试分离三个类别，那么有三种可能的组合，3 x 2/2 = 3。对于 *n* 个类别，SVC 提供的平面数如下：
- en: '![](img/85dc7ab5-c651-4f01-8127-93b16db2445c.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![](img/85dc7ab5-c651-4f01-8127-93b16db2445c.png)'
- en: The number of columns in the `coef_ data` attribute is the number of features
    in the data, which in this case is two.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '`coef_ data` 属性中的列数是数据中特征的数量，在本例中是两个。'
- en: 'To find the decision in regards to a point in space, solve the following equation
    for zero:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 要找到关于空间中某一点的决策，求解以下方程为零：
- en: '![](img/a977e6ac-9fac-498b-8618-c28efc373378.png)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a977e6ac-9fac-498b-8618-c28efc373378.png)'
- en: If you only desire the uniqueness of the plane, store the tuple `(coef_, intercept_)`.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您只关心平面的唯一性，可以存储元组`(coef_, intercept_)`。
- en: There's more...
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多……
- en: 'Additionally, you can view the the parameters of the instance to learn more
    about it:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，您还可以查看实例的参数以了解更多信息：
- en: '[PRE11]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Traditionally, the SVC prediction performance is optimized over the following
    parameters: C, gamma, and the shape of the kernel. C describes the margin of the
    SVM and is set to one by default. The margin is the empty space on either side
    of the hyperplane with no class examples. If your dataset has many noisy observations,
    try higher Cs with cross-validation. C is proportional to error on the margin,
    and as C gets higher in value, the SVM will try to make the margin smaller.'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 传统上，SVC预测性能通过以下参数进行优化：C、gamma 和核的形状。C 描述了 SVM 的边距，默认设置为 1。边距是超平面两侧没有类别示例的空白区域。如果数据集有许多噪声观察值，可以尝试使用交叉验证来提高
    C 的值。C 与边距上的错误成正比，随着 C 值的增大，SVM 将尝试使边距更小。
- en: A final note on SVMs is that we could re-scale the data and test that scaling
    with cross-validation. Conveniently, the iris dataset has units of cms for all
    of the inputs so re-scaling is not necessary but for an arbitrary dataset you
    should look into it.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 关于SVM的最后一点是，我们可以重新缩放数据，并通过交叉验证测试该缩放效果。方便的是，鸢尾花数据集中的所有输入单位都是厘米，所以不需要重新缩放，但对于任意数据集，你应该考虑这个问题。
- en: Optimizing an SVM
  id: totrans-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 优化SVM
- en: For this example we will continue with the iris dataset, but will use two classes
    that are harder to tell apart, the Versicolour and Virginica iris species.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 在本示例中，我们将继续使用鸢尾花数据集，但使用两种难以区分的品种——变色鸢尾和维吉尼卡鸢尾。
- en: 'In this section we will focus on the following:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将重点关注以下内容：
- en: '**Setting up a scikit-learn pipeline**: A chain of transformations with a predictive
    model at the end'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**设置scikit-learn管道**：一系列变换，最后是一个预测模型'
- en: '**A grid search**: A performance scan of several versions of SVMs with varying
    parameters'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**网格搜索**：对多个版本的支持向量机（SVM）进行性能扫描，并改变其参数'
- en: Getting ready
  id: totrans-73
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'Load two classes and two features of the iris dataset:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 加载鸢尾花数据集中的两个类别和两个特征：
- en: '[PRE12]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: How to do it...
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Begin by splitting the data into training and testing sets:'
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先将数据分为训练集和测试集：
- en: '[PRE13]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Construct a pipeline
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建一个管道
- en: 'Then construct a pipeline with two steps: a scaling step and an SVM step. It
    is best to scale the data before passing it to an SVM:'
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后构建一个包含两个步骤的管道：一个缩放步骤和一个SVM步骤。在将数据传递给SVM之前，最好先进行缩放：
- en: '[PRE14]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Note that in the pipeline, the scaling step has the name `scaler` and the SVM
    has the name `svc`. The names will be crucial in the next step. Note that the
    default SVM is an RBF SVM, which is nonlinear.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，在管道中，缩放步骤的名称是`scaler`，SVM的名称是`svc`。这些名称在接下来的步骤中将非常关键。还要注意，默认的SVM是RBF SVM，它是非线性的。
- en: Construct a parameter grid for a pipeline
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为管道构建参数网格
- en: 'Vary the relevant RBF parameters, C and gamma, logarithmically, varying by
    one order of magnitude at a time:'
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以对数方式改变相关的RBF参数C和gamma，每次改变一个数量级：
- en: '[PRE15]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Finally, construct the parameter grid by making it into a dictionary. The SVM
    parameter dictionary key names begin with `svc__`, taking the pipeline SVM name
    and adding two underscores. This is followed by the parameter name within the
    SVM estimator, `C` and `gamma`:'
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，将参数网格构建成字典。SVM参数字典的键名以`svc__`开头，取管道SVM的名称并加上两个下划线。然后是SVM估计器内的参数名称，`C`和`gamma`：
- en: '[PRE16]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Provide a cross-validation scheme
  id: totrans-88
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 提供交叉验证方案
- en: 'The following is a stratified and shuffled split. The `n_splits` parameter
    refers to the number of splits, or tries, the dataset will be split into. The
    `test_size` parameter is how much data will be left out for testing within the
    fold. The estimator will be scored using the test set on each fold:'
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下是一个分层且经过洗牌的拆分。`n_splits`参数指的是数据集将被拆分成的折叠数或尝试次数。`test_size`参数则指每个折叠中留出来用于测试的数据量。估计器将在每个折叠中使用测试集评分：
- en: '[PRE17]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: The most important element of the stratified shuffle is that each fold preserves
    the proportion of samples for each class.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 分层洗牌的最重要元素是，每个折叠都保持每个类别样本的比例。
- en: 'For a plain cross-validation scheme, set `cv` to an integer representing the
    number of folds:'
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于普通的交叉验证方案，将`cv`设置为一个整数，表示折叠的数量：
- en: '[PRE18]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Perform a grid search
  id: totrans-94
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 执行网格搜索
- en: 'There are three required elements for a grid search:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 网格搜索需要三个必需的元素：
- en: An estimator
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 估计器
- en: A parameter grid
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 参数网格
- en: A cross-validation scheme
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个交叉验证方案
- en: 'We have those three elements. Set up the grid search. Run it on the training
    set:'
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们有这三项元素。设置网格搜索，并在训练集上运行：
- en: '[PRE19]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Look up the best parameters found with the grid search:'
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查找通过网格搜索找到的最佳参数：
- en: '[PRE20]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Look up the best score, that pertains to the best estimator:'
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查找与最佳估计器相关的最佳得分：
- en: '[PRE21]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: There's more...
  id: totrans-105
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多内容...
- en: Let us look at additional perspectives of SVM for classification.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从其他角度看一下SVM分类。
- en: Randomized grid search alternative
  id: totrans-107
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 随机网格搜索替代方案
- en: scikit-learn's `GridSearchCV` performs a full scan for the best set of parameters
    for the estimator. In this case, it searches the 5 x 5 = 25 (C, gamma) pairs specified
    by the `param_grid` parameter.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: scikit-learn的`GridSearchCV`会执行一个完整的扫描，以寻找估计器的最佳参数集。在此情况下，它会搜索由`param_grid`参数指定的5
    x 5 = 25（C，gamma）对。
- en: 'An alternative would have been using `RandomizedSearchCV`, by using the following
    line instead of the one used with `GridSearchCV`:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种选择是使用`RandomizedSearchCV`，通过使用以下这一行代替`GridSearchCV`所用的那一行：
- en: '[PRE22]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'It yields the same `C` and `gamma`:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 它得到了相同的`C`和`gamma`：
- en: '[PRE23]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Visualize the nonlinear RBF decision boundary
  id: totrans-113
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 可视化非线性 RBF 决策边界
- en: 'Visualize the RBF decision boundary with code similar to the previous recipe.
    First, create a grid and predict to which class each point on the grid corresponds:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 使用类似于之前配方的代码可视化 RBF 决策边界。首先，创建一个网格并预测网格上每个点对应的类别：
- en: '[PRE24]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Now visualize the grid:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 现在可视化网格：
- en: '[PRE25]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Note that in the resulting graph, the RBF curve looks quite straight, but it
    really corresponds to a slight curve. This is an SVM with gamma = 0.1 and C =
    0.001:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，在结果图中，RBF 曲线看起来相当直，但实际上它对应的是一条轻微的曲线。这是一个 gamma = 0.1 和 C = 0.001 的 SVM：
- en: '![](img/fc24acfb-8367-4673-86d1-c8af1c559b6e.png)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
  zh: '![](img/fc24acfb-8367-4673-86d1-c8af1c559b6e.png)'
- en: More meaning behind C and gamma
  id: totrans-120
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: C 和 gamma 的更多含义
- en: More intuitively, the gamma parameter determines how influential a single example
    can be per units of distance. If gamma is low, examples have an influence at long
    distances. If gamma is high, their influence is only over short distances. The
    SVM selects support vectors in its implementation, and gamma is inversely proportional
    to the radius of influence of these vectors.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 更直观地说，gamma 参数决定了单个样本对每单位距离的影响程度。如果 gamma 较低，则样本在较长距离处具有影响。如果 gamma 较高，则它们的影响仅限于较短的距离。SVM
    在其实现中选择支持向量，gamma 与这些向量的影响半径成反比。
- en: With regard to C, a low C makes the decision surface smoother, while a high
    C makes the SVM try to classify all the examples correctly and leads to surfaces
    that are not as smooth.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 关于 C，较低的 C 会使决策面更加平滑，而较高的 C 会使 SVM 尝试正确分类所有样本，导致不太平滑的决策面。
- en: Multiclass classification with SVM
  id: totrans-123
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 SVM 进行多类别分类
- en: We begin expanding the previous recipe to classify all iris flower types based
    on two features. This is not a binary classification problem, but a multiclass
    classification problem. These steps expand on the previous recipe.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将扩展前面的配方，通过两个特征对所有鸢尾花类型进行分类。这不是二分类问题，而是多分类问题。这些步骤是在之前配方的基础上扩展的。
- en: Getting ready
  id: totrans-125
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备就绪
- en: The SVC classifier (scikit's SVC) can be changed slightly in the case of multiclass
    classifications. For this, we will use all three classes of the iris dataset.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 对于多分类问题，SVC 分类器（scikit 的 SVC）可以稍作修改。为此，我们将使用鸢尾数据集中的所有三个类别。
- en: 'Load two features for each class:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 为每个类别加载两个特征：
- en: '[PRE26]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Split the data into training and testing sets:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 将数据拆分为训练集和测试集：
- en: '[PRE27]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: How to do it...
  id: totrans-131
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: OneVsRestClassifier
  id: totrans-132
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: OneVsRestClassifier
- en: 'Load `OneVsRestClassifier` within a pipeline:'
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在管道中加载 `OneVsRestClassifier`：
- en: '[PRE28]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Set up a parameter grid:'
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置参数网格：
- en: '[PRE29]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Construct the parameter grid. Note the very special syntax to denote the `OneVsRestClassifier`
    SVC. The parameter key names within the dictionary start with `svc__estimator__`
    when named `svc` within the pipeline:'
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 构建参数网格。注意，表示 `OneVsRestClassifier` SVC 的语法非常特殊。当在管道中命名为 `svc` 时，字典中的参数键名以 `svc__estimator__`
    开头：
- en: '[PRE30]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Load a randomized hyperparameter search. Fit it:'
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 加载一个随机化的超参数搜索。拟合它：
- en: '[PRE31]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Look up the best parameters:'
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查找最佳参数：
- en: '[PRE32]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: Visualize it
  id: totrans-143
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 可视化它
- en: 'We are going to predict the category of every point in a two-dimensional grid
    by calling the trained SVM to predict along the grid:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将通过调用训练好的 SVM 来预测二维网格中每个点的类别：
- en: '[PRE33]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: '![](img/efceac4a-81bf-44db-ba2e-15889c0a8e6c.png)'
  id: totrans-146
  prefs: []
  type: TYPE_IMG
  zh: '![](img/efceac4a-81bf-44db-ba2e-15889c0a8e6c.png)'
- en: The boundaries generated by SVM tend to be  smooth curves, very different from
    the tree-based boundaries we will see in upcoming chapters.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: SVM 生成的边界通常是平滑曲线，这与我们将在接下来的章节中看到的基于树的边界非常不同。
- en: How it works...
  id: totrans-148
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'The `OneVsRestClassifier` creates many binary SVC classifiers: one for each
    class versus the rest of the classes. In this case, three decision boundaries
    will be computed because there are three classes. This type of classifier is easy
    to conceptualize because there are fewer decision boundaries and surfaces.'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: '`OneVsRestClassifier` 创建许多二元 SVC 分类器：每个类别与其他类别进行对比。在这种情况下，将计算三个决策边界，因为有三个类别。这种类型的分类器很容易理解，因为决策边界和面较少。'
- en: If there were 10 classes, there would be 10 x 9/2 = 45 surfaces if SVC was the
    default `OneVsOneClassifier`. On the other hand, there would be 10 surfaces for
    the `OneVsAllClassifier`.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 如果有 10 个类别，使用默认的 `OneVsOneClassifier`（SVC）会有 10 x 9/2 = 45 个边界。另一方面，使用 `OneVsAllClassifier`
    会有 10 个边界。
- en: Support vector regression
  id: totrans-151
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 支持向量回归
- en: We will capitalize on the SVM classification recipes by performing support vector
    regression on scikit-learn's diabetes dataset.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将利用 SVM 分类的配方，在 scikit-learn 的糖尿病数据集上执行支持向量回归。
- en: Getting ready
  id: totrans-153
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备就绪
- en: 'Load the diabetes dataset:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 加载糖尿病数据集：
- en: '[PRE34]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'Split the data in training and testing sets. There is no stratification for
    regression in this case:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 将数据划分为训练集和测试集。此情况下回归问题没有分层：
- en: '[PRE35]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: How to do it...
  id: totrans-158
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Create a `OneVsRestClassifier` within a pipeline and **s****upport vector regression**
    (**SVR**) from `sklearn.svm`:'
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在管道中创建一个`OneVsRestClassifier`，并从`sklearn.svm`导入**支持向量回归**（**SVR**）：
- en: '[PRE36]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Create a parameter grid:'
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个参数网格：
- en: '[PRE37]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'Perform a randomized search of the best hyperparameters, C and gamma:'
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 执行随机搜索以寻找最佳超参数，C 和 gamma：
- en: '[PRE38]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'Look at the best parameters:'
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查看最佳参数：
- en: '[PRE39]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'Look at the best score:'
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查看最佳分数：
- en: '[PRE40]'
  id: totrans-168
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: The score does not seem very good. Try different algorithms with different score
    setups and see which one performs best.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 分数似乎不是很好。尝试不同的算法和不同的评分设置，看看哪个表现最好。
