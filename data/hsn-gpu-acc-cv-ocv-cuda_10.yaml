- en: Getting Started with PyCUDA
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: PyCUDA 入门
- en: We have seen how we can accelerate various applications using OpenCV and CUDA.
    We have used C or C++ as a programming language. Nowadays, Python is very popular
    in many domains, so it will be very useful if we can accelerate Python applications
    using CUDA. Python provides a PyCUDA module that does exactly that.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经看到如何使用 OpenCV 和 CUDA 加速各种应用。我们使用了 C 或 C++ 作为编程语言。如今，Python 在许多领域都非常流行，因此如果我们能够使用
    CUDA 加速 Python 应用程序，将会非常有用。Python 提供了一个 PyCUDA 模块，它正是为此而设计的。
- en: It uses the Nvidia CUDA toolkit which, in turn, requires an Nvidia graphics
    card installed on the computer. This chapter will give an introduction to the
    Python language and the PyCUDA module, in particular. It will discuss the installation
    procedure for the PyCUDA module on the Windows and Linux operating systems. Though
    the chapter requires some familiarity with the Python language, newcomers will
    also be able to follow most of the procedures.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 它使用 Nvidia CUDA 工具包，这反过来又需要在计算机上安装 Nvidia 显卡。本章将介绍 Python 语言和 PyCUDA 模块，特别是。它将讨论在
    Windows 和 Linux 操作系统上安装 PyCUDA 模块的安装过程。尽管本章需要一些对 Python 语言的熟悉，但新来者也能跟随大多数步骤。
- en: 'The following topics will be covered in this chapter:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Introduction to the Python Programming Language
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python 编程语言简介
- en: Introduction to the PyCUDA module
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PyCUDA 模块简介
- en: Installation of PyCUDA on Windows
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Windows 上安装 PyCUDA
- en: Installation of PyCUDA on Ubuntu
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Ubuntu 上安装 PyCUDA
- en: Technical requirements
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'This chapter requires a good understanding of the Python programming language.
    It also requires any computer or laptop with an Nvidia GPU on board. The PyCUDA
    installation file for Windows used in this chapter can be downloaded from the
    following GitHub link: [https://github.com/PacktPublishing/Hands-On-GPU-Accelerated-Computer-Vision-with-OpenCV-and-CUDA](https://github.com/PacktPublishing/Hands-On-GPU-Accelerated-Computer-Vision-with-OpenCV-and-CUDA).'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 本章需要良好的 Python 编程语言理解。它还需要任何配备 Nvidia GPU 的计算机或笔记本电脑。本章中使用的 Windows PyCUDA 安装文件可以从以下
    GitHub 链接下载：[https://github.com/PacktPublishing/Hands-On-GPU-Accelerated-Computer-Vision-with-OpenCV-and-CUDA](https://github.com/PacktPublishing/Hands-On-GPU-Accelerated-Computer-Vision-with-OpenCV-and-CUDA)。
- en: Introduction to Python programming language
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Python 编程语言简介
- en: Python is continuously gaining popularity as it can be used in many fields with
    a wide range of applications. It is a high-level programming language that helps
    in expressing complex systems with a few lines of code. The Python syntax is easy
    to learn and more readable than other languages such as C++ and Java, which makes
    it easy to learn for novice programmers.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: Python 正在持续增加其受欢迎程度，因为它可以在许多领域使用，具有广泛的应用。它是一种高级编程语言，可以帮助用几行代码表达复杂的系统。Python
    语法易于学习，比其他语言如 C++ 和 Java 更易于阅读，这使得它对新手程序员来说更容易学习。
- en: Python is a lightweight scripting language that can be easily used in embedded
    applications. Moreover, it is an interpreted language that requires an interpreter
    rather than a compiler, as is case for other programming languages. This allows
    the programmer to execute code line by line. It requires a Python interpreter
    that can be easily installed on all operating systems. Since Python is open source,
    a large community chooses to work with it. They have developed a wide range of
    libraries and made it open source, and hence it can be easily used in applications
    without any cost.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: Python 是一种轻量级的脚本语言，可以轻松用于嵌入式应用。此外，它是一种解释型语言，需要解释器而不是编译器，这与其他编程语言不同。这允许程序员逐行执行代码。它需要一个可以在所有操作系统上轻松安装的
    Python 解释器。由于 Python 是开源的，因此一个庞大的社区选择与之合作。他们开发了一系列库，并将其开源，因此它可以无成本地用于应用程序。
- en: Python can be used in various domains such as data science, machine learning,
    deep learning, data analytics, image processing, computer vision, data mining,
    and web development. It has ready-to-use modules for almost all of the OS mentioned
    domains, which help in the rapid development of applications. OpenCV library,
    which was explained earlier in this book, also has a Python interface. Thus, it
    can be easily integrated with Python code for computer vision applications. Python
    has libraries for machine learning and deep learning that can be used for computer
    vision applications along with OpenCV.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: Python 可以用于各种领域，如数据科学、机器学习、深度学习、数据分析、图像处理、计算机视觉、数据挖掘和网页开发。它几乎为所有提到的操作系统领域提供了现成的模块，有助于快速开发应用程序。本书前面解释过的
    OpenCV 库也具有 Python 接口。因此，它可以轻松地与 Python 代码集成，用于计算机视觉应用程序。Python 还具有用于机器学习和深度学习的库，可以与
    OpenCV 一起用于计算机视觉应用程序。
- en: One disadvantage of an interpreted language like Python is that it is much slower
    than compiled languages like C or C++. Python has a feature whereby it can integrate
    C or C++ code within a Python script. This allows you to write computationally
    intensive code in C or C++ with a Python wrapper.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 类似于 Python 这样的解释语言的一个缺点是，它比编译语言如 C 或 C++ 慢得多。Python 有一个特性，可以在 Python 脚本中集成 C
    或 C++ 代码。这允许你使用 Python 包装器编写计算密集型的 C 或 C++ 代码。
- en: Introduction to the PyCUDA module
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: PyCUDA 模块简介
- en: In the last section, we saw many advantages of using the Python programming
    language. It is also mentioned that Python is much slower than C or C++. So, it
    will be beneficial if it can leverage the parallel processing capability of a
    GPU. Python provides a PyCUDA wrapper that can utilize the parallel computing
    capability of a GPU by using the Nvidia CUDA API. Python also has a `PyOpenCL`
    module that can be used for parallel computation on any GPU.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在最后一节中，我们看到了使用 Python 编程语言的优势。还提到 Python 比 C 或 C++ 慢得多。因此，如果它能利用 GPU 的并行处理能力，将会很有益。Python
    提供了一个 PyCUDA 包装器，可以通过使用 Nvidia CUDA API 来利用 GPU 的并行计算能力。Python 还有一个 `PyOpenCL`
    模块，可以用于任何 GPU 上的并行计算。
- en: 'Then, one question you might ask is why you have to use PyCUDA, which is specific
    to Nvidia GPUs. There are many advantages of using PyCUDA over other similar modules;
    the following are the reasons:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，你可能会有一个疑问，为什么你必须使用 PyCUDA，它是专门针对 Nvidia GPU 的。使用 PyCUDA 相比其他类似模块有许多优势；以下是一些原因：
- en: It provides an easy interface with CUDA API for Python developers and has good
    documentation, which make it easy to learn.
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它为 Python 开发者提供了一个与 CUDA API 交互的简单接口，并且有良好的文档，这使得学习变得容易。
- en: The full power of CUDA API provided by Nvidia can be used within Python code
    using the PyCUDA module.
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以使用 PyCUDA 模块在 Python 代码中利用 Nvidia 提供的 CUDA API 的全部功能。
- en: The base layer of PyCUDA is written in C++, which makes it faster.
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PyCUDA 的基础层是用 C++ 编写的，这使得它更快。
- en: It has a higher level of abstraction, which makes it easy to use compared to
    the Nvidia C-based runtime API.
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它具有更高的抽象级别，与基于 Nvidia C 的运行时 API 相比，使用起来更简单。
- en: It has a very efficient memory management mechanism with object cleanup tied
    to the lifetime of the objects. This feature helps it to write correct code, without
    memory leak or crashing.
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它具有非常高效的内存管理机制，与对象的生存期相关联的对象清理功能。这个特性帮助它编写正确的代码，没有内存泄漏或崩溃。
- en: The errors within the CUDA code can also be handled by Python exceptions, which
    helps with the error-handling mechanism in the code.
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CUDA 代码中的错误也可以通过 Python 异常来处理，这有助于代码中的错误处理机制。
- en: This section described the advantage of using PyCUDA for the acceleration of
    Python applications. In the next section, we will see the procedure to install
    PyCUDA on Windows and Ubuntu operating systems.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 本节描述了使用 PyCUDA 加速 Python 应用程序的优势。在下一节中，我们将看到如何在 Windows 和 Ubuntu 操作系统上安装 PyCUDA
    的步骤。
- en: Installing PyCUDA on Windows
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Windows 上安装 PyCUDA
- en: 'This section will describe the steps to install PyCUDA on a Windows operating
    system. Windows 10 is used for the demonstration, but the procedure will work
    on any recent Windows versions. The steps are described below:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 本节将描述在 Windows 操作系统上安装 PyCUDA 的步骤。演示使用的是 Windows 10，但该过程适用于任何较新的 Windows 版本。以下是步骤描述：
- en: 'If you have not installed CUDA toolkit, as described in the first chapter,
    then download the latest CUDA toolkit from [https://developer.nvidia.com/cuda-downloads](https://developer.nvidia.com/cuda-downloads).
    It will ask for your operating system, CPU architecture, and whether to install
    using the internet or to download the entire installer first. As can be seen from
    the following screenshot, we have chosen Windows 10 with the local installer.
    You can choose values according to your settings:'
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您尚未安装CUDA工具包，如第一章所述，请从[https://developer.nvidia.com/cuda-downloads](https://developer.nvidia.com/cuda-downloads)下载最新的CUDA工具包。它将询问您的操作系统、CPU架构以及是否通过互联网安装或先下载整个安装程序。如下面的截图所示，我们选择了带有本地安装程序的Windows
    10。您可以根据您的设置选择相应的值：
- en: '![](img/ae642ac8-6b1a-4f9b-9532-8fbe1e3cb864.png)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/ae642ac8-6b1a-4f9b-9532-8fbe1e3cb864.png)'
- en: Install the CUDA toolkit by double-clicking on the downloaded installer and
    follow the on-screen prompts.
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 双击下载的安装程序并按照屏幕提示安装CUDA工具包。
- en: 'Install the latest Visual Studio edition, which has a visual C++ version. We
    are using Visual Studio 2017 community edition, which is free to use. The path
    for visual C++ should be added to the path environment variable. The environment
    variable can be accessed by right-clicking on My Computer (This PC) | Properties
    |Advanced System Settings | Environment Variables | System variables. Add the
    path for the bin folder of the visual C++ installation and CUDA toolkit installation
    in the path environment variable, as shown in the following screenshot:'
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装具有可视化C++版本的最新Visual Studio版本。我们使用的是免费的Visual Studio 2017社区版，其可视化C++路径应添加到路径环境变量中。可以通过右键单击我的电脑（此电脑）|属性|高级系统设置|环境变量|系统变量来访问环境变量。在路径环境变量中添加可视化C++安装和CUDA工具包安装的bin文件夹路径，如下面的截图所示：
- en: '![](img/a70049af-9585-4a38-8118-9a140b897611.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/a70049af-9585-4a38-8118-9a140b897611.png)'
- en: 'Anaconda distribution will be used as a Python interpreter so it can be downloaded
    from the site: [https://www.anaconda.com/download/](https://www.anaconda.com/download/).
    We are using Anaconda 5.2 with the Python 3.6 version, as shown in the following
    screenshot:'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将Anaconda分布用作Python解释器，因此可以从以下网站下载：[https://www.anaconda.com/download/](https://www.anaconda.com/download/)。我们使用的是Python
    3.6版本的Anaconda 5.2，如下面的截图所示：
- en: '![](img/42406870-55a4-4387-828f-335d04cca10a.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/42406870-55a4-4387-828f-335d04cca10a.png)'
- en: Install Anaconda by double-clicking on the downloaded installer and following
    the on-screen prompts. Make sure you check the checkbox for adding the installation
    path to the path environment variable.
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 双击下载的安装程序并按照屏幕提示安装Anaconda。确保勾选将安装路径添加到路径环境变量的复选框。
- en: 'Download the latest PyCUDA binary according to your system settings from the
    following link: [https://www.lfd.uci.edu/~gohlke/Pythonlibs/#pycuda](https://www.lfd.uci.edu/~gohlke/pythonlibs/#pycuda).
    We are using CUDA 9.2148 and Python 3.6, so the PyCUDA version is chosen accordingly,
    as the following shows:'
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根据您的系统设置，从以下链接下载最新的PyCUDA二进制文件：[https://www.lfd.uci.edu/~gohlke/Pythonlibs/#pycuda](https://www.lfd.uci.edu/~gohlke/pythonlibs/#pycuda)。我们使用CUDA
    9.2148和Python 3.6，因此选择了相应的PyCUDA版本，如下所示：
- en: '![](img/30cf9414-6c74-4169-afec-83990c47786d.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/30cf9414-6c74-4169-afec-83990c47786d.png)'
- en: 'Open Command Prompt, go to the folder where the PyCUDA binary is downloaded
    and execute the command as shown in the following screenshot:'
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开命令提示符，转到PyCUDA二进制文件下载的文件夹，并执行以下截图所示的命令：
- en: '![](img/472e61cf-6ce4-4c7e-9c99-5e40b9498d48.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/472e61cf-6ce4-4c7e-9c99-5e40b9498d48.png)'
- en: The command will complete the installation of PyCUDA in the Python distribution.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 命令将在Python分布中完成PyCUDA的安装。
- en: Steps to check PyCUDA installation
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检查PyCUDA安装步骤
- en: 'The following steps are to be followed to check whether PyCUDA has been installed
    correctly or not:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤用于检查PyCUDA是否已正确安装：
- en: Open Spyder, which is a Python IDE, that comes with Anaconda installations.
    You can open it by writing `Spyder` in the start menu.
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开Spyder，这是一个随Anaconda安装一起提供的Python IDE。您可以在开始菜单中输入`Spyder`来打开它。
- en: In Spyder IDE, type `import pycuda` on the IPython console as shown in the following
    screenshot. If no error is reported, then PyCUDA is installed correctly.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Spyder IDE中，如以下截图所示，在IPython控制台中输入`import pycuda`。如果没有错误报告，则表示PyCUDA已正确安装。
- en: '![](img/9892c652-ffaf-47d0-8b22-3f4074e9660b.png)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/9892c652-ffaf-47d0-8b22-3f4074e9660b.png)'
- en: Installing PyCUDA on Ubuntu
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Ubuntu上安装PyCUDA
- en: 'This section will describe the steps to install PyCUDA on Linux operating systems.
    Ubuntu is used for demonstration but the procedure will work on any recent Linux
    distribution. The steps are described below:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 本节将描述在 Linux 操作系统上安装 PyCUDA 的步骤。以 Ubuntu 为演示，但此过程适用于任何最新的 Linux 发行版。步骤如下：
- en: 'If you have not installed the CUDA toolkit, as described in the first chapter,
    then download the latest CUDA toolkit from [https://developer.nvidia.com/cuda-downloads](https://developer.nvidia.com/cuda-downloads).
    It will ask for your operating system, CPU architecture, and whether to install
    using the internet or to download the entire installer first. As can be seen from
    the following screenshot, we have chosen Ubuntu with the runfile (local) installer.
    You can choose values according to your settings:'
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您尚未安装 CUDA 工具包，如第一章所述，请从 [https://developer.nvidia.com/cuda-downloads](https://developer.nvidia.com/cuda-downloads)
    下载最新的 CUDA 工具包。它将询问您的操作系统、CPU 架构以及是否通过互联网安装或首先下载整个安装程序。如下面的截图所示，我们选择了带有运行文件（本地）安装程序的
    Ubuntu。您可以根据您的设置选择值：
- en: '![](img/c9df1b5b-84b8-4232-9b4f-efb0443e53bd.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/c9df1b5b-84b8-4232-9b4f-efb0443e53bd.png)'
- en: Run the **sudo sh cuda_9.2.148_396.37_linux.run** command on Command Prompt
    to install the CUDA toolkit.
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在命令提示符中运行 **sudo sh cuda_9.2.148_396.37_linux.run** 命令以安装 CUDA 工具包。
- en: 'Anaconda distribution will be used as a Python interpreter so it can be downloaded
    and installed from the site: [https://www.anaconda.com/download/](https://www.anaconda.com/download/).
    We are using Anaconda 5.2 with the Python 3.6 version, as shown in the following
    screenshot:'
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将使用 Anaconda 发行版作为 Python 解释器，因此可以从网站：[https://www.anaconda.com/download/](https://www.anaconda.com/download/)
    下载和安装。我们使用的是带有 Python 3.6 版本的 Anaconda 5.2，如下面的截图所示：
- en: '![](img/325eb07d-faf7-490a-9d6e-04376debb772.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/325eb07d-faf7-490a-9d6e-04376debb772.png)'
- en: 'After installing Anaconda, execute the following command on the Terminal, as
    shown in the following screenshot to install PyCUDA:'
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装 Anaconda 后，在终端中执行以下命令，如下面的截图所示以安装 PyCUDA：
- en: '![](img/e65a3086-c320-425d-9b02-72ddde1d3fbc.png)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/e65a3086-c320-425d-9b02-72ddde1d3fbc.png)'
- en: The command will complete the installation of PyCUDA in the Python distribution.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 命令将在 Python 发行版中完成 PyCUDA 的安装。
- en: Steps to check the PyCUDA installation
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检查 PyCUDA 安装的步骤
- en: 'The following steps are to be followed to check whether PyCUDA has been installed
    correctly or not:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤用于检查 PyCUDA 是否已正确安装：
- en: Open Spyder, which is the Python IDE that comes with the Anaconda installation.
    You can open it by writing `Spyder` in the Terminal.
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 打开 Spyder，这是 Anaconda 安装附带的一个 Python IDE。您可以在终端中输入 `Spyder` 来打开它。
- en: In Spyder IDE, type `import pycuda` on the IPython console as shown in the following
    screenshot. If no error is reported then PyCUDA is installed correctly.
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Spyder IDE 中，在 IPython 控制台中输入 `import pycuda`，如下面的截图所示。如果没有错误报告，则表示 PyCUDA
    已正确安装。
- en: '![](img/a27e743a-edf4-4077-bd34-a07581ff11bb.png)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/a27e743a-edf4-4077-bd34-a07581ff11bb.png)'
- en: Summary
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: To summarize, this chapter gave an introduction to the Python programming language
    and how it is used in various domains for a vast range of applications. It is
    lightweight but slow compared to the C or C++ languages. So, if it can leverage
    the advantages of the parallel computing capability of the GPU then it will be
    very useful. PyCUDA is a Python wrapper that allows the Python code to take advantage
    of Nvidia CUDA APIs. The advantage of PyCUDA over other parallel processing modules
    available in Python is explained in detail. PyCUDA uses an Nvidia CUDA runtime
    API and Python interpreter. Anaconda, which is a famous Python distribution, comes
    with many useful Python libraries and IDEs installed, along with the CUDA toolkit.
    The detailed steps to install PyCUDA on Windows and Ubuntu operating systems are
    discussed in this chapter.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 总结来说，本章介绍了 Python 编程语言及其在各种领域用于广泛应用的用法。与 C 或 C++ 语言相比，它轻量但较慢。因此，如果它能利用 GPU 的并行计算能力，那么它将非常有用。PyCUDA
    是一个 Python 包装器，允许 Python 代码利用 Nvidia CUDA API。PyCUDA 相比于 Python 中可用的其他并行处理模块的优势被详细解释。PyCUDA
    使用 Nvidia CUDA 运行时 API 和 Python 解释器。Anaconda 是一个著名的 Python 发行版，它附带了许多有用的 Python
    库和 IDE，以及 CUDA 工具包。本章讨论了在 Windows 和 Ubuntu 操作系统上安装 PyCUDA 的详细步骤。
- en: We will see how to use PyCUDA to accelerate Python applications in detail in
    the next two chapters.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的两章中，我们将详细介绍如何使用 PyCUDA 加速 Python 应用程序。
- en: Questions
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: What are the advantages of Python over programming languages like C or C++?
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Python 相比于 C 或 C++ 等编程语言有哪些优势？
- en: What is the difference between compiled type languages and interpreted languages?
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编译型语言和解释型语言之间的区别是什么？
- en: 'State true or false: Python is faster than C or C++.'
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 判断对错：Python 比 C 或 C++ 更快。
- en: What is the advantage of PyOpenCL over PyCUDA?
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: PyOpenCL 相比 PyCUDA 的优势是什么？
- en: 'State true or false: Python allows the use of C or C++ code within Python script.'
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 判断对错：Python 允许在 Python 脚本中使用 C 或 C++ 代码。
