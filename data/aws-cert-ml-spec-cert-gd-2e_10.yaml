- en: '10'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '10'
- en: Model Deployment
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 模型部署
- en: In the previous chapter, you explored various aspects of Amazon SageMaker, including
    different instances, data preparation in Jupyter Notebook, model training with
    built-in algorithms, and crafting custom code for training and inference. Now,
    your focus shifts to diverse model deployment choices using AWS services.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，你探索了Amazon SageMaker的各个方面，包括不同的实例、在Jupyter Notebook中的数据准备、使用内置算法进行模型训练以及为训练和推理编写自定义代码。现在，你的重点转向使用AWS服务提供的多种模型部署选择。
- en: If you are navigating the landscape of model deployment on AWS, understanding
    the options is crucial. One standout service is Amazon SageMaker – a fully managed
    solution that streamlines the entire **machine learning** (**ML**) life cycle,
    especially when it comes to deploying models. There are several factors that influence
    the model deployment options. As you go ahead in this chapter you will learn different
    options to deploy models using SageMaker.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你正在AWS上导航模型部署的领域，了解选项至关重要。一个突出的服务是Amazon SageMaker – 一个全面管理的解决方案，它简化了整个**机器学习**（**ML**）生命周期，尤其是在部署模型方面。有几个因素会影响模型部署的选项。随着你进入本章，你将学习使用SageMaker部署模型的不同选项。
- en: Factors influencing model deployment options
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 影响模型部署选项的因素
- en: 'Here are the primary factors that play a crucial role in determining a model
    deployment option:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是决定模型部署选项的关键因素：
- en: '**Scalability requirements**'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可扩展性要求**'
- en: '**High traffic:** Imagine you are developing a recommendation system for a
    popular e-commerce platform expecting fluctuating traffic throughout the day.
    If the application anticipates high traffic and varying loads, services such as
    Amazon SageMaker with autoscaling capabilities or AWS Lambda may be preferable.
    This is crucial to maintain performance during peak hours.'
  id: totrans-7
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**高流量**：想象你正在开发一个为热门电子商务平台提供推荐的系统，该平台在一天中预计会有波动的流量。如果应用程序预计会有高流量和变化的负载，具有自动扩展功能的Amazon
    SageMaker或AWS Lambda等服务可能更受欢迎。这对于在高峰时段保持性能至关重要。'
- en: '**Real-time versus** **batch inference**'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**实时推理与批量推理**'
- en: '**Real-time inference**: Consider a fraud detection system for a financial
    institution where immediate decisions are essential for transaction approval or
    denial. For such real-time predictions, services such as Amazon SageMaker and
    AWS Lambda are suitable. For fraud detection, these services provide low-latency
    responses, enabling quick decisions on the legitimacy of transactions. Real-time
    transactions trigger immediate predictions through SageMaker’s inference endpoints
    in this case.'
  id: totrans-9
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**实时推理**：考虑一个金融机构的欺诈检测系统，其中立即的决定对于交易批准或拒绝至关重要。对于这种实时预测，Amazon SageMaker和AWS
    Lambda等服务是合适的。对于欺诈检测，这些服务提供低延迟响应，使能够快速对交易的合法性做出决定。在这种情况下，实时交易通过SageMaker的推理端点触发立即预测。'
- en: '**Batch inference:** In a healthcare setting, you may need to process a large
    volume of patient data periodically to update predictive models for disease diagnosis.
    This is a batch processing use case, and a combination of SageMaker and services
    such as Amazon S3 can be employed. You can efficiently handle large datasets,
    perform periodic model updates, and ensure that predictions align with the latest
    information, which is crucial for maintaining accuracy in healthcare predictions.'
  id: totrans-10
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**批量推理**：在医疗环境中，你可能需要定期处理大量患者数据以更新疾病诊断的预测模型。这是一个批量处理用例，可以使用SageMaker以及Amazon
    S3等服务组合。你可以高效地处理大数据集，定期更新模型，并确保预测与最新信息保持一致，这对于保持医疗预测的准确性至关重要。'
- en: '**Infrastructure** **management complexity**'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**基础设施管理复杂性**'
- en: '**Managed deployment versus custom deployment:** Suppose you are developing
    a computer vision application for analyzing satellite images, requiring specialized
    configurations and dependencies. In cases where custom configurations are necessary,
    opting for custom deployments using EC2 instances allows more control over the
    infrastructure. SageMaker’s managed services are ideal for scenarios where you
    prioritize ease of management and do not want to delve into intricate infrastructure
    details.'
  id: totrans-12
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**托管部署与自定义部署**：假设你正在开发一个用于分析卫星图像的计算机视觉应用程序，需要专门的配置和依赖项。在需要自定义配置的情况下，选择使用EC2实例进行自定义部署可以提供对基础设施的更多控制。SageMaker的托管服务对于你优先考虑管理便捷性且不希望深入了解复杂的基础设施细节的场景是理想的。'
- en: '**Cost considerations**'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**成本考虑**'
- en: '**Pay-per-use:** Consider a weather forecasting application where the computational
    demand varies based on weather events. AWS Lambda’s pay-per-use model is advantageous
    in situations where the workload fluctuates. You pay only for the compute time
    consumed, making it cost-effective for applications with sporadic, unpredictable
    usage patterns compared to alternatives with fixed costs.'
  id: totrans-14
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**按使用付费**：考虑一个天气预报应用程序，其计算需求根据天气事件而变化。在负载波动的情况下，AWS Lambda 的按使用付费模型具有优势。你只需为消耗的计算时间付费，这使得与具有固定成本的替代方案相比，对于具有间歇性、不可预测的使用模式的程序来说更加经济高效。'
- en: SageMaker deployment options
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: SageMaker 部署选项
- en: Amazon SageMaker offers diverse deployment options to deploy ML models effectively.
    In this section, you will explore different ways of deploying models using SageMaker,
    providing technology solutions with scenarios and examples.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon SageMaker 提供了多种部署选项，以有效地部署机器学习模型。在本节中，你将探索使用 SageMaker 部署模型的不同方法，提供具有场景和示例的技术解决方案。
- en: Real-time endpoint deployment
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 实时端点部署
- en: In this **scenario**, you have a trained image classification model, and you
    want to deploy it to provide real-time predictions for incoming images.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在此**场景**中，你有一个训练好的图像分类模型，并且想将其部署以提供对传入图像的实时预测。
- en: Solution
  id: totrans-19
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 解决方案
- en: Create a SageMaker model and deploy it to a real-time endpoint.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个 SageMaker 模型并将其部署到实时端点。
- en: Steps
  id: totrans-21
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 步骤
- en: Train your model using SageMaker training jobs.
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 SageMaker 训练作业训练你的模型。
- en: Create a SageMaker model from the trained model artifacts.
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从训练好的模型工件中创建一个 SageMaker 模型。
- en: Deploy the model to a real-time endpoint.
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将模型部署到实时端点。
- en: Example code snippet
  id: totrans-25
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 示例代码片段
- en: '[PRE0]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[PRE1]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[PRE2]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[PRE3]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[PRE4]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '[PRE5]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '[PRE6]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Batch transform job
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 批量转换作业
- en: In this **scenario**, you have a large dataset, and you want to perform batch
    inference on the entire dataset using a trained model.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在此**场景**中，你有一个大型数据集，并且想使用训练好的模型对整个数据集进行批量推理。
- en: Solution
  id: totrans-35
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 解决方案
- en: Use SageMaker batch transform to process the entire dataset in a batch.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 SageMaker 批量转换批量处理整个数据集。
- en: Steps
  id: totrans-37
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 步骤
- en: Create a SageMaker transformer.
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个 SageMaker 转换器。
- en: Start the batch transform job.
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 开始批量转换作业。
- en: Example code snippet
  id: totrans-40
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 示例代码片段
- en: '[PRE7]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '[PRE8]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '[PRE9]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '[PRE10]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '[PRE11]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '[PRE12]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '[PRE13]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '[PRE14]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '[PRE15]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Multi-model endpoint deployment
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 多模型端点部署
- en: In this **scenario**, you have multiple versions of a model, and you want to
    deploy them on a single endpoint for A/B testing or gradual rollout.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在此**场景**中，你有多个版本的模型，并且想将它们部署到单个端点上以进行 A/B 测试或逐步推出。
- en: Solution
  id: totrans-52
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 解决方案
- en: Use SageMaker multi-model endpoints to deploy and manage multiple models on
    a single endpoint.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 SageMaker 多模型端点在一个端点上部署和管理多个模型。
- en: Steps
  id: totrans-54
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 步骤
- en: Create and train multiple models.
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建并训练多个模型。
- en: Create a SageMaker multi-model.
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个 SageMaker 多模型。
- en: Deploy the multi-model to an endpoint.
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将多模型部署到端点。
- en: Example code snippet
  id: totrans-58
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 示例代码片段
- en: '[PRE16]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '[PRE17]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '[PRE18]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Endpoint autoscaling
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 端点自动扩展
- en: In this **scenario**, your application experiences varying workloads, and you
    want to automatically adjust the number of instances based on traffic.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在此**场景**中，你的应用程序经历着不同的工作负载，并且想根据流量自动调整实例数量。
- en: Solution
  id: totrans-64
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 解决方案
- en: Enable auto-scaling for SageMaker endpoints.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 为 SageMaker 端点启用自动扩展。
- en: Steps
  id: totrans-66
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 步骤
- en: Configure the SageMaker endpoint to use autoscaling.
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 配置 SageMaker 端点以使用自动扩展。
- en: Set up the minimum and maximum instance counts based on the expected workload.
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根据预期的负载设置最小和最大实例数量。
- en: Example code snippet
  id: totrans-69
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 示例代码片段
- en: '[PRE19]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '[PRE20]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '[PRE21]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Serverless APIs with AWS Lambda and SageMaker
  id: totrans-73
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 AWS Lambda 和 SageMaker 的无服务器 API
- en: In this **scenario**, you want to create a serverless API using AWS Lambda to
    interact with your SageMaker model.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 在此**场景**中，你想要使用 AWS Lambda 创建一个无服务器 API 以与你的 SageMaker 模型交互。
- en: Solution
  id: totrans-75
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 解决方案
- en: Use AWS Lambda to invoke the SageMaker endpoint.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 AWS Lambda 调用 SageMaker 端点。
- en: Steps
  id: totrans-77
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 步骤
- en: Create an AWS Lambda function.
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个 AWS Lambda 函数。
- en: Integrate the Lambda function with the SageMaker endpoint.
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 Lambda 函数与 SageMaker 端点集成。
- en: Example code snippet
  id: totrans-80
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 示例代码片段
- en: '[PRE22]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '[PRE23]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: '[PRE24]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: '[PRE25]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: '[PRE26]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '[PRE27]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: '[PRE28]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: '[PRE29]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: '[PRE30]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: '[PRE31]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: '[PRE32]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: In the realm of deploying ML models, Amazon SageMaker emerges as a robust choice.
    Its managed environment, scalability features, and seamless integration with other
    AWS services make it an efficient and reliable solution for businesses navigating
    diverse deployment scenarios. Whether you are anticipating high traffic or need
    a hassle-free deployment experience, SageMaker is your ally in the journey of
    model deployment excellence. In the next section, you will learn about creating
    pipelines with Lambda functions.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 在部署ML模型领域，Amazon SageMaker成为一个稳健的选择。其托管环境、可扩展功能和与其他AWS服务的无缝集成使其成为企业在各种部署场景中高效和可靠的解决方案。无论你是否预计会有高流量或需要一个无烦恼的部署体验，SageMaker都是你在模型部署卓越之旅中的盟友。在下一节中，你将了解如何使用Lambda函数创建管道。
- en: Creating alternative pipelines with Lambda Functions
  id: totrans-93
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Lambda函数创建替代管道
- en: Indeed, SageMaker is an awesome platform that you can use to create training
    and inference pipelines. However, you can always work with different services
    to come up with similar solutions. One of these services, which you will learn
    about next, is known as **Lambda functions**.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，SageMaker是一个很棒的平台，你可以用它来创建训练和推理管道。然而，你总是可以与不同的服务合作，找到类似的解决方案。你接下来将要了解的服务之一被称为**Lambda函数**。
- en: AWS Lambda is a serverless compute service where you can run a function as a
    service. In other words, you can concentrate your efforts on just writing your
    function. Then, you just need to tell AWS how to run it (that is, the environment
    and resource configurations), so all the necessary resources will be provisioned
    to run your code and then discontinued once it is completed.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: AWS Lambda是一种无服务器计算服务，你可以将其作为一个服务运行函数。换句话说，你可以专注于编写你的函数。然后，你只需要告诉AWS如何运行它（即环境和资源配置），所有必要的资源都将被配置以运行你的代码，并在完成后取消配置。
- en: Throughout [*Chapter 3*](B21197_03.xhtml#_idTextAnchor337), *AWS Services for
    Data Migration and Processing*, you explored how Lambda functions integrate with
    many different services, such as Kinesis and AWS Batch. Indeed, AWS did a very
    good job of integrating Lambda with 140+ services (and the list is constantly
    increasing). That means that when you work with a specific AWS service, you will
    remember that it is likely to integrate with Lambda.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 在[*第三章*](B21197_03.xhtml#_idTextAnchor337)“AWS数据迁移和处理服务”中，你了解了Lambda函数如何与许多不同的服务集成，例如Kinesis和AWS
    Batch。实际上，AWS在将Lambda与140多个服务（且列表持续增加）集成方面做得非常好。这意味着当你与特定的AWS服务一起工作时，你会记得它很可能会与Lambda集成。
- en: It is important to bear this in mind because Lambda functions can really expand
    your possibilities to create scalable and integrated architectures. For example,
    you can trigger a Lambda function when a file is uploaded to S3 in order to preprocess
    your data before loading it to Redshift. Alternatively, you can create an API
    that triggers a Lambda function at each endpoint execution. Again, the possibilities
    are endless with this powerful service.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 重要的是要记住这一点，因为Lambda函数可以真正扩展你的可能性，以创建可扩展和集成的架构。例如，你可以在文件上传到S3时触发一个Lambda函数，以便在将其加载到Redshift之前预处理你的数据。或者，你可以在每个端点执行时创建一个触发Lambda函数的API。再次强调，这个强大的服务可能性是无限的。
- en: It is also useful to know that you can write your function in different programming
    languages, such as Node.js, Python, Go, Java, and more. Your function does not
    necessarily have to be triggered by another AWS service – that is, you can trigger
    it manually for your web or mobile application, for example.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 还有一个有用的信息是，你可以用不同的编程语言编写你的函数，例如Node.js、Python、Go、Java等。你的函数不一定必须由另一个AWS服务触发——也就是说，你可以手动触发它，例如在你的Web或移动应用程序中。
- en: When it comes to deployment, you can upload your function as a ZIP file or as
    a container image. Although this is not ideal for an automated deployment process,
    coding directly into the AWS Lambda console is also possible.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 当涉及到部署时，你可以将你的函数作为ZIP文件或容器镜像上传。虽然这并不是自动化部署过程的理想选择，但直接在AWS Lambda控制台中编码也是可能的。
- en: 'As with any other service, this one also has some downsides that you should
    be aware of:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 与任何其他服务一样，这项服务也有一些缺点，你应该知道：
- en: '**Memory allocation for your function**: This ranges from 128 MB to 10,240
    MB (AWS has recently increased this limit from 3 GB to 10 GB, as stated previously)'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**为你的函数分配内存**：这从128 MB到10,240 MB不等（AWS最近将此限制从3 GB增加到10 GB，如前所述）'
- en: '**Function timeout**: This is a maximum of 900 seconds (15 minutes)'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**函数超时**：这是最多900秒（15分钟）'
- en: '**Function layer**: This is a maximum of five layers'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**函数层**：这是最多五层'
- en: '**Burst concurrency**: This is from 500 to 3,000, depending on the AWS Region'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**突发并发性**：这取决于AWS区域，从500到3000不等'
- en: '**Deployment package size**: This is 250 MB unzipped, including layers'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**部署包大小**：这是解压后的250 MB，包括层'
- en: '**Container image code package size**: This is 10 GB'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**容器镜像代码包大小**：这是10 GB'
- en: '**Available space in the /tmp directory**: This is 512 MB'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**/tmp目录中的可用空间**：这是512 MB'
- en: Before opting for Lambda functions, make sure these restrictions fit your use
    case. By bringing Lambda functions closer to your scope of alternative pipelines
    for SageMaker, you can leverage one potential use of Lambda, which is to create
    inference pipelines for the models.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 在选择Lambda函数之前，请确保这些限制适合你的用例。通过将Lambda函数引入SageMaker的替代管道范围，你可以利用Lambda的一个潜在用途，即创建模型的推理管道。
- en: As you know, SageMaker has a very handy `.deploy()` method that will create
    endpoints for model inference. This is so that you can call to pass the input
    data to receive predictions back. Here, you can create this inference endpoint
    by using the API gateway and Lambda functions.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所知，SageMaker有一个非常方便的`.deploy()`方法，可以为模型推理创建端点。这样，你可以调用它来传递输入数据以接收预测结果。在这里，你可以通过使用API网关和Lambda函数来创建这个推理端点。
- en: If you do not need an inference endpoint and you just want to make predictions
    and store results somewhere (in a batch fashion), then all you need is a Lambda
    function, which is able to fetch the input data, instantiate the model object,
    make predictions, and store the results in the appropriate location. Of course,
    it does this by considering all the limitations that you discussed earlier.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你不需要推理端点，只想进行预测并将结果存储在某个地方（批量方式），那么你只需要一个Lambda函数，它能够获取输入数据，实例化模型对象，进行预测，并将结果存储在适当的位置。当然，它通过考虑你之前讨论的所有限制来实现这一点。
- en: Alright, now that you have a good background about Lambda and some use cases,
    you can take a look at the most important configurations that you should be aware
    of for the exam.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，现在你已经对Lambda和某些用例有了良好的背景知识，你可以查看你在考试中应该注意的最重要配置。
- en: Creating and configuring a Lambda Function
  id: totrans-112
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建和配置Lambda函数
- en: First of all, you should know that you can create a Lambda function in different
    ways, such as via the AWS CLI (a Lambda API reference), the AWS Lambda console,
    or even deployment frameworks (for example, *the* *serverless framework*).
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，你应该知道你可以通过不同的方式创建Lambda函数，例如通过AWS CLI（Lambda API参考）、AWS Lambda控制台，甚至是部署框架（例如，*serverless
    framework*）。
- en: Serverless frameworks are usually provider and programming language-independent.
    In other words, they usually allow you to choose where you want to deploy a serverless
    infrastructure from a varied list of cloud providers and programming languages.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 无服务器框架通常是提供商和编程语言无关的。换句话说，它们通常允许你从一系列云提供商和编程语言中选择你想要部署无服务器基础设施的地方。
- en: Important note
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: The concept of serverless architecture is not specific to AWS. In fact, many
    cloud providers offer other services similar to AWS Lambda functions. That is
    why these serverless frameworks have been built – to help developers and engineers
    to deploy their services, wherever they want, including AWS. This is unlikely
    to come up in your exam, but it is something that you should know so that you
    are aware of different ways in which to solve your challenges as a data scientist
    or data engineer.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 无服务器架构的概念并不仅限于AWS。实际上，许多云服务提供商提供与AWS Lambda函数类似的其他服务。这就是为什么构建了这些无服务器框架——为了帮助开发者和工程师将他们的服务部署到他们想要的地方，包括AWS。这可能在你的考试中不太可能出现，但这是你应该知道的事情，以便你了解作为数据科学家或数据工程师解决挑战的不同方式。
- en: Since you want to pass the AWS Certified Machine Learning Specialty exam, here,
    you will walk through the AWS Lambda console. This is so that you become more
    familiar with its interface and the most important configuration options.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 由于你想要通过AWS认证机器学习专业考试，在这里，你将遍历AWS Lambda控制台。这样，你可以更熟悉其界面和最重要的配置选项。
- en: 'When you navigate to the Lambda console and request a new Lambda function,
    AWS will provide you with some starting options:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 当你导航到Lambda控制台并请求一个新的Lambda函数时，AWS会为你提供一些起始选项：
- en: '**Author from scratch**: This is if you want to create your function from scratch'
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**从头开始创建作者**：这是如果你想要从头创建你的函数'
- en: '**Use a blueprint**: This is if you want to create your function from sample
    code and a configuration preset for common use cases'
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**使用蓝图**：如果您想从示例代码和针对常见用例的配置预设创建函数'
- en: '**Container image**: This is if you want to select a container image to deploy
    your function'
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**容器镜像**：如果您想选择容器镜像来部署您的函数'
- en: '**Browse serverless app repository**: This is if you want to deploy a sample
    Lambda application from the AWS Serverless Application Repository'
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**浏览无服务器应用程序存储库**：如果您想从AWS无服务器应用程序存储库部署示例Lambda应用程序'
- en: 'Starting from scratch, the next step is to set up your Lambda configurations.
    AWS splits these configurations between basic and advanced settings. In the basic
    configuration, you will set your function name, runtime environment, and permissions.
    *Figure 10**.1* shows these configurations:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 从零开始，下一步是设置您的Lambda配置。AWS将这些配置分为基本和高级设置。在基本配置中，您将设置函数名称、运行时环境和权限。*图10.1*显示了这些配置：
- en: '![Figure 10.1 – Creating a new Lambda function from the AWS Lambda console](img/B21197_10_01.jpg)'
  id: totrans-124
  prefs: []
  type: TYPE_IMG
  zh: '![图10.1 – 从AWS Lambda控制台创建新的Lambda函数](img/B21197_10_01.jpg)'
- en: Figure 10.1 – Creating a new Lambda function from the AWS Lambda console
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.1 – 从AWS Lambda控制台创建新的Lambda函数
- en: Here, you have a very important configuration that you should remember during
    your exam – the **execution role**. Your Lambda function might need permissions
    to access other AWS resources, such as S3, Redshift, and more. The execution role
    grants permissions to your Lambda function so that it can access resources as
    needed.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，您有一个在考试期间非常重要且应记住的配置——**执行角色**。您的Lambda函数可能需要访问其他AWS资源的权限，例如S3、Redshift等。执行角色授予Lambda函数所需的权限，以便它可以根据需要访问资源。
- en: You have to remember that your VPC and security group configurations will also
    interfere with how your Lambda function runs. For example, if you want to create
    a function that needs internet access to download something, then you have to
    deploy this function in a VPC with internet access. The same logic applies to
    other resources, such as access to relational databases, Kinesis, and Redshift.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 您必须记住，您的VPC和安全组配置也会影响Lambda函数的运行方式。例如，如果您想创建一个需要互联网访问来下载内容的函数，那么您必须在该具有互联网访问的VPC中部署此函数。同样的逻辑也适用于其他资源，例如访问关系型数据库、Kinesis和Redshift。
- en: Furthermore, to properly configure a Lambda function, you have to, at least,
    write its code, set the execution role, and make sure the VPC and security group
    configurations match your needs. Next, you will take a look at other configurations.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，为了正确配置Lambda函数，您至少需要编写其代码、设置执行角色，并确保VPC和安全组配置符合您的需求。接下来，您将了解其他配置。
- en: Completing your configurations and deploying a Lambda function
  id: totrans-129
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 完成配置并部署Lambda函数
- en: Once your Lambda is created in the AWS console, you can set additional configurations
    before deploying the function. One of these configurations is the event trigger.
    As mentioned earlier, your Lambda function can be triggered from a variety of
    services or even manually.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您在AWS控制台中创建了Lambda函数，您可以在部署函数之前设置额外的配置。其中之一就是事件触发器。如前所述，您的Lambda函数可以从各种服务或手动触发。
- en: Important note
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: A very common example of a trigger is **Amazon EventBridge**. This is an AWS
    service where you can schedule the execution of your function.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 一个非常常见的触发器示例是**Amazon EventBridge**。这是一个AWS服务，您可以在其中安排函数的执行。
- en: Depending on the event trigger you choose, your function will have access to
    different event metadata. For example, if your function is triggered by a `PUT`
    event on S3 (for example, someone uploads a file to a particular S3 bucket), then
    your function will receive the metadata associated with this event – for example,
    the bucket name and object key. Other types of triggers will give you different
    types of event metadata!
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 根据您选择的触发事件，您的函数将能够访问不同的事件元数据。例如，如果您的函数由S3上的`PUT`事件触发（例如，有人将文件上传到特定的S3存储桶），那么您的函数将接收到与此事件相关的元数据——例如，存储桶名称和对象键。其他类型的触发器将提供不同类型的事件元数据！
- en: 'You have access to that metadata through the event parameter that belongs to
    the signature of the entry point of your function. Not clear enough? You will
    now look at how your function code should be declared, as follows:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过属于函数入口点签名的event参数访问该元数据。不够清楚？现在您将了解函数代码应该如何声明，如下所示：
- en: '[PRE33]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: '[PRE34]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: Here, `lambda_handler` is the method that represents the entry point of your
    function. When it is triggered, this method will be called, and it will receive
    the event metadata associated with the event trigger (through the `event` parameter).
    That is how you have access to the information associated with the underlying
    event that has triggered your function! The `event` parameter is a JSON-like object.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，`lambda_handler` 是代表您函数入口点的函数。当它被触发时，此方法将被调用，并且它将通过 `event` 参数接收与事件触发相关的事件元数据。这就是您如何访问与触发您函数的底层事件相关的信息！`event`
    参数是一个类似 JSON 的对象。
- en: If you want to test your function but do not want to trigger it directly from
    the underlying event, that is no problem; you can use **test events**. They simulate
    the underlying event by preparing a JSON object that will be passed to your function.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想测试您的函数但不想直接从底层事件触发它，这没问题；您可以使用 **测试事件**。它们通过准备一个将被传递给您的函数的 JSON 对象来模拟底层事件。
- en: '*Figure 10**.2* shows a very intuitive example. Suppose you have created a
    function that is triggered when a user uploads a file to S3, and now, you want
    to test your function. You can either upload a file to S3 (which forces the trigger)
    or create a test event.'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 10.2* 展示了一个非常直观的例子。假设您创建了一个在用户将文件上传到 S3 时被触发的函数，现在，您想测试您的函数。您可以选择上传一个文件到
    S3（这会强制触发）或创建一个测试事件。'
- en: 'By creating a test event, you can prepare a JSON object that simulates the
    **S3-put** event and then pass this object to your function:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 通过创建一个测试事件，您可以准备一个模拟 **S3-put** 事件的 JSON 对象，然后将此对象传递给您的函数：
- en: '![Figure 10.2 – Creating a test event from the Lambda console](img/B21197_10_02.jpg)'
  id: totrans-141
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.2 – 从 Lambda 控制台创建测试事件](img/B21197_10_02.jpg)'
- en: Figure 10.2 – Creating a test event from the Lambda console
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.2 – 从 Lambda 控制台创建测试事件
- en: 'Another type of configuration that you can set is an **environment variable**,
    which will be available on your function. *Figure 10**.3* shows how to add environment
    variables in a Lambda function:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以设置另一种类型的配置，即 **环境变量**，这些变量将在您的函数中可用。*图 10.3* 展示了如何在 Lambda 函数中添加环境变量：
- en: '![Figure 10.3 – Adding environment variables to a Lambda function](img/B21197_10_03.jpg)'
  id: totrans-144
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.3 – 向 Lambda 函数添加环境变量](img/B21197_10_03.jpg)'
- en: Figure 10.3 – Adding environment variables to a Lambda function
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.3 – 向 Lambda 函数添加环境变量
- en: 'You can always come back to these basic settings to make adjustments as necessary.
    *Figure 10**.4* shows what you will find in the basic settings section:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以随时返回这些基本设置，根据需要做出调整。*图 10.4* 展示了基本设置部分您将找到的内容：
- en: '![Figure 10.4 – Changing the basic settings of a Lambda function](img/B21197_10_04.jpg)'
  id: totrans-147
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.4 – 修改 Lambda 函数的基本设置](img/B21197_10_04.jpg)'
- en: Figure 10.4 – Changing the basic settings of a Lambda function
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.4 – 修改 Lambda 函数的基本设置
- en: In terms of monitoring, by default, Lambda functions produce a `Lambda function
    monitoring` section and clicking on **View logs** **in CloudWatch**.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 在监控方面，默认情况下，Lambda 函数会生成一个 `Lambda 函数监控` 部分，并点击 **CloudWatch** 中的 **查看日志**。
- en: In CloudWatch, each Lambda function will have a **log group** and, inside that
    log group, many **log streams**. Log streams store the execution logs of the associated
    function. In other words, a log stream is a sequence of logs that share the same
    source, which, in this case, is your Lambda function. A log group is a group of
    log streams that share the same retention, monitoring, and access control settings.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 在 CloudWatch 中，每个 Lambda 函数都将有一个 **日志组**，在该日志组内部，有许多 **日志流**。日志流存储相关函数的执行日志。换句话说，日志流是一系列共享相同来源的日志，在这种情况下，来源是您的
    Lambda 函数。日志组是一组共享相同保留、监控和访问控制设置的日志流。
- en: You are now reaching the end of this section, but not the end of this topic
    on Lambda functions. As mentioned earlier, this AWS service has a lot of use cases
    and integrates with many other services. In the next section, you will look at
    another AWS service that will help orchestrate executions of Lambda functions.
    This is known as **AWS** **Step Functions**.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 您现在已接近本节的结尾，但不是关于 Lambda 函数这一主题的结尾。如前所述，这项 AWS 服务有很多用例，并与许多其他服务集成。在下一节中，您将了解另一个
    AWS 服务，它将帮助编排 Lambda 函数的执行。这被称为 **AWS** **步骤函数**。
- en: Working with step functions
  id: totrans-152
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用步骤函数
- en: Step Functions is an AWS service that allows you to create workflows to orchestrate
    the execution of Lambda functions. This is so that you can connect them in a sort
    of event sequence, known as **steps**. These steps are grouped in a **state machine**.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: Step Functions 是一个 AWS 服务，允许你创建工作流来编排 Lambda 函数的执行。这样你就可以将它们连接在一个称为**步骤**的事件序列中。这些步骤被分组在一个**状态机**中。
- en: Step Functions incorporates retry functionality so that you can configure your
    pipeline to proceed only after a particular step has succeeded. The way you set
    these retry configurations is by creating a **retry policy**.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: Step Functions 集成了重试功能，这样你就可以配置你的管道只在特定步骤成功后继续执行。设置这些重试配置的方式是通过创建一个**重试策略**。
- en: Important note
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: Just like the majority of AWS services, AWS Step Functions also integrates with
    other services, not only AWS Lambda.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 就像 AWS 的多数服务一样，AWS Step Functions 也与其他服务集成，而不仅仅是 AWS Lambda。
- en: Creating a state machine is relatively simple. All you have to do is navigate
    to the AWS Step Functions console and then create a new state machine. On the
    **Create state machine** page, you can specify whether you want to create your
    state machine from scratch or from a template, or whether you just want to run
    a sample project.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 创建状态机相对简单。你所要做的就是导航到 AWS Step Functions 控制台，然后创建一个新的状态机。在**创建状态机**页面，你可以指定是否要从头创建你的状态机或从模板创建，或者你只是想运行一个示例项目。
- en: AWS will help you with this state machine creation, so even if you choose to
    create it from scratch, you will find code snippets for a various list of tasks,
    such as AWS Lambda invocation, SNS topic publication, and running Athena queries.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: AWS 将帮助你创建这个状态机，所以即使你选择从头开始创建，你也会找到各种任务的代码片段，例如 AWS Lambda 调用、SNS 主题发布和运行 Athena
    查询。
- en: 'For the sake of demonstration, you will now create a very simple, but still
    helpful, example of how to use Step Functions to execute a Lambda function with
    the `retry` option activated:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 为了演示的目的，你现在将创建一个非常简单但仍然有用的示例，说明如何使用 Step Functions 来执行具有激活 `retry` 选项的 Lambda
    函数：
- en: '[PRE35]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: '[PRE36]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: '[PRE37]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: '[PRE38]'
  id: totrans-163
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: '[PRE39]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: '[PRE40]'
  id: totrans-165
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: '[PRE41]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: '[PRE42]'
  id: totrans-167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: '[PRE43]'
  id: totrans-168
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: '[PRE44]'
  id: totrans-169
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: '[PRE45]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: '[PRE46]'
  id: totrans-171
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: '[PRE47]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: '[PRE48]'
  id: totrans-173
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: '[PRE49]'
  id: totrans-174
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: '[PRE50]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: '[PRE51]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: '[PRE52]'
  id: totrans-177
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: '[PRE53]'
  id: totrans-178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: '[PRE54]'
  id: totrans-179
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: '[PRE55]'
  id: totrans-180
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: '[PRE56]'
  id: totrans-181
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: '[PRE57]'
  id: totrans-182
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: '[PRE58]'
  id: totrans-183
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: '[PRE59]'
  id: totrans-184
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: '[PRE60]'
  id: totrans-185
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: '[PRE61]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: '[PRE62]'
  id: totrans-187
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: '[PRE63]'
  id: totrans-188
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: '[PRE64]'
  id: totrans-189
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: '[PRE65]'
  id: totrans-190
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: '[PRE66]'
  id: totrans-191
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: 'In the preceding example, you created a state machine with two steps:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的例子中，你创建了一个包含两个步骤的状态机：
- en: '**Invoke a Lambda function**: This will start the execution of your underlying
    Lambda'
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**调用 Lambda 函数**：这将启动你底层 Lambda 的执行'
- en: '**Execute** *Example*: This is a simple pass task just to show you how to connect
    a second step in the pipeline'
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**执行** *示例*：这是一个简单的传递任务，仅用于展示如何在管道中连接第二个步骤'
- en: 'In the first step, you have also set up a retry policy, which will try to re-execute
    this task if there are any failures. You set up the interval (in seconds) to try
    again and to show the number of attempts. *Figure 10**.5* shows the state machine:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 在第一步中，你也设置了一个重试策略，如果出现任何失败，它将尝试重新执行此任务。你设置了再次尝试的间隔（以秒为单位）以及显示尝试次数。*图 10**.5*
    显示了状态机：
- en: '![Figure 10.5 – The state machine](img/B21197_10_05.jpg)'
  id: totrans-196
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.5 – 状态机](img/B21197_10_05.jpg)'
- en: Figure 10.5 – The state machine
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.5 – 状态机
- en: In the next section, you will explore various autoscaling scenarios and different
    ways to handle them.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，你将探索各种自动扩展场景和不同的处理方式。
- en: Scaling applications with SageMaker deployment and AWS Autoscaling
  id: totrans-199
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 SageMaker 部署和 AWS 自动扩展扩展应用程序
- en: Autoscaling is a crucial aspect of deploying ML models in production environments,
    ensuring that applications can handle varying workloads efficiently. Amazon SageMaker,
    combined with AWS Auto Scaling, provides a robust solution for automatically adjusting
    resources based on demand. In this section, you will explore different scenarios
    where autoscaling is essential and how to achieve it, using SageMaker model deployment
    options and AWS Auto Scaling.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 自动扩展是部署机器学习模型到生产环境中的关键方面，确保应用程序能够高效地处理不同的工作负载。Amazon SageMaker 与 AWS 自动扩展相结合，提供了一个强大的解决方案，可以根据需求自动调整资源。在本节中，你将探索自动扩展至关重要的不同场景以及如何实现它，使用
    SageMaker 模型部署选项和 AWS 自动扩展。
- en: Scenario 1 – Fluctuating inference workloads
  id: totrans-201
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 场景 1 – 波动的推理工作负载
- en: In a retail application, the number of users making product recommendation requests
    can vary throughout the day, with peak loads during specific hours.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 在零售应用程序中，提出产品推荐请求的用户数量在一天中可能会有所变化，在特定的小时内会有高峰负载。
- en: Autoscaling solution
  id: totrans-203
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 自动扩展解决方案
- en: Implement autoscaling for SageMaker real-time endpoints to dynamically adjust
    the number of instances, based on the inference request rate.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 为 SageMaker 实时端点实现自动扩展，根据推理请求率动态调整实例数量。
- en: Steps
  id: totrans-205
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 步骤
- en: Configure the SageMaker endpoint to use autoscaling.
  id: totrans-206
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 配置SageMaker端点以使用自动扩展。
- en: Set up minimum and maximum instance counts based on expected workload variations.
  id: totrans-207
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根据预期的负载变化设置最小和最大实例数量。
- en: Example code snippet
  id: totrans-208
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 示例代码片段
- en: '[PRE67]'
  id: totrans-209
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: '[PRE68]'
  id: totrans-210
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: '[PRE69]'
  id: totrans-211
  prefs: []
  type: TYPE_PRE
  zh: '[PRE69]'
- en: '[PRE70]'
  id: totrans-212
  prefs: []
  type: TYPE_PRE
  zh: '[PRE70]'
- en: '[PRE71]'
  id: totrans-213
  prefs: []
  type: TYPE_PRE
  zh: '[PRE71]'
- en: '[PRE72]'
  id: totrans-214
  prefs: []
  type: TYPE_PRE
  zh: '[PRE72]'
- en: Scenario 2 – The batch processing of large datasets
  id: totrans-215
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 场景2 – 大数据集的批量处理
- en: Performing batch inference on a large dataset periodically may lead to resource
    constraints if not managed dynamically.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 定期对大型数据集进行批量推理，如果不进行动态管理，可能会导致资源限制。
- en: Autoscaling solution
  id: totrans-217
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 自动扩展解决方案
- en: Utilize AWS batch transform with SageMaker and configure autoscaling for efficient
    resource utilization during batch processing.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 利用AWS批量转换与SageMaker，并在批量处理期间配置自动扩展以实现高效的资源利用。
- en: Steps
  id: totrans-219
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 步骤
- en: Set up an AWS batch transform job.
  id: totrans-220
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置AWS批量转换作业。
- en: Enable autoscaling for the underlying infrastructure to handle varying batch
    sizes.
  id: totrans-221
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为底层基础设施启用自动扩展以处理不同的批量大小。
- en: Example code snippet
  id: totrans-222
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 示例代码片段
- en: '[PRE73]'
  id: totrans-223
  prefs: []
  type: TYPE_PRE
  zh: '[PRE73]'
- en: '[PRE74]'
  id: totrans-224
  prefs: []
  type: TYPE_PRE
  zh: '[PRE74]'
- en: '[PRE75]'
  id: totrans-225
  prefs: []
  type: TYPE_PRE
  zh: '[PRE75]'
- en: '[PRE76]'
  id: totrans-226
  prefs: []
  type: TYPE_PRE
  zh: '[PRE76]'
- en: '[PRE77]'
  id: totrans-227
  prefs: []
  type: TYPE_PRE
  zh: '[PRE77]'
- en: '[PRE78]'
  id: totrans-228
  prefs: []
  type: TYPE_PRE
  zh: '[PRE78]'
- en: '[PRE79]'
  id: totrans-229
  prefs: []
  type: TYPE_PRE
  zh: '[PRE79]'
- en: '[PRE80]'
  id: totrans-230
  prefs: []
  type: TYPE_PRE
  zh: '[PRE80]'
- en: Scenario 3 – A multi-model endpoint with dynamic traffic
  id: totrans-231
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 场景3 – 具有动态流量的多模型端点
- en: Multiple models are deployed on a single endpoint for A/B testing, and the traffic
    distribution between models is dynamic.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 多个模型部署在单个端点上以进行A/B测试，模型之间的流量分布是动态的。
- en: Autoscaling solution
  id: totrans-233
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 自动扩展解决方案
- en: Leverage SageMaker multi-model endpoints with autoscaling to handle varying
    traffic loads across different model versions.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 利用自动扩展功能，通过SageMaker多模型端点处理不同模型版本间的不同流量负载。
- en: Steps
  id: totrans-235
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 步骤
- en: Create and deploy multiple models to a SageMaker multi-model endpoint.
  id: totrans-236
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建并部署多个模型到SageMaker多模型端点。
- en: Enable autoscaling to adjust the instance count based on traffic distribution.
  id: totrans-237
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启用自动扩展功能，根据流量分布调整实例数量。
- en: Example code snippet
  id: totrans-238
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 示例代码片段
- en: '[PRE81]'
  id: totrans-239
  prefs: []
  type: TYPE_PRE
  zh: '[PRE81]'
- en: '[PRE82]'
  id: totrans-240
  prefs: []
  type: TYPE_PRE
  zh: '[PRE82]'
- en: '[PRE83]'
  id: totrans-241
  prefs: []
  type: TYPE_PRE
  zh: '[PRE83]'
- en: Scenario 4 – Continuous Model Monitoring with drift detection
  id: totrans-242
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 场景4 – 使用漂移检测的持续模型监控
- en: You monitor models for concept drift or data quality issues and automatically
    adjust resources if model performance degrades.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 您监控模型以检测概念漂移或数据质量问题，并在模型性能下降时自动调整资源。
- en: Autoscaling solution
  id: totrans-244
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 自动扩展解决方案
- en: Integrate SageMaker Model Monitor with AWS CloudWatch alarms to trigger autoscaling
    when drift or degradation is detected.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 将SageMaker模型监控与AWS CloudWatch警报集成，以便在检测到漂移或退化时触发自动扩展。
- en: Steps
  id: totrans-246
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 步骤
- en: Set up CloudWatch alarms to monitor model quality metrics.
  id: totrans-247
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置CloudWatch警报以监控模型质量指标。
- en: Configure autoscaling policies to trigger when specific alarm thresholds are
    breached.
  id: totrans-248
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 配置自动扩展策略，在特定警报阈值被突破时触发。
- en: Scaling applications with SageMaker model deployment options and AWS Auto Scaling
    provides a flexible and efficient solution for handling varying workloads and
    ensuring optimal resource utilization. By understanding the different scenarios
    requiring autoscaling and following the outlined steps, you can seamlessly integrate
    autoscaling into your ML deployment strategy, enhancing the scalability and reliability
    of your applications. In the next section, you will learn and explore different
    ways of securing AWS SageMaker applications.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 使用SageMaker模型部署选项和AWS自动扩展进行应用程序扩展，为处理不同工作负载和确保最佳资源利用提供了灵活且高效的解决方案。通过了解需要自动扩展的不同场景并遵循概述的步骤，您可以无缝地将自动扩展集成到您的机器学习部署策略中，增强应用程序的可扩展性和可靠性。在下一节中，您将了解和探索保护AWS
    SageMaker应用的不同方法。
- en: Securing SageMaker applications
  id: totrans-250
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 保护SageMaker应用
- en: 'As ML applications become integral to business operations, securing AWS SageMaker
    applications is paramount to safeguard sensitive data, maintain regulatory compliance,
    and prevent unauthorized access. In this section, you will first dive into the
    reasons for securing SageMaker applications and then explore different strategies
    to achieve security:'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 随着机器学习应用成为业务运营的组成部分，保护AWS SageMaker应用至关重要，以确保敏感数据的安全，维护法规遵从性，并防止未授权访问。在本节中，您将首先深入了解保护SageMaker应用的原因，然后探讨不同的策略来实现安全性：
- en: '**Reasons to secure** **SageMaker applications**'
  id: totrans-252
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**保护SageMaker应用的原因**'
- en: '**Data protection**: ML models trained on sensitive data, such as customer
    information or financial records, pose a significant security risk if not adequately
    protected. Securing SageMaker ensures that data confidentiality and integrity
    are maintained throughout the ML life cycle.'
  id: totrans-253
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据保护**：在敏感数据（如客户信息或财务记录）上训练的机器学习模型，如果没有得到充分保护，将面临重大的安全风险。保护SageMaker确保在整个机器学习生命周期中数据保密性和完整性得到维护。'
- en: '**Compliance requirements**: Industries such as healthcare and finance are
    subject to stringent data protection regulations. Securing SageMaker helps organizations
    comply with standards such as the **Health Insurance Portability and Accountability
    Act (HIPAA)** or the **General Data Protection Regulation (GDPR)**, avoiding legal
    ramifications and reputational damage.'
  id: totrans-254
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**合规要求**：医疗保健和金融等行业受到严格的数据保护法规的约束。确保SageMaker的安全性有助于组织遵守如**健康保险可携带性和责任法案（HIPAA）**或**通用数据保护条例（GDPR）**等标准，避免法律后果和声誉损害。'
- en: '**Preventing unauthorized access**: SageMaker instances and endpoints should
    only be accessible to authorized personnel. Unauthorized access can lead to data
    breaches or misuse of ML capabilities. Robust authentication mechanisms are crucial
    for preventing such security lapses.'
  id: totrans-255
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**防止未授权访问**：SageMaker实例和端点应仅对授权人员开放。未授权访问可能导致数据泄露或滥用机器学习能力。强大的身份验证机制对于防止此类安全漏洞至关重要。'
- en: '**Model intellectual property protection**: ML models represent intellectual
    property. Securing SageMaker ensures that the models, algorithms, and methodologies
    developed remain confidential and are not susceptible to intellectual property
    theft or reverse engineering.'
  id: totrans-256
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**模型知识产权保护**：机器学习模型代表知识产权。确保SageMaker的安全性可以保证开发出的模型、算法和方法保持机密性，并防止知识产权被盗或逆向工程。'
- en: '`from sagemaker import get_execution_role`'
  id: totrans-257
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`from sagemaker import get_execution_role`'
- en: '[PRE84]'
  id: totrans-258
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE84]'
- en: '[PRE85]'
  id: totrans-259
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE85]'
- en: '[PRE86]'
  id: totrans-260
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE86]'
- en: '[PRE87]'
  id: totrans-261
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE87]'
- en: '[PRE88]'
  id: totrans-262
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE88]'
- en: '`{`'
  id: totrans-263
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`{`'
- en: '[PRE89]'
  id: totrans-264
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE89]'
- en: '[PRE90]'
  id: totrans-265
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE90]'
- en: '[PRE91]'
  id: totrans-266
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE91]'
- en: '[PRE92]'
  id: totrans-267
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE92]'
- en: '[PRE93]'
  id: totrans-268
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE93]'
- en: '[PRE94]'
  id: totrans-269
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE94]'
- en: '[PRE95]'
  id: totrans-270
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE95]'
- en: '[PRE96]'
  id: totrans-271
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE96]'
- en: '[PRE97]'
  id: totrans-272
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE97]'
- en: '[PRE98]'
  id: totrans-273
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE98]'
- en: '[PRE99]'
  id: totrans-274
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE99]'
- en: '[PRE100]'
  id: totrans-275
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE100]'
- en: '[PRE101]'
  id: totrans-276
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE101]'
- en: '[PRE102]'
  id: totrans-277
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE102]'
- en: '`from sagemaker import get_execution_role`'
  id: totrans-278
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`from sagemaker import get_execution_role`'
- en: '[PRE103]'
  id: totrans-279
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE103]'
- en: '[PRE104]'
  id: totrans-280
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE104]'
- en: '[PRE105]'
  id: totrans-281
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE105]'
- en: '[PRE106]'
  id: totrans-282
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE106]'
- en: '`from sagemaker.model_monitor import ModelQualityMonitor`'
  id: totrans-283
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`from sagemaker.model_monitor import ModelQualityMonitor`'
- en: '[PRE107]'
  id: totrans-284
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE107]'
- en: '[PRE108]'
  id: totrans-285
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE108]'
- en: '[PRE109]'
  id: totrans-286
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE109]'
- en: '[PRE110]'
  id: totrans-287
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE110]'
- en: '[PRE111]'
  id: totrans-288
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE111]'
- en: '[PRE112]'
  id: totrans-289
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE112]'
- en: '[PRE113]'
  id: totrans-290
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE113]'
- en: '[PRE114]'
  id: totrans-291
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE114]'
- en: '[PRE115]'
  id: totrans-292
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE115]'
- en: '[PRE116]'
  id: totrans-293
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE116]'
- en: Securing AWS SageMaker applications is not just a best practice; it is a critical
    imperative in the era of data-driven decision-making. By implementing robust security
    measures, such as utilizing VPC endpoints, IAM roles, encryption, and continuous
    monitoring, organizations can fortify their SageMaker applications against potential
    threats and ensure the integrity of their ML workflows. As SageMaker continues
    to empower businesses with ML capabilities, a proactive approach to security becomes
    indispensable for sustained success. You have now reached the end of this section
    and the end of this chapter. Next, take a look at a summary of what you have learned.
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 保护AWS SageMaker应用程序不仅是一种最佳实践，在数据驱动决策的时代，它是一项至关重要的强制措施。通过实施强大的安全措施，如利用VPC端点、IAM角色、加密和持续监控，组织可以加强其SageMaker应用程序对潜在威胁的防御，并确保其机器学习工作流程的完整性。随着SageMaker继续赋予企业机器学习能力，采取主动的安全方法对于持续成功变得不可或缺。你现在已经到达了这个部分的结尾和本章的结尾。接下来，看看你所学内容的总结。
- en: Summary
  id: totrans-295
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, you dived into deploying ML models with Amazon SageMaker, exploring
    factors influencing deployment options. You looked at real-world scenarios and
    dissected them to try out hands-on solutions and code snippets for diverse use
    cases. You emphasized the crucial integration of SageMaker deployment with AWS
    Auto Scaling, dynamically adjusting resources based on workload variations. You
    focused on securing SageMaker applications, presenting practical strategies such
    as VPC endpoints, IAM roles, and encryption practices. Referring to the AWS documentation
    for clarifying any doubts is also the best option. It is always important to design
    your solutions in a cost-effective way, so exploring the cost-effective way to
    use these services is equally important as building the solution.
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你深入探讨了使用Amazon SageMaker部署机器学习模型，研究了影响部署选项的因素。你分析了现实世界场景，并尝试了针对各种用例的动手解决方案和代码片段。你强调了SageMaker部署与AWS
    Auto Scaling的至关重要的集成，根据工作负载的变化动态调整资源。你专注于保护SageMaker应用程序，提出了如VPC端点、IAM角色和加密实践等实用策略。参考AWS文档以澄清任何疑问也是最佳选择。始终重要的是以经济高效的方式设计解决方案，因此探索以经济高效的方式使用这些服务同样重要，如同构建解决方案一样。
- en: Exam Readiness Drill – Chapter Review Questions
  id: totrans-297
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 考试准备练习 - 章节复习问题
- en: Apart from a solid understanding of key concepts, being able to think quickly
    under time pressure is a skill that will help you ace your certification exam.
    That is why working on these skills early on in your learning journey is key.
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 除了对关键概念有扎实的理解外，能够在时间压力下快速思考是一项帮助你通过认证考试的关键技能。这就是为什么在学习的早期阶段就培养这些技能至关重要。
- en: Chapter review questions are designed to improve your test-taking skills progressively
    with each chapter you learn and review your understanding of key concepts in the
    chapter at the same time. You’ll find these at the end of each chapter.
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 章节复习题旨在随着您学习并复习每一章的内容，逐步提高您的应试技巧，同时检查您对章节中关键概念的理解。您可以在每一章的末尾找到这些复习题。
- en: How To Access These Resources
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 如何访问这些资源
- en: To learn how to access these resources, head over to the chapter titled [*Chapter
    11*](B21197_11.xhtml#_idTextAnchor1477), *Accessing the Online* *Practice Resources*.
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解如何访问这些资源，请转到名为[*第11章*](B21197_11.xhtml#_idTextAnchor1477)的章节，*访问在线练习资源*。
- en: 'To open the Chapter Review Questions for this chapter, perform the following
    steps:'
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 要打开本章的章节复习题，请执行以下步骤：
- en: Click the link – [https://packt.link/MLSC01E2_CH10](https://packt.link/MLSC01E2_CH10).
  id: totrans-303
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击链接 – [https://packt.link/MLSC01E2_CH10](https://packt.link/MLSC01E2_CH10)。
- en: 'Alternatively, you can scan the following **QR code** (*Figure 10**.6*):'
  id: totrans-304
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 或者，您可以扫描以下**二维码**（*图10.6*）：
- en: '![Figure 10.6 – QR code that opens Chapter Review Questions for logged-in users](img/B21197_10_06.jpg)'
  id: totrans-305
  prefs: []
  type: TYPE_IMG
  zh: '![图10.6 – 为登录用户打开章节复习题的二维码](img/B21197_10_06.jpg)'
- en: Figure 10.6 – QR code that opens Chapter Review Questions for logged-in users
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.6 – 为登录用户打开章节复习题的二维码
- en: 'Once you log in, you’ll see a page similar to the one shown in *Figure 10**.7*:'
  id: totrans-307
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录后，您将看到一个类似于*图10.7*所示的页面：
- en: '![Figure 10.7 – Chapter Review Questions for Chapter 10](img/B21197_10_07.jpg)'
  id: totrans-308
  prefs: []
  type: TYPE_IMG
  zh: '![图10.7 – 第10章的章节复习题](img/B21197_10_07.jpg)'
- en: Figure 10.7 – Chapter Review Questions for Chapter 10
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.7 – 第10章的章节复习题
- en: Once ready, start the following practice drills, re-attempting the quiz multiple
    times.
  id: totrans-310
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 准备好后，开始以下练习，多次重新尝试测验。
- en: Exam Readiness Drill
  id: totrans-311
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 考试准备练习
- en: For the first three attempts, don’t worry about the time limit.
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 对于前三次尝试，不必担心时间限制。
- en: ATTEMPT 1
  id: totrans-313
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 尝试1
- en: The first time, aim for at least **40%**. Look at the answers you got wrong
    and read the relevant sections in the chapter again to fix your learning gaps.
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: 第一次尝试，目标至少达到**40%**。查看您答错的答案，并再次阅读章节中相关的部分，以填补您的学习差距。
- en: ATTEMPT 2
  id: totrans-315
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 尝试2
- en: The second time, aim for at least **60%**. Look at the answers you got wrong
    and read the relevant sections in the chapter again to fix any remaining learning
    gaps.
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 第二次尝试，目标至少达到**60%**。查看您答错的答案，并再次阅读章节中相关的部分，以填补任何剩余的学习差距。
- en: ATTEMPT 3
  id: totrans-317
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 尝试3
- en: The third time, aim for at least **75%**. Once you score 75% or more, you start
    working on your timing.
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 第三次尝试，目标至少达到**75%**。一旦得分达到75%或更高，您就开始练习计时。
- en: Tip
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 小贴士
- en: You may take more than **three** attempts to reach 75%. That’s okay. Just review
    the relevant sections in the chapter till you get there.
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能需要超过**三次**尝试才能达到75%。这没关系。只需复习章节中的相关部分，直到达到目标。
- en: Working On Timing
  id: totrans-321
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 正在练习计时
- en: 'Target: Your aim is to keep the score the same while trying to answer these
    questions as quickly as possible. Here’s an example of how your next attempts
    should look like:'
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 目标：您的目标是保持分数不变，同时尽可能快速地回答这些问题。以下是如何进行下一次尝试的示例：
- en: '| **Attempt** | **Score** | **Time Taken** |'
  id: totrans-323
  prefs: []
  type: TYPE_TB
  zh: '| **尝试** | **分数** | **用时** |'
- en: '| Attempt 5 | 77% | 21 mins 30 seconds |'
  id: totrans-324
  prefs: []
  type: TYPE_TB
  zh: '| 尝试5 | 77% | 21分钟30秒 |'
- en: '| Attempt 6 | 78% | 18 mins 34 seconds |'
  id: totrans-325
  prefs: []
  type: TYPE_TB
  zh: '| 尝试6 | 78% | 18分钟34秒 |'
- en: '| Attempt 7 | 76% | 14 mins 44 seconds |'
  id: totrans-326
  prefs: []
  type: TYPE_TB
  zh: '| 尝试7 | 76% | 14分钟44秒 |'
- en: Table 10.1 – Sample timing practice drills on the online platform
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 表10.1 – 在线平台上的样本时间练习
- en: Note
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The time limits shown in the above table are just examples. Set your own time
    limits with each attempt based on the time limit of the quiz on the website.
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 上表中显示的时间限制只是示例。根据网站上的测验时间限制，为每次尝试设定自己的时间限制。
- en: With each new attempt, your score should stay above **75%** while your “time
    taken” to complete should “decrease”. Repeat as many attempts as you want till
    you feel confident dealing with the time pressure.
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 每次新的尝试，您的分数应保持在**75%**以上，而完成所需的时间“应减少”。重复尝试，直到您对时间压力有信心为止。
