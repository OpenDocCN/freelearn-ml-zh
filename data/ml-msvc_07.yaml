- en: '7'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '7'
- en: How Machine Learning and Deep Learning Help in MSA Enterprise Systems
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 机器学习和深度学习如何帮助MSA企业系统
- en: In the previous chapters, we analyzed the different general concepts of artificial
    intelligence, machine learning, and deep learning, and how they can be used for
    certain applications and use cases. From there, we looked at how to create an
    end-to-end machine learning system pipeline and the advantages it brings when
    establishing a robust system. Finally, we examined the different ways our machine
    learning model can degrade over time through data shifts, and the different ways
    we can identify and address them.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的章节中，我们分析了人工智能、机器学习和深度学习的不同一般概念，以及它们如何用于特定的应用和用例。从那里，我们探讨了如何创建端到端的机器学习系统管道，以及它在建立稳健系统时带来的优势。最后，我们考察了我们的机器学习模型如何随着时间的推移通过数据变化而退化，以及我们如何识别和解决这些问题。
- en: Having a firm understanding of the basics of machine learning, we can now begin
    to explore the use cases of machine learning in our **Microservice Service Architecture**
    (**MSA**) enterprise. In this chapter, we will go over the different concepts
    we will be proposing when integrating machine learning in to an MSA enterprise
    system to establish an intelligent MSA.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 对机器学习的基本原理有牢固的理解后，我们现在可以开始探索机器学习在我们**微服务架构**（**MSA**）企业中的应用场景。在本章中，我们将讨论在将机器学习集成到MSA企业系统中时，我们将提出的不同概念，以建立一个智能的MSA。
- en: Machine learning MSA enterprise system use cases
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 机器学习MSA企业系统用例
- en: 'The space for adding machine learning to MSA enterprise systems is broad and
    can be open for many use cases. We can use machine learning for different types
    of problems that we can encounter in MSA, such as the following:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在MSA企业系统中添加机器学习的空间很广，可以适用于许多用例。我们可以利用机器学习解决MSA中可能遇到的不同类型的问题，例如以下内容：
- en: '**System Load Prediction**: This will determine when a service is experiencing
    higher than usual loads and trigger measures to prevent the system from degrading
    due to excessive server loads.'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**系统负载预测**：这将确定何时服务经历高于正常水平的负载，并触发措施以防止系统因服务器负载过重而退化。'
- en: '**System Decay Prediction**: Similar to system load prediction, this will monitor
    the microservices and try to predict and determine anomalies in the MSA enterprise,
    allowing users to act and prevent certain issues from arising and negatively impacting
    the performance.'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**系统退化预测**：类似于系统负载预测，这将监控微服务并尝试预测和确定MSA企业中的异常，使用户能够采取行动，防止某些问题出现并对性能产生负面影响。'
- en: '**System Security**: In the age of cybersecurity, it is important to be able
    to protect your MSA system from targeted attacks. By studying the behavior of
    your MSA system, the model can predict and detect attacks that could be impacting
    your system.'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**系统安全**：在网络安全时代，能够保护您的MSA系统免受针对性攻击至关重要。通过研究您的MSA系统行为，模型可以预测和检测可能影响您系统的攻击。'
- en: '**System Resource Planning**: As your system grows and evolves, being able
    to properly allocate resources and adapt to your system needs is a critical part
    when establishing your MSA enterprise system. With machine learning, we can learn
    which services require more resources and how much we need to scale in order to
    allocate the required resources efficiently and effectively.'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**系统资源规划**：随着系统的发展和演变，能够正确分配资源并适应系统需求是建立MSA企业系统时的关键部分。利用机器学习，我们可以学习哪些服务需要更多资源，以及我们需要扩展多少才能有效地分配所需资源。'
- en: '![Figure 7.1: Use cases of machine learning in MSA](img/B18934_07_1.jpg)'
  id: totrans-10
  prefs: []
  type: TYPE_IMG
  zh: '![图7.1：MSA中机器学习的用例](img/B18934_07_1.jpg)'
- en: 'Figure 7.1: Use cases of machine learning in MSA'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.1：MSA中机器学习的用例
- en: While there are many more use cases of machine learning in MSA enterprise systems,
    most use cases fall under these four categories. Before getting into the implementation
    of the different models, we need to first get an overview of the different cases
    and how we need to solve these different problems.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管MSA企业系统中还有许多其他机器学习的用例，但大多数用例都归入这四个类别。在开始实施不同的模型之前，我们首先需要了解不同的案例以及我们如何解决这些问题。
- en: We can start by looking at system load predictions. This is a common issue that
    we will encounter when it comes to dealing with services in general. MSA has an
    advantage compared to monolithic systems, where the resources are dedicated to
    each microservice, allowing easier maintenance and scalability. As discussed in
    previous chapters, though, there could be cases where, in MSA, a microservice
    experiences a high load and, as a result, causes a cascading effect where the
    failures expand to other microservices.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以从查看系统负载预测开始。这是我们在处理服务时经常会遇到的一个常见问题。与资源分配给每个微服务的单体系统相比，MSA具有优势，这允许更容易的维护和可扩展性。然而，正如前几章所讨论的，在MSA中，一个微服务可能会经历高负载，从而导致级联效应，失败扩展到其他微服务。
- en: With an intelligent MSA, we can train a model using different features, such
    as the response time, to learn the patterns of the MSA system. Similar to a microservice
    circuit breaker, this model will be able to swiftly determine whether a microservice
    is experiencing a heavy load and address the issue before it becomes too late
    and starts negatively impacting the other microservices.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 使用智能MSA，我们可以使用不同的特征，如响应时间，来训练模型，学习MSA系统的模式。类似于微服务熔断器，这个模型将能够迅速确定微服务是否正在经历高负载，并在问题变得太晚并开始对其他微服务产生负面影响之前解决它。
- en: '![Figure 7.2: System load prediction model](img/B18934_07_2.jpg)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![图7.2：系统负载预测模型](img/B18934_07_2.jpg)'
- en: 'Figure 7.2: System load prediction model'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.2：系统负载预测模型
- en: Just like the system load prediction model, we can build a model to find anomalies
    within the MSA that could lead to decaying services. Rather than focusing only
    on the service load for a specific microservice, we can study the entire MSA and
    learn the different patterns of how it operates at a larger scale.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 就像系统负载预测模型一样，我们可以构建一个模型来寻找MSA中的异常，这些异常可能导致服务衰减。我们不仅关注特定微服务的服务负载，还可以研究整个MSA以及它在更大规模上运作的不同模式。
- en: Certain systems can experience different system loads and bugs over certain
    times and periods. For example, our service may encounter spikes in requests over
    certain periods such as holidays and seasonal events, where the user count may
    drastically increase. Allowing the model to learn and understand the MSA and how
    it operates over time can prepare the model to better detect anomalies and prevent
    false positives.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 某些系统在特定的时间和时期可能会经历不同的系统负载和错误。例如，我们的服务可能在假期和季节性事件等特定时期遇到请求激增，用户数量可能急剧增加。允许模型学习和理解MSA及其随时间如何运作，可以使模型更好地检测异常并防止误报。
- en: Also, rather than monitoring separate microservices, we can evaluate clusters
    of microservices and how they interact with the entire MSA. This way, we can identify
    certain bottlenecks and bugs that could arise in our MSA.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，我们不仅监控单独的微服务，还可以评估微服务集群以及它们与整个MSA的交互。这样，我们可以识别出可能在我们的MSA中出现的某些瓶颈和错误。
- en: '![Figure 7.3: System decay prediction model](img/B18934_07_3.jpg)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![图7.3：系统衰减预测模型](img/B18934_07_3.jpg)'
- en: 'Figure 7.3: System decay prediction model'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.3：系统衰减预测模型
- en: Machine learning has been thriving in the security field. With more advanced
    attacks and methods, it has become imperative for users to protect their systems.
    Machine learning has made it easier for users to create robust models that can
    analyze and predict attacks before they can even impact their systems, and MSA
    is no different.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 机器学习在安全领域蓬勃发展。随着更高级的攻击和方法，用户保护他们的系统变得至关重要。机器学习使用户能够创建强大的模型，这些模型可以在攻击甚至影响他们的系统之前进行分析和预测，MSA也不例外。
- en: '**Denial of Service** (**DoS**) is a cyber-attack intended to prevent users
    from accessing certain services. These attacks are becoming more sophisticated
    with the advancements in technology. With machine learning, we can train our model
    to learn about our MSA and simulate DoS attacks such that it can be able to determine
    whether our MSA is under attack. With that, we can notify the security team or
    deploy countermeasures to fight back against certain attacks and maintain the
    integrity of our MSA.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '**拒绝服务**（**DoS**）是一种旨在阻止用户访问某些服务的网络攻击。随着技术的进步，这些攻击变得越来越复杂。利用机器学习，我们可以训练我们的模型了解我们的MSA并模拟DoS攻击，以便它能够确定我们的MSA是否受到攻击。有了这个，我们可以通知安全团队或部署对策来对抗某些攻击并维护我们MSA的完整性。'
- en: '![Figure 7.4: System security model](img/B18934_07_4.jpg)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![图7.4：系统安全模型](img/B18934_07_4.jpg)'
- en: 'Figure 7.4: System security model'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.4：系统安全模型
- en: A part of the **self-healing** process includes resource allocation for certain
    microservices when your MSA begins to grow and expand. After a time, you may experience
    a growth in users and as a result, your microservices will have increased request
    volume. A model may incorrectly identify a problem and offer solutions that wouldn’t
    address the core problem.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 自愈过程的一部分包括在MSA开始增长和扩展时为某些微服务分配资源。经过一段时间，你可能会经历用户增长，结果，你的微服务的请求量会增加。一个模型可能错误地识别问题并提供不会解决核心问题的解决方案。
- en: Thus, building an advanced model where it can track the gradual growth of the
    MSA and determine when certain services need more resources can be a critical
    part of the system’s self-healing process. A successful implementation of the
    model can greatly improve system reliability as it can properly and efficiently
    allocate resources more effectively.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，构建一个高级模型，它可以跟踪MSA的逐渐增长并确定何时某些服务需要更多资源，可能是系统自愈过程的关键部分。该模型的成功实施可以大大提高系统的可靠性，因为它可以更有效地合理和高效地分配资源。
- en: '![Figure 7.5: System resource planning model](img/B18934_07_5.jpg)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![图7.5：系统资源规划模型](img/B18934_07_5.jpg)'
- en: 'Figure 7.5: System resource planning model'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.5：系统资源规划模型
- en: Important note
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: The different types of models we can use in our MSA are not mutually exclusive.
    It is possible, and common, to combine the different use cases to build a more
    intelligent MSA. Understanding how your MSA operates and determining the different
    weaknesses it may have makes it easier for the user to determine which models
    to approach.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在我们的MSA中使用的不同类型的模型不是互斥的。将不同的用例组合起来构建一个更智能的MSA是可能的，也是常见的。了解你的MSA如何运行以及确定它可能存在的不同弱点，使用户更容易确定要采用哪些模型。
- en: With certain use cases, some models can work better than others due to the nature
    of the problem. Now that we have looked at the different concepts where we can
    apply machine learning to our MSA, we can begin to dive deep into the different
    implementations and models we can use to build our machine learning models in
    the next few sections.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些用例中，由于问题的性质，某些模型可能比其他模型工作得更好。现在我们已经研究了我们可以将机器学习应用于我们的MSA的不同概念，我们可以在下一节开始深入探讨我们可以用来构建我们的机器学习模型的不同的实现和模型。
- en: Enhancing system supportability and time-to-resolution (TTR) with pattern analysis
    machine learning
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用模式分析机器学习增强系统支持性和问题解决时间（TTR）
- en: Before we can begin to make our MSA intelligent, we must first understand how
    our system performs by leveraging machine learning models to learn the common
    trends and patterns for the performance of our services. From there, we can establish
    a baseline that can be used as a reference for other advanced models to use.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始使我们的MSA智能化之前，我们必须首先通过利用机器学习模型来学习我们服务的性能的常见趋势和模式，来了解我们的系统性能。从那里，我们可以建立一个基线，作为其他高级模型使用的参考。
- en: As discussed in [*Chapter 4*](B18934_04.xhtml#_idTextAnchor051), supervised
    learning can occur when we have a labeled test set. For our case, we can mostly
    use supervised learning because we can easily capture the response time of our
    services in the MSA and use that as our data label.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 如[*第4章*](B18934_04.xhtml#_idTextAnchor051)所述，当我们有一个标记的测试集时，可以发生监督学习。在我们的案例中，我们主要可以使用监督学习，因为我们可以在MSA中轻松捕获我们服务的响应时间，并将其用作我们的数据标签。
- en: From there, we have a wide variety of techniques that we can use to create our
    machine learning model. For simplicity, we can use a linear regression model to
    predict the expected response time for a particular microservice. Using this output,
    we can design a system where we can configure a set threshold where, if we detect
    that our MSA will reach a certain response time, we can notify the developers
    or initiate a program to resolve the issue before it occurs.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 从那里，我们有各种各样的技术可以用来创建我们的机器学习模型。为了简单起见，我们可以使用线性回归模型来预测特定微服务的预期响应时间。使用这个输出，我们可以设计一个系统，其中我们可以配置一个阈值，如果我们检测到我们的MSA将达到一定的响应时间，我们可以通知开发者或启动一个程序来在问题发生之前解决它。
- en: If we recall from [*Chapter 6*](B18934_06.xhtml#_idTextAnchor072), we discussed
    data shifts and how they can impact our model. It’s common for MSAs to grow and
    expand as time passes due to an increase in user counts or seasonal occasions.
    As a result, we may see a growth in response times and metrics for our MSA. This
    may falsely trigger an alert notifying us of abnormal response times when, in
    reality, it accurately depicts the normal behavior of the MSA.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们回顾[*第6章*](B18934_06.xhtml#_idTextAnchor072)，我们讨论了数据漂移及其对我们模型的影响。由于用户数量增加或季节性事件，MSA随着时间的推移而增长和扩展是很常见的。因此，我们可能会看到我们的MSA响应时间和指标的增长。这可能会错误地触发一个警报，通知我们异常的响应时间，而实际上，它准确地描述了MSA的正常行为。
- en: Therefore, it is important to continuously collect data and train our model
    to adapt to expected changes such that it is able to learn how the system grows
    and to correctly identify changes that are not common to our MSA.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，持续收集数据并训练我们的模型以适应预期的变化，使其能够学习系统的增长方式并正确识别不常见于我们MSA的变化，这一点非常重要。
- en: '![Figure 7.6: Performance baseline system flow](img/B18934_07_6.jpg)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![图7.6：性能基线系统流程](img/B18934_07_6.jpg)'
- en: 'Figure 7.6: Performance baseline system flow'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.6：性能基线系统流程
- en: While this system is enough for simple problems, we can combine this model output
    with other advanced models to create a more end-to-end system, where we can understand
    the health of the MSA and make better decisions. In the next section, we will
    discuss how we can use deep learning to implement self-healing for our system.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然这个系统对于简单问题已经足够，但我们可以将这个模型输出与其他高级模型结合，创建一个更完整的端到端系统，其中我们可以了解MSA的健康状况并做出更好的决策。在下一节中，我们将讨论如何使用深度学习来实现我们系统的自我修复。
- en: Important note
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: It’s important to start with a simple model, such as a linear regression model.
    Once the proof of concept works, you can improve your system by incorporating
    more advanced models and techniques.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 从一个简单的模型开始，例如线性回归模型，是很重要的。一旦概念验证成功，你就可以通过结合更高级的模型和技术来改进你的系统。
- en: Implementing system self-healing with deep learning
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用深度学习实现系统自我修复
- en: Now that we have determined the baseline for our system, we can use this to
    our advantage to create a more intelligent MSA, where we can detect anomalies
    and perform system self-healing. This way, we can be more proactive in resolving
    issues before they arise and save cost and time.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经确定了系统的基线，我们可以利用这一点来创造一个更智能的MSA，其中我们可以检测异常并执行系统自我修复。这样，我们可以在问题出现之前更加主动地解决问题，节省成本和时间。
- en: '**Anomaly detection** is an effective method for identifying any abnormal events
    or trends that may occur in a system or service. For example, we can use anomaly
    detection for determining credit card fraud. We can use the user’s purchasing
    trends and, based on that information, we can determine when the user has been
    a victim of credit card fraud.'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '**异常检测**是识别系统或服务中可能发生的任何异常事件或趋势的有效方法。例如，我们可以使用异常检测来确定信用卡欺诈。我们可以使用用户的购买趋势，并根据这些信息确定用户何时成为信用卡欺诈的受害者。'
- en: 'Similar to credit card fraud detection, we can apply our anomaly detection
    to our MSA. Before we can go to the different models that we can use to achieve
    our anomaly detection, let us first understand the different types of anomalies:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 类似于信用卡欺诈检测，我们可以将我们的异常检测应用于我们的MSA。在我们探讨可以用来实现异常检测的不同模型之前，让我们首先了解不同类型的异常：
- en: '**Point Anomaly**: This occurs when an individual point is far off from the
    rest of the data'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**点异常**：当某个数据点与其他数据点相差甚远时，这种情况发生'
- en: '**Contextual Anomaly**: Data is considered this way when it is not in line
    with the general data trend due to the context of the data'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**上下文异常**：当数据因数据上下文的原因不符合一般数据趋势时，数据被视为此类'
- en: '**Collective Anomaly**: When a group of related data instances is anomalous
    with respect to the whole dataset'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**集体异常**：当一组相关数据实例相对于整个数据集出现异常时'
- en: '![Figure 7.7: Anomalous data](img/B18934_07_7.jpg)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![图7.7：异常数据](img/B18934_07_7.jpg)'
- en: 'Figure 7.7: Anomalous data'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.7：异常数据
- en: 'An anomaly detection model can be done in the following ways:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 异常检测模型可以通过以下方式完成：
- en: '**Supervised** **Anomaly Detection**'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**监督** **异常检测**'
- en: '**Unsupervised** **Anomaly Detection**'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**无监督** **异常检测**'
- en: A common model we can use for unsupervised learning is an **autoencoder**. As
    mentioned in [*Chapter 4*](B18934_04.xhtml#_idTextAnchor051), an autoencoder is
    a neural network composed of an encoder and a decoder. The general purpose of
    an autoencoder is to take the data and compress it to a lower dimension similar
    to PCA. That way, it is able to learn the correlations and patterns between the
    different data features. Once it learns the patterns, it can feed the compressed
    data forward to the decoder where it tries to “recreate” the original data with
    what it has learned in the encoder stage.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以用于无监督学习的一个常见模型是**自动编码器**。如[*第4章*](B18934_04.xhtml#_idTextAnchor051)中提到的，自动编码器是由编码器和解码器组成的神经网络。自动编码器的一般目的是将数据压缩到与PCA类似的一个较低维度。这样，它能够学习不同数据特征之间的相关性和模式。一旦它学会了模式，它可以将压缩后的数据传递给解码器，解码器尝试使用编码器阶段学到的知识“重建”原始数据。
- en: While experts can study the data to determine what response times are considered
    an anomaly for a particular MSA, we can leverage machine learning to help us find
    patterns and relationships that may be hard to see even for an experienced developer.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 当专家研究数据以确定对于特定的MSA，哪些响应时间被认为是异常时，我们可以利用机器学习来帮助我们找到即使是经验丰富的开发者可能也难以看到的模式和关系。
- en: With the learned parameters, we can then use this in our supervised regression
    models to achieve more accurate results when detecting anomalies and prevent false
    positives from occurring.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 使用学到的参数，我们可以在我们的监督回归模型中使用它，以在检测异常时实现更准确的结果，并防止假阳性发生。
- en: '![Figure 7.8: Self-healing using deep learning](img/B18934_07_8.jpg)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![图7.8：使用深度学习的自我修复](img/B18934_07_8.jpg)'
- en: 'Figure 7.8: Self-healing using deep learning'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.8：使用深度学习的自我修复
- en: Important note
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: Labeling data to be used in a supervised machine learning problem can cost time
    and money. You can leverage unsupervised machine learning models to help you predict
    and label your unlabeled data. From there, you can feed your newly labeled data
    into your supervised machine learning problem, thus taking advantage of unsupervised
    learning. Keep the newly labeled data in mind and make sure it doesn’t negatively
    impact your supervised machine learning problem.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 标记用于监督式机器学习问题中的数据可能需要花费时间和金钱。你可以利用无监督机器学习模型来帮助你预测和标记你的未标记数据。从那里，你可以将新标记的数据输入到你的监督式机器学习问题中，从而利用无监督学习。记住新标记的数据，并确保它不会对你的监督式机器学习问题产生负面影响。
- en: These are some of the ways in which we can take advantage of machine learning
    and deep learning to create an intelligent MSA, where it can detect anomalies
    in the system and react swiftly. These use cases can be adjusted and enhanced
    based on the user’s needs and the demands of their MSA by using different models
    and techniques.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是我们可以利用机器学习和深度学习创建智能MSA的一些方法，它可以检测系统中的异常并迅速反应。这些用例可以根据用户的需求和他们的MSA的需求，通过使用不同的模型和技术进行调整和增强。
- en: Summary
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: This chapter discussed how we can implement machine learning and deep learning
    in our MSA.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 本章讨论了如何在我们的MSA中实现机器学习和深度学习。
- en: 'We first looked into the different use cases for how machine learning can be
    used to build an intelligent MSA. The uses cases can be grouped into four categories:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先探讨了机器学习如何用于构建智能MSA的不同用例。这些用例可以分为四个类别：
- en: System Load Prediction
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 系统负载预测
- en: System Decay Prediction
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 系统衰减预测
- en: System Security
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 系统安全
- en: System Resource Planning
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 系统资源规划
- en: We discussed each category and what role it plays when looking into creating
    an intelligent MSA.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 我们讨论了每个类别及其在创建智能MSA时扮演的角色。
- en: From there, we started looking into using supervised machine learning to create
    a pattern analysis model where it can learn our MSA and create a performance baseline
    model. Using this, we can determine whether our microservice performance is abnormal.
    We can then use this to either perform actions based on a threshold or use this
    baseline to build a more advanced model.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 从那里，我们开始探讨使用监督机器学习来创建一个模式分析模型，它可以学习我们的MSA并创建一个性能基线模型。使用这个模型，我们可以确定我们的微服务性能是否异常。然后我们可以根据阈值执行操作，或者使用这个基线构建一个更高级的模型。
- en: Along with our supervised machine learning model, we can use deep learning to
    create a more sophisticated model, such as autoencoders, to find anomalies in
    our MSA. Using the combination of these two models, we can create a set of rules
    to perform based on certain predictions, such as that our MSA can self-heal with
    minimal human intervention. This allows us to save time and money when repairing
    and debugging our MSA.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 除了我们的监督机器学习模型外，我们还可以使用深度学习来创建更复杂的模型，例如自动编码器，以在我们的MSA中找到异常。通过结合这两种模型，我们可以创建一套基于某些预测的规则来执行，例如我们的MSA可以在最小人工干预下自我修复。这使我们能够在修复和调试我们的MSA时节省时间和金钱。
- en: In the next chapters, we will be taking what we’ve learned so far and starting
    to build our own MSA with practical examples and integrating machine learning
    to create our very own simple intelligent MSA.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的章节中，我们将把迄今为止所学的内容应用到实践中，并开始使用实际示例和集成机器学习来构建我们自己的简单智能MSA。
- en: 'Part 3: Practical Guide to Deploying Machine Learning in MSA Systems'
  id: totrans-75
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第三部分：在MSA系统中部署机器学习的实用指南
- en: The final part of this book will bring everything covered so far to life. It
    will walk you step by step through the design and development of an intelligent
    **Microservices Architecture** (**MSA**) system, with hands-on examples and actual
    code that can be imported for real-life use cases. The part will provide an in-depth
    understanding of how to apply the DevOps process to building and running an intelligent
    enterprise MSA system, from the very start to operations and maintenance.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 本书最后一部分将把迄今为止所涵盖的内容生动地呈现出来。它将逐步引导你通过设计和发展一个智能的**微服务架构**（**MSA**）系统，包括实际可导入用于实际用例的动手示例和实际代码。本部分将深入理解如何将DevOps流程应用于构建和运行智能企业MSA系统，从最初开始到运营和维护。
- en: The part starts with the basics of containers, Docker, and how to install and
    run Docker containers. We will also gain hands-on experience in handling data
    flows between containers to build a simple project. Additionally, the chapter
    will cover a practical guide on building specific-purpose AI and how to infuse
    AI services into an MSA system.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 本部分从容器、Docker的基本知识开始，以及如何安装和运行Docker容器。我们还将通过构建一个简单项目来获得处理容器间数据流的手动经验。此外，本章还将涵盖构建特定用途AI的实用指南以及如何将AI服务注入MSA系统。
- en: This part delves into the application of DevOps to enterprise MSA systems, with
    a focus on organizational structure alignment and how DevOps can impact the MSA
    and its operations. We will learn how to apply DevOps throughout the project life
    cycle, from start to operations and change management and maintenance.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 本部分深入探讨DevOps在企业MSA系统中的应用，重点关注组织结构对齐以及DevOps如何影响MSA及其运营。我们将学习如何在项目生命周期中应用DevOps，从开始到运营、变更管理和维护。
- en: The part also covers how to identify and minimize system dependencies, apply
    **Quality Assurance** (**QA**) testing strategies, build microservice and MSA
    test cases, and deploy system changes and hot updates. The section will also provide
    practical examples of how to overcome system dependencies and apply testing strategies
    effectively.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 本部分还涵盖了如何识别和最小化系统依赖，应用**质量保证**（**QA**）测试策略，构建微服务和MSA测试用例，以及部署系统更改和热更新。本节还将提供如何克服系统依赖和有效应用测试策略的实用示例。
- en: In conclusion, the final part of this book will provide you with a comprehensive
    guide on how to design, develop, and maintain an intelligent enterprise MSA system,
    with a focus on practical, hands-on experience and real-life use cases. By the
    end of this part, we will be equipped with the skills and knowledge necessary
    to build our own intelligent MSA system and take the first step toward achieving
    better business results, operational performance, and business continuity.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 总之，本书的最后一部分将为您提供如何设计、开发和维护智能企业MSA系统的全面指南，重点关注实践、动手经验和实际用例。到本部分结束时，我们将具备构建自己的智能MSA系统并迈向实现更好的业务成果、运营绩效和业务连续性的第一步所需的技能和知识。
- en: 'This part comprises the following chapters:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 本部分包括以下章节：
- en: '[*Chapter 8*](B18934_08.xhtml#_idTextAnchor086)*, The Role of DevOps in Building
    Intelligent MSA Systems*'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第8章*](B18934_08.xhtml#_idTextAnchor086)*，DevOps在构建智能MSA系统中的作用*'
- en: '[*Chapter 9*](B18934_09.xhtml#_idTextAnchor102)*, Building an MSA with Docker
    Containers*'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第9章*](B18934_09.xhtml#_idTextAnchor102)*，使用Docker容器构建MSA*'
- en: '[*Chapter 10*](B18934_10.xhtml#_idTextAnchor115)*, Building an Intelligent
    MSA System*'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第10章*](B18934_10.xhtml#_idTextAnchor115)*，构建智能MSA系统*'
- en: '[*Chapter 11*](B18934_11.xhtml#_idTextAnchor132)*, Managing the New System’s
    Deployment – Greenfield vs. Brownfield*'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第11章*](B18934_11.xhtml#_idTextAnchor132)*，管理新系统的部署——绿地与棕地对比*'
- en: '[*Chapter 12*](B18934_12.xhtml#_idTextAnchor153)*, Deploying, Testing, and
    Operating an Intelligent MSA Systems*'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第12章*](B18934_12.xhtml#_idTextAnchor153)*，部署、测试和运营智能MSA系统*'
- en: 'Part 3: Practical Guide to Deploying Machine Learning in MSA Systems'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 第3部分：在MSA系统中部署机器学习的实用指南
