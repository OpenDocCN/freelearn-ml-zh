- en: 'Chapter 14: Managing SageMaker Features across Accounts'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第14章：跨账户管理SageMaker功能
- en: AWS publishes best practices around the management and governance of workloads.
    These practices touch on many areas, such as cost optimization, security, compliance,
    and ensuring the operational efficiency of workloads scaled on AWS. Multi-account
    patterns are one common architectural consideration when building, deploying,
    and operating workloads that utilize the features of Amazon SageMaker.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: AWS发布了关于工作负载管理和治理的最佳实践。这些实践涉及许多领域，例如成本优化、安全性、合规性，以及确保在AWS上扩展的工作负载的运营效率。在构建、部署和运营利用Amazon
    SageMaker功能的工作负载时，多账户模式是常见的架构考虑因素之一。
- en: In this section, we won't cover the well-established recommendations and considerations
    around the governance of AWS workloads across AWS accounts. Rather, we will specifically
    focus on some of the considerations around the usage of AWS features across AWS
    accounts. For more information about general recommendations for choosing the
    right account strategy, please refer to **AWS Management and Governance services**
    ([https://aws.amazon.com/products/management-and-governance/](https://aws.amazon.com/products/management-and-governance/))
    and the **AWS Multi-Account Landing Zone strategy** – **AWS Control Tower** ([https://docs.aws.amazon.com/controltower/latest/userguide/aws-multi-account-landing-zone.html](https://docs.aws.amazon.com/controltower/latest/userguide/aws-multi-account-landing-zone.html)).
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们不会涵盖关于AWS账户间AWS工作负载治理的既定建议和考虑因素。相反，我们将特别关注一些关于在AWS账户间使用AWS功能的考虑因素。有关选择正确账户策略的一般建议，请参阅**AWS管理和治理服务**（[https://aws.amazon.com/products/management-and-governance/](https://aws.amazon.com/products/management-and-governance/））和**AWS多账户着陆区策略**
    – **AWS Control Tower**（[https://docs.aws.amazon.com/controltower/latest/userguide/aws-multi-account-landing-zone.html](https://docs.aws.amazon.com/controltower/latest/userguide/aws-multi-account-landing-zone.html)）。
- en: The concept of a multi-account strategy is built on the **AWS Well-Architected
    Framework**, where having multiple AWS accounts allows you to better govern and
    manage machine learning activities on **Amazon SageMaker** across the **Machine
    Learning Development Lifecycle (ML Lifecycle)**. The benefits of using multiple
    AWS accounts are documented for general workloads.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 多账户策略的概念建立在**AWS Well-Architected Framework**之上，拥有多个AWS账户可以使您更好地治理和管理在**Amazon
    SageMaker**上跨**机器学习开发生命周期（ML生命周期）**的机器学习活动。使用多个AWS账户的好处已在通用工作负载中进行了记录。
- en: 'In this chapter, we''ll discuss the following topics as they relate to managing
    SageMaker features across multiple AWS accounts:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将讨论以下与跨多个AWS账户管理SageMaker功能相关的话题：
- en: Examining an overview of the AWS multi-account environment
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检查AWS多账户环境的概述
- en: Understanding the benefits of using multiple AWS accounts with Amazon SageMaker
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解使用多个AWS账户与Amazon SageMaker一起使用的优势
- en: Examining multi-account considerations with Amazon SageMaker
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Amazon SageMaker检查多账户考虑因素
- en: Examining an overview of the AWS multi-account environment
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检查AWS多账户环境的概述
- en: There are many variations of multi-account strategies that are valid. Multi-account
    implementations can vary based on the organizational and technical needs of a
    customer. For the purposes of this chapter, we will focus on a basic multi-account
    strategy, focusing on only the accounts that are most relevant to a machine learning
    workload using Amazon SageMaker. We don't explicitly call out accounts (such as
    security or logging) because they are already well defined in the context of AWS
    governance practices. *Figure 14.1* illustrates the general, high-level accounts
    we will use to discuss the concepts in this chapter.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 存在许多有效的多账户策略变体。多账户实现可以根据客户在组织和技术方面的需求而有所不同。为了本章的目的，我们将关注一个基本的多账户策略，专注于与使用Amazon
    SageMaker的机器学习工作负载最相关的账户。我们不会明确指出账户（如安全或日志记录），因为它们已经在AWS治理实践中得到了很好的定义。*图14.1*展示了我们将用于讨论本章概念的通用、高级账户。
- en: '![Figure 14.1 – Example of AWS accounts and SageMaker features'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 14.1 – Example of AWS accounts and SageMaker features'
- en: '](img/B17249_14_01.jpg)'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/B17249_14_01.jpg]'
- en: Figure 14.1 – Example of AWS accounts and SageMaker features
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 图14.1 – AWS账户和SageMaker功能的示例
- en: 'Using *Figure 14.1* as an example, the following AWS accounts may be used as
    part of an end-to-end ML Lifecycle. Please keep in mind that account naming and
    resource placement may vary considerably across implementations. Each account
    is described at a high level, in order to focus more on the account purpose versus
    the naming standard itself:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 以*图 14.1*为例，以下 AWS 账户可以作为端到端 ML 生命周期的一部分使用。请记住，账户命名和资源放置在实现中可能会有很大差异。每个账户都从高层次进行描述，以便更多地关注账户目的而不是命名标准本身：
- en: '**Shared Services account**: This account can be named many things, and is
    also referred to as a **DevOps** or application management account. For the purposes
    of this chapter, we refer to this account as the one that can often include the
    services and tooling used for the management of end-to-end pipelines and the ongoing
    management of workloads.'
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**共享服务账户**：此账户可以命名为许多不同的名称，也被称为**DevOps**或应用程序管理账户。在本章中，我们将此账户称为通常包括用于管理端到端管道和持续管理工作负载的服务和工具的账户。'
- en: '**Data platform/data lake**: This account acts as the central repository for
    datasets, both raw and curated, used for model-building activities.'
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**数据平台/数据湖**：此账户作为数据集的中心存储库，包括用于模型构建活动的原始和精选数据集。'
- en: '**Data science account**: This account (or accounts) represents the environments
    where model development activities are performed.'
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**数据科学账户**：此账户（或账户）代表模型开发活动执行的环境。'
- en: '**Test account**: This account represents the environment where a model will
    be tested. This account typically includes integration and performance testing.'
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**测试账户**：此账户代表模型将被测试的环境。此账户通常包括集成和性能测试。'
- en: '**Production account**: This account represents the environment hosting models
    supporting live applications and workloads. This account typically has the highest
    levels of controls and restrictions.'
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**生产账户**：此账户代表托管支持实时应用程序和工作负载的模型的环境。此账户通常具有最高级别的控制和限制。'
- en: '**Service Catalog master account**: The purpose of this account is to maintain
    a central hub of products that can be offered through the **AWS Service Catalog**
    and used to consistently provision resources in spoke accounts, such as the **data
    science account**. A spoke account is an AWS account that has been given access
    to portfolios managed from the master account.'
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**服务目录主账户**：此账户的目的是维护一个中心枢纽，可以提供通过**AWS 服务目录**的产品，并用于在 spoke 账户中一致地配置资源，例如**数据科学账户**。spoke
    账户是已被授予从主账户管理的投资组合访问权限的 AWS 账户。'
- en: Again, these accounts are high-level representations of a potential account
    structure and are not inclusive of every variation that is valid given the requirements
    of your own environments. In the next section, we'll discuss the benefits of using
    multiple AWS accounts specifically as they relate to using Amazon SageMaker across
    the ML Lifecycle
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 再次强调，这些账户是潜在账户结构的概述，并不包括符合您自身环境要求的每个有效变体。在下一节中，我们将讨论使用多个 AWS 账户的具体好处，特别是它们与在
    ML 生命周期中使用 Amazon SageMaker 的关系。
- en: Understanding the benefits of using multiple AWS accounts with Amazon SageMaker
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解使用多个 AWS 账户与 Amazon SageMaker 的好处
- en: 'In this section, we''ll cover the general, high-level benefits of using multiple
    AWS accounts. We''ll also discuss the considerations that are specific to using
    Amazon SageMaker across the ML Lifecycle:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将介绍使用多个 AWS 账户的一般、高层次的好处。我们还将讨论使用 Amazon SageMaker 横跨 ML 生命周期时的特定考虑因素：
- en: '**Benefit #1**: Implementing specific security controls'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**好处 #1**：实施特定的安全控制'
- en: Using multiple AWS accounts allows customers to implement security controls
    that are specific to the workload, environment, or data. As an example, some workloads
    may have unique security requirements (such as PCI compliance) and require additional
    controls. Using multiple accounts allows you to maintain fine-grained controls
    that are isolated and auditable at the AWS account level.
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用多个 AWS 账户允许客户实施针对工作负载、环境或数据的特定安全控制。例如，某些工作负载可能有独特的安全要求（如 PCI 合规性）并需要额外的控制。使用多个账户允许您在
    AWS 账户级别保持细粒度的控制，这些控制是隔离和可审计的。
- en: For the model-building activities included in the ML Lifecycle, using multiple
    AWS accounts allows you to create and manage data science environments that include
    the controls that are specific to machine learning, as well as to your security
    requirements. With machine learning, data scientists need access to live production
    data. Typically, that data should be scrubbed of any sensitive data before a data
    scientist gains access. However, there are use cases where a data scientist may
    need access to that sensitive data. By separating data science environments that
    have access to sensitive data and those that do not have access to sensitive data,
    you're able to implement controls at the account level, as well as to audit at
    the account level.
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于机器学习生命周期中包含的模型构建活动，使用多个 AWS 账户允许您创建和管理包含特定于机器学习的控制以及您安全要求的数据科学环境。在机器学习中，数据科学家需要访问实时生产数据。通常，在数据科学家获得访问权限之前，这些数据应该被清除任何敏感数据。然而，也存在数据科学家可能需要访问这些敏感数据的情况。通过将可以访问敏感数据的数据科学环境和无法访问敏感数据的数据科学环境分开，您能够在账户级别实施控制，并在账户级别进行审计。
- en: For model deployment activities included in the ML Lifecycle, you will want
    to ensure your models serving live traffic or providing critical inference data
    are managed and controlled. This would be the case with any other production application.
    You wish to ensure availability. Just as you would not implement a live web application
    in the same account where developers have broad access, the same is true for machine
    learning workloads serving live production workloads.
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于机器学习生命周期中包含的模型部署活动，您将希望确保您的模型在处理实时流量或提供关键推理数据时得到管理和控制。这适用于任何其他生产应用程序。您希望确保可用性。就像您不会在开发人员拥有广泛访问权限的同一账户中实施实时网络应用程序一样，对于服务于实时生产工作负载的机器学习工作负载也是如此。
- en: As an example, a **SageMaker endpoint** serving a production application should
    be hosted in an AWS account that has all of the controls and restricted access
    in place (you would want this to be the case as with any other production workload).
    This ensures the endpoint isn't inadvertently deleted in a lower-level account
    that may have fewer controls and broader access permissions granted.
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 例如，一个**SageMaker端点**服务于生产应用程序应该托管在一个已经实施所有控制和限制访问权限的 AWS 账户中（您希望这种情况适用于任何其他生产工作负载）。这确保了端点不会在可能具有较少控制和更广泛访问权限的下级账户中意外删除。
- en: '**Benefit #2**: Supporting the needs of multiple teams'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**好处 #2**：支持多个团队的需求'
- en: Large organizations and enterprises are often looking for scalable mechanisms
    to support the resource needs and responsibilities of different teams. Across
    lines of business, it's common to have separate AWS accounts. The same is true
    for machine learning workloads. An example here includes **data science environments**
    (as discussed in [*Chapter 2*](B17249_02_Final_JM_ePub.xhtml#_idTextAnchor039)*,
    Data Science Environments*), where each team may have different requirements for
    an environment in which to build machine learning models. In this case, it's common
    to have multiple data science environments supporting multiple teams, as well
    as supporting the requirements across and within teams.
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 大型组织和企业通常在寻找可扩展的机制来支持不同团队的资源需求和责任。在业务线之间，通常会有独立的 AWS 账户。机器学习工作负载也是如此。这里的一个例子包括**数据科学环境**（如第[*2章*](B17249_02_Final_JM_ePub.xhtml#_idTextAnchor039)*，数据科学环境*）中所述，每个团队可能对构建机器学习模型的环境有不同的要求。在这种情况下，通常会有多个数据科学环境支持多个团队，同时也支持团队之间和团队内部的需求。
- en: Examining multi-account considerations with Amazon SageMaker
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检查使用 Amazon SageMaker 的多账户考虑因素
- en: In this section, we'll cover multi-account considerations with Amazon SageMaker.
    We'll first look at a general reference architecture, then discuss some of the
    considerations for specific SageMaker features across the ML Lifecycle.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将讨论使用 Amazon SageMaker 的多账户考虑因素。我们首先将查看一个通用参考架构，然后讨论在机器学习生命周期中针对特定 SageMaker
    功能的一些考虑因素。
- en: '*Figure 14.2* shows an example of a multi-account structure mapping key SageMaker
    features and other common AWS services to the accounts they are typically used
    in. This is not a one-size-fits-all view, as there may be other AWS services or
    third-party tools that are performing one or more of the functions performed by
    the AWS services shown. As an example, your model registry may be the **SageMaker
    model registry**, or it could alternatively be **Amazon DynamoDB** or a tool such
    as **MLflow**:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 14.2* 展示了一个多账户结构示例，将关键 SageMaker 特性和其他常见 AWS 服务映射到它们通常使用的账户中。这不是一个一刀切的观点，因为可能还有其他
    AWS 服务或第三方工具正在执行 AWS 服务所执行的一个或多个功能。例如，您的模型注册库可能是**SageMaker 模型注册库**，或者它可能是**Amazon
    DynamoDB**或**MLflow**等工具：'
- en: '![Figure 14.2 – Example of service use across AWS accounts'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 14.2 – AWS 账户间服务使用示例'
- en: '](img/B17249_14_02.jpg)'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17249_14_02.jpg)'
- en: Figure 14.2 – Example of service use across AWS accounts
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 图 14.2 – AWS 账户间服务使用示例
- en: 'The placement of the AWS, or equivalent, supporting the ML Lifecycle map to
    the phase, model build, or model deploy. This is in combination with the benefits
    addressed earlier in being able to implement security controls by accounts, as
    well as to support the requirements of the different roles and personas that operate
    within each account. The naming and structure of accounts may vary across multi-account
    implementations. Therefore, in the following list, we describe the purpose of
    each account, knowing these may vary across implementations:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: AWS 或等效的支持 ML 生命周期映射到阶段、模型构建或模型部署。这是与之前提到的通过账户实施安全控制的益处相结合的，以及支持每个账户内操作的不同角色和人物的需求。账户的命名和结构可能在多账户实现中有所不同。因此，在以下列表中，我们描述了每个账户的目的，了解这些可能在不同实现中有所不同：
- en: A Shared Services account, or DevOps account, is often used to centralize the
    tooling that is used to manage workloads across multiple accounts and environments.
    In this case, you see a few common services, such as the **Amazon Elastic Container
    Registry** for managing SageMaker compatible images for training and inference.
    You also often find developer tools that enable **continuous integration** (**CI)**/
    **continuous delivery or deployment** (**CD)** practices.
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 共享服务账户或 DevOps 账户通常用于集中管理跨多个账户和环境的工具。在这种情况下，您可以看到一些常见服务，例如用于管理 SageMaker 兼容图像进行训练和推理的**Amazon
    Elastic Container Registry**。您还经常找到使**持续集成**（**CI**）/ **持续交付或部署**（**CD**）实践成为可能的开发者工具。
- en: There are the tools that are needed to automate and orchestrate the steps of
    the machine learning workflow across accounts. These can include native **AWS
    Developer Tools** or third-party tooling such as **GitHub** or **Jenkins**. The
    tools and services used in this account require cross-account **identity and access
    management** (**IAM**) permission policies. Finally, you need to create centralized
    dashboards for monitoring the health of your machine learning workloads. These
    shared dashboards are often placed in the Shared Services account, an **infrastructure
    account**, or one of the environment- or workload-specific accounts, such as production.
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有自动化和编排跨账户机器学习工作流程步骤所需的工具。这些工具可能包括原生**AWS 开发者工具**或第三方工具，如**GitHub**或**Jenkins**。在此账户中使用的工具和服务需要跨账户**身份和访问管理**（**IAM**）权限策略。最后，您需要创建用于监控机器学习工作负载健康状况的集中式仪表板。这些共享仪表板通常放置在共享服务账户、**基础设施账户**或特定于环境或工作负载的账户中，例如生产环境。
- en: The **data platform**, or **data lake account**, contains a data lake using
    a native service, such as **AWS Lake Formation** or a custom data lake. This account
    is also a common option for placing the centralized feature store that is used
    to store features for use across teams.
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据平台**，或**数据湖账户**，包含使用原生服务构建的数据湖，例如**AWS Lake Formation**或自定义数据湖。此账户也是放置用于跨团队存储特征的集中式特征存储的常见选项。'
- en: The data science account is primarily used for model building activities so
    this includes all of the activities required to perform data understanding, feature
    engineering, model training across experiments, and model evaluation. This account
    requires access to SageMaker features needed for those model-building activities
    including features such as **Amazon SageMaker Studio**, **SageMaker training jobs**,
    **SageMaker Pocessing jobs**, and **SageMaker Data Wrangler**.
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据科学账户主要用于模型构建活动，因此这包括执行数据理解、特征工程、跨实验的模型训练和模型评估所需的所有活动。此账户需要访问执行这些模型构建活动所需的SageMaker功能，包括**Amazon
    SageMaker Studio**、**SageMaker训练作业**、**SageMaker Processing作业**和**SageMaker Data
    Wrangler**等功能。
- en: In addition to the common features needed for model building, there are additional
    AWS services that get provisioned in this account when you are using **SageMaker
    projects**. By default, SageMaker projects automatically provision and configure
    AWS Developer Tools and the AWS Service Catalog products for built-in MLOps project
    templates in the account you are using for your model-building activities.
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 除了模型构建所需的常见功能外，当您使用**SageMaker项目**时，此账户还会配置额外的AWS服务。默认情况下，SageMaker项目会自动配置AWS开发者工具和AWS服务目录产品，用于在您用于模型构建活动的账户中内置MLOps项目模板。
- en: Workload or environment-specific accounts, such as test and production, are
    used to host live models. These accounts also commonly host the broader solution
    where your model is used. From a SageMaker perspective, the features used in these
    accounts typically focus on model deploy and operate activities.
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 工作负载或环境特定的账户，如测试和生产，用于托管实时模型。这些账户也通常托管使用模型更广泛解决方案。从SageMaker的角度来看，这些账户中使用的功能通常专注于模型部署和操作活动。
- en: Finally, you may also have an **AWS Service Catalog master** or infrastructure
    account that contains the portfolios of products that can be shared across multiple
    teams. This is known as the hub account. This can be used to create and manage
    a central catalog of products for data science environments or for custom MLOps
    project templates with SageMaker projects.
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后，您可能还有一个**AWS服务目录主账户**或基础设施账户，其中包含可以跨多个团队共享的产品组合。这被称为中心账户。它可以用来为数据科学环境或带有SageMaker项目的自定义MLOps项目模板创建和管理产品中央目录。
- en: Some AWS features are very specific to the persona and phase in the ML Lifecycle
    where they are needed. As an example, SageMaker training jobs are typically needed
    by data scientists for model-building activities or are needed as part of an automated
    model retraining workflow. However, there are several AWS services that span phases
    of the ML Lifecycle that require some unique considerations. These will be explored
    further in the next section.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 一些AWS功能非常特定于所需它们的人和组织以及机器学习生命周期中的阶段。例如，SageMaker训练作业通常由数据科学家在模型构建活动中使用，或作为自动化模型重新训练工作流的一部分所需。然而，有一些AWS服务跨越机器学习生命周期的多个阶段，需要一些独特的考虑。这些将在下一节中进一步探讨。
- en: Considerations for SageMaker features
  id: totrans-45
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: SageMaker功能的考虑因素
- en: There are several SageMaker features that require additional considerations
    when attempting to implement them in a multi-account strategy, specifically because
    these features are used across the ML Lifecycle. Considerations for features,
    such as SageMaker Processing, SageMaker training jobs, and SageMaker hosting,
    are generally specific to a phase in the lifecycle. Therefore, their placement
    across accounts is covered in *Figure 14.3*. In this section, we'll cover a few
    of the SageMaker features that span the ML Lifecycle and require additional consideration
    as part of your multi-account strategy.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在尝试在多账户策略中实施SageMaker的一些功能时，需要考虑几个额外的因素，特别是因为这些功能被用于整个机器学习生命周期中。例如，SageMaker
    Processing、SageMaker训练作业和SageMaker托管等功能的考虑因素通常与生命周期中的特定阶段相关。因此，它们在账户间的位置在*图14.3*中进行了说明。在本节中，我们将介绍一些跨越机器学习生命周期并需要作为您的多账户策略一部分额外考虑的SageMaker功能。
- en: Amazon SageMaker Pipelines
  id: totrans-47
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Amazon SageMaker Pipelines
- en: SageMaker Pipelines allows you to code your machine learning pipelines using
    the Amazon SageMaker Python SDK. Pipelines includes SageMaker native steps focused
    on data preparation (via SageMaker Processing), model training (via SageMaker
    training jobs), and model deployment (via SageMaker batch transform). `CallbackStep`
    to integrate with other AWS services or third-party tasks. Finally, Pipelines
    has built-in steps for pipeline functionality, such as a conditional step. All
    of the current capabilities within SageMaker Pipelines focus on model building
    and model deployment for batch inference. As a result, we'll look at two common
    patterns that have cross-account considerations when using SageMaker Pipelines.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: SageMaker Pipelines 允许您使用 Amazon SageMaker Python SDK 编写机器学习管道。管道包括专注于数据准备（通过
    SageMaker Processing）、模型训练（通过 SageMaker 训练作业）和模型部署（通过 SageMaker 批量转换）的 SageMaker
    原生步骤。`CallbackStep` 用于与其他 AWS 服务或第三方任务集成。最后，Pipelines 包含用于管道功能的内置步骤，例如条件步骤。SageMaker
    Pipelines 中的所有当前功能都专注于批量推理的模型构建和模型部署。因此，我们将探讨两种在使用 SageMaker Pipelines 时需要考虑跨账户的常见模式。
- en: In the first pattern, we'll discuss an end-to-end pipeline scenario where you
    are deploying a model for real-time inference using SageMaker hosting. In this
    case, you can use SageMaker Pipelines in your data science account to create a
    pipeline that can be used to automate the model-building activities. These activities
    include data preparation, model training, model evaluation, and a conditional
    step for model registration. Once a model passes evaluation and is registered,
    it can be used as a trigger for downstream deployment to your accounts (such as
    testing or production) that will host and integrate deployed endpoints. This same
    pipeline can be used for your retraining workflows.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 在第一种模式中，我们将讨论一个端到端管道场景，其中您使用 SageMaker 托管部署模型进行实时推理。在这种情况下，您可以在您的数据科学账户中使用 SageMaker
    Pipelines 创建一个管道，用于自动化模型构建活动。这些活动包括数据准备、模型训练、模型评估以及用于模型注册的条件步骤。一旦模型通过评估并注册，它就可以用作触发下游部署到您的账户（如测试或生产）的触发器，这些账户将托管和集成已部署的端点。此相同的管道可用于您的重新训练工作流程。
- en: In this case, model deployment to higher environments can be done using a cross-account
    resource policy, as shown in *Figure 14.3*. The cross-account resource policy
    is created for the **model group** in the **SageMaker model registry**. That model
    group contains the model versions, the Amazon ECR repository for the inference
    image, and the S3 location of the model artifacts. A cross-account resource policy
    can be created with all three of these resources that then allows you to deploy
    a model that was created in your data science environment into your application
    or workload environments (such as testing or production).
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，可以使用跨账户资源策略将模型部署到更高环境，如图 14.3 所示。跨账户资源策略是为 SageMaker 模型注册中的**模型组**创建的。该模型组包含模型版本、推理图像的
    Amazon ECR 存储库以及模型实体的 S3 位置。可以创建包含这三个资源的跨账户资源策略，然后允许您将数据科学环境中创建的模型部署到您的应用程序或工作负载环境中（如测试或生产）。
- en: 'Refer to the following figure:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 参考以下图：
- en: '![Figure 14.3 – Cross-account resource policy to deploy a model trained in
    a data science account'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 14.3 – 将在数据科学账户中训练的模型部署到跨账户资源策略'
- en: '](img/B17249_14_03.jpg)'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17249_14_03.jpg)'
- en: Figure 14.3 – Cross-account resource policy to deploy a model trained in a data
    science account
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 图 14.3 – 将在数据科学账户中训练的模型部署到跨账户资源策略
- en: 'In the second pattern, we''ll discuss an end-to-end pipeline scenario where
    you are deploying a model for batch inference using SageMaker hosting. In this
    case, you can use SageMaker Pipelines in your data science account to create a
    pipeline that can be used to automate the model-building activities. These include
    data preparation, model training, model evaluation, a conditional step for model
    registration, and a batch transform step. In this case, there are two options
    depending on your use case and requirements:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在第二种模式中，我们将讨论一个端到端管道场景，其中您使用 SageMaker 托管部署模型进行批量推理。在这种情况下，您可以在您的数据科学账户中使用 SageMaker
    Pipelines 创建一个管道，用于自动化模型构建活动。这些活动包括数据准备、模型训练、模型评估、用于模型注册的条件步骤以及批量转换步骤。在这种情况下，根据您的用例和需求，有两种选择：
- en: '**Run your end-to-end pipeline in your data science account**: This option
    is valid if you are using batch transform to validate your models or you''re running
    batch jobs that don''t have production-level availability requirements.'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**在数据科学账户中运行你的端到端管道**：如果你使用批量转换来验证你的模型，或者运行没有生产级可用性要求的批量作业，这个选项是有效的。'
- en: '**Run your end-to-end pipeline in workload accounts**: This option is valid
    if you are using batch transform to deploy models that have production-level availability
    requirements and/or require integration with systems in higher-level environments.'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**在工作负载账户中运行你的端到端管道**：如果你使用批量转换来部署具有生产级可用性要求或需要与高级环境中系统集成的模型，这个选项是有效的。'
- en: Amazon SageMaker projects
  id: totrans-58
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Amazon SageMaker项目
- en: 'Amazon SageMaker projects build on SageMaker Pipelines by incorporating CI/CD
    practices (such as source and version control) combined with automated deployment
    pipelines into one or more target environments. When considering integrating SageMaker
    projects with multiple AWS accounts, the following are key points to understand:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon SageMaker项目通过结合CI/CD实践（如源和版本控制）以及将自动化部署管道集成到一个或多个目标环境中，在SageMaker管道的基础上构建。当考虑将SageMaker项目与多个AWS账户集成时，以下是一些关键点需要理解：
- en: When you enable project templates for your Studio domain or domain users, the
    account where projects are enabled is the one that will be used for the built-in
    MLOps project templates offered through AWS Service Catalog. If you build custom
    MLOps project templates, you can still use the hub-and-spoke model to manage your
    portfolio and products in a Service Catalog master account.
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当你为你的Studio域或域用户启用项目模板时，项目启用的账户将是用于通过AWS服务目录提供的内置MLOps项目模板的账户。如果你构建自定义的MLOps项目模板，你仍然可以使用中心辐射模型来管理你的组合和产品在服务目录主账户中。
- en: 'All built-in MLOps project templates will provision and configure the following
    resources in the same account where projects are enabled: **AWS CodePipeline**,
    **AWS CodeBuild**, **AWS CodeCommit**, and **Amazon EventBridge**. This is important
    as some organizations assume or require these services to be centrally configured
    and managed through a shared services account (or equivalent).'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所有内置的MLOps项目模板都将配置以下资源在同一账户中，其中项目被启用：**AWS CodePipeline**、**AWS CodeBuild**、**AWS
    CodeCommit**和**Amazon EventBridge**。这很重要，因为一些组织假设或要求这些服务通过共享服务账户（或等效的）集中配置和管理。
- en: The built-in MLOps project templates will deploy your SageMaker endpoints to
    the same account where projects are enabled. This behavior can be modified. However,
    the model registry still exists in the data science account.
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 内置的MLOps项目模板将部署你的SageMaker端点到项目启用的同一账户。此行为可以被修改。然而，模型注册仍然存在于数据科学账户中。
- en: Amazon SageMaker Feature Store
  id: totrans-63
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Amazon SageMaker特征存储
- en: '**Amazon SageMaker Feature Store** allows creating and sharing features, both
    for model-building activities and model inference. Because a feature store can
    be used for both model-building activities as well as a dependency for model inference,
    it''s important to ensure features remain consistent across teams and are consistently
    available when needed.'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '**Amazon SageMaker特征存储**允许创建和共享特征，无论是用于模型构建活动还是模型推理。由于特征存储可以用于模型构建活动，也可以作为模型推理的依赖项，因此确保特征在团队之间保持一致，并在需要时始终可用是很重要的。'
- en: When you create a feature store, it gets instantiated in the account that you
    created it in. However, that may not be the optimal choice when centralizing features
    for sharing across teams, or when using the feature store for real-time inference.
    If you create the feature store in your data science account, that account may
    have fewer controls and more access permissions in place for a broader set of
    roles. This creates risk when supporting production applications.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 当你创建一个特征存储时，它将在你创建它的账户中实例化。然而，当需要集中特征以在团队之间共享，或使用特征存储进行实时推理时，这可能不是最佳选择。如果你在你的数据科学账户中创建特征存储，那么该账户可能为更广泛的角色集提供了更少的控制和更多的访问权限。这为支持生产应用程序带来了风险。
- en: There are two common cross-account patterns related to Feature Store that facilitate
    feature sharing and consistency across teams, as well as allowing the flexibility
    for team- or organization-specific feature stores when needed.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 与特征存储相关的两种常见跨账户模式有助于在团队之间促进特征共享和一致性，同时允许在需要时为团队或组织特定的特征存储提供灵活性。
- en: 'In the first pattern, shown in *Figure 14.4*, a central feature store is created
    in a separate AWS account that is accessible via an IAM cross-account role for
    both the population and consumption of features. For the population of features,
    this is typically done through a feature pipeline that is automated and collecting
    data at regular frequencies. However, it can also be done from the data science
    environment for more static features. Features can then be consumed for both inference
    as well as for model-building activities. Model-building activities often consume
    features from the offline feature store using cross-account permissions:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在第一种模式中，如*图14.4*所示，在单独的AWS账户中创建了一个中央特征存储，可以通过IAM跨账户角色进行特征的人口和消费。对于特征的人口，这通常是通过一个自动化的特征管道以固定频率收集数据来完成的。然而，也可以从数据科学环境为更静态的特征进行操作。特征可以用于推理以及模型构建活动。模型构建活动通常使用跨账户权限从离线特征存储中消耗特征：
- en: '![Figure 14.4 – Central Feature Store pattern'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '![图14.4 – 中央特征存储模式'
- en: '](img/B17249_14_04.jpg)'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17249_14_04.jpg)'
- en: Figure 14.4 – Central Feature Store pattern
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 图14.4 – 中央特征存储模式
- en: In the second pattern, similar to *Figure 14.4*, there is a central feature
    store that is used for sharing features that may be common or useful across teams,
    but there is also the flexibility for individual teams to create their own feature
    stores in separate AWS accounts. This pattern is useful to facilitate the ability
    to share common features in a central store, while also allowing workload- or
    application-specific features to be secured in an account that only requires access
    by the specific teams or applications that need those features.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 在第二种模式中，类似于*图14.4*，有一个中央特征存储用于共享可能对跨团队普遍或有用的特征，同时也有灵活性，允许各个团队在各自的AWS账户中创建自己的特征存储。这种模式有助于促进在中央存储中共享常见特征的能力，同时允许特定团队或应用程序的工作负载或特定应用的特征在仅需要访问这些特征的特定团队或应用程序的账户中得到保护。
- en: Amazon SageMaker Data Wrangler
  id: totrans-72
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Amazon SageMaker Data Wrangler
- en: Amazon SageMaker Data Wrangler allows data scientists to explore and prepare
    data for machine learning during the model build phases of the ML Lifecycle. Because
    Data Wrangler is purpose-built for feature engineering and data preparation, the
    most common persona that will work with Data Wrangler are **ML builders**. Most
    model-building activities are going to happen inside one or more data science
    accounts; however, you typically need a way to securely access data from a data
    platform or data lake account for those model-building activities.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon SageMaker Data Wrangler 允许数据科学家在机器学习生命周期中的模型构建阶段探索和准备数据。由于数据整理器是专门为特征工程和数据准备而构建的，因此最常与数据整理器一起工作的角色是**ML构建者**。大多数模型构建活动将在一个或多个数据科学账户内进行；然而，通常需要一种方式来安全地从数据平台或数据湖账户访问数据，以进行这些模型构建活动。
- en: '*Figure 14.5* illustrates a common pattern for enabling cross-account access
    from a data science account, where Data Wrangler is being used, to a data platform/data
    lake account, where the data typically resides. In this case, we are using AWS
    Lake Formation for our secure data lake. The same concepts apply when utilizing
    other technologies for your data lake; however, the implementation may differ:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '*图14.5* 展示了从使用数据科学账户（其中使用数据整理器）到数据平台/数据湖账户（数据通常存储在此处）启用跨账户访问的常见模式。在这种情况下，我们使用AWS
    Lake Formation来构建我们的安全数据湖。当使用其他技术构建数据湖时，这些概念同样适用；然而，实现方式可能不同：'
- en: '![Figure 14.5 – Cross-account access for SageMaker Data Wrangler'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '![图14.5 – SageMaker Data Wrangler的跨账户访问'
- en: '](img/B17249_14_05.jpg)'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17249_14_05.jpg)'
- en: Figure 14.5 – Cross-account access for SageMaker Data Wrangler
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 图14.5 – SageMaker Data Wrangler的跨账户访问
- en: With Data Wrangler, you're able to enable cross-account permissions using AWS
    IAM. To do this, you need to set up cross-account permissions for Data Wrangler
    in the data science account that allows access to the data tables stored in your
    data platform/data lake account. This is accomplished through Lake Formation permissions.
    This setup allows you to still provide access to datasets for your data scientists,
    but also allows you to take advantage of the security controls that Lake Formation
    offers.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 使用数据整理器，您可以使用AWS IAM启用跨账户权限。为此，您需要在数据科学账户中为数据整理器设置跨账户权限，以便访问存储在您的数据平台/数据湖账户中的数据表。这是通过Lake
    Formation权限实现的。这种设置允许您仍然为数据科学家提供数据集的访问权限，同时还可以利用Lake Formation提供的安全控制功能。
- en: For example, you can choose to share only specific tables or even to share only
    specific columns of tables stored in your data lake. Tables are shared using AWS
    Resource Access Manager. This provides a way to share Lake Formation tables across
    AWS accounts. This allows users to access shared tables in secondary accounts.
    These shared tables are accessible directly in Lake Formation, but they are also
    available as a data source, via Amazon Athena, in your Data Wrangler UI.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，您可以选择仅共享特定的表，甚至仅共享存储在您的数据湖中的特定表的列。表是通过AWS Resource Access Manager共享的。这为在AWS账户间共享Lake
    Formation表提供了一种方式。这使用户能够访问次要账户中的共享表。这些共享表可以直接在Lake Formation中访问，但它们也作为数据源，通过Amazon
    Athena，在您的Data Wrangler UI中可用。
- en: Summary
  id: totrans-80
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we discussed the benefits of using multiple accounts to manage
    and operate machine learning workloads that use Amazon SageMaker across the ML
    Lifecycle. We also looked at common patterns for account isolation across the
    ML Lifecycle. Finally, we focused specifically on the SageMaker features that
    are most often used across accounts, and the considerations you should be aware
    of when architecting and building end-to-end machine learning solutions.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们讨论了使用多个账户来管理和操作使用Amazon SageMaker的机器学习工作负载在ML生命周期中的好处。我们还探讨了ML生命周期中账户隔离的常见模式。最后，我们专门关注了在账户间最常使用的SageMaker功能，以及您在设计和构建端到端机器学习解决方案时应注意的考虑因素。
- en: This chapter wraps up the book where we covered best practices for SageMaker
    across features spanning the machine learning lifecycle of data preparation, model
    training, and operations. In this book, we discussed best practices, as well as
    considerations, that you can draw on when creating your own projects. We used
    an example use case, using open weather data to demonstrate the concepts throughout
    the chapters of the book. This was done so you can get hands-on with the concepts
    and practices discussed. We hope you're able to apply these practices to your
    own projects while benefiting from the overall capabilities and features offered
    by Amazon SageMaker.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 本章总结了本书内容，其中涵盖了SageMaker在数据准备、模型训练和操作等机器学习生命周期特征方面的最佳实践。在本书中，我们讨论了您在创建自己的项目时可以借鉴的最佳实践和考虑因素。我们使用了一个示例用例，即使用开放天气数据，在本书的各章节中展示这些概念。这样做的目的是让您能够亲身体验所讨论的概念和实践。我们希望您能够将这些实践应用到自己的项目中，同时从Amazon
    SageMaker提供的整体功能和能力中受益。
- en: References
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考资料
- en: 'Please see the following references for general AWS best practices on governance
    and multi-account strategies, as well as information specific to SageMaker features:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 请参阅以下参考资料，了解AWS在治理和多账户策略方面的最佳实践，以及与SageMaker功能相关的具体信息：
- en: 'Establishing best practices in your AWS environment : [https://aws.amazon.com/organizations/getting-started/best-practices/](https://aws.amazon.com/organizations/getting-started/best-practices/)'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在您的AWS环境中建立最佳实践：[https://aws.amazon.com/organizations/getting-started/best-practices/](https://aws.amazon.com/organizations/getting-started/best-practices/)
- en: 'AWS Control Tower – AWS services to establish and manage multiple AWS accounts:
    [https://aws.amazon.com/controltower/](https://aws.amazon.com/controltower/)'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AWS Control Tower – AWS服务用于建立和管理多个AWS账户：[https://aws.amazon.com/controltower/](https://aws.amazon.com/controltower/)
- en: 'SageMaker – Deploying a model to a different AWS account: [https://aws.amazon.com/premiumsupport/knowledge-center/sagemaker-cross-account-model/](https://aws.amazon.com/premiumsupport/knowledge-center/sagemaker-cross-account-model/)'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SageMaker – 将模型部署到不同的AWS账户：[https://aws.amazon.com/premiumsupport/knowledge-center/sagemaker-cross-account-model/](https://aws.amazon.com/premiumsupport/knowledge-center/sagemaker-cross-account-model/)
- en: 'SageMaker Data Wrangler – Enable cross-account access: [https://aws.amazon.com/blogs/machine-learning/enable-cross-account-access-for-amazon-sagemaker-data-wrangler-using-aws-lake-formation/](https://aws.amazon.com/blogs/machine-learning/enable-cross-account-access-for-amazon-sagemaker-data-wrangler-using-aws-lake-formation/)'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SageMaker Data Wrangler – 启用跨账户访问：[https://aws.amazon.com/blogs/machine-learning/enable-cross-account-access-for-amazon-sagemaker-data-wrangler-using-aws-lake-formation/](https://aws.amazon.com/blogs/machine-learning/enable-cross-account-access-for-amazon-sagemaker-data-wrangler-using-aws-lake-formation/)
- en: 'SageMaker Pipelines – Multi-account deployments: [https://aws.amazon.com/blogs/machine-learning/multi-account-model-deployment-with-amazon-sagemaker-pipelines/](https://aws.amazon.com/blogs/machine-learning/multi-account-model-deployment-with-amazon-sagemaker-pipelines/)'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SageMaker Pipelines – 多账户部署：[https://aws.amazon.com/blogs/machine-learning/multi-account-model-deployment-with-amazon-sagemaker-pipelines/](https://aws.amazon.com/blogs/machine-learning/multi-account-model-deployment-with-amazon-sagemaker-pipelines/)
- en: 'SageMaker Feature Store: [https://aws.amazon.com/blogs/machine-learning/enable-feature-reuse-across-accounts-and-teams-using-amazon-sagemaker-feature-store/](https://aws.amazon.com/blogs/machine-learning/enable-feature-reuse-across-accounts-and-teams-using-amazon-sagemaker-feature-store/)'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SageMaker特征存储：[https://aws.amazon.com/blogs/machine-learning/enable-feature-reuse-across-accounts-and-teams-using-amazon-sagemaker-feature-store/](https://aws.amazon.com/blogs/machine-learning/enable-feature-reuse-across-accounts-and-teams-using-amazon-sagemaker-feature-store/)
