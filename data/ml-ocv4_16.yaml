- en: Conclusion
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: Congratulations! You have just made a big step toward becoming a machine learning
    practitioner. Not only are you familiar with a wide variety of fundamental machine
    learning algorithms, but you also know how to apply them to both supervised and
    unsupervised learning problems. Moreover, you were introduced to a new and exciting
    topic, OpenVINO Toolkit. In the previous chapter, we learned how to install OpenVINO
    and run an interactive face detection and image classification demo, among others.
    I am sure you have enjoyed learning about those topics.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！您已经迈出了成为机器学习实践者的重要一步。您不仅熟悉各种基础机器学习算法，而且知道如何将它们应用于监督学习和无监督学习问题。此外，您还接触到了一个新颖且令人兴奋的主题——OpenVINO工具包。在前一章中，我们学习了如何安装OpenVINO并运行交互式的人脸检测和图像分类演示等。我相信您已经享受了学习这些主题的过程。
- en: Before we part ways, I want to give you some final words of advice, point you
    toward some additional resources, and give you some suggestions on how you can
    further improve your machine learning and data science skills. In this chapter,
    we will learn how to approach a machine learning problem and build our own estimator.
    We will learn how to write our own OpenCV-based classifier in C++ and a scikit-learn-based
    classifier in Python.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们分别之前，我想给您一些建议，指引您一些额外的资源，并给出一些如何进一步提升您的机器学习和数据科学技能的建议。在本章中，我们将学习如何处理机器学习问题并构建自己的估计器。我们将学习如何使用C++编写基于OpenCV的分类器，以及使用Python编写基于scikit-learn的分类器。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Approaching a machine learning problem
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 处理机器学习问题
- en: Writing your own OpenCV-based classifier in C++
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在C++中编写自己的OpenCV分类器
- en: Writing your own scikit-learn-based classifier in Python
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Python中编写自己的scikit-learn分类器
- en: Where to go from here
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 接下来该做什么
- en: Technical requirements
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: You can refer to the code for this chapter from the following link: [https://github.com/PacktPublishing/Machine-Learning-for-OpenCV-Second-Edition/tree/master/Chapter13](https://github.com/PacktPublishing/Machine-Learning-for-OpenCV-Second-Edition/tree/master/Chapter13).
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从以下链接中获取本章的代码：[https://github.com/PacktPublishing/Machine-Learning-for-OpenCV-Second-Edition/tree/master/Chapter13](https://github.com/PacktPublishing/Machine-Learning-for-OpenCV-Second-Edition/tree/master/Chapter13)。
- en: 'Here is a summary of the software and hardware requirements:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是软件和硬件要求的总结：
- en: You will need OpenCV version 4.1.x (4.1.0 or 4.1.1 will both work just fine).
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您需要OpenCV版本4.1.x（4.1.0或4.1.1都完全可以）。
- en: You will need Python version 3.6 (any Python version 3.x will be fine).
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您需要Python 3.6版本（任何3.x版本的Python都适用）。
- en: You will need Anaconda Python 3 for installing Python and the required modules.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您需要Anaconda Python 3来安装Python和所需的模块。
- en: You can use any OS—macOS, Windows, and Linux-based OSes along with this book.
    We recommend you have at least 4 GB RAM in your system.
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您可以使用任何操作系统——macOS、Windows以及基于Linux的操作系统，配合这本书使用。我们建议您的系统至少拥有4 GB的RAM。
- en: You don't need to have a GPU to run the code provided along with this book.
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您不需要GPU来运行本书附带提供的代码。
- en: Approaching a machine learning problem
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 处理机器学习问题
- en: When you see a new machine learning problem in the wild, you might be tempted
    to jump ahead and throw your favorite algorithm at the problem—perhaps the one
    you understood best or had the most fun implementing. But knowing beforehand which
    algorithm will perform best on your specific problem is not often possible.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 当您在野外遇到一个新的机器学习问题时，您可能会迫不及待地跳进去，用您最喜欢的算法来解决问题——可能是您最理解或最享受实现的一个。但事先知道哪种算法会在您特定的问题上表现最佳通常是不可能的。
- en: Instead, you need to take a step back and look at the bigger picture. Before
    you get in too deep, you will want to define the actual problem you are trying
    to solve. For example, do you already have a specific goal in mind, or are you
    just looking to do some exploratory analysis and find something interesting in
    the data? Often, you will start with a general goal, such as detecting spam email
    messages, making movie recommendations, or automatically tagging your friends
    in pictures uploaded to a social media platform. However, as we have seen throughout
    this book, there are often several ways to solve a problem. For example, we recognized
    handwritten digits using logistic regression, k-means clustering, and deep learning.
    Defining the problem will help you to ask the right questions and make the right
    choices along the way.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 而不是，你需要退一步，从更大的角度去看待问题。在你深入之前，你将想要定义你试图解决的真正问题。例如，你已经有了一个具体的目标，还是只是想要进行一些探索性分析，在数据中找到一些有趣的东西？通常，你可能会从一个一般的目标开始，比如检测垃圾邮件、制作电影推荐，或者自动在社交媒体平台上上传的图片中标记你的朋友。然而，正如我们在整本书中看到的，解决一个问题的方法往往有很多种。例如，我们使用逻辑回归、k-means聚类和深度学习来识别手写数字。定义问题将帮助你提出正确的问题，并在过程中做出正确的选择。
- en: 'As a rule of thumb, you can use the following five-step procedure to approach
    machine learning problems in the wild:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一种经验法则，你可以使用以下五个步骤来处理现实世界中的机器学习问题：
- en: '**Categorize the problem**: This is a two-step process:'
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**对问题进行分类**：这是一个两步的过程：'
- en: '**Categorize by input**: Simply speaking, if you have labeled data, it''s a
    supervised learning problem. If you have unlabeled data and want to find structure,
    it''s an unsupervised learning problem. If you want to optimize an objective function
    by interacting with an environment, it''s a reinforcement learning problem.'
  id: totrans-21
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**按输入分类**：简单来说，如果你有标记过的数据，那么这是一个监督学习问题。如果你有未标记的数据，并希望找到结构，那么这是一个无监督学习问题。如果你想要通过与环境的交互来优化目标函数，那么这是一个强化学习问题。'
- en: '**Categorize by output**: If the output of your model is a number, it''s a
    regression problem. If the output of your model is a class (or category), it''s
    a classification problem. If the output of your model is a set of input groups,
    it''s a clustering problem.'
  id: totrans-22
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**按输出分类**：如果你的模型输出是一个数字，那么这是一个回归问题。如果你的模型输出是一个类别（或分类），那么这是一个分类问题。如果你的模型输出是一组输入组，那么这是一个聚类问题。'
- en: '**Find the available algorithms**: Now that you have categorized the problem,
    you can identify the algorithms that are applicable and practical to implement
    using the tools at our disposal. Microsoft has created a handy algorithm cheat
    sheet that shows which algorithms can be used for which category of problems.
    Although the cheat sheet is tailored toward **Microsoft Azure**, you might find
    it generally helpful.'
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**找到可用的算法**：现在你已经对问题进行了分类，你可以识别出可以使用我们拥有的工具实现的适用且实用的算法。微软创建了一个方便的算法速查表，显示了哪些算法可以用于哪些类别的问题。尽管速查表是为**微软Azure**量身定制的，但你可能会发现它通常很有帮助。'
- en: The machine learning algorithm cheat sheet PDF (by Microsoft Azure) can be downloaded
    from [http://aka.ms/MLCheatSheet](http://aka.ms/MLCheatSheet).
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 机器学习算法速查表PDF（由微软Azure提供）可以从[http://aka.ms/MLCheatSheet](http://aka.ms/MLCheatSheet)下载。
- en: '**Implement all of the applicable algorithms** (**prototyping**): For any given
    problem, there are usually a handful of candidate algorithms that could do the
    job. So, how do you know which one to pick? Often, the answer to this problem
    is not straightforward, so you have to resort to trial and error. Prototyping
    is best done in two steps:'
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**实现所有适用的算法**（**原型设计**）：对于任何给定的问题，通常有一小批候选算法可以完成这项工作。那么，你如何知道选择哪一个呢？通常，这个问题的答案并不直接，所以你必须求助于试错。原型设计最好分两步进行：'
- en: 'You should aim for a quick and dirty implementation of several algorithms with
    minimal feature engineering. At this stage, you should mainly be interested in
    seeing which algorithm behaves better at a coarse scale. This step is a bit like
    hiring: you''re looking for any reason to shorten your list of candidate algorithms.
    Once you have reduced the list to a few candidate algorithms, the real prototyping
    begins.'
  id: totrans-26
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你应该追求快速且粗略地实现几个算法，并尽量减少特征工程。在这个阶段，你应该主要关注看到哪个算法在粗略尺度上表现更好。这一步有点像招聘：你正在寻找任何理由来缩短候选算法的列表。一旦你将列表缩减到几个候选算法，真正的原型设计就开始了。
- en: 'Ideally, you would want to set up a machine learning pipeline that compares
    the performance of each algorithm on the dataset using a set of carefully selected
    evaluation criteria (see [Chapter 11](904bc419-cb0e-44cd-ae3f-8ce97e15baa2.xhtml),
    *Selecting the Right Model with Hyperparameter Tuning*). At this stage, you should
    only be dealing with a handful of algorithms, so you can turn your attention to
    where the real magic lies: feature engineering.'
  id: totrans-27
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 理想情况下，你想要设置一个机器学习管道，使用一组精心选择的评估标准来比较每个算法在数据集上的性能（参见[第11章](904bc419-cb0e-44cd-ae3f-8ce97e15baa2.xhtml)，*使用超参数调整选择正确的模型*）。在这个阶段，你应该只处理少数几个算法，因此你可以将注意力转向真正的魔法所在：特征工程。
- en: '**Feature engineering**: Perhaps even more important than choosing the right
    algorithm is choosing the right features to represent the data. You can read all
    about feature engineering in [Chapter 4](142fec63-a847-4cde-9de9-c34805d2bb84.xhtml),
    *Representing Data and Engineering Features*.'
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**特征工程**：选择正确的算法可能比选择正确的特征来表示数据更为重要。你可以在[第4章](142fec63-a847-4cde-9de9-c34805d2bb84.xhtml)，*表示数据和特征工程*中了解有关特征工程的所有内容。'
- en: '**Optimize hyperparameters**: Finally, you also want to optimize an algorithm''s
    hyperparameters. Examples might include the number of principal components of
    PCA, the parameter, *k*, in the k-nearest neighbor algorithm, or the number of
    layers and learning rate in a neural network. You can look at [Chapter 11](904bc419-cb0e-44cd-ae3f-8ce97e15baa2.xhtml),
    *Selecting the Right Model with Hyperparameter Tuning*, for inspiration.'
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**优化超参数**：最后，你还需要优化算法的超参数。例如，可能包括PCA的主成分数量、k最近邻算法中的参数`k`，或者神经网络中的层数和学习率。你可以参考[第11章](904bc419-cb0e-44cd-ae3f-8ce97e15baa2.xhtml)，*使用超参数调整选择正确的模型*，以获取灵感。'
- en: Building your own estimator
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建自己的估计器
- en: In this book, we visited a whole variety of machine learning tools and algorithms
    that OpenCV provides straight out of the box. And, if for some reason, OpenCV
    does not provide exactly what we are looking for, we can always fall back on scikit-learn.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在这本书中，我们探讨了OpenCV提供的各种机器学习工具和算法。如果出于某种原因，OpenCV没有提供我们想要的，我们总是可以退回到scikit-learn。
- en: However, when tackling more advanced problems, you might find yourself wanting
    to perform some very specific data processing that neither OpenCV nor scikit-learn
    provide, or you might want to make slight adjustments to an existing algorithm.
    In this case, you may want to create your own estimator.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，当处理更高级的问题时，你可能会发现自己想要执行一些非常具体的数据处理，而这些处理既不是OpenCV也不是scikit-learn提供的，或者你可能想要对现有算法进行轻微的调整。在这种情况下，你可能想要创建自己的估计器。
- en: Writing your own OpenCV-based classifier in C++
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用C++编写自己的OpenCV分类器
- en: 'Since OpenCV is one of those Python libraries that does not contain a single
    line of Python code under the hood (I''m kidding, but it''s close), you will have
    to implement your custom estimator in C++. This can be done in four steps:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 由于OpenCV是那些底层不包含任何Python代码的Python库之一（我在开玩笑，但确实如此），你将不得不在C++中实现自定义估计器。这可以通过以下四个步骤完成：
- en: 'Implement a C++ source file that contains the main source code. You need to
    include two header files, one that contains all the core functionality of OpenCV
    (`opencv.hpp`) and another that contains the machine learning module (`ml.hpp`):'
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 实现一个包含主要源代码的C++源文件。你需要包含两个头文件，一个包含所有OpenCV的核心功能(`opencv.hpp`)，另一个包含机器学习模块(`ml.hpp`)：
- en: '[PRE0]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Then, an estimator class can be created by inheriting from the `StatModel`
    class:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，可以通过从`StatModel`类继承来创建一个估计器类：
- en: '[PRE1]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Next, you define `constructor` and `destructor` of the class:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，你定义类的`构造函数`和`析构函数`：
- en: '[PRE2]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Then, you also have to define some methods. These are what you would fill in
    to make the classifier actually do some work:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，你还必须定义一些方法。这些是你需要填写以使分类器真正做一些工作的内容：
- en: '[PRE3]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The main work is done in the `train` method, which comes in two flavors (accepting
    either `cv::ml::TrainData` or `cv::InputArray` as input):'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 主要工作是在`train`方法中完成的，该方法有两种形式（接受`cv::ml::TrainData`或`cv::InputArray`作为输入）：
- en: '[PRE4]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'You also need to provide a `predict` method and a `scoring` function:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 你还需要提供一个`predict`方法和一个`scoring`函数：
- en: '[PRE5]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The last thing to do is to include a `main` function that instantiates the
    class:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一件要做的事情是包含一个`main`函数，该函数实例化类：
- en: '[PRE6]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Write a CMake file called `CMakeLists.txt`:'
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编写一个名为`CMakeLists.txt`的CMake文件：
- en: '[PRE7]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Compile the file on the command line by typing the following commands:'
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过在命令行中输入以下命令来编译文件：
- en: '[PRE8]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Run the executable `MyClass` method, which was generated by the last command
    and which should lead to the following output:'
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行由最后一个命令生成的可执行文件`MyClass`方法，它应该导致以下输出：
- en: '[PRE9]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Writing your own scikit-learn-based classifier in Python
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Python中编写基于scikit-learn的分类器
- en: Alternatively, you can write your own classifier using the scikit-learn library.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，你可以使用scikit-learn库编写自己的分类器。
- en: 'You can do this by importing `BaseEstimator` and `ClassifierMixin`. The latter
    will provide a corresponding `score` method, which works for all classifiers:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过导入`BaseEstimator`和`ClassifierMixin`来实现这一点。后者将提供一个相应的`score`方法，它适用于所有分类器：
- en: 'Optionally, first, you can overwrite the `score` method to provide your own metric
    `score` method:'
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 可选地，首先，你可以重写`score`方法以提供你自己的`score`指标方法：
- en: '[PRE10]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Then, you can define a class that inherits from both `BaseEstimator` and `ClassifierMixin`:'
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，你可以定义一个继承自`BaseEstimator`和`ClassifierMixin`的类：
- en: '[PRE11]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: You need to provide a constructor, `fit` and `predict` methods. The constructor
    defines all the parameters ...
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你需要提供一个构造函数、`fit`和`predict`方法。构造函数定义了所有参数...
- en: Where to go from here
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 接下来该怎么做
- en: The goal of this book was to introduce you to the world of machine learning
    and prepare you to become a machine learning practitioner. Now that you know everything
    about the fundamental algorithms, you might want to investigate some topics in
    more depth.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 本书的目标是让你了解机器学习的世界，并为你成为机器学习从业者做好准备。现在你已经了解了所有基本算法，你可能想要深入研究一些主题。
- en: Although it is not necessary to understand all of the details of all of the
    algorithms we implemented in this book, knowing some of the theory behind them
    might just make you a better data scientist.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然理解我们在本书中实现的所有算法的所有细节不是必要的，但了解它们背后的某些理论可能会让你成为一个更好的数据科学家。
- en: 'If you are looking for more advanced material, then you might want to consider
    some of the following classics:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你正在寻找更高级的材料，那么你可能想要考虑以下一些经典作品：
- en: 'Stephen Marsland, *Machine Learning: An Algorithmic Perspective,* *Second Edition*,
    Chapman and Hall/Crc, ISBN 978-146658328-3, 2014'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Stephen Marsland，*机器学习：算法视角*，*第二版*，Chapman and Hall/Crc，ISBN 978-146658328-3，2014
- en: Christopher M. Bishop, *Pattern Recognition and Machine Learning*. Springer,
    ISBN 978-038731073-2, 2007
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Christopher M. Bishop，*模式识别与机器学习*。Springer，ISBN 978-038731073-2，2007
- en: 'Trevor Hastie, Robert Tibshirani, and Jerome Friedman, *The Elements of Statistical
    Learning: Data Mining, Inference, and Prediction*. *Second Edition*, Springer,
    ISBN 978-038784857-0, 2016'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Trevor Hastie，Robert Tibshirani，和Jerome Friedman，*统计学习元素：数据挖掘、推理和预测*。*第二版*，Springer，ISBN
    978-038784857-0，2016
- en: When it comes to software libraries, we already learned about two essential
    ones—OpenCV and scikit-learn. Often, using Python is great for trying out and
    evaluating models, but larger web services and applications are more commonly
    written in Java or C++.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 当谈到软件库时，我们已经学习了两个基本库——OpenCV和scikit-learn。通常，使用Python非常适合尝试和评估模型，但更大的网络服务和应用程序更常见地使用Java或C++编写。
- en: For example, the C++ package is **Vowpal Wabbit** (VW), which comes with its
    own command-line interface. For running machine learning algorithms on a cluster,
    people often use `mllib`, a **Scala** library built on top of **Spark**. If you
    are not married to Python, you might also consider using R, another common language
    of data scientists. R is a language designed specifically for statistical analysis
    and is famous for its visualization capabilities and the availability of many
    (often highly specialized) statistical modeling packages.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，C++包是**Vowpal Wabbit**（VW），它自带命令行界面。对于在集群上运行机器学习算法，人们通常使用基于**Spark**的**Scala**库`mllib`。如果你不坚持使用Python，你也可以考虑使用R，这是数据科学家常用的另一种语言。R是一种专门为统计分析设计的语言，以其可视化能力和许多（通常是高度专业化的）统计建模包而闻名。
- en: 'No matter which software you choose going forward, I guess the most important
    advice is to keep practicing your skills. But you already knew that. There are
    a number of excellent datasets out there that are just waiting for you to analyze
    them:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 无论你接下来选择哪种软件，我认为最重要的建议是持续练习你的技能。但这一点你已经知道了。有许多优秀的数据集正等着你去分析：
- en: Throughout this book, we made great use of the example datasets that are built
    into scikit-learn. In addition, scikit-learn provides a way to load datasets from
    external services, such as [mldata.org](http://mldata.org/). Refer to [http://scikit-learn.org/stable/datasets/index.html](http://scikit-learn.org/stable/datasets/index.html)
    for more information.
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在整本书中，我们充分利用了scikit-learn内置的示例数据集。此外，scikit-learn提供了一种从外部服务加载数据集的方法，例如[mldata.org](http://mldata.org/)。有关更多信息，请参阅[http://scikit-learn.org/stable/datasets/index.html](http://scikit-learn.org/stable/datasets/index.html)。
- en: Kaggle is a company that hosts a wide range of datasets as well as competitions
    on their website, [http://www.kaggle.com](http://www.kaggle.com). Competitions
    are often hosted by a variety of companies, nonprofit organizations, and universities,
    and the winner can take home some serious monetary prizes. A disadvantage of competitions
    is that they already provide a particular metric to optimize and usually a fixed,
    preprocessed dataset.
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kaggle是一家在其网站上托管各种数据集和竞赛的公司，[http://www.kaggle.com](http://www.kaggle.com)。竞赛通常由各种公司、非营利组织和大学举办，获胜者可以赢得一些相当可观的现金奖励。竞赛的缺点是它们已经提供了一种特定的指标来优化，并且通常是一个固定、预处理的数据集。
- en: The OpenML platform ([http://www.openml.org](http://www.mldata.org)) hosts over
    20,000 datasets with over 50,000 associated machine learning tasks.
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OpenML平台([http://www.openml.org](http://www.mldata.org))托管了超过20,000个数据集，与超过50,000个相关的机器学习任务相关联。
- en: Another popular choice is the UC Irvine Machine Learning Repository ([http://archive.ics.uci.edu/ml/index.php](http://archive.ics.uci.edu/ml/index.php)),
    hosting over 370 popular and well-maintained datasets through a searchable interface.
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 另一个流行的选择是UC Irvine机器学习仓库([http://archive.ics.uci.edu/ml/index.php](http://archive.ics.uci.edu/ml/index.php))，通过可搜索的界面托管了370多个流行且维护良好的数据集。
- en: 'Finally, if you are looking for more example code in Python, a number of excellent
    books nowadays come with their own GitHub repository:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，如果你在寻找更多的Python示例代码，现在有许多优秀的书籍都附带了自己的GitHub仓库：
- en: 'Jake Vanderplas, *Python Data Science Handbook: Essential Tools for Working
    with Data*. O''Reilly, ISBN 978-149191205-8, 2016, [https://github.com/jakevdp/PythonDataScienceHandbook](https://github.com/jakevdp/PythonDataScienceHandbook)'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 杰克·范德普拉斯，*Python数据科学手册：与数据工作的必备工具*。O'Reilly，ISBN 978-149191205-8，2016，[https://github.com/jakevdp/PythonDataScienceHandbook](https://github.com/jakevdp/PythonDataScienceHandbook)
- en: 'Andreas Muller and Sarah Guido, *Introduction to Machine Learning with Python:
    A Guide for Data Scientists*. O''Reilly, ISBN 978-144936941-5, 2016, [https://github.com/amueller/introduction_to_ml_with_python](https://github.com/amueller/introduction_to_ml_with_python)'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安德烈亚斯·穆勒和莎拉·吉多，*使用Python进行机器学习入门：数据科学家指南*。O'Reilly，ISBN 978-144936941-5，2016，[https://github.com/amueller/introduction_to_ml_with_python](https://github.com/amueller/introduction_to_ml_with_python)
- en: Sebastian Raschka, *Python Machine Learning*. Packt, ISBN 978-178355513-0, 2015,
    [https://github.com/rasbt/python-machine-learning-book](https://github.com/rasbt/python-machine-learning-book)
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 塞巴斯蒂安·拉斯奇卡，*Python机器学习*。Packt，ISBN 978-178355513-0，2015，[https://github.com/rasbt/python-machine-learning-book](https://github.com/rasbt/python-machine-learning-book)
- en: Summary
  id: totrans-81
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we learned how to approach a machine learning problem and built
    our own estimator. We learned how to write our own OpenCV-based classifier in
    C++ and scikit-learn-based classifier in Python.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，我们学习了如何处理机器学习问题，并构建了自己的估计器。我们学习了如何用C++编写基于OpenCV的分类器，以及用Python编写基于scikit-learn的分类器。
- en: In this book, we covered a lot of theory and practice. We discussed a wide variety
    of fundamental machine learning algorithms, both supervised or unsupervised, and
    illustrated best practices as well as ways to avoid common pitfalls, and we touched
    upon a variety of commands and packages for data analysis, machine learning, and
    visualization.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 在这本书中，我们涵盖了大量的理论和实践。我们讨论了各种基本的机器学习算法，无论是监督学习还是无监督学习，还介绍了最佳实践以及避免常见陷阱的方法，并且触及了数据分析、机器学习和可视化的各种命令和包。
- en: If you made it this far, you have already made a big step toward machine learning
    mastery. From here on out, I am confident you will do just fine on your own.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你已经走到这一步，你已经朝着机器学习精通迈出了重要的一步。从现在开始，我坚信你将能够独立完成得很好。
- en: All that's left to say is farewell! ...
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 剩下的只有告别了！...
