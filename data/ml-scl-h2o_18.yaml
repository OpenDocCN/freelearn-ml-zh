- en: '*Chapter 13*: Introducing H2O AI Cloud'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第13章*：介绍H2O AI Cloud'
- en: In the previous sections of this book, we explored in great detail how to build
    accurate and trustworthy **machine learning** (**ML**) models on massive data
    volumes using H2O technology, and how to deploy these models for scoring on a
    diversity of enterprise systems. In doing so, we became familiar with the technologies
    of H2O Core (H2O-3 and H2O Sparkling Water) and its distributed in-memory architecture
    to perform model building steps in a horizontally scalable way, using familiar
    IDEs and languages. We got to know H2O Enterprise Steam as a tool for data scientists
    to easily provision H2O environments and for administrators to manage users. We
    learned the technical nature of the H2O MOJO, the ready-to-deploy scoring artifact
    generated and exported from built models, and we learned a great diversity of
    patterns for scoring MOJOs on diverse target systems, whether real-time, batch,
    or streaming. We also learned how enterprise stakeholders beyond data scientists
    view and interact with H2O at scale technology.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书的前几节中，我们详细探讨了如何使用H2O技术在大数据量上构建准确和可靠的**机器学习**（**ML**）模型，以及如何部署这些模型在多样化的企业系统中进行评分。在这个过程中，我们熟悉了H2O
    Core（H2O-3和H2O Sparkling Water）的技术及其分布式内存架构，以水平可扩展的方式执行模型构建步骤，使用熟悉的IDE和语言。我们了解了H2O
    Enterprise Steam作为数据科学家轻松配置H2O环境和管理员管理用户的工具。我们学习了H2O MOJO的技术性质，即从构建的模型生成和导出的即用型评分工件，以及我们学习了在多样化的目标系统上评分MOJO的多种模式，无论是实时、批量还是流式。我们还学习了企业利益相关者如何以规模技术的方式看待和交互H2O。
- en: In this chapter, we will expand our knowledge by learning that H2O offers a
    larger end-to-end ML platform called H2O AI Cloud that includes multiple specialized
    model building engines, an MLOps platform to deploy and monitor models, a feature
    store to share features for model building and scoring, and a technology layer
    often not considered in the context of ML platforms – a low-code SDK to easily
    build AI applications on top of rest of the platform and an App Store to host
    them.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将通过学习H2O提供的一个更大的端到端机器学习平台，即H2O AI Cloud来扩展我们的知识。该平台包括多个专业的模型构建引擎、一个MLOps平台用于部署和监控模型、一个特征存储库用于共享模型构建和评分的特征，以及通常在机器学习平台背景下不会考虑的技术层——一个低代码SDK，可以轻松地在平台的其他部分之上构建AI应用程序，以及一个应用商店来托管它们。
- en: Importantly, we will see that the technologies and skills we have learned up
    until now are actually a subset of the larger H2O AI Cloud.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 重要的是，我们将看到我们迄今为止所学的技术和技能实际上是更大范围的H2O AI Cloud的一个子集。
- en: 'In this chapter, we''re going to cover the following main topics:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主要主题：
- en: An H2O AI Cloud overview
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: H2O AI Cloud概述
- en: An H2O AI Cloud component breakdown
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: H2O AI Cloud组件分解
- en: H2O AI Cloud architecture
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: H2O AI Cloud架构
- en: Technical requirements
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: You can sign up for a 90-day trial to the H2O AI Cloud by visiting [https://h2o.ai/freetrial](https://h2o.ai/freetrial).
    This will allow you to use the components of the platform with your own data or
    with trial data supplied by H2O.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过访问[https://h2o.ai/freetrial](https://h2o.ai/freetrial)注册90天的H2O AI Cloud试用。这将允许您使用平台组件与您自己的数据或与H2O提供的试用数据进行交互。
- en: 'We will see that part of the H2O AI Cloud is the ability of data scientists
    to build AI applications using an open source low-code SDK called H2O Wave. You
    can start building your own H2O Wave AI applications on your local machine by
    visiting here: [https://wave.h2o.ai/docs/installation](https://wave.h2o.ai/docs/installation).'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将看到H2O AI Cloud的一部分是数据科学家使用一个名为H2O Wave的开源低代码SDK构建AI应用程序的能力。您可以通过访问以下链接在本地机器上开始构建自己的H2O
    Wave AI应用程序：[https://wave.h2o.ai/docs/installation](https://wave.h2o.ai/docs/installation)。
- en: An H2O AI Cloud overview
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: H2O AI Cloud概述
- en: The H2O AI Cloud is an end-to-end ML platform designed to enable teams to seamlessly
    work through building models, trusting models, and deploying, monitoring, and
    governing models. In addition, the H2O AI Cloud includes an AI application development
    and hosting layer to allow various personas to interact with all steps in an ML
    life cycle – from applications expressing sophisticated visualizations to user
    interactions and workflows. The application SDK allows data scientists and ML
    engineers (and traditional software developers) to quickly prototype, finalize,
    and publish AI applications in a purpose-built way. For example, applications
    can be built for business users to view dashboards of customer churn predictions
    with analytics on reason codes and then respond to high churn candidates. Data
    scientists, on the other hand, can use an AI application to interactively validate
    model predictions against subsequent ground truth and track analytics around that.
    Alternatively, data scientists and ML engineers can use an AI application to automate
    retraining pipelines by orchestrating data drift alerts with model retraining
    and redeployment while tracking analytics and auditing.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: H2O AI 云是一个端到端的机器学习平台，旨在使团队能够无缝地通过构建模型、信任模型以及部署、监控和管理模型进行工作。此外，H2O AI 云还包括一个
    AI 应用程序开发和托管层，允许各种角色与机器学习生命周期中的所有步骤进行交互——从表达复杂可视化的应用程序到用户交互和工作流程。应用程序软件开发工具包允许数据科学家和机器学习工程师（以及传统软件开发人员）以专门构建的方式快速原型设计、最终确定并发布
    AI 应用程序。例如，可以为商业用户构建应用程序，让他们查看客户流失预测仪表板，并基于原因代码进行数据分析，然后对高流失风险候选人做出响应。另一方面，数据科学家可以使用
    AI 应用程序交互式验证模型预测与后续地面真实情况，并跟踪相关分析。此外，数据科学家和机器学习工程师可以使用 AI 应用程序通过编排数据漂移警报与模型重新训练和重新部署，同时跟踪分析和审计来自动化重新训练流程。
- en: 'This simplified ML life cycle with an AI application layer is shown in the
    following diagram, and the H2O AI Cloud is organized around these layers:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 下图展示了带有 AI 应用程序层的简化机器学习生命周期，H2O AI 云围绕这些层进行组织：
- en: '![Figure 13.1 – A simplified ML life cycle with an AI app layer'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 13.1 – 带有 AI 应用程序层的简化机器学习生命周期'
- en: '](img/B16721_13_001.jpg)'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16721_13_001.jpg)'
- en: Figure 13.1 – A simplified ML life cycle with an AI app layer
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.1 – 带有 AI 应用程序层的简化机器学习生命周期
- en: 'H2O has built a modular, flexible, and fully capable end-to-end ML platform
    around this representation. The following diagram delineates the components of
    the H2O AI Cloud mapped to this life cycle:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: H2O 围绕这个表示构建了一个模块化、灵活且功能齐全的端到端机器学习平台。以下图解了映射到这个生命周期的 H2O AI 云组件：
- en: '![Figure 13.2 – An H2O hybrid cloud end-to-end ML platform (the H2O at scale
    components shown in gray)'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 13.2 – H2O 混合云端到端机器学习平台（灰色显示的 H2O 规模组件）'
- en: '](img/B16721_13_002.jpg)'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16721_13_002.jpg)'
- en: Figure 13.2 – An H2O hybrid cloud end-to-end ML platform (the H2O at scale components
    shown in gray)
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.2 – H2O 混合云端到端机器学习平台（灰色显示的 H2O 规模组件）
- en: 'Before diving into each component and its capabilities, let''s first get a
    high-level understanding:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在深入探讨每个组件及其功能之前，让我们首先获得一个高级别的理解：
- en: '**Model building**: There are four separate and specialized model building
    engines and a tool for data scientists to self-service provision their environments
    and for administrators to manage and govern users. Each model building engine
    generates a ready-to-deploy scoring artifact for models that are built.'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**模型构建**：有四个独立且专业的模型构建引擎，以及一个数据科学家自助提供环境和管理员管理和治理用户的工具。每个模型构建引擎为构建的模型生成一个可部署的评分工件。'
- en: '**Model deployment**: An MLOps component is used to deploy, monitor, manage,
    and govern models.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**模型部署**：使用 MLOps 组件来部署、监控、管理和治理模型。'
- en: '**Feature store**: A feature store is available to reuse features both across
    teams during model building and across models during scoring.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**特征存储**：特征存储可用于在模型构建期间跨团队以及在评分期间跨模型重用特征。'
- en: '**AI applications**: A low-code SDK is available to rapidly build, prototype,
    and then publish AI applications. The SDK includes widgets and templates to build
    sophisticated and interactive visualizations and workflows. Data scientists and
    ML engineers build the application in a familiar code-based way, focusing mostly
    on organizing and feeding data to templates and widgets while ignoring the complexities
    of web applications.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**AI 应用程序**：提供了一个低代码软件开发工具包，用于快速构建、原型设计和发布 AI 应用程序。该 SDK 包含小部件和模板，用于构建复杂和交互式可视化和工作流程。数据科学家和机器学习工程师以熟悉的基于代码的方式构建应用程序，主要关注组织和向模板和小部件提供数据，同时忽略网络应用程序的复杂性。'
- en: '**AI App Store**: AI applications are developed locally and then published
    to an AI App Store component for consumption by business, data science, and other
    enterprise stakeholders. Clinicians in healthcare, for example, may use an application
    to prevent patients from being discharged from the hospital prematurely, while
    business analysts use a different part of the application to understand how frequent
    this is predicted to happen and why.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**AI应用商店**：AI应用是在本地开发的，然后发布到AI应用商店组件，供商业、数据科学和其他企业利益相关者消费。例如，医疗保健中的临床医生可能使用一个应用程序来防止患者过早出院，而商业分析师则使用应用程序的另一个部分来了解这种情况预测发生的频率以及原因。'
- en: '**UI and API access to components**: Users can interact with H2O AI components
    interactively from both the UI and through APIs. Component APIs allow programmatic
    and automated approaches to interacting with the platform and stitching components
    together in unique ways.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**组件的UI和API访问**：用户可以通过UI和API与H2O AI组件进行交互。组件API允许以编程和自动化的方式与平台交互，并以独特的方式将组件拼接在一起。'
- en: 'In the next section, we will understand each H2O AI Cloud component more fully.
    Before doing so, however, let''s introduce ourselves to the components with a
    table overview to get our bearings:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将更全面地了解每个H2O AI云组件。在这样做之前，让我们通过一个表格概述来介绍这些组件，以便我们找到方向：
- en: '![Figure 13.3 – A table summarizing H2O AI Cloud components'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '![图13.3 – 总结H2O AI云组件的表格'
- en: '](img/B16721_13_003.jpg)'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16721_13_003.jpg)'
- en: Figure 13.3 – A table summarizing H2O AI Cloud components
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.3 – 总结H2O AI云组件的表格
- en: Finally, we need to relate H2O AI Cloud components to the focus of this book,
    which we will do in the following note.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们需要将H2O AI云组件与本书的重点联系起来，我们将在以下注释中这样做。
- en: How the Focus of This Book Relates to H2O AI Cloud
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 本书重点与H2O AI云的关系
- en: The focus of this book has been *ML at scale with H2O*, which alternatively
    has been called *H2O at scale*. We have focused on building ML models against
    massive datasets and deploying models to a diversity of enterprise scoring environments.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 本书重点是*使用H2O进行大规模机器学习*，这也可以被称为*大规模H2O*。我们专注于在大型数据集上构建机器学习模型并将模型部署到各种企业评分环境中。
- en: From a component standpoint, the focus has been on H2O Core (H2O-3 and H2O Sparkling
    Water), H2O Enterprise Steam, and the H2O MOJO. These components can be deployed
    either as (a) separate from H2O AI Cloud, or (b) as members of H2O AI Cloud, as
    shown in *Figure 13.2*. See [*Chapter 12*](B16721_12_Final_SK_ePub.xhtml#_idTextAnchor226),
    *The Enterprise Architect and Security Views*, for an elaboration of this point.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 从组件的角度来看，重点是H2O Core（H2O-3和H2O Sparkling Water）、H2O企业版和H2O MOJO。这些组件可以部署为（a）与H2O
    AI云分开，或（b）作为H2O AI云的成员，如图*图13.2*所示。参见[*第12章*](B16721_12_Final_SK_ePub.xhtml#_idTextAnchor226)，*企业架构和安全视图*，以了解这一点的详细阐述。
- en: Now that we understand the fundamentals of H2O AI Cloud, its components, and
    how they relate to the focus of this book, let's expand our view and ML capabilities
    by elaborating further on each component.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经了解了H2O AI云的基本原理、其组件以及它们与本书重点的关系，让我们通过进一步阐述每个组件来扩展我们的视野和机器学习能力。
- en: H2O AI Cloud component breakdown
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: H2O AI云组件分解
- en: Let's take a deeper dive into each of the components.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们深入了解每个组件。
- en: DistributedML (H2O-3 and H2O Sparkling Water)
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 分布式机器学习（H2O-3和H2O Sparkling Water）
- en: DistributedML has been the focus of model building for this book, where it is
    called H2O Core to represent either H2O-3 or Sparkling Water in that context.
    Fundamentally, you use H2O Core to build models on massive datasets.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 分布式机器学习（DistributedML）一直是本书模型构建的重点，在该上下文中被称为H2O Core，以代表H2O-3或Sparkling Water。从根本上讲，您使用H2O
    Core在大型数据集上构建模型。
- en: For the purposes of this chapter, the main features and capabilities are presented
    in the upcoming subsection For more details, see [*Chapter 2*](B16721_02_Final_SK_ePub.xhtml#_idTextAnchor024),
    *Platform Components and Key Concepts*, to review the distributed in-memory architecture
    that enables model building on a massive scale. See [*Chapter 4*](B16721_04_Final_SK_ePub.xhtml#_idTextAnchor064),
    *H2O Model Building at Scale – Capability Articulation*, to review its main capabilities
    in greater detail.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 为了本章的目的，主要特性和能力将在接下来的子节中介绍。更多详情，请参阅[*第2章*](B16721_02_Final_SK_ePub.xhtml#_idTextAnchor024)，*平台组件和关键概念*，以回顾支持大规模模型构建的分布式内存架构。参见[*第4章*](B16721_04_Final_SK_ePub.xhtml#_idTextAnchor064)，*大规模H2O模型构建
    – 能力阐述*，以更详细地了解其主要能力。
- en: Key features and capabilities
  id: totrans-42
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 关键特性和能力
- en: 'The key features and capabilities of H2O Core (H2O-3 and Sparkling Water) are
    as follows:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: H2O Core（H2O-3和Sparkling Water）的关键功能和能力如下：
- en: '**Model building on massive data volumes**: H2O Core has an architecture that
    partitions and distributes data into memory across multiple servers. Model building
    computation is done in parallel against this architecture, thus achieving scaling
    needs for massive datasets. The larger the dataset, the more horizontally scaled
    the architecture will be.'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**大规模数据量的模型构建**：H2O Core具有将数据分区和分布到多个服务器内存中的架构。模型构建计算是在此架构上并行进行的，从而满足大规模数据集的扩展需求。数据集越大，架构的水平扩展性就越高。'
- en: '**Familiar data science experience**: Data scientists build H2O models using
    familiar IDEs and languages (for example, Python in Jupyter notebooks) to express
    the H2O model building API. The API hides the complexities of the H2O scalable
    architecture from the user. To a data scientist, the experience fundamentally
    is that of writing code against data frames.'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**熟悉的数据科学体验**：数据科学家使用熟悉的环境和语言（例如，在Jupyter笔记本中的Python）构建H2O模型，以表达H2O模型构建API。API隐藏了H2O可扩展架构的复杂性，对数据科学家来说，这种体验本质上是对数据框编写代码。'
- en: '**Flexible data ingest**: H2O Core has connectors to access diverse data sources
    and data formats. Data is transferred directly from source to H2O Core-distributed
    memory.'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**灵活的数据摄取**：H2O Core具有连接器，可以访问不同的数据源和数据格式。数据直接从源传输到H2O Core分布式内存。'
- en: '**Scalable data manipulation**: Data is manipulated in the distributed architecture
    and thus is done at scale. The H2O API makes data manipulation steps concise.
    Sparkling Water specifically allows data manipulation using Spark APIs (for example,
    Spark SQL) and the conversion of Spark DataFrames to H2OFrames in the same coding
    workflow.'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可扩展的数据操作**：数据在分布式架构中进行操作，因此是按比例进行的。H2O API使数据操作步骤简洁。Sparkling Water特别允许使用Spark
    API（例如Spark SQL）进行数据操作，并在相同的编码工作流程中将Spark DataFrames转换为H2OFrames。'
- en: '**State-of-the-art algorithms**: H2O Core implements state-of-the-art ML algorithms
    for supervised and unsupervised problems, including, for example, XGBoost, a **Gradient
    Boosting Machine** (**GBM**), **Generalized Linear Model** (**GLM**), and **Cox
    Proportional-Hazards** (**CoxPH**), to name a few. These algorithms are run on
    the distributed architecture to scale to massive datasets.'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**最先进的算法**：H2O Core实现了针对监督和非监督问题的最先进机器学习算法，包括例如XGBoost，一种**梯度提升机**（**GBM**），**广义线性模型**（**GLM**），以及**Cox比例风险**（**CoxPH**）等，仅举几例。这些算法在分布式架构上运行，以扩展到大规模数据集。'
- en: '**AutoML**: H2O can build models using an AutoML framework that explores algorithm
    and hyperparameter space to build a leaderboard of best models. The AutoML framework
    is controllable through numerous settings.'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**AutoML**：H2O可以使用探索算法和超参数空间的AutoML框架来构建模型，从而构建最佳模型的排行榜。AutoML框架可以通过众多设置进行控制。'
- en: '**Explainability and auto-documentation**: H2O Core implements extensive explainability
    capabilities and can generate auto-documentation to thoroughly describe model
    building and explain the resulting models.'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可解释性和自动文档**：H2O Core实现了广泛的可解释性功能，并可以生成自动文档，全面描述模型构建并解释生成的模型。'
- en: '**MOJO**: Models built on H2O Core generate a ready-to-deploy and low-latency
    scoring artifact called a MOJO that can be flexibly deployed to diverse target
    environments. This was discussed in great detail in [*Chapter 9*](B16721_09_Final_SK_ePub.xhtml#_idTextAnchor159),
    *Production Scoring and the H2O MOJO*.'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**MOJO**：在H2O Core上构建的模型生成一个称为MOJO的即用型低延迟评分工件，可以灵活部署到各种目标环境中。这在[*第9章*](B16721_09_Final_SK_ePub.xhtml#_idTextAnchor159)中进行了详细讨论，*生产评分和H2O
    MOJO*。'
- en: Let's move on to H2O AI Cloud's next model building engine.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们继续了解H2O AI Cloud的下一个模型构建引擎。
- en: H2O AutoML (H2O Driverless AI)
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: H2O AutoML（H2O Driverless AI）
- en: H2O Driverless AI is a highly automated AutoML tool built in part by Kaggle
    Grandmaster data scientists to incorporate data science best practices and AI
    heuristics to find highly accurate models in short amounts of time. Some of its
    key capabilities are rich explainability features, a genetic algorithm to iterate
    to the best model, and exhaustive feature engineering and selection to derive
    and use new features. Let's investigate these key features and capabilities.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: H2O Driverless AI是一个高度自动化的AutoML工具，部分由Kaggle大师级数据科学家构建，旨在结合数据科学最佳实践和AI启发式方法，在短时间内找到高度准确模型。其关键功能包括丰富的可解释性功能、一种遗传算法来迭代最佳模型，以及详尽的特征工程和选择，以推导和使用新特征。让我们调查这些关键功能和能力。
- en: Key features and capabilities
  id: totrans-55
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 关键特性和功能
- en: 'The H2O Driverless AI key features and capabilities are as follows:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: H2O Driverless AI 的关键特性和功能如下：
- en: '**Problem types**: H2O Driverless AI builds both *supervised* and *unsupervised*
    models:'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**问题类型**：H2O Driverless AI 构建了**监督学习**和**无监督学习**模型：'
- en: '**Supervised learning**: For supervised learning on tabular data, H2O Driverless
    AI addresses regression, binary and multiclass classification, and time-series
    forecasting problems. For supervised learning on images, Driverless AI addresses
    image classification, and for **natural language processing** (**NLP**), it addresses
    text classification and context tagging problems.'
  id: totrans-58
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**监督学习**：对于表格数据的监督学习，H2O Driverless AI 解决回归、二分类和多分类分类以及时间序列预测问题。对于图像的监督学习，Driverless
    AI 解决图像分类问题，对于**自然语言处理**（**NLP**），它解决文本分类和上下文标记问题。'
- en: '**Unsupervised learning**: For unsupervised learning, Driverless AI tackles
    anomaly detection, clustering, and dimensionality reduction problems.'
  id: totrans-59
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**无监督学习**：对于无监督学习，Driverless AI 解决异常检测、聚类和降维问题。'
- en: '**GPU support**: Driverless AI can leverage GPUs for image and NLP problems,
    which run TensorFlow and PyTorch algorithms.'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**GPU 支持**：Driverless AI 可以利用 GPU 来处理图像和 NLP 问题，这些算法运行 TensorFlow 和 PyTorch。'
- en: '**Genetic algorithm**: Driverless AI uses a proprietary genetic algorithm to
    iterate across dozens of models, each of which varies in its algorithm (for example,
    XGBoost, Generalized Linear Model, and LightGBM), its exploration of hyperparameter
    space, and its exploration of feature engineering space. The best models are promoted
    to the next iteration and new model variations are introduced during each iteration.
    This continues until it cannot find a better model based on the settings that
    users make.'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**遗传算法**：Driverless AI 使用专有的遗传算法在数十个模型之间迭代，每个模型的算法（例如，XGBoost、广义线性模型和LightGBM）不同，其探索超参数空间的方式不同，其探索特征工程空间的方式也不同。最佳模型被提升到下一轮迭代，并在每一轮迭代中引入新的模型变体。这会一直持续到它无法根据用户设置的设置找到更好的模型为止。'
- en: '**Feature engineering**: During the genetic algorithm, Driverless AI applies
    dozens of transformers in exhaustive ways to engineer new features from those
    in the original dataset and determine which ones to include in the final model.
    These transformers are categorized as follows:'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**特征工程**：在遗传算法过程中，Driverless AI 以详尽的方式应用数十个转换器，从原始数据集中的特征中构建新的特征，并确定哪些特征应包含在最终模型中。这些转换器被分类如下：'
- en: '**Numeric**: These are mathematical operations among two or more original features
    – for example, subtracting two features or clustering multiple features for the
    dataset and measuring the distance to a specific cluster for each observation.'
  id: totrans-63
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数值**：这些是在两个或多个原始特征之间的数学运算 – 例如，减去两个特征或对数据集中的多个特征进行聚类，并测量每个观察值到特定聚类的距离。'
- en: '**Categorical**: These are transformations of category labels to numbers –
    for example, taking the average or frequency of the target variable for each category
    and assigning it to the category represented for each observation.'
  id: totrans-64
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分类**：这些是将类别标签转换为数字的转换 – 例如，对每个类别的目标变量的平均值或频率进行计算，并将其分配给每个观察值所代表的类别。'
- en: '**Time and date**: These are transformations of time and date fields to alternative
    time and date representations – for example, converting the date to the day of
    the week.'
  id: totrans-65
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**时间和日期**：这些是将时间和日期字段转换为替代时间日期表示的转换 – 例如，将日期转换为星期几。'
- en: '**Time series**: These transformations derive new features useful for time-series
    problems – for example, using a lag time for a feature value.'
  id: totrans-66
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**时间序列**：这些转换推导出对时间序列问题有用的新特征 – 例如，使用特征值的滞后时间。'
- en: '**Text**: These transformations convert strings to alternative representations
    – for example, using pre-trained **Bidirectional Encoder Representations from
    Transformers** (**BERT**) models to generate new language representations.'
  id: totrans-67
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**文本**：这些转换将字符串转换为替代表示 – 例如，使用预训练的**双向编码器表示从转换器**（**BERT**）模型生成新的语言表示。'
- en: '**Bring your own recipes**: In addition to access to extensive expert settings,
    data scientists can control the automated ML process by importing their own code,
    which H2O calls recipes. These custom recipes can take the following form – *scorer*
    (your own performance metric used to optimize models in the genetic algorithm),
    *feature engineering* (your own engineered feature), or *algorithm* (your choice
    of ML algorithm to supplement familiar Driverless AI out-of-the-box algorithms).'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**自带配方**：除了访问广泛的专家设置外，数据科学家可以通过导入自己的代码来控制自动化的机器学习过程，这些代码 H2O 称为配方。这些自定义配方可以采取以下形式
    - *scorer*（用于在遗传算法中优化模型的您自己的性能指标）、*特征工程*（您自己设计的特点）或 *算法*（您选择的机器学习算法，以补充熟悉的 Driverless
    AI 即插即用算法）。'
- en: '**Interpretability (Explainability)**: Users can interact with diverse and
    full-featured interpretability techniques to explain the resulting models. These
    techniques can be applied at the *global* (entire model) or *local* (individual
    record) levels. These techniques include *surrogate* and *actual model* techniques,
    including K-Lime and Shapley, Decision Tree, Disparate Impact Analysis, Sensitivity
    Analysis, and Partial Dependence Plots. There are also explainers for time-series
    and NLP problems specifically.'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可解释性（可解释性）**：用户可以使用各种全面的功能来与可解释性技术交互，以解释生成的模型。这些技术可以在 *全局*（整个模型）或 *局部*（单个记录）级别应用。这些技术包括
    *代理* 和 *实际模型* 技术，包括 K-Lime 和 Shapley，决策树，差异影响分析，敏感性分析和部分依赖图。还有针对时间序列和 NLP 问题的特定解释器。'
- en: '**Auto-documentation**: Each final model generated by the genetic algorithm
    creates extensively standardized (typically over 60 pages) auto-documentation
    that describes in great detail experiment overview, data overview, methodology,
    validation strategy, model tuning, feature transformations and evolution, a final
    model, and explainability. The document is in paragraph, tabular, and graphic
    form.'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**自动文档**：遗传算法生成的每个最终模型都创建大量标准化的自动文档（通常超过60页），详细描述实验概述、数据概述、方法、验证策略、模型调优、特征转换和演变、最终模型和可解释性。文档以段落、表格和图形形式呈现。'
- en: '**MOJO**: Each final model generated by the genetic algorithm creates a ready-to-deploy
    and low-latency MOJO that is flexibly deployed to diverse target environments.
    This is a similar technology to that discussed in [*Chapter 9*](B16721_09_Final_SK_ePub.xhtml#_idTextAnchor159),
    *Production Scoring and the H2O MOJO,* for H2O at scale (H2O-3 and Sparkling Water).'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**MOJO**：遗传算法生成的每个最终模型都创建一个可部署且低延迟的 MOJO，可以灵活部署到各种目标环境中。这与在第 [*第9章*](B16721_09_Final_SK_ePub.xhtml#_idTextAnchor159)
    中讨论的类似技术相同，*生产评分和 H2O MOJO*，用于 H2O 规模（H2O-3 和 Sparkling Water）。'
- en: Important Note
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 重要提示
- en: The MOJO for Driverless AI performs the feature engineering for features derived
    during the automated model building process.
  id: totrans-73
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Driverless AI 的 MOJO 在自动化模型构建过程中执行特征工程。
- en: Let's now move on to the DeepLearningML engine.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们继续介绍 DeepLearningML 引擎。
- en: DeepLearningML (H2O Hydrogen Torch)
  id: totrans-75
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: DeepLearningML（H2O 氢火炬）
- en: H2O Hydrogen Torch is a UI-based deep learning engine that empowers data scientists
    of all skill levels (and perhaps analysts for some use cases) to easily build
    state-of-the-art computer vision and NLP models. The key features and capabilities
    are as follows.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: H2O 氢火炬是一个基于 UI 的深度学习引擎，它赋予所有技能水平的科学家（以及在某些用例中可能的分析师）轻松构建最先进的计算机视觉和 NLP 模型的能力。其关键特性和功能如下。
- en: Key features and capabilities
  id: totrans-77
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 关键特性和功能
- en: 'The H2O Hydrogen Torch features and capabilities are as follows:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: H2O 氢火炬的功能和特性如下：
- en: '**Problem types**: Currently, Hydrogen Torch addresses six **computer vision**
    (**CV**) and five NLP problem types, described briefly as follows:'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**问题类型**：目前，氢火炬解决六个 **计算机视觉**（**CV**）和五个 NLP 问题类型，简要描述如下：'
- en: '**Image classification (CV)**: Images are classified into one or more sets
    of classes – for example, an image is classified as car versus truck.'
  id: totrans-80
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**图像分类（CV）**：图像被分类为一组或多组类别 - 例如，图像被分类为汽车与卡车。'
- en: '**Image regression (CV)**: A continuous value is predicted from an image –
    for example, the steering angle from a self-driving car image is positive 20 degrees
    from the center line.'
  id: totrans-81
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**图像回归（CV）**：从图像预测一个连续值 - 例如，从自动驾驶汽车图像中预测的转向角度是从中心线正20度。'
- en: '**Object detection (CV)**: An object (or objects) is classified from an image
    and its position coordinates are identified as a bounding box – for example, multiple
    cars are identified, each with a rectangle defined around it.'
  id: totrans-82
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**目标检测（CV）**：从图像中分类一个（或多个）对象，并识别其位置坐标作为边界框——例如，识别多个汽车，每个汽车周围都有一个矩形定义。'
- en: '**Semantic segmentation (CV)**: An object (or objects) is classified as well
    as its exact shape, defined by pixel positions – for example, the exact outline
    of a person or all people in an image.'
  id: totrans-83
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**语义分割（CV）**：对象（或多个对象）不仅被分类，而且其精确形状也被定义，形状由像素位置确定——例如，一个人的精确轮廓或图像中所有人的轮廓。'
- en: '**Instance segmentation (CV)**: This is the same as semantic segmentation,
    but when multiple objects of the same class are identified in instance segmentation,
    they are treated separately, whereas in semantic segmentation, they are treated
    as one object.'
  id: totrans-84
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**实例分割（CV）**：这与语义分割相同，但在实例分割中，当识别出同一类别的多个对象时，它们被单独处理，而在语义分割中，它们被视为一个对象。'
- en: '**Image metric learning (CV)**: Predicts the similarity between images – for
    example, for a picture of a retail product, it will find the likelihood that a
    new picture is the same product.'
  id: totrans-85
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**图像度量学习（CV）**：预测图像之间的相似性——例如，对于零售产品的图片，它会找到新图片是同一产品的可能性。'
- en: '**Text classification (NLP)**: Classifies text (document, page, and snippet)
    into a class – for example, classifying the sentiment or intent of text.'
  id: totrans-86
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**文本分类（NLP）**：将文本（文档、页面和片段）分类到一类——例如，对文本的情感或意图进行分类。'
- en: '**Text regression (NLP)**: Predicts a continuous value from text – for example,
    prediction of a person''s salary from a resume.'
  id: totrans-87
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**文本回归（NLP）**：从文本中预测一个连续值——例如，从简历中预测一个人的薪水。'
- en: '**Text sequence to sequence (NLP)**: Converts text sequences in one context
    to text sequences in another context – for example, converting a document into
    a summary.'
  id: totrans-88
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**文本序列到序列（NLP）**：将一个上下文中的文本序列转换为另一个上下文中的文本序列——例如，将文档转换为摘要。'
- en: '**Text token classification (NLP)**: Classifies each word in a text to a label
    – for example, identifying the United Nations as an organization (an example of
    **Named Entity Recognition** (**NER**)) or identifying a word as a noun or verb
    (example of **Part-of-Speech** (**POS**) tagging).'
  id: totrans-89
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**文本标记分类（NLP）**：将文本中的每个词分类到标签——例如，识别联合国为组织（**命名实体识别**（NER）的例子）或识别一个词为名词或动词（**词性标注**（POS）的例子）。'
- en: '**Text metric learning (NLP)**: Predicts the similarity between two sets of
    text – for example, identifying duplicate information or similar documents.'
  id: totrans-90
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**文本度量学习（NLP）**：预测两组文本之间的相似性——例如，识别重复信息或相似文档。'
- en: '**Ease of building deep learning models**: Hydrogen Torch is a no-code approach
    to building deep learning models. The user interacts with a UI that has extensive
    controls on hyperparameter tuning and a rich interface to quickly iterate, understand,
    and evaluate model outcomes. Models can be exported for deployment to Python or
    H2O MLOps environments.'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**构建深度学习模型的便捷性**：Hydrogen Torch是一种无代码方法，用于构建深度学习模型。用户与一个具有广泛的超参数调整控制和丰富界面的UI进行交互，以快速迭代、理解和评估模型结果。模型可以导出部署到Python或H2O
    MLOps环境。'
- en: '**Modes for user skill set**: The Hydrogen Torch training UI adapts to the
    user skill level by exposing fewer or more model building settings, according
    to whether the user is a novice, skilled, an expert, or a master.'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**用户技能集模式**：Hydrogen Torch训练用户界面通过显示较少或更多的模型构建设置来适应用户的技能水平，根据用户是新手、熟练、专家还是大师。'
- en: Now, let's move on to a model building engine that focuses on documents.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们继续介绍一个专注于文档的模型构建引擎。
- en: DocumentML (H2O Document AI)
  id: totrans-94
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: DocumentML（H2O文档AI）
- en: Documents typically represent a vast untapped data source for enterprises to
    apply ML techniques to automate processing steps, and thus save large amounts
    of time and money compared to manual processing. H2O's Document AI engine learns
    from documents to accomplish this automation.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 文档通常是企业应用机器学习技术以自动化处理步骤、从而节省大量时间和金钱的巨大未开发数据源。H2O的文档AI引擎从文档中学习以实现这一自动化。
- en: Document AI goes beyond simple **Optical Character Recognition** (**OCR**) and
    NLP by learning to recognize information structures of documents such as tables,
    forms, logos, and sections. The Document AI model is trained to extract text entities
    from documents using these capabilities. Documents can thus be processed to extract
    specific information from medical lab results, financial statements, loan applications,
    and so on. This output can then drive analytics and workflows from these documents,
    which become increasingly more valuable as the volume of document processing grows.
    Document AI can also classify an entire document to further automation of document
    processing pipelines.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 文档AI超越了简单的**光学字符识别**（**OCR**）和NLP，通过学习识别文档的信息结构，如表格、表单、标志和部分。文档AI模型经过训练，使用这些能力从文档中提取文本实体。因此，文档可以处理以提取特定信息，例如医疗实验室结果、财务报表、贷款申请等。然后，这些输出可以驱动来自这些文档的分析和工作流程，随着文档处理量的增加，这些文档的价值也越来越大。文档AI还可以对整个文档进行分类，以进一步自动化文档处理流程。
- en: Key features and capabilities
  id: totrans-97
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 关键功能和能力
- en: 'Let''s breakdown these capabilities further:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们进一步分解这些功能：
- en: '**Document ingest**: Ingests documents such as PDFs, images, Word, HTML, CSV
    files, text files, emails, and others.'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**文档摄取**：摄取诸如PDF、图像、Word、HTML、CSV文件、文本文件、电子邮件等文档。'
- en: '**Preprocessing**: Document AI uses OCR and NLP capabilities to perform multiple
    preprocessing steps, such as handling embedded text (for example, PDF metadata)
    and logos, and orientating, deskewing, and cropping pages.'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**预处理**：文档AI使用OCR和NLP能力执行多个预处理步骤，例如处理嵌入式文本（例如，PDF元数据）和标志，以及定位、去倾斜和裁剪页面。'
- en: '**Apply document labels**: Users access a UI to apply labels to document text.
    Models will be trained to recognize these labeled entities. For example, on a
    medical lab document, the user applies labels to the patient name, the lab name,
    the lab address, the test name, the test result value, the test result unit, the
    test result normal range, and so on.'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**应用文档标签**：用户通过UI访问界面以将标签应用于文档文本。模型将训练以识别这些标记实体。例如，在一份医疗实验室文档中，用户将标签应用于患者姓名、实验室名称、实验室地址、测试名称、测试结果值、测试结果单位、测试结果正常范围等。'
- en: '**Train models**: Document AI trains against a labeled document set. It learns
    to associate text with labels in the larger context of the structure of the document
    – for example, lab results are reported from rows in a table. Note that models
    are trained against a known document set and afterward will be able to pull information
    from documents they have never seen before. For example, each lab produces its
    own report (its own design, the styling of tables, number of pages, the position
    of the patient name in the document, and so on). Even though the model is trained
    on a small set of lab reports (typically 100 or so), it can then pull information
    from documents sent from a lab it has not been trained on.'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**训练模型**：文档AI针对标记文档集进行训练。它学会在文档结构的更大背景下将文本与标签关联起来——例如，实验室结果是从表格的行中报告的。请注意，模型是在已知的文档集上训练的，之后将能够从他们以前从未见过的文档中提取信息。例如，每个实验室都产生自己的报告（自己的设计、表格的样式、页数、文档中患者姓名的位置等）。即使模型是在一小套实验室报告（通常是大约100份）上训练的，它也可以从它没有训练过的实验室发送的文档中提取信息。'
- en: '**Post-processing**: Document AI allows users to customize and standardize
    how results are outputted. For example, users can define an output JSON structure
    with date output formats standardized.'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**后处理**：文档AI允许用户自定义和标准化输出结果的方式。例如，用户可以定义一个具有标准化的日期输出格式的输出JSON结构。'
- en: '**Model deployment**: Models can be exported and deployed to H2O MLOps or a
    Python environment of your choice.'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**模型部署**：模型可以导出并部署到H2O MLOps或您选择的Python环境中。'
- en: Now that we have explored the four specialized model building engines on H2O
    AI Cloud, let's see how features for those engines can be shared and operationalized.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经探索了H2O AI Cloud上的四个专业模型构建引擎，让我们看看这些引擎的功能如何共享和实施。
- en: A self-provisioning service (H2O Enterprise Steam)
  id: totrans-106
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 自助服务（H2O企业版Steam）
- en: H2O Enterprise Steam allows users to self-provision model building environments
    and administrators to govern users and their resource consumption. As with H2O
    Core and the scoring artifact it generates called the MOJO, Enterprise Steam is
    considered a key component of H2O ML at scale and was introduced in [*Chapter
    2*](B16721_02_Final_SK_ePub.xhtml#_idTextAnchor024), *Platform Components and
    Key Concepts*, and then explored in detail in [*Chapter 11*](B16721_11_Final_SK_ePub.xhtml#_idTextAnchor207),
    *The Administrator and Operations View*.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: H2O企业级蒸汽允许用户自行配置模型构建环境，管理员则可以管理用户及其资源消耗。与H2O核心及其生成的评分工件MOJO一样，企业级蒸汽被视为H2O ML扩展的关键组件，并在[*第2章*](B16721_02_Final_SK_ePub.xhtml#_idTextAnchor024)，*平台组件和关键概念*中介绍，然后在[*第11章*](B16721_11_Final_SK_ePub.xhtml#_idTextAnchor207)，*管理员和操作视图*中进行了详细探讨。
- en: Note that in that context, Enterprise Steam was used to self-provision and manage
    H2O Core environments only, but in the context of the H2O AI Cloud, it is used
    to manage all H2O model building engines. Let's review its key capabilities.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，在这种情况下，企业级蒸汽仅用于自行配置和管理H2O核心环境，但在H2O AI云的上下文中，它用于管理所有H2O模型构建引擎。让我们回顾其关键能力。
- en: Key features and capabilities
  id: totrans-109
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 关键功能和能力
- en: 'The key capabilities of H2O Enterprise Steam are listed briefly as follows:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: H2O企业级蒸汽的关键能力简要列出如下：
- en: '**Easy self-provisioning of H2O model building environments**: Data scientists
    can define, launch, and manage their H2O model building environments from the
    Enterprise Steam UI or API. Note that, currently, this is true for DistributedML
    (H2O Core) and AutoML (Driverless AI) environments. Hydrogen Torch and Document
    AI environments currently are launched as applications, but they are road-mapped
    to consolidate into the Enterprise Steam self-provisioning framework.'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**轻松自行配置H2O模型构建环境**：数据科学家可以从企业级蒸汽UI或API定义、启动和管理他们的H2O模型构建环境。请注意，目前这适用于DistributedML（H2O核心）和AutoML（Driverless
    AI）环境。Hydrogen Torch和Document AI环境目前作为应用程序启动，但它们计划整合到企业级蒸汽的自配置框架中。'
- en: '**Administrator management and governance of users**: Administrators manage
    users and define the amount of resources (CPU and memory) they can use when provisioning
    environments, including how long those environments sit idle before spinning down.'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**管理员对用户的管理和治理**：管理员管理用户，并定义他们在配置环境时可以使用的资源量（CPU和内存），包括这些环境在关闭之前闲置了多长时间。'
- en: Let's move on now to the Feature Store component.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们继续到特征存储组件。
- en: Feature Store (H2O AI Feature Store)
  id: totrans-114
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 特征存储库（H2O AI特征存储库）
- en: H2O AI Feature Store is a system to organize, govern, share, and operationalize
    predictive ML features across the enterprise in both the model building and live
    scoring contexts. This saves significant time for data scientists to discover
    features and for both data scientists and ML engineers to transform raw data into
    these features. Let's explore the capabilities further.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: H2O AI特征存储库是一个系统，用于在模型构建和实时评分环境中组织、管理、共享和操作化预测性ML特征。这为数据科学家节省了大量时间来发现特征，并且对于数据科学家和ML工程师将原始数据转换为这些特征也节省了时间。让我们进一步探讨其能力。
- en: Key features and capabilities
  id: totrans-116
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 关键功能和能力
- en: 'Here are some key features of the H2O AI Feature Store:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是H2O AI特征存储库的一些关键功能：
- en: '**Versatile feature publishing and search workflow**: Data scientists and engineers
    engineer feature pipelines using pre-built integrations into Snowflake, Databricks,
    H2O Sparkling Water, and other technologies. The resulting features are outputted
    to the H2O AI Feature Store with over 40 metadata attributes associated with the
    feature. This cataloging of features and their attributes allows other data scientists
    to search for relevant features and for the Feature Store''s built-in AI to recommend
    features.'
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**灵活的特征发布和搜索工作流程**：数据科学家和工程师使用预构建的集成到Snowflake、Databricks、H2O Sparkling Water和其他技术中的特征管道。生成的特征输出到H2O
    AI特征存储库，与特征相关的40多个元数据属性。这种对特征及其属性的编目允许其他数据科学家搜索相关特征，并且特征存储库内置的AI可以推荐特征。'
- en: '**Scalable and timely feature consumption**: Each feature in the Feature Store
    has a defined duration until it is refreshed. Features can be stored offline for
    training and batch scoring or stored online for low-latency real-time scoring.'
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可扩展和及时的特征消费**：特征存储库中的每个特征都有一个定义的持续时间，直到它被刷新。特征可以离线存储以进行训练和批量评分，或在线存储以进行低延迟实时评分。'
- en: '**Automatic feature drift and bias detection**: Features are automatically
    checked for data drift and users are alerted when drift is detected. This can
    be essential in deciding to retrain models with more recent data. Features are
    also automatically checked for bias and alert users when bias is detected. This
    can be essential in retraining models to remove bias.'
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**自动特征漂移和偏差检测**：特征会自动检查数据漂移，并在检测到漂移时提醒用户。这可能在决定使用更近期的数据进行模型重新训练时至关重要。特征也会自动检查偏差，并在检测到偏差时提醒用户。这可能在重新训练模型以消除偏差时至关重要。'
- en: '**Access management and governance**: H2O AI Feature Store integrates with
    the enterprise identity provider to authenticate users and authorize access to
    features. Features and their metadata are versioned for regulatory compliance
    and to backtest models against ground truth.'
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**访问管理和治理**：H2O AI Feature Store与企业身份提供者集成，以验证用户身份并授权对特征的访问。特征及其元数据进行了版本控制，以符合监管要求，并可以对基准数据进行回测。'
- en: H2O AI Cloud has a fully capable model operations component. Let's learn more
    about that next.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: H2O AI Cloud拥有一个功能齐全的模型操作组件。让我们接下来了解更多关于它的信息。
- en: MLOps (H2O MLOps)
  id: totrans-123
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: MLOps（H2O MLOps）
- en: H2O MLOps is a platform to deploy, manage, monitor, and govern models. These
    can be either models generated from any of the H2O model building engines (DistributedML,
    AutoML, DeepLearningML, or DocumentML) or models from non-H2O software (for example,
    scikit-learn or MLflow). Note that H2O MLOps workflows can be completed using
    the UI or API, with the latter essential for integrating into **continuous integration
    and continuous deployment (CI/CD)** workflows. Major capabilities are elaborated
    as follows.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: H2O MLOps是一个用于部署、管理、监控和治理模型的平台。这些可以是来自任何H2O模型构建引擎（DistributedML、AutoML、DeepLearningML或DocumentML）的模型，或者来自非H2O软件（例如scikit-learn或MLflow）的模型。请注意，H2O
    MLOps工作流程可以使用UI或API完成，后者对于集成到**持续集成和持续部署（CI/CD）**工作流程至关重要。主要功能如下所述。
- en: Key features and capabilities
  id: totrans-125
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 关键特性和功能
- en: 'Here are the key features of H2O MLOps:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是H2O MLOps的关键特性：
- en: '**Model deployment**: Easy deployment of H2O and non-H2O models. Scoring is
    available as a REST endpoint for both real-time and batch scoring. Models are
    deployed as either a single model (simple deployment), champion/challenger (compare
    a new model to current model where the only current model is live), or an A/B
    test (multiple live models with live data are routed among them in configured
    proportions). Models are deployed to defined environments, typically development
    and production, but you may add more.'
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**模型部署**：轻松部署H2O和非H2O模型。评分作为REST端点提供，适用于实时和批量评分。模型可以部署为单个模型（简单部署）、冠军/挑战者（比较新模型与当前模型，其中只有当前模型是活跃的）或A/B测试（多个活跃模型和实时数据在配置的比例中路由）。模型部署到定义的环境，通常是开发和生产环境，但你可以添加更多。'
- en: '**Model monitoring**: Models are monitored for health, scoring latency, data
    drift, fairness (bias) degradation, and performance degradation. Alerts are presented
    on the monitoring dashboard and sent to configured recipients. Alerts can be used
    to trigger model retraining and deployment.'
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**模型监控**：监控模型的健康状况、评分延迟、数据漂移、公平性（偏差）降级和性能降级。警报在监控仪表板上显示，并发送到配置的收件人。警报可用于触发模型重新训练和部署。'
- en: '**Model management**: Models can be compared and evaluated, promoted to a registry,
    and then deployed. Models are associated with extensive metadata, allowing traceability
    to model building details and evaluation against other models. Models in the registry
    (and subsequent deployment) are versioned. Deployed models can be rolled back
    to previous versions.'
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**模型管理**：模型可以进行比较和评估，提升到注册表中，然后部署。模型与广泛的元数据相关联，允许对模型构建细节进行可追溯性，并与其他模型进行评估。注册表中的模型（以及随后的部署）是版本化的。已部署的模型可以回滚到以前的版本。'
- en: '**Model governance**: The versioning and traceability achieved through model
    management create a lineage of model history. Users have role-based access with
    actions that are audited. Administrators have a dedicated dashboard to provide
    visibility across all users, models, and audit logs. These capabilities combine
    a result in an overall governance process that minimizes model risk and facilitates
    regulatory compliance.'
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**模型治理**：通过模型管理实现的版本控制和可追溯性创建了一个模型历史记录的谱系。用户具有基于角色的访问权限，并且对操作进行审计。管理员有一个专门的仪表板，可以提供对所有用户、模型和审计日志的可见性。这些功能结合在一起，在整体治理过程中最大限度地减少模型风险并促进合规性。'
- en: We started this chapter by recognizing an application layer that integrates
    the rest of the H2O AI Cloud platform. Let's learn more about that.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 我们从识别一个集成了H2O AI Cloud平台其他部分的 应用层开始本章。让我们更深入地了解这一点。
- en: Low-code SDK for AI applications (H2O Wave)
  id: totrans-132
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: AI应用程序的低代码SDK（H2O Wave）
- en: H2O Wave is an open source and low-code Python SDK to build real-time AI applications
    with sophisticated visualizations. Low code is achieved by abstracting the complexities
    of web application coding away from the application developer while exposing higher-level
    UI components as templates, themes, and widgets. Data scientists and ML engineers
    are intended as developers (as well as software developers themselves).
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: H2O Wave是一个开源且低代码的Python SDK，用于构建具有复杂可视化的实时AI应用程序。通过将网络应用程序编码的复杂性抽象化，从应用程序开发者那里移除，同时将高级UI组件作为模板、主题和小部件公开，实现了低代码。数据科学家和机器学习工程师被视为开发者（以及软件开发者本身）。
- en: Examples of H2O Wave applications have been built by H2O data scientists as
    capability demonstrators. These can be found on the H2O AI Cloud 90-day evaluation
    site at [https://h2o.ai/freetrial](https://h2o.ai/freetrial). Additional examples
    are on the H2O public GitHub repository at [https://github.com/h2oai/wave-apps](https://github.com/h2oai/wave-apps).
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: H2O数据科学家构建了H2O Wave应用程序的示例，作为功能演示。这些可以在H2O AI Cloud 90天评估网站上找到[https://h2o.ai/freetrial](https://h2o.ai/freetrial)。更多示例可以在H2O公共GitHub存储库[https://github.com/h2oai/wave-apps](https://github.com/h2oai/wave-apps)找到。
- en: How Do I Try Building Wave Applications?
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 我该如何尝试构建Wave应用程序？
- en: Instructions to download the Wave server and SDK to build your own applications
    can be found at [https://wave.h2o.ai/docs/installation](https://wave.h2o.ai/docs/installation).
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 有关下载Wave服务器和SDK以构建您自己的应用程序的说明，请参阅[https://wave.h2o.ai/docs/installation](https://wave.h2o.ai/docs/installation)。
- en: Key features and capabilities
  id: totrans-137
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 关键特性和功能
- en: 'The following are the key features and capabilities of H2O Wave:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 以下为H2O Wave的关键特性和功能：
- en: '**Low-code SDK**: Data scientists and ML engineers focus on specifying templates
    and widgets and feeding data into them to create sophisticated visualizations,
    dashboards, and workflows. The complexities of web application code are abstracted
    away from the developer.'
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**低代码SDK**：数据科学家和机器学习工程师专注于指定模板和小部件，并将数据输入其中以创建复杂的可视化、仪表板和工作流程。将网络应用程序代码的复杂性从开发者那里抽象出来。'
- en: '**Extensive native data connectors**: You have access to over 160 connectors
    to data sources and sinks from the SDK.'
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**广泛的本地数据连接器**：您可以通过SDK访问超过160个数据源和接收器的连接器。'
- en: '**Native H2O APIs**: The SDK includes H2O APIs that integrate other H2O AI
    Cloud components. This enables data scientists and ML engineers to integrate aspects
    of the ML life cycle as a backend to the application visualizations and workflows.'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**本地H2O API**：SDK包括H2O API，这些API集成了其他H2O AI Cloud组件。这使得数据科学家和机器学习工程师可以将机器生命周期的一些方面作为应用程序可视化和工作流程的后端进行集成。'
- en: '**Use any Python package**: Applications are isolated as containers, thus allowing
    any Python package to be used by the application – for example, NumPy and pandas
    for data manipulation and Bokeh and Matplotlib for data visualizations, to name
    just a few.'
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**使用任何Python包**：应用程序作为容器隔离，因此允许应用程序使用任何Python包 – 例如，NumPy和pandas用于数据处理，Bokeh和Matplotlib用于数据可视化，仅举几个例子。'
- en: '**Integrate non-H2O technology**: When Python packages in your application
    represent public APIs such as the Twitter API, AWS service APIs, or your own private
    Python APIs, Wave applications can integrate non-H2O technology into its visualizations
    and workflows. Wave applications can thus be built as single panes of glass across
    multiple technologies.'
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**集成非H2O技术**：当您的应用程序中的Python包代表公共API，如Twitter API、AWS服务API或您自己的私有Python API时，Wave应用程序可以将非H2O技术集成到其可视化和工作流程中。因此，Wave应用程序可以作为跨越多种技术的单一玻璃窗构建。'
- en: '**Publish to H2O App Store**: Wave applications are developed locally and then
    published to the H2O AI Cloud App Store for enterprise consumption.'
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**发布到H2O应用商店**：Wave应用程序在本地开发后，发布到H2O AI Cloud应用商店供企业使用。'
- en: Let's now take a look at the H2O App Store.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们来看看H2O应用商店。
- en: App Store (H2O AI App Store)
  id: totrans-146
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 应用商店（H2O AI应用商店）
- en: The H2O AI App Store hosts your H2O Wave applications in your H2O AI Cloud instance.
    H2O Wave applications are hosted in a searchable and role-based way. Users logged
    in to the App Store see only the applications they are allowed to use and can
    find them by custom-defined categories or by search. Wave application developers
    publish to the App Store, and administrators manage the App Store.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: H2O AI 应用商店在您的 H2O AI 云实例中托管您的 H2O Wave 应用程序。H2O Wave 应用程序以可搜索和基于角色的方式托管。登录到应用商店的用户只能看到他们有权使用的应用程序，并且可以通过自定义分类或搜索来找到它们。Wave
    应用程序开发者向应用商店发布，管理员管理应用商店。
- en: Application consumers thus access and use Wave applications through the App
    Store, though data scientists and ML engineer developers may prototype with consumers
    locally before publishing to the App Store.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，应用程序消费者通过应用商店访问和使用 Wave 应用程序，尽管数据科学家和 ML 工程师开发者可以在发布到应用商店之前在本地与消费者进行原型设计。
- en: Let's now get a high-level understanding of the H2O AI Cloud architecture.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们来对 H2O AI 云架构有一个高层次的理解。
- en: H2O AI Cloud architecture
  id: totrans-150
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: H2O AI 云架构
- en: 'We will not dive deep into H2O AI Cloud Architecture but will review three
    important architecture points:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 我们不会深入探讨 H2O AI 云架构，但将回顾三个重要的架构点：
- en: '**Components are modular and open**: The platform''s modular architecture allows
    enterprises or groups to use the components they need and to hide and ignore the
    ones they do not. H2O AI Cloud is also open – its components can coexist and interact
    with the larger enterprise ecosystem, including non-H2O AI/ML components. The
    MLOps component, for example, can host non-H2O models, such as scikit-learn models,
    and the AI application Wave SDK can integrate non-H2O APIs with its own.'
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**组件模块化和开放**：平台的模块化架构允许企业或组使用他们需要的组件，并隐藏和忽略他们不需要的组件。H2O AI 云也是开放的——其组件可以与更大的企业生态系统共存并交互，包括非
    H2O AI/ML 组件。例如，MLOps 组件可以托管非 H2O 模型，如 scikit-learn 模型，AI 应用程序 Wave SDK 可以将其自己的
    API 与非 H2O API 集成。'
- en: '**Cloud-native architecture**: H2O AI Cloud is built on a modern Kubernetes
    architecture that achieves efficient resource consumption among cloud servers.
    In addition, H2O workloads on the AI Cloud are ephemeral – they spin up when needed,
    spin down when not in use, and retain state when spinning up again. The H2O AI
    Cloud also leverages the cloud service providers'' managed services – for example,
    using the cloud-managed Kubernetes service and maintaining state in a managed
    PostgreSQL database.'
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**云原生架构**：H2O AI 云建立在现代 Kubernetes 架构之上，实现了云服务器之间的高效资源消耗。此外，AI 云上的 H2O 工作负载是短暂的——需要时启动，不使用时关闭，再次启动时保留状态。H2O
    AI 云还利用云服务提供商的管理服务——例如，使用云管理的 Kubernetes 服务，并在管理 PostgreSQL 数据库中维护状态。'
- en: '**Flexible deployment**: H2O AI Cloud can be deployed in an enterprise''s cloud,
    on-premises, or in a hybrid environment. Alternatively, it can be consumed as
    a managed service where H2O hosts and manages the enterprise''s H2O AI Cloud platform
    in H2O''s cloud environment.'
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**灵活部署**：H2O AI 云可以在企业的云中、本地或混合环境中部署。或者，它也可以作为托管服务消费，其中 H2O 在 H2O 的云环境中托管和管理企业的
    H2O AI 云平台。'
- en: These architecture points combined with the capabilities of each component mean
    that enterprises can fit the H2O AI Cloud to their specific environment, use case
    needs, and stage of their AI transformation journey.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 这些架构点与每个组件的能力相结合，意味着企业可以将 H2O AI 云适应其特定的环境、用例需求以及其 AI 转型旅程的阶段。
- en: Let's summarize what we've learned in this chapter.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们总结一下本章所学的内容。
- en: Summary
  id: totrans-157
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we expanded our view beyond *H2O ML at scale*, which has been
    the focus of this book to this point. We did this by introducing H2O's end-to-end
    ML platform called H2O AI Cloud. This platform has a broad set of components in
    the model building and model deployment steps of the ML life cycle and introduces
    a lesser-considered layer to this flow – easy-to-build AI applications and an
    App Store to serve them. We learned that H2O AI Cloud has four specialized engines
    for building ML models – DistributedML, AutoML, DeepLearningML, and DocumentML.
    We learned that MLOps has a full capability set around deploying, monitoring,
    managing, and governing models for scoring. We also learned that a Feature Store
    is available to centralize and reuse features for model building and model scoring.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将视野扩展到*H2O ML at scale*之外，这是本书迄今为止的重点。我们通过引入H2O的端到端机器学习平台H2O AI Cloud来实现这一点。该平台在机器学习生命周期的模型构建和模型部署步骤中具有一系列广泛的组件，并引入了这一流程中较少考虑的一层——易于构建的AI应用程序和为它们服务的应用商店。我们了解到，H2O
    AI Cloud有四个用于构建机器学习模型的专用引擎——DistributedML、AutoML、DeepLearningML和DocumentML。我们还了解到，MLOps围绕部署、监控、管理和治理评分模型具有完整的功能集。我们还了解到，特征存储可用于集中和重用模型构建和模型评分的特征。
- en: Importantly, we learned that the focus of this book, building ML models on massive
    datasets and deploying to enterprise systems for scoring (what we have called
    H2O at scale), uses technology (H2O Core, H2O Enterprise Steam, and H2O MOJO)
    that is actually a subset of the larger H2O AI Cloud platform.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 重要的是，我们了解到本书的重点，即在大型数据集上构建机器学习模型并将其部署到企业系统进行评分（我们称之为H2O at scale），实际上使用的是H2O
    AI Cloud更大平台的一个子集的技术（H2O Core、H2O Enterprise Steam和H2O MOJO）。
- en: We made the point thatH2O at scale technology can be deployed separately from
    H2O AI Cloud or as a part of the larger platform. In the next chapter, we are
    going to see additional capabilities that H2O at scale takes on by being a member
    of the H2O AI Cloud.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 我们指出，H2O at scale技术可以独立于H2O AI Cloud部署，或者作为更大平台的一部分。在下一章中，我们将看到H2O at scale作为H2O
    AI Cloud的成员所承担的额外功能。
