- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: C++ can make your **machine learning** (**ML**) models run faster and more efficiently.
    This book teaches you the basics of ML and shows you how to use C++ libraries.
    It explains how to create supervised and unsupervised ML models.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: C++ 可以让你的机器学习（ML）模型运行得更快、更高效。本书教你机器学习的基础知识，并展示如何使用 C++ 库。它解释了如何创建监督学习和无监督学习模型。
- en: You’ll get hands-on with tuning and optimizing a model for different use cases,
    assisting you with model selection and the measurement of performance. The book
    covers techniques such as product recommendations, ensemble learning, anomaly
    detection, sentiment analysis, and object recognition using modern C++ libraries.
    Further, you’ll learn how to handle production and deployment challenges on mobile
    platforms, and how the ONNX model format can help you in such tasks.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 你将亲自动手调整和优化模型以适应不同的使用场景，本书将帮助你进行模型选择和性能测量。本书涵盖了产品推荐、集成学习、异常检测、情感分析和使用现代 C++
    库进行目标识别等技术。此外，你还将学习如何处理移动平台上的生产部署挑战，以及 ONNX 模型格式如何帮助你完成这些任务。
- en: This new edition is updated with key topics such as sentiment analysis implementation
    using transfer learning and transformer-based models and tracking and visualizing
    ML experiments with MLflow. Also, there is an additional section about using Optuna
    for hyperparameter selection. The section about model deployment into mobile platforms
    is extended with a detailed explanation of real-time object detection for Android
    with C++.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本版更新了关键主题，如使用迁移学习和基于 Transformer 的模型实现情感分析，以及使用 MLflow 跟踪和可视化机器学习实验。此外，还增加了一个关于使用
    Optuna 进行超参数选择的新章节。关于将模型部署到移动平台的部分得到了扩展，增加了使用 C++ 在 Android 上进行实时目标检测的详细解释。
- en: By the end of this C++ book, you will have real-world ML and C++ knowledge,
    as well as the skills to use C++ to build powerful ML systems.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在阅读完这本 C++ 书籍之后，你将拥有实际的机器学习和 C++ 知识，以及使用 C++ 构建强大机器学习系统的技能。
- en: Who this book is for
  id: totrans-5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书面向的对象
- en: If you want to get started with ML algorithms and techniques using the popular
    C++ language, then this book is for you. Aside from being a useful first course
    in ML with C++, this book will also appeal to data analysts, data scientists,
    and ML developers looking to implement different ML models in production using
    C++, which can be useful for some specific platforms, for example, embedded devices.
    Working knowledge of the C++ programming language, linear algebra, and basic calculus
    understanding are needed to get started with this book.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想要使用流行的 C++ 语言开始学习机器学习算法和技术，那么这本书就是为你准备的。除了作为 C++ 机器学习入门的有用课程外，这本书还会吸引那些希望使用
    C++ 在生产环境中实现不同机器学习模型的数据分析师、数据科学家和机器学习开发者，这对于某些特定平台，例如嵌入式设备，可能很有用。要开始阅读这本书，需要具备
    C++ 编程语言、线性代数和基本微积分知识。
- en: What this book covers
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书涵盖的内容
- en: '[*Chapter 1*](B19849_01.xhtml#_idTextAnchor015), *Introduction to Machine Learning
    with C++*, guides you through the necessary fundamentals of ML, including linear
    algebra concepts, ML algorithm types, and their building blocks.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第1章*](B19849_01.xhtml#_idTextAnchor015)，*使用 C++ 的机器学习简介*，将引导你了解机器学习的基本知识，包括线性代数概念、机器学习算法类型及其构建模块。'
- en: '[*Chapter 2*](B19849_02.xhtml#_idTextAnchor075), *Data Processing*, shows you
    how to load data from different file formats for ML model training and how to
    initialize dataset objects in various C++ libraries.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第2章*](B19849_02.xhtml#_idTextAnchor075)，*数据处理*，展示了如何从不同的文件格式加载数据用于机器学习模型训练，以及如何在各种
    C++ 库中初始化数据集对象。'
- en: '[*Chapter 3*](B19849_03.xhtml#_idTextAnchor152), *Measuring Performance and
    Selecting Models*, shows you how to measure the performance of various types of
    ML models, how to select the best set of hyperparameters to achieve better model
    performance, and how to use the grid search method in various C++ and external
    libraries for model selection.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第3章*](B19849_03.xhtml#_idTextAnchor152)，*衡量性能和选择模型*，展示了如何衡量各种类型机器学习模型的性能，如何选择最佳的超参数集以实现更好的模型性能，以及如何在各种
    C++ 和外部库中使用网格搜索方法进行模型选择。'
- en: '[*Chapter 4*](B19849_04.xhtml#_idTextAnchor228), *Clustering*, discusses algorithms
    for grouping objects by their essential characteristics, shows why we usually
    use unsupervised algorithms for solving such types of tasks, and lastly, outlines
    the various types of clustering algorithms, along with their implementations and
    usage in different C++ libraries.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第4章*](B19849_04.xhtml#_idTextAnchor228), *聚类*，讨论了根据对象的本质特征进行分组算法，解释了我们通常为什么使用无监督算法来解决这类任务，最后概述了各种聚类算法及其在不同C++库中的实现和使用。'
- en: '[*Chapter 5*](B19849_05.xhtml#_idTextAnchor258), *Anomaly Detection*, discusses
    the basics of anomaly and novelty detection tasks and guides you through the different
    types of anomaly detection algorithms, their implementation, and their usage in
    various C++ libraries.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第5章*](B19849_05.xhtml#_idTextAnchor258), *异常检测*，讨论了异常和新颖性检测任务的基础知识，并引导你了解不同类型的异常检测算法、它们的实现以及在各种C++库中的使用。'
- en: '[*Chapter 6*](B19849_06.xhtml#_idTextAnchor301), *Dimensionality Reduction*,
    discusses various algorithms for dimensionality reduction that preserve the essential
    characteristics of data, along with their implementation and usage in various
    C++ libraries.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第6章*](B19849_06.xhtml#_idTextAnchor301), *降维*，讨论了各种降维算法，这些算法保留了数据的本质特征，以及它们在不同C++库中的实现和使用。'
- en: '[*Chapter 7*](B19849_07.xhtml#_idTextAnchor383), *Classification*, shows you
    what a classification task is and how it differs from a clustering task. You will
    be guided through various classification algorithms, their implementation, and
    their usage in various C++ libraries.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第7章*](B19849_07.xhtml#_idTextAnchor383), *分类*，展示了分类任务是什么以及它与聚类任务的区别。你将了解各种分类算法、它们的实现以及在各种C++库中的使用。'
- en: '[*Chapter 8*](B19849_08.xhtml#_idTextAnchor438), *Recommender Systems*, gives
    you familiarity with recommender system concepts. You will be shown the different
    approaches to dealing with recommendation tasks, and you will see how to solve
    such types of tasks using the C++ language.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第8章*](B19849_08.xhtml#_idTextAnchor438), *推荐系统*，使你对推荐系统概念熟悉。你将了解处理推荐任务的不同方法，并看到如何使用C++语言解决这类任务。'
- en: '[*Chapter 9*](B19849_09.xhtml#_idTextAnchor496), *Ensemble Learning*, discusses
    various methods of combining several ML models to get better accuracy and to deal
    with learning problems. You will encounter ensemble implementations with the usage
    of different C++ libraries.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第9章*](B19849_09.xhtml#_idTextAnchor496), *集成学习*，讨论了将多个机器学习模型结合以获得更高准确性和处理学习问题的各种方法。你将遇到使用不同C++库的集成实现。'
- en: '[*Chapter 10*](B19849_10.xhtml#_idTextAnchor539), *Neural Networks for Image
    Classification*, gives you familiarity with the fundamentals of artificial neural
    networks. You will encounter the essential building blocks, the required math
    concepts, and learning algorithms. You will be guided through different C++ libraries
    that provide functionality for neural network implementations. Also, this chapter
    will show you the implementation of a deep convolutional network for image classification
    with the PyTorch library.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第10章*](B19849_10.xhtml#_idTextAnchor539), *用于图像分类的神经网络*，使你对人工神经网络的 fundamentals
    熟悉。你将遇到基本构建块、所需的数学概念和学习算法。你将了解提供神经网络实现功能的不同C++库。此外，本章还将展示使用PyTorch库实现图像分类的深度卷积网络的实现。'
- en: '[*Chapter 11*](B19849_11.xhtml#_idTextAnchor642), *Sentiment Analysis with
    BERT and Transfer Learning*, introduces you to **large language models** (**LLMs**),
    and briefly describes how they work. It will also show how to use the transfer
    learning technique to use pre-trained LLMs to implement sentiment analysis with
    the PyTorch library.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第11章*](B19849_11.xhtml#_idTextAnchor642), *使用BERT和迁移学习进行情感分析*，介绍了**大型语言模型**（**LLMs**），并简要描述了它们的工作原理。它还将展示如何使用迁移学习技术，利用预训练的LLMs，通过PyTorch库实现情感分析。'
- en: '[*Chapter 12*](B19849_12.xhtml#_idTextAnchor660), *Exporting and Importing
    Models*, shows you how to save and load model parameters and architectures using
    various C++ libraries. Also, you will see how to use the ONNX format to load and
    use a pre-trained model with the C++ API of the Caffe2 library.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第12章*](B19849_12.xhtml#_idTextAnchor660), *导出和导入模型*，展示了如何使用各种C++库保存和加载模型参数和架构。此外，你将看到如何使用ONNX格式，通过Caffe2库的C++
    API加载和使用预训练模型。'
- en: '[*Chapter 13*](B19849_13.xhtml#_idTextAnchor689), *Tracking and Visualizing
    ML Experiments*, shows you how to use the MLflow toolkit to track and visualize
    your ML experiments. Visualization is essential for understanding patterns, relationships,
    and trends in experiments. Experiment tracking allows you to compare results,
    identify best practices, and avoid repeating mistakes.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第 13 章*](B19849_13.xhtml#_idTextAnchor689)，*跟踪和可视化机器学习实验*，展示了如何使用 MLflow
    工具包来跟踪和可视化您的机器学习实验。可视化对于理解实验中的模式、关系和趋势至关重要。实验跟踪允许您比较结果、识别最佳实践并避免重复错误。'
- en: '[*Chapter 14*](B19849_14.xhtml#_idTextAnchor702), *Deploying Models on a Mobile
    Platform*, guides you through the development of applications for object detection
    on devices’ camera images using neural networks for the Android platform.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第 14 章*](B19849_14.xhtml#_idTextAnchor702)，*在移动平台上部署模型*，指导您使用 Android 平台上的神经网络开发用于设备相机图像目标检测的应用程序。'
- en: To get the most out of this book
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为了充分利用本书
- en: 'To be able to compile and run the examples included in this book, you will
    need to configure a particular development environment. All code examples have
    been tested with the Ubuntu Linux version 22.04 distributions. The following list
    outlines the packages you’ll need to install on the Ubuntu platform:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 为了能够编译和运行本书中包含的示例，您需要配置特定的开发环境。所有代码示例都已使用 Ubuntu Linux 22.04 版本的发行版进行测试。以下列表概述了您需要在
    Ubuntu 平台上安装的包：
- en: '`unzip`'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`unzip`'
- en: '`build-essential`'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`build-essential`'
- en: '`gdb`'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`gdb`'
- en: '`git`'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`git`'
- en: '`libfmt-dev`'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`libfmt-dev`'
- en: '`wget`'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`wget`'
- en: '`cmake`'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cmake`'
- en: '`python3`'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`python3`'
- en: '`python3-pip`'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`python3-pip`'
- en: '`python-is-python3`'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`python-is-python3`'
- en: '`libblas-dev`'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`libblas-dev`'
- en: '`libopenblas-dev`'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`libopenblas-dev`'
- en: '`libfftw3-dev`'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`libfftw3-dev`'
- en: '`libatlas-base-dev`'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`libatlas-base-dev`'
- en: '`liblapacke-dev`'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`liblapacke-dev`'
- en: '`liblapack-dev`'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`liblapack-dev`'
- en: '`libboost-all-dev`'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`libboost-all-dev`'
- en: '`libopencv-core4.5d`'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`libopencv-core4.5d`'
- en: '`libopencv-imgproc4.5d`'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`libopencv-imgproc4.5d`'
- en: '`libopencv-dev`'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`libopencv-dev`'
- en: '`libopencv-highgui4.5d`'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`libopencv-highgui4.5d`'
- en: '`libopencv-highgui-dev`'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`libopencv-highgui-dev`'
- en: '`libhdf5-dev`'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`libhdf5-dev`'
- en: '`libjson-c-dev`'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`libjson-c-dev`'
- en: '`libx11-dev`'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`libx11-dev`'
- en: '`openjdk-8-jdk`'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`openjdk-8-jdk`'
- en: '`openjdk-17-jdk`'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`openjdk-17-jdk`'
- en: '`ninja-build`'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ninja-build`'
- en: '`gnuplot`'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`gnuplot`'
- en: '`vim`'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`vim`'
- en: '`python3-venv`'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`python3-venv`'
- en: '`libcpuinfo-dev`'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`libcpuinfo-dev`'
- en: '`libspdlog-dev`'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`libspdlog-dev`'
- en: 'You will need a `cmake` package with a version not less than 2.27\. To get
    it on Ubuntu 22.04, you have to download it manually and install it. For example,
    it can be done as follows:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要一个版本不低于 2.27 的 `cmake` 包。在 Ubuntu 22.04 上，您需要手动下载并安装它。例如，可以按照以下步骤操作：
- en: '[PRE0]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Also, you need to install the additional packages for Python, which can be
    done with the following commands:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，您还需要为 Python 安装额外的包，这可以通过以下命令完成：
- en: '[PRE1]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Besides the development environment, you’ll have to check out requisite third-party
    libraries’ source code samples and build them. Most of these libraries are actively
    developed so you provide particular versions (Git tags) that you need to check
    out for our coding samples compatibility. The following table shows you the libraries
    you have to check out, their repository URLs, and the tag or the hash number of
    the commit to check out:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 除了开发环境之外，您还需要检查第三方库的源代码示例并构建它们。大多数这些库都在积极开发中，因此您需要提供特定的版本（Git 标签），以便我们确保代码示例的兼容性。以下表格显示了您需要检查的库、它们的仓库
    URL 以及要检查的提交的标签或哈希号：
- en: '| **Library repository** | **Branch** **name/Tag** | **Commit** |'
  id: totrans-62
  prefs: []
  type: TYPE_TB
  zh: '| **库仓库** | **分支/标签** | **提交** |'
- en: '| --- | --- | --- |'
  id: totrans-63
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| [https://bitbucket.org/blaze-lib/blaze.git](https://bitbucket.org/blaze-lib/blaze.git)
    | v3.8.2 |  |'
  id: totrans-64
  prefs: []
  type: TYPE_TB
  zh: '| [https://bitbucket.org/blaze-lib/blaze.git](https://bitbucket.org/blaze-lib/blaze.git)
    | v3.8.2 |  |'
- en: '| [https://github.com/arrayfire/arrayfire](https://github.com/arrayfire/arrayfire)
    | v3.8.3 |  |'
  id: totrans-65
  prefs: []
  type: TYPE_TB
  zh: '| [https://github.com/arrayfire/arrayfire](https://github.com/arrayfire/arrayfire)
    | v3.8.3 |  |'
- en: '| [https://github.com/flashlight/flashlight.git](https://github.com/flashlight/flashlight.git)
    | v0.4.0 |  |'
  id: totrans-66
  prefs: []
  type: TYPE_TB
  zh: '| [https://github.com/flashlight/flashlight.git](https://github.com/flashlight/flashlight.git)
    | v0.4.0 |  |'
- en: '| [https://github.com/davisking/dlib](https://github.com/davisking/dlib) |
    v19.24.6 |  |'
  id: totrans-67
  prefs: []
  type: TYPE_TB
  zh: '| [https://github.com/davisking/dlib](https://github.com/davisking/dlib) |
    v19.24.6 |  |'
- en: '| [https://gitlab.com/conradsnicta/armadillo-code](https://gitlab.com/conradsnicta/armadillo-code)
    | 14.0.x |  |'
  id: totrans-68
  prefs: []
  type: TYPE_TB
  zh: '| [https://gitlab.com/conradsnicta/armadillo-code](https://gitlab.com/conradsnicta/armadillo-code)
    | 14.0.x |  |'
- en: '| [https://github.com/xtensor-stack/xtl](https://github.com/xtensor-stack/xtl)
    | 0.7.7 |  |'
  id: totrans-69
  prefs: []
  type: TYPE_TB
  zh: '| [https://github.com/xtensor-stack/xtl](https://github.com/xtensor-stack/xtl)
    | 0.7.7 |  |'
- en: '| [https://github.com/xtensor-stack/xtensor](https://github.com/xtensor-stack/xtensor)
    | 0.25.0 |  |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
  zh: '| [https://github.com/xtensor-stack/xtensor](https://github.com/xtensor-stack/xtensor)
    | 0.25.0 |  |'
- en: '| [https://github.com/xtensor-stack/xtensor-blas](https://github.com/xtensor-stack/xtensor-blas)
    | 0.21.0 |  |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
  zh: '| [https://github.com/xtensor-stack/xtensor-blas](https://github.com/xtensor-stack/xtensor-blas)
    | 0.21.0 |  |'
- en: '| [https://github.com/nlohmann/json.git](https://github.com/nlohmann/json.git)
    | v3.11.3 |  |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
  zh: '| [https://github.com/nlohmann/json.git](https://github.com/nlohmann/json.git)
    | v3.11.3 |  |'
- en: '| [https://github.com/mlpack/mlpack](https://github.com/mlpack/mlpack) | 4.5.0
    |  |'
  id: totrans-73
  prefs: []
  type: TYPE_TB
  zh: '| [https://github.com/mlpack/mlpack](https://github.com/mlpack/mlpack) | 4.5.0
    |  |'
- en: '| [https://gitlab.com/libeigen/eigen.git](https://gitlab.com/libeigen/eigen.git)
    | 3.4.0 |  |'
  id: totrans-74
  prefs: []
  type: TYPE_TB
  zh: '| [https://gitlab.com/libeigen/eigen.git](https://gitlab.com/libeigen/eigen.git)
    | 3.4.0 |  |'
- en: '| [https://github.com/BlueBrain/HighFive](https://github.com/BlueBrain/HighFive)
    | v2.10.0 |  |'
  id: totrans-75
  prefs: []
  type: TYPE_TB
  zh: '| [https://github.com/BlueBrain/HighFive](https://github.com/BlueBrain/HighFive)
    | v2.10.0 |  |'
- en: '| [https://github.com/yhirose/cpp-httplib](https://github.com/yhirose/cpp-httplib)
    | v0.18.1 |  |'
  id: totrans-76
  prefs: []
  type: TYPE_TB
  zh: '| [https://github.com/yhirose/cpp-httplib](https://github.com/yhirose/cpp-httplib)
    | v0.18.1 |  |'
- en: '| [https://github.com/Kolkir/plotcpp](https://github.com/Kolkir/plotcpp) |  |
    c86bd4f5d9029986f0d5f368450 d79f0dd32c7e4 |'
  id: totrans-77
  prefs: []
  type: TYPE_TB
  zh: '| [https://github.com/Kolkir/plotcpp](https://github.com/Kolkir/plotcpp) |  |
    c86bd4f5d9029986f0d5f368450d79f0dd32c7e4 |'
- en: '| [https://github.com/ben-strasser/fast-cpp-csv-parser](https://github.com/ben-strasser/fast-cpp-csv-parser)
    |  | 4ade42d5f8c454c6c57b3dce9c51c 6dd02182a66 |'
  id: totrans-78
  prefs: []
  type: TYPE_TB
  zh: '| [https://github.com/ben-strasser/fast-cpp-csv-parser](https://github.com/ben-strasser/fast-cpp-csv-parser)
    |  | 4ade42d5f8c454c6c57b3dce9c51c6dd02182a66 |'
- en: '| [https://github.com/lisitsyn/tapkee](https://github.com/lisitsyn/tapkee)
    |  | Ba5f052d2548ec03dcc6a4ac0e d8deeb79f1d43a |'
  id: totrans-79
  prefs: []
  type: TYPE_TB
  zh: '| [https://github.com/lisitsyn/tapkee](https://github.com/lisitsyn/tapkee)
    |  | Ba5f052d2548ec03dcc6a4ac0ed8deeb79f1d43a |'
- en: '| [https://github.com/Microsoft/onnxruntime.git](https://github.com/Microsoft/onnxruntime.git)
    | v1.19.2 |  |'
  id: totrans-80
  prefs: []
  type: TYPE_TB
  zh: '| [https://github.com/Microsoft/onnxruntime.git](https://github.com/Microsoft/onnxruntime.git)
    | v1.19.2 |  |'
- en: '| [https://github.com/pytorch/pytorch](https://github.com/pytorch/pytorch)
    | v2.3.1 |  |'
  id: totrans-81
  prefs: []
  type: TYPE_TB
  zh: '| [https://github.com/pytorch/pytorch](https://github.com/pytorch/pytorch)
    | v2.3.1 |  |'
- en: Notice that it makes sense to compile and install PyTorch last, due to possible
    conflicts with the `protobuf` library version used by `onnxruntime`.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，由于可能与 `onnxruntime` 使用的 `protobuf` 库版本冲突，最好最后编译和安装 PyTorch。
- en: 'Also, for the last chapter, you may want to install the Android Studio IDE.
    You can download it from the official site at [https://developer.android.com/studio](https://developer.android.com/studio).
    Besides the IDE, you’ll also need to install and configure the Android SDK, NDK,
    and Android-based version of the OpenCV library. The following versions of tools
    are required:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，对于最后一章，你可能需要安装 Android Studio IDE。你可以从官方网站下载它，网址为 [https://developer.android.com/studio](https://developer.android.com/studio)。除了
    IDE，你还需要安装和配置 Android SDK、NDK 以及基于 Android 的 OpenCV 库。以下工具的版本是必需的：
- en: '| **Name** | **Versions** |'
  id: totrans-84
  prefs: []
  type: TYPE_TB
  zh: '| **名称** | **版本** |'
- en: '| OpenCV | 4.10.0 |'
  id: totrans-85
  prefs: []
  type: TYPE_TB
  zh: '| OpenCV | 4.10.0 |'
- en: '| Android command-line tools for Linux | 9477386 |'
  id: totrans-86
  prefs: []
  type: TYPE_TB
  zh: '| Linux 的 Android 命令行工具 | 9477386 |'
- en: '| Android NDK | 26.1.10909125 |'
  id: totrans-87
  prefs: []
  type: TYPE_TB
  zh: '| Android NDK | 26.1.10909125 |'
- en: '| Android platform | 35 |'
  id: totrans-88
  prefs: []
  type: TYPE_TB
  zh: '| Android 平台 | 35 |'
- en: 'You can configure these tools with the Android IDE or command-line tools as
    follows:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用 Android IDE 或命令行工具配置这些工具，如下所示：
- en: '[PRE2]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Another way to configure the development environment is through the use of
    Docker. Docker allows you to configure a lightweight virtual machine with particular
    components. You can install Docker from the official Ubuntu package repository.
    Then, use the scripts provided with this book to automatically configure the environment.
    You will find the `build-env` folder in the `examples` repository. The following
    steps show how to use Docker configuration scripts:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种配置开发环境的方法是通过使用 Docker。Docker 允许你配置一个具有特定组件的轻量级虚拟机。你可以从官方 Ubuntu 软件包仓库安装 Docker。然后，使用本书提供的脚本自动配置环境。你将在
    `examples` 仓库中找到 `build-env` 文件夹。以下步骤展示了如何使用 Docker 配置脚本：
- en: Configure your GitHub account first. Then, you will be able to configure GitHub
    authenticating with SSH, as described in the article *Connecting to GitHub with
    SSH* ([https://docs.github.com/en/authentication/connecting-to-github-with-ssh](https://docs.github.com/en/authentication/connecting-to-github-with-ssh));
    this is the preferred way. Or you can use HTTPS and provide your username and
    password each time a new repository is cloned. If you use 2FA to secure your GitHub
    account, then you’ll need to use a personal access token instead of a password,
    as explained in the article *Creating a personal access* *token* ([https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token](https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token)).
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先配置您的GitHub账户。然后，您将能够配置使用SSH进行GitHub认证，如文章《使用SSH连接GitHub》中所述（[https://docs.github.com/en/authentication/connecting-to-github-with-ssh](https://docs.github.com/en/authentication/connecting-to-github-with-ssh)）；这是首选方式。或者，您可以使用HTTPS，并在克隆新仓库时每次都提供您的用户名和密码。如果您使用双重认证（2FA）来保护您的GitHub账户，那么您需要使用个人访问令牌而不是密码，如《创建个人访问令牌》文章中所述（[https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token](https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token)）。
- en: 'Run the following commands to create the image, run it, and configure the environment:'
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下命令以创建镜像、运行它并配置环境：
- en: '[PRE3]'
  id: totrans-94
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Use the following command to start a new Docker container and share the book
    examples sources with it:'
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令启动一个新的Docker容器，并将书籍示例源代码与之共享：
- en: '[PRE4]'
  id: totrans-96
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Here, `host_examples` is the path to the checked-out example sources from [https://github.com/PacktPublishing/Hands-on-Machine-learning-with-C-Second-Edition.git](https://github.com/PacktPublishing/Hands-on-Machine-learning-with-C-Second-Edition.git)
    and `container_examples_path` is the destination mounting path in the container,
    for example, `/samples`.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，`host_examples`是从[https://github.com/PacktPublishing/Hands-on-Machine-learning-with-C-Second-Edition.git](https://github.com/PacktPublishing/Hands-on-Machine-learning-with-C-Second-Edition.git)检查出的示例源代码的路径，而`container_examples_path`是容器中的目标挂载路径，例如，`/samples`。
- en: 'After running the preceding command, you will be in the command-line environment
    with the necessary configured packages, compiled third-party libraries, and access
    to the programming examples package. You can use this environment to compile and
    run the code examples in this book. Each programming example is configured to
    use the CMake build system so you will be able to build them all in the same way.
    The following script shows a possible scenario of building a code example:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 运行前面的命令后，您将处于具有必要配置的软件包、编译的第三方库和编程示例包的命令行环境。您可以使用此环境编译和运行本书中的代码示例。每个编程示例都配置为使用CMake构建系统，因此您将以相同的方式构建它们。以下脚本展示了一个构建代码示例的可能场景：
- en: '[PRE5]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: This is the manual approach. We also provide ready-to-use scripts to build each
    example. These scripts are placed in the `build_scripts` folder of the repository.
    For example, the build script for the first chapter is `build_ch1.sh`, which can
    be run directly from this folder.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 这是手动方法。我们还提供了可用于构建每个示例的现成脚本。这些脚本位于存储库的`build_scripts`文件夹中。例如，第一章的构建脚本为`build_ch1.sh`，可以直接从这个文件夹中运行。
- en: If you are going to configure your build environment manually, take care of
    the `LIBS_DIR` variable that should point to the folder where all third-party
    libraries are installed; using the provided build scripts for the Docker environment,
    it will point to `$HOME/development/libs`.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您打算手动配置构建环境，请注意`LIBS_DIR`变量，它应该指向所有第三方库安装的文件夹；使用提供的Docker环境构建脚本，它将指向`$HOME/development/libs`。
- en: 'Also, you can configure your local machine environment to share X Server with
    a Docker container to be able to run graphical UI applications from this container.
    It will allow you to use, for example, the Android Studio IDE or a C++ IDE (such
    as Qt Creator) from the Docker container, without local installation. The following
    script shows how to do this:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，您还可以配置您的本地机器环境，以便与Docker容器共享X服务器，从而能够从这个容器中运行图形用户界面应用程序。这将允许您从Docker容器中使用，例如，Android
    Studio IDE或C++ IDE（如Qt Creator），而无需本地安装。以下脚本展示了如何进行此操作：
- en: '[PRE6]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: To be more comfortable with understanding and building the code examples, we
    recommend you carefully read the documentation for each third-party library, and
    take some time to learn the basics of the Docker system and of development for
    the Android platform. Also, we assume that you have sufficient working knowledge
    of the C++ language and compilers and that you are familiar with the CMake build
    system.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更舒适地理解和构建代码示例，我们建议你仔细阅读每个第三方库的文档，并花一些时间学习Docker系统的基本知识和Android平台开发。此外，我们假设你具备足够的C++语言和编译器的实际知识，并且熟悉CMake构建系统。
- en: If you are using the digital version of this book, we advise you to type the
    code yourself or access the code via the GitHub repository (link available in
    the following section). Doing so will help you avoid any potential errors related
    to the copying and pasting of code.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你正在使用这本书的数字版，我们建议你亲自输入代码或通过GitHub仓库（以下章节中有链接）访问代码。这样做将帮助你避免与代码复制粘贴相关的任何潜在错误。
- en: Download the example code files
  id: totrans-106
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载示例代码文件
- en: You can download the example code files for this book from GitHub at [https://github.com/PacktPublishing/Hands-on-Machine-learning-with-C-Second-Edition](https://github.com/PacktPublishing/Hands-on-Machine-learning-with-C-Second-Edition).
    If there’s an update to the code, it will be updated in the GitHub repository.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以从GitHub下载这本书的示例代码文件，链接为[https://github.com/PacktPublishing/Hands-on-Machine-learning-with-C-Second-Edition](https://github.com/PacktPublishing/Hands-on-Machine-learning-with-C-Second-Edition)。如果代码有更新，它将在GitHub仓库中更新。
- en: We also have other code bundles from our rich catalog of books and videos available
    at [https://github.com/PacktPublishing/](https://github.com/PacktPublishing/).
    Check them out!
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还有其他来自我们丰富图书和视频目录的代码包，可在[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)找到。查看它们吧！
- en: Conventions used
  id: totrans-109
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用的约定
- en: There are a number of text conventions used throughout this book.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 本书使用了多种文本约定。
- en: '`Code in text`: Indicates code words in text, database table names, folder
    names, filenames, file extensions, pathnames, dummy URLs, user input, and Twitter/X
    handles. Here is an example: “The `Dlib` library doesn’t have many classification
    algorithms.”'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: '`文本中的代码`：表示文本中的代码单词、数据库表名、文件夹名、文件名、文件扩展名、路径名、虚拟URL、用户输入和Twitter/X用户名。以下是一个示例：“`Dlib`库没有很多分类算法。”'
- en: 'A block of code is set as follows:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块设置如下：
- en: '[PRE7]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们希望引起你对代码块中特定部分的注意时，相关的行或项目将以粗体显示：
- en: '[PRE8]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Any command-line input or output is written as follows:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 任何命令行输入或输出都按照以下方式编写：
- en: '[PRE9]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '**Bold**: Indicates a new term, an important word, or words that you see onscreen.
    For instance, words in menus or dialog boxes appear in **bold**. Here is an example:
    “In the **one-against-all** strategy for N classes, N classifiers are trained,
    each of which separates its class from all other classes.”'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '**粗体**：表示新术语、重要单词或屏幕上看到的单词。例如，菜单或对话框中的单词以**粗体**显示。以下是一个示例：“在N类的一对一策略中，训练了N个分类器，每个分类器将其类别与其他所有类别分开。”'
- en: Tips or important notes
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 小贴士或重要提示
- en: Appear like this.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 看起来是这样的。
- en: Get in touch
  id: totrans-121
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 联系我们
- en: Feedback from our readers is always welcome.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 欢迎读者反馈。
- en: '**General feedback**: If you have questions about any aspect of this book,
    email us at [customercare@packtpub.com](mailto:customercare@packtpub.com) and
    mention the book title in the subject of your message.'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '**一般反馈**：如果你对本书的任何方面有疑问，请通过电子邮件发送给我们[customercare@packtpub.com](mailto:customercare@packtpub.com)，并在邮件主题中提及书名。'
- en: '**Errata**: Although we have taken every care to ensure the accuracy of our
    content, mistakes do happen. If you have found a mistake in this book, we would
    be grateful if you would report this to us. Please visit [www.packtpub.com/support/errata](http://www.packtpub.com/support/errata)
    and fill in the form.'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '**勘误**：尽管我们已经尽一切努力确保内容的准确性，但错误仍然可能发生。如果你在这本书中发现了错误，我们将非常感激如果你能向我们报告。请访问[www.packtpub.com/support/errata](http://www.packtpub.com/support/errata)并填写表格。'
- en: '**Piracy**: If you come across any illegal copies of our works in any form
    on the internet, we would be grateful if you would provide us with the location
    address or website name. Please contact us at [copyright@packtpub.com](mailto:copyright@packtpub.com)
    with a link to the material.'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '**盗版**：如果你在互联网上以任何形式发现我们作品的非法副本，我们将非常感激如果你能提供位置地址或网站名称。请通过电子邮件[copyright@packtpub.com](mailto:copyright@packtpub.com)与我们联系，并提供材料的链接。'
- en: '**If you are interested in becoming an author**: If there is a topic that you
    have expertise in and you are interested in either writing or contributing to
    a book, please visit [authors.packtpub.com](http://authors.packtpub.com).'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: '**如果你有兴趣成为作者**：如果你在某个领域有专业知识，并且你感兴趣的是撰写或为书籍做出贡献，请访问[authors.packtpub.com](http://authors.packtpub.com)。'
- en: Share Your Thoughts
  id: totrans-127
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 分享你的想法
- en: Once you’ve read *Hands-On Machine Learning with C++*, we’d love to hear your
    thoughts! Please [click here to go straight to the Amazon review page](https://packt.link/r/1-805-12057-3)
    for this book and share your feedback.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你阅读了《Hands-On Machine Learning with C++》，我们很乐意听到你的想法！请[点击此处直接进入本书的亚马逊评论页面](https://packt.link/r/1-805-12057-3)并分享你的反馈。
- en: Your review is important to us and the tech community and will help us make
    sure we’re delivering excellent quality content.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 你的评论对我们和科技社区都很重要，并将帮助我们确保我们提供高质量的内容。
- en: Download a free PDF copy of this book
  id: totrans-130
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载本书的免费PDF副本
- en: Thanks for purchasing this book!
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢您购买本书！
- en: Do you like to read on the go but are unable to carry your print books everywhere?
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 你喜欢在路上阅读，但无法携带你的印刷书籍到处走吗？
- en: Is your eBook purchase not compatible with the device of your choice?
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 你的电子书购买是否与你的选择设备不兼容？
- en: Don’t worry, now with every Packt book you get a DRM-free PDF version of that
    book at no cost.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 别担心，现在每购买一本Packt图书，你都可以免费获得该书的DRM免费PDF版本。
- en: Read anywhere, any place, on any device. Search, copy, and paste code from your
    favorite technical books directly into your application.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 在任何地方、任何设备上阅读。直接从你最喜欢的技术书籍中搜索、复制和粘贴代码到你的应用程序中。
- en: The perks don’t stop there, you can get exclusive access to discounts, newsletters,
    and great free content in your inbox daily
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 优惠不仅限于此，你还可以获得独家折扣、时事通讯和每日免费内容的每日电子邮件。
- en: 'Follow these simple steps to get the benefits:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下简单步骤获取福利：
- en: Scan the QR code or visit the link below
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 扫描下面的二维码或访问以下链接
- en: '![](img/B19849_QR_Free_PDF.jpg)'
  id: totrans-139
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B19849_QR_Free_PDF.jpg)'
- en: '[https://packt.link/free-ebook/9781805120575](https://packt.link/free-ebook/9781805120575)'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://packt.link/free-ebook/9781805120575](https://packt.link/free-ebook/9781805120575)'
- en: Submit your proof of purchase
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 提交你的购买证明
- en: That’s it! We’ll send your free PDF and other benefits to your email directly
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 就这些！我们将直接将你的免费PDF和其他福利发送到你的电子邮件。
- en: Part 1:Overview of Machine Learning
  id: totrans-143
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第1部分：机器学习概述
- en: In this part, we will delve into the basics of machine learning with the help
    of examples in C++ and various machine learning frameworks. We’ll demonstrate
    how to load data from various file formats and describe model performance measuring
    techniques and the best model selection approaches.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 在这部分，我们将借助C++和各种机器学习框架的示例，深入探讨机器学习的基础知识。我们将展示如何从各种文件格式加载数据，并描述模型性能测量技术和最佳模型选择方法。
- en: 'This part comprises the following chapters:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 本部分包括以下章节：
- en: '[*Chapter 1*](B19849_01.xhtml#_idTextAnchor015), *Introduction to Machine Learning
    with C++*'
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第1章*](B19849_01.xhtml#_idTextAnchor015)，*使用C++的机器学习简介*'
- en: '[*Chapter 2*](B19849_02.xhtml#_idTextAnchor075), *Data Processing*'
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第2章*](B19849_02.xhtml#_idTextAnchor075)，*数据处理*'
- en: '[*Chapter 3*](B19849_03.xhtml#_idTextAnchor152), *Measuring Performance and
    Selecting Models*'
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第3章*](B19849_03.xhtml#_idTextAnchor152)，*性能测量和模型选择*'
