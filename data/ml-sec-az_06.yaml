- en: '6'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '6'
- en: Managing and Securing Access
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 管理和保障访问
- en: Up to this point, we have talked mostly about data, which is the basis of ML.
    But when it comes to security, there are other aspects we need to explore. Let
    us dive into identity and how we can manage access in Azure Machine Learning.
    As we embark on a journey through this chapter, we will first lay the groundwork
    by exploring the essence of the **principle of least privilege** (**PoLP**) and
    its importance. Although simple in theory, there are many things we need to consider
    before we start the implementation of Azure Machine Learning.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们主要讨论了数据，这是机器学习的基础。但谈到安全，我们还需要探索其他方面。让我们深入了解身份，以及我们如何在Azure机器学习中管理访问。随着我们开始本章的旅程，我们首先将探索**最小权限原则**（PoLP）的本质及其重要性。虽然理论上很简单，但在开始实施Azure机器学习之前，我们需要考虑许多事情。
- en: We will follow up by exploring all the identity features of Microsoft Entra.
    We will see authentication options available and how to work with permissions
    by implementing **role-based access control** (**RBAC**). We will see how to authenticate
    applications and services using managed identities and how to secure access using
    tools such as Key Vault. Finally, we will talk about how to automate the processes
    by using Conditional Access and **Privileged Identity Management** (**PIM**).
    The best practices in this chapter can be applied not only to Azure Machine Learning
    but to other services in Azure as well.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将接着探讨Microsoft Entra的所有身份功能。我们将看到可用的身份验证选项，以及如何通过实施**基于角色的访问控制**（RBAC）来处理权限。我们将了解如何使用托管身份进行应用程序和服务的身份验证，以及如何使用诸如密钥保管库等工具来保障访问。最后，我们将讨论如何通过使用条件访问和**特权身份管理**（PIM）来自动化流程。本章中的最佳实践不仅适用于Azure机器学习，也适用于Azure中的其他服务。
- en: 'In this chapter, we’re going to cover the following main topics:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主要主题：
- en: Working with the PoLP
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与PoLP合作
- en: Authenticating with Microsoft Entra ID
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Microsoft Entra ID进行身份验证
- en: Implementing RBAC
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实施RBAC
- en: Authenticating with application identities
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用应用程序身份进行身份验证
- en: Enhancing access security
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 增强访问安全性
- en: By the end of this chapter, you will have learned how to apply access management
    effectively by implementing PoLP in Azure Machine Learning.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 到本章结束时，你将学会如何通过在Azure机器学习中实施PoLP来有效地应用访问管理。
- en: Working with the PoLP
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 与PoLP合作
- en: As we mentioned in [*Chapter 1*](B21076_01.xhtml#_idTextAnchor015) when we talked
    about the Zero Trust strategy, we learned about the PoLP, which states that users,
    devices, and applications should only be granted access to the minimum level of
    resources necessary to perform their job functions. Users are often given more
    access privileges to network resources and data, assuming they only access the
    resources required to perform their daily tasks. However, this tactic imposes
    a greater risk of unauthorized access. When users have access to resources they
    don’t need, attackers can take advantage of it. While providing just enough permissions
    to apps or users to complete their tasks sounds easy, the implementation can present
    some challenges. Creating overprivileged applications is never the intention,
    but usually the result of unplanned actions over time.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在[*第一章*](B21076_01.xhtml#_idTextAnchor015)中提到的，当我们讨论零信任策略时，我们学习了PoLP，它指出用户、设备和应用程序应该只被授予执行其工作职能所需的最小资源访问权限。通常，用户会被赋予更多的网络资源和数据访问权限，假设他们只访问执行日常任务所需的资源。然而，这种策略增加了未经授权访问的风险。当用户有权访问他们不需要的资源时，攻击者可以利用这一点。虽然只给应用程序或用户足够的权限来完成他们的任务听起来很简单，但实施过程中可能会遇到一些挑战。创建过度授权的应用程序从来不是目的，但通常是由于长期未计划的行为所导致的结果。
- en: '**Overprivileged applications** are software applications that have been granted
    more access rights, permissions, or privileges than they actually require to perform
    their intended tasks. An application is characterized as overprivileged if it
    includes unused as well as reducible permissions. Let us see some examples.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**过度授权的应用程序**是指那些被赋予了比实际完成任务所需更多的访问权限、权限或特权的软件应用程序。如果一个应用程序包含了未使用以及可减少的权限，那么它就被认为是过度授权的。让我们来看一些例子。'
- en: Suppose we have an application that includes a user profile, where the user
    signs in and the application pulls all the information from the identity management
    system. The application’s usage has nothing to do with user profile updates and
    is just using the user’s profile information to get the manager or department
    information to complete other business tasks, so it does not include an **Edit
    profile** functionality. However, the application has the permissions needed to
    edit the profile information. This is an example of reducible permissions, where
    the application needs to read the data but not write in the system. Suppose that
    the same application also uses an API endpoint to get predictions from an ML model,
    and additionally has permissions to start or stop the Azure Machine Learning compute.
    This would be an example of unused permissions as the application has nothing
    to do with model training and the Azure Machine Learning compute.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们有一个包含用户资料的应用程序，用户在此登录后，应用程序会从身份管理系统拉取所有信息。该应用程序的使用与用户资料更新无关，只是使用用户的资料信息来获取经理或部门信息以完成其他业务任务，因此它不包括**编辑资料**的功能。然而，该应用程序具有编辑资料信息的权限。这是一个可减少权限的例子，其中应用程序需要读取数据但不需要在系统中写入。假设同一个应用程序还使用API端点从机器学习模型获取预测，并且还具有启动或停止Azure机器学习计算权限。这将是未使用权限的例子，因为该应用程序与模型训练和Azure机器学习计算无关。
- en: It is tempting to include permissions to an application that will apply to future
    releases as we are often reluctant to modify deployed applications to avoid impacting
    their normal business operations. However, we must always consider the risks that
    accompany such decisions. Applying the PoLP is more of an iterative process than
    a rule.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们不愿意修改已部署的应用程序以避免影响其正常业务运营时，将权限包括到应用程序中以便应用于未来的版本是很诱人的。然而，我们必须始终考虑伴随此类决策的风险。应用PoLP更像是一个迭代过程，而不是一条规则。
- en: 'Let us review some best practices before we dive into the implementations for
    Azure Machine Learning:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们深入到Azure机器学习的实现之前，让我们回顾一些最佳实践：
- en: '**Application inventory**: The first step is to keep an updated inventory of
    all applications in our organization. This includes both in-house developed applications
    and third-party applications and their required permissions. This can be part
    of our governance program.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**应用程序清单**：第一步是保持我们组织中所有应用程序的最新清单。这包括内部开发的应用程序和第三方应用程序及其所需的权限。这可以是我们的治理计划的一部分。'
- en: '**RBAC**: We can implement RBAC to define and assign roles that align with
    specific application functions. The best approach is to assign permissions based
    on the PoLP to ensure that applications only have the access they need and re-evaluate
    this access when appropriate.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**基于角色的访问控制（RBAC）**：我们可以实施RBAC来定义和分配与特定应用程序功能相一致的角色。最佳做法是根据PoLP分配权限，以确保应用程序仅具有所需的访问权限，并在适当的时候重新评估这种访问权限。'
- en: '**Regular reviews**: We need to periodically review the permissions granted
    to applications and remove any unnecessary or unused permissions that could potentially
    be exploited.'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**定期审查**：我们需要定期审查授予应用程序的权限，并移除任何可能被滥用的不必要或未使用的权限。'
- en: '**Automated tools**: It is always preferable to use automated tools to continuously
    analyze application permissions and identify overprivileged applications. These
    tools can provide insights into which permissions are actually being used and
    which can be revoked. For Azure, we can use Conditional Access policies and PIM
    as part of Microsoft Entra ID.'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**自动化工具**：始终使用自动化工具来持续分析应用程序权限并识别过度授权的应用程序是更好的选择。这些工具可以提供有关哪些权限实际上正在使用以及哪些可以撤销的见解。对于Azure，我们可以使用条件访问策略和PIM作为Microsoft
    Entra ID的一部分。'
- en: '**Zero Trust architecture**: As mentioned in [*Chapter 1*](B21076_01.xhtml#_idTextAnchor015),
    applying a zero-trust architecture when possible, where applications are not automatically
    trusted based on their location or source, is always beneficial. We should always
    verify the identity and permissions of applications before granting access.'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**零信任架构**：如[*第一章*](B21076_01.xhtml#_idTextAnchor015)中所述，在可能的情况下应用零信任架构，即应用程序不是基于其位置或来源自动获得信任，这总是有益的。在授予访问权限之前，我们应该始终验证应用程序的身份和权限。'
- en: '**Continuous monitoring**: After any implementation, continuously monitor application
    behavior and access patterns. Detecting and investigating any unusual or unauthorized
    activities should be one of our priorities to identify any breaches as soon as
    possible.'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**持续监控**：在实施后，持续监控应用程序行为和访问模式。检测和调查任何异常或未经授权的活动应该是我们优先考虑的事项之一，以便尽快识别任何违规行为。'
- en: '**Training and awareness**: We should never forget the human factor. Everyone
    from developers and IT staff to data scientists should be educated about the importance
    of preventing overprivileged applications. As part of our organization’s governance,
    we should provide guidelines for implementing secure access controls.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**培训和意识提升**：我们永远不应该忘记人为因素。从开发人员、IT 人员到数据科学家，每个人都应该了解防止过度授权应用程序的重要性。作为我们组织治理的一部分，我们应该提供实施安全访问控制的指南。'
- en: Adhering to the PoLP is challenging as it requires a thorough understanding
    of user roles, responsibilities, and system interactions, and it is an iterative
    and continuous process. It can also become more complicated the more applications
    and systems we have. However, the security benefits it provides, by minimizing
    the potential impact of security breaches, make it an essential practice in any
    organization’s information security strategy.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 遵守 PoLP 具有挑战性，因为它需要彻底了解用户角色、责任和系统交互，并且是一个迭代和持续的过程。随着我们拥有更多应用程序和系统，它也可能变得更加复杂。然而，它通过最小化安全漏洞的潜在影响所提供的安全效益，使它成为任何组织信息安全策略中的基本实践。
- en: Let us explore how to implement the PoLP in Azure Machine Learning.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们探讨如何在 Azure Machine Learning 中实施 PoLP。
- en: Authenticating with Microsoft Entra ID
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Microsoft Entra ID 进行身份验证
- en: Azure Machine Learning uses **Microsoft Entra ID** (previously **Azure Active
    Directory** (**Azure AD**)) for authentication. Microsoft Entra ID is Microsoft’s
    cloud-based **identity and access management** (**IAM**) service. It’s designed
    to help organizations manage user identities and access to resources in the cloud
    and on-premises.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: Azure Machine Learning 使用 **Microsoft Entra ID**（之前称为 **Azure Active Directory**（**Azure
    AD**））进行身份验证。Microsoft Entra ID 是微软基于云的 **身份和访问管理**（**IAM**）服务。它旨在帮助组织管理云和本地资源中的用户身份和访问权限。
- en: 'When you are logged in to the Azure portal, the same account is used to directly
    authenticate you to your Azure Machine Learning Studio session. So, anyone working
    on your ML project needs to be part of the Microsoft Entra ID workspace. That
    does not mean that only employees have access to the workspace. Microsoft Entra
    ID supports two types of users: members and guests. Members are users that are
    created within the Microsoft Entra ID tenant, while guests can be users that belong
    to other Microsoft Entra tenants or are personal accounts such as Outlook, Gmail,
    Hotmail, and so on. But as soon as you create or invite a user in your Microsoft
    Entra ID tenant, then you can assign them roles and treat them as part of your
    organization.'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 当您登录到 Azure 门户时，相同的账户被用来直接验证您进入 Azure Machine Learning Studio 会话。因此，任何在您的 ML
    项目上工作的人都需要成为 Microsoft Entra ID 工作空间的一部分。这并不意味着只有员工才能访问工作空间。Microsoft Entra ID
    支持两种类型的用户：成员和访客。成员是在 Microsoft Entra ID 客户端内创建的用户，而访客可以是属于其他 Microsoft Entra 客户端或个人账户，如
    Outlook、Gmail、Hotmail 等。但是，一旦您在 Microsoft Entra ID 客户端中创建或邀请用户，您就可以为他们分配角色，并将他们视为组织的一部分。
- en: Ways to authenticate using Microsoft Entra ID in Azure Machine Learning include
    interactive authentication directly with your account, the Azure CLI, service
    principals, and managed identities, which we will explore later in this chapter.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Azure Machine Learning 中使用 Microsoft Entra ID 进行身份验证的方法包括直接与您的账户进行交互式身份验证、Azure
    CLI、服务主体和管理身份，这些我们将在本章后面进行探讨。
- en: Microsoft Entra ID is widely used across various industries and is an integral
    part of Microsoft’s cloud offerings, including Azure, Microsoft 365, and Dynamics
    365\. It’s a critical component for securing and managing access to cloud resources
    and ensuring that users have the appropriate level of access to applications and
    data while maintaining a high level of security.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: Microsoft Entra ID 在各个行业中得到广泛应用，并且是微软云服务（包括 Azure、Microsoft 365 和 Dynamics 365）的重要组成部分。它是确保云资源安全和管理访问权限的关键组件，同时确保用户在保持高安全水平的情况下，拥有适当的访问级别。
- en: Here is how we can use its security features to secure our Azure Machine Learning
    workloads.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是我们如何利用其安全功能来保护我们的 Azure Machine Learning 工作负载。
- en: Implementing RBAC
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实施RBAC
- en: RBAC is a built-in feature of Microsoft Entra ID that allows you to manage access
    to Azure resources using roles. This way, we can control who can perform specific
    actions on resources in Azure. This helps in maintaining a secure environment
    and ensures that users have only the permissions they need to perform their tasks.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: RBAC是Microsoft Entra ID的内置功能，允许您使用角色管理对Azure资源的访问。这样，我们可以控制谁可以在Azure资源上执行特定操作。这有助于维护安全的环境，并确保用户只有执行任务所需的权限。
- en: 'Each role in RBAC is essentially a set of distinct permissions that operate
    in different scopes. We can assign a role to a management group, subscription,
    resource group, and resource. A role assignment at a higher scope is inherited
    by resources at a lower scope. For example, if we assign a role to a user at the
    subscription level, they will have those permissions across all resources within
    that subscription. Each role assignment in Azure has three distinct parts—the
    role, the scope, and the service principal, as we can see in the following diagram:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: RBAC中的每个角色本质上是一组在不同范围内操作的独立权限。我们可以将角色分配给管理组、订阅、资源组或资源。在较高范围内的角色分配会继承较低范围内资源的权限。例如，如果我们在一个订阅级别为用户分配角色，他们将拥有该订阅内所有资源的那些权限。Azure中的每个角色分配都有三个不同的部分——角色、范围和服务主体，如下面的图所示：
- en: '![Figure 6.1 – Role assignment](img/B21076_06_1.jpg)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![图6.1 – 角色分配](img/B21076_06_1.jpg)'
- en: Figure 6.1 – Role assignment
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.1 – 角色分配
- en: The principle can be a user, a group of users, or a service principal such as
    an application or an Azure resource. We will explore service principals a little
    bit more later in the chapter when we talk about application identities and managed
    identities.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 原则可以是用户、一组用户或服务主体，例如应用程序或Azure资源。我们将在本章后面讨论应用程序标识和管理标识时，更深入地探讨服务主体。
- en: 'There are two types of roles: built-in and custom. Built-in roles are created
    by Azure, and we can assign them at any time. If they do not cover your needs,
    you can combine different roles to get the result you desire or create your own
    custom role to use with the service.'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 有两种类型的角色：内置和自定义。内置角色由Azure创建，我们可以随时分配它们。如果它们不能满足您的需求，您可以组合不同的角色以获得您想要的结果，或者创建自己的自定义角色以用于服务。
- en: Let us see how we can assign or create RBAC roles specifically for Azure Machine
    Learning.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看我们如何为Azure机器学习特别分配或创建RBAC角色。
- en: Working with built-in roles
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用内置角色
- en: Azure offers over 400 built-in roles, such as **Virtual Machine Contributor**,
    **Storage Account Contributor**, and more. Each built-in role corresponds to specific
    scopes, actions, and services in Azure.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: Azure提供了超过400个内置角色，例如**虚拟机贡献者**、**存储账户贡献者**等。每个内置角色对应Azure中的特定范围、操作和服务。
- en: 'There are three roles that are a must-know and apply to all Azure services—the
    **Owner**, **Contributor**, and **Reader** roles. Here are their descriptions
    in the following screenshot:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 有三个角色是必须了解并应用于所有Azure服务的，即**所有者**、**贡献者**和**读取者**角色。以下截图显示了它们的描述：
- en: '![Figure 6.2 – Core RBAC roles for Azure resources](img/B21076_06_2.jpg)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![图6.2 – Azure资源的核心RBAC角色](img/B21076_06_2.jpg)'
- en: Figure 6.2 – Core RBAC roles for Azure resources
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.2 – Azure资源的核心RBAC角色
- en: 'Then, we have Azure Machine Learning-specific roles that we need to be aware
    of. Here are descriptions of the most important roles we need to know when we
    are working with Azure Machine Learning:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们还有需要了解的Azure机器学习特定角色。以下是我们在与Azure机器学习一起工作时需要了解的最重要角色的描述：
- en: '![Figure 6.3 – RBAC roles for Azure Machine Learning](img/B21076_06_3.jpg)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![图6.3 – Azure机器学习的RBAC角色](img/B21076_06_3.jpg)'
- en: Figure 6.3 – RBAC roles for Azure Machine Learning
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.3 – Azure机器学习的RBAC角色
- en: As you can see, the roles have been built around specific employee roles and
    encompass certain tasks around data scientists or compute operators for ML. Of
    course, if you have a different structure in your organization, you can assign
    two roles to the same person and have them complete all the relevant tasks in
    Azure.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，角色是围绕特定员工角色构建的，并包括围绕数据科学家或ML计算操作员的一定任务。当然，如果您在组织中有不同的结构，您可以给同一个人分配两个角色，让他们完成Azure中所有相关的任务。
- en: Let us review how to work with role assignments.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们回顾一下如何处理角色分配。
- en: Adding a role assignment
  id: totrans-50
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 添加角色分配
- en: 'As owners of the workspace, we can assign or remove roles to/from users and
    the workspace at any time using the Azure portal, the command-line tools, and
    even **Azure Resource Manager** (**ARM**) templates if we have complex assignments
    that we want to repeat. The process is simple. In every resource blade on the
    top left, we can see that there is an **Access control (****IAM)** menu:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 作为工作区所有者，我们可以随时使用 Azure 门户、命令行工具，甚至**Azure 资源管理器（ARM）**模板（如果我们有希望重复的复杂分配）为用户和工作区分配或移除角色。这个过程很简单。在左上角的每个资源页面上，我们可以看到有一个**访问控制（IAM）**菜单：
- en: '![Figure 6.4 – Azure Access control (IAM) menu](img/B21076_06_4.jpg)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.4 – Azure 访问控制（IAM）菜单](img/B21076_06_4.jpg)'
- en: Figure 6.4 – Azure Access control (IAM) menu
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.4 – Azure 访问控制（IAM）菜单
- en: From this blade, you can see existing role assignments and roles, and you can
    add or remove access to the resource. In this case, we have opened the **Subscription**
    blade, which means that any role assignments we change are going to be inherited
    by any resource groups and resources under this subscription.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 从这个页面上，您可以查看现有的角色分配和角色，并可以添加或移除对资源的访问权限。在这种情况下，我们打开了**订阅**页，这意味着我们更改的任何角色分配都将继承此订阅下的任何资源组及其资源。
- en: 'To add a role assignment, click the **Add** button on the top. Follow the three-step
    wizard to add your role assignment:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 要添加角色分配，请点击顶部的**添加**按钮。按照三个步骤向导添加您的角色分配：
- en: 'The first step is to choose a role. For this example, I will choose **Reader**:'
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第一步是选择一个角色。在这个例子中，我将选择**读取者**：
- en: '![Figure 6.5 – Step 1: Choosing a role](img/B21076_06_5.jpg)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.5 – 步骤 1：选择角色](img/B21076_06_5.jpg)'
- en: 'Figure 6.5 – Step 1: Choosing a role'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.5 – 步骤 1：选择角色
- en: 'The second step is to choose members for the selected role. You can add multiple
    members by clicking the **Select** **members** button:'
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第二步是选择所选角色的成员。您可以通过点击**选择****成员**按钮添加多个成员：
- en: '![Figure 6.6 – Step 2: Adding members](img/B21076_06_6.jpg)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.6 – 步骤 2：添加成员](img/B21076_06_6.jpg)'
- en: 'Figure 6.6 – Step 2: Adding members'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.6 – 步骤 2：添加成员
- en: That is it! The final step is to review and complete the assignment.
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 就这些了！最后一步是审查并完成分配。
- en: 'If you want to use the command-line tools, here is an example in the CLI:'
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果您想使用命令行工具，这里是一个 CLI 中的示例：
- en: '[PRE0]'
  id: totrans-64
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Role assignment documentation
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 角色分配文档
- en: 'To view more options to assign roles using the Azure tools, follow the corresponding
    link to the tool of your choice:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看使用 Azure 工具分配角色的更多选项，请点击您选择的工具的相应链接：
- en: 'CLI: [https://learn.microsoft.com/en-us/azure/role-based-access-control/role-assignments-cli](https://learn.microsoft.com/en-us/azure/role-based-access-control/role-assignments-cli)'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 'CLI: [https://learn.microsoft.com/en-us/azure/role-based-access-control/role-assignments-cli](https://learn.microsoft.com/en-us/azure/role-based-access-control/role-assignments-cli)'
- en: 'PowerShell: [https://learn.microsoft.com/en-us/azure/role-based-access-control/role-assignments-powershell](https://learn.microsoft.com/en-us/azure/role-based-access-control/role-assignments-powershell)'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 'PowerShell: [https://learn.microsoft.com/en-us/azure/role-based-access-control/role-assignments-powershell](https://learn.microsoft.com/en-us/azure/role-based-access-control/role-assignments-powershell)'
- en: 'REST API: [https://learn.microsoft.com/en-us/azure/role-based-access-control/role-assignments-rest](https://learn.microsoft.com/en-us/azure/role-based-access-control/role-assignments-rest)'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 'REST API: [https://learn.microsoft.com/en-us/azure/role-based-access-control/role-assignments-rest](https://learn.microsoft.com/en-us/azure/role-based-access-control/role-assignments-rest)'
- en: 'ARM templates: [https://learn.microsoft.com/en-us/azure/role-based-access-control/role-assignments-template](https://learn.microsoft.com/en-us/azure/role-based-access-control/role-assignments-template)'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 'ARM 模板: [https://learn.microsoft.com/en-us/azure/role-based-access-control/role-assignments-template](https://learn.microsoft.com/en-us/azure/role-based-access-control/role-assignments-template)'
- en: Adding role assignments is just one part of the story. Let us see how to review
    our existing assignments and remove them when necessary.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 添加角色分配只是故事的一部分。让我们看看如何审查现有的分配，并在必要时移除它们。
- en: Viewing and removing role assignments
  id: totrans-72
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 查看和移除角色分配
- en: 'The process to view and remove role assignments is just as simple. The first
    step is to visit the resource you want to check the role assignments for and open
    the **Access control (IAM)** menu. There, on the **Role assignments** tab, you
    can see existing role assignments, as shown in the following screenshot:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 查看和移除角色分配的过程同样简单。第一步是访问您想要检查角色分配的资源，并打开**访问控制（IAM）**菜单。在那里，在**角色分配**选项卡上，您可以查看现有的角色分配，如下面的截图所示：
- en: '![Figure 6.7 – Removing a role assignment](img/B21076_06_7.jpg)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.7 – 移除角色分配](img/B21076_06_7.jpg)'
- en: Figure 6.7 – Removing a role assignment
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.7 – 移除角色分配
- en: By clicking on the box on the left of the role assignment in the user list,
    the **Remove** button on the top is enabled. You can click **Remove** and **Confirm**
    to remove the assignment.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 通过点击用户列表中角色分配左侧的框，顶部将启用 **删除** 按钮。您可以点击 **删除** 并 **确认** 来删除分配。
- en: 'As with adding an assignment, you can use the command-line tools. Here is an
    example of removing an assignment using the CLI:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 与添加分配一样，您可以使用命令行工具。以下是一个使用 CLI 删除分配的示例：
- en: '[PRE1]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Role assignment documentation
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 角色分配文档
- en: 'To view more options to remove role assignments using the Azure tools, follow
    this link: [https://learn.microsoft.com/en-us/azure/role-based-access-control/role-assignments-remove](https://learn.microsoft.com/en-us/azure/role-based-access-control/role-assignments-remove)'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看更多使用 Azure 工具删除角色分配的选项，请遵循此链接：[https://learn.microsoft.com/en-us/azure/role-based-access-control/role-assignments-remove](https://learn.microsoft.com/en-us/azure/role-based-access-control/role-assignments-remove)
- en: Built-in roles are not the only way to assign permissions. Let us review custom
    roles.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 内置角色并非唯一分配权限的方式。让我们来回顾一下自定义角色。
- en: Creating a custom role for Azure Machine Learning
  id: totrans-82
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为 Azure 机器学习创建自定义角色
- en: 'The built-in roles are great, but sometimes they do not provide exactly what
    we need to properly restrict permissions of our users. In that case, we have the
    option of creating our own custom roles that have the exact permissions we need
    to complete the tasks necessary. A role is essentially a set of permissions. This
    set of permissions is described as a JSON file. You can find an example of the
    Contributor role in JSON format here: [https://learn.microsoft.com/en-us/azure/role-based-access-control/role-definitions-list](https://learn.microsoft.com/en-us/azure/role-based-access-control/role-definitions-list).'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 内置角色很棒，但有时它们并不提供我们正确限制用户权限所需的确切权限。在这种情况下，我们有创建自己的自定义角色的选项，这些角色具有我们完成任务所需的精确权限。角色本质上是一组权限。这组权限被描述为一个
    JSON 文件。您可以在以下位置找到贡献者角色的 JSON 格式示例：[https://learn.microsoft.com/en-us/azure/role-based-access-control/role-definitions-list](https://learn.microsoft.com/en-us/azure/role-based-access-control/role-definitions-list).
- en: Custom role overview
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 自定义角色概述
- en: 'If you want to learn more about Azure custom role properties, see the information
    provided in this link: [https://learn.microsoft.com/en-us/azure/role-based-access-control/custom-roles](https://learn.microsoft.com/en-us/azure/role-based-access-control/custom-roles)'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想了解更多关于 Azure 自定义角色属性的信息，请参阅此链接提供的信息：[https://learn.microsoft.com/en-us/azure/role-based-access-control/custom-roles](https://learn.microsoft.com/en-us/azure/role-based-access-control/custom-roles)
- en: 'In this section, we will not go into much detail on RBAC, but we will focus
    on how to create custom roles for the Azure Machine Learning service. If looking
    at that JSON file seems daunting, you do not have to worry. We can create our
    own custom role using the Azure portal. As done previously, we go onto the resource
    blade we want to assign a new role to and find the **Add** button. Click the Add
    button and then follow the **Add custom** **role** menu:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们不会深入探讨 RBAC，但我们将关注如何为 Azure 机器学习服务创建自定义角色。如果查看那个 JSON 文件看起来令人畏惧，您不必担心。我们可以使用
    Azure 门户创建自己的自定义角色。像之前一样，我们进入我们想要分配新角色的资源选项卡，并找到 **添加** 按钮。点击添加按钮，然后遵循 **添加自定义**
    **角色** 菜单：
- en: '![Figure 6.8 – Adding a custom role](img/B21076_06_8.jpg)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.8 – 添加自定义角色](img/B21076_06_8.jpg)'
- en: Figure 6.8 – Adding a custom role
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.8 – 添加自定义角色
- en: 'The custom role wizard will pop up. The first step is to create a name for
    our role. In this case, I chose the name **AzureML Data Scientist Extended**,
    because my goal is to clone the existing role and simply add more permissions.
    You can, of course, start from scratch or from a saved JSON file. We then add
    a good description and we are ready to proceed, as shown in the following screenshot:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 自定义角色向导将会弹出。第一步是为我们的角色创建一个名称。在这种情况下，我选择了名称 **AzureML 数据科学家扩展**，因为我的目标是克隆现有的角色并简单地添加更多权限。当然，您也可以从头开始或从保存的
    JSON 文件开始。然后我们添加一个良好的描述，就可以继续进行，如下面的截图所示：
- en: '![Figure 6.9 – Filling in the basics](img/B21076_06_9.jpg)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.9 – 填写基本信息](img/B21076_06_9.jpg)'
- en: Figure 6.9 – Filling in the basics
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.9 – 填写基本信息
- en: 'Under the **Permissions** tab, I see that this role has permissions in the
    workspace, but in the **Permission type** column is assigned with **NotAction**
    since we can see that *delete* and *write* actions in the workspace are prohibited.
    The **Action** section of the role describes what the role can do, and then **NotAction**
    describes what it cannot do. So, if I remove those permissions from **NotAction**,
    the role will be able to create and delete workspaces, which is what I want my
    data scientists to be able to do:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 在**权限**选项卡下，我看到这个角色在工拥有权限，但在**权限类型**列被分配为**NotAction**，因为我们可以看到在工区中禁止了*删除*和*写入*操作。角色的**操作**部分描述了角色可以做什么，然后**NotAction**描述了它不能做什么。所以，如果我从**NotAction**中移除那些权限，角色将能够创建和删除工作区，这正是我希望我的数据科学家能够做到的：
- en: '![Figure 6.10 – Working with permissions](img/B21076_06_10.jpg)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![图6.10 – 与权限一起工作](img/B21076_06_10.jpg)'
- en: Figure 6.10 – Working with permissions
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.10 – 与权限一起工作
- en: 'The following screenshot shows the result with the complete permissions list:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的屏幕截图显示了完整的权限列表：
- en: '![Figure 6.11 – Final permissions](img/B21076_06_11.jpg)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![图6.11 – 最终权限](img/B21076_06_11.jpg)'
- en: Figure 6.11 – Final permissions
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.11 – 最终权限
- en: 'Before we move on, though, you might ask: What if I want to add permissions?
    Where do I find them? In the preceding screenshot, we can see the **+ Add permissions**
    button. From here, the process of adding permissions is very intuitive. When you
    want to add permissions, you do not need to scroll through an endless list or
    have the documentation at hand every time. You can simply filter to the service
    you want and see the relevant permissions. For Azure Machine Learning, we are
    interested in the **Machine Learning Services Resource Provider** or **Microsoft
    Machine Learning Web Services Management** permissions, as shown in the following
    screenshot:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们继续之前，你可能会有这样的疑问：如果我想要添加权限怎么办？我在哪里可以找到它们？在前面的屏幕截图中，我们可以看到**+ 添加权限**按钮。从这里，添加权限的过程非常直观。当你想要添加权限时，你不需要滚动浏览无尽的列表，也不需要每次都查阅文档。你可以简单地过滤到你想要的服务，并查看相关的权限。对于Azure机器学习，我们感兴趣的权限是**机器学习服务资源提供者**或**Microsoft机器学习Web服务管理**，如下面的屏幕截图所示：
- en: '![Figure 6.12 – Adding permissions](img/B21076_06_12.jpg)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![图6.12 – 添加权限](img/B21076_06_12.jpg)'
- en: Figure 6.12 – Adding permissions
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.12 – 添加权限
- en: 'By clicking on the relevant category, we can see a list of permissions together
    with their description, as we can see in the next screenshot:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 通过点击相关类别，我们可以看到权限列表及其描述，正如我们可以在下一个屏幕截图中看到的那样：
- en: '![Figure 6.13 – Viewing Azure Machine Learning permissions](img/B21076_06_13.jpg)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![图6.13 – 查看Azure机器学习权限](img/B21076_06_13.jpg)'
- en: Figure 6.13 – Viewing Azure Machine Learning permissions
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.13 – 查看Azure机器学习权限
- en: This makes it very quick to create a custom role. You just need to ensure that
    you have included all the permissions needed and then you can come back to the
    **Permissions** page and review the list.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 这使得创建自定义角色非常快捷。你只需确保你已经包含了所有需要的权限，然后你可以回到**权限**页面并查看列表。
- en: 'The next step is to set the assignable scope. You can change the **Assignable
    scopes** option to set the scope of this custom role at the subscription level,
    the resource group level, or a specific workspace level:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是设置可分配的范围。你可以更改**可分配范围**选项来设置此自定义角色的范围，在订阅级别、资源组级别或特定工作区级别：
- en: '![](img/B21076_06_14.jpg)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B21076_06_14.jpg)'
- en: Figure 6.14 – Deciding on the scope
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.14 – 决定范围
- en: 'Then, you can review and download the generated JSON or proceed to the final
    step to create the new custom role:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，你可以查看并下载生成的JSON文件，或者继续到最后一步创建新的自定义角色：
- en: '![Figure 6.15 – Reviewing and creating/downloading](img/B21076_06_15.jpg)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![图6.15 – 查看和创建/下载](img/B21076_06_15.jpg)'
- en: Figure 6.15 – Reviewing and creating/downloading
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.15 – 查看和创建/下载
- en: 'After you have created the custom role, you can assign it just as with the
    built-in roles. You will find it on the **Roles** list in the **Access control
    (IAM)** menu with the **CustomRole** type:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 在你创建了自定义角色之后，你可以像内置角色一样分配它。你将在**访问控制（IAM）**菜单的**角色**列表中找到它，类型为**CustomRole**：
- en: '![Figure 6.16 – Finding your custom role](img/B21076_06_16.jpg)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![图6.16 – 查找你的自定义角色](img/B21076_06_16.jpg)'
- en: Figure 6.16 – Finding your custom role
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.16 – 查找你的自定义角色
- en: Azure RBAC
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: Azure RBAC
- en: 'Learn more about Azure RBAC here: [https://learn.microsoft.com/en-us/azure/role-based-access-control/overview](https://learn.microsoft.com/en-us/azure/role-based-access-control/overview)'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 在此处了解有关 Azure RBAC 的更多信息：[https://learn.microsoft.com/en-us/azure/role-based-access-control/overview](https://learn.microsoft.com/en-us/azure/role-based-access-control/overview)
- en: Azure RBAC is a crucial component for securing Azure resources and ensuring
    that only authorized users and applications have access. It plays a vital role
    in maintaining a secure, compliant, and well-managed Azure environment. Combining
    it with Azure Policy, Azure management groups, and Azure Blueprints, we have all
    the components needed for a complete governance framework.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: Azure RBAC 是保护 Azure 资源并确保只有授权用户和应用程序可以访问的关键组件。它在维护安全、合规且管理良好的 Azure 环境中发挥着至关重要的作用。结合
    Azure Policy、Azure 管理组和 Azure Blueprints，我们拥有了构建完整治理框架所需的所有组件。
- en: RBAC – best practices
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: RBAC – 最佳实践
- en: 'Here are some RBAC best practices to follow when assigning roles:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 在分配角色时，以下是一些应遵循的 RBAC 最佳实践：
- en: Only grant the exact access users need
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 只授予用户所需的精确访问权限
- en: Restrict the number of subscription owners
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 限制订阅所有者的数量
- en: Use Microsoft Entra ID PIM
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Microsoft Entra ID PIM
- en: Assign roles to groups, not individual users, so that permissions are inherited
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将角色分配给组而不是单个用户，以便权限可以继承
- en: Assign roles using the unique role ID instead of the role name, in case the
    role is renamed
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用唯一的角色 ID 而不是角色名称来分配角色，以防角色被重命名
- en: Avoid using wildcards when working with custom roles
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在使用自定义角色时避免使用通配符
- en: RBAC is not only about the users. Microsoft Entra ID is also used to authenticate
    users and applications. Let us see how we can work with those identities in the
    next section.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: RBAC 不仅关乎用户。Microsoft Entra ID 也用于验证用户和应用程序。让我们看看在下一节中我们如何与这些标识一起工作。
- en: Authenticating with application identities
  id: totrans-126
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用应用程序标识进行验证
- en: Application identities are a fundamental concept in Microsoft Entra ID IAM.
    They represent the security context of an application or service when interacting
    with Azure resources. Typically, the underlying object is the service principal.
    A service principal is like a user identity but is used by applications, services,
    or scripts to authenticate and access Azure resources securely. The process of
    creating a service principal depends on what it is we want to use to authenticate,
    and mostly, we can recognize two types—application identities and managed identities
    used by Azure services.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 应用程序标识是 Microsoft Entra ID IAM 的一个基本概念。它们代表应用程序或服务与 Azure 资源交互时的安全上下文。通常，底层对象是服务主体。服务主体类似于用户标识，但由应用程序、服务或脚本用于安全地验证和访问
    Azure 资源。创建服务主体的过程取决于我们想要用于验证的内容，通常，我们可以识别两种类型——应用程序标识和 Azure 服务使用的托管标识。
- en: When it comes to authentication and authorization in the application or managed
    identity, the process is the same. If it exists in Microsoft Entra ID, it can
    be assigned RBAC, as with any user in the system. Service principals have life
    cycles, just as with user identities. They can be created, updated, and deleted.
    For standalone Azure AD applications, service principals can use client secrets/passwords
    or certificates for authentication. Client secrets should be stored securely,
    while certificates provide an added layer of security. Microsoft Entra ID applications
    can be configured as single tenant (only accessible in one Microsoft Entra ID
    tenant) or multi-tenant (accessible by users and applications from multiple Microsoft
    Entra ID tenants). Multi-tenant apps often require additional configuration to
    handle identity federation.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 当涉及到应用程序或托管标识的验证和授权时，过程是相同的。如果它在 Microsoft Entra ID 中存在，它可以被分配 RBAC，就像系统中的任何用户一样。服务主体有生命周期，就像用户标识一样。它们可以被创建、更新和删除。对于独立的
    Azure AD 应用程序，服务主体可以使用客户端密钥/密码或证书进行身份验证。客户端密钥应安全存储，而证书提供额外的安全层。Microsoft Entra
    ID 应用程序可以配置为单租户（仅在单个 Microsoft Entra ID 租户中可访问）或多租户（由多个 Microsoft Entra ID 租户的用户和应用程序访问）。多租户应用程序通常需要额外的配置来处理标识联合。
- en: Let us review how we can create and work with service principals next.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们回顾一下我们如何创建和使用服务主体。
- en: Creating a service principal
  id: totrans-130
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建服务主体
- en: In order to authenticate when working with applications or scripts that train
    and test a model, for example, you can use service principal authentication. To
    achieve this, we need to create a service principal in the Microsoft Entra ID
    workspace. If you are creating a service principal, you need to create an application
    registration.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 为了在处理训练和测试模型的程序或脚本时进行身份验证，例如，您可以使用服务主体身份验证。为了实现这一点，我们需要在 Microsoft Entra ID
    工作空间中创建一个服务主体。如果您正在创建服务主体，您需要创建一个应用程序注册。
- en: Let us see both ways of achieving this.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看实现这一目标的两种方法。
- en: Using the CLI
  id: totrans-133
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用 CLI
- en: 'Depending on where you are running the command, you might need to authenticate
    your Azure subscription. Run the commands through Cloud Shell so that there is
    no need. The command to create a service principal is shown here:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 根据您运行命令的位置，您可能需要验证您的 Azure 订阅。通过 Cloud Shell 运行命令，这样就不需要了。创建服务主体的命令如下所示：
- en: '[PRE2]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The result will include several values that we must protect as they serve as
    credentials, but we must ensure to save them so that we can use them in our code
    to retrieve an authentication token. These are `clientId`, `clientSecret`, and
    `tenantId`:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 结果将包括几个值，我们必须保护它们，因为它们作为凭证使用，但我们必须确保保存它们，以便我们可以在代码中使用它们来检索身份验证令牌。这些是 `clientId`、`clientSecret`
    和 `tenantId`：
- en: '![Figure 6.17 – Service principal creation result](img/B21076_06_17.jpg)'
  id: totrans-137
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.17 – 服务主体创建结果](img/B21076_06_17.jpg)'
- en: Figure 6.17 – Service principal creation result
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.17 – 服务主体创建结果
- en: 'You can retrieve more information about the service principal using the portal
    or the following command:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用门户或以下命令获取有关服务主体的更多信息：
- en: '[PRE3]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Now that we have created a service principal, we can use it in our code and
    assign more roles if necessary.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经创建了一个服务主体，我们可以在代码中使用它，并在必要时分配更多角色。
- en: Registering an application
  id: totrans-142
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注册应用程序
- en: 'The CLI is not the only way to create a service principal. Another way is to
    use the portal. Open the Microsoft Entra ID workspace and find the **App registrations**
    menu. In the following screenshot, you can see a list of existing service principals,
    including the service principal we created in the previous section using the CLI.
    You can find the necessary IDs and information using the portal from here as well:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: CLI 不是创建服务主体的唯一方式。另一种方法是使用门户。打开 Microsoft Entra ID 工作空间，找到 **应用注册** 菜单。在下面的屏幕截图中，您可以查看现有服务主体的列表，包括我们在上一节中使用
    CLI 创建的服务主体。您也可以从这里使用门户找到必要的 ID 和信息：
- en: '![Figure 6.18 – App registrations](img/B21076_06_18.jpg)'
  id: totrans-144
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.18 – 应用程序注册](img/B21076_06_18.jpg)'
- en: Figure 6.18 – App registrations
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.18 – 应用程序注册
- en: 'To proceed from here, click the **New registration** button. Fill in the details,
    giving the application a name and indicating what kinds of accounts can use this.
    For this example, we will keep the defaults and click **Register**, as we can
    see in the next screenshot:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 要继续操作，请点击 **新注册** 按钮。填写详细信息，为应用程序命名，并指明哪些类型的账户可以使用它。在这个例子中，我们将保持默认设置并点击 **注册**，如下一个屏幕截图所示：
- en: '![Figure 6.19 – Creating a new registration](img/B21076_06_19.jpg)'
  id: totrans-147
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.19 – 创建新的注册](img/B21076_06_19.jpg)'
- en: Figure 6.19 – Creating a new registration
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.19 – 创建新的注册
- en: 'Your registration is complete. As soon as we click **Register**, the application
    registration page will open, and we can configure multiple options, as seen in
    the following screenshot:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 您的注册已完成。一旦我们点击 **注册**，应用程序注册页面就会打开，我们可以配置多个选项，如下面的屏幕截图所示：
- en: '![Figure 6.20 – Creating a new registration](img/B21076_06_20.jpg)'
  id: totrans-150
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.20 – 创建新的注册](img/B21076_06_20.jpg)'
- en: Figure 6.20 – Creating a new registration
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.20 – 创建新的注册
- en: By opening up an app registration, you can configure options such as client
    certificates and secrets, as well as roles and permissions.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 通过打开应用程序注册，您可以配置客户端证书和密钥、角色和权限等选项。
- en: But what about services? How does the workspace authenticate a **virtual machine**
    (**VM**) that wants to connect to the workspace? This is where managed identities
    come in. Let us see how managed identities work and how we can use everything
    we have seen so far to authenticate in our code.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 但关于服务呢？工作空间是如何验证想要连接到工作空间的 **虚拟机 (VM**) 的？这就是托管标识发挥作用的地方。让我们看看托管标识是如何工作的，以及我们如何可以使用到目前为止所看到的一切在我们的代码中进行身份验证。
- en: Working with managed identities
  id: totrans-154
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用托管标识
- en: Managed identities in Azure are a way to securely authenticate and authorize
    applications and services within the Azure ecosystem. They are a fundamental part
    of Azure’s IAM capabilities and are used to authorize themselves when interacting
    with other Azure services and resources. This eliminates the need to store sensitive
    credentials or secrets in code or configuration files, making the application
    more secure. Managed identities can be used with a wide range of Azure services,
    including Azure Virtual Machines, Azure Storage accounts, Azure Key Vault, Azure
    Machine Learning, and more. They can be assigned specific roles and permissions
    in Azure RBAC. This means you can control which actions and resources the identity
    can access within your Azure environment. We can easily use managed identities
    in our applications or scripts by leveraging the Azure Machine Learning libraries
    and SDKs available, as we will see in the next section.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: Azure 中的管理身份是一种在 Azure 生态系统中安全地验证和授权应用程序和服务的方法。它们是 Azure IAM 功能的基本组成部分，并在与其他
    Azure 服务和资源交互时用于授权自身。这消除了在代码或配置文件中存储敏感凭据或机密的需求，使应用程序更加安全。管理身份可以与广泛的 Azure 服务一起使用，包括
    Azure 虚拟机、Azure 存储帐户、Azure Key Vault、Azure 机器学习等。它们可以在 Azure RBAC 中分配特定的角色和权限。这意味着您可以在
    Azure 环境中控制身份可以访问哪些操作和资源。我们可以通过利用可用的 Azure 机器学习库和 SDK，轻松地在我们的应用程序或脚本中使用管理身份，正如我们将在下一节中看到的那样。
- en: Each Azure resource that supports managed identities has a specific way of enabling
    and using them. There are two types of managed identities. Let us review the differences
    between the two.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 支持管理身份的每个 Azure 资源都有一种特定的启用和使用方式。有两种类型的管理身份。让我们回顾一下这两种身份之间的区别。
- en: Enabling a system-assigned managed identity
  id: totrans-157
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 启用系统分配的管理身份
- en: This type of identity is created and managed by Azure for a specific Azure resource,
    such as a VM or an Azure function. It’s tightly bound to the life cycle of the
    resource it’s associated with, meaning when the resource is deleted, the managed
    identity is deleted along with it and cannot be associated with multiple resources.
    To work with system-assigned managed identities, you simply enable them on your
    resources.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 此类身份由 Azure 为特定的 Azure 资源（如 VM 或 Azure 函数）创建和管理。它与所关联资源的生命周期紧密绑定，这意味着当资源被删除时，管理身份也会随之删除，并且不能与多个资源关联。要使用系统分配的管理身份，您只需在资源上启用它们即可。
- en: 'To enable a system-assigned managed identity, we simply need to find the **Identity**
    menu, as shown in the following screenshot, in the resource blade of our choice,
    set the **Status** toggle to **On**, and click on **Save**. For this example,
    I have chosen a VM, but it is supported in multiple Azure resources:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 要启用系统分配的管理身份，我们只需找到**身份**菜单，如图下所示，在我们的选择资源选项卡中，将**状态**切换到**开启**，然后点击**保存**。在此示例中，我选择了一个
    VM，但它支持多个 Azure 资源：
- en: '![Figure 6.21 – Opening the Identity menu](img/B21076_06_21.jpg)'
  id: totrans-160
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.21 – 打开身份菜单](img/B21076_06_21.jpg)'
- en: Figure 6.21 – Opening the Identity menu
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.21 – 打开身份菜单
- en: 'As soon as we have enabled the system-assigned managed identity, we can use
    RBAC and assign roles or disable it by setting the **Status** toggle to **Off**.
    You can see the enabled system-assigned managed identity in the next screenshot:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们启用了系统分配的管理身份，我们就可以使用 RBAC 分配角色或通过将**状态**切换到**关闭**来禁用它。您可以在下一张截图中看到已启用的系统分配的管理身份：
- en: '![Figure 6.22 – System-assigned managed identity enabled](img/B21076_06_22.jpg)'
  id: totrans-163
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.22 – 系统分配的管理身份已启用](img/B21076_06_22.jpg)'
- en: Figure 6.22 – System-assigned managed identity enabled
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.22 – 系统分配的管理身份已启用
- en: Creating a user-assigned managed identity
  id: totrans-165
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建用户分配的管理身份
- en: This type of identity is created and managed as a standalone Azure resource.
    You can then associate it with one or more Azure resources, allowing multiple
    resources to use the same identity. This is very useful when, for example, the
    life cycle of the managed identity needs to be independent of the resource life
    cycle or multiple resources need to share the same permissions.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 此类身份作为独立的 Azure 资源创建和管理。然后，您可以将其与一个或多个 Azure 资源关联，允许多个资源使用相同的身份。当需要例如管理身份的生命周期独立于资源生命周期，或者多个资源需要共享相同的权限时，这非常有用。
- en: Creating a managed identity is a two-step process. First, we need to create
    a managed identity.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 创建管理身份是一个两步过程。首先，我们需要创建一个管理身份。
- en: 'To do that, open the **Managed Identities** menu from the search box on the
    top and click on **Create**. Fill in some basic details, as shown in the following
    screenshot:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 要这样做，请从顶部的搜索框中打开 **托管标识** 菜单，然后点击 **创建**。填写一些基本信息，如下面的截图所示：
- en: '![Figure 6.23 – Creating a user-assigned managed identity](img/B21076_06_23.jpg)'
  id: totrans-169
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.23 – 创建用户分配的托管标识](img/B21076_06_23.jpg)'
- en: Figure 6.23 – Creating a user-assigned managed identity
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.23 – 创建用户分配的托管标识
- en: 'As soon as the identity is created, we can associate it with many resources.
    As previously, we will find the **Identity** menu in the resource blade, but this
    time we will switch to the **User assigned** tab. Then, we can click on the **Add**
    button and filter our identities, and as soon as we find the one we created previously,
    we can associate it with the resource. You can see the portal for these steps
    in the following screenshot:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦创建标识，我们就可以将其与许多资源关联起来。正如之前一样，我们将在资源选项卡中找到 **标识** 菜单，但这次我们将切换到 **用户分配** 选项卡。然后，我们可以点击
    **添加** 按钮，筛选我们的标识，一旦找到之前创建的标识，我们就可以将其与资源关联起来。您可以在以下截图中查看这些步骤：
- en: '![Figure 6.24 – Associating the user-assigned managed identity](img/B21076_06_24.jpg)'
  id: totrans-172
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.24 – 关联用户分配的托管标识](img/B21076_06_24.jpg)'
- en: Figure 6.24 – Associating the user-assigned managed identity
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.24 – 关联用户分配的托管标识
- en: Managed identities can also be created or enabled using other Azure tools such
    as the CLI, PowerShell, or the REST API. Then, they can be used from scripts or
    other Azure services we want to connect to. We can enable, disable, or disassociate
    them from our resources at any time.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 托管标识也可以使用其他 Azure 工具（如 CLI、PowerShell 或 REST API）创建或启用。然后，它们可以从脚本或其他我们想要连接的
    Azure 服务中使用。我们可以在任何时候启用、禁用或从资源中取消关联它们。
- en: In summary, Microsoft Entra ID managed identities are a way to improve the security
    and management of authentication and authorization for Azure resources by eliminating
    the need for storing credentials and providing seamless integration with Azure
    services. They help developers and administrators ensure the security and compliance
    of their Azure workloads.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 总结来说，Microsoft Entra ID 托管标识是一种通过消除存储凭证的需要，并提供与 Azure 服务的无缝集成来提高 Azure 资源身份验证和授权安全性和管理性的方法。它们帮助开发人员和管理员确保其
    Azure 工作负载的安全性和合规性。
- en: Here is how we can set up authentication using the different identities available.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是如何使用不同可用的标识来设置身份验证的。
- en: Setting up authentication
  id: totrans-177
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 设置身份验证
- en: We can simplify the authentication process by using the `DefaultAzureCredential`
    class from the Azure Identity package for Python. This class automatically chooses
    the appropriate authentication method (such as Managed Identity, Service Principal,
    or interactive login) based on the environment it’s running in. Here’s how we
    can use it for both managed identity and service principal scenarios
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过使用来自 Azure Identity 包的 `DefaultAzureCredential` 类来简化身份验证过程。这个类会根据其运行的环境自动选择合适的身份验证方法（如托管标识、服务主体或交互式登录）。以下是我们在托管标识和服务主体场景中使用它的方法。
- en: When connecting with a service principal, we need to provide three environment
    variables and use the values when authenticating.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 当与服务主体连接时，我们需要提供三个环境变量并在身份验证时使用这些值。
- en: 'Here are the variables—they can all be found in the object returned when we
    created the service principal:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是变量——它们都可以在我们创建服务主体时返回的对象中找到：
- en: '`AZURE_CLIENT_ID` : The ID of the client'
  id: totrans-181
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`AZURE_CLIENT_ID`: 客户端 ID'
- en: '`AZURE_TENANT_ID`: The Microsoft Entra ID tenant ID'
  id: totrans-182
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`AZURE_TENANT_ID`: Microsoft Entra ID 租户 ID'
- en: '`AZURE_CLIENT_SECRET`: The credential secret'
  id: totrans-183
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`AZURE_CLIENT_SECRET`: 凭证密钥'
- en: To set these variables, you can use the `python-dotenv` package.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 要设置这些变量，您可以使用 `python-dotenv` 包。
- en: Identity libraries
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 标识库
- en: 'To find out more about the libraries, see here:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多关于库的信息，请参阅此处：
- en: '[https://learn.microsoft.com/en-us/python/api/overview/azure/identity-readme?view=azure-python](https://learn.microsoft.com/en-us/python/api/overview/azure/identity-readme?view=azure-python)'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://learn.microsoft.com/en-us/python/api/overview/azure/identity-readme?view=azure-python](https://learn.microsoft.com/en-us/python/api/overview/azure/identity-readme?view=azure-python)'
- en: '[https://pypi.org/project/python-dotenv/](https://pypi.org/project/python-dotenv/)'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://pypi.org/project/python-dotenv/](https://pypi.org/project/python-dotenv/)'
- en: 'If we are using a managed identity, the class will automatically detect the
    credentials, and there is no need for environment variables. Here is a code sample
    for both:'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们使用托管标识，类将自动检测凭证，并且不需要环境变量。以下是两个示例代码：
- en: '[PRE4]'
  id: totrans-190
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: After this code, you can write your desired code to work with Azure Machine
    Learning and train your models.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 在这段代码之后，你可以编写你想要的代码来与Azure机器学习一起工作并训练你的模型。
- en: Working with application identities helps us greatly ensure that we have consistency
    across roles and secure our ML assets. Now that we have reviewed our authentication
    and role management options, let us review some other services that complement
    this functionality and help us secure our workloads further.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 与应用程序标识符一起工作可以帮助我们极大地确保我们在角色之间的一致性，并保护我们的机器学习资产。现在我们已经审查了我们的身份验证和角色管理选项，让我们来审查一些其他服务，这些服务可以补充此功能并帮助我们进一步保护我们的工作负载。
- en: Enhancing access security
  id: totrans-193
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 增强访问安全性
- en: Now that we have a better idea of how to leverage Microsoft Entra ID for authentication
    and role management, we can see some other services that we can use to complement
    and further secure our users’ identities.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们对如何利用Microsoft Entra ID进行身份验证和角色管理有了更好的了解，我们可以看看一些其他我们可以用来补充并进一步保护我们用户身份的服务。
- en: Conditional Access
  id: totrans-195
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 条件访问
- en: '**Conditional Access** in Microsoft Entra ID is a powerful feature that allows
    organizations to set specific conditions and policies for granting or denying
    access to their cloud-based resources. With **Conditional Access**, you can create
    rules and policies that consider a range of factors before allowing or blocking
    access, enhancing security and compliance.'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: Microsoft Entra ID中的**条件访问**是一个强大的功能，允许组织为授予或拒绝对其基于云的资源访问设置特定的条件和策略。使用**条件访问**，您可以在允许或阻止访问之前考虑一系列因素，从而增强安全和合规性。
- en: '**Conditional Access** policies are rules that you define to control access
    to your protected resources. These policies are based on conditions and can be
    tailored to specific users, groups, applications, IP location information, user
    or sign risk detection, and devices. The action based on those signals is either
    **Block/Allow**. You can combine multiple conditions based on different scenarios
    that apply to your organization and users.'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: '**条件访问**策略是您定义的规则，用于控制对受保护资源的访问。这些策略基于条件，可以根据特定用户、组、应用程序、IP位置信息、用户或签名风险检测以及设备进行定制。基于这些信号的行动是**阻止/允许**。您可以根据适用于您组织和使用者的不同场景组合多个条件。'
- en: 'The following are some examples of policies that are used commonly:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些常用策略的示例：
- en: Requiring for **multi-factor authentication** (**MFA**) to be enabled for users
    with highly privileged roles or from unrecognized locations
  id: totrans-199
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要求为具有高度特权角色的用户或来自未知位置的用户的**多因素身份验证**（**MFA**）启用
- en: Blocking users that are flagged by the system as high risk
  id: totrans-200
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 阻止系统标记为高风险的用户
- en: Allowing or blocking access from specific IPs or countries
  id: totrans-201
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 允许或阻止来自特定IP或国家的访问
- en: Requiring a password change to allow access
  id: totrans-202
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要求更改密码以允许访问
- en: 'This is the **Overview** blade of **Conditional Access** where you can manage
    policies, locations, networking, and other features:'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 这是**概览**选项卡的**条件访问**，在这里你可以管理策略、位置、网络和其他功能：
- en: '![Figure 6.25 – Conditional Access Overview blade](img/B21076_06_25.jpg)'
  id: totrans-204
  prefs: []
  type: TYPE_IMG
  zh: '![图6.25 – 条件访问概览选项卡](img/B21076_06_25.jpg)'
- en: Figure 6.25 – Conditional Access Overview blade
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.25 – 条件访问概览选项卡
- en: '**Conditional Access** in Microsoft Entra ID is a dynamic and flexible tool
    that helps organizations strike a balance between security and user productivity.
    By setting up policies that consider different factors, we can enforce access
    controls that adapt to the changing security landscape and the needs of your organization.'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 'Microsoft Entra ID中的**条件访问**是一个动态且灵活的工具，帮助组织在安全性和用户生产力之间取得平衡。通过设置考虑不同因素的政策，我们可以实施适应不断变化的网络安全格局和您组织需求的访问控制。 '
- en: This is not the only tool we can use to enhance security. Let us see how we
    can use PIM together with RBAC.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 这不是我们用来增强安全的唯一工具。让我们看看我们如何将PIM与RBAC一起使用。
- en: PIM
  id: totrans-208
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: PIM
- en: Microsoft Entra ID PIM is an Azure service that helps organizations manage,
    control, and monitor access within their Azure AD and other Microsoft Online services.
    It focuses on privileged accounts, which have access to critical resources and
    data. PIM provides features and capabilities to help organizations protect these
    privileged accounts and mitigate security risks.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: Microsoft Entra ID PIM是一种Azure服务，它帮助组织管理、控制和监控其Azure AD和其他Microsoft在线服务中的访问。它专注于具有访问关键资源和数据的特权的账户。PIM提供功能和能力，以帮助组织保护这些特权账户并减轻安全风险。
- en: PIM can be used in conjunction with RBAC to enhance the security and management
    of privileged accounts and access to Azure resources. When used together, PIM
    and RBAC provide a comprehensive approach to managing access to Azure resources,
    especially those that require elevated privileges. We can enable **just-in-time**
    (**JIT**) and time-bound access for users assigned to specific RBAC roles. For
    example, if a user needs **Contributor** access to a resource group, Azure PIM
    allows them to activate this role only when necessary and for a defined duration.
    When a user needs to activate an RBAC role, they initiate a request through the
    Azure PIM interface by providing a valid justification. This request goes through
    an approval process, ensuring that activation is authorized by an appropriate
    administrator or role owner. The user specifies the duration, and access is automatically
    revoked when the specified time period expires, reducing the risk of prolonged
    elevated access.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: PIM可以与RBAC结合使用，以增强对特权账户和Azure资源访问的安全性和管理。当两者结合使用时，PIM和RBAC提供了一种全面的方法来管理Azure资源的访问，特别是那些需要提升权限的资源。我们可以为分配到特定RBAC角色的用户启用**即时**（**JIT**）和时间限制的访问。例如，如果用户需要资源组的**贡献者**访问权限，Azure
    PIM允许他们在必要时且在定义的时间内激活此角色。当用户需要激活RBAC角色时，他们通过Azure PIM界面发起请求，并提供有效的理由。此请求经过审批流程，确保激活由适当的管理员或角色所有者授权。用户指定持续时间，当指定的时间周期到期时，访问会自动撤销，从而降低了长期提升访问权限的风险。
- en: Azure PIM logs all activations and deactivations of RBAC roles, providing audit
    trails for compliance and security purposes. Organizations can regularly review
    and certify the continued need for privileged access through access reviews. This
    process helps ensure that users who have been assigned RBAC roles still require
    them, and that access remains aligned with business needs.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: Azure PIM记录所有RBAC角色的激活和停用操作，为合规性和安全目的提供审计跟踪。组织可以定期审查和认证对特权访问的持续需求，通过访问审查来确保这一点。此过程有助于确保被分配RBAC角色的用户仍然需要它们，并且访问与业务需求保持一致。
- en: By combining Azure PIM and RBAC, organizations can strengthen their IAM strategy
    for Azure resources. This approach minimizes risks associated with persistent,
    overprivileged accounts, and helps organizations maintain control, visibility,
    and compliance while managing access to critical Azure services and data.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 通过结合Azure PIM和RBAC，组织可以加强其Azure资源的IAM策略。这种方法最小化了与持久、过度授权账户相关的风险，并帮助组织在管理对关键Azure服务和数据的访问时保持控制、可见性和合规性。
- en: Azure Key Vault
  id: totrans-213
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Azure密钥保管库
- en: 'Azure Key Vault is a cloud service provided by Microsoft Azure that helps you
    securely manage keys, secrets, certificates, and other sensitive information used
    by your applications and services. It is designed to provide a centralized and
    secure location for storing and managing cryptographic keys and other secrets,
    making it easier to adhere to security best practices and compliance requirements.
    Here is some information about its features:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: Azure密钥保管库是Microsoft Azure提供的一种云服务，帮助您安全地管理应用程序和服务使用的密钥、密钥和敏感信息。它旨在提供一个集中和安全的存储和管理加密密钥和其他密钥的位置，使其更容易遵守安全最佳实践和合规性要求。以下是关于其功能的一些信息：
- en: '**Key management**: Azure Key Vault allows us to generate, import, and manage
    cryptographic keys used for encryption, decryption, and authentication. It supports
    various key types, including **Rivest–Shamir–Adleman** (**RSA**), **Advanced Encryption
    Standard** (**AES**), and elliptic curve keys.'
  id: totrans-215
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**密钥管理**：Azure密钥保管库允许我们生成、导入和管理用于加密、解密和身份验证的加密密钥。它支持各种密钥类型，包括**Rivest–Shamir–Adleman**（**RSA**）、**高级加密标准**（**AES**）和椭圆曲线密钥。'
- en: '**Secrets management**: We can use Azure Key Vault to store and manage secrets,
    such as connection strings, API keys, and passwords. These secrets are stored
    securely and can be accessed programmatically by your applications.'
  id: totrans-216
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**密钥管理**：我们可以使用Azure密钥保管库来存储和管理密钥，例如连接字符串、API密钥和密码。这些密钥被安全地存储，并且可以通过您的应用程序以编程方式访问。'
- en: '**Certificate management**: Key Vault enables the management of X.509 certificates
    and automates tasks such as certificate renewal. It also supports integration
    with Azure services such as Azure Application Gateway and **Azure Kubernetes Service**
    (**AKS**) for SSL/TLS certificate management.'
  id: totrans-217
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**证书管理**：密钥保管库能够管理X.509证书并自动化诸如证书续订等任务。它还支持与Azure服务（如Azure应用程序网关和**Azure Kubernetes服务**（**AKS**））的集成，以进行SSL/TLS证书管理。'
- en: To retrieve keys or secrets, instead of hardcoding the secrets, we authenticate
    to Key Vault to retrieve them. This adds another layer of security, and we can
    revoke access easily at any time and have additional security options such as
    key versioning, logging, backup, purge protection, and more.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 要检索密钥或机密，我们不是硬编码机密，而是对Key Vault进行身份验证以检索它们。这增加了另一层安全性，我们可以在任何时间轻松撤销访问权限，并拥有额外的安全选项，如密钥版本控制、日志记录、备份、清除保护等。
- en: Best practice
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 最佳实践
- en: Combine the Azure Key Vault service with managed identities for maximum security.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 将Azure Key Vault服务与托管标识结合使用以实现最大安全性。
- en: For Azure Machine Learning, we can combine the Azure Key Vault service with
    managed identities to retrieve secrets in our scripts. All we need is the Azure
    Key Vault Secrets client library for Python.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Azure机器学习，我们可以将Azure Key Vault服务与托管标识结合使用，以在我们的脚本中检索机密。我们所需的一切就是Python的Azure
    Key Vault Secrets客户端库。
- en: 'Before we get started, we need to make sure we have the following prerequisites
    along with our workspace:'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始之前，我们需要确保我们拥有以下先决条件以及我们的工作区：
- en: An Azure Key Vault resource with the secret value we want to retrieve
  id: totrans-223
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们想要检索机密值的Azure Key Vault资源
- en: A compute cluster with a managed identity enabled and assigned with the proper
    RBAC roles or access policies in Azure Key Vault
  id: totrans-224
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个启用了托管标识并分配了适当的RBAC角色或访问策略的Azure Key Vault计算集群
- en: The `azure-keyvault-secrets` and `azure-identity` packages installed in our
    Azure Machine Learning environment
  id: totrans-225
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在我们的Azure机器学习环境中安装了`azure-keyvault-secrets`和`azure-identity`包
- en: 'If you have all the prerequisites completed, you can retrieve the secret using
    the following code sample. Just ensure you replace the key vault name with yours
    and the secret name with yours:'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您已经完成了所有先决条件，您可以使用以下代码示例来检索机密。只需确保将密钥保管库名称替换为您自己的，并将机密名称替换为您自己的：
- en: '[PRE5]'
  id: totrans-227
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '**Conditional Access** and PIM are both Microsoft Entra ID features that, when
    enabled, provide additional security to our identities and keep our user credentials
    secure and in accordance with the PoLP. Azure Key Vault is a critical component
    in building secure and compliant applications in the Azure cloud environment,
    especially when you combine it with managed identities. These features might be
    optional, but they need to be considered when working to secure our ML projects.'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: '**条件访问**和PIM都是Microsoft Entra ID功能，当启用时，为我们的身份提供额外的安全保护，并确保我们的用户凭证安全且符合PoLP。Azure
    Key Vault是构建Azure云环境中安全且合规应用程序的关键组件，尤其是在与托管标识结合使用时。这些功能可能是可选的，但在努力保护我们的ML项目时需要考虑。'
- en: Summary
  id: totrans-229
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we focused on all aspects of identity and adhering to the PoLP.
    Although simple in theory, the PoLP is an iterative and continuous process that
    we need to monitor in order to prevent overprivileged applications. Since Microsoft
    Entra ID is the identity management tool for Azure and, by extension, Azure Machine
    Learning, implementing its core features such as RBAC and learning to work with
    application identities will help us ensure that the credentials of our users and
    applications will not be compromised easily. Additionally, implementing features
    such as **Conditional Access** and PIM can provide an additional level of security
    to our identities. But these credentials are not the only ones that matter. In
    our scripts, we might be using different connection strings or secrets. We can
    use the Key Vault service together with managed identities where it is possible
    to manage them centrally and ensure that our secrets are safe.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们关注了身份和遵守PoLP的所有方面。虽然理论上很简单，但PoLP是一个迭代和持续的过程，我们需要对其进行监控，以防止过度授权的应用程序。由于Microsoft
    Entra ID是Azure和扩展到Azure机器学习的身份管理工具，因此实施其核心功能，如RBAC和学会与应用程序标识一起工作，将帮助我们确保用户和应用程序的凭证不会轻易受到损害。此外，实施如**条件访问**和PIM等特性可以为我们的身份提供额外的安全层。但这些凭证并非唯一重要的。在我们的脚本中，我们可能会使用不同的连接字符串或机密。在可能的情况下，我们可以使用Key
    Vault服务与托管标识一起使用，以集中管理它们并确保我们的机密安全。
- en: In the next chapter, we will explore everything to do with our workspace security
    and the underlying infrastructure. We will learn how to secure our compute and
    endpoints and take advantage of any existing Azure infrastructure such as networks
    for added security.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将探讨与我们的工作区安全和底层基础设施相关的一切。我们将学习如何保护我们的计算和端点，并利用任何现有的Azure基础设施，如网络，以增加安全性。
