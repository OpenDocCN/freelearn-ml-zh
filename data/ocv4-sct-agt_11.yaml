- en: Stopping Time and Seeing like a Bee
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 停止时间，像蜜蜂一样看世界
- en: '"You never can tell with bees."'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: “你永远不知道蜜蜂会怎样。”
- en: – A. A. Milne, Winnie-the-Pooh (1926)
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: – A. A. 米尔恩，《小熊维尼》（1926）
- en: The silent threat of radiation is everywhere in James Bond's world. Of course,
    stolen nuclear warheads are one cause for concern, but the excessively sunny weather
    is almost as bad, exposing the hero and his lovely traveling companions to an
    overdose of UV rays. Then, in *Moonraker* (1979), there is a high-budget mission
    to outer space, where the radiation hazards include cosmic rays, solar flares,
    and the turquoise lasers that everyone is shooting.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 辐射的隐形威胁在詹姆斯·邦德的世界上无处不在。当然，被盗的核弹头是令人担忧的原因之一，但过于晴朗的天气几乎同样糟糕，让英雄和他的可爱的旅行伴侣暴露在过量的紫外线辐射下。然后，在*《月亮神号》（1979）*中，有一个高预算的外太空任务，那里的辐射危害包括宇宙射线、太阳耀斑以及所有人都在发射的青绿色激光。
- en: James Bond is not afraid of all this radiation. Perhaps he is able to take a
    cool, rational view of it by reminding himself that *electromagnetic radiation* can
    refer to various kinds of waves that move at the speed of light, including the
    rainbow-colored range of *visible light* we all see and love, but also including
    radio waves, microwaves, thermal infrared emissions, near-infrared light, ultraviolet
    light, X-rays, and gamma rays.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 詹姆斯·邦德并不害怕所有这些辐射。也许他能够通过提醒自己电磁辐射可以指代各种以光速移动的波，包括我们所有人都能看到并喜爱的彩虹色范围*可见光*，但也包括无线电波、微波、热红外辐射、近红外光、紫外线、X射线和伽马射线，从而以冷静、理性的观点看待它。
- en: With specialized cameras, it is possible to capture images of other kinds of
    radiation besides visible light. Moreover, it is possible to capture videos at
    high frame rates, revealing patterns of motion or of pulsing light that are too
    fast for human vision to perceive. These capabilities would nicely complement
    the `Lazy Eyes` application that we developed in [Chapter 7](7cc1c0b9-a764-4069-9d45-e8bf129efc57.xhtml),
    *Seeing a Heartbeat with a Motion-Amplifying Camera*. Recall that `Lazy Eyes`
    implements the Eulerian video magnification algorithm, which amplifies a specified
    range of frequencies of motion. If we can increase the frame rate, we can improve
    the precision of this range of frequencies; thus, we can isolate high frequencies
    (fast motion) more effectively. This could also be described as an improvement
    in **selectivity**.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 使用专业相机，可以捕捉到除了可见光之外的其他类型辐射的图像。此外，还可以以高帧率捕捉视频，揭示人类视觉无法感知的运动模式或脉冲光。这些功能将很好地补充我们在[第7章](7cc1c0b9-a764-4069-9d45-e8bf129efc57.xhtml)中开发的*《用运动放大相机观察心跳》*应用程序。回想一下，`Lazy
    Eyes`实现了欧拉视频放大算法，该算法放大指定范围的运动频率。如果我们能提高帧率，我们就可以提高这个频率范围的精度；因此，我们可以更有效地隔离高频（快速运动）。这也可以被描述为在**选择性**上的改进。
- en: From a programming perspective, our goal in this chapter is simply to develop
    a variant of `Lazy Eyes` with support for more types of cameras. We will name
    this variant `Sunbaker`. We will make `Sunbaker` compatible with the Point Grey
    brand of industrial cameras from FLIR Systems. These cameras can be controlled
    using a C++ library called **Spinnaker SDK**, which has a Python wrapper called
    `PySpin`. We will learn how to integrate PySpin (and, in principle, any Python
    module for camera control) seamlessly with OpenCV.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 从编程的角度来看，本章的目标仅仅是开发一个支持更多类型相机的`Lazy Eyes`变体。我们将把这个变体命名为`Sunbaker`。我们将使`Sunbaker`与FLIR
    Systems的Point Grey品牌工业相机兼容。这些相机可以使用名为**Spinnaker SDK**的C++库进行控制，该库有一个名为`PySpin`的Python包装器。我们将学习如何无缝地将PySpin（以及原则上任何用于相机控制的Python模块）与OpenCV集成。
- en: PySpin (with a capital *P* and capital *S*) should not be confused with pyspin
    (all lowercase letters). The latter is a different Python library that can display
    spinning icons in a Terminal.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: PySpin（首字母大写的*P*和首字母大写的*S*）不应与pyspin（全部小写字母）混淆。后者是一个不同的Python库，可以在终端中显示旋转图标。
- en: More broadly, our objective is to learn about some of the specialized cameras
    available on the market today, work with images from them, and understand how
    these kinds of imaging relate to the natural world. Did you know that a honey
    bee flies at an average speed of 24 kilometers (15 miles) per hour, and that it
    can see ultraviolet patterns on flowers? A different camera can give us an appreciation
    of how this creature might perceive the passing of light and time.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 更广泛地说，我们的目标是了解市场上一些专业相机的信息，使用它们的图像，并理解这类成像如何与自然世界相关。你知道吗，一只蜜蜂平均飞行速度为每小时 24 公里（15
    英里），并且它能看到花朵上的紫外线图案？不同的相机可以让我们欣赏到这种生物如何感知光和时间的流逝。
- en: Technical requirements
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'This chapter''s project has the following software dependencies:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的项目有以下软件依赖：
- en: '**A Python environment with the following modules**: OpenCV, NumPy, SciPy,
    PyFFTW, and wxPython.'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**具有以下模块的 Python 环境**：OpenCV、NumPy、SciPy、PyFFTW 和 wxPython。'
- en: '**Optional**: Spinnaker SDK and PySpin. These are available for Windows and
    Linux, but not Mac.'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可选**: Spinnaker SDK 和 PySpin。这些软件适用于 Windows 和 Linux，但不适用于 Mac。'
- en: Where not otherwise noted, setup instructions are covered in [Chapter 1](e3ac8266-975b-43ca-8221-482a15eb0e05.xhtml),
    *Preparing for the Mission*. Setup instructions for PyFFTW are covered in [Chapter
    7](7cc1c0b9-a764-4069-9d45-e8bf129efc57.xhtml), *Seeing a Heartbeat with a Motion-Amplifying
    Camera*, in the *Choosing and setting up an FFT library* section. Setup instructions
    for Spinnaker SDK and PySpin are covered in the current chapter, in the *Installing
    Spinnaker SDK and PySpin* section. Always refer to the setup instructions for
    any version requirements. Basic instructions for running Python code are covered
    in [Appendix C](c44b1aaa-fe12-4054-85fb-37d584f15d3b.xhtml), *Running with Snakes
    (or First Steps with Python)*.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 如果没有特别说明，设置说明包含在[第 1 章](e3ac8266-975b-43ca-8221-482a15eb0e05.xhtml)，*为任务做准备*中。PyFFTW
    的设置说明包含在第 7 章[7cc1c0b9-a764-4069-9d45-e8bf129efc57.xhtml]，*使用运动放大相机观察心跳*中的*选择和设置
    FFT 库*部分。Spinnaker SDK 和 PySpin 的设置说明包含在本章的*安装 Spinnaker SDK 和 PySpin*部分。始终参考设置说明以了解任何版本要求。运行
    Python 代码的基本说明包含在[附录 C](c44b1aaa-fe12-4054-85fb-37d584f15d3b.xhtml)，*与蛇一起运行（或
    Python 的第一步）*中。
- en: The completed project for this chapter can be found in the book's GitHub repository, [https://github.com/PacktPublishing/OpenCV-4-for-Secret-Agents-Second-Edition](https://github.com/PacktPublishing/OpenCV-4-for-Secret-Agents-Second-Edition),
    in the `Chapter008` folder.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的完成项目可以在本书的 GitHub 仓库中找到，[https://github.com/PacktPublishing/OpenCV-4-for-Secret-Agents-Second-Edition](https://github.com/PacktPublishing/OpenCV-4-for-Secret-Agents-Second-Edition)，在
    `Chapter008` 文件夹中。
- en: Planning the Sunbaker app
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 计划 Sunbaker 应用
- en: 'Compared to `Lazy Eyes`, `Sunbaker` has the same GUI and, substantially, the
    same implementation of Eulerian video magnification. However, `Sunbaker` can capture
    input from a Point Grey industrial camera if one is connected. The following screenshot
    shows `Sunbaker` running with a high-speed monochrome camera called the **Point
    Grey Grasshopper 3 GS3-U3-23S6M-C**:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 与 `Lazy Eyes` 相比，`Sunbaker` 有相同的 GUI 和，实质上，相同的欧拉视频放大实现。然而，如果连接了 Point Grey 工业相机，`Sunbaker`
    可以捕获输入。以下截图显示了使用名为 **Point Grey Grasshopper 3 GS3-U3-23S6M-C** 的高速单色摄像头运行的 `Sunbaker`：
- en: '![](img/c4b7657a-28b5-477d-a917-0c6e4e076d04.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/c4b7657a-28b5-477d-a917-0c6e4e076d04.png)'
- en: The preceding screenshot shows my monochromatic friend, Eiffel Einstein Rocket.
    The effect of the Eulerian video magnification is visible as a halo along the
    edge of his back, which is moving as he breathes. The frame rate (98.7 **frames
    per second** (**FPS**) as shown in the screenshot) happens to be limited by the
    processing of the images; on a faster system, the camera could potentially capture
    up to 163 FPS.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 上一张截图显示了我的单色朋友，爱菲尔·爱因斯坦火箭。欧拉视频放大的效果在他的背部边缘可见，随着他的呼吸而移动。帧率（如截图所示为 98.7 **帧/秒**（**FPS**））恰好受到图像处理的限制；在更快的系统上，相机可能能够捕获高达
    163 FPS。
- en: 'As a fallback, if PySpin is unavailable or no PySpin-compatible camera is connected,
    `Sunbaker` can also capture input from any OpenCV-compatible camera. The following
    screenshot shows `Sunbaker` running with an OpenCV-compatible ultraviolet webcam
    called the **XNiteUSB2S-MUV**:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 作为备用方案，如果 PySpin 不可用或没有连接 PySpin 兼容的相机，`Sunbaker` 也可以从任何 OpenCV 兼容的相机捕获输入。以下截图显示了使用名为
    **XNiteUSB2S-MUV** 的 OpenCV 兼容紫外线摄像头运行的 `Sunbaker`：
- en: '![](img/e2656730-565a-4812-92c8-67693ce2865d.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/e2656730-565a-4812-92c8-67693ce2865d.png)'
- en: The preceding screenshot shows a small dandelion. Of course, in visible light,
    a dandelion's petals are entirely yellow. However, to the ultraviolet camera,
    the dandelion petals look like a dark circle inside a bright circle. This bull's-eye
    pattern is what a bee would see. Note that, in this screenshot, `Sunbaker` is
    still building up its history of frames, so it does not yet show a frame rate
    yet or an Eulerian video magnification effect. Potentially, Eulerian video magnification
    could amplify the pattern of the petals' motion in the wind.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的截图显示了一朵小蒲公英。当然，在可见光中，蒲公英的花瓣完全是黄色的。然而，对于紫外线相机来说，蒲公英花瓣看起来像是一个明亮圆圈中的暗圈。这种靶心图案就是蜜蜂看到的景象。注意，在这个截图中，`Sunbaker`仍在构建其帧的历史，所以它还没有显示帧率或欧拉视频放大效果。潜在地，欧拉视频放大可以放大花瓣在风中运动的模式。
- en: Next, let's take a moment to put the capabilities of an *ultraviolet webcam *in
    context by looking at the electromagnetic spectrum.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们花一点时间，通过观察电磁谱来将紫外网络相机的功能置于上下文中。
- en: Understanding the spectrum
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解光谱
- en: 'The universe is flooded with light, or electromagnetic radiation, and astronomers
    can use all wavelengths to capture images of distant objects. However, the Earth''s
    atmosphere partly or wholly reflects some wavelengths of light or radiation back
    into outer space, so typically we deal with more limited ranges of wavelengths
    in imaging on Earth. NASA provides the following illustration, showing various
    wavelengths of electromagnetic radiation, their day-to-day importance to human
    beings, and their ability (or inability) to penetrate the Earth''s atmosphere:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 宇宙充满了光，或者说电磁辐射，天文学家可以使用所有波长来捕捉遥远物体的图像。然而，地球的大气层部分或全部反射了一些光或辐射的波长回到外太空，因此在地球上的成像通常处理更有限的波长范围。NASA提供了以下插图，展示了各种电磁辐射的波长，它们对人类日常的重要性，以及它们穿透地球大气的（或不能穿透的）能力：
- en: '![](img/16c79807-4104-4a98-ade2-900a09cf7a08.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/16c79807-4104-4a98-ade2-900a09cf7a08.png)'
- en: Note that the axis in the preceding diagram runs from longer wavelengths on
    the left to shorter wavelengths on the right. The Earth's atmosphere is relatively
    opaque in the range from the longest radio wavelengths down to the short end of
    the shortwave band (10 m). This **opacity** or **reflectivity** is an important
    principle in worldwide radio broadcasting, as it enables certain radio wavelengths
    to propagate around the Earth by bouncing back and forth between the surface and
    the upper atmosphere.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，前面图表的轴从左边的长波长到右边的短波长。地球的大气层在从最长无线电波长到短波波段（10米）短端的范围内相对不透明。这种**不透明性**或**反射性**是全球无线电广播的一个重要原则，因为它使得某些无线电波长可以通过在地面和上层大气之间来回弹跳而绕地球传播。
- en: Next in the spectrum, the atmosphere is relatively transparent in the so-called **radio
    window**, including very high frequency or FM radio (which does not propagate
    beyond the horizon), cellular and Wi-Fi ranges, and the longer part of the microwave
    range. Then, the atmosphere is relatively opaque to the shorter part of the microwave
    range and the longer part of the **infrared** (**IR**) range (which starts around
    1 mm).
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在光谱中接下来，大气层在所谓的**无线电窗口**中相对透明，包括非常高频或调频广播（这不会传播到地平线之外）、蜂窝和Wi-Fi范围，以及微波长波部分。然后，大气层对微波短波部分和红外（**IR**）长波部分（大约从1毫米开始）相对不透明。
- en: Longwave infrared is also called **thermal infrared** or **far infrared** (**FIR**),
    and shortwave infrared is also called **near infrared** (**NIR**). Here, the terms
    *far* and *near* mean *farther from visible light* and *nearer to visible light*,
    respectively. So, past the opposite end of the visible range, longwave ultraviolet
    is also called **near ultraviolet** (**NUV**), and shortwave ultraviolet is also
    called **far ultraviolet** (**FUV**).
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 长波红外也称为**热红外**或**远红外**（**FIR**），短波红外也称为**近红外**（**NIR**）。在这里，术语*远*和*近*分别表示*远离可见光*和*靠近可见光*。因此，在可见光范围的另一端，长波紫外也称为**近紫外**（**NUV**），短波紫外也称为**远紫外**（**FUV**）。
- en: The radio and microwave ranges have relatively poor potential for terrestrial
    (earthbound) imaging. Only low-resolution imaging would be possible in these ranges
    because wavelength is a limiting factor of resolution. On the other hand, starting
    in the IR range, it becomes feasible to capture recognizable images of human-sized
    or smaller objects. Fortunately, there are good sources of natural illumination
    in the IR and visible ranges. Warm-blooded animals and other warm objects emit
    FIR radiation, which makes them visible to thermal cameras (even at night and
    even behind cold obstacles such as trees or walls). Moreover, the atmosphere is
    relatively transparent in the so-called **optical window**, including the NIR
    range, the visible range, and to a lesser extent the NUV range. NIR and NUV cameras
    produce images that look fairly similar to visible-light images, but with some
    differences in objects' coloration, opacity, and sharpness.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 无线电和微波频段在地面成像方面潜力相对较差。在这些频段中，由于波长是分辨率的限制因素，只能实现低分辨率成像。另一方面，从红外频段开始，捕捉到人大小或更小物体的可识别图像变得可行。幸运的是，红外和可见光频段有良好的自然光源。温血动物和其他温暖物体发出远红外辐射，这使得它们对热成像仪可见（即使在夜间，甚至在树木或墙壁等冷障碍物后面）。此外，大气在所谓的**光学窗口**中相对透明，包括近红外频段、可见光频段，以及较少程度的近紫外频段。近红外和近紫外相机产生的图像与可见光图像相当相似，但在物体着色、不透明度和清晰度方面存在一些差异。
- en: Throughout most of the UV range, as well as the X-ray and gamma ranges, the
    Earth's atmosphere is relatively opaque again. This is also fortunate—perhaps
    not from a computer vision perspective, but certainly from a biological perspective.
    Shortwave radiation can penetrate unprotected skin, flesh, and even bone, quickly
    causing burns and more slowly causing cancer. However, in short, controlled exposures
    from an artificial source, **ultraviolet** (**UV**) and X-ray imaging can be very
    useful in medicine. For example, UV imaging can record invisible bruises that
    are deep beneath the surface of the skin, and this kind of image is often used
    as forensic evidence in domestic abuse cases. X-ray imaging, of course, can go
    even deeper to reveal the bones or the inside of the lungs. Shortwave or *hard* X-rays,
    as well as gamma rays, are widely used to scan the inside of containers and vehicles,
    for example at security checkpoints.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在整个紫外频段以及X射线和伽马频段，地球大气再次相对不透明。这也是一个幸运的事——也许不是从计算机视觉的角度来看，但肯定是从生物学的角度来看。短波辐射可以穿透未受保护的皮肤、肉体，甚至骨骼，迅速造成烧伤，并缓慢地导致癌症。然而，简而言之，从人工源进行的有控制的曝光，**紫外线**（**UV**）和X射线成像在医学上非常有用。例如，紫外线成像可以记录皮肤表面下深处的隐形淤青，这种图像通常用作家庭暴力案件的法医证据。当然，X射线成像可以更深地穿透，揭示骨骼或肺部内部。短波或**硬**X射线，以及伽马射线，广泛用于扫描容器和车辆的内部，例如在安全检查站。
- en: For many decades, X-ray images have been commonplace in much of the world. During
    the 1950s and 1960s in the Soviet Union, discarded X-ray slides were sufficiently
    plentiful that music bootleggers used them as a cheap substitute for vinyl records.
    People listened to *jazz on bones* or *rock on bones* because this banned, foreign
    music was unobtainable in any other form. However, in contrast to a world where
    an X-ray scan might be less troublesome than a jazz record, the world in 1895-1896
    was astonished by the first X-ray images. *I have seen my death,* said Anna Bertha
    Ludwig, the wife of the pioneering X-ray scientist Wilhelm Röntgen, when she first
    saw a skeletal scan of her hand. She, and other viewers at the time, had never
    imagined that a photograph could uncover the skeleton of a living person.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 几十年来，X射线图像在世界许多地方都很常见。在20世纪50年代和60年代，苏联的废弃X射线幻灯片数量足够多，以至于盗版音乐制作人将它们作为廉价替代品用于乙烯基唱片。人们听着“骨头上的爵士乐”或“骨头上的摇滚乐”，因为这种被禁止的外国音乐在其他任何形式中都无法获得。然而，与一个X射线扫描可能比爵士乐唱片更麻烦的世界相比，1895-1896年的世界对第一张X射线图像感到震惊。“我看到了我的死亡，”安娜·贝莎·路德维希，这位开创性X射线科学家维尔纳·伦琴的妻子，在第一次看到她手的骨骼扫描时说。她和其他当时的观众从未想过照片可以揭示活人的骨骼。
- en: Today, specialized imaging technology is continuing to become more pervasive,
    and it will continue to change the way people see themselves and the world. For
    example, IR and UV cameras are now widely used for surveillance and detection
    in police work, many members of the public are aware of this due to police dramas
    on television, and we might begin to question our old assumptions about what can
    and cannot be seen. Forget about secret agents and even police detectives for
    a moment; we might even see a thermal camera on a **do-it-yourself** (**DIY**) show,
    since FIR imaging can be used to locate a cold draft around a window or a hot
    water pipe inside a wall. IR and UV cameras are becoming more affordable even
    for home use, and we will consider some examples of these and other specialized
    cameras in the next section.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 今天，专业成像技术正变得越来越普遍，它将继续改变人们看待自己和世界的方式。例如，红外和紫外相机现在在警察工作中被广泛用于监控和检测，许多公众对此有所了解，这得益于电视上的警察剧，我们可能会开始质疑我们关于什么可以看到和什么看不到的旧假设。暂时忘记特工和甚至警察侦探；我们甚至可能在
    DIY 节目中看到热成像仪，因为 FIR 成像可以用来定位窗户周围的冷风或墙内的热水管。红外和紫外相机正变得越来越实惠，甚至可以用于家庭使用，在下一节中，我们将考虑这些和其他专业相机的例子。
- en: Finding specialized cameras
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 寻找专业相机
- en: 'The following table provides a few examples of cameras that can capture video
    at high frame rates, in IR, or in UV:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表格提供了一些可以以高帧率捕获视频、红外或紫外成像的相机的示例：
- en: '| **Name** | **Price** | **Purpose** | **Modes** | **Optics** | **Compatibility**
    |'
  id: totrans-35
  prefs: []
  type: TYPE_TB
  zh: '| **名称** | **价格** | **用途** | **模式** | **光学** | **兼容性** |'
- en: '| XNiteUSB2S-MUV | $135 | Monochrome imaging in near ultraviolet | Monochrome
    *1920 x 1080* @ 30 FPSMonochrome *1280 x 720* @ 60 FPSMonochrome *640 x 480* @
    120 FPS(and other modes) | Diagonal field of view—86 degrees3.6 mm lens on 1/2.7"
    sensor | OpenCV on Windows, Mac, Linux |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '| XNiteUSB2S-MUV | $135 | 近紫外单色成像 | 单色 *1920 x 1080* @ 30 FPS单色 *1280 x 720*
    @ 60 FPS单色 *640 x 480* @ 120 FPS（及其他模式） | 对角视场角—86 度3.6 mm 镜头在 1/2.7" 传感器上 | OpenCV
    在 Windows、Mac、Linux 上 |'
- en: '| XNiteUSB2S-IR715 | $135 | Monochrome imaging in NIR | Monochrome *1920 x
    1080* @ 30 FPSMonochrome *1280 x 720* @ 60 FPSMonochrome *640 x 480* @ 120 FPS(and
    other modes) | Diagonal field of view—86 degrees3.6 mm lens on 1/2.7" sensor |
    OpenCV on Windows, Mac, Linux |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '| XNiteUSB2S-IR715 | $135 | 近红外单色成像 | 单色 *1920 x 1080* @ 30 FPS单色 *1280 x 720*
    @ 60 FPS单色 *640 x 480* @ 120 FPS（及其他模式） | 对角视场角—86 度3.6 mm 镜头在 1/2.7" 传感器上 | OpenCV
    在 Windows、Mac、Linux 上 |'
- en: '| Sony PlayStation Eye | $10 | High-speed color imaging in visible light |
    Color *640 x 480* @ 60 FPSColor *320 x 240* @ 187 FPS | Diagonal field of view—75
    degrees or 56 degrees (two zoom settings) | OpenCV on Linux only (V4L backend)
    |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '| Sony PlayStation Eye | $10 | 可见光高速彩色成像 | 彩色 *640 x 480* @ 60 FPS彩色 *320 x
    240* @ 187 FPS | 对角视场角—75 度或 56 度（两个缩放设置） | 仅 Linux 上的 OpenCV（V4L 后端） |'
- en: '| Point Grey Grasshopper 3 GS3-U3-23S6C-C | $1045 | High-speed color imaging
    in visible light | Color *1920 x 1200* @ 162 FPS(and other modes) | C-mount lens
    (not included) on 1/1.2" sensor | Spinnaker SDK and PySpin on Windows, Linux |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '| Point Grey Grasshopper 3 GS3-U3-23S6C-C | $1045 | 可见光高速彩色成像 | 彩色 *1920 x
    1200* @ 162 FPS（及其他模式） | 1/1.2" 传感器上的 C-mount 镜头（不包括） | Spinnaker SDK 和 PySpin
    在 Windows、Linux 上 |'
- en: '| Point Grey Grasshopper 3 GS3-U3-23S6M-C | $1045 | High-speed monochrome imaging
    in visible light | Monochrome *1920 x 1200* @ 162 FPS(and other modes) | C-mount
    lens (not included) on 1/1.2" sensor | Spinnaker SDK and PySpin on Windows, Linux
    |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
  zh: '| Point Grey Grasshopper 3 GS3-U3-23S6M-C | $1045 | 可见光高速单色成像 | 单色 *1920 x
    1200* @ 162 FPS（及其他模式） | 1/1.2" 传感器上的 C-mount 镜头（不包括） | Spinnaker SDK 和 PySpin
    在 Windows、Linux 上 |'
- en: '| Point Grey Grasshopper 3 GS3-U3-41C6NIR-C | $1359 | Monochrome imaging in
    NIR | Monochrome *2048 x 2048* @ 90 FPS(and other modes) | C-mount lens (not included)
    on 1" sensor | Spinnaker SDK and PySpin on Windows, Linux |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
  zh: '| Point Grey Grasshopper 3 GS3-U3-41C6NIR-C | $1359 | 近红外单色成像 | 单色 *2048 x
    2048* @ 90 FPS（及其他模式） | 1" 传感器上的 C-mount 镜头（不包括） | Spinnaker SDK 和 PySpin 在 Windows、Linux
    上 |'
- en: Of course, there are many other specialized cameras on the market besides these
    few examples. Many industrial cameras, including the Point Grey cameras previously
    listed, conform to an industry standard called **GenICam**, which, in principle,
    makes them compatible with third-party software libraries that are based on this
    standard. Harvesters ([https://github.com/genicam/harvesters](https://github.com/genicam/harvesters))
    is an example of an open source Python library that can control GenICam-compliant
    cameras. You may want to look into Harvesters if you are interested in support
    for additional brands of industrial cameras and additional platforms (Mac as well
    as Windows and Linux). For now, though, let's discuss some of the cameras in the
    preceding table in more detail.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，除了这些例子之外，市场上还有许多其他专业相机。许多工业相机，包括之前列出的Point Grey相机，符合一个称为**GenICam**的行业标准，从原则上讲，这使得它们与基于此标准的第三方软件库兼容。Harvesters([https://github.com/genicam/harvesters](https://github.com/genicam/harvesters))是一个开源Python库的例子，它可以控制符合GenICam标准的相机。如果你对支持更多工业相机品牌和更多平台（包括Mac以及Windows和Linux）感兴趣，你可能想了解一下Harvesters。不过，现在让我们更详细地讨论一下前面表格中的一些相机。
- en: XNiteUSB2S-MUV
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: XNiteUSB2S-MUV
- en: 'The XNiteUSB2S-MUV, available from MaxMax.com ([https://maxmax.com/](https://maxmax.com/)),
    is a true UV camera in the sense that it blocks out visible and infrared light
    in order to capture ultraviolet light alone. This is accomplished by means of
    a permanently attached lens filter that is opaque to visible light but relatively
    transparent to part of the NUV range. The lens''s glass itself also filters out
    some ultraviolet light, and the result is that the camera captures the range from
    360 nm to 380 nm. The following photograph of the camera and a black-eyed Susan
    (a North American flower with yellow petals and black stamens) shows an opaque
    reflection of the flower in the lens filter:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: MaxMax.com提供的XNiteUSB2S-MUV是一款真正的紫外线相机，因为它阻挡了可见光和红外光，以便单独捕捉紫外线。这是通过一个永久性连接的镜头滤镜实现的，该滤镜对可见光不透明，但对部分近紫外光范围相对透明。镜头本身的玻璃也过滤掉了一些紫外线，结果是相机捕捉了360
    nm到380 nm的范围。以下照片展示了相机和黑眼苏珊（一种北美花卉，花瓣黄色，花药黑色）在镜头滤镜中的不透明反射：
- en: '![](img/f007010c-0f0b-4094-91a9-edca3688ff7f.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f007010c-0f0b-4094-91a9-edca3688ff7f.png)'
- en: 'The following photo, captured by the UV camera, shows the same flower with
    petals that are dark at the base and bright at the tip, forming a typical ultraviolet
    bull''s-eye pattern:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 以下照片是由紫外线相机拍摄的，显示了同一朵花，花瓣底部是深色的，尖端是明亮的，形成了一个典型的紫外线靶心图案：
- en: '![](img/0aed955c-35e4-4196-91e7-78137eb72666.png)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0aed955c-35e4-4196-91e7-78137eb72666.png)'
- en: To a bee, this big splash of two contrasting colors would stand out like a fast-food
    logo. Pollen is here!
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 对于蜜蜂来说，这两种对比鲜明的颜色的大片溅射就像快餐标志一样显眼。花粉就在这里！
- en: The XNiteUSB2S-MUV can capture images outdoors in sunlight, but if you want
    to use it indoors, you will need a UV light source that covers the camera's range
    of sensitivity, 360 nm to 380 nm. MaxMax.com can provide sales advice on UV light
    sources, and on options to customize the XNiteUSB2S-MUV with a quartz lens that
    extends the range of sensitivity down to approximately 300 nm (at a significantly
    higher cost). See the camera's product page at [https://maxmax.com/maincamerapage/uvcameras/usb2-small](https://maxmax.com/maincamerapage/uvcameras/usb2-small)
    and MaxMax.com's contact page at [https://maxmax.com/contact-us](https://maxmax.com/contact-us).
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: XNiteUSB2S-MUV可以在阳光下户外拍摄图像，但如果你想在室内使用它，你需要一个覆盖相机灵敏度范围的紫外线光源，360 nm到380 nm。MaxMax.com可以提供关于紫外线光源的销售建议，以及定制XNiteUSB2S-MUV的石英镜头，将灵敏度范围扩展到大约300
    nm（成本显著提高）。请参阅相机的产品页面[https://maxmax.com/maincamerapage/uvcameras/usb2-small](https://maxmax.com/maincamerapage/uvcameras/usb2-small)和MaxMax.com的联系页面[https://maxmax.com/contact-us](https://maxmax.com/contact-us)。
- en: MaxMax.com also offers a series of infrared cameras that have the same electronics
    and lens as the XNiteUSB2S-MUV, only they use a different filter in order to block
    out visible and ultraviolet light while capturing part of the NIR range. The XNiteUSB2S-IR715
    captures the broadest part of the NIR range, down to a wavelength of approximately
    715 nm (for comparison, visible red starts at 700 nm). The product lineup includes
    several similarly named alternatives for other wavelength cutoffs.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: MaxMax.com 还提供了一系列具有与 XNiteUSB2S-MUV 相同电子和镜头的红外相机，只是它们使用不同的过滤器来阻挡可见光和紫外光，同时捕捉部分近红外（NIR）范围。XNiteUSB2S-IR715
    捕捉最广泛的 NIR 范围，波长约为 715 nm（相比之下，可见红光始于 700 nm）。产品系列包括几个类似命名的其他波长截止选项。
- en: Sony PlayStation Eye
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Sony PlayStation Eye
- en: The PlayStation Eye holds a unique position as a low-cost camera with a high
    maximum frame rate (albeit at a low resolution). Sony released the Eye in 2007
    as an accessory for the PlayStation 3 game console, and game developers used the
    camera to support motion tracking, face tracking, or simply video chat. Later,
    the Eye's driver was reverse-engineered for other platforms, and the device gained
    popularity among computer vision experimenters. The Linux kernel (specifically,
    the Video4Linux or V4L module) officially supports the Eye. So, on Linux (and
    only on Linux), OpenCV can use the Eye just like an ordinary webcam.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: PlayStation Eye 作为一款低成本相机，具有高最大帧率（尽管分辨率较低）的独特地位。索尼于 2007 年将 Eye 作为 PlayStation
    3 游戏控制台的配件发布，游戏开发者使用该相机支持动作跟踪、面部跟踪或简单的视频聊天。后来，Eye 的驱动程序被逆向工程用于其他平台，该设备在计算机视觉实验者中获得了普及。Linux
    内核（特别是 Video4Linux 或 V4L 模块）官方支持 Eye。因此，在 Linux（仅限 Linux）上，OpenCV 可以像普通网络摄像头一样使用
    Eye。
- en: PS3EYE Driver ([https://github.com/inspirit/PS3EYEDriver](https://github.com/inspirit/PS3EYEDriver))
    is an open-source C++ library that can control the PlayStation Eye on Windows
    or Mac. Potentially, you could write your own wrapper around PS3EYEDriver to provide
    an OpenCV-friendly interface. PS3EYEDriver reuses a lot of code from the Eye's
    Linux driver, which is GPL-licensed, so be careful about the licensing implications
    of using PS3EYE Driver; it might not be right for you unless your project is also
    GPL-licensed.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: PS3EYE 驱动程序 ([https://github.com/inspirit/PS3EYEDriver](https://github.com/inspirit/PS3EYEDriver))
    是一个开源的 C++ 库，可以在 Windows 或 Mac 上控制 PlayStation Eye。理论上，你可以围绕 PS3EYEDriver 编写自己的包装器，以提供
    OpenCV 兼容的接口。PS3EYEDriver 重新使用了 Eye 的 Linux 驱动程序的大量代码，该代码是 GPL 许可的，因此在使用 PS3EYE
    驱动程序时要小心考虑许可的影响；除非你的项目也是 GPL 许可的，否则可能不适合你。
- en: 'Here is a screenshot of `Sunbaker` running at a high frame rate with a PlayStation
    Eye camera on Linux:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是 `Sunbaker` 在 Linux 上以高帧率运行并使用 PlayStation Eye 相机的屏幕截图：
- en: '![](img/8dd357e8-6990-40af-afa6-bdddcdcda706.png)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8dd357e8-6990-40af-afa6-bdddcdcda706.png)'
- en: The preceding photo shows my monochromatic friend, Eiffel Einstein Rocket, at
    rest. As he breathes, the effect of the Eulerian video magnification is visible
    as a halo along the edge of his back. Note that the frame rate (60.7 FPS, as displayed)
    is actually limited by the processing of the images; we could approach or even
    reach the camera's maximum rate of 187 FPS on a faster system.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 上一张照片显示了我的单色朋友，埃菲尔爱因斯坦火箭，处于静止状态。当他呼吸时，欧拉视频放大效应在他的背部边缘形成光环。请注意，帧率（60.7 FPS，如显示）实际上是由图像处理限制的；我们可以在更快的系统上接近或达到相机的最大速率
    187 FPS。
- en: Point Grey Grasshopper 3 GS3-U3-23S6M-C
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Point Grey Grasshopper 3 GS3-U3-23S6M-C
- en: 'The Point Grey Grasshopper 3 GS3-U3-23S6M-C is a highly configurable, monochrome
    camera with interchangeable lenses and a high-speed USB 3 interface. Depending
    on the configuration and the attached lens, it can capture detailed images of
    a wide variety of subjects, under a wide variety of conditions, at a high frame
    rate. Consider the following set of images. We see a headshot of the author, a
    close-up shot of veins in the author''s eye, and a long-distance shot of the moon,
    all captured with the GS3-U3-23S6M-C camera and various low-cost lenses (each
    $50 or less):'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: Point Grey Grasshopper 3 GS3-U3-23S6M-C 是一款高度可配置的单色相机，具有可更换镜头和高速 USB 3 接口。根据配置和所附镜头，它可以在各种条件下以高帧率捕捉各种主题的详细图像。考虑以下一组图像。我们看到作者的头像，作者眼睛静脉的特写，以及月亮的远距离拍摄，所有这些图像都是使用
    GS3-U3-23S6M-C 相机和各种低成本镜头（每个 50 美元或以下）拍摄的：
- en: '![](img/8323d73f-0484-4ed0-99c1-f32cdb13ede6.png)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8323d73f-0484-4ed0-99c1-f32cdb13ede6.png)'
- en: The camera uses a type of lens mount called a **C-mount**, and its sensor size
    is the so-called **1/1.2" format**. This is the same lens mount and nearly the
    same sensor size as two formats called **16 mm** and Super 16, which have been
    popular in amateur movie cameras ever since 1923\. So, the camera is compatible
    with a wide range of inexpensive, old *cine* (cinematography) lenses, as well
    as newer and more expensive machine vision lenses.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 该相机使用一种称为**C-mount**的镜头安装类型，其传感器尺寸被称为**1/1.2"格式**。这与被称为**16 mm**和Super 16的两种格式相同，这两种格式自1923年以来在业余电影相机中一直很受欢迎。因此，该相机与广泛的经济实惠、老式的*cine*（电影摄影）镜头以及较新且更昂贵的机器视觉镜头兼容。
- en: Before even sending the frames through USB, the camera itself can efficiently
    perform some image processing operations, such as cropping the image and binning
    (summing) neighboring pixels to increase brightness and reduce noise. We will
    see how to control these features later in this chapter, in the *Capturing images
    from industrial cameras using PySpin* section.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 在通过USB发送帧之前，相机本身就可以高效地执行一些图像处理操作，例如裁剪图像和合并（求和）相邻像素以增加亮度和降低噪声。我们将在本章的“使用PySpin从工业相机捕获图像”部分中看到如何控制这些功能。
- en: The Point Grey Grasshopper 3 GS3-U3-23S6C-C is the same as the camera described
    previously, except it captures visible light in color instead of in monochrome.
    The Point Grey Grasshopper 3 GS3-U3-41C6NIR-C also belongs to the same family
    of cameras, but it is a monochrome NIR camera with a larger sensor (1" format),
    higher resolution, and lower frame rate. There are many other interesting Point
    Grey cameras, and you can search through a list of the available models and features
    at [https://www.flir.com/browse/camera-cores--components/machine-vision-cameras](https://www.flir.com/browse/camera-cores--components/machine-vision-cameras).
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: Point Grey Grasshopper 3 GS3-U3-23S6C-C与之前描述的相机相同，只是它捕获的是彩色可见光而不是单色。Point Grey
    Grasshopper 3 GS3-U3-41C6NIR-C也属于同一系列的相机，但它是一款具有更大传感器（1"格式）、更高分辨率和更低帧率的单色近红外相机。还有许多其他有趣的Point
    Grey相机，您可以在[https://www.flir.com/browse/camera-cores--components/machine-vision-cameras](https://www.flir.com/browse/camera-cores--components/machine-vision-cameras)上搜索可用的型号和功能列表。
- en: Next, let's look at how we can set up software libraries to control Point Grey
    cameras.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们看看我们如何设置软件库来控制Point Grey相机。
- en: Installing Spinnaker SDK and PySpin
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装Spinnaker SDK和PySpin
- en: 'To obtain drivers and libraries that will enable us to interface with Point
    Grey cameras, let''s take the following steps:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 要获取使我们能够与Point Grey相机接口的驱动程序和库，请按照以下步骤操作：
- en: Go to the Spinnaker SDK section of the FLIR website at [https://www.flir.com/products/spinnaker-sdk/](https://www.flir.com/products/spinnaker-sdk/).
    Click the DOWNLOAD NOW button. You will be prompted to go to a different download
    site. Click the DOWNLOAD FROM BOX button.
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问FLIR网站上的Spinnaker SDK部分，网址为[https://www.flir.com/products/spinnaker-sdk/](https://www.flir.com/products/spinnaker-sdk/)。点击“立即下载”按钮。您将被提示前往不同的下载网站。点击“从盒子下载”按钮。
- en: You will see a page that allows you to navigate a file structure to find the
    available downloads. Select the folder that matches your operating system, such
    as Windows or Linux/Ubuntu18.04.
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您将看到一个页面，允许您导航文件结构以查找可用的下载。选择与您的操作系统匹配的文件夹，例如Windows或Linux/Ubuntu18.04。
- en: Within the selected folder or its subfolders, find and download a version of
    Spinnaker SDK that matches your operating system and architecture. (For Windows,
    you may choose either the Web installer or the Full SDK.) Also, find and download
    a version of PySpin (the Python Spinnaker bindings) that matches your Python version,
    operating system, and architecture, such as `spinnaker_python-1.20.0.15-cp36-cp36m-win_amd64.zip`
    for 64-bit Python 3.6 on Windows.
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在所选文件夹或其子文件夹中，找到并下载与您的操作系统和架构匹配的Spinnaker SDK版本。（对于Windows，您可以选择Web安装程序或完整SDK。）还要找到并下载与您的Python版本、操作系统和架构匹配的PySpin（Python
    Spinnaker绑定）版本，例如`spinnaker_python-1.20.0.15-cp36-cp36m-win_amd64.zip`，适用于Windows上的64位Python
    3.6。
- en: Close the web browser.
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 关闭网页浏览器。
- en: 'The instructions for installation for the various systems are as follows:'
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 各种系统的安装说明如下：
- en: For Windows, the Spinnaker SDK installer is an `.exe` installer. Run it and
    follow the installer's prompts. If you are prompted to select an Installation
    Profile, choose Application Development. If you are prompted to select Installation
    Components, choose Documentation, Drivers, and any other components you want.
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于Windows，Spinnaker SDK安装程序是一个`.exe`安装程序。运行它并按照安装程序的提示操作。如果您被提示选择安装配置文件，请选择应用程序开发。如果您被提示选择安装组件，请选择文档、驱动程序以及您想要的任何其他组件。
- en: For Linux, the Spinnaker SDK download is a `TAR.GZ` archive. Unzip it to any
    destination, which we will refer to as `<spinnaker_sdk_unzip_destination>`. Open
    a Terminal, run `$ cd <spinnaker_sdk_unzip_destination> && ./install_spinnaker.sh`,
    and answer all the installer's prompts by entering `Yes`.
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于Linux，Spinnaker SDK下载是一个`TAR.GZ`存档。将其解压到任何位置，我们将将其称为`<spinnaker_sdk_unzip_destination>`。打开终端，运行`$
    cd <spinnaker_sdk_unzip_destination> && ./install_spinnaker.sh`，并输入`Yes`回答安装程序的提示。
- en: 'The Python Spinnaker download is a ZIP archive (for Windows) or a TAR archive
    (for Linux). Unzip it to any destination. We will refer to its unzip destination
    as `<PySpin_whl_unzip_destination>` because it contains a WHL file, such as `spinnaker_python-1.20.0.15-cp36-cp36m-win_amd64.whl`.
    We will refer to the `WHL` file as `<PySpin_whl_file>`. The WHL file is a package
    that can be installed using Python''s package manager, `pip`. Open a Terminal
    and run the following commands (but substitute the actual folder name and filename):'
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Python Spinnaker下载是一个ZIP存档（适用于Windows）或TAR存档（适用于Linux）。将其解压到任何位置。我们将将其解压目标称为`<PySpin_whl_unzip_destination>`，因为它包含一个WHL文件，例如`spinnaker_python-1.20.0.15-cp36-cp36m-win_amd64.whl`。我们将将其称为`<PySpin_whl_file>`。WHL文件是一个可以使用Python包管理器`pip`安装的包。打开终端并运行以下命令（但替换实际的文件夹名称和文件名）：
- en: '[PRE0]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: For some Python 3 environments, you may need to run `pip3` instead of `pip` in
    the preceding command.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 对于某些Python 3环境，您可能需要在上述命令中运行`pip3`而不是`pip`。
- en: At this point, we have all the software we need in order to control Point Grey
    cameras from Python scripts. Let's proceed to write a Python class that supports
    interoperability between PySpin and OpenCV.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一点上，我们已经拥有了从Python脚本控制Point Grey相机的所有软件。让我们继续编写一个支持PySpin和OpenCV之间互操作的Python类。
- en: Capturing images from industrial cameras using PySpin
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用PySpin从工业相机捕获图像
- en: 'Let''s create a file called `PySpinCapture.py`. Not surprisingly, we will begin
    its implementation with the following `import` statements:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们创建一个名为`PySpinCapture.py`的文件。不出所料，我们将从以下`import`语句开始其实现：
- en: '[PRE1]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'As a practical introduction to `PySpin`, let''s add the following function,
    which returns the number of PySpin-compatible cameras currently connected to the
    system:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 作为对`PySpin`的实际介绍，让我们添加以下函数，该函数返回当前连接到系统的PySpin兼容相机的数量：
- en: '[PRE2]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Here, we see that our standalone `getNumCameras` function (like any self-contained
    module of code that uses `PySpin`) is responsible for acquiring and releasing
    a reference to the `PySpin` system. We also see that the `PySpin` system is a
    gateway, providing access to any connected PySpin-compatible cameras.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们可以看到我们的独立`getNumCameras`函数（类似于任何使用`PySpin`的自包含代码模块）负责获取和释放对`PySpin`系统的引用。我们还可以看到`PySpin`系统是一个网关，提供对任何连接的PySpin兼容相机的访问。
- en: 'Our primary goal in this file is to implement a class, `PySpinCapture`, which
    will provide some of the same public methods as the `cv2.VideoCapture` class in
    OpenCV''s Python bindings. An instance of `PySpinCapture` will provide access
    to a single PySpin-compatible camera in a self-contained way. However, the class
    can be instantiated multiple times for simultaneous access to different cameras
    through different instances. `PySpinCapture` will implement the following methods
    to partly mimic the behavior of `cv2.VideoCapture`:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个文件中，我们的主要目标是实现一个名为`PySpinCapture`的类，它将提供与OpenCV的Python绑定中`cv2.VideoCapture`类相同的一些公共方法。`PySpinCapture`的一个实例将以自包含的方式提供对单个PySpin兼容相机的访问。然而，该类可以被多次实例化，以便通过不同的实例同时访问不同的相机。`PySpinCapture`将实现以下方法，部分模拟`cv2.VideoCapture`的行为：
- en: '`get(propId)`: This method returns the value of the camera property identified by
    the `propId` argument. We will support two of OpenCV''s `propId` constants, namely
    `cv2.CAP_PROP_FRAME_WIDTH` and `cv2.CAP_PROP_FRAME_HEIGHT`.'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`get(propId)`: 此方法通过`propId`参数返回由相机属性标识的值。我们将支持OpenCV的两个`propId`常量，即`cv2.CAP_PROP_FRAME_WIDTH`和`cv2.CAP_PROP_FRAME_HEIGHT`。'
- en: '`read(image=None)`: This method reads a camera frame and returns a tuple, `(retval,
    image_out)`, where `retval` is a Boolean indicating success (`True`) or failure
    (`False`), and `image_out` is the captured frame (or `None` if the capture failed).
    If the `image` argument is not `None` and the capture succeeds, then `image_out`
    is the same object as `image`, but it contains new data.'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`read(image=None)`: 此方法读取相机帧并返回一个元组 `(retval, image_out)`，其中 `retval` 是一个布尔值，表示成功
    (`True`) 或失败 (`False`)，而 `image_out` 是捕获的帧（如果捕获失败则为 `None`）。如果 `image` 参数不是 `None`
    并且捕获成功，则 `image_out` 与 `image` 是同一个对象，但它包含新的数据。'
- en: '`release()`: This method releases the camera''s resources. `cv2.VideoCapture`
    is implemented such that the destructor calls `release`, and `PySpinCapture` will
    be implemented this way too.'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`release()`: 此方法释放摄像头的资源。`cv2.VideoCapture` 的实现方式是析构函数调用 `release`，`PySpinCapture`
    也将以这种方式实现。'
- en: Other Python scripts will be able to call these methods on an object without
    needing to know whether the object is an instance of `cv2.VideoCapture`, `PySpinCapture`,
    or some other class that has the same methods. This is the case even though these
    classes have no relationship in terms of object-oriented inheritance. This feature
    of Python is called **duck typing**. *If it looks like a duck, swims like a duck,
    and quacks like a duck, then it probably is a duck,* or so the saying goes. If
    it provides a `read` method that returns a frame, then it probably *is* a frame-capture
    object. Later in this chapter, in the *Adapting the Lazy Eyes app to make Sunbaker*
    section, we will instantiate `PySpinCapture` if `PySpin` is available, and `cv2.VideoCapture`
    otherwise; then, we will use the instantiated object without further concern about
    its type.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 其他 Python 脚本将能够在对象上调用这些方法，而无需知道该对象是 `cv2.VideoCapture`、`PySpinCapture` 或具有相同方法的某些其他类的实例。即使这些类在面向对象继承方面没有关系，也是如此。Python
    的这个特性称为 **鸭子类型**。*如果它看起来像鸭子，游泳像鸭子，发出鸭子的叫声，那么它可能就是一只鸭子*，这句俗语如是说。如果它提供了一个返回帧的 `read`
    方法，那么它可能 *就是* 一个帧捕获对象。在本章的 *将 Lazy Eyes 应用适配为 Sunbaker* 部分中，我们将根据 `PySpin` 是否可用实例化
    `PySpinCapture`，否则实例化 `cv2.VideoCapture`；然后，我们将使用实例化的对象，而无需进一步关注其类型。
- en: 'Point Grey cameras are more configurable than most cameras supported by `cv2.VideoCapture`.
    Our `__init__` method for `PySpinCapture` will accept the following arguments:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: Point Grey 相机比 `cv2.VideoCapture` 支持的大多数相机都更可配置。我们的 `PySpinCapture` 的 `__init__`
    方法将接受以下参数：
- en: '`index`: This is the camera''s device index.'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`index`: 这是摄像头的设备索引。'
- en: '`roi`: This is a region of interest in the `(x, y, w, h)` format, relative
    to the camera''s native image dimensions. Data outside the region of interest
    will not be captured. For example, if the native image dimensions are *800 x 600*
    pixels, and the `roi` is `(0, 300, 800, 300)`, the captured image will cover only
    the bottom half of the image sensor.'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`roi`: 这是一个在 `(x, y, w, h)` 格式中的感兴趣区域，相对于摄像头的原生图像尺寸。感兴趣区域之外的数据将不会被捕获。例如，如果原生图像尺寸是
    *800 x 600* 像素，并且 `roi` 是 `(0, 300, 800, 300)`，则捕获的图像将仅覆盖图像传感器的下半部分。'
- en: '`binningRadius`: This is `1` if an unfiltered image should be captured, and
    `2` or more if neighboring pixels in the specified radius should be summed to
    produce a smaller, brighter, less noisy image.'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`binningRadius`: 如果要捕获未过滤的图像，则此值为 `1`，如果要在指定半径内的相邻像素求和以生成更小、更亮、更少噪声的图像，则此值为
    `2` 或更大。'
- en: '`isMonochrome`: This is `True` if the captured image should be grayscale, and
    `False` if it should be BGR.'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`isMonochrome`: 如果捕获的图像应该是灰度图，则为 `True`，如果应该是 BGR，则为 `False`。'
- en: 'The following code shows how we declare the `PySpinCapture` class and its `__init__`
    method:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码展示了我们如何声明 `PySpinCapture` 类及其 `__init__` 方法：
- en: '[PRE3]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'PySpin and the underlying Spinnaker SDK are organized around a hierarchical
    model of a system, the cameras in the system, and the respective configurations
    of the cameras. Each camera''s configuration is organized into a so-called **node
    map**, which defines properties, their supported values, and their current current
    values. To begin the implementation of our `__init__` method, we get an instance
    of the system, a list of cameras, and a specific camera by index. We initialize
    this camera and get its node map. All of this is seen in the following code:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: PySpin 和其底层的 Spinnaker SDK 是围绕一个系统的分层模型组织的，包括系统中的相机及其相应的配置。每个相机的配置组织到一个所谓的 **节点图**
    中，它定义了属性、它们支持的价值以及它们的当前值。为了开始实现我们的 `__init__` 方法，我们获取一个系统实例、一个相机列表以及一个通过索引指定的特定相机。我们初始化这个相机并获取其节点图。所有这些都在以下代码中可以看到：
- en: '[PRE4]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'We are interested in capturing a continuous series of video frames, rather
    than isolated still images. To support video capture, `PySpin` allows us to set
    a camera''s `''AcquisitionMode''` property to a value for a `''Continuous''` capture:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 我们对捕获一系列连续的视频帧感兴趣，而不是孤立的静态图像。为了支持视频捕获，`PySpin`允许我们将相机的`'AcquisitionMode'`属性设置为`'Continuous'`捕获的值：
- en: '[PRE5]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: For more information about nodes, their names, and relevant documentation, see
    the technical note* Spinnaker Nodes* on the FLIR website at [https://www.flir.com/support-center/iis/machine-vision/application-note/spinnaker-nodes/](https://www.flir.com/support-center/iis/machine-vision/application-note/spinnaker-nodes/).
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 有关节点、它们的名称和相关信息，请参阅FLIR网站上的技术笔记*Spinnaker Nodes*，网址为[https://www.flir.com/support-center/iis/machine-vision/application-note/spinnaker-nodes/](https://www.flir.com/support-center/iis/machine-vision/application-note/spinnaker-nodes/)。
- en: 'Next, we set a property called `''PixelFormat''` to either a value called `''Mono8''`
    or a value called `''BGR8''`, depending on whether our `__init__` method''s `isMonochrome`
    argument is `True`. Here is the relevant code:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们设置一个名为`'PixelFormat'`的属性，其值为`'Mono8'`或`'BGR8'`，这取决于`__init__`方法的`isMonochrome`参数是否为`True`。以下是相关代码：
- en: '[PRE6]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Similarly, we set a `''BinningVertical''` property based on our `binningRadius`
    argument (the horizontal binning radius is automatically set to the same value
    as the vertical binning radius). Here is the relevant code:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，我们根据`binningRadius`参数设置`'BinningVertical'`属性（水平合并半径自动设置为与垂直合并半径相同的值）。以下是相关代码：
- en: '[PRE7]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Likewise, based on the `roi` argument, we set the values of properties named
    `''OffsetX''`, `''OffsetY''`, `''Width''`, and `''Height''`, as seen in the following
    code:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，根据`roi`参数，我们设置名为`'OffsetX'`、`'OffsetY'`、`'Width'`和`'Height'`的属性值，如下面的代码所示：
- en: '[PRE8]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '`cv2.VideoCapture` starts a capture session as soon as it is constructed, so
    we want to do the same thing in `PySpinCapture`. So, we finish the `__init__`
    method''s implementation with the following line of code, which tells the camera
    to start acquiring frames:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '`cv2.VideoCapture`在构造时立即开始捕获会话，因此我们希望在`PySpinCapture`中也做同样的事情。因此，我们使用以下代码行完成`__init__`方法的实现，该代码行告诉相机开始获取帧：'
- en: '[PRE9]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'We use the node map again in the implementation of the `get` method. If `cv2.CAP_PROP_FRAME_WIDTH`
    is requested, we return the value of the `''Width''` property. If, instead, `cv2.CAP_PROP_FRAME_HEIGHT`
    is requested, we return the value of the `''Height''` property. For any other
    request, we return `0.0`. Here is the method''s implementation:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在`get`方法的实现中再次使用节点映射。如果请求`cv2.CAP_PROP_FRAME_WIDTH`，我们返回`'Width'`属性的值。如果请求的是`cv2.CAP_PROP_FRAME_HEIGHT`，我们返回`'Height'`属性的值。对于任何其他请求，我们返回`0.0`。以下是该方法实现：
- en: '[PRE10]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'We begin the implementation of the `read` method by telling the camera to capture
    a frame. If this fails, we return `False` and `None` (no image). Otherwise, we
    get the frame''s dimensions and number of channels, get its data as a NumPy array,
    and reshape this array to match the format that OpenCV expects. We copy the data,
    release the original frame, and then return `True` and the copied image. Here
    is the method''s implementation:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 我们通过告诉相机捕获一帧来开始实现`read`方法。如果这失败了，我们返回`False`和`None`（没有图像）。否则，我们获取帧的尺寸和通道数，将其数据作为NumPy数组获取，并将此数组重塑为OpenCV期望的格式。我们复制数据，释放原始帧，然后返回`True`和复制的图像。以下是该方法实现：
- en: '[PRE11]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'We implement the `release` method by telling the camera to stop acquiring frames,
    de-initializing and deleting the camera, clearing the list of cameras, and releasing
    the `PySpin` system. Here is the relevant code:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 我们通过告诉相机停止获取帧、取消初始化和删除相机、清除相机列表以及释放`PySpin`系统来实现`release`方法。以下是相关代码：
- en: '[PRE12]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'To complete the implementation of the `PySpinCapture` class, we provide the
    following destructor or `__del__` method, which simply calls the `release` method
    that we implemented previously:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 为了完成`PySpinCapture`类的实现，我们提供了以下析构函数或`__del__`方法，它简单地调用我们之前实现的`release`方法：
- en: '[PRE13]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Next, let's look at how to use `PySpinCapture` or `cv2.VideoCapture` interchangeably
    in our application.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们看看如何在我们的应用程序中交替使用`PySpinCapture`或`cv2.VideoCapture`。
- en: Adapting the Lazy Eyes app to make Sunbaker
  id: totrans-117
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将Lazy Eyes应用程序适配为Sunbaker
- en: As we discussed at the start of this chapter, `Sunbaker` is a variant of `Lazy
    Eyes` with support for more cameras. As a starting point, make a copy of the completed
    `LazyEyes.py` script from [Chapter 7](7cc1c0b9-a764-4069-9d45-e8bf129efc57.xhtml),
    *Seeing a Heartbeat with a Motion-Amplifying Camera*, and rename it `Sunbaker.py`.
    The supported cameras in `Sunbaker` will vary depending on the modules that are
    available at runtime.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们在本章开头所讨论的，`Sunbaker` 是 `Lazy Eyes` 的一个变体，支持更多相机。作为一个起点，从 [第 7 章](7cc1c0b9-a764-4069-9d45-e8bf129efc57.xhtml)
    的 *使用运动放大相机观察心跳* 中复制完成的 `LazyEyes.py` 脚本，并将其重命名为 `Sunbaker.py`。`Sunbaker` 支持的相机将取决于运行时可用模块。
- en: 'Add the following `try`/`except` block after the other `import` statements
    in `Sunbaker.py`:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `Sunbaker.py` 中的其他 `import` 语句之后添加以下 `try`/`except` 块：
- en: '[PRE14]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: The preceding block of code tries to import our `PySpinCapture` module, which
    contains our `getNumCameras` function and our `PySpinCapture` class. The `PySpinCapture`
    module, in turn, imports the `PySpin` module, as we saw earlier in this chapter
    in the *Capturing images from industrial cameras using PySpin* section. If the
    `PySpin` module is not found, `ImportError` is thrown. The preceding block of
    code catches this error and it defines `PySpinCapture = None` as a way to note that
    we failed to import an optional dependency, namely the `PySpinCapture` module.
    Later in `Sunbaker.py`, we will use the `PySpinCapture` module only when `PySpinCapture`
    is not `None`.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 上述代码块尝试导入我们的 `PySpinCapture` 模块，该模块包含我们的 `getNumCameras` 函数和 `PySpinCapture`
    类。反过来，`PySpinCapture` 模块会导入我们在本章前面的 *使用 PySpin 从工业相机捕获图像* 部分中看到的 `PySpin` 模块。如果找不到
    `PySpin` 模块，则会抛出 `ImportError`。上述代码块捕获此错误，并定义 `PySpinCapture = None` 作为我们未能导入可选依赖项（即
    `PySpinCapture` 模块）的标记。在 `Sunbaker.py` 的后面，我们只有在 `PySpinCapture` 不是 `None` 时才会使用
    `PySpinCapture` 模块。
- en: 'We must modify the `__init__` method of the `Sunbaker` class to remove the `cameraDeviceID`
    and `imageSize` arguments, and instead add a `capture` argument and an `isCaptureMonochrome`
    argument. The `capture` argument can be either a `cv2.VideoCapture` object or
    a `PySpinCapture` object. We assume that `capture` argument''s width, height,
    and other properties are already fully configured before capture is passed to
    `__init__`. So, we have no need to call `ResizeUtils.cvResizeCapture` in `__init__` (and we
    can remove `ResizeUtils` from the list of imports). We attempt to get the image
    dimensions and format (grayscale or not) from an actual frame. If this fails,
    we will instead rely on getting the dimensions from the `capture` argument''s
    properties and the format from the `isCaptureMonochrome` argument. The modifications
    to `__init__` are marked in bold in the following code:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 我们必须修改 `Sunbaker` 类的 `__init__` 方法，以移除 `cameraDeviceID` 和 `imageSize` 参数，并添加一个
    `capture` 参数和一个 `isCaptureMonochrome` 参数。`capture` 参数可以是 `cv2.VideoCapture` 对象或
    `PySpinCapture` 对象。我们假设在捕获传递给 `__init__` 之前，`capture` 参数的宽度、高度和其他属性已经完全配置。因此，我们不需要在
    `__init__` 中调用 `ResizeUtils.cvResizeCapture`（并且我们可以从导入列表中删除 `ResizeUtils`）。我们尝试从实际帧中获取图像尺寸和格式（是否为灰度），如果失败，我们将转而依赖从
    `capture` 参数的属性中获取尺寸，从 `isCaptureMonochrome` 参数中获取格式。`__init__` 的修改以粗体标注：
- en: '[PRE15]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'The `_applyEulerianVideoMagnification` method needs minor modifications to
    support the possibility that the input is not a BGR image, but rather a grayscale
    image from a monochrome camera. Again, the modifications are marked in bold in
    the following code:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '`_applyEulerianVideoMagnification` 方法需要稍作修改以支持输入不是 BGR 图像，而是一个来自单色相机的灰度图像。同样，以下代码中的修改以粗体标注：'
- en: '[PRE16]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Finally, the `main` function needs modifications to provide appropriate `capture`
    and `isCaptureMonochrome` arguments to `Sunbaker` application''s `__init__` method.
    As an example, let''s suppose that if `PySpin` is available, we want to use a
    monochrome camera with a binning radius of `2` and a capture resolution of *960
    x 600*. (The GS3-U3-23S6M-C camera supports this configuration.) Alternatively,
    if `PySpin` is unavailable or if no PySpin-compatible camera is connected, let''s
    use an OpenCV-compatible camera with a capture resolution of *640 x 480* at 60
    FPS. The relevant modifications are marked in bold in the following code:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，`main` 函数需要进行修改，以便为 `Sunbaker` 应用程序的 `__init__` 方法提供适当的 `capture` 和 `isCaptureMonochrome`
    参数。例如，假设如果 `PySpin` 可用，我们希望使用一个具有 `2` 像素合并半径和 *960 x 600* 捕获分辨率的单色相机。（GS3-U3-23S6M-C
    相机支持这种配置。）如果 `PySpin` 不可用或没有连接 PySpin 兼容的相机，则让我们使用一个具有 *640 x 480* 捕获分辨率和 60 FPS
    的 OpenCV 兼容相机。以下代码中的相关修改以粗体标注：
- en: '[PRE17]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: You might need to modify the preceding code based on the capture modes that
    are supported by your cameras. If you are interested in using the PlayStation
    Eye camera at its maximum frame rate, you should comment out the lines of code
    that pertain to *640 x 480* resolution at 60 FPS, and uncomment the lines of code
    that pertain to *320 x 240* resolution at 187 FPS.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能需要根据摄像头支持的捕获模式修改前面的代码。如果你对使用 PlayStation Eye 摄像头在最大帧率下感兴趣，你应该注释掉与 *640 x
    480* 分辨率 60 FPS 相关的代码行，并取消注释与 *320 x 240* 分辨率 187 FPS 相关的代码行。
- en: This brings us to the end of the code revisions. Now, you can test `Sunbaker`
    with either a Point Grey camera or an OpenCV-compatible camera such as a USB webcam.
    Take some time to adjust the camera parameters, as well as the parameters of the
    Eulerian video magnification algorithm (the latter are described in detail in [Chapter
    7](7cc1c0b9-a764-4069-9d45-e8bf129efc57.xhtml), *Seeing a Heartbeat with a Motion-Amplifying
    Camera*, in the *Configuring and testing the app for various motions* section).
    Experiment with a variety of subjects and lighting conditions, including outdoor
    sunlight. If you are using a UV camera, remember to look at the flowers!
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 这就标志着代码修订工作的结束。现在，你可以使用 Point Grey 摄像头或任何兼容 OpenCV 的摄像头（例如 USB 摄像头）来测试 `Sunbaker`。花些时间调整摄像头参数，以及欧拉视频放大算法的参数（后者在[第
    7 章](7cc1c0b9-a764-4069-9d45-e8bf129efc57.xhtml)，“用运动放大摄像头观察心跳”，在“配置和测试应用程序以适应各种运动”部分中详细描述）。尝试各种主题和照明条件，包括户外阳光。如果你使用的是紫外线摄像头，记得看看花朵！
- en: Summary
  id: totrans-130
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: This chapter has broadened our view of the things cameras can see. We have considered
    video capture at high frame rates and at wavelengths of light that are invisible
    to the human eye. As programmers, we have learned to wrap a third-party camera
    API in a way that allows us to use industrial cameras and OpenCV-compatible webcams
    interchangeably, thanks to Python's duck typing. As experimenters, we have extended
    our study of Eulerian video magnification into higher frequencies of motion, as
    well as more surprising patterns of pulsing light beyond the visible spectrum.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 本章拓宽了我们对于摄像头能看到的物体的认识。我们考虑了高帧率视频捕获以及人眼看不见的光波长的捕获。作为程序员，我们学会了以一种方式封装第三方摄像头 API，这样我们就可以通过
    Python 的鸭子类型来互换使用工业摄像头和兼容 OpenCV 的网络摄像头。作为实验者，我们将对欧拉视频放大的研究扩展到更高的运动频率，以及超出可见光谱的更多令人惊讶的脉冲光模式。
- en: Let's reflect on all our progress. From finding the head of SPECTRE to exploring
    the electromagnetic spectrum, our journey as secret agents has taken us far. At
    this proud moment, however, our adventure must reach its conclusion. We will meet
    again. Look out for future books, webcasts, and presentations, to be announced
    on my website at [http://nummist.com/opencv](http://nummist.com/opencv). Also,
    email me at [josephhowse@nummist.com](mailto:josephhowse@nummist.com) to report
    issues, ask questions, and tell me how you are using OpenCV.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们回顾一下我们所取得的进步。从找到 SPECTRE 的头目到探索电磁频谱，我们作为秘密特工的旅程已经走得很远了。然而，在这个自豪的时刻，我们的冒险必须画上句号。我们将会再次见面。请关注我网站上即将发布的未来书籍、网络直播和演示，网址为
    [http://nummist.com/opencv](http://nummist.com/opencv)。你也可以通过发送电子邮件至 [josephhowse@nummist.com](mailto:josephhowse@nummist.com)
    来向我报告问题、提问，并告诉我你是如何使用 OpenCV 的。
- en: The book is ending now and I am waiting to find out whether I disappear into
    the sunset with a femme fatale or whether I have a melancholy debriefing with
    M.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 书现在即将结束，我正等待了解自己是否会与一个性感尤物一起消失在日落中，还是与 M 进行一次忧郁的总结会议。
