- en: '6'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '6'
- en: Unsupervised Methods for Time-Series
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 时间序列的无监督方法
- en: We've discussed forecasting in the previous chapter, and we'll talk about predictions
    from time-series in the next chapter. The performance of these predictive models
    is easily undermined by major changes in the data. Recognizing these changes is
    the domain of unsupervised learning.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在前一章已经讨论了预测方法，接下来我们将在下一章中讨论时间序列的预测。这些预测模型的性能很容易受到数据中重大变化的影响。识别这些变化是无监督学习的领域。
- en: 'In this chapter, we''ll describe the specific challenges of unsupervised learning
    with time-series data. At the core of unsupervised learning is the extraction
    of structure from time-series, most importantly recognizing similarities between
    subsequences. This is the essence of anomaly detection (also: outlier detection),
    where we want to identify sequences that are notably different from the rest of
    the series.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将描述使用时间序列数据进行无监督学习的具体挑战。无监督学习的核心是从时间序列中提取结构，最重要的是识别子序列之间的相似性。这正是异常检测的本质（同样适用于：离群点检测），我们希望识别出与其他序列明显不同的序列。
- en: Time-series data is usually non-stationary, non-linear, and dynamically evolving.
    An important challenge of working with time-series is recognizing the changes
    in the underlying processes. This is called change point detection (CPD) or drift
    detection. Data changes over time, and it is crucial to recognize how much it
    changes. This is worth diving into, because the existence of change points and
    anomalous points are common problems with real-world applications.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 时间序列数据通常是非平稳的、非线性的，并且是动态演化的。处理时间序列的一个重要挑战是识别潜在过程中的变化。这被称为变点检测（CPD）或漂移检测。数据随着时间的推移而变化，识别这些变化的程度至关重要。这是值得深入探讨的，因为变点和异常点的存在是现实应用中的常见问题。
- en: In this chapter, we'll concentrate on anomaly detection and CPD, while in *Chapter
    8*, *Online Learning for Time-Series*, we'll look at drift detection in more detail.
    We'll start with an overview and definitions, before looking at industry practices
    at big tech companies.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将集中讨论异常检测和变点检测（CPD），而在*第8章*中，*时间序列的在线学习*，我们将更详细地探讨漂移检测。我们将从概述和定义开始，然后研究大科技公司在行业中的实践。
- en: 'We''re going to cover the following topics:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将讨论以下主题：
- en: Unsupervised methods for time-series
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 时间序列的无监督方法
- en: Anomaly detection
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 异常检测
- en: Change detection
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 变更检测
- en: Clustering
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 聚类
- en: Python practice
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python 实践
- en: We'll start with a general introduction to unsupervised learning with time-series.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从无监督学习与时间序列的总体介绍开始。
- en: Unsupervised methods for time-series
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 时间序列的无监督方法
- en: The main difference between time-series and other types of data is the dependence
    on the temporal axis; a correlation structure at one point *t*[1] could have very
    different information to the same structure at point *t*[2]. Time-series often
    contain lots of noise and have high dimensionality.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 时间序列与其他类型数据的主要区别在于它对时间轴的依赖；在某一点 *t*[1] 上的相关结构可能与在点 *t*[2] 上的相同结构包含完全不同的信息。时间序列通常包含大量噪声且维度较高。
- en: To reduce the noise and decrease the dimensionality, dimensionality reduction,
    wavelet analysis, or signal processing techniques such as filtering, for example,
    Fourier decomposition, can be applied. This is often at the basis of anomaly detection
    or CPD, the techniques we are discussing in this chapter. We'll discuss drift
    detection in *Chapter 8*, *Online Methods for Time-Series*.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 为了减少噪声并降低维度，可以应用降维、波形分析或信号处理技术，例如傅里叶分解。这些通常是异常检测或变点检测（CPD）技术的基础，我们将在本章讨论这些技术。我们将在*第8章*中讨论漂移检测，*在线时间序列方法*。
- en: 'We''ll be talking in detail about anomalies and change points, and it might
    be helpful to see an illustration of how anomalies and change points can look
    like. In the article "*Social tipping dynamics for stabilizing Earth''s climate
    by 2050*" by Ilona Otto and others, they analyzed whether and how a change in
    greenhouse gas emissions based on social dynamics could transform countries into
    carbon-neutral societies. They project global warming according to different scenarios
    in the following plot with a tipping point (another word for change point) around
    2010 and the early 2020s (chart adapted from their article):'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将详细讨论异常值和变化点，查看它们的表现形式可能会有所帮助。在Ilona Otto等人的文章《*2050年通过社会动态稳定地球气候的社会临界动态*》中，他们分析了基于社会动态的温室气体排放变化是否以及如何将各国转变为碳中和社会。他们根据不同的情景预测了全球变暖，以下图显示了2010年及2020年代初期的临界点（图表改编自他们的文章）：
- en: '![](img/B17577_06_01.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B17577_06_01.png)'
- en: 'Figure 6.1: Possible change points based on greenhouse gas emissions'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.1：基于温室气体排放的可能变化点
- en: Global temperatures have cycled between periods of glaciations and warm periods,
    each cycle taking somewhere in the order of tens of thousands of years. For the
    last few thousand years, the climate was cooling leading to widespread speculations
    as late as the 1970s around a cooling trend that could lead to another ice age.
    However, data indicates that since the beginning of industrialization, largely
    driven by the burning of fossil fuels, global temperature has increased about
    a full 1°C.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 全球气温在冰川期和温暖期之间循环变化，每个周期大约持续数万年。在过去几千年里，气候逐渐变冷，直到1970年代，关于可能导致下一次冰河时期的降温趋势有了广泛的猜测。然而，数据表明，自工业化开始以来，主要由燃烧化石燃料推动，全球气温已上升了约1°C。
- en: 'Therefore, the beginning of the industrial period could be considered a change
    point for global temperatures as the following graph illustrates (source: Wikimedia
    Commons):'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，工业化时期的开始可以视为全球气温的一个变化点，如下图所示（来源：维基媒体共享资源）：
- en: '![ile:Temperature reconstruction last two millennia.svg](img/B17577_06_02.png)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![ile:Temperature reconstruction last two millennia.svg](img/B17577_06_02.png)'
- en: 'Figure 6.2: Change point in global temperatures: the beginning of the industrial
    age'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.2：全球气温变化点：工业时代的开始
- en: In the graph above, the change point at the onset of the industrial revolution
    precedes the anomaly of modern temperature rises.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的图表中，工业革命开始时的变化点出现在现代气温上升的异常值之前。
- en: For a human, it's relatively easy to point out change points or anomalies, especially
    in hindsight when the full historical data is available. For automatic detection,
    there are lots of different ways to find salient points. In a practical context,
    it's important to carefully balance detection rates and false positives.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 对于人类来说，指出变化点或异常值相对容易，特别是在事后，历史数据完全可得的情况下。对于自动检测，有很多不同的方法可以找到显著的点。在实际应用中，重要的是要仔细平衡检测率和假阳性。
- en: Anomaly detection
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 异常检测
- en: In anomaly detection, we want to identify sequences that are notably different
    from the rest of the series. Anomalies or outliers can sometimes be the result
    of measurement error or noise, but they could indicate changes to behavior or
    aberrant behavior in the system under observation, which could require urgent
    action.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在异常检测中，我们希望识别出与其余序列明显不同的序列。异常值或离群点有时可能是测量误差或噪声的结果，但它们也可能表明被观察系统的行为发生了变化或出现了异常行为，这可能需要采取紧急措施。
- en: An important application of anomaly detection is automatic real-time monitoring
    of potentially complex, high-dimensional datasets.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 异常检测的一个重要应用是对潜在复杂、高维数据集的自动实时监控。
- en: 'It''s time for an attempt at a definition (after D.M. Hawkins, 1980, "*Identification
    of Outliers*"):'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 是时候尝试给出一个定义了（参考 D.M. Hawkins, 1980，《*异常值识别*》）：
- en: '**Definition**: An outlier is a data point that deviates so significantly from
    other observations that it could have been generated by a different mechanism.'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '**定义**：异常值是指与其他观测值差异极大的数据点，以至于它可能是由不同的机制产生的。'
- en: Let's start with a plot, so we can see how an anomaly might look graphically.
    This will also provide us context for our discussion.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从一个图表开始，这样我们可以直观地看到异常值在图形上可能的表现。这也为我们的讨论提供了背景。
- en: Anomaly detection methods can be distinguished between univariate and multivariate
    methods. Parametric anomaly detection methods, by the choice of their distribution
    parameters (for example, the arithmetic mean), place an assumption on the underlying
    distribution – often the Gaussian distribution. These methods flag outliers, points
    that deviate from the model's assumptions.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 异常值检测方法可以分为单变量方法和多变量方法。参数化异常值检测方法通过选择其分布参数（例如，算术平均值），对底层分布做出假设——通常是高斯分布。这些方法标记出偏离模型假设的异常值。
- en: 'In the simplest case, we can define an outlier as follows as the z-score of
    the observation *x*[i] with respect to the distribution parameters:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在最简单的情况下，我们可以定义一个异常值，如下所示，观察值 *x*[i] 相对于分布参数的 z-得分：
- en: '![](img/B17577_06_001.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B17577_06_001.png)'
- en: The z-score measures the distance of each point from the moving average or sample
    mean, ![](img/B17577_06_002.png), in units of the moving or sample standard deviation
    ![](img/B17577_06_003.png). It is positive for values that lie above the mean,
    and negative for those that lie below the mean.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: z-得分衡量每个点与移动平均或样本均值之间的距离，![](img/B17577_06_002.png)，以移动或样本标准差的单位！[](img/B17577_06_003.png)。对于高于均值的值，它为正；对于低于均值的值，它为负。
- en: In this formula, ![](img/B17577_06_004.png) and ![](img/B17577_06_005.png) are
    the estimated mean and standard deviation of the time-series and *x* is the point
    that we want to test. Finally, ![](img/B17577_06_006.png) is a threshold dependent
    on the confidence interval that we are interested in – often, 2 or 1.96 are chosen
    for this, corresponding to a confidence interval of 95%. In this way, outliers
    are points that occur 5% or less of the time.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在此公式中，![](img/B17577_06_004.png) 和 ![](img/B17577_06_005.png) 是时间序列的估计均值和标准差，*x*
    是我们想要测试的点。最后，![](img/B17577_06_006.png) 是一个依赖于我们感兴趣的置信区间的阈值——通常，选择 2 或 1.96，对应于
    95% 的置信区间。通过这种方式，异常值是指发生概率小于或等于 5% 的点。
- en: The z-score makes an assumption of normal-distributed data; however, the mean
    and standard deviation used in the outlier formula above can be replaced by other
    measures that do away with this assumption. Measures such as the median or the
    interquartile range (as discussed in *Chapter 2*, *Time-Series Analysis with Python*)
    are more robust to the distribution.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: z-得分假设数据是正态分布的；然而，以上异常值公式中使用的均值和标准差可以被其他去除此假设的度量替代。像中位数或四分位距（在*第2章*中有讨论，*使用Python进行时间序列分析*）等度量对分布更加稳健。
- en: 'The Hampel filter (also: Hampel identifier) is a special case for this, where
    the median and the **median absolute deviation** (**MAD**) are employed:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: Hampel 滤波器（也叫 Hampel 标识符）是这一特殊情况，其中使用了中位数和**中位绝对偏差**（**MAD**）：
- en: '![](img/B17577_06_007.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B17577_06_007.png)'
- en: 'In this equation, the sample mean is replaced by the (sample) median and the
    standard deviation by the MAD, which is defined as:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个方程中，样本均值被（样本）中位数取代，标准差被 MAD（绝对中位差）取代，MAD 的定义如下：
- en: '![](img/B17577_06_008.png)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B17577_06_008.png)'
- en: The median, in turn, is the middle number in a sorted list of numbers.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 中位数是按顺序排列的数值列表中的中间数。
- en: In the Hampel filter, each observation, x, will be compared to the median. In
    the case of the normal distribution, the Hampel filter is equivalent to the z-score,
    and epsilon can be chosen the same way as for the z-score.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Hampel 滤波器中，每个观察值 x 将与中位数进行比较。在正态分布的情况下，Hampel 滤波器等同于 z-得分，epsilon 可以像 z-得分一样选择。
- en: 'In the multivariate case, the outlier function can be expressed as the distance
    (or, inversely: similarity) to a point in the model distribution such as the center
    of gravity, the mean. For example, we could take the covariance of the new observation
    to the mean.'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在多变量情况下，异常值函数可以表示为到模型分布中某一点的距离（或者相反：相似度），例如重心、均值。例如，我们可以计算新观察值与均值之间的协方差。
- en: While these former methods are restricted to low-dimensional or univariate time-series,
    distance-based methods can handle much larger spaces. Distance-based anomaly detection
    methods effectively cluster points into different groups, where small groups will
    be labeled outliers. In these methods, the choice of distance measure is crucial.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管这些前述方法仅限于低维或单变量时间序列，但基于距离的方法可以处理更大的空间。基于距离的异常值检测方法有效地将点聚类为不同的组，其中小组会被标记为异常值。在这些方法中，距离度量的选择至关重要。
- en: 'Some of the challenges to detect anomalies in time-series are:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 检测时间序列中异常值的挑战之一是：
- en: Lack of a definition of outliers
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 缺乏异常值的定义
- en: Noise within the input data
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 输入数据中的噪声
- en: Complexity of time-series
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 时间序列的复杂性
- en: High imbalance
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 高度不平衡
- en: We often don't really know what outliers look like. In practical settings, we
    often don't have labels for the outliers – rendering benchmarking against real
    cases impossible. As for the complexity, time-series change over time, they are
    often non-stationary and the dependence between variables can be non-linear. Finally,
    we typically have a lot more normal observations than outliers.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 我们通常并不知道异常值长什么样。在实际应用中，我们往往没有异常值的标签——这使得基于真实案例的基准测试变得不可能。至于复杂性，时间序列会随着时间变化，它们通常是非平稳的，变量之间的依赖关系可能是非线性的。最后，我们通常有比异常值更多的正常观测值。
- en: A requirement for deploying anomaly detection models as services at scale is
    that they should be able to detect anomalies in real time.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 部署大规模异常检测模型作为服务的一个要求是，它们应该能够实时检测到异常。
- en: 'Applications for anomaly detection encompass the ones in this diagram:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 异常检测的应用包括此图中的内容：
- en: '![anomaly_detection_application.png](img/B17577_06_03.png)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![anomaly_detection_application.png](img/B17577_06_03.png)'
- en: 'Figure 6.3: Applications for anomaly detection'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.3：异常检测的应用
- en: Some examples could be fraud detection with payments, network security (cyber
    intrusion), medical monitoring, or sensor networks. In medical monitoring, we
    want to work with real-time monitoring of physiological variables including heart
    rate, electroencephalogram, and electrocardiogram for alerting in case of acute
    emergencies. Anomaly alerts in sensor networks can help prevent cases of industrial
    damage, for example.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 一些例子可能包括支付中的欺诈检测、网络安全（网络入侵）、医学监控或传感器网络。在医学监控中，我们希望实时监测生理变量，包括心率、脑电图和心电图，以便在急性紧急情况下发出警报。传感器网络中的异常警报有助于防止工业损害的发生。
- en: 'This diagram illustrates the main types of anomaly detection methods depending
    on the available knowledge of the dataset:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 该图表说明了根据数据集的可用知识，异常检测方法的主要类型：
- en: '![Anomaly_Detection.png](img/B17577_06_04.png)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![Anomaly_Detection.png](img/B17577_06_04.png)'
- en: 'Figure 6.4: Anomaly detection methods depending on available knowledge'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.4：根据可用知识的异常检测方法
- en: The earliest examples for anomaly detection consist of rule-based systems. This
    works when the patterns can be clearly defined. When we have an annotated set
    of anomalies, we can apply supervised or semi-supervised methods such as classifiers
    or regression models. The most common use case, however, is when anomalies are
    not annotated and we need unsupervised approaches to detect anomalous points or
    sections based on densities or distributions.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 最早的异常检测例子是基于规则的系统。当模式可以清晰定义时，这种方法有效。当我们有一个标注好的异常集时，我们可以应用监督或半监督方法，如分类器或回归模型。然而，最常见的使用场景是异常没有标注，我们需要无监督方法来基于密度或分布检测异常点或异常区间。
- en: It's instructive to see what the big technology companies, Alphabet (Google),
    Amazon, Facebook, Apple, and Microsoft (GAFAM), do for anomaly detection. Let's go
    over each in turn and see how they handle anomaly detection.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 观察大科技公司（如 Alphabet（谷歌）、Amazon、Facebook、Apple 和 Microsoft（GAFAM））在异常检测方面的做法是很有启发性的。我们逐一看看它们是如何处理异常检测的。
- en: Microsoft
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 微软
- en: In the paper "*Time-Series Anomaly Detection Service at Microsoft*" (Hansheng
    Ren and others, 2019) a time-series service is presented that's deployed for anomaly
    detection for production data at Microsoft. Its core is a **Spectral Residual**
    (**SR**) and Convolutional Neural Network (CNN) that's applied to unsupervised
    online anomaly detection in univariate time-series.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在论文《微软的时间序列异常检测服务》（Hansheng Ren 等，2019）中，介绍了一种为微软生产数据的异常检测而部署的时间序列服务。其核心是**谱残差**（**SR**）和卷积神经网络（CNN），应用于单变量时间序列的无监督在线异常检测。
- en: They borrowed the SR method from the concept of the saliency map in vision.
    Saliency maps highlight the points in images, which stand out to human observers.
    The algorithm performs the Fourier Transform of the data, then it applies the
    SR of the log amplitude of the transformed signal, and finally projects the spectral
    data back to the temporal domain with the Inverse Fourier Transform.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 它们借用了来自计算机视觉中显著性图（saliency map）概念的 SR 方法。显著性图突出显示图像中对人类观察者来说突出的点。该算法对数据执行傅里叶变换，然后应用变换信号的对数幅度的
    SR，最后通过逆傅里叶变换将频谱数据投影回时域。
- en: As an extension, they train a CNN based on artificial data using the SR method.
    They show benchmarks on publicly available data that support their claim that
    their method is the state of the art for anomaly detection.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 作为扩展，他们基于人工数据使用SR方法训练了一个卷积神经网络（CNN）。他们展示了在公开可用数据上的基准测试，支持他们的主张：他们的方法是异常检测领域的最新技术。
- en: They further claim that their detection accuracy (F1-score) is improved by more
    than 20% on Microsoft production data. You can find the basic implementation in
    the alibi-detect library (the "*Spectral Residual*" method).
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 他们进一步声称，在微软生产数据上，他们的检测准确性（F1得分）提高了超过20%。你可以在alibi-detect库中找到基本实现（"*谱残差*"方法）。
- en: Google
  id: totrans-66
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Google
- en: In their frequently asked questions on Google Analytics ([https://support.google.com/analytics/answer/7507748?hl=en](https://support.google.com/analytics/answer/7507748?hl=en)),
    Google refer to a Bayesian state space-time-series model ("*Predicting the Present
    with Bayesian Structural Time-Series*" by Steven L. Scott and Hal Varian, 2013)
    for change point and anomaly detection.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在Google Analytics的常见问题中（[https://support.google.com/analytics/answer/7507748?hl=en](https://support.google.com/analytics/answer/7507748?hl=en)），谷歌提到了一个贝叶斯状态空间时间序列模型（"*用贝叶斯结构时间序列预测当前状态*"，作者Steven
    L. Scott和Hal Varian，2013），用于变化点和异常检测。
- en: Google released an R package with more specific time-series functionality –
    CausalImpact. A paper describing the research behind the package was published
    in 2015 ("*Inferring causal impact using Bayesian structural time-series models*"
    by Kay H. Brodersen, Fabian Gallusser, Jim Koehler, Nicolas Remy, Steven L. Scott).
    CausalImpact estimates the causal effect of interventions based on a structural
    Bayesian time-series model. This has been ported to Python (the pycausalimpact
    library).We are going to experiment with causal impact analysis using Bayesian
    Structural Time-Series (BSTS) in *Chapter 9*, *Probabilistic Models for Time-Series*.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 谷歌发布了一个具有更具体时间序列功能的R包——CausalImpact。描述该包背后研究的论文于2015年发布（"*通过贝叶斯结构时间序列模型推断因果影响*"，作者Kay
    H. Brodersen, Fabian Gallusser, Jim Koehler, Nicolas Remy, Steven L. Scott）。CausalImpact基于结构化贝叶斯时间序列模型估计干预的因果效应。该方法已被移植到Python（pycausalimpact库）。我们将在*第9章*，*时间序列的概率模型*中实验使用贝叶斯结构时间序列（BSTS）进行因果影响分析。
- en: Amazon
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Amazon
- en: Amazon, providing machine learning solutions at scale through their **Amazon
    Web Services** (**AWS**) platform, have anomaly detection as part of their resource
    and application monitoring solution, CloudWatch. It's unclear how their solution
    works, but Corey Quinn, an economist, theorized in a tweet that their solution
    is exponential smoothing. As part of that it is likely that they apply seasonal
    decomposition as a first step of their algorithm.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 亚马逊通过其**亚马逊云服务**（**AWS**）平台提供大规模的机器学习解决方案，其中包含异常检测功能，作为其资源和应用监控解决方案CloudWatch的一部分。尽管其解决方案的具体原理尚不清楚，但经济学家Corey
    Quinn在一条推文中推测，他们的解决方案可能是指数平滑。作为其中的一部分，他们很可能将季节性分解作为算法的第一步。
- en: 'They also have a second service for anomaly detection: Amazon Lookout for Metrics.
    It''s also unclear how this works under the hood. The service is geared toward
    monitoring business indicators, and – according to the documentation – is used
    internally within Amazon for large-scale monitoring. In the service, users can
    select fields from data sources with different breakdowns, for example, by selecting
    database columns `page_views` and `device_type`, users could look for abnormal
    changes in page views for every device type separately.'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 他们还有第二项异常检测服务：Amazon Lookout for Metrics。关于该服务的具体工作原理也不清楚。该服务旨在监控业务指标，并且——根据文档——在亚马逊内部用于大规模监控。在此服务中，用户可以从不同细分的数据源中选择字段，例如，通过选择数据库列`page_views`和`device_type`，用户可以分别查看每种设备类型下页面浏览量的异常变化。
- en: As for Amazon research in anomaly detection, they clinched the top three spots,
    out of 117 submissions in a challenge at the Workshop on the **Detection and Classification
    of Acoustic Scenes and Events** (**DCASE** 2020). This is a challenge comparable
    to time-series anomaly detection. They won the best paper award with "*Group Masked
    Autoencoder Based Density Estimator for Audio Anomaly Detection*" (Ritwik Giri
    and others, 2020).
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 至于亚马逊在异常检测领域的研究，他们在**声学场景与事件检测与分类**研讨会（**DCASE** 2020）中的117个参赛作品中荣获前三名。他们在这次与时间序列异常检测类似的挑战中获得了最佳论文奖，论文题为"*基于组掩蔽自编码器的音频异常检测密度估计器*"（作者Ritwik
    Giri等，2020）。
- en: Facebook
  id: totrans-73
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Facebook
- en: Facebook's Core Data Science team open-sourced their implementation for time-series
    forecasting and anomaly detection on GitHub. Their library is called Prophet.
    In their blog post announcing the library in 2017, they state that Prophet had
    been a key piece in Facebook's ability to create forecasts at scale and trusted
    as an important piece of information in decision-making.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: Facebook的核心数据科学团队在GitHub上开源了他们用于时间序列预测和异常检测的实现。这个库叫做Prophet。在2017年宣布这个库的博客文章中，他们表示，Prophet是Facebook能够大规模创建预测的关键工具，并且在决策过程中被认为是重要的信息来源。
- en: The paper "*Forecasting at scale*" by Sean J Taylor and Benjamin Letham (2017)
    describes their setup at Facebook that includes an analyst in the loop and can
    automatically flag forecasts for manual review and adjustment. The anomaly detection
    builds on the uncertainty around the forecast from a Generalized Additive Model
    (GAM).
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: Sean J Taylor和Benjamin Letham（2017）在论文《*大规模预测*》中描述了他们在Facebook的设置，包括一个分析师参与的环节，并且能够自动标记预测结果进行人工审查和调整。异常检测建立在来自广义加法模型（GAM）预测的不确定性基础上。
- en: Prophet has been compared in benchmarks to other probabilistic and non-probabilistic
    models, and has rarely shown outstanding success. The Elo ratings at microprediction.com
    indicate that Prophet performs worse at univariate forecasts than exponential
    moving averages and many other standard methods.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: Prophet已在基准测试中与其他概率模型和非概率模型进行了比较，且很少展现出突出的成功。microprediction.com的Elo评分表明，Prophet在单变量预测方面表现不如指数移动平均和许多其他标准方法。
- en: Twitter
  id: totrans-77
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Twitter
- en: Twitter released an R package as well, called AnomalyDetection. Their method
    is based on the Generalized Extreme Studentized Deviate (ESD) test for detecting
    anomalies in univariate approximately normally distributed time-series. Their
    method was published in 2017 ("*Automatic Anomaly Detection in the Cloud Via Statistical
    Learning*", Jordan Hochenbaum, Owen Vallis, Arun Kejariwal).
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: Twitter也发布了一个R包，名为AnomalyDetection。该方法基于广义极端学生化偏差（ESD）测试，用于检测单变量近似正态分布的时间序列中的异常。该方法发表于2017年（“*通过统计学习在云端进行自动异常检测*”，Jordan
    Hochenbaum, Owen Vallis, Arun Kejariwal）。
- en: For their adaption of the ESD test, the Seasonal Hybrid ESD, they included a
    Seasonal-Trend decomposition using LOESS (STL) before applying a threshold on
    the z-score (as mentioned above) or – for datasets with a high number of anomalies
    – thresholding based on the median and MAD. The Twitter model has been ported
    to Python (the sesd library).
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 对于他们的ESD测试的适配，季节性混合ESD方法在应用阈值之前，加入了基于LOESS的季节性趋势分解（STL），并对z-score应用了阈值（如上所述），或者对于异常值较多的数据集，基于中位数和MAD进行阈值化。Twitter模型已被移植到Python中（sesd库）。
- en: Implementations
  id: totrans-80
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 实现
- en: We'll end with an overview of readily available implementations for anomaly
    detection in Python. Lots of implementations are available. Their use cases are
    very similar, however, the implementations and the user bases are widely different.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将以Python中现有的异常检测实现概述来结束。市面上有很多实现方法。它们的使用场景非常相似，但实现方式和用户群体各不相同。
- en: 'Here''s a list ordered by the number of stars on GitHub (as per May 2021):'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是按GitHub上的星标数量排序的列表（截至2021年5月）：
- en: '| Library | Implementations | Maintainer | Stars |'
  id: totrans-83
  prefs: []
  type: TYPE_TB
  zh: '| Library | 实现 | 维护者 | 星标 |'
- en: '| Prophet | Uncertainty interval around the estimated trend component from
    the forecast | Facebook Core Research | 12.7k |'
  id: totrans-84
  prefs: []
  type: TYPE_TB
  zh: '| Prophet | 关于预测趋势成分的估计的不确定性区间 | Facebook 核心研究 | 12.7k |'
- en: '| PyOD | 30 detection algorithms for multivariate time-series—from classical
    LOF (SIGMOD 2000) to COPOD (ICDM 2020) | Yue Zhao and others | 4.5k |'
  id: totrans-85
  prefs: []
  type: TYPE_TB
  zh: '| PyOD | 适用于多变量时间序列的30种检测算法——从经典的LOF（SIGMOD 2000）到COPOD（ICDM 2020） | Yue Zhao及其他人
    | 4.5k |'
- en: '| alibi-detect | Many anomaly detection algorithms—specific to time-series
    there are Likelihood Ratios, Prophet, Spectral Residual, Seq2Seq, Model distillation
    | Seldon Technologies Ltd | 683 |'
  id: totrans-86
  prefs: []
  type: TYPE_TB
  zh: '| alibi-detect | 多种异常检测算法——特定于时间序列的有似然比、Prophet、谱残差、Seq2Seq、模型蒸馏 | Seldon Technologies
    Ltd | 683 |'
- en: '| Scikit-Lego | Reconstruction through PCA/UMAP | Vincent D. Warmerdam and
    others | 499 |'
  id: totrans-87
  prefs: []
  type: TYPE_TB
  zh: '| Scikit-Lego | 通过PCA/UMAP重构 | Vincent D. Warmerdam及其他人 | 499 |'
- en: '| Luminaire | Luminaire Window Density Model | Zillow | 371 |'
  id: totrans-88
  prefs: []
  type: TYPE_TB
  zh: '| Luminaire | Luminaire窗口密度模型 | Zillow | 371 |'
- en: '| Donut | Variational Auto-Encoder for Seasonal KPIs | Tsinghua Netman Lab
    | 327 |'
  id: totrans-89
  prefs: []
  type: TYPE_TB
  zh: '| Donut | 用于季节性关键绩效指标（KPI）的变分自编码器 | 清华大学网络管理实验室 | 327 |'
- en: '| rrcf | Robust Random Cut Forest algorithm for anomaly detection on streams
    | Real-time water systems lab, University of Michigan | 302 |'
  id: totrans-90
  prefs: []
  type: TYPE_TB
  zh: '| rrcf | 用于流数据异常检测的鲁棒随机切割森林算法 | 密歇根大学实时水系统实验室 | 302 |'
- en: '| banpei | Hotelling''s theory | Hirofumi Tsuruta | 245 |'
  id: totrans-91
  prefs: []
  type: TYPE_TB
  zh: '| banpei | 霍特林理论 | Hirofumi Tsuruta | 245 |'
- en: '| STUMPY | Matrix Profile algorithms for uni- and multivariate time-series
    such as STUMP, FLUSS, and FLOSS (also compare matrixprofile-ts) | TD Ameritrade
    | 169 |'
  id: totrans-92
  prefs: []
  type: TYPE_TB
  zh: '| STUMPY | 针对单变量和多变量时间序列的矩阵概况算法，如 STUMP、FLUSS 和 FLOSS（也可参考 matrixprofile-ts）
    | TD Ameritrade | 169 |'
- en: '| PySAD | More than a dozen algorithms for streaming outlier anomaly detection
    | Selim Yilmaz, Selim and Suleyman Kozat | 98 |'
  id: totrans-93
  prefs: []
  type: TYPE_TB
  zh: '| PySAD | 超过十种流式异常检测算法 | Selim Yilmaz, Selim 和 Suleyman Kozat | 98 |'
- en: 'Figure 6.5: Anomaly detection methods in Python'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.5：Python 中的异常检测方法
- en: Each of these methods has their own background and formal underpinning; however,
    it's out of scope in this chapter to describe all of them.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 这些方法各自有其背景和形式化基础；然而，本章的范围并不涵盖对它们的详细描述。
- en: 'This chart shows the star history (from star-history.t9t.io) of the top three
    repositories:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 这张图展示了三大仓库的星标历史（来自 star-history.t9t.io）：
- en: '![anomaly_detection-star_history.png](img/B17577_06_05.png)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![anomaly_detection-star_history.png](img/B17577_06_05.png)'
- en: 'Figure 6.6: Star history of Prophet, PyOD, and alibi-detect'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.6：Prophet、PyOD 和 alibi-detect 的星标历史
- en: Both Prophet and PyOD have been seeing a continuous rise in popularity (GitHub
    stars).
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: Prophet 和 PyOD 的受欢迎程度（GitHub 星标数）一直在持续增长。
- en: Many deep learning algorithms have been applied more recently to anomaly detection,
    both with univariate and multivariate time-series.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 最近，许多深度学习算法已经被应用于异常检测，既包括单变量时间序列，也包括多变量时间序列。
- en: 'What''s particularly interesting about deep learning models is that the applications
    can be much broader: anomaly detection in video surveillance in closed-circuit
    television. We''ll go more into detail of deep learning architectures in *Chapter
    10*, *Deep Learning for Time-Series*.'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 深度学习模型的特别之处在于，应用范围可以更加广泛：例如闭路电视中的视频监控异常检测。我们将在*第 10 章*，*时间序列的深度学习*中更详细地探讨深度学习架构。
- en: Change point detection
  id: totrans-102
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 变化点检测
- en: A common problem with time-series is changes in the behavior of the observed
    system. Generally speaking, a change point signals an abrupt and significant transition
    between states in the process generating the series. For example, the trend can
    suddenly change, and a change point can signal where the trend of the series changes.
    This is well known under the guise of technical chart pattern analysis in trading.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 时间序列的一个常见问题是观察系统行为的变化。一般来说，变化点表示在生成该序列的过程中，系统状态之间发生了突变和重大转变。例如，趋势可能会突然发生变化，而变化点可以指示趋势变化的位置。这在交易中的技术图表模式分析中非常常见。
- en: 'This list captures some applications for **Change point detection** (**CPD**):'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 这个列表展示了一些 **变化点检测**（**CPD**）的应用：
- en: 'Speech recognition: Detection of word and sentence boundaries'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 语音识别：检测单词和句子的边界
- en: 'Image analysis: Surveillance on video footage of closed-circuit television'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 图像分析：对闭路电视视频监控进行监视
- en: 'Fitness: Segmenting human activities over time based on data from motion sensors
    from smart devices such as watches or phones'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 健身：根据智能设备（如手表或手机）上的运动传感器数据，分割人的活动时间段
- en: 'Finance: Identifying changes to trend patterns that could indicate changes
    from bear to bull markets, or the other way around'
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 金融：识别趋势模式的变化，可能表明从熊市到牛市，或反之的转变。
- en: As an example for the importance of CPD, consider the stock market. Time-series
    data that describes the evolution of a market, such as stock prices, follows trends
    – it either rises, falls, or doesn't change significantly (stagnation).
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 以股票市场为例，说明 CPD 的重要性。描述市场演变的时间序列数据，如股票价格，遵循趋势——它要么上涨，要么下跌，或者没有显著变化（停滞）。
- en: When a stock rises, the investor wants to buy the stock. Otherwise, when the
    stock is falling, the investors doesn't want to keep the stock, but rather to
    sell it. Not changing the position will cause a loss of book value – in the best
    case, this will cause a problem with liquidity.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 当股票上涨时，投资者想要买入该股票。否则，当股票下跌时，投资者不希望持有该股票，而是希望将其卖出。不改变仓位会导致账面价值的损失——在最好的情况下，这会导致流动性问题。
- en: For investors, it is therefore key to know, when the market changes from rising
    to falling or the other way around. Recognizing these changes can make the difference
    between winning or losing.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 对于投资者而言，了解市场从上涨到下跌，或从下跌到上涨的变化时机至关重要。识别这些变化可能决定是否盈利。
- en: In forecasting, special events like Black Friday, Christmas, an election, a
    press release, or changes in regulation can cause short-term (perhaps then classed
    as an anomaly) or long-term change to the trend or to the level of the series.
    This will inevitably lead to strange predictions from traditional models.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 在预测中，诸如黑色星期五、圣诞节、选举、新闻发布或法规变动等特殊事件可能会对趋势或序列的水平造成短期（可能当时被视为异常）或长期的变化。这将不可避免地导致传统模型产生异常的预测。
- en: A particularly interesting challenge with CPD algorithms is detecting these
    inflection points in real time. This means detecting a change point as soon as
    it arrives (or, at the very least, before the next change point occurs).
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: CPD 算法面临的一个特别有趣的挑战是实时检测这些拐点。这意味着在拐点到来时立即检测到变化点（或者至少在下一个变化点发生之前）。
- en: We can distinguish online and offline methods for CPD, where online refers to
    processing on the fly, dealing with each new data point as it becomes available.
    On the other hand, offline algorithms can work on the whole time-series at once.
    We'll deal more with online processing in *Chapter 8*, *Online Learning for Time-Series*.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以区分 CPD 的在线和离线方法，其中在线指的是实时处理，处理每一个新到的数据点。而离线算法则可以一次性处理整个时间序列。我们将在*第八章*，*时间序列的在线学习*中更多地讨论在线处理。
- en: CPD is related to segmentation, edge detection, event detection, and anomaly
    detection, and similar techniques can be applied to all these applications. CPD
    can be viewed as very much like anomaly detection, since one way to identify change
    points is by anomaly scores from an anomaly detection algorithm.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: CPD 与分段、边缘检测、事件检测和异常检测相关，类似的技术可以应用于所有这些应用。CPD 可以看作与异常检测非常相似，因为识别变化点的一种方法是通过异常检测算法的异常分数。
- en: From this perspective, change points are identical to highly anomalous points,
    and anything above a certain threshold corresponds to a change. In the same way
    as anomaly detection, CPD can be defined as the problem of hypothesis testing
    between two alternatives, the null hypothesis being "*no change occurs*," and
    the alternative hypothesis of "*a change occurs*."
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '从这个角度来看，变化点与高度异常点是相同的，任何超过某个阈值的点都对应一个变化。与异常检测相似，CPD 可以定义为在两个备择假设之间进行假设检验的问题，零假设为"*没有变化发生*"，而备择假设为"*发生了变化*。"  '
- en: 'CPD algorithms are composed of three components: cost functions, search methods,
    and constraints. We''ll go through these in turn. Cost functions are distance
    functions that can be applied to a subsection of the time-series (multivariate
    or univariate).'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: CPD 算法由三个组成部分构成：代价函数、搜索方法和约束条件。我们将逐一讲解这些内容。代价函数是可以应用于时间序列的一个子段（多变量或单变量）的距离函数。
- en: 'An example for a cost function is **least absolute deviation** (**LAD**), which
    is an estimator of a shift in the central point (mean, median, and mode) of a
    distribution defined as follows:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 代价函数的一个例子是 **最小绝对偏差**（**LAD**），它是一个估算分布中心点（均值、中位数和众数）变化的估计量，定义如下：
- en: '![](img/B17577_06_009.png)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B17577_06_009.png)'
- en: In this definition *l* is an index to a subsection in the time-series *x*, and
    ![](img/B17577_06_010.png) is the central point of *x*.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个定义中，*l* 是时间序列 *x* 中一个子段的索引，而 ![](img/B17577_06_010.png) 是 *x* 的中心点。
- en: The search function then iterates over the time-series to detect change points.
    This can be done approximately, such as in window-based detection, bottom-up methods,
    or binary segmentation, or it can be exhaustive as in the case of dynamic programming
    or **Pruned Exact Linear Time** (**Pelt**).
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 搜索函数然后会遍历时间序列来检测变化点。这可以是近似的，例如基于窗口的检测、从下到上的方法或二分分割，或者是穷举的，如动态规划或 **修剪精确线性时间**（**Pelt**）方法。
- en: Pelt (Gachomo Dorcas Wambui and others, 2015) relies on pruning heuristics,
    and has a computational cost that is linear to the number of points of the time-series,
    ![](img/B17577_06_011.png). Dynamic programming methods have a much higher computational
    cost of ![](img/B17577_06_012.png), where n is the maximum number of expected
    change points.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: Pelt（Gachomo Dorcas Wambui 等，2015）依赖于修剪启发式方法，计算成本与时间序列的点数成线性关系，![](img/B17577_06_011.png)。动态规划方法的计算成本要高得多，![](img/B17577_06_012.png)，其中
    n 是预期变化点的最大数量。
- en: Finally, the constraint can come into play as a penalty in the search algorithm.
    This penalty term can encode a cost budget or knowledge of the number of change
    points that we would expect to find.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，约束条件可以作为搜索算法中的惩罚项参与其中。这个惩罚项可以编码为一个成本预算，或者是我们预期找到的变化点数量的知识。
- en: It is notoriously difficult to evaluate the performance of CPD algorithms, because
    of the lack of benchmark datasets. Only very recently (2020) Gerrit van den Burg
    and Christopher Williams from the Alan Turing Institute and the University of
    Edinburgh published a benchmark consisting of 37 time-series from sources such
    as the World Bank, EuroStat, U.S. Census Bureau, GapMinder, and Wikipedia. Their
    benchmark is available on GitHub, and they mention change point annotations for
    datasets centered around the financial crisis of 2007-08, legislation on seat
    belts in the U.K., the Montreal Protocol regulating chlorofluorocarbon emissions,
    or the regulation of automated phone calls in the U.S.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 评估CPD算法的性能一直是个难题，因为缺乏基准数据集。直到最近（2020年），来自阿兰·图灵研究所和爱丁堡大学的Gerrit van den Burg和Christopher
    Williams发布了一个基准数据集，包含来自世界银行、欧盟统计局、美国人口普查局、GapMinder和维基百科等来源的37个时间序列。他们的基准数据集已发布在GitHub上，并且提到该数据集的变点注释集中在2007-08年的金融危机、英国的安全带法规、蒙特利尔议定书（用于调控氯氟烃排放）以及美国的自动电话呼叫监管等领域。
- en: In the same paper ("*An Evaluation of Change Point Detection Algorithm*"), the
    authors evaluated a whole range of methods for CPD. They note that their "zero"
    baseline method, which assumes no change points all, outperforms many of the other
    methods, according to F1-measure and a cluster overlap measure based on the Jaccard
    index. This is because of the small proportion of change points in the dataset,
    and the high number of false positives the methods return. They concluded that
    binary segmentation and Bayesian online CPD are among the best methods across
    the time-series.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 在同一篇论文（"*An Evaluation of Change Point Detection Algorithm*"）中，作者评估了各种CPD方法。他们指出，假设没有任何变点的“零”基准方法在F1度量和基于Jaccard指数的聚类重叠度量上优于许多其他方法。这是因为数据集中变点的比例很小，且这些方法返回了大量的假阳性结果。他们得出结论，二分法和贝叶斯在线CPD是时间序列中最有效的几种方法。
- en: 'Binary segmentation ("*On Tests for Detecting Change in Mean*" by Ashish Sen
    and Muni S. Srivastava, 1975) falls into the category of window-based CPD. Binary
    segmentation is a greedy algorithm that minimizes the sum of costs the most as
    defined like this:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 二分法（"*On Tests for Detecting Change in Mean*"，作者：Ashish Sen 和 Muni S. Srivastava，1975）属于基于窗口的CPD方法。二分法是一种贪心算法，它通过如下定义最小化代价之和：
- en: '![](img/B17577_06_013.png)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B17577_06_013.png)'
- en: '![](img/B17577_06_014.png) is the found change point and *c()* is a cost function
    similar to LAD, which we saw earlier in this section. The general idea is that
    when two subsequences are highly dissimilar, this indicates a change point.'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '![](img/B17577_06_014.png)是发现的变点，而*c()*是类似于LAD的代价函数，我们之前在本节中看到了。其基本思想是，当两个子序列高度不相似时，表示存在变点。'
- en: Binary segmentation is sequential in the sense that the change point is detected
    first on the complete time-series, then again on the two sub-sequences before
    and after the change point. This explains its low complexity of ![](img/B17577_06_015.png),
    where T is the length of the time-series. This computational cost makes it scalable
    to larger datasets.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 二分法是顺序执行的，这意味着首先在整个时间序列中检测变点，然后在变点前后两个子序列中再次检测。这也解释了其低复杂度！[](img/B17577_06_015.png)，其中T为时间序列的长度。这个计算成本使得它可以扩展到更大的数据集。
- en: 'This table presents an overview of methods for CPD:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 该表格概述了CPD方法的不同种类：
- en: '| Library | Implementations | Maintainer |'
  id: totrans-131
  prefs: []
  type: TYPE_TB
  zh: '| 库 | 实现方式 | 维护者 |'
- en: '| Greykite | CPD via adaptive lasso | LinkedIn |'
  id: totrans-132
  prefs: []
  type: TYPE_TB
  zh: '| Greykite | 通过自适应lasso进行CPD | LinkedIn |'
- en: '| ruptures | Offline CPD: binary segmentation, dynamic programming, Pelt, window-based
    | Charles Truong |'
  id: totrans-133
  prefs: []
  type: TYPE_TB
  zh: '| ruptures | 离线CPD：二分法、动态规划、Pelt、基于窗口的 | Charles Truong |'
- en: '| Bayesian Changepoint Detection | Bayesian CPD | Johannes Kulick |'
  id: totrans-134
  prefs: []
  type: TYPE_TB
  zh: '| 贝叶斯变点检测 | 贝叶斯CPD | Johannes Kulick |'
- en: '| banpei | Singular spectrum transformation | Hirofumi Tsuruta |'
  id: totrans-135
  prefs: []
  type: TYPE_TB
  zh: '| banpei | 奇异谱变换 | Hirofumi Tsuruta |'
- en: '| changepy | Pelt algorithm | Rui Gil |'
  id: totrans-136
  prefs: []
  type: TYPE_TB
  zh: '| changepy | Pelt算法 | Rui Gil |'
- en: '| onlineRPCA | Online Moving Window Robust Principal Component Analysis | Wei
    Xiao |'
  id: totrans-137
  prefs: []
  type: TYPE_TB
  zh: '| onlineRPCA | 在线移动窗口稳健主成分分析 | Wei Xiao |'
- en: 'Figure 6.7: CPD methods in Python'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.7：Python中的CPD方法
- en: We've omitted Facebook's Prophet library since it's not a dedicated CPD package.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 我们省略了Facebook的Prophet库，因为它不是专门的CPD包。
- en: The chart below illustrates the popularity of CPD methods over time.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 下图展示了CPD方法随时间变化的受欢迎程度。
- en: '![change_point_detection-star_history.png](img/B17577_06_06.png)'
  id: totrans-141
  prefs: []
  type: TYPE_IMG
  zh: '![change_point_detection-star_history.png](img/B17577_06_06.png)'
- en: 'Figure 6.8: Star history of CPD methods'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.8：CPD方法的历史演变
- en: LinkedIn's Greykite has been seeing a meteoric rise in GitHub stars since its
    release. Also ruptures has seen a huge increase in popularity.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: LinkedIn的Greykite自发布以来在GitHub星标上迅速增长。同时，ruptures也在流行度上大幅上升。
- en: Clustering
  id: totrans-144
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 聚类
- en: Cluster analysis or clustering is the process of finding meaningful groups (clusters)
    of points or objects in a dataset based on their similarity. As the result of
    this unsupervised data mining technique, we want points in each cluster to be
    similar to each other, while being different to points in other clusters.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 聚类分析或聚类是根据数据点或对象的相似性，在数据集中寻找有意义的组（簇）的过程。作为这种无监督数据挖掘技术的结果，我们希望每个簇中的点彼此相似，同时与其他簇中的点有所不同。
- en: Clustering of time-series is challenging because each data point is a period
    of time (an ordered sequence). It has found application in diverse areas to discover
    patterns that empower time-series analysis, extracting insights from complex datasets.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 时间序列的聚类具有挑战性，因为每个数据点都是一个时间段（有序序列）。它已在多个领域得到应用，帮助发现模式，推动时间序列分析，从复杂数据集中提取洞察。
- en: 'We are not going to get into details on time-series clustering, but the following
    table gives an overview of Python libraries for time-series clustering:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 我们不打算深入讨论时间序列聚类，但下表提供了Python库在时间序列聚类中的概述：
- en: '| Library | Implementations | Maintainer | Stars |'
  id: totrans-148
  prefs: []
  type: TYPE_TB
  zh: '| 库 | 实现 | 维护者 | 星标 |'
- en: '| tslearn | Time-Series K-Means, K-Shape clustering, KernelKMeans | Romain
    Tavenard | 1.7k |'
  id: totrans-149
  prefs: []
  type: TYPE_TB
  zh: '| tslearn | 时间序列K均值、K-Shape聚类、KernelKMeans | Romain Tavenard | 1.7k |'
- en: '| river | DBStream, Time-Series K-Means, CluStream, DenStream, STREAMKMeans
    | Albert Bifet and others | 1.7k |'
  id: totrans-150
  prefs: []
  type: TYPE_TB
  zh: '| river | DBStream、时间序列K均值、CluStream、DenStream、STREAMKMeans | Albert Bifet及其他人
    | 1.7k |'
- en: 'Figure 6.9: Clustering methods for time-series in Python'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.9：Python中时间序列的聚类方法
- en: 'You can see the GitHub stars for the top implementation over history here:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以查看历史上顶级实现的GitHub星标数据：
- en: '![clustering-star_history.png](img/B17577_06_07.png)'
  id: totrans-153
  prefs: []
  type: TYPE_IMG
  zh: '![clustering-star_history.png](img/B17577_06_07.png)'
- en: 'Figure 6.10: Star history of tslearn and river'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.10：tslearn和river的星标历史
- en: Both libraries are going strong. We'll revisit river in *Chapter 8*, *Online
    Learning for Time-Series*.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 两个库都在蓬勃发展。我们将在*第8章*，*时间序列的在线学习*中重新讨论river。
- en: Python practice
  id: totrans-156
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Python实践
- en: Let's do first an example of anomaly detection, then another for CPD. Let's
    first look at the needed libraries in the next section.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 首先让我们做一个异常检测的例子，然后再做一个CPD的例子。我们先看看下一节所需的库。
- en: Requirements
  id: totrans-158
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 要求
- en: 'In this chapter, we''ll use several libraries, which we can quickly install
    from the terminal (or similarly from the anaconda navigator):'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将使用多个库，这些库可以通过终端快速安装（或通过anaconda navigator进行安装）：
- en: '[PRE0]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: We'll execute the commands from the Python (or IPython) terminal, but equally
    we could execute them from a Jupyter notebook (or a different environment).
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从Python（或IPython）终端执行命令，但同样可以从Jupyter笔记本（或其他环境）中执行它们。
- en: We should be ready now to get into the woods with implementing unsupervised
    time-series algorithms in Python.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在应该准备好深入实施Python中的无监督时间序列算法了。
- en: Anomaly detection
  id: totrans-163
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 异常检测
- en: 'alibi-detect comes with several benchmark datasets for time-series anomaly
    detection:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: alibi-detect提供了多个用于时间序列异常检测的基准数据集：
- en: fetch_ecg—ECG dataset from the BIDMC Congestive Heart Failure Database
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: fetch_ecg—来自BIDMC充血性心力衰竭数据库的ECG数据集
- en: fetch_nab—Numenta Anomaly Benchmark
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: fetch_nab—Numenta异常基准
- en: fetch_kdd—KDD Cup '99 dataset of computer network intrusions
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: fetch_kdd—KDD Cup '99计算机网络入侵数据集
- en: The last of these is loaded through scikit-learn.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 这些中的最后一个是通过scikit-learn加载的。
- en: 'Let''s load the time-series of computer network intrusions (KDD99):'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们加载计算机网络入侵的时间序列（KDD99）：
- en: '[PRE1]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '`intrusions` is a dictionary, where the `data` key returns a matrix of 494021x18\.
    The 18 dimensions of the time-series are the continuous features of the dataset,
    mostly error rates and counts:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: '`intrusions`是一个字典，其中`data`键返回一个494021x18的矩阵。时间序列的18个维度是数据集的连续特征，主要是误差率和计数：'
- en: '[PRE2]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Another key, `target` contains the annotations of anomalies.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个键`target`包含异常的注释。
- en: Since we have the annotations ready we could train a classifier, however, we'll
    stick to unsupervised methods. Further, since the Spectral Method that we'll use
    is for univariate data and we'll only take a single dimension out of our multivariate
    dataset, we'll completely ignore the annotations.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 既然我们已经准备好了注释，我们本可以训练一个分类器，然而，我们将坚持使用无监督方法。此外，由于我们将使用的谱方法适用于单变量数据，我们只会从多变量数据集中提取一个维度，因此我们将完全忽略注释。
- en: 'Here''s a quick plot of our time-series (we''ll choose – arbitrarily – the
    first dimension of our dataset):'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们时间序列的快速图（我们将随意选择数据集的第一个维度）：
- en: '[PRE3]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'This is the plot:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 这是图表：
- en: '![intrusions_dim1.png](img/B17577_06_08.png)'
  id: totrans-178
  prefs: []
  type: TYPE_IMG
  zh: '![intrusions_dim1.png](img/B17577_06_08.png)'
- en: 'Figure 6.11: Time-series chart'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.11：时间序列图
- en: 'We''ll load and run the SpectralResidual model that implements the method proposed
    by Microsoft:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将加载并运行实现微软提出方法的SpectralResidual模型：
- en: '[PRE4]'
  id: totrans-181
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'We can then get the anomaly scores for each point in our time-series:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们可以获取时间序列中每个点的异常得分：
- en: '[PRE5]'
  id: totrans-183
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Let's plot the scores imposed on top of our time-series!
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们将得分绘制在时间序列之上！
- en: '[PRE6]'
  id: totrans-185
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'We are using a dual y-axis for plotting the scores and the data within the
    same plot. Here it is:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在同一个图表中使用双y轴来绘制得分和数据。如下所示：
- en: '![intrusions_scores.png](img/B17577_06_09.png)'
  id: totrans-187
  prefs: []
  type: TYPE_IMG
  zh: '![intrusions_scores.png](img/B17577_06_09.png)'
- en: 'Figure 6.12: Time-series with anomalies'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.12：带有异常值的时间序列
- en: Some points are not recognized as outliers since the periodic nature of the
    signal is removed by the Fourier filter.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 由于傅里叶滤波器移除了信号的周期性，一些点未被识别为离群点。
- en: Change point detection
  id: totrans-190
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 变化点检测
- en: 'We''ll first create a synthetic multivariate time-series with the ruptures
    library. We''ll set the number of dimensions to 3 and the length of the time-series
    to 500, and our time-series will have 3 change points and a Gaussian noise of
    standard deviation 5.0 will be over imposed:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将首先使用ruptures库创建一个合成的多元时间序列。我们将维度数设置为3，时间序列的长度设置为500，并且我们的时间序列将有3个变化点，标准差为5.0的高斯噪声将被叠加：
- en: '[PRE7]'
  id: totrans-192
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Signal is a NumPy array of 500x3\. `bkps` is the array of the change points
    (123, 251, and 378).
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 信号是一个500x3的NumPy数组。`bkps`是变化点的数组（123、251和378）。
- en: 'We can plot this time-series with a utility function that highlights the subsections
    separated by changepoints:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用一个实用函数绘制该时间序列，函数会突出显示由变化点分隔的子部分：
- en: '[PRE8]'
  id: totrans-195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Here''s the plot of our time-series with three change points:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们带有三个变化点的时间序列图：
- en: '![ruptures_time_series.png](img/B17577_06_10.png)'
  id: totrans-197
  prefs: []
  type: TYPE_IMG
  zh: '![ruptures_time_series.png](img/B17577_06_10.png)'
- en: 'Figure 6.13: Time-series with change points'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.13：带有变化点的时间序列
- en: 'We can apply Binary Segmentation to this time-series. ruptures follows the
    scikit-learn conventions, so if you have used scikit-learn before, the usage should
    be very intuitive:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以将二分段方法应用于此时间序列。ruptures遵循scikit-learn的约定，因此，如果你之前使用过scikit-learn，使用起来应该非常直观：
- en: '[PRE9]'
  id: totrans-200
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: We have several options for the Binary Segmentation constraint – we have the
    choice between `l1`, `l2`, `rbf`, `linear`, `normal`, and `ar`.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有几个二分段约束选项——可以选择`l1`、`l2`、`rbf`、`linear`、`normal`和`ar`。
- en: 'We can plot the predictions of the Binary Segmentation with another utility
    function:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以用另一个实用函数绘制二分段的预测结果：
- en: '[PRE10]'
  id: totrans-203
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Here''s the plot of our change point predictions from the Binary Segmentation
    model:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们从二分段模型中获得的变化点预测图：
- en: '![rupture_bs_predictions.png](img/B17577_06_11.png)'
  id: totrans-205
  prefs: []
  type: TYPE_IMG
  zh: '![rupture_bs_predictions.png](img/B17577_06_11.png)'
- en: 'Figure 6.14: Time-series with detected change points (Binary Segmentation)'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.14：带有检测到的变化点的时间序列（Binary Segmentation）
- en: Let's summarize some of the information in this chapter!
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们总结一下本章中的一些信息！
- en: Summary
  id: totrans-208
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: 'In this chapter, we have concentrated on two aspects of unsupervised methods
    for time-series:'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们集中讨论了时间序列无监督方法的两个方面：
- en: Anomaly detection
  id: totrans-210
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 异常检测
- en: Change point detection
  id: totrans-211
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 变化点检测
- en: 'The essence of anomaly detection (also: outlier detection) is to identify sequences
    that are notably different from the rest of the series. We''ve investigated different
    anomaly detection methods, and how several major companies are dealing with it
    at scale.'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 异常检测（也叫：离群点检测）的本质是识别出明显与其他序列不同的部分。我们已经研究了不同的异常检测方法，以及一些大公司如何在大规模中处理它。
- en: When working with time-series, it's important to be aware of changes in the
    data over time that makes models useless (model staleness). This is called change
    point detection and drift detection.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 在处理时间序列时，重要的是要注意数据随时间变化，这可能导致模型失效（模型陈旧）。这就是所谓的变化点检测和漂移检测。
- en: We've looked at change point detection in this chapter. In *Chapter 8*, *Online
    Learning for Time-Series*, we'll look at drift detection in more detail.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 本章我们探讨了变化点检测。在*第8章*，*时间序列的在线学习*中，我们将更详细地探讨漂移检测。
