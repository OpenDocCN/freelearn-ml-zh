- en: '*Appendix*'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*附录*'
- en: About
  id: totrans-1
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 关于
- en: This section is included to assist the students to perform the activities in
    the book. It includes detailed steps that are to be performed by the students
    to achieve the objectives of the activities.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本节内容帮助学生完成书中的活动。它包括学生为实现活动目标所需执行的详细步骤。
- en: 'Chapter 1: Python Machine Learning Toolkit'
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第1章：Python 机器学习工具包
- en: 'Activity 1: pandas Functions'
  id: totrans-4
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 活动1：pandas 函数
- en: '**Solution**'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '**解决方案**'
- en: Open a new Jupyter notebook.
  id: totrans-6
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开一个新的 Jupyter Notebook。
- en: 'Use pandas to load the Titanic dataset:'
  id: totrans-7
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 pandas 加载 Titanic 数据集：
- en: '[PRE0]'
  id: totrans-8
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Use the `head()` function on the dataset as follows:'
  id: totrans-9
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用 `head()` 函数查看数据集，如下：
- en: '[PRE1]'
  id: totrans-10
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The output will be as follows:'
  id: totrans-11
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出结果如下：
- en: '![Figure 1.65: First five rows'
  id: totrans-12
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图1.65：前五行'
- en: '](img/C12622_01_65.jpg)'
  id: totrans-13
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C12622_01_65.jpg)'
- en: 'Figure 1.65: First five rows'
  id: totrans-14
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图1.65：前五行
- en: 'Use the `describe` function as follows:'
  id: totrans-15
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用 `describe` 函数如下：
- en: '[PRE2]'
  id: totrans-16
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The output will be as follows:'
  id: totrans-17
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出结果如下：
- en: '![Figure 1.66: Output of describe()'
  id: totrans-18
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图1.66：describe()的输出'
- en: '](img/C12622_01_66.jpg)'
  id: totrans-19
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C12622_01_66.jpg)'
- en: 'Figure 1.66: Output of describe()'
  id: totrans-20
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图1.66：describe()的输出
- en: 'We don''t need the `Unnamed: 0` column. We can remove the column without using
    the `del` command, as follows:'
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '我们不需要 `Unnamed: 0` 列。我们可以通过以下方式删除该列，而不使用 `del` 命令：'
- en: '[PRE3]'
  id: totrans-22
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The output will be as follows:'
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出结果如下：
- en: '![Figure 1.67: First five rows after deleting the Unnamed: 0 column'
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图1.67：删除 `Unnamed: 0` 列后的前五行'
- en: '](img/C12622_01_67.jpg)'
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C12622_01_67.jpg)'
- en: 'Figure 1.67: First five rows after deleting the Unnamed: 0 column'
  id: totrans-26
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: '图1.67：删除 `Unnamed: 0` 列后的前五行'
- en: 'Compute the mean, standard deviation, minimum, and maximum values for the columns
    of the DataFrame without using `describe`:'
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 计算 DataFrame 列的均值、标准差、最小值和最大值，而不使用 `describe`：
- en: '[PRE4]'
  id: totrans-28
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'What about the 33, 66, and 99% quartiles? Use the `quantile` method as follows:'
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 33%、66% 和 99% 的四分位数如何？使用 `quantile` 方法如下：
- en: '[PRE5]'
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'How many passengers were from each class? Let''s see, using the `groupby` method:'
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 每个班级的乘客有多少人？让我们来看一下，使用`groupby`方法：
- en: '[PRE6]'
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'How many passengers were from each class? You can find the answer by using
    selecting/indexing methods to count the members of each class:'
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 每个班级的乘客有多少人？你可以通过使用选择/索引方法来统计每个班级的成员数量：
- en: '[PRE7]'
  id: totrans-34
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: The answers to *Step 6* and *Step 7* do match.
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*第6步* 和 *第7步* 的答案是匹配的。'
- en: 'Determine who the eldest passenger in third class was:'
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确定第三类中的最年长乘客是谁：
- en: '[PRE8]'
  id: totrans-37
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'The output will be as follows:'
  id: totrans-38
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出结果如下：
- en: '![Figure 1.68: Eldest passenger in third class'
  id: totrans-39
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图1.68：第三类中的最年长乘客'
- en: '](img/C12622_01_68.jpg)'
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C12622_01_68.jpg)'
- en: 'Figure 1.68: Eldest passenger in third class'
  id: totrans-41
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图1.68：第三类中的最年长乘客
- en: 'For a number of machine learning problems, it is very common to scale the numerical
    values between 0 and 1\. Use the `agg` method with Lambda functions to scale the
    `Fare` and `Age` columns between 0 and 1:'
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于许多机器学习问题，通常会将数值缩放到 0 到 1 之间。使用 `agg` 方法与 Lambda 函数将 `Fare` 和 `Age` 列缩放到 0
    到 1 之间：
- en: '[PRE9]'
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The output will be as follows:'
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出结果如下：
- en: '![Figure 1.69: Scaling numerical values between 0 and 1'
  id: totrans-45
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图1.69：将数值缩放到0到1之间'
- en: '](img/C12622_01_69.jpg)'
  id: totrans-46
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C12622_01_69.jpg)'
- en: 'Figure 1.69: Scaling numerical values between 0 and 1'
  id: totrans-47
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图1.69：将数值缩放到0到1之间
- en: 'There is one individual in the dataset without a listed `Fare` value:'
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 数据集中有一个个体没有列出 `Fare` 票价：
- en: '[PRE10]'
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'This is the output:'
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这是输出：
- en: '![Figure 1.70: Individual without a listed Fare value'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '![图1.70：没有列出票价的个体'
- en: '](img/C12622_01_70.jpg)'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/C12622_01_70.jpg)'
- en: 'Figure 1.70: Individual without a listed Fare value'
  id: totrans-53
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图1.70：没有列出票价的个体
- en: 'Replace the `NaN` values of this row in the main DataFrame with the mean `Fare`
    value for those corresponding with the same class and `Embarked` location using
    the `groupby` method:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `groupby` 方法，将此行的 `NaN` 值替换为与相同班级和 `Embarked` 位置对应的平均 `Fare` 值：
- en: '[PRE11]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'The output will be as follows:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 输出结果如下：
- en: '[PRE12]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Chapter 2: Exploratory Data Analysis and Visualization'
  id: totrans-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第2章：探索性数据分析与可视化
- en: 'Activity 2: Summary Statistics and Missing Values'
  id: totrans-59
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 活动2：汇总统计与缺失值
- en: '**Solution**'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '**解决方案**'
- en: 'The steps to complete this activity are as follows:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 完成此活动的步骤如下：
- en: 'Read the data. Use pandas'' `.read_csv` method to read the CSV file into a
    pandas DataFrame:'
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 读取数据。使用 pandas 的 `.read_csv` 方法将 CSV 文件读取为 pandas DataFrame：
- en: '[PRE13]'
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Use pandas'' `.info()` and `.describe()` methods to view the summary statistics
    of the dataset:'
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 pandas 的 `.info()` 和 `.describe()` 方法查看数据集的汇总统计：
- en: '[PRE14]'
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'The output of `info()` will be:'
  id: totrans-66
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`info()` 的输出将是：'
- en: '![Figure 2.39: The output of the info() method'
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图2.39：info() 方法的输出'
- en: '](img/C12622_02_39.jpg)'
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C12622_02_39.jpg)'
- en: 'Figure 2.39: The output of the info() method'
  id: totrans-69
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图2.39：info() 方法的输出
- en: 'The output of `describe()` will be:'
  id: totrans-70
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`describe()`方法的输出将是：'
- en: '![Figure 2.40: The output of the describe() method'
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图2.40：describe()方法的输出'
- en: '](img/C12622_02_40.jpg)'
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C12622_02_40.jpg)'
- en: 'Figure 2.40: The output of the describe() method'
  id: totrans-73
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图2.40：describe()方法的输出
- en: Find the total count and total percentage of missing values in each column of
    the DataFrame and display them for columns having at least one null value, in
    descending order of missing percentages.
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 找出DataFrame中每列的缺失值总数和缺失值百分比，并按缺失值百分比降序显示至少有一个空值的列：
- en: 'As we did in *Exercise 12: Visualizing Missing Values*, we will use the `.isnull()`
    function on the DataFrame to get a mask, find the count of null values in each
    column by using the `.sum()` function over the mask DataFrame and the fraction
    of null values by using `.mean()` over the mask DataFrame and multiply by 100
    to convert it to a percentage. Then, we use `pd.concat()` to combine the total
    and percentage of null values into a single DataFrame and sort the rows by percentage
    of missing values:'
  id: totrans-75
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 正如我们在*练习12：可视化缺失值*中所做的那样，我们将使用`.isnull()`函数在DataFrame上获取掩码，通过在掩码DataFrame上使用`.sum()`函数找出每列的空值数量，并通过在掩码DataFrame上使用`.mean()`函数计算空值的比例，再乘以100将其转换为百分比。然后，我们使用`pd.concat()`将空值的总数和百分比合并成一个单独的DataFrame，并按缺失值的百分比排序行：
- en: '[PRE15]'
  id: totrans-76
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'The output will be:'
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出结果如下：
- en: '![Figure 2.41: Total count and percentage of missing values in each column'
  id: totrans-78
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图2.41：每列缺失值的总数和百分比'
- en: '](img/C12622_02_41.jpg)'
  id: totrans-79
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C12622_02_41.jpg)'
- en: 'Figure 2.41: Total count and percentage of missing values in each column'
  id: totrans-80
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图2.41：每列缺失值的总数和百分比
- en: 'Plot the nullity matrix and nullity correlation heatmap. First, we find the
    list of column names for those having at least one null value. Then, we use the
    `missingno` library to plot the nullity matrix (as we did in *Exercise 12: Visualizing
    Missing Values*) for a sample of 500 points, and the nullity correlation heatmap
    for the data in those columns:'
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 绘制空值矩阵和空值相关性热图。首先，我们找出包含至少一个空值的列名列表。然后，我们使用`missingno`库绘制空值矩阵（正如我们在*练习12：可视化缺失值*中所做的那样），并对这些列中的数据绘制空值相关性热图（样本为500个点）：
- en: '[PRE16]'
  id: totrans-82
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'The nullity matrix will look like this:'
  id: totrans-83
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 空值矩阵将如下所示：
- en: '![Figure 2.42: Nullity matrix'
  id: totrans-84
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图2.42：空值矩阵'
- en: '](img/C12622_02_42.jpg)'
  id: totrans-85
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C12622_02_42.jpg)'
- en: 'Figure 2.42: Nullity matrix'
  id: totrans-86
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图2.42：空值矩阵
- en: 'The nullity correlation heatmap will look like this:'
  id: totrans-87
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 空值相关性热图将如下所示：
- en: '![Figure 2.43: Nullity correlation heatmap'
  id: totrans-88
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图2.43：空值相关性热图'
- en: '](img/C12622_02_43.jpg)'
  id: totrans-89
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C12622_02_43.jpg)'
- en: 'Figure 2.43: Nullity correlation heatmap'
  id: totrans-90
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图2.43：空值相关性热图
- en: 'Delete the columns having more than 80% of values missing. Use the `.loc` operator
    on the DataFrame we created in *Step 3* to select only those columns that had
    less than 80% of values missing:'
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 删除缺失值超过80%的列。使用我们在*第3步*中创建的DataFrame的`.loc`操作符，只选择缺失值少于80%的列：
- en: '[PRE17]'
  id: totrans-92
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Replace null values in the `FireplaceQu` column with NA values. Use the `.fillna()`
    method to replace null values with the `NA` string:'
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用NA值替换`FireplaceQu`列中的空值。使用`.fillna()`方法将空值替换为`NA`字符串：
- en: '[PRE18]'
  id: totrans-94
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Activity 3: Visually Representing the Distribution of Values'
  id: totrans-95
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 活动3：可视化表示值的分布
- en: '**Solution**'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '**解决方案**'
- en: 'Plot a histogram using Matplotlib for the target variable, `SalePrice`. First,
    we initialize the figure using the `plt.figure` command and set the figure size.
    Then, we use Matplotlib''s `.hist()` function as our primary plotting function,
    to which we pass the `SalePrice` series object for plotting the histogram. Lastly,
    we specify the axes labels and show the plot:'
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用Matplotlib绘制目标变量`SalePrice`的直方图。首先，我们使用`plt.figure`命令初始化图形并设置图形大小。然后，使用Matplotlib的`.hist()`函数作为主要绘图函数，将`SalePrice`系列对象传入以绘制直方图。最后，指定坐标轴标签并显示图形：
- en: '[PRE19]'
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'The output will be as follows:'
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出结果如下：
- en: '![Figure 2.44: Histogram for the target variable'
  id: totrans-100
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图2.44：目标变量的直方图'
- en: '](img/C12622_02_44.jpg)'
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C12622_02_44.jpg)'
- en: 'Figure 2.44: Histogram for the target variable'
  id: totrans-102
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图2.44：目标变量的直方图
- en: 'Find the number of unique values within each column having the object type.
    Create a new DataFrame called `object_variables` by using the `.select_dtypes`
    function on the original DataFrame to select those columns with the `numpy.object`
    data type. Then, find the number of unique values for each column in this DataFrame
    by using the `.nunique()` function, and sort the resultant series:'
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 找出每一列具有对象类型的唯一值的数量。通过在原始 DataFrame 上使用 `.select_dtypes` 函数，选择具有 `numpy.object`
    数据类型的列，创建一个名为 `object_variables` 的新 DataFrame。然后，使用 `.nunique()` 函数查找该 DataFrame
    中每一列的唯一值数量，并对结果系列进行排序：
- en: '[PRE20]'
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'The output will be:'
  id: totrans-105
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出结果将是：
- en: '![Figure 2.45: Number of unique values within each column having the object
    type'
  id: totrans-106
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 2.45：每一列具有对象类型的唯一值的数量'
- en: '](img/C12622_02_45.jpg)'
  id: totrans-107
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C12622_02_45.jpg)'
- en: 'Figure 2.45: Number of unique values within each column having the object type'
  id: totrans-108
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2.45：每一列具有对象类型的唯一值的数量
- en: 'Create a DataFrame representing the number of occurrences for each categorical
    value in the `HouseStyle` column. Use the `.value_counts()` function to calculate
    the frequencies of each value in decreasing order in the form of a pandas series,
    then reset the index to give us a DataFrame and sort the values by the index:'
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个 DataFrame，表示 `HouseStyle` 列中每个类别值的出现次数。使用 `.value_counts()` 函数计算每个值的频率，按降序以
    pandas 系列的形式表示，然后重置索引，得到一个 DataFrame，并按索引对值进行排序：
- en: '[PRE21]'
  id: totrans-110
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'The output will be:'
  id: totrans-111
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出结果将是：
- en: '![Figure 2.46: Number of occurrences for each categorical value in the HouseStyle
    column'
  id: totrans-112
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 2.46：HouseStyle 列中每个类别值的出现次数'
- en: '](img/C12622_02_46.jpg)'
  id: totrans-113
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C12622_02_46.jpg)'
- en: 'Figure 2.46: Number of occurrences for each categorical value in the HouseStyle
    column'
  id: totrans-114
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2.46：HouseStyle 列中每个类别值的出现次数
- en: 'Plot a pie chart representing these counts. As in *Step 1*, we initialize the
    image using `plt.figure()` and use the `plt.title()` and `plt.show()` methods
    to set the figure title and display it respectively. The primary plotting function
    used is `plt.pie()`, to which we pass the series we created in the previous step:'
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 绘制表示这些计数的饼图。如同 *步骤 1*，我们使用 `plt.figure()` 初始化图像，并分别使用 `plt.title()` 和 `plt.show()`
    方法来设置图形标题并显示图像。主要使用的绘图函数是 `plt.pie()`，将我们在前一步创建的系列传递给它：
- en: '[PRE22]'
  id: totrans-116
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'The output will be as follows:'
  id: totrans-117
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出结果如下：
- en: '![Figure 2.47: Pie chart representing the counts'
  id: totrans-118
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 2.47：表示计数的饼图'
- en: '](img/C12622_02_47.jpg)'
  id: totrans-119
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C12622_02_47.jpg)'
- en: 'Figure 2.47: Pie chart representing the counts'
  id: totrans-120
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2.47：表示计数的饼图
- en: 'Find the number of unique values within each column having the number type.
    As done in *Step 2*, now select columns having the `numpy.number` data type and
    find the number of unique values in each column using `.nunique()`. Sort the resultant
    series in descending order:'
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 找出每一列具有数字类型的唯一值的数量。如同 *步骤 2*，现在选择具有 `numpy.number` 数据类型的列，并使用 `.nunique()` 查找每一列的唯一值数量。按降序对结果系列进行排序：
- en: '[PRE23]'
  id: totrans-122
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'The output will be as follows:'
  id: totrans-123
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出结果如下：
- en: '![Figure 2.48: Number of unique values within each column having the number
    type'
  id: totrans-124
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 2.48：每一列具有数字类型的唯一值的数量'
- en: '](img/C12622_02_48.jpg)'
  id: totrans-125
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C12622_02_48.jpg)'
- en: 'Figure 2.48: Number of unique values within each column having the number type'
  id: totrans-126
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2.48：每一列具有数字类型的唯一值的数量
- en: 'Plot a histogram using Seaborn for the `LotArea` variable. Use Seaborn''s `.distplot()`
    function as the primary plotting function, to which the `LotArea` series in the
    DataFrame needs to be passed (without any null values; use `.dropna()` on the
    series to remove them). To improve the plot view, also set the `bins` parameter
    and specify the *X* axis limits using `plt.xlim()`:'
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 Seaborn 绘制 `LotArea` 变量的直方图。使用 Seaborn 的 `.distplot()` 函数作为主要绘图函数，并将 DataFrame
    中的 `LotArea` 系列传递给它（去除空值；使用 `.dropna()` 函数删除空值）。为了改善图形的显示，还可以设置 `bins` 参数，并使用
    `plt.xlim()` 指定 *X* 轴的限制：
- en: '[PRE24]'
  id: totrans-128
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'The output will be as follows:'
  id: totrans-129
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出结果如下：
- en: '![Figure 2.49: Histogram for the LotArea variable'
  id: totrans-130
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 2.49：LotArea 变量的直方图'
- en: '](img/C12622_02_49.jpg)'
  id: totrans-131
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C12622_02_49.jpg)'
- en: 'Figure 2.49: Histogram for the LotArea variable'
  id: totrans-132
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2.49：LotArea 变量的直方图
- en: 'Calculate the skew and kurtosis values for the values in each column:'
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 计算每一列数值的偏斜值和峰度值：
- en: '[PRE25]'
  id: totrans-134
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'The output for skew values will be:'
  id: totrans-135
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 偏斜值的输出结果将是：
- en: '![Figure 2.50: Skew values for each column'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.50：每一列的偏斜值'
- en: '](img/C12622_02_50.jpg)'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/C12622_02_50.jpg)'
- en: 'Figure 2.50: Skew values for each column'
  id: totrans-138
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2.50：每一列的偏斜值
- en: 'The output for kurtosis values will be:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 峰度值的输出结果将是：
- en: '![Figure 2.51: Kurtosis values for each column'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.51：每一列的峰度值'
- en: '](img/C12622_02_51.jpg)'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/C12622_02_51.jpg)'
- en: 'Figure 2.51: Kurtosis values for each column'
  id: totrans-142
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2.51：每一列的峰度值
- en: 'Activity 4: Relationships Within the Data'
  id: totrans-143
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 活动4：数据中的关系
- en: '**Solution**'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: '**解答**'
- en: 'Plot the correlation heatmap for the dataset. As we did in *Exercise 23: Correlation
    Heatmap*, plot the heatmap using Seaborn''s `.heatmap()` function and pass the
    feature correlation matrix (as determined by using pandas'' `.corr()` function
    on the DataFrame). Additionally, set the color map to `RdBu` using the `cmap`
    parameter and the minimum and maximum values on the color scale to `-1` and `1`
    using the `vmin` and `vmax` parameters respectively:'
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 绘制数据集的相关性热力图。正如我们在*练习23：相关性热力图*中所做的那样，使用Seaborn的`.heatmap()`函数绘制热力图，并传递特征相关性矩阵（通过使用pandas的`.corr()`函数在数据框上确定）。此外，使用`cmap`参数将颜色图设置为`RdBu`，并通过`vmin`和`vmax`参数分别将颜色刻度的最小值和最大值设置为`-1`和`1`：
- en: '[PRE26]'
  id: totrans-146
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'The output will be:'
  id: totrans-147
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出结果如下：
- en: '![Figure 2.52: Heatmap for the dataset'
  id: totrans-148
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图2.52：数据集的热力图'
- en: '](img/C12622_02_52.jpg)'
  id: totrans-149
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C12622_02_52.jpg)'
- en: 'Figure 2.52: Heatmap for the dataset'
  id: totrans-150
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图2.52：数据集的热力图
- en: 'Plot a more compact heatmap having annotations for correlation values using
    the following subset of features:'
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下特征子集绘制一个更紧凑的热力图，并带有相关值的注释：
- en: '[PRE27]'
  id: totrans-152
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Now do the same as in the previous step, this time selecting only the above
    columns in the dataset, and adding an `annot` parameter with the `True` value
    to the primary plotting function, all else remaining the same:'
  id: totrans-153
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在，按照上一步的方法操作，这次只选择数据集中上述列，并向主绘图函数添加一个值为`True`的`annot`参数，其他保持不变：
- en: '[PRE28]'
  id: totrans-154
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'The output will be as follows:'
  id: totrans-155
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出结果如下：
- en: '![Figure 2.53: Heatmap with annotations for correlation values'
  id: totrans-156
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图2.53：带有相关值注释的热力图'
- en: '](img/C12622_02_53.jpg)'
  id: totrans-157
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C12622_02_53.jpg)'
- en: 'Figure 2.53: Heatmap with annotations for correlation values'
  id: totrans-158
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图2.53：带有相关值注释的热力图
- en: 'Display the pairplot for the same subset of features, with the KDE plot on
    the diagonals and scatter plot elsewhere. Use Seaborn''s `.pairplot()` function
    to plot the pairplot for the non-null values in the selected columns of the DataFrame.
    To make the diagonal plots KDE plots, pass `kde` to the `diag_kind` parameter
    and to set all other plots as scatter plots, pass `scatter` to the `kind` parameter:'
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 显示同一特征子集的配对图，主对角线为KDE图，其它部分为散点图。使用Seaborn的`.pairplot()`函数绘制数据框中选定列的非空值的配对图。要将主对角线图设置为KDE图，可以将`kde`传递给`diag_kind`参数，要将其它图设置为散点图，则将`scatter`传递给`kind`参数：
- en: '[PRE29]'
  id: totrans-160
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'The output will be:'
  id: totrans-161
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出结果如下：
- en: '![Figure 2.54: Pairplot for the same subset of features'
  id: totrans-162
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图2.54：同一特征子集的配对图'
- en: '](img/C12622_02_54.jpg)'
  id: totrans-163
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C12622_02_54.jpg)'
- en: 'Figure 2.54: Pairplot for the same subset of features'
  id: totrans-164
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图2.54：同一特征子集的配对图
- en: 'Create a boxplot to show the variation in `SalePrice` for each category of
    `GarageCars`. The primary plotting function used here will be Seaborn''s `.boxplot()`
    function, to which we pass the DataFrame along with parameters `x` and `y`, the
    former is the categorical variable and the latter is the continuous variable over
    which we want to see the variation within each category, that is, `GarageCars`
    and `SalePrice` respectively:'
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个箱型图，显示每个`GarageCars`类别中的`SalePrice`变动。这里使用的主要绘图函数是Seaborn的`.boxplot()`函数，我们将数据框以及`x`和`y`参数传递给它，前者是分类变量，后者是我们希望看到在每个类别中变动的连续变量，即`GarageCars`和`SalePrice`：
- en: '[PRE30]'
  id: totrans-166
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'The output will be as follows:'
  id: totrans-167
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出结果如下：
- en: '![Figure 2.55: Boxplot showing variation in SalePrice for each category of
    GarageCars'
  id: totrans-168
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图2.55：显示每个`GarageCars`类别中`SalePrice`变动的箱型图'
- en: '](img/C12622_02_55.jpg)'
  id: totrans-169
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C12622_02_55.jpg)'
- en: 'Figure 2.55: Boxplot showing variation in SalePrice for each category of GarageCars'
  id: totrans-170
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图2.55：显示每个`GarageCars`类别中`SalePrice`变动的箱型图
- en: 'Plot a line graph using Seaborn to show the variation in `SalePrice` for older
    and more recently built flats. Here, we will plot a line plot using Seaborn''s
    `.lineplot()` function. Since we want to see the variation in `SalePrice`, we
    take this as the *y* variable, and as the variation is across a period of time,
    we take `YearBuilt` as the *x* variable. Keeping this in mind, we pass the respective
    series as values to the `y` and `x` parameters for the primary plotting function.
    We also pass a `ci=None` parameter to hide the standard deviation indicator around
    the line in the plot:'
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用Seaborn绘制折线图，显示较旧和较新建公寓的`SalePrice`变化。在这里，我们将使用Seaborn的`.lineplot()`函数绘制折线图。由于我们希望查看`SalePrice`的变化，因此将其作为*y*变量，而由于变化跨越一段时间，我们将`YearBuilt`作为*x*变量。记住这一点，我们将相应的系列作为值传递给主绘图函数的`y`和`x`参数。同时，我们传递`ci=None`参数，以隐藏图中折线周围的标准差指示器：
- en: '[PRE31]'
  id: totrans-172
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'The output will be as follows:'
  id: totrans-173
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出结果如下：
- en: '![Figure 2.56: Line graph showing the variation in SalePrice for older and
    more recently built flats'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.56：显示旧公寓和新建公寓的SalePrice变化的折线图'
- en: '](img/C12622_02_56.jpg)'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/C12622_02_56.jpg)'
- en: 'Figure 2.56: Line graph showing the variation in SalePrice for older and more
    recently built flats'
  id: totrans-176
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2.56：显示旧公寓和新建公寓的SalePrice变化的折线图
- en: 'Chapter 3: Regression Analysis'
  id: totrans-177
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第三章：回归分析
- en: 'Activity 5: Plotting Data with a Moving Average'
  id: totrans-178
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 活动 5：使用移动平均绘制数据
- en: '**Solution**'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: '**解答**'
- en: 'Load the dataset into a pandas DataFrame from the CSV file:'
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从CSV文件中将数据集加载到pandas DataFrame中：
- en: '[PRE32]'
  id: totrans-181
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'The output will show the initial five rows of the `austin_weather.csv` file:'
  id: totrans-182
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出结果将显示`austin_weather.csv`文件的前五行：
- en: '![Figure 3.74: The first five rows of the Austin weather data'
  id: totrans-183
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 3.74：奥斯汀天气数据的前五行'
- en: '](img/C12622_03_74.jpg)'
  id: totrans-184
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C12622_03_74.jpg)'
- en: 'Figure 3.74: The first five rows of the Austin weather data'
  id: totrans-185
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 3.74：奥斯汀天气数据的前五行
- en: 'Since we only need the `Date` and `TempAvgF` columns, we''ll remove all others
    from the dataset:'
  id: totrans-186
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 由于我们只需要`Date`和`TempAvgF`列，因此我们将从数据集中删除其他所有列：
- en: '[PRE33]'
  id: totrans-187
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'The output will be:'
  id: totrans-188
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出结果如下：
- en: '![Figure 3.75: Date and TempAvgF columns of the Austin weather data'
  id: totrans-189
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 3.75：奥斯汀天气数据的日期和TempAvgF列'
- en: '](img/C12622_03_75.jpg)'
  id: totrans-190
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C12622_03_75.jpg)'
- en: 'Figure 3.75: Date and TempAvgF columns of the Austin weather data'
  id: totrans-191
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 3.75：奥斯汀天气数据的日期和TempAvgF列
- en: 'Initially, we are only interested in the first year''s data, so we need to
    extract that information only. Create a column in the DataFrame for the year value,
    extract the year value as an integer from the strings in the `Date` column, and
    assign these values to the `Year` column. Note that temperatures are recorded
    daily:'
  id: totrans-192
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最初，我们只关心第一年的数据，因此我们只需要提取该信息。在DataFrame中为年份创建一列，从`Date`列的字符串中提取年份值作为整数，并将这些值分配给`Year`列。请注意，温度是按天记录的：
- en: '[PRE34]'
  id: totrans-193
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'The output will be:'
  id: totrans-194
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出结果如下：
- en: '![Figure 3.76: Extracting the year'
  id: totrans-195
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 3.76：提取年份'
- en: '](img/C12622_03_76.jpg)'
  id: totrans-196
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C12622_03_76.jpg)'
- en: 'Figure 3.76: Extracting the year'
  id: totrans-197
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 3.76：提取年份
- en: 'Repeat this process to extract the month values and store the values as integers
    in a `Month` column:'
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重复此过程以提取月份值，并将值以整数形式存储在`Month`列中：
- en: '[PRE35]'
  id: totrans-199
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'The output will be:'
  id: totrans-200
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出结果如下：
- en: '![Figure 3.77: Extracting the month'
  id: totrans-201
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 3.77：提取月份'
- en: '](img/C12622_03_77.jpg)'
  id: totrans-202
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C12622_03_77.jpg)'
- en: 'Figure 3.77: Extracting the month'
  id: totrans-203
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 3.77：提取月份
- en: 'Copy the first year''s worth of data to a DataFrame:'
  id: totrans-204
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将第一年的数据复制到DataFrame中：
- en: '[PRE36]'
  id: totrans-205
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'The output will be as follows:'
  id: totrans-206
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出结果如下：
- en: '![Figure 3.78: Copied data to new dataframe'
  id: totrans-207
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 3.78：复制数据到新的数据框'
- en: '](img/C12622_03_78.jpg)'
  id: totrans-208
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C12622_03_78.jpg)'
- en: 'Figure 3.78: Copied data to new DataFrame'
  id: totrans-209
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 3.78：复制数据到新的数据框
- en: 'Compute a 20-day moving average filter:'
  id: totrans-210
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 计算20天的移动平均滤波器：
- en: '[PRE37]'
  id: totrans-211
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'The output will be:'
  id: totrans-212
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出结果如下：
- en: '[PRE38]'
  id: totrans-213
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'Plot the raw data and the moving average signal, with the *x* axis as the day
    number in the year:'
  id: totrans-214
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 绘制原始数据和移动平均信号，*x*轴为年份中的天数：
- en: '[PRE39]'
  id: totrans-215
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'The output will be as follows:'
  id: totrans-216
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出结果如下：
- en: '![Figure 3.79: Scatter plot of temperature throughout the year'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 3.79：全年温度的散点图'
- en: '](img/C12622_03_79.jpg)'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/C12622_03_79.jpg)'
- en: 'Figure 3.79: Scatter plot of temperature throughout the year'
  id: totrans-219
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 3.79：全年温度的散点图
- en: 'Activity 6: Linear Regression Using the Least Squares Method'
  id: totrans-220
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 活动 6：使用最小二乘法进行线性回归
- en: '**Solution**'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: '**解答**'
- en: 'Visualize the measurements:'
  id: totrans-222
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 可视化测量值：
- en: '[PRE40]'
  id: totrans-223
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'The output will be as follows:'
  id: totrans-224
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出结果如下：
- en: '![Figure 3.80: First five rows of activity2_measurements.csv dataset'
  id: totrans-225
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 3.80：activity2_measurements.csv数据集的前五行'
- en: '](img/C12622_03_80.jpg)'
  id: totrans-226
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C12622_03_80.jpg)'
- en: 'Figure 3.80: First five rows of activity2_measurements.csv dataset'
  id: totrans-227
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 3.80：activity2_measurements.csv数据集的前五行
- en: 'Visualize the rolling average values:'
  id: totrans-228
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 可视化滚动平均值：
- en: '[PRE41]'
  id: totrans-229
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'The output will be as follows:'
  id: totrans-230
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出结果如下：
- en: '![Figure 3.81: Rolling head average'
  id: totrans-231
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 3.81：滚动头平均值'
- en: '](img/C12622_03_81.jpg)'
  id: totrans-232
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C12622_03_81.jpg)'
- en: 'Figure 3.81: Rolling head average'
  id: totrans-233
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 3.81：滚动头平均值
- en: 'Create a linear regression model using the default parameters; that is, calculate
    a *y* intercept for the model and do not normalize the data:'
  id: totrans-234
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用默认参数创建线性回归模型；即，计算模型的*y*截距并且不对数据进行归一化：
- en: '[PRE42]'
  id: totrans-235
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'The output will be as follows:'
  id: totrans-236
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出结果如下：
- en: '[PRE43]'
  id: totrans-237
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'Now fit the model, where the input data is the day number for the year (1 to
    365) and the output is the average temperature. To make later calculations easier,
    insert a column (`DayOfYear`) that corresponds with the day of the year for that
    measurement:'
  id: totrans-238
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在拟合模型，其中输入数据为年份的天数（1到365），输出为平均温度。为了便于后续计算，插入一列（`DayOfYear`），该列与该测量的年份天数对应：
- en: '[PRE44]'
  id: totrans-239
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'The output will be as follows:'
  id: totrans-240
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出结果如下：
- en: '![Figure 3.82: Adding day of year column'
  id: totrans-241
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 3.82: 添加年份中的日期列'
- en: '](img/C12622_03_82.jpg)'
  id: totrans-242
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C12622_03_82.jpg)'
- en: 'Figure 3.82: Adding day of year column'
  id: totrans-243
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: '图 3.82: 添加年份中的日期列'
- en: 'Fit the model with the `DayOfYear` values as the input and `df_first_year.TempAvgF`
    as the output:'
  id: totrans-244
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `DayOfYear` 值作为输入，`df_first_year.TempAvgF` 作为输出，拟合模型：
- en: '[PRE45]'
  id: totrans-245
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'The output will be as follows:'
  id: totrans-246
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出将如下所示：
- en: '[PRE46]'
  id: totrans-247
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'Print the parameters of the model:'
  id: totrans-248
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打印模型的参数：
- en: '[PRE47]'
  id: totrans-249
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'The output will be:'
  id: totrans-250
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出将如下所示：
- en: '[PRE48]'
  id: totrans-251
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'We can calculate the trendline values by using the first, middle, and last
    values (days in years) in the linear equation:'
  id: totrans-252
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以通过使用线性方程中的第一个、中间和最后的值（年份中的天数）来计算趋势线值：
- en: '[PRE49]'
  id: totrans-253
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'The output will be as follows:'
  id: totrans-254
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出将如下所示：
- en: '[PRE50]'
  id: totrans-255
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'Plot these values with the trendline:'
  id: totrans-256
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 绘制这些值与趋势线：
- en: '[PRE51]'
  id: totrans-257
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'The output will be as follows:'
  id: totrans-258
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出将如下所示：
- en: '![Figure 3.83: Scatterplot of temperature thought the year with the predicted
    trendline'
  id: totrans-259
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 3.83: 全年温度散点图与预测趋势线'
- en: '](img/C12622_03_83.jpg)'
  id: totrans-260
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C12622_03_83.jpg)'
- en: 'Figure 3.83: Scatterplot of temperature thought the year with the predicted
    trendline'
  id: totrans-261
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: '图 3.83: 全年温度的散点图与预测趋势线'
- en: 'Evaluate the performance of the model. How well does the model fit the data?
    Calculate the r2 score to find out:'
  id: totrans-262
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 评估模型的表现。模型如何拟合数据？计算 r2 分数来找出答案：
- en: '[PRE52]'
  id: totrans-263
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE52]'
- en: 'The output will be:'
  id: totrans-264
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出将如下所示：
- en: '[PRE53]'
  id: totrans-265
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'Activity 7: Dummy Variables'
  id: totrans-266
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '活动 7: 虚拟变量'
- en: '**Solution**'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: '**解决方案**'
- en: 'Plot the raw data (`df`) and moving average (`rolling`):'
  id: totrans-268
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 绘制原始数据（`df`）和移动平均值（`rolling`）：
- en: '[PRE54]'
  id: totrans-269
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE54]'
- en: 'The output will be:'
  id: totrans-270
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出将如下所示：
- en: '![Figure 3.84: Scatterplot of Temperature throughout the year'
  id: totrans-271
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 3.84: 全年温度的散点图'
- en: '](img/C12622_03_84.jpg)'
  id: totrans-272
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C12622_03_84.jpg)'
- en: 'Figure 3.84: Scatterplot of Temperature throughout the year'
  id: totrans-273
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: '图 3.84: 全年温度的散点图'
- en: 'Looking at the preceding plot, there seems to be an inflection point around
    day 250\. Create a dummy variable to introduce this feature into the linear model:'
  id: totrans-274
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从前面的图来看，似乎在第 250 天左右有一个拐点。创建一个虚拟变量，将此特征引入线性模型：
- en: '[PRE55]'
  id: totrans-275
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE55]'
- en: 'Check the first and last samples to confirm that the dummy variable is correct.
    Check the first five samples:'
  id: totrans-276
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查首尾样本，确认虚拟变量是否正确。检查前五个样本：
- en: '[PRE56]'
  id: totrans-277
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE56]'
- en: 'The output will be as follows:'
  id: totrans-278
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出将如下所示：
- en: '![Figure 3.85: First five columns'
  id: totrans-279
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 3.85: 前五列'
- en: '](img/C12622_03_85.jpg)'
  id: totrans-280
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C12622_03_85.jpg)'
- en: 'Figure 3.85: First five columns'
  id: totrans-281
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: '图 3.85: 前五列'
- en: 'Then, check the last five samples:'
  id: totrans-282
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 然后，检查最后五个样本：
- en: '[PRE57]'
  id: totrans-283
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE57]'
- en: 'The output will be:'
  id: totrans-284
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出将如下所示：
- en: '![Figure 3.86: Last five columns'
  id: totrans-285
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 3.86: 最后五列'
- en: '](img/C12622_03_86.jpg)'
  id: totrans-286
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C12622_03_86.jpg)'
- en: 'Figure 3.86: Last five columns'
  id: totrans-287
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: '图 3.86: 最后五列'
- en: 'Use a least squares linear regression model and fit the model to the `DayOfYear`
    values and the dummy variable to predict `TempAvgF`:'
  id: totrans-288
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用最小二乘法线性回归模型，将模型拟合到 `DayOfYear` 值和虚拟变量上，以预测 `TempAvgF`：
- en: '[PRE58]'
  id: totrans-289
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE58]'
- en: 'The output will be as follows:'
  id: totrans-290
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出将如下所示：
- en: '[PRE59]'
  id: totrans-291
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE59]'
- en: 'Compute the r2 score:'
  id: totrans-292
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 计算 r2 分数：
- en: '[PRE60]'
  id: totrans-293
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE60]'
- en: 'The output will be as follows:'
  id: totrans-294
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出将如下所示：
- en: '[PRE61]'
  id: totrans-295
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE61]'
- en: 'Using the `DayOfYear` values, create a set of predictions using the model to
    construct a trendline:'
  id: totrans-296
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `DayOfYear` 值，创建一组预测值，使用模型构建趋势线：
- en: '[PRE62]'
  id: totrans-297
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE62]'
- en: 'The output will be:'
  id: totrans-298
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出将如下所示：
- en: '[PRE63]'
  id: totrans-299
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE63]'
- en: 'Plot the trendline against the data and the moving average:'
  id: totrans-300
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 绘制趋势线与数据和移动平均值的对比：
- en: '[PRE64]'
  id: totrans-301
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE64]'
- en: 'The output will be as follows:'
  id: totrans-302
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出将如下所示：
- en: '![Figure 3.87: Predicted trendline'
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 3.87: 预测趋势线'
- en: '](img/C12622_03_87.jpg)'
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/C12622_03_87.jpg)'
- en: 'Figure 3.87: Predicted trendline'
  id: totrans-305
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: '图 3.87: 预测趋势线'
- en: 'Activity 8: Other Model Types with Linear Regression'
  id: totrans-306
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '活动 8: 其他类型的线性回归模型'
- en: '**Solution**'
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: '**解决方案**'
- en: 'Use a sine curve function as the basis of the model:'
  id: totrans-308
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用正弦曲线函数作为模型的基础：
- en: '[PRE65]'
  id: totrans-309
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE65]'
- en: 'The output will be as follows:'
  id: totrans-310
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出将如下所示：
- en: '![Figure 3.88: First five rows'
  id: totrans-311
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 3.88: 前五行'
- en: '](img/C12622_03_88.jpg)'
  id: totrans-312
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C12622_03_88.jpg)'
- en: 'Figure 3.88: First five rows'
  id: totrans-313
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: '图 3.88: 前五行'
- en: 'Fit the model:'
  id: totrans-314
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 拟合模型：
- en: '[PRE66]'
  id: totrans-315
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE66]'
- en: 'The output will be as follows:'
  id: totrans-316
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出将如下所示：
- en: '[PRE67]'
  id: totrans-317
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE67]'
- en: 'Print the parameters of the model:'
  id: totrans-318
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打印模型的参数：
- en: '[PRE68]'
  id: totrans-319
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE68]'
- en: 'The output will be as follows:'
  id: totrans-320
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出将如下所示：
- en: '[PRE69]'
  id: totrans-321
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE69]'
- en: 'Compute the r2 value to measure the performance:'
  id: totrans-322
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 计算 r2 值来衡量模型的表现：
- en: '[PRE70]'
  id: totrans-323
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE70]'
- en: 'The output will be:'
  id: totrans-324
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出将如下所示：
- en: '[PRE71]'
  id: totrans-325
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE71]'
- en: 'Construct the trendline values:'
  id: totrans-326
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 构建趋势线值：
- en: '[PRE72]'
  id: totrans-327
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE72]'
- en: 'The output will be:'
  id: totrans-328
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出将如下所示：
- en: '[PRE73]'
  id: totrans-329
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE73]'
- en: 'Plot the trendline with the raw data and the moving average:'
  id: totrans-330
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 绘制趋势线与原始数据和移动平均值：
- en: '[PRE74]'
  id: totrans-331
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE74]'
- en: 'The output will be as follows:'
  id: totrans-332
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出将如下所示：
- en: '![Figure 3.89: Predicted trendline'
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 3.89: 预测趋势线'
- en: '](img/C12622_03_89.jpg)'
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/C12622_03_89.jpg)'
- en: 'Figure 3.89: Predicted trendline'
  id: totrans-335
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: '图 3.89: 预测趋势线'
- en: 'Activity 9: Gradient Descent'
  id: totrans-336
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '活动 9: 梯度下降法'
- en: '**Solution**'
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: '**解决方案**'
- en: 'Create a generic gradient descent model and normalize the day of year values
    as between 0 and 1:'
  id: totrans-338
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个通用的梯度下降模型，并将年份中的日期值归一化为 0 到 1 之间：
- en: '[PRE75]'
  id: totrans-339
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE75]'
- en: 'Fit the model:'
  id: totrans-340
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 拟合模型：
- en: '[PRE76]'
  id: totrans-341
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE76]'
- en: 'The output will be as follows:'
  id: totrans-342
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出将如下所示：
- en: '[PRE77]'
  id: totrans-343
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE77]'
- en: 'Print the details of the model:'
  id: totrans-344
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打印模型的详细信息：
- en: '[PRE78]'
  id: totrans-345
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE78]'
- en: 'The output will be as follows:'
  id: totrans-346
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出将如下所示：
- en: '[PRE79]'
  id: totrans-347
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE79]'
- en: 'Prepare the *x* (`_trend_x`) trendline values by dividing them by the maximum.
    Predict `y_trend_values` using the gradient descent model:'
  id: totrans-348
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 准备 *x* (`_trend_x`) 趋势线值，通过将其除以最大值。使用梯度下降模型预测 `y_trend_values`：
- en: '[PRE80]'
  id: totrans-349
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE80]'
- en: 'The output will be as follows:'
  id: totrans-350
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出将如下所示：
- en: '[PRE81]'
  id: totrans-351
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE81]'
- en: 'Plot the data and the moving average with the trendline:'
  id: totrans-352
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 绘制数据和带趋势线的移动平均图：
- en: '[PRE82]'
  id: totrans-353
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE82]'
- en: 'The output will be as follows:'
  id: totrans-354
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出将如下所示：
- en: '![Figure 3.90: Gradient descent predicted trendline'
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 3.90：梯度下降预测的趋势线'
- en: '](img/C12622_03_90.jpg)'
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/C12622_03_90.jpg)'
- en: 'Figure 3.90: Gradient descent predicted trendline'
  id: totrans-357
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 3.90：梯度下降预测的趋势线
- en: 'Activity 10: Autoregressors'
  id: totrans-358
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 活动 10：自回归模型
- en: '**Solution**'
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: '**解决方案**'
- en: 'Plot the complete set of average temperature values (`df.TempAvgF`) with years
    on the *x* axis:'
  id: totrans-360
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 绘制完整的平均温度值（`df.TempAvgF`）图，*x* 轴为年份：
- en: '[PRE83]'
  id: totrans-361
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE83]'
- en: 'The output will be:'
  id: totrans-362
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出将是：
- en: '![Figure 3.91: Plot of temperature through the year'
  id: totrans-363
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 3.91：通过年份的温度变化图'
- en: '](img/C12622_03_91.jpg)'
  id: totrans-364
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C12622_03_91.jpg)'
- en: 'Figure 3.91: Plot of temperature through the year'
  id: totrans-365
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 3.91：通过年份的温度变化图
- en: 'Create a 20-day lag and plot the lagged data on the original dataset:'
  id: totrans-366
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个 20 天滞后，并将滞后数据绘制到原始数据集上：
- en: '[PRE84]'
  id: totrans-367
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE84]'
- en: 'The output will be:'
  id: totrans-368
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出将是：
- en: '![Figure 3.92: Plot of temperature through the years with a 20-day lag'
  id: totrans-369
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 3.92：带有 20 天滞后的温度变化图'
- en: '](img/C12622_03_92.jpg)'
  id: totrans-370
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C12622_03_92.jpg)'
- en: 'Figure 3.92: Plot of temperature through the years with a 20-day lag'
  id: totrans-371
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 3.92：带有 20 天滞后的温度变化图
- en: Construct an autocorrelation plot to see whether the average temperature can
    be used with an autoregressor. Where is the lag acceptable and where is it not
    for an autoregressor?
  id: totrans-372
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 构建自相关图，查看是否可以使用自回归模型来预测平均温度。对于自回归模型，在哪些地方滞后是可接受的，在哪些地方滞后不可接受？
- en: '[PRE85]'
  id: totrans-373
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE85]'
- en: 'We''ll get the following output:'
  id: totrans-374
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们将得到以下输出：
- en: '![Figure 3.93: Plot of autocorrelation versus lag'
  id: totrans-375
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 3.93：自相关与滞后关系图'
- en: '](img/C12622_03_93.jpg)'
  id: totrans-376
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C12622_03_93.jpg)'
- en: 'Figure 3.93: Plot of autocorrelation versus lag'
  id: totrans-377
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 3.93：自相关与滞后关系图
- en: The lag is acceptable only when the autocorrelation line lies outside the 99%
    confidence bounds, as represented by the dashed lines.
  id: totrans-378
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 只有当自相关线超出 99% 置信区间（由虚线表示）时，滞后才是可接受的。
- en: 'Chose an acceptable lag and an unacceptable lag and construct lag plots using
    these values for acceptable lag:'
  id: totrans-379
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择一个可接受滞后和不可接受滞后，并使用这些值构建滞后图示：
- en: '[PRE86]'
  id: totrans-380
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE86]'
- en: 'We''ll get the following output:'
  id: totrans-381
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们将得到以下输出：
- en: '![Figure 3.94: Plot of acceptable lag'
  id: totrans-382
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 3.94：可接受滞后的图示'
- en: '](img/C12622_03_94.jpg)'
  id: totrans-383
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C12622_03_94.jpg)'
- en: 'Figure 3.94: Plot of acceptable lag'
  id: totrans-384
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 3.94：可接受滞后的图示
- en: 'Use these values for unacceptable lag:'
  id: totrans-385
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用这些值来表示不可接受的滞后：
- en: '[PRE87]'
  id: totrans-386
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE87]'
- en: 'We''ll get the following output:'
  id: totrans-387
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们将得到以下输出：
- en: '![Figure 3.95: Plot of unacceptable lag'
  id: totrans-388
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 3.95：不可接受滞后的图示'
- en: '](img/C12622_03_95.jpg)'
  id: totrans-389
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C12622_03_95.jpg)'
- en: 'Figure 3.95: Plot of unacceptable lag'
  id: totrans-390
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 3.95：不可接受滞后的图示
- en: 'Create an autoregressor model, note the selected lag, calculate the R2 value,
    and plot the autoregressor model with the original plot. The model is to project
    past the available data by 1,000 samples:'
  id: totrans-391
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个自回归模型，注意选择的滞后值，计算 R2 值，并将自回归模型与原始图一起绘制。该模型用于预测超出可用数据的 1,000 个样本：
- en: '[PRE88]'
  id: totrans-392
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE88]'
- en: 'Fit the model to the data:'
  id: totrans-393
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将模型拟合到数据：
- en: '[PRE89]'
  id: totrans-394
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE89]'
- en: 'The output will be:'
  id: totrans-395
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出将是：
- en: '[PRE90]'
  id: totrans-396
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE90]'
- en: 'Create a set of predictions for 1,000 days after the last sample:'
  id: totrans-397
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个预测集，预测最后一个样本之后的 1,000 天：
- en: '[PRE91]'
  id: totrans-398
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE91]'
- en: 'The output will be:'
  id: totrans-399
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出将是：
- en: '[PRE92]'
  id: totrans-400
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE92]'
- en: 'Plot the predictions, as well as the original dataset:'
  id: totrans-401
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 绘制预测图以及原始数据集：
- en: '[PRE93]'
  id: totrans-402
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE93]'
- en: 'The output will be:'
  id: totrans-403
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出将是：
- en: '![Figure 3.96: Plot of temperature through the years'
  id: totrans-404
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 3.96：通过年份的温度变化图'
- en: '](img/C12622_03_96.jpg)'
  id: totrans-405
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C12622_03_96.jpg)'
- en: 'Figure 3.96: Plot of temperature through the years'
  id: totrans-406
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 3.96：通过年份的温度变化图
- en: 'Enhance the view to look for differences by showing the 100th to 200th samples:'
  id: totrans-407
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过显示第 100 到第 200 个样本，增强视图以查看差异：
- en: '[PRE94]'
  id: totrans-408
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE94]'
- en: 'We''ll get the following output:'
  id: totrans-409
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们将得到以下输出：
- en: '![Figure 3.97: Plot of predictions with the original dataset'
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 3.97：带有原始数据集的预测图'
- en: '](img/C12622_03_97.jpg)'
  id: totrans-411
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/C12622_03_97.jpg)'
- en: 'Figure 3.97: Plot of predictions with the original dataset'
  id: totrans-412
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 3.97：带有原始数据集的预测图
- en: 'Chapter 4: Classification'
  id: totrans-413
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第四章：分类
- en: 'Activity 11: Linear Regression Classifier – Two-Class Classifier'
  id: totrans-414
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 活动 11：线性回归分类器 - 二类分类器
- en: '**Solution**'
  id: totrans-415
  prefs: []
  type: TYPE_NORMAL
  zh: '**解决方案**'
- en: 'Import the required dependencies:'
  id: totrans-416
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入所需的依赖项：
- en: '[PRE95]'
  id: totrans-417
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE95]'
- en: 'Load the MNIST data into memory:'
  id: totrans-418
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 MNIST 数据加载到内存中：
- en: '[PRE96]'
  id: totrans-419
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE96]'
- en: 'Visualize a sample of the data:'
  id: totrans-420
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 可视化数据的一个样本：
- en: '[PRE97]'
  id: totrans-421
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE97]'
- en: 'We''ll get the following output:'
  id: totrans-422
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们将得到以下输出：
- en: '![Figure 4.76: Sample data'
  id: totrans-423
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 4.76：样本数据'
- en: '](img/C12622_04_76.jpg)'
  id: totrans-424
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C12622_04_76.jpg)'
- en: 'Figure 4.76: Sample data'
  id: totrans-425
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 4.76：样本数据
- en: 'Construct a linear classifier model to classify the digits zero and one. The
    model we are going to create is to determine whether the samples are either the
    digits zero or one. To do this, we first need to select only those samples:'
  id: totrans-426
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 构建一个线性分类器模型来分类数字0和1。我们将要创建的模型是确定样本是否为数字0或1。为此，我们首先需要仅选择这些样本：
- en: '[PRE98]'
  id: totrans-427
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE98]'
- en: 'Visualize the selected information. Here''s the code for zero:'
  id: totrans-428
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 可视化选择的信息。以下是零的代码：
- en: '[PRE99]'
  id: totrans-429
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE99]'
- en: 'The output will be as follows:'
  id: totrans-430
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出将如下所示：
- en: '![Figure 4.77: First sample data'
  id: totrans-431
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 4.77：第一个样本数据'
- en: '](img/C12622_04_77.jpg)'
  id: totrans-432
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C12622_04_77.jpg)'
- en: 'Figure 4.77: First sample data'
  id: totrans-433
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 4.77：第一个样本数据
- en: 'Here''s the code for one:'
  id: totrans-434
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这是零的代码：
- en: '[PRE100]'
  id: totrans-435
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE100]'
- en: 'The output will be:'
  id: totrans-436
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出将为：
- en: '![Figure 4.78: Second sample data'
  id: totrans-437
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 4.78：第二个样本数据'
- en: '](img/C12622_04_78.jpg)'
  id: totrans-438
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C12622_04_78.jpg)'
- en: 'Figure 4.78: Second sample data'
  id: totrans-439
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 4.78：第二个样本数据
- en: 'In order to provide the image information to the model, we must first flatten
    the data out so that each image is 1 x 784 pixels in shape:'
  id: totrans-440
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了将图像信息提供给模型，我们必须首先将数据展平，使得每个图像变为1 x 784像素的形状：
- en: '[PRE101]'
  id: totrans-441
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE101]'
- en: 'The output will be:'
  id: totrans-442
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出将为：
- en: '[PRE102]'
  id: totrans-443
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE102]'
- en: 'Let''s construct the model; use the `LinearRegression` API and call the `fit`
    function:'
  id: totrans-444
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们构建模型；使用`LinearRegression` API并调用`fit`函数：
- en: '[PRE103]'
  id: totrans-445
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE103]'
- en: 'The output will be:'
  id: totrans-446
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出将为：
- en: '[PRE104]'
  id: totrans-447
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE104]'
- en: 'Determine the R2 score against the training set:'
  id: totrans-448
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确定训练集的R2评分：
- en: '[PRE105]'
  id: totrans-449
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE105]'
- en: 'The output will be:'
  id: totrans-450
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出将为：
- en: '[PRE106]'
  id: totrans-451
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE106]'
- en: 'Determine the label predictions for each of the training samples, using a threshold
    of 0.5\. Values greater than 0.5 classify as one; values less than or equal to
    0.5 classify as zero:'
  id: totrans-452
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用0.5的阈值来确定每个训练样本的标签预测。大于0.5的值分类为一；小于或等于0.5的值分类为零：
- en: '[PRE107]'
  id: totrans-453
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE107]'
- en: 'The output will be:'
  id: totrans-454
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出将为：
- en: '[PRE108]'
  id: totrans-455
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE108]'
- en: 'Compute the classification accuracy of the predicted training values versus
    the ground truth:'
  id: totrans-456
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 计算预测的训练值与真实值之间的分类准确性：
- en: '[PRE109]'
  id: totrans-457
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE109]'
- en: 'The output will be:'
  id: totrans-458
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出将为：
- en: '[PRE110]'
  id: totrans-459
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE110]'
- en: 'Compare the performance against the test set:'
  id: totrans-460
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 与测试集的性能进行比较：
- en: '[PRE111]'
  id: totrans-461
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE111]'
- en: 'The output will be:'
  id: totrans-462
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出将为：
- en: '[PRE112]'
  id: totrans-463
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE112]'
- en: 'Activity 12: Iris Classification Using Logistic Regression'
  id: totrans-464
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 活动12：使用逻辑回归进行鸢尾花分类
- en: '**Solution**'
  id: totrans-465
  prefs: []
  type: TYPE_NORMAL
  zh: '**解决方案**'
- en: 'Import the required packages. For this activity, we will require the pandas
    package for loading the data, the Matplotlib package for plotting, and scikit-learn
    for creating the logistic regression model. Import all the required packages and
    relevant modules for these tasks:'
  id: totrans-466
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入所需的包。对于此活动，我们需要使用pandas包加载数据，Matplotlib包绘图，以及scikit-learn创建逻辑回归模型。导入所有必要的包和相关模块：
- en: '[PRE113]'
  id: totrans-467
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE113]'
- en: 'Load the Iris dataset using pandas and examine the first five rows:'
  id: totrans-468
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用pandas加载鸢尾花数据集并检查前五行：
- en: '[PRE114]'
  id: totrans-469
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE114]'
- en: 'The output will be:'
  id: totrans-470
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出将为：
- en: '![Figure 4.79: The first five rows of the Iris dataset'
  id: totrans-471
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 4.79：鸢尾花数据集的前五行'
- en: '](img/C12622_04_79.jpg)'
  id: totrans-472
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C12622_04_79.jpg)'
- en: 'Figure 4.79: The first five rows of the Iris dataset'
  id: totrans-473
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 4.79：鸢尾花数据集的前五行
- en: 'The next step is feature engineering. We need to select the most appropriate
    features that will provide the most powerful classification model. Plot a number
    of different features versus the allocated species classifications, for example,
    sepal length versus petal length and species. Visually inspect the plots and look
    for any patterns that could indicate separation between each of the species:'
  id: totrans-474
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下一步是特征工程。我们需要选择最合适的特征，以便提供最强大的分类模型。绘制多个不同特征与分配的物种分类之间的关系，例如，萼片长度与花瓣长度及物种。目视检查图表，寻找任何可能表示物种间分离的模式：
- en: '[PRE115]'
  id: totrans-475
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE115]'
- en: 'The output will be:'
  id: totrans-476
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出将为：
- en: '![Figure 4.80: Species classification plot'
  id: totrans-477
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 4.80：物种分类图'
- en: '](img/C12622_04_80.jpg)'
  id: totrans-478
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C12622_04_80.jpg)'
- en: 'Figure 4.80: Species classification plot'
  id: totrans-479
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 4.80：物种分类图
- en: 'Select the features by writing the column names in the following list:'
  id: totrans-480
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过在以下列表中写入列名来选择特征：
- en: '[PRE116]'
  id: totrans-481
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE116]'
- en: 'Before we can construct the model, we must first convert the `species` values
    into labels that can be used within the model. Replace the `Iris-setosa` species
    string with the value `0`, the `Iris-versicolor` species string with the value
    `1`, and the `Iris-virginica` species string with the value `2`:'
  id: totrans-482
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在构建模型之前，我们必须先将`species`值转换为模型中可以使用的标签。将`Iris-setosa`物种字符串替换为值`0`，将`Iris-versicolor`物种字符串替换为值`1`，将`Iris-virginica`物种字符串替换为值`2`：
- en: '[PRE117]'
  id: totrans-483
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE117]'
- en: 'Create the model using the `selected_features` and the assigned `species` labels:'
  id: totrans-484
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`selected_features`和分配的`species`标签创建模型：
- en: '[PRE118]'
  id: totrans-485
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE118]'
- en: 'The output will be:'
  id: totrans-486
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出将为：
- en: '[PRE119]'
  id: totrans-487
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE119]'
- en: 'Compute the accuracy of the model against the training set:'
  id: totrans-488
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 计算模型在训练集上的准确性：
- en: '[PRE120]'
  id: totrans-489
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE120]'
- en: 'The output will be:'
  id: totrans-490
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出将为：
- en: '[PRE121]'
  id: totrans-491
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE121]'
- en: 'Construct another model using your second choice `selected_features` and compare
    the performance:'
  id: totrans-492
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用你第二选择的 `selected_features` 构建另一个模型，并比较其性能：
- en: '[PRE122]'
  id: totrans-493
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE122]'
- en: 'The output will be:'
  id: totrans-494
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出将如下：
- en: '[PRE123]'
  id: totrans-495
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE123]'
- en: 'Construct another model using all available information and compare the performance:'
  id: totrans-496
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用所有可用信息构建另一个模型并比较其性能：
- en: '[PRE124]'
  id: totrans-497
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE124]'
- en: 'The output will be:'
  id: totrans-498
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出将如下：
- en: '[PRE125]'
  id: totrans-499
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE125]'
- en: 'Activity 13: K-NN Multiclass Classifier'
  id: totrans-500
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '活动 13: K-NN 多分类器'
- en: '**Solution**'
  id: totrans-501
  prefs: []
  type: TYPE_NORMAL
  zh: '**解决方案**'
- en: 'Import the following packages:'
  id: totrans-502
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入以下包：
- en: '[PRE126]'
  id: totrans-503
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE126]'
- en: Load the MNIST data into memory.
  id: totrans-504
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 MNIST 数据加载到内存中。
- en: 'Training images:'
  id: totrans-505
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 训练图像：
- en: '[PRE127]'
  id: totrans-506
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE127]'
- en: 'Training labels:'
  id: totrans-507
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 训练标签：
- en: '[PRE128]'
  id: totrans-508
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE128]'
- en: 'Test images:'
  id: totrans-509
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 测试图像：
- en: '[PRE129]'
  id: totrans-510
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE129]'
- en: 'Test labels:'
  id: totrans-511
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 测试标签：
- en: '[PRE130]'
  id: totrans-512
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE130]'
- en: 'Visualize a sample of the data:'
  id: totrans-513
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 可视化数据样本：
- en: '[PRE131]'
  id: totrans-514
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE131]'
- en: 'The output will be:'
  id: totrans-515
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出将如下：
- en: '![Figure 4.81: Sample images'
  id: totrans-516
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 4.81: 示例图像'
- en: '](img/C12622_04_81.jpg)'
  id: totrans-517
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C12622_04_81.jpg)'
- en: 'Figure 4.81: Sample images'
  id: totrans-518
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: '图 4.81: 示例图像'
- en: 'Construct a K-NN classifier, with three nearest neighbors to classify the MNIST
    dataset. Again, to save processing power, randomly sample 5,000 images for use
    in training:'
  id: totrans-519
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 构建一个 K-NN 分类器，使用三个最近邻来分类 MNIST 数据集。同样，为了节省处理能力，我们随机抽取 5,000 张图像用于训练：
- en: '[PRE132]'
  id: totrans-520
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE132]'
- en: 'In order to provide the image information to the model, we must first flatten
    the data out so that each image is 1 x 784 pixels in shape:'
  id: totrans-521
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了将图像信息提供给模型，我们必须先将数据展平，使得每个图像的形状为 1 x 784 像素：
- en: '[PRE133]'
  id: totrans-522
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE133]'
- en: 'The output will be:'
  id: totrans-523
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出将如下：
- en: '[PRE134]'
  id: totrans-524
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE134]'
- en: 'Build the three-neighbor KNN model and fit the data to the model. Note that,
    in this activity, we are providing 784 features or dimensions to the model, not
    simply 2:'
  id: totrans-525
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 构建三邻近 KNN 模型并将数据拟合到模型中。请注意，在本活动中，我们为模型提供的是 784 个特征或维度，而不仅仅是 2：
- en: '[PRE135]'
  id: totrans-526
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE135]'
- en: 'The output will be:'
  id: totrans-527
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出将如下：
- en: '[PRE136]'
  id: totrans-528
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE136]'
- en: 'Determine the score against the training set:'
  id: totrans-529
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确定与训练集的得分：
- en: '[PRE137]'
  id: totrans-530
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE137]'
- en: 'The output will be:'
  id: totrans-531
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出将如下所示：
- en: '[PRE138]'
  id: totrans-532
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE138]'
- en: 'Display the first two predictions for the model against the training data:'
  id: totrans-533
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 显示模型对训练数据的前两个预测：
- en: '[PRE139]'
  id: totrans-534
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE139]'
- en: 'The output will be as follows:'
  id: totrans-535
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出将如下：
- en: '![Figure 4.82: First predicted values'
  id: totrans-536
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 4.82: 第一个预测值'
- en: '](img/C12622_04_82.jpg)'
  id: totrans-537
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C12622_04_82.jpg)'
- en: 'Figure 4.82: First predicted values'
  id: totrans-538
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: '图 4.82: 第一个预测值'
- en: 'Compare the performance against the test set:'
  id: totrans-539
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 与测试集的表现进行比较：
- en: '[PRE140]'
  id: totrans-540
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE140]'
- en: 'The output will be:'
  id: totrans-541
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出将如下：
- en: '[PRE141]'
  id: totrans-542
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE141]'
- en: 'Chapter 5: Ensemble Modeling'
  id: totrans-543
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '第 5 章: 集成模型'
- en: 'Activity 14: Stacking with Standalone and Ensemble Algorithms'
  id: totrans-544
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '活动 14: 使用独立和集成算法进行堆叠'
- en: '**Solution**'
  id: totrans-545
  prefs: []
  type: TYPE_NORMAL
  zh: '**解决方案**'
- en: 'Import the relevant libraries:'
  id: totrans-546
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入相关库：
- en: '[PRE142]'
  id: totrans-547
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE142]'
- en: 'Read the data and print the first five rows:'
  id: totrans-548
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 读取数据并打印前五行：
- en: '[PRE143]'
  id: totrans-549
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE143]'
- en: 'The output will be as follows:'
  id: totrans-550
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出将如下：
- en: '![Figure 5.19: The first 5 rows'
  id: totrans-551
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 5.19: 前五行'
- en: '](img/C12622_05_19.jpg)'
  id: totrans-552
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C12622_05_19.jpg)'
- en: 'Figure 5.19: The first 5 rows'
  id: totrans-553
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: '图 5.19: 前五行'
- en: Preprocess the dataset to remove null values and one-hot encode categorical
    variables to prepare the data for modeling.
  id: totrans-554
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对数据集进行预处理，移除空值并对类别变量进行独热编码，以准备建模数据。
- en: First, we remove all columns where more than 10% of the values are null. To
    do this, calculate the fraction of missing values by using the `.isnull()` method
    to get a mask DataFrame and apply the `.mean()` method to get the fraction of
    null values in each column. Multiply the result by 100 to get the series as percentage
    values.
  id: totrans-555
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 首先，我们删除所有超过 10% 值为空的列。为此，使用 `.isnull()` 方法计算缺失值的比例，得到一个掩码 DataFrame，并使用 `.mean()`
    方法计算每一列的空值比例。将结果乘以 100，得到百分比形式的系列。
- en: 'Then, find the subset of the series having a percentage value lower than 10
    and save the index (which will give us the column names) as a list. Print the
    list to see the columns we get:'
  id: totrans-556
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 然后，找到该系列中百分比值低于 10 的子集，并将索引（这将给我们列名）保存为列表。打印该列表以查看我们得到的列：
- en: '[PRE144]'
  id: totrans-557
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE144]'
- en: 'The output will be:'
  id: totrans-558
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出将如下：
- en: '![Figure 5.20: Output of preprocessing the dataset'
  id: totrans-559
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 5.20: 数据集预处理的输出'
- en: '](img/C12622_05_20.jpg)'
  id: totrans-560
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C12622_05_20.jpg)'
- en: 'Figure 5.20: Output of preprocessing the dataset'
  id: totrans-561
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: '图 5.20: 数据集预处理的输出'
- en: As the first column is `id`, we will exclude this column as well, since it will
    not add any value to the model.
  id: totrans-562
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 由于第一列是 `id`，我们也将排除这一列，因为它对模型没有任何帮助。
- en: 'We will subset the data to include all columns in the `col` list except the
    first element, which is `id`:'
  id: totrans-563
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们将从数据中提取所有在`col`列表中的列，除了第一个元素`id`：
- en: '[PRE145]'
  id: totrans-564
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE145]'
- en: 'For the categorical variables, we replace null values with a string, `NA`,
    and one-hot encode the columns using pandas'' `.get_dummies()` method, while for
    the numerical variables we will replace the null values with `-1`. Then, we combine
    the numerical and categorical columns to get the final DataFrame:'
  id: totrans-565
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于类别变量，我们用字符串 `NA` 替换空值，并使用 pandas 的 `.get_dummies()` 方法进行独热编码，而对于数值变量，我们将空值替换为
    `-1`。然后，我们将数值列和类别列合并，得到最终的数据框：
- en: '[PRE146]'
  id: totrans-566
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE146]'
- en: Divide the dataset into train and validation DataFrames.
  id: totrans-567
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将数据集划分为训练和验证 DataFrame。
- en: 'We use scikit-learn''s `train_test_split()` method to divide the final DataFrame
    into training and validation sets in the ratio 4:1\. We further split each of
    the two sets into their respective `x` and `y` values to represent the features
    and target variable respectively:'
  id: totrans-568
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们使用 scikit-learn 的 `train_test_split()` 方法将最终的 DataFrame 按 4:1 的比例划分为训练集和验证集。然后，我们将每个数据集进一步拆分为各自的
    `x` 和 `y` 值，分别表示特征和目标变量：
- en: '[PRE147]'
  id: totrans-569
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE147]'
- en: 'Initialize dictionaries in which to store train and validation MAE values.
    We will create two dictionaries, in which we will store the MAE values on the
    train and validation datasets:'
  id: totrans-570
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 初始化字典，用于存储训练和验证的 MAE 值。我们将创建两个字典，用于存储训练和验证数据集上的 MAE 值：
- en: '[PRE148]'
  id: totrans-571
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE148]'
- en: 'Train a decision tree model and save the scores. We will use scikit-learn''s
    `DecisionTreeRegressor` class to train a regression model using a single decision
    tree:'
  id: totrans-572
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 训练一个决策树模型并保存分数。我们将使用 scikit-learn 的 `DecisionTreeRegressor` 类来训练一个回归模型，使用单棵决策树：
- en: '[PRE149]'
  id: totrans-573
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE149]'
- en: 'Train a k-nearest neighbors model and save the scores. We will use scikit-learn''s
    `kNeighborsRegressor` class to train a regression model with *k=5*:'
  id: totrans-574
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 训练一个 k 最近邻模型并保存分数。我们将使用 scikit-learn 的 `kNeighborsRegressor` 类来训练一个回归模型，*k=5*：
- en: '[PRE150]'
  id: totrans-575
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE150]'
- en: 'Train a Random Forest model and save the scores. We will use scikit-learn''s
    `RandomForestRegressor` class to train a regression model using bagging:'
  id: totrans-576
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 训练一个随机森林模型并保存分数。我们将使用 scikit-learn 的 `RandomForestRegressor` 类来训练一个回归模型，采用自助法（bagging）：
- en: '[PRE151]'
  id: totrans-577
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE151]'
- en: 'Train a gradient boosting model and save the scores. We will use scikit-learn''s
    `GradientBoostingRegressor` class to train a boosted regression model:'
  id: totrans-578
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 训练一个梯度提升模型并保存分数。我们将使用 scikit-learn 的 `GradientBoostingRegressor` 类来训练一个增强回归模型：
- en: '[PRE152]'
  id: totrans-579
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE152]'
- en: Prepare the training and validation datasets with the four meta estimators having
    the same hyperparameters that were used in the previous steps. We will create
    a `num_base_predictors` variable that represents the number of base estimators
    we have in the stacked model to help calculate the shape of the datasets for training
    and validation. This step can be coded almost identically to the exercise in the
    chapter, with a different number (and type) of base estimators.
  id: totrans-580
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用在之前步骤中使用的相同超参数准备训练和验证数据集，其中包含四个元估计器。我们将创建一个 `num_base_predictors` 变量，表示堆叠模型中基估计器的数量，以帮助计算训练和验证数据集的形状。这个步骤几乎可以像本章的练习一样编写代码，只不过基估计器的数量（和类型）不同。
- en: 'First, we create a new training set with additional columns for predictions
    from base predictors, in the same way as was done previously:'
  id: totrans-581
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们创建一个新的训练集，增加来自基估计器的预测列，方法与之前相同：
- en: '[PRE153]'
  id: totrans-582
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE153]'
- en: 'Then, we train the base models using the k-fold strategy. We save the predictions
    in each iteration in a list, and iterate over the list to assign the predictions
    to the columns in that fold:'
  id: totrans-583
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 然后，我们使用 k 折交叉验证策略训练基模型。在每次迭代中，我们将预测值保存在列表中，并遍历列表，将预测值分配到该折中的列：
- en: '[PRE154]'
  id: totrans-584
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE154]'
- en: 'After that, we create a new validation set with additional columns for predictions
    from base predictors:'
  id: totrans-585
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 之后，我们创建一个新的验证集，增加来自基估计器的预测列：
- en: '[PRE155]'
  id: totrans-586
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE155]'
- en: 'Lastly, we fit the base models on the complete training set to get meta features
    for the validation set:'
  id: totrans-587
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，我们在完整的训练集上拟合基模型，以获取验证集的元特征：
- en: '[PRE156]'
  id: totrans-588
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE156]'
- en: 'Train a linear regression model as the stacked model. To train the stacked
    model, we train the logistic regression model on all the columns of the training
    dataset, plus the meta predictions from the base estimators. We then use the final
    predictions to calculate the MAE values, which we store in the same `train_mae_values`
    and `val_mae_values` dictionaries:'
  id: totrans-589
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 训练一个线性回归模型作为堆叠模型。为了训练堆叠模型，我们在训练数据集的所有列上训练逻辑回归模型，外加基估计器的元预测。然后，我们使用最终预测值来计算 MAE
    值，并将其存储在相同的 `train_mae_values` 和 `val_mae_values` 字典中：
- en: '[PRE157]'
  id: totrans-590
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE157]'
- en: 'Visualize the train and validation errors for each individual model and the
    stacked model. Then, we will convert the dictionaries into two series and combine
    them to form two columns of a Pandas DataFrame:'
  id: totrans-591
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 可视化每个独立模型和堆叠模型的训练和验证误差。然后，我们将字典转换为两个系列，并将它们组合成一个 Pandas DataFrame 的两列：
- en: '[PRE158]'
  id: totrans-592
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE158]'
- en: 'The output will be as follows:'
  id: totrans-593
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出将如下所示：
- en: '![Figure 5.21: The train and validation errors for each individual model and
    the stacked model'
  id: totrans-594
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 5.21：每个独立模型和堆叠模型的训练和验证误差'
- en: '](img/C12622_05_21.jpg)'
  id: totrans-595
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C12622_05_21.jpg)'
- en: 'Figure 5.21: The train and validation errors for each individual model and
    the stacked model'
  id: totrans-596
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 5.21：每个独立模型和堆叠模型的训练和验证误差
- en: 'We then plot a bar chart from this DataFrame to visualize the MAE values for
    the train and validation sets using each model:'
  id: totrans-597
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，我们从这个 DataFrame 绘制条形图，使用每个模型可视化训练集和验证集的 MAE 值：
- en: '[PRE159]'
  id: totrans-598
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE159]'
- en: 'The output will be as follows:'
  id: totrans-599
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出将如下所示：
- en: '![Figure 5.22: Bar chart visualizing the MAE values'
  id: totrans-600
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 5.22：可视化 MAE 值的条形图'
- en: '](img/C12622_05_22.jpg)'
  id: totrans-601
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/C12622_05_22.jpg)'
- en: 'Figure 5.22: Bar chart visualizing the MAE values'
  id: totrans-602
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 5.22：可视化 MAE 值的条形图
- en: As we can see in the plot, the linear regression stacked model has the lowest
    value of mean absolute error on both training and validation datasets, even compared
    to the other ensemble models (Random Forest and gradient boosted regressor).
  id: totrans-603
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在图中所看到的，线性回归堆叠模型在训练和验证数据集上都具有最低的平均绝对误差值，甚至低于其他集成模型（随机森林和梯度增强回归器）。
- en: 'Chapter 6: Model Evaluation'
  id: totrans-604
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第 6 章：模型评估
- en: 'Activity 15: Final Test Project'
  id: totrans-605
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 活动 15：最终测试项目
- en: '**Solution**'
  id: totrans-606
  prefs: []
  type: TYPE_NORMAL
  zh: '**解决方案**'
- en: 'Import the relevant libraries:'
  id: totrans-607
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入相关的库：
- en: '[PRE160]'
  id: totrans-608
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE160]'
- en: 'Read the `attrition_train.csv` dataset. Read the CSV file into a DataFrame
    and print the `.info()` of the DataFrame:'
  id: totrans-609
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 读取 `attrition_train.csv` 数据集。将 CSV 文件读取到 DataFrame 中，并打印 DataFrame 的 `.info()`：
- en: '[PRE161]'
  id: totrans-610
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE161]'
- en: 'The output will be as follows:'
  id: totrans-611
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出将如下所示：
- en: '![Figure 6.33: Output of info()'
  id: totrans-612
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 6.33：info() 输出'
- en: '](img/C12622_06_33.jpg)'
  id: totrans-613
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C12622_06_33.jpg)'
- en: 'Figure 6.33: Output of info()'
  id: totrans-614
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 6.33：info() 输出
- en: 'Read the JSON file with the details of the categorical variables. The JSON
    file contains a dictionary, where the keys are the column names of the categorical
    features and the corresponding values are the list of categories in the feature.
    This file will help us one-hot encode the categorical features into numerical
    features. Use the `json` library to load the file object into a dictionary, and
    print the dictionary:'
  id: totrans-615
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 读取包含分类变量详情的 JSON 文件。该 JSON 文件包含一个字典，字典的键是分类特征的列名，值是该特征的类别列表。这个文件将帮助我们将分类特征进行独热编码，转换为数值特征。使用
    `json` 库加载文件对象到字典中，并打印该字典：
- en: '[PRE162]'
  id: totrans-616
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE162]'
- en: 'The output will be as follows:'
  id: totrans-617
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出将如下所示：
- en: '![Figure 6.34: The JSON file'
  id: totrans-618
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 6.34：JSON 文件'
- en: '](img/C12622_06_34.jpg)'
  id: totrans-619
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C12622_06_34.jpg)'
- en: 'Figure 6.34: The JSON file'
  id: totrans-620
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 6.34：JSON 文件
- en: 'Process the dataset to convert all features to numerical values. First, find
    the number of columns that will stay in their original form (that is, numerical
    features) and that need to be one-hot encoded (that is, the categorical features).
    `data.shape[1]` gives us the number of columns in `data`, and we subtract `len(cat_values_dict)`
    from it to get the number of numerical columns. To find the number of categorical
    columns, we simply count the total number of categories across all categorical
    variables from the `cat_values_dict` dictionary:'
  id: totrans-621
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 处理数据集，将所有特征转换为数值。首先，找出那些保持原始形式的列（即数值特征）和需要进行独热编码的列（即分类特征）。`data.shape[1]` 给我们提供了
    `data` 的列数，我们从中减去 `len(cat_values_dict)`，就能得到数值列的数量。要找出分类列的数量，我们只需从 `cat_values_dict`
    字典中统计所有分类变量的类别总数：
- en: '[PRE163]'
  id: totrans-622
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE163]'
- en: 'The output will be:'
  id: totrans-623
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出将是：
- en: '[PRE164]'
  id: totrans-624
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE164]'
- en: 'Create a NumPy array of zeros as a placeholder, with a shape equal to the total
    number of columns, as determined previously, minus one (because the `Attrition`
    target variable is also included here). For the numerical columns, we then create
    a mask that selects the numerical columns from the DataFrame and assigns them
    to the first `num_orig_cols-1` columns in the array, `X`:'
  id: totrans-625
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 创建一个全零的 NumPy 数组作为占位符，其形状等于先前确定的总列数减去 1（因为 `Attrition` 目标变量也包含在内）。对于数值列，我们接着创建一个掩码，从
    DataFrame 中选择数值列，并将它们赋值给数组 `X` 中的前 `num_orig_cols-1` 列：
- en: '[PRE165]'
  id: totrans-626
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE165]'
- en: 'Next, we initialize the `OneHotEncoder` class from scikit-learn with a list
    containing the list of values in each categorical column. Then, we transform the
    categorical columns to one-hot encoded columns and assign them to the remaining
    columns in `X`, and save the values of the target variable in the `y` variable:'
  id: totrans-627
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 接下来，我们从 scikit-learn 初始化 `OneHotEncoder` 类，传入一个包含每个分类列的值列表的列表。然后，我们将分类列转换为独热编码列，并将它们赋值给
    `X` 中剩余的列，并将目标变量的值保存在 `y` 变量中：
- en: '[PRE166]'
  id: totrans-628
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE166]'
- en: 'The output will be:'
  id: totrans-629
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出将是：
- en: '[PRE167]'
  id: totrans-630
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE167]'
- en: 'Choose a base model and define the range of hyperparameter values corresponding
    to the model to be searched over for hyperparameter tuning. Let''s use a gradient
    boosted classifier as our model. We then define ranges of values for all hyperparameters
    we want to tune in the form of a dictionary:'
  id: totrans-631
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择一个基础模型，并定义要在超参数调优时搜索的超参数值范围。我们选择使用梯度增强分类器作为模型。然后，我们定义一个字典形式的所有超参数的值范围，以便进行调优：
- en: '[PRE168]'
  id: totrans-632
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE168]'
- en: 'Define the parameters with which to initialize the `RandomizedSearchCV` object
    and use K-fold cross-validation to find the best model hyperparameters. Define
    the parameters required for random search, including `cv` as `5`, indicating that
    the hyperparameters should be chosen by evaluating the performance using 5-fold
    cross-validation. Then, initialize the `RandomizedSearchCV` object and use the
    `.fit()` method to begin the optimization:'
  id: totrans-633
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义初始化`RandomizedSearchCV`对象的参数，并使用K折交叉验证来寻找最佳模型超参数。定义随机搜索所需的参数，包括`cv`为`5`，表示通过5折交叉验证来选择超参数。然后，初始化`RandomizedSearchCV`对象并使用`.fit()`方法开始优化：
- en: '[PRE169]'
  id: totrans-634
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE169]'
- en: 'The output will be as follows:'
  id: totrans-635
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出将如下所示：
- en: '![Figure 6.35: Output of the optimization process'
  id: totrans-636
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 6.35：优化过程的输出'
- en: '](img/C12622_06_35.jpg)'
  id: totrans-637
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C12622_06_35.jpg)'
- en: 'Figure 6.35: Output of the optimization process'
  id: totrans-638
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 6.35：优化过程的输出
- en: 'Once the tuning is complete, find the position (iteration number) at which
    the highest mean test score was obtained. Find the corresponding hyperparameters
    and save them to a dictionary:'
  id: totrans-639
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 一旦调优完成，找到获得最高均值测试分数的位置（迭代次数）。找出相应的超参数并将其保存到字典中：
- en: '[PRE170]'
  id: totrans-640
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE170]'
- en: 'The output will be:'
  id: totrans-641
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出将如下所示：
- en: '![Figure 6.36: The hyperparameters dictionary'
  id: totrans-642
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 6.36：超参数字典'
- en: '](img/C12622_06_36.jpg)'
  id: totrans-643
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C12622_06_36.jpg)'
- en: 'Figure 6.36: The hyperparameters dictionary'
  id: totrans-644
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 6.36：超参数字典
- en: 'Split the dataset into training and validation sets and train a new model using
    the final hyperparameters on the training dataset. Use scikit-learn''s `train_test_split()`
    method to split `X` and `y` into train and test components, with test comprising
    15% of the dataset:'
  id: totrans-645
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将数据集拆分为训练集和验证集，并使用最终超参数在训练数据集上训练一个新模型。使用scikit-learn的`train_test_split()`方法将`X`和`y`拆分为训练集和测试集，其中测试集占数据集的15%：
- en: '[PRE171]'
  id: totrans-646
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE171]'
- en: 'The output will be:'
  id: totrans-647
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出将如下所示：
- en: '[PRE172]'
  id: totrans-648
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE172]'
- en: 'Train the gradient boosted classification model using the final hyperparameters
    and make predictions on the training and validation sets. Also calculate the probability
    on the validation set:'
  id: totrans-649
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用最终超参数训练梯度提升分类模型，并对训练集和验证集进行预测。还计算验证集上的概率：
- en: '[PRE173]'
  id: totrans-650
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE173]'
- en: 'Calculate the accuracy, precision, and recall for predictions on the validation
    set, and print the confusion matrix:'
  id: totrans-651
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 计算验证集上的准确度、精度和召回率，并打印混淆矩阵：
- en: '[PRE174]'
  id: totrans-652
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE174]'
- en: 'The output will be as follows:'
  id: totrans-653
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出将如下所示：
- en: '![Figure 6.37: Accuracy, precision, recall, and the confusion matrix'
  id: totrans-654
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 6.37：准确度、精度、召回率和混淆矩阵'
- en: '](img/C12622_06_37.jpg)'
  id: totrans-655
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C12622_06_37.jpg)'
- en: 'Figure 6.37: Accuracy, precision, recall, and the confusion matrix'
  id: totrans-656
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 6.37：准确度、精度、召回率和混淆矩阵
- en: Experiment with varying thresholds to find the optimal point with high recall.
  id: totrans-657
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 尝试不同的阈值以找到最佳的高召回率点。
- en: 'Plot the precision-recall curve:'
  id: totrans-658
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 绘制精度-召回曲线：
- en: '[PRE175]'
  id: totrans-659
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE175]'
- en: 'The output will be as follows:'
  id: totrans-660
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出将如下所示：
- en: '![Figure 6.38: The precision-recall curve'
  id: totrans-661
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 6.38：精度-召回曲线'
- en: '](img/C12622_06_38.jpg)'
  id: totrans-662
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C12622_06_38.jpg)'
- en: 'Figure 6.38: The precision-recall curve'
  id: totrans-663
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 6.38：精度-召回曲线
- en: 'Plot the variation in precision and recall with increasing threshold values:'
  id: totrans-664
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 绘制精度和召回率随着阈值增加的变化：
- en: '[PRE176]'
  id: totrans-665
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE176]'
- en: 'The output will be as follows:'
  id: totrans-666
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出将如下所示：
- en: '![Figure 6.39: Variation in precision and recall with increasing threshold
    values'
  id: totrans-667
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 6.39：精度和召回率随着阈值增加的变化'
- en: '](img/C12622_06_39.jpg)'
  id: totrans-668
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C12622_06_39.jpg)'
- en: 'Figure 6.39: Variation in precision and recall with increasing threshold values'
  id: totrans-669
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 6.39：精度和召回率随着阈值增加的变化
- en: 'Finalize a threshold that will be used for predictions on the test dataset.
    Let''s finalize a value, say, 0.3\. This value is entirely dependent on what you
    feel would be optimal based on your exploration in the previous step:'
  id: totrans-670
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确定一个最终的阈值，用于在测试数据集上进行预测。我们确定一个值，例如0.3。这个值完全依赖于你在前一步的探索中认为最优的结果：
- en: '[PRE177]'
  id: totrans-671
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE177]'
- en: 'Read and process the test dataset to convert all features to numerical values.
    This will be done in a manner similar to that in *step 4*, with the only difference
    that we don''t need to account for the target variable column, as the dataset
    does not contain it:'
  id: totrans-672
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 读取并处理测试数据集，将所有特征转换为数值。这将以类似于*步骤 4*的方式进行，唯一的区别是我们不需要考虑目标变量列，因为数据集中不包含它：
- en: '[PRE178]'
  id: totrans-673
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE178]'
- en: 'Predict the final values on the test dataset and save them to a file. Use the
    final threshold value determined in *step 10* to find the classes for each value
    in the training set. Then, write the final predictions to the `final_predictions.csv`
    file:'
  id: totrans-674
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在测试数据集上预测最终值并保存到文件。使用在*步骤 10*中确定的最终阈值来找到训练集中的每个值的类别。然后，将最终预测写入`final_predictions.csv`文件：
- en: '[PRE179]'
  id: totrans-675
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE179]'
- en: 'The output will be a CSV file, as follows:'
  id: totrans-676
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出将是一个 CSV 文件，如下所示：
- en: '![Figure 6.40: The CSV file](img/C12622_06_40.jpg)'
  id: totrans-677
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.40：CSV 文件](img/C12622_06_40.jpg)'
- en: 'Figure 6.40: The CSV file'
  id: totrans-678
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 6.40：CSV 文件
