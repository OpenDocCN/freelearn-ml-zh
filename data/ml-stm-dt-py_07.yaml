- en: '*Chapter 5*: Online Anomaly Detection'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第五章*：在线异常检测'
- en: Anomaly detection is a good starting point for machine learning on streaming
    data. As streaming data delivers a continuous stream of data points, use cases
    of monitoring live solutions are among the first that come to mind.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 异常检测是流数据机器学习的一个良好起点。由于流数据提供连续的数据点流，因此监控实时解决方案的应用案例是首先想到的。
- en: There are many domains in which monitoring is essential. In IT solutions, there
    is generally continuous logging of what happens in the systems, and those logs
    can be analyzed as streaming data.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在许多领域，监控都是至关重要的。在IT解决方案中，系统中的发生情况通常会被持续记录，并且这些日志可以被视为流数据进行分析。
- en: In the **Internet of Things** (**IoT**), sensor data is being collected on sometimes
    a large number of sensors. This data is then analyzed and used in real time.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在**物联网**（**IoT**）中，正在收集大量传感器的传感器数据。然后这些数据被实时分析和使用。
- en: Real-time and online anomaly detection can be of great added value in such use
    cases by finding values that are far from the expected range of measurements,
    or otherwise unexpected. Detecting them on time can have great value.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在此类用例中，实时和在线异常检测可以通过找到远超出预期测量范围或意外值，从而具有极大的附加价值。及时检测它们可以具有很大的价值。
- en: In this chapter, you will first get an in-depth overview of anomaly detection
    and the theoretical considerations to take into account when implementing it.
    You will then see how to implement online anomaly detection using the River package
    in Python.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你将首先深入了解异常检测及其在实施时需要考虑的理论问题。然后，你将看到如何使用Python中的River包实现在线异常检测。
- en: 'This chapter covers the following topics:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 本章涵盖了以下主题：
- en: Defining anomaly detection
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定义异常检测
- en: Use cases of anomaly detection
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 异常检测的应用案例
- en: Comparing anomaly detection and imbalanced classification
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 比较异常检测和不平衡分类
- en: Algorithms for detecting anomalies in River
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: River中检测异常的算法
- en: Going further with anomaly detection
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 进一步探讨异常检测
- en: Technical requirements
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'You can find all the code for this book on GitHub at the following link: [https://github.com/PacktPublishing/Machine-Learning-for-Streaming-Data-with-Python](https://github.com/PacktPublishing/Machine-Learning-for-Streaming-Data-with-Python).
    If you are not yet familiar with Git and GitHub, the easiest way to download the
    notebooks and code samples is the following:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在以下链接的GitHub上找到本书的所有代码：[https://github.com/PacktPublishing/Machine-Learning-for-Streaming-Data-with-Python](https://github.com/PacktPublishing/Machine-Learning-for-Streaming-Data-with-Python)。如果你还不熟悉Git和GitHub，下载笔记本和代码示例的最简单方法是以下：
- en: Go to the link of the repository.
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往存储库的链接。
- en: Go to the green **Code** button.
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击绿色的**代码**按钮。
- en: Select **Download ZIP**.
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**下载ZIP**。
- en: When you download the ZIP file, unzip it in your local environment, and you
    will be able to access the code through your preferred Python editor.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 当你下载ZIP文件时，在你的本地环境中解压它，你将能够通过你偏好的Python编辑器访问代码。
- en: Python environment
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Python环境
- en: To follow along with this book, you can download the code in the repository
    and execute it using your preferred Python editor.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 要跟随本书，你可以下载存储库中的代码，并使用你偏好的Python编辑器执行它。
- en: If you are not yet familiar with Python environments, I would advise you to
    check out Anaconda ([https://www.anaconda.com/products/individual](https://www.anaconda.com/products/individual)),
    which comes with Jupyter Notebooks and JupyterLabs, which are both great for executing
    notebooks. It also comes with Spyder and VSCode for editing scripts and programs.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你还不熟悉Python环境，我建议你查看Anaconda（[https://www.anaconda.com/products/individual](https://www.anaconda.com/products/individual)），它包含了Jupyter
    Notebooks和JupyterLabs，这两个都是执行笔记本的绝佳选择。它还包含了Spyder和VSCode，用于编辑脚本和程序。
- en: If you have difficulty installing Python or the associated programs on your
    machine, you can check out Google Colab ([https://colab.research.google.com/](https://colab.research.google.com/))
    or Kaggle Notebooks ([https://www.kaggle.com/code](https://www.kaggle.com/code)),
    which both allow you to run Python code in online notebooks for free, without
    any setup to do.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你安装Python或相关程序时遇到困难，你可以查看Google Colab（[https://colab.research.google.com/](https://colab.research.google.com/)）或Kaggle
    Notebooks（[https://www.kaggle.com/code](https://www.kaggle.com/code)），这两个都允许你在在线笔记本中免费运行Python代码，无需任何设置。
- en: Defining anomaly detection
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 定义异常检测
- en: Let's start by creating an understanding of what **anomaly detection** is. Also
    called outlier detection, anomaly detection is the process of identifying rare
    observations in a dataset. Those rare observations are called **outliers** or
    **anomalies**.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们先来理解一下什么是**异常检测**。也称为离群值检测，异常检测是识别数据集中罕见观测值的过程。这些罕见的观测值被称为**离群值**或**异常值**。
- en: The goal of anomaly detection is to build models that can automatically detect
    outliers using statistical methods and/or machine learning. Such models can use
    multiple variables to see whether an observation should be considered an outlier
    or not.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 异常检测的目标是构建模型，这些模型可以使用统计方法或机器学习自动检测离群值。这样的模型可以使用多个变量来判断一个观测值是否应该被视为离群值。
- en: Are outliers a problem?
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 离群值是问题吗？
- en: 'Outliers occur in many datasets. After all, if you consider a variable that
    follows a normal distribution, it is normal to see data points far away from the
    mean. Let''s consider a standard normal distribution (a normal distribution with
    mean `0` and standard deviation `1`):'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 离群值在许多数据集中都会出现。毕竟，如果你考虑一个遵循正态分布的变量，看到远离均值的数值是正常的。让我们考虑一个标准正态分布（均值为 `0`，标准差为
    `1`）：
- en: Code Block 5-1
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块 5-1
- en: '[PRE0]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[PRE1]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[PRE2]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[PRE3]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[PRE4]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'You can see the resulting figure as follows:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以看到以下结果图：
- en: '![Figure 5.1 – The normal distribution'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 5.1 – 正态分布'
- en: '](img/B18335_05_1.jpg)'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B18335_05_1.jpg)'
- en: Figure 5.1 – The normal distribution
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.1 – 正态分布
- en: This standard normal distribution has most of its observations around `0`. However,
    it is normal to observe some observations in the tails of the distribution. If
    you have a variable that really follows this distribution, and your sample size
    is big enough, having some observations far away from the center cannot really
    be considered something bad.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 这个标准正态分布的大多数观测值都围绕 `0`。然而，在分布的尾部观察到一些观测值是正常的。如果你有一个真正遵循这个分布的变量，并且你的样本量足够大，那么有一些远离中心的观测值并不能真正被认为是坏事。
- en: 'In the following code, you see how a sample of 10 million observations is drawn
    from a standard normal distribution:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的代码中，你可以看到从标准正态分布中抽取了 1000 万个观测值的样本：
- en: Code Block 5-2
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块 5-2
- en: '[PRE5]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '[PRE6]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '[PRE7]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '[PRE8]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'The data follows the normal curve quite well. You can see this in the following
    graph:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 数据很好地遵循正态曲线。你可以在以下图表中看到这一点：
- en: '![Figure 5.2 – The normal distribution histogram'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 5.2 – 正态分布直方图'
- en: '](img/B18335_05_2.jpg)'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B18335_05_2.jpg)'
- en: Figure 5.2 – The normal distribution histogram
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.2 – 正态分布直方图
- en: 'Now, let''s see what the highest and lowest values of this sample are by using
    the following code:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们使用以下代码查看这个样本的最高值和最低值：
- en: Code Block 5-3
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块 5-3
- en: '[PRE9]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: In the current draw, a minimum of `5.11` and a maximum of `5.12` were observed.
    Now, are those outliers or not? The answer is complicated. Of course, the two
    values are perfectly within the range of the normal distribution. On the other
    hand, they are extreme values.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在当前抽取中，观察到了最小值 `5.11` 和最大值 `5.12`。现在，这些是离群值吗？答案是复杂的。当然，这两个值完全在正态分布的范围内。另一方面，它们是极端值。
- en: This example illustrates that defining an outlier is not always easy, and needs
    careful consideration for your specific use case. We will now see a number of
    use cases of anomaly detection.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 这个例子说明了定义离群值并不总是容易的，需要仔细考虑你的特定用例。我们现在将看到一些异常检测的应用案例。
- en: Exploring use cases of anomaly detection
  id: totrans-53
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索异常检测的应用案例
- en: Before moving on to some specific algorithms for anomaly detection, let's first
    consider some use cases that are often done with anomaly detection.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在介绍一些特定的异常检测算法之前，让我们首先考虑一些经常与异常检测一起使用的用例。
- en: Fraud detection in financial institutions
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 金融机构的欺诈检测
- en: A very common use case for anomaly detection is the detection of fraud in financial
    institutions. Banks generally have a lot of data, as almost everyone has one or
    more bank accounts that are used on a regular basis. All these usages generate
    a huge amount of data that can help banks to improve their services and their
    profits. Fraud detection is a key component of data science applications in banks,
    together with many other use cases.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 异常检测的一个非常常见的用例是在金融机构中检测欺诈。银行通常拥有大量数据，因为几乎每个人都有一个或多个定期使用的银行账户。所有这些使用都产生了大量可以帮助银行改善其服务和利润的数据。欺诈检测是银行数据科学应用的关键组成部分，与其他许多用例一起。
- en: A common use case for fraud detection is to automatically detect credit card
    fraud. Imagine that your card or card details have been stolen and someone is
    fraudulently using them. This leads to fraudulent transactions, which could be
    automatically detected by a machine learning algorithm. The bank could then automatically
    block your card and ask you to validate whether it was you, or someone fraudulently
    making these payments.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 欺诈检测的一个常见用例是自动检测信用卡欺诈。想象一下，您的卡或卡信息被盗，有人正在欺诈性地使用它们。这会导致欺诈交易，这些交易可以通过机器学习算法自动检测。然后银行可以自动阻止您的卡，并要求您验证是否是您本人，或者是有人在欺诈性地进行这些支付。
- en: This is both in the interest of the bank and of the user, so it is a great use
    case for anomaly detection. Other companies that work with credit card and payment
    data may also use these methods.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 这既符合银行的利益，也符合用户的利益，因此是异常检测的一个很好的用例。其他处理信用卡和支付数据的公司也可能使用这些方法。
- en: Streaming models are great for fraud detection. There is generally a huge amount
    of data that comes in in a continuous stream of payments and other data. Streaming
    models allow you to take action directly when a fraud situation occurs, rather
    than waiting for the next batch to be launched.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 流模型非常适合欺诈检测。通常会有大量的数据以连续的支付和其他数据流的形式进入。流模型允许您在欺诈情况发生时直接采取行动，而不是等待下一批数据被启动。
- en: 'If you want to read more about fraud detection in financial institutions, you
    can check out the following links:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想了解更多关于金融机构欺诈检测的信息，您可以查看以下链接：
- en: '[https://www.miteksystems.com/blog/how-does-machine-learning-help-with-fraud-detection-in-banks](https://www.miteksystems.com/blog/how-does-machine-learning-help-with-fraud-detection-in-banks)'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://www.miteksystems.com/blog/how-does-machine-learning-help-with-fraud-detection-in-banks](https://www.miteksystems.com/blog/how-does-machine-learning-help-with-fraud-detection-in-banks)'
- en: '[https://www.sas.com/en_us/software/detection-investigation-for-banking.html](https://www.sas.com/en_us/software/detection-investigation-for-banking.html)'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://www.sas.com/en_us/software/detection-investigation-for-banking.html](https://www.sas.com/en_us/software/detection-investigation-for-banking.html)'
- en: Anomaly detection on your log data
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 日志数据中的异常检测
- en: A second use case for anomaly detection is log analysis. Many software applications
    generate huge amounts of logs containing all types of information on the execution
    of programs. These logs are often stored temporarily or long-term for further
    analysis. In some cases, these analyses may be manual searches of specific information
    about what happened at some point in software, but at other times they may be
    automated log treatment programs.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 异常检测的第二个用例是日志分析。许多软件应用程序会生成包含程序执行的各种信息的巨大日志。这些日志通常被临时或长期存储以供进一步分析。在某些情况下，这些分析可能是对软件在某个时间点发生的事件的特定信息的手动搜索，但在其他时候，它们可能是自动日志处理程序。
- en: One of the difficulties with anomaly detection in logs is that log data is generally
    very unstructured. Often, they are just a bunch of printed statements one after
    the other in a text file. It is very hard to make sense of this data.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 在日志数据中执行异常检测的一个困难是，日志数据通常非常无结构。通常，它们只是文本文件中依次打印的一堆语句。很难理解这些数据。
- en: If you succeed in the challenge of structuring and categorizing your log data
    correctly, you can then use machine learning techniques to automatically detect
    problems with the execution of your software. This allows you to take action straight
    away.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您成功地完成了正确结构化和分类日志数据的挑战，那么您就可以使用机器学习技术来自动检测软件执行中的问题。这允许您立即采取行动。
- en: Using streaming analysis rather than batch analysis is important here as well.
    Some software is mission-critical, and downtime often means problems for the company.
    These can be different types of problems, including contractual problems and loss
    of revenue. If a company can automatically detect bugs, this allows them to move
    fast and quickly repair the problems. The faster a problem is repaired, the fewer
    problems for the company.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，使用流分析而不是批量分析同样重要。某些软件是关键任务，而停机通常意味着公司会遇到问题。这些问题可能包括合同问题和收入损失。如果一家公司能够自动检测到错误，这将使他们能够快速修复问题。问题修复得越快，公司遇到的问题就越少。
- en: 'For deeper use case literature on anomaly detection on log data, you can have
    a look at the following links:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 对于关于日志数据异常检测的更深入用例文献，您可以查看以下链接：
- en: '[https://www.zebrium.com/blog/using-machine-learning-to-detect-anomalies-in-logs](https://www.zebrium.com/blog/using-machine-learning-to-detect-anomalies-in-logs)'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://www.zebrium.com/blog/using-machine-learning-to-detect-anomalies-in-logs](https://www.zebrium.com/blog/using-machine-learning-to-detect-anomalies-in-logs)'
- en: '[https://arxiv.org/abs/2202.04301](https://arxiv.org/abs/2202.04301)'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://arxiv.org/abs/2202.04301](https://arxiv.org/abs/2202.04301)'
- en: Fault detection in manufacturing and production lines
  id: totrans-71
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 制造和生产线的故障检测
- en: An example of fault detection in production lines is the business of industrial
    food production. Many production lines are almost fully automated, meaning that
    there is almost no human intervention between the input of raw products and the
    output of finalized products. The risk of this is that defects might be occurring
    that cannot be accepted as final products.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 生产线故障检测的一个例子是工业食品生产业务。许多生产线几乎是完全自动化的，这意味着从原料输入到最终产品输出的过程中几乎没有人工干预。这种风险是可能会发生无法接受为最终产品的缺陷。
- en: The use of sensor data on production lines can strongly help in detecting anomalies
    in production. When a production line has some parameters that go wrong, sensors,
    in combination with streaming systems and real-time alerting systems, can allow
    you to stop the production of faulty products immediately. This can save a lot
    of money, as producing waste is very costly.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在生产线上使用传感器数据可以极大地帮助检测生产中的异常。当生产线有一些参数出错时，传感器与流式系统和实时警报系统的结合可以让你立即停止生产有缺陷的产品。这可以节省大量资金，因为生产废品成本很高。
- en: Using streaming and real-time analytics here is also important. The longer you
    take to respond to a problem, the more waste you produce and the more money is
    lost. There is a huge return on investment to gain from implementing real-time
    and streaming analytics systems in manufacturing and production lines.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里使用流式和实时分析也非常重要。你响应问题的时间越长，产生的浪费就越多，损失的钱也就越多。在制造和生产线上实施实时和流式分析系统可以获得巨大的投资回报。
- en: 'The following links will allow you to learn more about this use case:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 以下链接将帮助您了解更多关于此用例的信息：
- en: https://www.scienced irect.com/science/article/pii/S2212827119301908
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: https://www.sciencedirect.com/science/article/pii/S2212827119301908
- en: '[https://www.merl.com/publications/docs/TR2018-097.pdf](https://www.merl.com/publications/docs/TR2018-097.pdf)'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://www.merl.com/publications/docs/TR2018-097.pdf](https://www.merl.com/publications/docs/TR2018-097.pdf)'
- en: Hacking detection in computer networks (cyber security)
  id: totrans-78
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 计算机网络中的黑客检测（网络安全）
- en: Automated threat detection for cyber security is another great use case of anomaly
    detection. Just like the other use cases, positive occurrences are very rare compared
    to negative cases. The importance of those positive cases, however, is far more
    impactful than the negative ones.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 网络安全的自动威胁检测是异常检测的另一个很好的用例。与其他用例一样，正面事件与负面事件相比非常罕见。然而，这些正面案例的重要性远远超过负面案例。
- en: With recent developments, there is a much higher impact of cyber security problems
    and leaks for companies than before. Personal data can be sold for a large amount
    of money and hackers often try to steal this information thinking that they can
    remain anonymous behind their computers.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 与以前相比，网络安全问题和泄露对公司的影响要大得多。个人数据可以卖得高价，黑客经常试图窃取这些信息，认为他们可以在电脑背后保持匿名。
- en: Threat and anomaly detection systems are automated systems using machine learning
    to detect behavior that is not normal and that may represent intrusions. If companies
    can react quickly to such events happening, they can avoid large public shaming
    campaigns and potential lawsuits costing lots of money.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 威胁和异常检测系统是使用机器学习来检测非正常行为和可能代表入侵的自动化系统。如果公司能够快速应对此类事件，他们可以避免大型公开羞辱运动和可能花费大量金钱的潜在诉讼。
- en: Streaming and real-time systems are crucial here as well, as leaving as little
    time as possible for intruders to act will strongly reduce the risk of any cyber
    criminality happening in your organization.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 流式和实时系统在这里同样至关重要，因为尽可能减少入侵者行动的时间将大大降低你组织发生任何网络犯罪的风险。
- en: 'The following two articles give a good deep dive into such use cases:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 以下两篇文章对这类用例进行了深入探讨：
- en: '[https://securityboulevard.com/2021/07/what-is-anomaly-detection-in-cybersecurity/](https://securityboulevard.com/2021/07/what-is-anomaly-detection-in-cybersecurity/)'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://securityboulevard.com/2021/07/what-is-anomaly-detection-in-cybersecurity/](https://securityboulevard.com/2021/07/what-is-anomaly-detection-in-cybersecurity/)'
- en: '[https://www.xenonstack.com/insights/cyber-network-security](https://www.xenonstack.com/insights/cyber-network-security)'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://www.xenonstack.com/insights/cyber-network-security](https://www.xenonstack.com/insights/cyber-network-security)'
- en: Medical risks in health data
  id: totrans-86
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 健康数据中的医疗风险
- en: The medical world has seen a large number of inventions over the last years.
    Part of this is in personal tools such as smart watches and other connected health
    devices that allow you to measure your own health KPIs in real time. Other use
    cases can be found in hospitals and other professional health care applications.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 在过去的几年里，医疗界看到了大量的发明。其中一部分是在个人工具，如智能手表和其他连接的健康设备中，这些设备允许你实时测量自己的健康关键绩效指标。其他用例可以在医院和其他专业医疗保健应用中找到。
- en: When anomalies occur in your health KPIs, it is often of utmost importance to
    intervene straight away. Health KPI signals can often occur even before we, as
    humans, start to notice that our health is deteriorating. Even if it is shortly
    after an event happens, the information will be able to get you the right care
    without spending much time looking for resources on the causes of your problem.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 当你的健康关键绩效指标出现异常时，立即干预通常至关重要。健康关键绩效指标信号可能在我们人类开始注意到我们的健康状况恶化之前就已经出现。即使是在事件发生后不久，这些信息也能帮助你获得正确的护理，而无需花费大量时间寻找问题的原因。
- en: In general, most of your health metrics will be good, or at least acceptable,
    until that one metric tells you that something is really going wrong and you need
    help. In such scenarios, it is important to work with streaming analytics rather
    than batch analytics. After all, if the data arrives the next hour or the next
    day, it may well be too late for you. This is another strong argument for using
    streaming analytics rather than batch analytics.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，你的大多数健康指标都会很好，或者至少是可以接受的，直到那个指标告诉你真的出了问题，你需要帮助。在这种情况下，与流式分析而不是批量分析合作很重要。毕竟，如果数据在下个小时或第二天到达，可能对你来说已经太晚了。这也是使用流式分析而不是批量分析的一个强有力的论据。
- en: 'You can read more about this over here:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在这里了解更多信息：
- en: '[https://medinform.jmir.org/2021/5/e27172/](https://medinform.jmir.org/2021/5/e27172/)'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://medinform.jmir.org/2021/5/e27172/](https://medinform.jmir.org/2021/5/e27172/)'
- en: '[https://arxiv.org/pdf/2012.02364.pdf](https://arxiv.org/pdf/2012.02364.pdf)'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://arxiv.org/pdf/2012.02364.pdf](https://arxiv.org/pdf/2012.02364.pdf)'
- en: Predictive maintenance and sensor data
  id: totrans-93
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 预测性维护和传感器数据
- en: The last use case that will be discussed here is the use case of predictive
    maintenance. Many companies have critical systems that need preventive maintenance;
    if something breaks, this will cost a lot of money or even worse.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 这里将要讨论的最后一个用例是预测性维护的用例。许多公司都有需要预防性维护的关键系统；如果某物损坏，这将会花费大量金钱，甚至更糟。
- en: An example is the aviation industry. If an airplane crashes, this costs a lot
    of lives. Of course, no company can predict all anomalies, but any anomaly that
    could be detected before a crash happens would be a great win.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 以航空业为例。如果飞机坠毁，这会损失许多生命。当然，没有公司能预测所有异常，但任何在坠毁前可以检测到的异常都将是一个巨大的胜利。
- en: Anomaly detections can be used for predictive maintenance in many sectors that
    have comparable problems; if you can predict that your critical system will fail
    soon, you can have just enough time to do maintenance on the part that needs it
    and avoid larger problems.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 异常检测可用于许多具有相似问题的行业进行预测性维护；如果你能预测你的关键系统即将失效，你就有足够的时间对需要维护的部分进行维护，从而避免更大的问题。
- en: Predictive maintenance can sometimes be done in batch, but it can also benefit
    from streaming. It all depends on the amount of time you have between detecting
    an anomaly and the intervention being needed.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 预测性维护有时可以批量进行，但也可以从流式处理中受益。这完全取决于你从检测到异常到需要干预之间的时间量。
- en: If you have a predictive maintenance model that predicts airplane engine failure
    between now and 30 minutes, you have a large need to get this data to your pilot
    as soon as possible. If you have predictive systems that tell you that a part
    needs changing in the coming month, you can probably use batch analytics as well.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你有一个预测性维护模型，可以预测在现在和30分钟内飞机发动机的故障，你需要尽快将此数据提供给飞行员。如果你有预测系统告诉你下个月某个部件需要更换，你可能也可以使用批量分析。
- en: 'To read more about this use case, you can check out the following links:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多关于这个用例的信息，你可以查看以下链接：
- en: '[https://www.knime.com/blog/anomaly-detection-for-predictive-maintenance-EDA](https://www.knime.com/blog/anomaly-detection-for-predictive-maintenance-EDA)'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://www.knime.com/blog/anomaly-detection-for-predictive-maintenance-EDA](https://www.knime.com/blog/anomaly-detection-for-predictive-maintenance-EDA)'
- en: '[https://www.e3s-conferences.org/articles/e3sconf/pdf/2020/30/e3sconf_evf2020_02007.pdf](https://www.e3s-conferences.org/articles/e3sconf/pdf/2020/30/e3sconf_evf2020_02007.pdf)'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://www.e3s-conferences.org/articles/e3sconf/pdf/2020/30/e3sconf_evf2020_02007.pdf](https://www.e3s-conferences.org/articles/e3sconf/pdf/2020/30/e3sconf_evf2020_02007.pdf)'
- en: In the next section, you will see how anomaly detection models compare to imbalanced
    classification.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，您将看到异常检测模型与不平衡分类的比较。
- en: Comparing anomaly detection and imbalanced classification
  id: totrans-103
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 比较异常检测和不平衡分类
- en: 'For detecting positive cases against negative cases, the standard go-to family
    of methods would be classification. For the problems described, as long as you
    have historical data on at least a few positive and negative cases, you can use
    classification algorithms. However, you have a very common problem: there are
    only very few observations that are anomalies. This is a problem that is generally
    known as the problem of **imbalanced data**.'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 对于检测正面案例与负面案例，标准的方法族通常是分类。对于上述问题，只要您至少有一些正面和负面案例的历史数据，您就可以使用分类算法。然而，您面临一个非常普遍的问题：只有非常少的观测值是异常的。这是一个通常被称为不平衡数据问题的难题。
- en: The problem of imbalanced data
  id: totrans-105
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 不平衡数据的问题
- en: 'Imbalanced datasets are datasets in which the target class has very unevenly
    distributed occurrences. An often-occurring example is website sales: among 1,000
    visitors, you often have at least 900 visitors that are just watching and browsing,
    as opposed to maybe 100 who actually buy something.'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 不平衡数据集是指目标类别的发生分布非常不均匀的数据集。一个常见的例子是网站销售：在 1,000 名访问者中，您通常至少有 900 名只是观看和浏览，而可能只有
    100 名真正购买了东西。
- en: Using classification methods carelessly on imbalanced data is prone to errors.
    Imagine that you fit a classification model that needs to predict for each website
    visitor whether they will buy something. If you create a very bad model that only
    predicts non-buying for every visitor, then you will still be right for 900 out
    of the 1,000 visitors and your accuracy metric will be 90%.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 在不平衡数据上不加区分地使用分类方法容易出错。想象一下，您拟合了一个需要预测每位网站访问者是否会购买东西的分类模型。如果您创建了一个非常糟糕的模型，它只预测每个访问者都不会购买，那么您对
    1,000 名访问者中的 900 名的预测仍然是正确的，您的准确率指标将是 90%。
- en: There are a number of standard approaches against this imbalanced data, including
    using the F1 score and using SMOTE oversampling.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多标准方法可以应对这种不平衡数据，包括使用 F1 分数和使用 SMOTE 过采样。
- en: The F1 score
  id: totrans-109
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: F1 分数
- en: The F1 score is a great replacement for the accuracy score in cases of unbalanced
    data. Accuracy is computed as the number of correct predictions divided by the
    total number of predictions made.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: F1 分数是不平衡数据情况下准确率指标的绝佳替代品。准确率是正确预测的数量除以总预测数量。
- en: 'This is the formula for accuracy:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 这是准确率的公式：
- en: '![](img/Formula_05_001.jpg)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![公式图片](img/Formula_05_001.jpg)'
- en: The F1 score, however, takes into account the precision and recall of your model.
    The precision of a model is the percentage of predicted positives that are actually
    correct. The recall of your model shows the percentage of positives that you were
    actually able to detect.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，F1 分数考虑了您模型的精确度和召回率。一个模型的精确度是指预测为正的样本中实际正确的百分比。您模型的召回率显示了您实际上能够检测到的正样本的百分比。
- en: 'This is the formula of precision:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 这是精确率的公式：
- en: '![](img/Formula_05_002.jpg)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![公式图片](img/Formula_05_002.jpg)'
- en: 'This is the formula of recall:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 这是召回率的公式：
- en: '![](img/Formula_05_003.jpg)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
  zh: '![公式图片](img/Formula_05_003.jpg)'
- en: 'The F1 score combines those two into one metric, using the following formula:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: F1 分数将这两个指标结合成一个，使用以下公式：
- en: '![](img/Formula_05_004.jpg)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
  zh: '![公式图片](img/Formula_05_004.jpg)'
- en: Using this metric for evaluation, you will avoid interpreting very bad models
    as good models, especially in the case of imbalanced data.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这个指标进行评估，您将避免将非常糟糕的模型误认为是好的模型，尤其是在不平衡数据的情况下。
- en: SMOTE oversampling
  id: totrans-121
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: SMOTE 过采样
- en: SMOTE oversampling is the second method that you can use for counteracting imbalance
    in your data. It is a method that will create *fake* data points that strongly
    resemble the data points in your positive class. By creating a number of data
    points, your model will be able to learn much better about the positive class,
    and by using the original positives as the source, you guarantee that the newly
    generated data points are not too far off.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: SMOTE过采样是第二种你可以用来对抗数据不平衡的方法。这是一种将创建与你的正类数据点非常相似**虚假**数据点的方法。通过创建一定数量的数据点，你的模型将能够更好地了解正类，并且通过使用原始正类作为来源，你保证新生成数据点不会太偏离。
- en: Anomaly detection versus classification
  id: totrans-123
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 异常检测与分类
- en: Although imbalanced classification problems can sometimes work well for anomaly
    detection problems, there is a reason that anomaly detection is treated as a separate
    category of machine learning.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然不平衡分类问题有时可以很好地用于异常检测问题，但异常检测被视为机器学习的一个独立类别是有原因的。
- en: The main difference is in the importance of understanding what the positive
    (anomaly) class looks like. In classification models, you want a model that is
    easily able to distinguish between two (positives and negatives) or more classes.
    For this to work, you want your model to learn what each class looks like. The
    model will search for variables that describe one class, and for other variables
    or values that describe the other class.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 主要区别在于理解正类（异常）类的外观的重要性。在分类模型中，你希望有一个模型能够轻松地区分两个（正类和负类）或更多类。为了实现这一点，你希望你的模型学会每个类的外观。模型将寻找描述一个类的变量，以及描述另一个类的其他变量或值。
- en: In anomaly detection, you don't really care what the anomaly class looks like.
    What you need much more, is your model to learn what is *normal*. As long as your
    model has a very good understanding of the normal, negative class, it will be
    able to state normal versus abnormal quite well. This can be an anomaly in any
    direction and in any sense of the word. It is not needed for the model to have
    seen such a type of anomaly before, just to know that it is not normal.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 在异常检测中，你并不真正关心异常类看起来像什么。你更需要的是你的模型学会什么是**正常**的。只要你的模型对正常类有很好的理解，它就能很好地判断正常与异常。这可以是任何方向和任何意义上的异常。模型不需要之前见过这种类型的异常，只需要知道它不是正常的。
- en: In the case of a first anomaly, a standard classification model would not know
    what this observation should be classified into. If you're lucky, it could go
    into the anomaly class, but you have no reason to believe it will. However, an
    anomaly detection model that focuses on what it knows versus what it does not
    know would be able to detect this anomaly as something that it has not seen before
    and, therefore, class it as an anomaly.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 在首次出现异常的情况下，标准分类模型不知道这个观察结果应该被分类到哪个类别。如果你很幸运，它可能进入异常类，但你没有理由相信它会。然而，一个专注于已知与未知之间的异常检测模型能够检测出这种异常是它以前没有见过的，因此将其分类为异常。
- en: In the next section, you will see a number of algorithms for anomaly detection
    that are available in Python's River package.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，你将看到Python的River包中可用的许多异常检测算法。
- en: Algorithms for detecting anomalies in River
  id: totrans-129
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: River中检测河流异常的算法
- en: In this chapter, you will again use River for online machine learning algorithms.
    There are other libraries out there, but River is a very promising candidate for
    being the go-to Python package for online learning (except for reinforcement learning).
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你将再次使用River进行在线机器学习算法。虽然还有其他库，但River是成为在线学习（除了强化学习）首选Python包的非常有希望的候选人。
- en: 'You will see two of the online machine learning algorithms for anomaly detection
    that River currently (version 0.9.0) contains, as follows:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 你将看到River当前（版本0.9.0）包含的两个在线机器学习算法，如下所示：
- en: '`OneClassSVM`: An online adaptation of the offline version of One-Class SVM'
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`OneClassSVM`：One-Class SVM离线版本的在线自适应'
- en: '`HalfSpaceTrees`: An online adaptation of Isolation Forests'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`HalfSpaceTrees`：Isolation Forests的在线自适应版本'
- en: You will also see how to work with the constant thresholder and the quantile
    thresholder.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 你还将看到如何使用常量阈值器和分位数阈值器。
- en: The use of thresholders in River anomaly detection
  id: totrans-135
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: River异常检测中阈值器的使用
- en: Let's first look at the use of thresholders, as they will be wrapped around
    the actual anomaly detection algorithms.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们先看看阈值器的使用，因为它们将围绕实际的异常检测算法。
- en: Anomaly detection algorithms will generally return a score between `0` and `1`
    to indicate to the model to what extent the observation is an anomaly. Scores
    closer to `1` are more likely to be an outlier, and scores closer to `0` are considered
    more normal.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 异常检测算法通常会返回一个介于 `0` 和 `1` 之间的分数，以指示模型观察结果异常的程度。分数越接近 `1`，越可能是异常值，而分数越接近 `0`，则被认为更正常。
- en: In practice, you need to decide on a threshold to state for each observation
    whether you expect it to be an outlier. To convert the continuous `0` to `1` scale
    into a yes/no answer, you use a thresholder.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 在实践中，你需要决定一个阈值，以确定每个观察结果是否预期为异常。为了将连续的 `0` 到 `1` 尺度转换为是/否答案，你使用一个阈值器。
- en: Constant thresholder
  id: totrans-139
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 常数阈值器
- en: The constant thresholder is the simplest approach that you would intuitively
    come up with. You will give a constant value that will split observations with
    a continuous (`0` to `1`) anomaly score into yes/no anomalies based on being higher
    or lower than the constant.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 常数阈值器是最直观的方法。你将给出一个常数，将具有连续（`0` 到 `1`）异常分数的观察结果分为是/否异常，根据其是否高于或低于该常数。
- en: As an example, if you specify a value of `0.95` to be your constant threshold,
    every observation with an anomaly higher than that will be considered an anomaly,
    and every data point that is scored lower than that is not considered an anomaly.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果你将 `0.95` 的值指定为你的常数阈值，那么任何异常分数高于该值的观察结果将被视为异常，而任何得分低于该值的数据点则不被视为异常。
- en: Quantile thresholder
  id: totrans-142
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 分位数阈值器
- en: The quantile thresholder is slightly more advanced. Rather than a constant,
    you specify a quantile. You have seen quantiles before in the chapter on descriptive
    statistics. A `0.95` quantile means that 95% of the observations are below this
    value and 5% of the observations are above it.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 分位数阈值器稍微复杂一些。而不是常数，你指定一个分位数。你之前在描述性统计章节中已经见过分位数。`0.95` 的分位数意味着 95% 的观察结果低于此值，而
    5% 的观察结果高于此值。
- en: Imagine that you used a constant threshold of `0.95`, but the model has detected
    no points above `0.95`. In this case, the constant thresholder would split no
    observations at all into the anomaly class. The quantile thresholder of `0.95`
    would still give you exactly 5% of your observations as anomalies.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你使用了 `0.95` 的常数阈值，但模型没有检测到高于 `0.95` 的点。在这种情况下，常数阈值器将不会将任何观察结果分割到异常类别中。`0.95`
    的分位数阈值器仍然会给你提供正好 5% 的观察结果作为异常。
- en: The preferred behavior will depend on your use case, but at least you have the
    two options at the ready for your anomaly detection in River.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 最佳行为将取决于你的用例，但至少你为River中的异常检测准备好了两种选项。
- en: Anomaly detection algorithm 1 – One-Class SVM
  id: totrans-146
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 异常检测算法 1 – 单类SVM
- en: 'Let''s now move on to the first anomaly detection algorithm: One-Class SVM.
    You''ll first see a general overview of how One-Class SVM works for anomaly detection.
    After that, you''ll see how it is adapted for an online context in River and you''ll
    do a Python use case using One-Class SVM in Python.'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们现在转到第一个异常检测算法：单类SVM。你将首先看到单类SVM在异常检测中的一般概述。之后，你将看到它是如何在River的在线环境中进行适配的，你还将使用Python中的单类SVM进行一个Python用例。
- en: General use of One-Class SVM on anomaly detection
  id: totrans-148
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 单类SVM在异常检测中的通用应用
- en: One-Class SVM is an unsupervised outlier detection algorithm based on the **Support
    Vector Machine** (**SVM**) classification algorithm.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 单类SVM是一种基于支持向量机（SVM）分类算法的无监督异常检测算法。
- en: SVMs are commonly used models for classification or other supervised learning.
    In supervised learning, they are known to be great for using the kernel trick,
    which maps the inputs into high-dimensional feature spaces. With this process,
    SVMs are able to generate non-linear classification.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: SVMs是常用的分类或其他监督学习模型。在监督学习中，它们因使用核技巧而闻名，该技巧将输入映射到高维特征空间。通过这个过程，SVMs能够生成非线性分类。
- en: As described earlier, anomaly detection algorithms need to understand what is
    normal, but they don't have to understand the non-normal classes. The One-Class
    SVM is, therefore, an adaptation of the regular SVMs. In regular, supervised SVMs,
    you need to specify the classes (target variable), but in One-Class SVM, you act
    like all the data is in a single class.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，异常检测算法需要理解什么是正常，但它们不需要理解非正常类别。因此，单类SVM是对常规SVM的改进。在常规的监督SVM中，你需要指定类别（目标变量），但在单类SVM中，你将所有数据视为单个类别。
- en: Basically, the One-Class SVM will just fit an SVM in which it tries to fit a
    model that best predicts all of the variables as the same target class. When the
    model fits well, the maximum of individuals will have a low error in their prediction.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 基本上，One-Class SVM 只会拟合一个 SVM，它试图拟合一个模型，该模型最好地预测所有变量作为同一目标类。当模型拟合良好时，个体中预测误差最大的人将会有较低的误差。
- en: Individuals with a high error score for the best-fitting model are difficult
    to predict using the same model as for the other individuals. You could consider
    that they may need another model and, therefore, hypothesize that the individuals
    do not come from the same data-generating process. They may well, therefore, be
    anomalies.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 对于最佳拟合模型的误差分数高的个体，使用与其他个体相同的模型进行预测是困难的。您可以考虑它们可能需要另一个模型，因此假设这些个体不是来自同一数据生成过程。因此，它们很可能是有异常值的。
- en: The error is used as a thresholding score to split individuals. Individuals
    with a high error score can be classified as anomalies and individuals with a
    low error score can be considered normal. This split is generally done with a
    quantile threshold, which was introduced earlier.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 误差被用作阈值分数来分割个体。误差分数高的个体可以被认为是异常值，而误差分数低的个体可以被认为是正常的。这种分割通常使用之前引入的量数阈值来完成。
- en: Online One-Class SVM in River
  id: totrans-155
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: River 中的在线 One-Class SVM
- en: The `OneClassSVM` model in River is described in the documentation as a stochastic
    implementation of the One-Class SVM and it will not, unfortunately, perfectly
    match the offline definition of the algorithm. If it is important for your use
    case to find exact results, you could try out online and offline implementations
    and see how much they differ.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: River 中的 `OneClassSVM` 模型在文档中被描述为 One-Class SVM 的随机实现，并且不幸的是，它不会完美地匹配算法的离线定义。如果对于您的用例来说找到精确的结果很重要，您可以考虑尝试在线和离线实现，并查看它们之间的差异有多大。
- en: In general, outlier detection is an unsupervised task, and it is hard to be
    totally sure about the final answer and precision of your models. This is not
    a problem as long as you monitor results and take KPI selection and tracking of
    your business results seriously.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，异常值检测是一个无监督任务，很难完全确定最终答案和模型的精确度。只要您监控结果并认真对待 KPI 选择和业务结果的跟踪，这并不是一个问题。
- en: Application on a use case
  id: totrans-158
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 用例应用
- en: Let's now apply the online training process of a One-Class SVM using River.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们使用 River 应用 One-Class SVM 的在线训练过程。
- en: 'For this example, let''s create our own dataset so that we can be sure of the
    data that should be considered an outlier or not:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个例子，让我们创建自己的数据集，这样我们就可以确定哪些数据应该被认为是异常值或不是：
- en: 'Let''s create a uniform distribution variable with 1,000 observations between
    `0` and `1`:'
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们创建一个在 `0` 和 `1` 之间有 1,000 个观测值的均匀分布变量：
- en: Code Block 5-4
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块 5-4
- en: '[PRE10]'
  id: totrans-163
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'The histogram of the current run can be prepared as follows, but it will change
    due to randomness:'
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当前运行的直方图可以准备如下，但它会因随机性而改变：
- en: Code Block 5-5
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块 5-5
- en: '[PRE11]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'The resulting plot will show the following histogram:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 结果图将显示以下直方图：
- en: '![Figure 5.3 – Plot of the normal data'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 5.3 – 正常数据的绘图'
- en: '](img/B18335_05_3.jpg)'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B18335_05_3.jpg)'
- en: Figure 5.3 – Plot of the normal data
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.3 – 正常数据的绘图
- en: 'As we know this distribution very well, we know what to expect: any data point
    between `0` and `1` is normal and every data point outside `0` to `1` is an outlier.
    Let''s now add 1% of outliers to the data. Let''s make 0.5% of easy-to-detect
    outliers (random int between `2` and `3` and between `-1` and `-2`), which is
    very far away from our normal distribution. Let''s also make 0.5% of our outliers
    a bit harder to detect (between `0` and `-1` and between `1` and `2`).'
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 由于我们非常了解这个分布，我们知道可以期待什么：任何介于 `0` 和 `1` 之间的数据点是正常的，而任何在 `0` 到 `1` 之外的数据点都是异常值。现在让我们向数据中添加
    1% 的异常值。让我们制作 0.5% 的易于检测的异常值（在 `2` 和 `3` 之间和 `-1` 和 `-2` 之间的随机整数），这非常远离我们的正常分布。让我们也将
    0.5% 的异常值设置得稍微难以检测（在 `0` 和 `-1` 之间和 `1` 和 `2` 之间）。
- en: 'This way we can challenge the model and see how well it performs:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 这样我们就可以挑战模型并查看其表现如何：
- en: Code Block 5-6
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块 5-6
- en: '[PRE12]'
  id: totrans-174
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Let''s put all that data together and write code to deliver it to the model
    in a streaming fashion, as follows:'
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们把所有这些数据放在一起，编写代码以流式传输的方式将其传递给模型，如下所示：
- en: Code Block 5-7
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块 5-7
- en: '[PRE13]'
  id: totrans-177
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Now, the only thing remaining to do is to add the model into the loop:'
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，唯一剩下要做的就是将模型添加到循环中：
- en: Code Block 5-8
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块 5-8
- en: '[PRE14]'
  id: totrans-180
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Here, you can fit the model:'
  id: totrans-181
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在这里，你可以拟合模型：
- en: Code Block 5-9
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块 5-9
- en: '[PRE15]'
  id: totrans-183
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: When running this code, you have now trained an online One-Class SVM on our
    synthetic data points!
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 当运行此代码时，您现在已经在我们的合成数据点上训练了一个在线单类 SVM！
- en: 'Let''s try to get an idea of how well it worked. In this following code, you
    see how to obtain the scores of each individual and the assignment to the classes:'
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们尝试了解它的工作效果。在以下代码中，您可以看到如何获取每个个体的分数以及分配给类别的操作：
- en: Code Block 5-10
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块 5-10
- en: '[PRE16]'
  id: totrans-187
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'As we know the actual result, we can now compare whether the answers were right.
    You can use the following code for that:'
  id: totrans-188
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 正如我们所知，实际结果，我们现在可以比较答案是否正确。您可以使用以下代码来完成此操作：
- en: Code Block 5-11
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块 5-11
- en: '[PRE17]'
  id: totrans-190
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'The results are shown here:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下所示：
- en: '![Figure 5.4 – The results of Code Block 5-11'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 5.4 – 代码块 5-11 的结果'
- en: '](img/B18335_05_4.jpg)'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/B18335_05_4.jpg)'
- en: Figure 5.4 – The results of Code Block 5-11
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.4 – 代码块 5-11 的结果
- en: 'The following code block will compute the value counts of what the algorithm
    has detected:'
  id: totrans-195
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下代码块将计算算法检测到的值的计数：
- en: Code Block 5-12
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块 5-12
- en: '[PRE18]'
  id: totrans-197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'The following figure shows that 22 outliers were detected:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 下图显示检测到了 22 个异常值：
- en: '![Figure 5.5 – The results of Code Block 5-12'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 5.5 – 代码块 5-12 的结果'
- en: '](img/B18335_05_5.jpg)'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/B18335_05_5.jpg)'
- en: Figure 5.5 – The results of Code Block 5-12
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.5 – 代码块 5-12 的结果
- en: 'We should now compute how many of the detected outliers are actual outliers
    and how many are not actual outliers. This is done in the following code block:'
  id: totrans-202
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们现在应该计算检测到的异常值中有多少是真正的异常值，有多少不是真正的异常值。这将在以下代码块中完成：
- en: Code Block 5-13
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块 5-13
- en: '[PRE19]'
  id: totrans-204
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'The result is that out of the 22 detected outliers, 10 are actual outliers,
    but 12 are not actually outliers. This can be seen in the following figure:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 结果是，在检测到的 22 个异常值中，有 10 个是真正的异常值，但 12 个实际上不是异常值。这可以在以下图中看到：
- en: '![Figure 5.6 – The results of Code Block 5-13'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 5.6 – 代码块 5-13 的结果'
- en: '](img/B18335_05_6.jpg)'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/B18335_05_6.jpg)'
- en: Figure 5.6 – The results of Code Block 5-13
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.6 – 代码块 5-13 的结果
- en: 'The obtained result is not too bad: at least some of the outliers were detected
    correctly, and this could be a good minimum viable product to start automating
    anomaly detection for this particular use case. Let''s see whether we can beat
    it with a different anomaly detection algorithm!'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 获得的结果还不错：至少一些异常值被正确检测到，这可以是一个好的最小可行产品，以开始自动化特定用例的异常检测。让我们看看我们是否能用不同的异常检测算法打败它！
- en: Anomaly detection algorithm 2 – Half-Space-Trees
  id: totrans-210
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 异常检测算法 2 – 半空间树
- en: The second main anomaly detection algorithm that you'll see here is the online
    alternative to Isolation Forests, a commonly used and performant outlier detection
    algorithm.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 您在这里将看到的第二个主要异常检测算法是 Isolation Forests 的在线替代品，这是一种常用且性能良好的异常检测算法。
- en: General use of Isolation Forests in anomaly detection
  id: totrans-212
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 异常检测中 Isolation Forests 的一般使用
- en: Isolation Forests work a bit differently than most anomaly detection algorithms.
    As described throughout this chapter, many models do anomaly detection by first
    understanding the *normal* data points and then deciding whether a data point
    is relatively similar to the other normal points or not. If not, it is considered
    an outlier.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: Isolation Forests 的工作方式与大多数异常检测算法略有不同。正如本章所述，许多模型通过首先理解正常数据点，然后决定一个数据点是否相对类似于其他正常点来进行异常检测。如果不是，则被视为异常值。
- en: Isolation Forests are a great invention, as they work the other way around.
    They try to model everything that is not normal, and they try to isolate those
    points from the rest.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: Isolation Forests 是一项伟大的发明，因为它们的工作方式相反。它们试图模拟所有非正常的事物，并试图将这些点从其余部分隔离出来。
- en: In order to isolate observations, the Isolation Forest will randomly select
    features and then split the feature between the minimum and the maximum. The number
    of splits required to isolate a sample is considered a good description of the
    **isolation score** of an observation.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 为了隔离观察值，Isolation Forest 将随机选择特征，然后在最小值和最大值之间分割特征。隔离样本所需的分割次数被认为是观察值的**隔离分数**的良好描述。
- en: If it is easy to isolate it (short path to isolation, equivalent to having little
    splits to isolate the point), then it is probably a relatively isolated data point,
    and we could class it as an outlier.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 如果它容易隔离（隔离路径短，相当于有很少的分割来隔离该点），那么它可能是一个相对孤立的数据点，我们可以将其归类为异常值。
- en: How does it change with River?
  id: totrans-217
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 它与 River 的变化如何？
- en: In River, the model has to train online, and they had to make some adaptations
    to make it work. The fact that some adaptations have been made is the reason for
    callling the model `HalfSpaceTrees` in River.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 在River中，模型必须在线训练，他们不得不做一些调整才能使其工作。一些调整被做出来的事实是为什么在River中把模型称为`HalfSpaceTrees`的原因。
- en: As something to keep in mind, the anomalies have to be spread out in the dataset
    in order for the model to work well. Also, the model needs all values to be between
    `0` and `1`.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 作为需要记住的一点，异常值必须在数据集中分散分布，以便模型能够良好工作。此外，模型需要所有值都在`0`到`1`之间。
- en: Application of Half-Space-Trees on an anomaly detection use case
  id: totrans-220
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在异常检测用例中应用半空间树
- en: 'We will implement this as follows:'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将按以下方式实现：
- en: 'Let''s now apply Half-Space-Trees to the same, univariate use case and see
    what happens:'
  id: totrans-222
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们现在将半空间树应用于相同的单变量用例，看看会发生什么：
- en: Code Block 5-14
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块5-14
- en: '[PRE20]'
  id: totrans-224
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'The results of this code block can be seen in the following figure. It appears
    that there are 20 actual outliers:'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 该代码块的结果可以在以下图中看到。看起来有20个实际异常值：
- en: '![Figure 5.7 – The results of Code Block 5-14'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: '![图5.7 – 代码块5-14的结果'
- en: '](img/B18335_05_7.jpg)'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B18335_05_7.jpg)'
- en: Figure 5.7 – The results of Code Block 5-14
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.7 – 代码块5-14的结果
- en: 'You can now compute how many outliers the model detected using the following
    code:'
  id: totrans-229
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您现在可以使用以下代码计算模型检测到的异常值数量：
- en: Code Block 5-15
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块5-15
- en: '[PRE21]'
  id: totrans-231
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'It appears that the algorithm detected 29 outliers. This can be seen in the
    following figure:'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 看起来算法检测到了29个异常值。这可以在以下图中看到：
- en: '![Figure 5.8 – The results of Code Block 5-15'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: '![图5.8 – 代码块5-15的结果'
- en: '](img/B18335_05_8.jpg)'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B18335_05_8.jpg)'
- en: Figure 5.8 – The results of Code Block 5-15
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.8 – 代码块5-15的结果
- en: 'We will now compute how many of those 29 detected outliers were actually outliers
    to see whether our model is any good:'
  id: totrans-236
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们现在将计算这29个检测到的异常值中有多少实际上是异常值，以查看我们的模型是否有效：
- en: Code Block 5-16
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块5-16
- en: '[PRE22]'
  id: totrans-238
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'The results show that our 29 detected outliers were not really outliers, indicating
    that this model is not a good choice for this task. There is really no problem
    with that. After all, this is the exact reason to do model benchmarking:'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 结果显示，我们检测到的29个异常值实际上并不是异常值，这表明这个模型不适合这项任务。这实际上并没有什么问题。毕竟，这正是进行模型基准测试的精确原因：
- en: '![Figure 5.9 – The results of Code Block 5-16'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: '![图5.9 – 代码块5-16的结果'
- en: '](img/B18335_05_9.jpg)'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B18335_05_9.jpg)'
- en: Figure 5.9 – The results of Code Block 5-16
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.9 – 代码块5-16的结果
- en: As you can see, this model is less performant in the current use case. In conclusion,
    the One-Class SVM performed better at identifying anomalies in our sample of 1,000
    draws of a uniform distribution on the interval `0` to `1`.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，这个模型在当前用例中的性能较差。总之，One-Class SVM在我们的1000次均匀分布在区间`0`到`1`的样本中识别异常方面表现更好。
- en: Going further with anomaly detection
  id: totrans-244
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步进行异常检测
- en: 'To go further with anomaly detection use cases, you can try out using different
    datasets or even a dataset of your own use case. As you have seen in the example,
    data points are inputted as a dictionary. In the current example, you used univariate
    data points: only one entry in the dictionary.'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 要进一步探索异常检测用例，您可以尝试使用不同的数据集，甚至尝试您自己的用例数据集。如您在示例中看到的，数据点作为字典输入。在当前示例中，您使用了单变量数据点：字典中只有一个条目。
- en: In practice, you generally have multivariate problems, and you would have multiple
    variables in your input. Models may be able to fit better in such use cases.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 在实践中，您通常会遇到多元问题，您的输入会有多个变量。模型可能能够在这样的用例中更好地拟合。
- en: Summary
  id: totrans-247
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, you have learned how anomaly detection works, both in streaming
    and non-streaming contexts. This category of machine learning models takes a number
    of variables about a situation and uses this information to detect whether specific
    data points or observations are likely to be different from the others.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您已经学习了异常检测如何在流和非流环境中工作。这类机器学习模型会收集关于某个情况的一组变量，并使用这些信息来检测特定数据点或观察结果是否可能与其他数据不同。
- en: You have gotten an overview of different use cases for this. Some of those are
    the monitoring of IT systems, or production line sensor data in manufacturing.
    Whenever it is problematic to have a data point that is too different from the
    others, anomaly detection is of great added value.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 您已经对这些用例的概述有了了解。其中一些包括IT系统的监控或制造业的生产线传感器数据。当数据点与其他数据点差异太大时，异常检测具有很大的附加价值。
- en: You have finished the chapter by implementing a model benchmark in which you
    have benchmarked two online anomaly detection models from the River library. You
    have seen one model being able to detect a part of the anomalies, and the other
    model having much worse performances. This has introduced you not only to anomaly
    detection but also to model benchmarking and model evaluation.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 你通过实现一个模型基准测试完成了这一章节，在这个基准测试中，你测试了River库中的两个在线异常检测模型。你看到其中一个模型能够检测到部分异常，而另一个模型的表现则非常糟糕。这不仅让你了解了异常检测，还让你接触到了模型基准测试和模型评估。
- en: In the next chapter, you will see even more on those topics. You will be working
    on online classification models, and you will again see how to implement model
    benchmarking and metrics, but this time, for classification rather than anomaly
    detection. As you have seen in this chapter, classification can sometimes be used
    for anomaly detection as well, making the two use cases related to each other.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，你将看到更多关于这些主题的内容。你将致力于在线分类模型，你将再次看到如何实现模型基准测试和指标，但这次是为了分类而不是异常检测。正如你在本章中看到的，分类有时也可以用于异常检测，这使得这两个用例相互关联。
- en: Further reading
  id: totrans-252
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: '*Anomaly Detection*: [https://en.wikipedia.org/wiki/Anomaly_detection](https://en.wikipedia.org/wiki/Anomaly_detection)'
  id: totrans-253
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*异常检测*: [https://en.wikipedia.org/wiki/Anomaly_detection](https://en.wikipedia.org/wiki/Anomaly_detection)'
- en: '*River ML Constant Thresholder*: [https://riverml.xyz/latest/api/anomaly/ConstantThresholder/](https://riverml.xyz/latest/api/anomaly/ConstantThresholder/)'
  id: totrans-254
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*River ML 常数阈值器*: [https://riverml.xyz/latest/api/anomaly/ConstantThresholder/](https://riverml.xyz/latest/api/anomaly/ConstantThresholder/)'
- en: '*River ML Quantile Thresholder*: [https://riverml.xyz/latest/api/anomaly/QuantileThresholder/](https://riverml.xyz/latest/api/anomaly/QuantileThresholder/)'
  id: totrans-255
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*River ML 分位数阈值器*: [https://riverml.xyz/latest/api/anomaly/QuantileThresholder/](https://riverml.xyz/latest/api/anomaly/QuantileThresholder/)'
- en: '*Support Vector Machine*: [https://en.wikipedia.org/wiki/Support-vector_machine](https://en.wikipedia.org/wiki/Support-vector_machine)'
  id: totrans-256
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*支持向量机*: [https://en.wikipedia.org/wiki/Support-vector_machine](https://en.wikipedia.org/wiki/Support-vector_machine)'
- en: '*Scikit Learn One Class SVM*: [https://scikit-learn.org/stable/modules/generated/sklearn.svm.OneClassSVM.html](https://scikit-learn.org/stable/modules/generated/sklearn.svm.OneClassSVM.html)'
  id: totrans-257
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*Scikit Learn 单类支持向量机*: [https://scikit-learn.org/stable/modules/generated/sklearn.svm.OneClassSVM.html](https://scikit-learn.org/stable/modules/generated/sklearn.svm.OneClassSVM.html)'
- en: '*River ML One Class SVM*: [https://riverml.xyz/latest/api/anomaly/OneClassSVM/](https://riverml.xyz/latest/api/anomaly/OneClassSVM/)'
  id: totrans-258
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*River ML 单类支持向量机*: [https://riverml.xyz/latest/api/anomaly/OneClassSVM/](https://riverml.xyz/latest/api/anomaly/OneClassSVM/)'
- en: '*Isolation Forest*: [https://en.wikipedia.org/wiki/Isolation_forest](https://en.wikipedia.org/wiki/Isolation_forest)'
  id: totrans-259
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*隔离森林*: [https://en.wikipedia.org/wiki/Isolation_forest](https://en.wikipedia.org/wiki/Isolation_forest)'
- en: '*River ML Half-Space Trees*: [https://riverml.xyz/latest/api/anomaly/HalfSpaceTrees/](https://riverml.xyz/latest/api/anomaly/HalfSpaceTrees/)'
  id: totrans-260
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*River ML 半空间树*: [https://riverml.xyz/latest/api/anomaly/HalfSpaceTrees/](https://riverml.xyz/latest/api/anomaly/HalfSpaceTrees/)'
