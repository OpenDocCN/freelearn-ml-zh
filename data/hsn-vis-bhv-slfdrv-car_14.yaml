- en: '*Chapter 11*: Mapping Our Environments'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第11章*：绘制我们的环境'
- en: There are a few fundamental things that your self-driving car needs to navigate
    the world.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 你的自动驾驶汽车在导航世界时需要一些基本的东西。
- en: First of all, you need to have a map of your environment. This map is very similar
    to the map you use on your phone for getting to your favorite restaurant.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，你需要有一个你环境的地图。这个地图与你用来到达你最喜欢的餐厅的手机上的地图非常相似。
- en: Secondly, you need a way to localize your position on that map in the real world.
    On your phone, this is the blue dot localized by the GPS.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 其次，你需要一种方法在现实世界中定位你在地图上的位置。在你的手机上，这就是由GPS定位的蓝色点。
- en: In this chapter, you will learn about various ways for your self-driving car
    to map and localize through its environment, so it knows where it is in the world.
    You can imagine why this is important since the entire reason for making a self-driving
    car is to go places!
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你将了解你的自动驾驶汽车如何通过其环境进行地图和定位的各种方法，以便知道它在世界中的位置。你可以想象这为什么很重要，因为制造自动驾驶汽车的全部原因就是为了去往各个地方！
- en: 'You will learn the following topics to help you build a self-driving car worthy
    of being called Magellan:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 你将学习以下主题，帮助你构建一个值得被称为麦哲伦的自动驾驶汽车：
- en: Why you need maps and localization
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为什么你需要地图和定位
- en: Types of mapping and localization
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 地图和定位的类型
- en: Open source mapping tools
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开源地图工具
- en: SLAM with an Ouster lidar and Google Cartographer
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Ouster激光雷达和Google Cartographer进行SLAM
- en: Technical requirements
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'The chapter requires the following software:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 本章需要以下软件：
- en: Linux
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Linux
- en: 'ROS Melodic: [http://wiki.ros.org/melodic/Installation/Ubuntu](http://wiki.ros.org/melodic/Installation/Ubuntu)'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'ROS Melodic: [http://wiki.ros.org/melodic/Installation/Ubuntu](http://wiki.ros.org/melodic/Installation/Ubuntu)'
- en: 'Python 3.7: [https://www.python.org/downloads/release/python-370/](https://www.python.org/downloads/release/python-370/)'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Python 3.7: [https://www.python.org/downloads/release/python-370/](https://www.python.org/downloads/release/python-370/)'
- en: C++
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: C++
- en: 'Google Cartographer ROS: [https://github.com/cartographer-project/cartographer_ros](https://github.com/cartographer-project/cartographer_ros)'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Google Cartographer ROS: [https://github.com/cartographer-project/cartographer_ros](https://github.com/cartographer-project/cartographer_ros)'
- en: '`ouster_example_cartographer`: [https://github.com/Krishtof-Korda/ouster_example_cartographer](https://github.com/Krishtof-Korda/ouster_example_cartographer)'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ouster_example_cartographer`: [https://github.com/Krishtof-Korda/ouster_example_cartographer](https://github.com/Krishtof-Korda/ouster_example_cartographer)'
- en: 'The code for the chapter can be found at the following link:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的代码可以在以下链接找到：
- en: '[https://github.com/PacktPublishing/Hands-On-Vision-and-Behavior-for-Self-Driving-Cars](https://github.com/PacktPublishing/Hands-On-Vision-and-Behavior-for-Self-Driving-Cars)'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/PacktPublishing/Hands-On-Vision-and-Behavior-for-Self-Driving-Cars](https://github.com/PacktPublishing/Hands-On-Vision-and-Behavior-for-Self-Driving-Cars)'
- en: 'The code in Action videos for the chapter can be found here:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 本章动作视频中的代码可以在以下位置找到：
- en: '[https://bit.ly/2IVkJVZ](https://bit.ly/2IVkJVZ)'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://bit.ly/2IVkJVZ](https://bit.ly/2IVkJVZ)'
- en: Why you need maps and localization
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为什么你需要地图和定位
- en: In this chapter, you will learn the importance of maps and localization, and
    the combination of them. Maps and localization are things we often take for granted
    in the modern world, but as you will see, they are very important, especially
    for self-driving cars, where the amazing human brain is not utilized.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你将学习地图和定位的重要性，以及它们的结合。在现代世界中，我们常常认为地图和定位是理所当然的，但正如你将看到的，它们非常重要，尤其是在自动驾驶汽车中，那里的人类大脑没有得到充分利用。
- en: Maps
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 地图
- en: Take a moment and imagine a world without cell phones, without MapQuest (yup,
    I'm an elder millennial), without paper maps, and without Anaximander of Greece!
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 抽空想象一下，一个没有手机、没有MapQuest（是的，我是个老千禧一代）、没有纸质地图，也没有希腊的安纳克西曼德的世界！
- en: How well do you think you could navigate from your home to a city you have never
    been to, let alone the new Trader Joe's that just opened a few cities away? I
    am sure you could do it, but you would probably stop every few kilometers and
    ask a local for the next few directions to get you closer to that bold and earthy
    Two Buck Chuck. But you can see why maps really make our lives easier and open
    up possibilities to venture to new places with little fear of getting lost and
    ending up at Walley World.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 你认为你能多好地从你家导航到一个你从未去过的小镇，更不用说那些刚刚在几个城市外开业的新Trader Joe's了？我敢肯定你可以做到，但你可能会每隔几公里就停下来，向当地人询问接下来的几个方向，以便更接近那个大胆而质朴的两美元一瓶的查克。但你可以看到地图为什么真的让我们的生活变得更轻松，并为我们探索新地方提供了可能性，几乎不用担心迷路，最终到达瓦利世界。
- en: Now, you are very fortunate that companies such as Google and Apple have painstakingly
    mapped every street, alleyway, and side street you can think of. That is a huge
    task and we benefit from it every day. Hooray maps!
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你非常幸运，像谷歌和苹果这样的公司已经不辞辛劳地绘制了你所能想到的每条街道、小巷和支路。这是一项巨大的任务，我们每天都在从中受益。万岁，地图！
- en: Localization
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 定位
- en: 'Okay, now imagine that you are teleported here:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，现在想象一下你被传送到这里：
- en: '![Figure 11.1 – Monkey Face in Russia. Image source: http://bit.ly/6547672-17351141](img/Figure_11.1_B16322.jpg)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.1 – 俄罗斯猴脸。图片来源：http://bit.ly/6547672-17351141](img/Figure_11.1_B16322.jpg)'
- en: 'Figure 11.1 – Monkey Face in Russia. Image source: [http://bit.ly/6547672-17351141](http://bit.ly/6547672-17351141)'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.1 – 俄罗斯猴脸。图片来源：[http://bit.ly/6547672-17351141](http://bit.ly/6547672-17351141)
- en: You have been given a map of the area and need to find your way to the nearest
    body of water. The first thing you need to do – after you stop shaking from being
    teleported – is figure out where in the world you are on the map you have. You
    would likely look around you to pick out landmarks nearby, and then try to find
    those landmarks on your map. *Monkey Face, I'm right in the middle of the Monkey
    Face!* Congratulations, you just localized yourself in the map and can use it
    to find the elixir of life!
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 你已经得到了该地区的地图，需要找到通往最近的水体的路。在你因为传送而颤抖停止后，你需要做的第一件事是确定你在地图上的位置。你可能会环顾四周，以辨认附近的标志，然后尝试在地图上找到这些标志。“猴脸，我正处在猴脸的正中央！”恭喜你，你已经在地图上定位了自己，并可以使用它来找到生命的灵丹妙药！
- en: Now you see why both a map and localization are necessary for navigating the
    world and environments.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你明白为什么在导航世界和环境时，既需要地图又需要定位。
- en: Now, you say, *But wait, what if something has changed in the world since the
    map was generated?!*
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你说，“但是等等，如果自从地图生成以来世界发生了变化呢？！”
- en: Surely you have been driving along, following the sweet voice of navigation
    from your phone when *wham!* You just rolled up to some road construction that
    has closed the road and is forcing you to take a 30-minute detour. You blurt out
    to your phone, *Curse you, nav voice from oblivion! How did you not know that
    there was construction?*
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 一定有你在开车时，跟随手机上导航甜美的声音，突然“砰！”你撞到了一些正在施工的道路，道路被封闭，迫使你绕行30分钟。你对你的手机大喊，“诅咒你，来自虚无的导航声音！你怎么不知道有施工呢？”
- en: The truth is that your dear navigator voice, no matter how up to date, will
    always miss real-time information about the world. Just imagine some ducks crossing
    the road; the voice will never warn you about that. In the next section, you will
    learn the many ways to save the ducks with various types of mapping and localization.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 事实是，无论你的导航语音多么更新，总会错过关于世界的实时信息。想象一下一些鸭子正在过马路；语音永远不会警告你这一点。在下一节中，你将学习到许多使用各种类型的制图和定位来拯救鸭子的方法。
- en: Types of mapping and localization
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 制图和定位的类型
- en: The field of localization and mapping is absolutely full of amazing research
    and is continually growing. The advancement of GPUs and computer processing speeds
    has led to the development of some very exciting algorithms.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 定位和制图领域绝对充满了惊人的研究，并且一直在不断发展。GPU和计算机处理速度的进步导致了某些非常激动人心的算法的发展。
- en: Quickly, let's get back to saving our ducks! Recall in the previous section
    that our dear sat-nav voice did not see the ducks crossing the road in front of
    us. A map will never be completely accurate since the world is ever-changing and
    morphing. Therefore, we must have a way to not only localize using a pre-built
    map but also build a map in real time so that we can see when new obstacles appear
    in our map and navigate around them. Introducing SLAM for the ducks (not dunks).
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 快点，让我们回到拯救我们的鸭子！回想一下上一节，我们亲爱的卫星导航语音没有看到在我们面前过马路的鸭子。由于世界一直在变化和演变，地图永远不会完全准确。因此，我们必须有一种方法，不仅能够使用预先构建的地图进行定位，而且还能实时构建地图，以便我们可以在地图上看到新障碍物的出现，并绕过它们。为鸭子介绍SLAM（不是dunks）。
- en: 'Although there are independent methods for mapping and localization, in this
    chapter, we will focus on **Simultaneous Localization and Mapping** (**SLAM**).
    If you are curious, though, the following is a quick breakdown of the most commonly
    used algorithms for independent localization and mapping:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然有独立的制图和定位方法，但在本章中，我们将重点介绍**同时定位与制图**（**SLAM**）。如果你好奇的话，以下是一些最常用的独立定位和制图算法的快速概述：
- en: Particle filters
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 粒子滤波器
- en: Markov localization
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 马尔可夫定位
- en: Grid localization
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网格定位
- en: Extended Kalman filters for range-bearing localization
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于测距定位的扩展卡尔曼滤波器
- en: Kalman filters for dead reckoning (odometry)
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于测距（里程计）的卡尔曼滤波器
- en: Note
  id: totrans-46
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: 'You can read more about localization here:'
  id: totrans-47
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你可以在这里了解更多关于定位的信息：
- en: '[https://www.cs.cmu.edu/~motionplanning/lecture/Chap8-Kalman-Mapping_howie.pdf](https://www.cs.cmu.edu/~motionplanning/lecture/Chap8-Kalman-Mapping_howie.pdf)'
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[https://www.cs.cmu.edu/~motionplanning/lecture/Chap8-Kalman-Mapping_howie.pdf](https://www.cs.cmu.edu/~motionplanning/lecture/Chap8-Kalman-Mapping_howie.pdf)'
- en: '[http://robots.stanford.edu/papers/thrun.pf-in-robotics-uai02.pdf](http://robots.stanford.edu/papers/thrun.pf-in-robotics-uai02.pdf)'
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[http://robots.stanford.edu/papers/thrun.pf-in-robotics-uai02.pdf](http://robots.stanford.edu/papers/thrun.pf-in-robotics-uai02.pdf)'
- en: '[https://www.ri.cmu.edu/pub_files/pub1/fox_dieter_1999_3/fox_dieter_1999_3.pdf](https://www.ri.cmu.edu/pub_files/pub1/fox_dieter_1999_3/fox_dieter_1999_3.pdf)'
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[https://www.ri.cmu.edu/pub_files/pub1/fox_dieter_1999_3/fox_dieter_1999_3.pdf](https://www.ri.cmu.edu/pub_files/pub1/fox_dieter_1999_3/fox_dieter_1999_3.pdf)'
- en: 'Some example types of mapping are as follows:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些示例类型的建图：
- en: Occupancy grid
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 占用网格
- en: Feature-based (landmark)
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基于特征的（地标）
- en: Topological (graph-based)
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 拓扑（基于图）
- en: Visual teach and repeat
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 视觉教学和重复
- en: Note
  id: totrans-56
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: 'To read more about mapping, refer to the following links:'
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要了解更多关于建图的信息，请参考以下链接：
- en: '[https://www.cs.cmu.edu/~motionplanning/lecture/Chap8-Kalman-Mapping_howie.pdf](https://www.cs.cmu.edu/~motionplanning/lecture/Chap8-Kalman-Mapping_howie.pdf)'
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[https://www.cs.cmu.edu/~motionplanning/lecture/Chap8-Kalman-Mapping_howie.pdf](https://www.cs.cmu.edu/~motionplanning/lecture/Chap8-Kalman-Mapping_howie.pdf)'
- en: '[https://www.ri.cmu.edu/pub_files/pub1/thrun_sebastian_1996_8/thrun_sebastian_1996_8.pdf](https://www.ri.cmu.edu/pub_files/pub1/thrun_sebastian_1996_8/thrun_sebastian_1996_8.pdf)'
  id: totrans-59
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[https://www.ri.cmu.edu/pub_files/pub1/thrun_sebastian_1996_8/thrun_sebastian_1996_8.pdf](https://www.ri.cmu.edu/pub_files/pub1/thrun_sebastian_1996_8/thrun_sebastian_1996_8.pdf)'
- en: 'There is a lot of great information on these algorithms and implementations,
    but for this book, we will focus on the most widely used form of localization
    and mapping, the simultaneous kind: SLAM.'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 关于这些算法和实现有很多很好的信息，但在这本书中，我们将重点关注最广泛使用的定位和建图形式，即同时进行的：SLAM。
- en: Simultaneous localization and mapping (SLAM)
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 同时定位与建图（SLAM）
- en: Let's jump back into our imagination for a moment.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们暂时回到我们的想象中。
- en: Imagine you suddenly woke up one night and there was absolutely no light, no
    moon, no glow worms – just pitch black! Fear not, you will use the magic of SLAM
    to navigate from your bed to get that tasty midnight snack!
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下，你突然在一个晚上醒来，周围一片漆黑，没有月光，没有萤火虫——只有一片漆黑！别担心，你将使用SLAM的魔法从床边导航到获取美味的午夜小吃！
- en: You fumble your left hand around until you feel the edge of your bed. Boom,
    you just localized yourself on the bed and have mapped the left edge of the bed
    in your mind. You make the assumption that you didn't flip vertically in bed while
    sleeping, so this really is the left side of your bed.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 你摸索着你的左手，直到感觉到床的边缘。砰，你刚刚在床上定位了自己，并在心中绘制了床的左侧。你假设你在睡觉时没有在床上垂直翻转，所以这确实是你的床的左侧。
- en: Next, you swing your legs over the edge of the bed, slowly lowering yourself
    until you feel the floor. Blam, you just mapped a portion of your floor. Now,
    you carefully stand up and put your arms out in front of you. You sway your arms
    in a Lissajous curve in front of you, like Helen Keller searching for a spider's
    web. Simultaneously, you carefully sweep your feet across the floor, like a modern
    interpretive dancer looking for any steps, transitions, edges, and pitfalls, so
    you don't trip.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，你将双腿从床边放下，慢慢地降低身体，直到你感觉到地板。砰，你刚刚绘制了你地板的一部分。现在，你小心翼翼地站起来，将手臂伸向前方。你像海伦·凯勒寻找蜘蛛网一样，在你面前摆动你的手臂，形成Lissajous曲线。同时，你小心翼翼地在地板上扫动你的脚，就像一个现代的诠释舞者寻找任何步骤、过渡、边缘和陷阱，以免摔倒。
- en: Each time you move forward, you carefully keep track in your mind which direction
    you are facing and how far you have stepped (**odometry**). All the time, you
    are building a mental map of the room and using your hands and feet as range sensors,
    giving you a sense of where you are in the room (**localizing**). Each time you
    find an obstacle, you store that in your mental map and navigate gingerly around
    it. You are SLAMing!
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 每当你向前移动时，你都要仔细地在心里记录你面向的方向和走了多远（**里程计**）。始终，你正在构建一个心理地图，并用你的手和脚作为范围传感器，给你一种你在房间中的位置感（**定位**）。每次你发现障碍物，你都会将它存储在你的心理地图中，并小心翼翼地绕过它。你正在进行SLAM！
- en: 'SLAM typically uses some kind of range-finding sensor, such as a lidar sensor:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: SLAM通常使用某种测距传感器，例如激光雷达传感器：
- en: '![Figure 11.2 – OS1-128 digital lidar sensor, courtesy of Ouster, Inc.](img/Figure_11.2_B16322.jpg)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.2 – OS1-128 数字激光雷达传感器，由 Ouster, Inc. 提供](img/Figure_11.2_B16322.jpg)'
- en: Figure 11.2 – OS1-128 digital lidar sensor, courtesy of Ouster, Inc.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.2 – OS1-128 数字激光雷达传感器，由 Ouster, Inc. 提供
- en: 'When you were navigating your room, your arms and legs were acting as your
    range finders. Lidar sensors use laser light, which illuminates the environment
    and bounces off objects. The time of flight between the light leaving and returning
    is used to estimate the range to the object using the speed of light. Lidar sensors,
    such as the OS1-128, produce rich and dense point clouds with highly accurate
    distance information:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 当你在房间内导航时，你的手臂和腿就像你的测距仪。激光雷达传感器使用激光光束，它照亮环境并从物体上反射回来。光从发出到返回的时间被用来通过光速估计到物体的距离。例如
    OS1-128 这样的激光雷达传感器，可以产生丰富且密集的点云，具有高度精确的距离信息：
- en: '![Figure 11.3 – Lidar point cloud in an urban setting, courtesy of Ouster,
    Inc.](img/Figure_11.3_B16322.jpg)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.3 – 城市环境中的激光雷达点云，由 Ouster, Inc. 提供](img/Figure_11.3_B16322.jpg)'
- en: Figure 11.3 – Lidar point cloud in an urban setting, courtesy of Ouster, Inc.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.3 – 城市环境中的激光雷达点云，由 Ouster, Inc. 提供
- en: This distance information is what SLAM algorithms use to localize and map the
    world.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 这种距离信息是 SLAM 算法用来定位和绘制世界地图的。
- en: An **Inertial Measurement Unit** (**IMU**) is also needed to help estimate the
    pose of the vehicle and estimate the distance traveled between successive measurements.
    One reason that Ouster lidar sensors are popular for map creation is that they
    come with an IMU built in, which lets you start mapping with a single device.
    Later in the chapter, you will learn how to map with an Ouster lidar sensor and
    Google Cartographer.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 还需要一个**惯性测量单元**（**IMU**）来帮助估计车辆的姿态并估计连续测量之间的距离。Ouster 激光雷达传感器之所以在地图创建中很受欢迎，一个原因是它们内置了
    IMU，这使得你可以用单个设备开始制图。在本章的后面部分，你将学习如何使用 Ouster 激光雷达传感器和 Google Cartographer 进行制图。
- en: 'SLAM is the concept of building a map on the fly with no *a priori* information
    and simultaneously localizing in the map as it is being built. You can imagine
    that this is very difficult and is a bit of a *chicken or egg* problem. To localize,
    you need a map (the egg) to localize from, but at the same time, in order to build
    your map on the fly, you need to localize (the chicken) and know where you are
    on the map you are trying to build. This is like a problem from a time travel
    movie: surviving to live long enough to go back in time to save yourself in the
    first place. Does your head hurt yet?'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: SLAM 是在没有任何先验信息的情况下实时构建地图并同时在地图中定位的概念。你可以想象这非常困难，有点像“先有鸡还是先有蛋”的问题。为了定位，你需要一个地图（蛋）来定位，但与此同时，为了实时构建你的地图，你需要定位（鸡）并知道你在你试图构建的地图上的位置。这就像一部时间旅行电影中的问题：生存足够长的时间回到过去，首先救自己。你的头还疼吗？
- en: The good news is that this field has been studied for over 30 years and has
    borne beautiful fruit in the form of algorithms for robotics and self-driving
    cars. Let's see what lies ahead!
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 好消息是，这个领域已经研究了30多年，并以机器人技术和自动驾驶汽车算法的形式结出了美丽的果实。让我们看看未来有什么在等待我们！
- en: Types of SLAM
  id: totrans-77
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: SLAM 类型
- en: 'The following is a brief list of some state-of-the-art algorithms used throughout
    robotics, drone mapping, and self-driving industries. Each of these algorithms
    has different applications. RGB-D SLAM, for example, is used for camera-based
    SLAM, while LIO SAM is specific to lidar sensors. Kinetic fusion is another interesting
    form of SLAM used to map complex objects indoors. A more complete list can be
    found on the KITTI website at [http://www.cvlibs.net/datasets/kitti/eval_odometry.php](http://www.cvlibs.net/datasets/kitti/eval_odometry.php):'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些在机器人、无人机制图和自动驾驶行业中广泛使用的最先进算法的简要列表。这些算法各有不同的应用。例如，RGB-D SLAM 用于基于摄像头的 SLAM，而
    LIO SAM 则专门用于激光雷达传感器。动力融合是另一种有趣的 SLAM 形式，用于绘制室内复杂物体。更完整的列表可以在 KITTI 网站上找到：[http://www.cvlibs.net/datasets/kitti/eval_odometry.php](http://www.cvlibs.net/datasets/kitti/eval_odometry.php)
- en: '**LIO SAM**: [https://arxiv.org/pdf/2007.00258.pdf](https://arxiv.org/pdf/2007.00258.pdf)'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**LIO SAM**：[https://arxiv.org/pdf/2007.00258.pdf](https://arxiv.org/pdf/2007.00258.pdf)'
- en: '**LOAM**: [https://ri.cmu.edu/pub_files/2014/7/Ji_LidarMapping_RSS2014_v8.pdf](https://ri.cmu.edu/pub_files/2014/7/Ji_LidarMapping_RSS2014_v8.pdf)'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**LOAM**：[https://ri.cmu.edu/pub_files/2014/7/Ji_LidarMapping_RSS2014_v8.pdf](https://ri.cmu.edu/pub_files/2014/7/Ji_LidarMapping_RSS2014_v8.pdf)'
- en: '**RGB-D SLAM**: [https://felixendres.github.io/rgbdslam_v2/](https://felixendres.github.io/rgbdslam_v2/)'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**RGB-D SLAM**：[https://felixendres.github.io/rgbdslam_v2/](https://felixendres.github.io/rgbdslam_v2/)'
- en: '**Kinetic fusion**: [https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/ismar2011.pdf](https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/ismar2011.pdf)'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**动态融合**：[https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/ismar2011.pdf](https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/ismar2011.pdf)'
- en: Next, you will learn about a very important method of reducing error in a SLAM
    algorithm.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，你将学习关于在SLAM算法中减少误差的一个非常重要的方法。
- en: Loop closure in SLAM
  id: totrans-84
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: SLAM中的闭环检测
- en: One thing to consider with mapping and localization is that nothing is perfect.
    You will never find a sensor that is perfectly accurate. All sensors are probabilistic
    with some distribution containing a mean and variance of a measurement. These
    are determined empirically at the factory during the calibration process and then
    provided in the datasheet. You may ask, *Why do I care?*
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 在地图制作和定位时，有一件事需要考虑，那就是没有任何东西是完美的。你永远找不到一个完全准确的传感器。所有传感器都是概率性的，包含一个测量值的平均值和方差。这些值在工厂的校准过程中通过经验确定，并在数据表中提供。你可能会问，*我为什么要关心这个？*
- en: Good question! The fact that the sensors always have some error means the longer
    you navigate using these sensors, the more your map and the estimation of your
    position within that map will drift from reality.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 好问题！传感器总是存在一些误差的事实意味着，你使用这些传感器导航的时间越长，你的地图以及你在地图中的位置估计与现实之间的偏差就越大。
- en: 'SLAM algorithms almost universally have a trick up their sleeve to combat this
    drift: **loop closure**! Loop closure works like this. Let''s say you pass by
    the Aldar building on your trip to Abu Dhabi:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 几乎所有的SLAM算法都有一个应对这种漂移的技巧：**闭环检测**！闭环检测的工作原理是这样的。假设你在前往阿布扎德的旅途中经过了阿达尔大楼：
- en: '![Figure 11.4 – The Aldar headquarters building, Abu Dhabi, UAE](img/Figure_11.4_B16322.jpg)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![图11.4 – 阿布扎比的阿达尔总部大楼，阿联酋](img/Figure_11.4_B16322.jpg)'
- en: Figure 11.4 – The Aldar headquarters building, Abu Dhabi, UAE
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.4 – 阿布扎比的阿达尔总部大楼，阿联酋
- en: You register this magnificent circular building into your map and continue on
    your way. Then, sometime later, perhaps after you grabbed lunch at Li Beirut,
    you drive back, passing the Aldar building a second time. Now when you pass it,
    you measure your distance from it and compare that to where you think you are
    relative to when you first registered it on your map. You realize that you are
    not where you expect to be relative to it. Snap! The algorithm takes this information
    and iteratively corrects the entire map to represent where you really are in the
    world.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 你将这个壮观的圆形建筑注册到你的地图中，然后继续你的旅程。然后，在某个时候，也许在你吃了在黎巴嫩午餐之后，你开车返回，第二次经过阿达尔大楼。现在当你经过它时，你测量你与它的距离，并将其与你第一次在地图上注册它时的位置进行比较。你意识到你并不在你期望的位置。咔嚓！算法利用这些信息，迭代地纠正整个地图，以表示你在世界中的真实位置。
- en: SLAM is constantly doing this with every feature it maps and returns to later.
    You will see this in action when you play with the open source SLAM in the next
    few sections. Before that, let's quickly show you some of the available open source
    mapping tools available to you for your mapping pleasure.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: SLAM会不断地对每个它映射的特征做这件事，并在之后返回。在你接下来几节中玩开源SLAM时，你会看到这个动作。在那之前，让我们快速展示一些可用的开源地图工具，供你在地图制作中享受。
- en: Open source mapping tools
  id: totrans-92
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 开源地图工具
- en: SLAM is quite complicated to implement and understand, but fortunately, there
    are plenty of open source solutions that you can use in your self-driving car.
    The website *Awesome Open Source* ([https://awesomeopensource.com/projects/slam](https://awesomeopensource.com/projects/slam))
    has a treasure trove of SLAM algorithms that you can use.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: SLAM的实现和理解相当复杂，但幸运的是，有许多开源解决方案可供你在自动驾驶汽车中使用。网站 *Awesome Open Source* ([https://awesomeopensource.com/projects/slam](https://awesomeopensource.com/projects/slam))
    收集了大量的SLAM算法，你可以使用。
- en: 'Here is a curated selection to whet your appetite:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一些精心挑选的内容来激发你的兴趣：
- en: '**Cartographer by Google** ([https://github.com/cartographer-project/cartographer](https://github.com/cartographer-project/cartographer))'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Google的Cartographer** ([https://github.com/cartographer-project/cartographer](https://github.com/cartographer-project/cartographer))'
- en: '**LIO-SAM by TixiaoShan** ([https://github.com/TixiaoShan/LIO-SAM](https://github.com/TixiaoShan/LIO-SAM))'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**TixiaoShan的LIO-SAM** ([https://github.com/TixiaoShan/LIO-SAM](https://github.com/TixiaoShan/LIO-SAM))'
- en: '**LeGO-LOAM by RobustFieldAutonomy** ([https://github.com/RobustFieldAutonomyLab/LeGO-LOAM](https://github.com/RobustFieldAutonomyLab/LeGO-LOAM))'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**RobustFieldAutonomy的LeGO-LOAM** ([https://github.com/RobustFieldAutonomyLab/LeGO-LOAM](https://github.com/RobustFieldAutonomyLab/LeGO-LOAM))'
- en: Since Cartographer is by far the most popular and supported, you will get to
    play with and experience all it has to offer in the next section.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 由于Cartographer迄今为止是最受欢迎和支持的，您将在下一节中有机会体验和探索它所提供的一切。
- en: SLAM with an Ouster lidar and Google Cartographer
  id: totrans-99
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Ouster激光雷达和Google Cartographer进行SLAM
- en: 'This is the moment you have been waiting for: building maps with hands-on experience
    using Cartographer and an Ouster lidar sensor!'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是您一直等待的时刻：使用Cartographer和Ouster激光雷达传感器亲自动手绘制地图！
- en: An Ouster lidar was chosen for this hands-on example because it has a built-in
    **IMU**, which is needed to perform SLAM. This means that you don't need to purchase
    another sensor to provide the inertial data.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个动手实验中，选择Ouster激光雷达是因为它内置了**IMU**，这是执行SLAM所需的。这意味着您不需要购买另一个传感器来提供惯性数据。
- en: 'The example you will see is the offline processing of data collected from an
    Ouster sensor and is adapted from the work of Wil Selby. Please visit Wil Selby''s
    website home page for more cool projects and ideas: [https://www.wilselby.com/](https://www.wilselby.com/).'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 您将看到的示例是从Ouster传感器收集的数据的离线处理，并改编自Wil Selby的工作。请访问Wil Selby的网站主页，了解更多酷炫的项目和想法：[https://www.wilselby.com/](https://www.wilselby.com/)。
- en: 'Selby also has a related project that performs the SLAM online (in real time)
    for a DIY driverless car in ROS: [https://github.com/wilselby/diy_driverless_car_ROS](https://github.com/wilselby/diy_driverless_car_ROS).'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: Selby还有一个相关的项目，该项目在ROS中为DIY自动驾驶汽车执行在线（实时）SLAM：[https://github.com/wilselby/diy_driverless_car_ROS](https://github.com/wilselby/diy_driverless_car_ROS)。
- en: Ouster sensor
  id: totrans-104
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Ouster传感器
- en: 'You can learn more about the Ouster data format and usage of the sensor from
    the OS1 user guide:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从OS1用户指南中了解更多关于Ouster数据格式和传感器使用的信息。
- en: '[https://github.com/PacktPublishing/Hands-On-Vision-and-Behavior-for-Self-Driving-Cars/blob/master/Chapter11/OS1-User-Guide-v1.14.0-beta.12.pdf](https://github.com/PacktPublishing/Hands-On-Vision-and-Behavior-for-Self-Driving-Cars/blob/master/Chapter11/OS1-User-Guide-v1.14.0-beta.12.pdf)'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/PacktPublishing/Hands-On-Vision-and-Behavior-for-Self-Driving-Cars/blob/master/Chapter11/OS1-User-Guide-v1.14.0-beta.12.pdf](https://github.com/PacktPublishing/Hands-On-Vision-and-Behavior-for-Self-Driving-Cars/blob/master/Chapter11/OS1-User-Guide-v1.14.0-beta.12.pdf)'
- en: Don't worry, you don't need to buy a sensor to get your hands dirty in this
    chapter. We have provided you with some sample data collected from an OS1-128
    for you to use. You will see later how to download the data.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 别担心，您不需要购买传感器就可以在本章中亲自动手。我们已经为您提供了从OS1-128收集的一些样本数据，您可以稍后看到如何下载这些数据。
- en: The repo
  id: totrans-108
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 仓库
- en: 'You will find the code for this chapter in the `ouster_example_cartographer`
    submodule at the following link:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在以下链接中找到本章的代码，位于`ouster_example_cartographer`子模块中：
- en: '[https://github.com/PacktPublishing/Hands-On-Vision-and-Behavior-for-Self-Driving-Cars/tree/master/Chapter11](https://github.com/PacktPublishing/Hands-On-Vision-and-Behavior-for-Self-Driving-Cars/tree/master/Chapter11)'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/PacktPublishing/Hands-On-Vision-and-Behavior-for-Self-Driving-Cars/tree/master/Chapter11](https://github.com/PacktPublishing/Hands-On-Vision-and-Behavior-for-Self-Driving-Cars/tree/master/Chapter11)'
- en: 'To ensure that you have the latest code in the submodule, you can run the following
    command from within the `Chapter11` folder:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 为了确保您拥有子模块中的最新代码，您可以从`Chapter11`文件夹中运行以下命令：
- en: '[PRE0]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Getting started with cartographer_ros
  id: totrans-113
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 开始使用cartographer_ros
- en: 'Before we dive into the code, you are encouraged to learn the basics of Cartographer
    by reading the algorithm walkthrough:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们深入代码之前，我们鼓励您通过阅读算法遍历来学习Cartographer的基础知识：
- en: '[https://google-cartographer-ros.readthedocs.io/en/latest/algo_walkthrough.html](https://google-cartographer-ros.readthedocs.io/en/latest/algo_walkthrough.html)'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://google-cartographer-ros.readthedocs.io/en/latest/algo_walkthrough.html](https://google-cartographer-ros.readthedocs.io/en/latest/algo_walkthrough.html)'
- en: Let's begin with a quick overview of the Cartographer configuration files needed
    to make it work using your sensor.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从快速概述Cartographer配置文件开始，这些配置文件是使它能够使用您的传感器工作的。
- en: Cartographer_ros configuration
  id: totrans-117
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Cartographer_ros配置
- en: 'Cartographer needs the following configuration files to understand about your
    sensor, robot, transforms, and so on. The files can be found in the `ouster_example_cartographer/cartographer_ros/`
    folder:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 地图绘制器需要以下配置文件来了解您的传感器、机器人、变换等信息。这些文件可以在`ouster_example_cartographer/cartographer_ros/`文件夹中找到：
- en: '`configuration_files/demo_3d.rviz`'
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`configuration_files/demo_3d.rviz`'
- en: '`configuration_files/cart_3d.lua`'
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`configuration_files/cart_3d.lua`'
- en: '`urdf/os_sensor.urdf`'
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`urdf/os_sensor.urdf`'
- en: '`launch/offline_cart_3d.launch`'
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`launch/offline_cart_3d.launch`'
- en: '`configuration_files/assets_writer_cart_3d.lua`'
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`configuration_files/assets_writer_cart_3d.lua`'
- en: '`configuration_files/transform.lua`'
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`configuration_files/transform.lua`'
- en: The files referenced here are for performing offline SLAM on a bag collected
    from an Ouster sensor.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 这里引用的文件是用于在从 Ouster 传感器收集的包上执行离线 SLAM 的。
- en: Now, let's step through each file and explain how it contributes to making SLAM
    work inside ROS.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们逐个分析每个文件，并解释它们如何有助于在 ROS 内部实现 SLAM。
- en: demo_3d.rviz
  id: totrans-127
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: demo_3d.rviz
- en: 'This file sets the configuration of the `rviz` GUI window. It''s based on the
    example file provided in the `cartographer_ros` source files:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 此文件设置了 `rviz` 图形用户界面窗口的配置。它基于 `cartographer_ros` 源文件中提供的示例文件：
- en: '[https://github.com/cartographer-project/cartographer_ros/blob/master/cartographer_ros/configuration_files/demo_3d.rviz](https://github.com/cartographer-project/cartographer_ros/blob/master/cartographer_ros/configuration_files/demo_3d.rviz)'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/cartographer-project/cartographer_ros/blob/master/cartographer_ros/configuration_files/demo_3d.rviz](https://github.com/cartographer-project/cartographer_ros/blob/master/cartographer_ros/configuration_files/demo_3d.rviz)'
- en: 'It specifies the frames of reference. The details of the various reference
    frames are available at the following link:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 它指定了参考框架。有关各种参考框架的详细信息，请参阅以下链接：
- en: '[https://www.ros.org/reps/rep-0105.html](https://www.ros.org/reps/rep-0105.html)'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://www.ros.org/reps/rep-0105.html](https://www.ros.org/reps/rep-0105.html)'
- en: 'The following code snippet is where you will add your frame names based on
    the sensor you are using for your project:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码片段是你在根据项目使用的传感器添加框架名称的位置：
- en: '[PRE1]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The following are the definitions of each frame from the preceding code:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是对前面代码中每个框架定义的说明：
- en: '`base_link` is the coordinate frame of your robot.'
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`base_link` 是你的机器人的坐标框架。'
- en: '`map` is the fixed coordinate frame of the world.'
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`map` 是世界的固定坐标框架。'
- en: '`odom` is a world-fixed frame that is computed based on odometry from the IMU,
    wheel encoders, visual odometry, and so on. This can drift over time, but can
    be useful in maintaining continuous smooth position information without discrete
    jumps. Cartographer uses this frame to publish non-loop-closing local SLAM results.'
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`odom` 是一个基于惯性测量单元（IMU）、轮编码器、视觉里程计等测量的世界固定框架。这可能会随时间漂移，但可以在没有离散跳跃的情况下保持连续平滑的位置信息。Cartographer
    使用这个框架来发布非闭环局部 SLAM 结果。'
- en: '`os` is the coordinate frame of the Ouster sensor or any other lidar sensor
    you have chosen for your project. This is used to transform lidar range readings
    to the `base_link` frame.'
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`os` 是 Ouster 传感器或你为项目选择的任何其他激光雷达传感器的坐标框架。这用于将激光雷达距离读数转换到 `base_link` 框架。'
- en: '`os_imu` is the coordinate frame of the IMU in the Ouster sensor or any other
    IMU you have chosen for your project. This is the frame that Cartographer will
    track during SLAM. It will also be transformed back to the `base_link` frame.'
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`os_imu` 是 Ouster 传感器或你为项目选择的任何其他 IMU 的坐标框架。这是 Cartographer 在 SLAM 期间将跟踪的框架。它也将被转换回
    `base_link` 框架。'
- en: 'Next, the hierarchy `tf` transform tree of frames is defined so that you can
    transform between any of the frames:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，定义了框架的 `tf` 变换树层次结构，以便你可以在任何框架之间进行转换：
- en: '[PRE2]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: You can see that the `os` and `os_imu` frames are both related to `base_link`
    (the vehicle frame). This means you cannot directly transform from `os` (the lidar
    frame) to `os_imu` (the IMU frame). Instead, you would transform both into the
    `base_link` frame. From there, you can transform up the `tf` tree all the way
    to the map frame. This is what Cartographer will do when building the map using
    the lidar range measurements and IMU pose measurements.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以看到 `os` 和 `os_imu` 框架都与 `base_link`（车辆框架）相关。这意味着你不能直接从 `os`（激光雷达框架）转换到 `os_imu`（IMU
    框架）。相反，你需要将两者都转换到 `base_link` 框架。从那里，你可以通过 `tf` 树转换到地图框架。这就是 Cartographer 在使用激光雷达距离测量和
    IMU 姿态测量构建地图时将执行的操作。
- en: Next, `RobotModel` is configured to display the links (meaning sensors, arms,
    or anything that has a coordinate frame on the robot that you want to track) in
    their correct pose according to the `tf` transform tree previously defined.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，`RobotModel` 被配置为根据先前定义的 `tf` 变换树显示链接（意味着传感器、机械臂或任何你想要跟踪的具有机器人坐标框架的东西）的正确姿态。
- en: 'The following code snippet shows you where to put your link names previously
    defined in the `Frames` section:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码片段显示了你在 `Frames` 部分之前定义的链接名称放置的位置：
- en: '[PRE3]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: You can see `base_link`, the `os` lidar, and `os_imu` links are added here.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以看到 `base_link`、`os` 激光雷达和 `os_imu` 链接都被添加在这里。
- en: 'Next, `rviz/PointCloud2` is mapped to the topic for the `PointCloud2` lidar
    points data, which for an Ouster lidar sensor bag file is stored in the `/os_cloud_node/points`
    topic. If you are using any other lidar sensor, you would place that lidar''s
    topic name in the `Topic:` field:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，`rviz/PointCloud2` 被映射到 `PointCloud2` 激光雷达点数据的话题，对于 Ouster 激光雷达传感器文件包，存储在
    `/os_cloud_node/points` 话题中。如果您使用任何其他激光雷达传感器，您应将那个激光雷达的话题名称放在 `Topic:` 字段中：
- en: '[PRE4]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: You can see that the topic from the lidar is mapped as a `PointCloud2` type.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以看到激光雷达的主题被映射为 `PointCloud2` 类型。
- en: That wraps up the specific configurations for the lidar and IMU sensors in `rviz`.
    Next, you will see how the `cart_3d.lua` file is modified to match your robot-specific
    layout.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 这就完成了对 `rviz` 中激光雷达和 IMU 传感器的特定配置。接下来，您将看到如何修改 `cart_3d.lua` 文件以匹配您的机器人特定布局。
- en: cart_3d.lua
  id: totrans-151
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: cart_3d.lua
- en: 'This file sets the configuration of the robot SLAM tuning parameters. A `.lua`
    file should be robot-specific, rather than bag-specific. It is based on the example
    file provided in the `cartographer_ros` source files:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 此文件设置了机器人 SLAM 调优参数的配置。`.lua` 文件应该是针对特定机器人的，而不是针对特定文件。它基于 `cartographer_ros`
    源文件中提供的示例文件：
- en: '[https://github.com/cartographer-project/cartographer_ros/blob/master/cartographer_ros/configuration_files/backpack_3d.lua](https://github.com/cartographer-project/cartographer_ros/blob/master/cartographer_ros/configuration_files/backpack_3d.lua)'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/cartographer-project/cartographer_ros/blob/master/cartographer_ros/configuration_files/backpack_3d.lua](https://github.com/cartographer-project/cartographer_ros/blob/master/cartographer_ros/configuration_files/backpack_3d.lua)'
- en: 'You are encouraged to tune the parameters in the `.lua` file based on your
    specific application. A guide for tuning is available at the following link:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 鼓励您根据具体应用调整 `.lua` 文件中的参数。调整指南可在以下链接中找到：
- en: '[https://google-cartographer-ros.readthedocs.io/en/latest/algo_walkthrough.html](https://google-cartographer-ros.readthedocs.io/en/latest/algo_walkthrough.html)'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://google-cartographer-ros.readthedocs.io/en/latest/algo_walkthrough.html](https://google-cartographer-ros.readthedocs.io/en/latest/algo_walkthrough.html)'
- en: 'Here, we will touch quickly on some options that you can configure for your
    self-driving car:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们将简要介绍您可以配置的一些自动驾驶汽车选项：
- en: '[PRE5]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The preceding options are configured for offline SLAM from the bag file provided
    on the Ouster website at the following link:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 上述选项是为从 Ouster 网站提供的文件包中离线 SLAM 配置的。
- en: '[https://data.ouster.io/downloads/os1_townhomes_cartographer.zip](https://data.ouster.io/downloads/os1_townhomes_cartographer.zip)'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://data.ouster.io/downloads/os1_townhomes_cartographer.zip](https://data.ouster.io/downloads/os1_townhomes_cartographer.zip)'
- en: '[https://data.ouster.io/downloads/os1_townhomes_cartographer.zip](https://data.ouster.io/downloads/os1_townhomes_cartographer.zip)'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://data.ouster.io/downloads/os1_townhomes_cartographer.zip](https://data.ouster.io/downloads/os1_townhomes_cartographer.zip)'
- en: 'You will need to modify the highlighted ones if you are doing online (real-time)
    SLAM on your self-driving car:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在自动驾驶汽车上进行在线（实时）SLAM，则需要修改突出显示的部分。
- en: '`odom_frame = "base_link"`: This should be set to `odom` so that Cartographer
    publishes the non-loop-closing continuous pose as `odom_frame`.'
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`odom_frame = "base_link"`: 应将其设置为 `odom`，以便 Cartographer 发布非闭环连续位姿为 `odom_frame`。'
- en: '`provide_odom_frame = false`: This should be set to `true` so that Cartographer
    knows that the `odom_frame` is published.'
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`provide_odom_frame = false`: 应将其设置为 `true`，以便 Cartographer 知道 `odom_frame`
    已发布。'
- en: '`num_laser_scans = 0`: This should be set to `1` so that the lidar sensor''s
    scan data is used straight from the sensor, rather than from point clouds from
    a bag file.'
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`num_laser_scans = 0`: 应将其设置为 `1`，以便直接从传感器使用激光雷达传感器的扫描数据，而不是从文件中的点云数据。'
- en: '`num_point_clouds = 1`: This should be set to `0` if not using a bag file and
    you are instead using a live lidar scan.'
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`num_point_clouds = 1`: 如果不使用文件包，而是使用实时激光雷达扫描，则应将其设置为 `0`。'
- en: Next, you will see how the sensor `urd` file is configured.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，您将看到传感器 `urd` 文件的配置。
- en: os_sensor.urdf
  id: totrans-167
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: os_sensor.urdf
- en: This file is used to configure the physical transforms of your self-driving
    car. Each sensor you mount on the vehicle will be a link. Think of links as rigid
    bodies, like links in a chain. Each link is rigid in a chain, but the links can
    move relative to each other and each have their own coordinate frames.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 此文件用于配置自动驾驶汽车的物理变换。您在车辆上安装的每个传感器都将是一个链接。将链接想象成链中的刚体，就像链中的链接一样。每个链接在链中都是刚性的，但链接可以相对于彼此移动，并且每个链接都有自己的坐标系。
- en: In this file, you will see that we have set up the Ouster sensor as the robot,
    `<robot name="os_sensor">`.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 在此文件中，您可以看到我们已经将 Ouster 传感器设置为机器人，`<robot name="os_sensor">`。
- en: We added links that represent the lidar coordinate frame, `<link name="os_lidar">`,
    and the IMU coordinate frame, `<link name="os_imu">`, of the sensor.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 我们添加了表示激光雷达坐标系的链接`<link name="os_lidar">`和传感器的IMU坐标系`<link name="os_imu">`。
- en: 'The following code shows how we provide the transforms from each frame back
    to the `base_link` frame:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码显示了如何提供从每个帧到`base_link`帧的变换：
- en: '[PRE6]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'You can see that `os_sensor` is placed at the center of the `base_link` coordinate
    frame, while `os_imu` and `os_lidar` are given their respective translations and
    rotations relative to `os_sensor`. These translations and rotations are provided
    in the Ouster sensor user guide under *Section 8*:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以看到`os_sensor`被放置在`base_link`坐标系的中心，而`os_imu`和`os_lidar`则相对于`os_sensor`给出了各自的平移和旋转。这些平移和旋转可以在Ouster传感器用户指南的*第8节*中找到：
- en: '[https://github.com/Krishtof-Korda/ouster_example_cartographer/blob/master/OS1-User-Guide-v1.14.0-beta.12.pdf](https://github.com/Krishtof-Korda/ouster_example_cartographer/blob/master/OS1-User-Guide-v1.14.0-beta.12.pdf)'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/Krishtof-Korda/ouster_example_cartographer/blob/master/OS1-User-Guide-v1.14.0-beta.12.pdf](https://github.com/Krishtof-Korda/ouster_example_cartographer/blob/master/OS1-User-Guide-v1.14.0-beta.12.pdf)'
- en: Next, you will learn how the launch file is configured to call all the previous
    configuration files and launch the SLAM process.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，你将学习如何配置启动文件以调用所有之前的配置文件并启动SLAM过程。
- en: offline_cart_3d.launch
  id: totrans-176
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: offline_cart_3d.launch
- en: This file is used to call all the configuration files previously discussed.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 此文件用于调用之前讨论的所有配置文件。
- en: 'It also remaps the `points2` and `imu` topics to the bag file Ouster `os_cloud_node`
    topics. If you are using another type of lidar sensor, simply use the topic name
    of that sensor in place:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 它还将`points2`和`imu`主题重新映射到Ouster `os_cloud_node`主题。如果你使用的是其他类型的激光雷达传感器，只需简单地使用该传感器的主题名称即可：
- en: '[PRE7]'
  id: totrans-179
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Next, you will learn how the `assets_writer_cart_3d.lua` file is used to save
    the map data.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，你将学习如何使用`assets_writer_cart_3d.lua`文件来保存地图数据。
- en: assets_writer_cart_3d.lua
  id: totrans-181
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: assets_writer_cart_3d.lua
- en: This file is used to configure the options for generating the fully aggregated
    point cloud that will be output in `.ply` format.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 此文件用于配置生成将输出为`.ply`格式的完全聚合点云的选项。
- en: You can set the `VOXEL_SIZE` value that should be used to downsample the points
    and only take the centroid. This is important since without down sampling, you
    would need tremendous processing cycles.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以设置用于下采样点并仅取质心的`VOXEL_SIZE`值。这很重要，因为没有下采样，你需要巨大的处理周期。
- en: VOXEL_SIZE = 5e-2
  id: totrans-184
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: VOXEL_SIZE = 5e-2
- en: You also set `min_max_range_filter`, which only keeps points that are within
    a specified range from the lidar sensor. This is usually based on the specs in
    the datasheet of the lidar sensor. The Ouster OS1 datasheet can be found on the
    Ouster ([https://outser.com/](https://outser.com/)) website.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 你还设置了`min_max_range_filter`，它只保留位于激光雷达传感器指定范围内的点。这通常基于激光雷达传感器的数据表规格。Ouster OS1数据表可以在Ouster([https://outser.com/](https://outser.com/))网站上找到。
- en: 'The following code snippet shows where you can configure the range filter options:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码片段显示了你可以配置范围过滤器选项的位置：
- en: '[PRE8]'
  id: totrans-187
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Finally, you will learn how the `transform.lua` file is used to do 2D projections.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，你将学习如何使用`transform.lua`文件来进行2D投影。
- en: The transform.lua file
  id: totrans-189
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: transform.lua文件
- en: This file is a generic file for performing transforms and is used in the previous
    file to create the 2D map x-ray and probability grid images.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 此文件是一个用于执行变换的通用文件，并在上一个文件中使用它来创建2D地图X射线和概率网格图像。
- en: Fantastic, now that you understand what each configuration file does, it's time
    for you to see it in action! The next section will guide you through running SLAM
    using a prebuilt Docker image. This will hopefully get you SLAMing quicker than
    you can say *The cars of the future will drive us!*
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了，现在你已经了解了每个配置文件的作用，是时候看到它在实际中的应用了！下一节将指导你如何使用预构建的Docker镜像运行SLAM。这可能会让你比说“未来的汽车将带我们走！”更快地开始SLAM。
- en: Docker image
  id: totrans-192
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Docker镜像
- en: A Docker image has been created for you to download. This will help to ensure
    that all the required packages are installed and minimizes the time you need to
    get everything working.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 已为你创建了一个Docker镜像供下载。这将有助于确保所有必需的软件包都已安装，并最小化你需要的时间来让一切正常工作。
- en: 'If you are running on a Linux operating system, you can simply run [install-docker.sh](http://install-docker.sh),
    located in the `ouster_example_cartographer` submodule, with the following command:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你正在Linux操作系统上运行，你可以简单地使用以下命令运行位于`ouster_example_cartographer`子模块中的[install-docker.sh](http://install-docker.sh)：
- en: '[PRE9]'
  id: totrans-195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'If you are on another operating system (Windows 10 or macOS), you can download
    and install Docker directly from their website:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用的是其他操作系统（Windows 10或macOS），你可以直接从他们的网站下载并安装Docker：
- en: '[https://docs.docker.com/get-docker/](https://docs.docker.com/get-docker/)'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://docs.docker.com/get-docker/](https://docs.docker.com/get-docker/)'
- en: 'You can verify that Docker was installed correctly with the following command:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用以下命令验证Docker是否正确安装：
- en: '[PRE10]'
  id: totrans-199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Great! Hopefully, things have gone smoothly, and you are ready to run the Docker
    image in a container. It is highly recommended to use a Linux machine with an
    Nvidia graphics card in order to make the code and Docker image work. The `run-docker.sh`
    script is provided to help start Docker with the correct options for your graphics
    processor. It is highly recommended to use a Nvidia GPU to process the SLAM efficiently.
    You can use other GPUs but the support for them is low.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 太好了！希望一切顺利，你现在可以准备在容器中运行Docker镜像。强烈建议使用带有Nvidia显卡的Linux机器，以便使代码和Docker镜像正常工作。`run-docker.sh`脚本提供了一些选项，以帮助使用正确的图形处理器启动Docker。强烈建议使用Nvidia
    GPU来高效地处理SLAM。你也可以使用其他GPU，但对其支持较低。
- en: The following section will provide you some troubleshooting steps for connecting
    Docker with your Nvidia GPU.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 以下部分将为你提供一些连接Docker与你的Nvidia GPU的故障排除步骤。
- en: Docker Nvidia troubleshooting
  id: totrans-202
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Docker Nvidia故障排除
- en: 'Depending on the Nvidia setup on your Linux machine, you may need to perform
    the following commands before connecting to your Docker container:'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 根据你的Linux机器上的Nvidia设置，在连接到你的Docker容器之前，你可能需要执行以下命令：
- en: '[PRE11]'
  id: totrans-204
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Now, you can run Docker and connect it to your GPU with the following command:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你可以使用以下命令运行Docker并将其连接到你的GPU：
- en: '[PRE12]'
  id: totrans-206
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: This script will pull the latest Docker image from Docker Hub and run the image
    either with the Nvidia runtime, if available, or simply on the CPU.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 此脚本将从Docker Hub拉取最新的Docker镜像，并在有Nvidia运行时的情况下运行该镜像，如果没有，则简单地使用CPU运行。
- en: This file also has many useful commands in the comments for running Cartographer
    in 2D or 3D mode. You will learn about 3D mode here.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 此文件在注释中也有许多有用的命令，用于在2D或3D模式下运行Cartographer。你将在这里了解3D模式。
- en: The next few sections will walk you through the steps of performing SLAM on
    the data you will download from Ouster.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来的几个部分将指导你执行从Ouster下载的数据的SLAM。
- en: Getting the sample data
  id: totrans-210
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 获取样本数据
- en: The sample data that you will be SLAMing is available from the Ouster website.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 你将要SLAM的样本数据可以从Ouster网站获取。
- en: 'Download it with the following commands:'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下命令下载：
- en: '[PRE13]'
  id: totrans-213
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Sourcing the workspace
  id: totrans-214
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 源工作空间
- en: 'You will need to source the `catkin` workspace to ensure it is set up with
    ROS:'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要source `catkin`工作空间以确保它已设置ROS：
- en: '[PRE14]'
  id: totrans-216
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Validating rosbag
  id: totrans-217
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 验证rosbag
- en: 'It is a good idea to validate `rosbag` using the built-in cartographer bag
    validation tool. This will ensure that the bag has continuous data and will produce
    results:'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 使用内置的cartographer bag验证工具验证`rosbag`是一个好主意。这将确保数据包具有连续的数据，并将产生以下结果：
- en: '[PRE15]'
  id: totrans-219
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Preparing to launch
  id: totrans-220
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 准备启动
- en: 'To run your offline SLAM on the bag, you first need to get to the launchpad:'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 要在数据包上运行你的离线SLAM，你首先需要到达发射台：
- en: '[PRE16]'
  id: totrans-222
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Launching offline on the bag
  id: totrans-223
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在数据包上启动离线
- en: 'Now, you are ready to launch the offline SLAM. This will create a `.pbstream`
    file that will be used later to write your assets, such as the following:'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你已准备好启动离线SLAM。这将创建一个`.pbstream`文件，稍后将用于写入你的资产，例如以下内容：
- en: '`.ply`, the point cloud file'
  id: totrans-225
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.ply`，点云文件'
- en: A 2D x-ray image of the mapped space
  id: totrans-226
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 已映射空间的二维X射线图像
- en: A 2D probability grid image of an open versus an occupied area
  id: totrans-227
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个开放区域与占用区域的二维概率网格图像
- en: 'The following command will launch the offline SLAM process on your bag file:'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 以下命令将在你的数据包文件上启动离线SLAM过程：
- en: '[PRE17]'
  id: totrans-229
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'You should see an `rviz` window open that looks something like that in the
    following figure:'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该会看到一个打开的`rviz`窗口，其外观类似于以下图示：
- en: '![Figure 11.5 – The rviz window Cartographer launch](img/Figure_11.5_B16322.jpg)'
  id: totrans-231
  prefs: []
  type: TYPE_IMG
  zh: '![图11.5 – Cartographer启动的rviz窗口](img/Figure_11.5_B16322.jpg)'
- en: Figure 11.5 – The rviz window Cartographer launch
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.5 – Cartographer启动的rviz窗口
- en: Now, you can sit back and watch in wonder as Cartographer meticulously performs
    SLAM.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你可以坐下来，惊奇地观看Cartographer精心执行SLAM。
- en: First, it will make smaller local submaps. Then, it will scan match the submap
    to the global map. You will notice that it snaps the point cloud every few seconds
    when it has collected enough data to match the global map.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，它将生成较小的局部子图。然后，它将扫描匹配子图到全局地图。你会注意到，当它收集到足够的数据以匹配全局地图时，每几秒钟就会捕捉一次点云。
- en: When the process is complete, you will have a file in the `/root/bags` folder
    named `os1_townhomes_cartographer.bag.pbstream`. You will use this file to write
    your assets.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 当过程完成后，你将在`/root/bags`文件夹中找到一个名为`os1_townhomes_cartographer.bag.pbstream`的文件。你将使用这个文件来编写你的资产。
- en: Writing your sweet, sweet assets
  id: totrans-236
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 编写你的甜蜜，甜蜜的资产
- en: I hope you are ready because you are about to get the final product from SLAM
    – a map of some random street you have never seen before. Just what you dreamed
    of, right?
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 我希望你已经准备好了，因为你即将从SLAM中获得最终产品——一张你从未见过的随机街道地图。这不正是你梦寐以求的吗？
- en: Run the following command to collect your prize!
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 运行以下命令来领取你的奖品！
- en: '[PRE18]'
  id: totrans-239
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: This will take a while; go grab a bite of your favorite comfort food. We will
    see you back here in an hour.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 这需要一些时间；去吃点你最喜欢的舒适食品。一个小时后我们在这里见。
- en: Welcome back! Feast your eyes on your prizes!
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 欢迎回来！欣赏你的奖品吧！
- en: Opening your first prize
  id: totrans-242
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 打开你的第一个奖品
- en: Voila! Your very own x-ray 2D map!
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 哇！你自己的X射线2D地图！
- en: '[PRE19]'
  id: totrans-244
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'This is how the output appears:'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是输出结果：
- en: '![Figure 11.6 – 2D x-ray map of townhomes](img/Figure_11.6_B16322.jpg)'
  id: totrans-246
  prefs: []
  type: TYPE_IMG
  zh: '![图11.6 – 住宅区的2D X射线地图](img/Figure_11.6_B16322.jpg)'
- en: Figure 11.6 – 2D x-ray map of townhomes
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.6 – 住宅区的2D X射线地图
- en: Opening your second prize
  id: totrans-248
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 打开你的第二个奖品
- en: Shazam! Your very own probability grid 2D map!
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 哇！你自己的概率网格2D地图！
- en: '[PRE20]'
  id: totrans-250
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'This is how the output appears:'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是输出结果：
- en: '![Figure 11.7 – 2D probability grid map of townhomes](img/Figure_11.7_B16322.jpg)'
  id: totrans-252
  prefs: []
  type: TYPE_IMG
  zh: '![图11.7 – 住宅区的2D概率网格地图](img/Figure_11.7_B16322.jpg)'
- en: Figure 11.7 – 2D probability grid map of townhomes
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.7 – 住宅区的2D概率网格地图
- en: Your final prize
  id: totrans-254
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 你的最终奖品
- en: You will find a file in the `/root/bags` folder that is named `os1_townhomes_cartographer.bag_points.ply`.
    This prize will take a little more effort to truly appreciate.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 你将在`/root/bags`文件夹中找到一个名为`os1_townhomes_cartographer.bag_points.ply`的文件。这个奖品需要更多的努力才能真正欣赏。
- en: 'You can use any tool that is capable of opening a `.ply` file. CloudCompare
    is a **FOSS** (that is, a **free open source software**) tool for this and can
    be downloaded from the following link:'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用任何能够打开`.ply`文件的工具。CloudCompare是用于此目的的**FOSS**（即**免费开源软件**）工具，可以从以下链接下载：
- en: '[https://www.danielgm.net/cc/](https://www.danielgm.net/cc/)'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://www.danielgm.net/cc/](https://www.danielgm.net/cc/)'
- en: You can also use CloudCompare to save your `.ply` file into other formats, such
    as XYZ, XYZRGB, CGO, ASC, CATIA ASC, PLY, LAS, PTS, or PCD.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以使用CloudCompare将你的`.ply`文件保存为其他格式，例如XYZ、XYZRGB、CGO、ASC、CATIA ASC、PLY、LAS、PTS或PCD。
- en: '`unitycoder` has good instructions for making the conversion available at the
    following link:'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: '`unitycoder`在以下链接提供了制作转换的良好说明：'
- en: '[https://github.com/unitycoder/UnityPointCloudViewer/wiki/Converting-Points-Clouds-with-CloudCompare](https://github.com/unitycoder/UnityPointCloudViewer/wiki/Converting-Points-Clouds-with-CloudCompare)'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/unitycoder/UnityPointCloudViewer/wiki/Converting-Points-Clouds-with-CloudCompare](https://github.com/unitycoder/UnityPointCloudViewer/wiki/Converting-Points-Clouds-with-CloudCompare)'
- en: 'This is how the output appears:'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是输出结果：
- en: '![Figure 11.8 – Point cloud 3D map viewed in CloudCompare](img/Figure_11.8_B16322.jpg)'
  id: totrans-262
  prefs: []
  type: TYPE_IMG
  zh: '![图11.8 – 在CloudCompare中查看的点云3D地图](img/Figure_11.8_B16322.jpg)'
- en: Figure 11.8 – Point cloud 3D map viewed in CloudCompare
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.8 – 在CloudCompare中查看的点云3D地图
- en: 'Have a look at *Figure 11.8* and *Figure 11.9*, which show what the 3D map
    of points looks like using the CloudCompare viewer:'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 看看*图11.8*和*图11.9*，它们展示了使用CloudCompare查看器查看的3D点云地图的样子：
- en: '![Figure 11.9 – Point cloud 3D map viewed in CloudCompare, top-view](img/Figure_11.9_B16322.jpg)'
  id: totrans-265
  prefs: []
  type: TYPE_IMG
  zh: '![图11.9 – 在CloudCompare中查看的点云3D地图，俯视图](img/Figure_11.9_B16322.jpg)'
- en: Figure 11.9 – Point cloud 3D map viewed in CloudCompare, top-view
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.9 – 在CloudCompare中查看的点云3D地图，俯视图
- en: Congratulations on making your first of what we hope are many maps! This is
    just the beginning of your journey and we can't wait to see what you make with
    your newfound skills! Next, we will summarize everything you learned.
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜你制作了你的第一张地图，我们希望这只是你旅程的开始，我们迫不及待地想看看你将用你新获得的技术创造出什么！接下来，我们将总结你所学到的所有内容。
- en: Summary
  id: totrans-268
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: Wow, you have come a long way in this chapter and book. You began with nothing
    but a mobile phone and a blue GPS dot. You traveled across the globe to Russia
    and found the life-juice at the Monkey Face. You grabbed some snacks by SLAMing
    your way through your Cimmerian dark home. You learned the difference between
    maps and localization, and the various types of each. You picked up some open
    source tools and lashed them to your adventure belt for future use.
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 哇，你在这一章和这本书中已经走得很远了。你开始时一无所有，只有一部手机和一个蓝色的GPS点。你穿越全球来到俄罗斯，在猴脸找到了生命的精华。你通过SLAM的方式穿越你的基米里亚黑暗家园，抓了一些小吃。你学习了地图和定位之间的区别，以及每种类型的各种类型。你挑选了一些开源工具，并将它们系在你的冒险带上，以备将来使用。
- en: You also learned how to apply the open source Cartographer on Ouster OS1-128
    lidar sensor data, coupled with the built-in IMU to generate dense and tangible
    maps of some really nice townhomes that you manipulated using CloudCompare. Now
    you know how to create maps and can go out and map your own spaces and localize
    within them! The world is your Ouster (pardon me, oyster)! We can't wait to see
    what you build next with your creativity and knowhow!
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 你还学会了如何将开源的Cartographer应用于Ouster OS1-128激光雷达传感器数据，并结合内置的IMU生成一些非常漂亮的联排别墅的密集和实体地图，你使用CloudCompare进行了操作。现在你知道如何创建地图，可以出去绘制你自己的空间并在其中定位！世界是你的Ouster（请原谅我，牡蛎）！我们迫不及待地想看看你将用你的创造力和知识构建出什么！
- en: We really hope that you enjoyed learning with us; we certainly enjoyed sharing
    this knowledge with you and hope you are inspired to build the future!
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 我们真心希望你喜欢和我们一起学习；我们当然喜欢与你分享这些知识，并希望你能受到启发去构建未来！
- en: Questions
  id: totrans-272
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: 'You should be able to answer the following questions now:'
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你应该能够回答以下问题：
- en: What is the difference between mapping and localization?
  id: totrans-274
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 地图绘制和定位之间的区别是什么？
- en: What frame does Cartographer typically use as the tracking frame?
  id: totrans-275
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Cartographer通常使用哪个框架作为跟踪框架？
- en: Why is SLAM needed?
  id: totrans-276
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为什么需要SLAM？
- en: In which file do you set `min_max_range_filter`?
  id: totrans-277
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你在哪个文件中设置了`min_max_range_filter`？
- en: Further reading
  id: totrans-278
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'W. Hess, D. Kohler, H. Rapp, and D. Andor, *Real-Time Loop Closure in 2D LIDAR
    SLAM*: [https://opensource.googleblog.com/2016/10/introducing-cartographer.html](https://opensource.googleblog.com/2016/10/introducing-cartographer.html)
    ([https://research.google/pubs/pub45466/](https://research.google/pubs/pub45466/)),
    in *Robotics and Automation (ICRA)*, 2016 IEEE International Conference on. IEEE,
    2016\. pp. 1271–1278.'
  id: totrans-279
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: W. Hess, D. Kohler, H. Rapp, 和 D. Andor，*2D LIDAR SLAM中的实时闭环检测*：[https://opensource.googleblog.com/2016/10/introducing-cartographer.html](https://opensource.googleblog.com/2016/10/introducing-cartographer.html)
    ([https://research.google/pubs/pub45466/](https://research.google/pubs/pub45466/))，在*机器人学与自动化（ICRA）*，2016年IEEE国际会议。IEEE，2016。第1271-1278页。
- en: 'Cartographer: [https://github.com/cartographer-project/cartographer_ros](https://github.com/cartographer-project/cartographer_ros)'
  id: totrans-280
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 地图绘制器：[https://github.com/cartographer-project/cartographer_ros](https://github.com/cartographer-project/cartographer_ros)
- en: 'More on Cartographer: [https://google-cartographer-ros.readthedocs.io/en/latest/compilation.html](https://google-cartographer-ros.readthedocs.io/en/latest/compilation.html)'
  id: totrans-281
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更多关于Cartographer的信息：[https://google-cartographer-ros.readthedocs.io/en/latest/compilation.html](https://google-cartographer-ros.readthedocs.io/en/latest/compilation.html)
- en: 'Localization types: [https://www.cpp.edu/~ftang/courses/CS521/notes/Localization.pdf](https://www.cpp.edu/~ftang/courses/CS521/notes/Localization.pdf)'
  id: totrans-282
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 本地化类型：[https://www.cpp.edu/~ftang/courses/CS521/notes/Localization.pdf](https://www.cpp.edu/~ftang/courses/CS521/notes/Localization.pdf)
- en: 'RGB-D SLAM: [https://felixendres.github.io/rgbdslam_v2/](https://felixendres.github.io/rgbdslam_v2/)'
  id: totrans-283
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RGB-D SLAM：[https://felixendres.github.io/rgbdslam_v2/](https://felixendres.github.io/rgbdslam_v2/)
- en: 'Probabilistic algorithms in robotics: [http://robots.stanford.edu/papers/thrun.probrob.pdf](http://robots.stanford.edu/papers/thrun.probrob.pdf)'
  id: totrans-284
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 机器人学中的概率算法：[http://robots.stanford.edu/papers/thrun.probrob.pdf](http://robots.stanford.edu/papers/thrun.probrob.pdf)
