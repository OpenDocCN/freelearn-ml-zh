- en: '1'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '1'
- en: Exploring Data for Machine Learning
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索机器学习中的数据
- en: Imagine embarking on a journey through an expansive ocean of data, where within
    this vastness are untold stories, patterns, and insights waiting to be discovered.
    Welcome to the world of data exploration in **machine learning** (**ML**). In
    this chapter, I encourage you to put on your analytical lenses as we embark on
    a thrilling quest. Here, we will delve deep into the heart of your data, armed
    with powerful techniques and heuristics, to uncover its secrets. As you embark
    on this adventure, you will discover that beneath the surface of raw numbers and
    statistics, there exists a treasure trove of patterns that, once revealed, can
    transform your data into a valuable asset. The journey begins with **exploratory
    data analysis** (**EDA**), a crucial phase where we unravel the mysteries of data,
    laying the foundation for automated labeling and, ultimately, building smarter
    and more accurate ML models. In this age of **generative AI**, the preparation
    of quality training data is essential to the fine-tuning of domain-specific **large
    language models (LLMs)**. Fine-tuning involves the curation of additional domain-specific
    labeled data for training publicly available LLMs. So, fasten your seatbelts for
    a captivating voyage into the art and science of data exploration for **data labeling**.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下踏上一次穿越浩瀚数据海洋的旅程，在这个广阔的海洋中，有无数的故事、模式和洞察等待被发现。欢迎来到机器学习（**ML**）中的数据探索世界。在本章中，我鼓励你们戴上分析的眼镜，开始一段激动人心的探险。在这里，我们将深入数据的内心，凭借强大的技术和启发式方法，揭示其秘密。当你开始这段冒险时，你会发现，在原始数字和统计数据之下，存在着一个宝藏般的模式，一旦揭示，就能将你的数据转化为有价值的资产。这次旅程从**探索性数据分析**（**EDA**）开始，这是一个至关重要的阶段，我们在这里揭开数据的神秘面纱，为自动标记和最终构建更智能、更准确的机器学习模型奠定基础。在**生成式人工智能**时代，准备高质量的训练数据对于特定领域的**大型语言模型（LLMs）**的微调至关重要。微调涉及为公开可用的LLMs收集额外的特定领域标记数据。所以，系好安全带，准备开始一段引人入胜的旅程，探索数据探索的艺术和科学，特别是针对**数据标记**。
- en: 'First, let’s start with the question: What is data exploration? It is the initial
    phase of data analysis, where raw data is examined, visualized, and summarized
    to uncover patterns, trends, and insights. It serves as a crucial step in understanding
    the nature of the data before applying advanced analytics or ML techniques.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们从问题开始：什么是数据探索？这是数据分析的初始阶段，其中对原始数据进行检查、可视化和总结，以揭示模式、趋势和洞察。它在应用高级分析或机器学习技术之前，理解数据的本质方面起着至关重要的作用。
- en: In this chapter, we will explore tabular data using various libraries and packages
    in Python, including Pandas, NumPy, and Seaborn. We will also plot different bar
    charts and histograms to visualize data to find the relationships between various
    features, which is useful for labeling data. We will be exploring the *Income*
    dataset located in this book’s GitHub repository (a link for which is located
    in the *Technical requirements* section). A good understanding of the data is
    necessary in order to define business rules, identify matching patterns, and,
    subsequently, label the data using Python labeling functions.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将使用Python中的各种库和包来探索表格数据，包括Pandas、NumPy和Seaborn。我们还将绘制不同的条形图和直方图来可视化数据，以找到各种特征之间的关系，这对于数据标记很有用。我们将探索本书GitHub仓库中（位于*技术要求*部分）的*Income*数据集。为了定义业务规则、识别匹配模式，并随后使用Python标记函数标记数据，对数据的良好理解是必要的。
- en: By the end of this chapter, we will be able to generate summary statistics for
    the given dataset. We will derive aggregates of the features for each target group.
    We will also learn how to perform univariate and bivariate analyses of the features
    in the given dataset. We will create a report using the `ydata-profiling` library.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 到本章结束时，我们将能够为给定数据集生成摘要统计。我们将为每个目标组推导特征的聚合。我们还将学习如何对给定数据集中的特征进行单变量和多变量分析。我们将使用
    `ydata-profiling` 库创建一份报告。
- en: 'We’re going to cover the following main topics:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将涵盖以下主要主题：
- en: EDA and data labeling
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: EDA 和数据标记
- en: Summary statistics and data aggregates with Pandas
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Pandas 生成摘要统计和数据聚合
- en: Data visualization with Seaborn for univariate and bivariate analysis
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Seaborn 进行单变量和多变量数据分析的可视化
- en: Profiling data using the `ydata-profiling` library
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `ydata-profiling` 库进行数据概要分析
- en: Unlocking insights from data with OpenAI and LangChain
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 OpenAI 和 LangChain 从数据中解锁洞察
- en: Technical requirements
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'One of the following Python IDE and software tools needs to be installed before
    running the notebook in this chapter:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在运行本章中的笔记本之前，需要安装以下Python IDE和软件工具之一：
- en: '**Anaconda Navigator**: Download and install the open source Anaconda Navigator
    from the following URL:'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Anaconda Navigator**：从以下URL下载并安装开源Anaconda Navigator：'
- en: '[https://docs.anaconda.com/navigator/install/#system-requirements](https://docs.anaconda.com/navigator/install/#system-requirements)'
  id: totrans-15
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[https://docs.anaconda.com/navigator/install/#system-requirements](https://docs.anaconda.com/navigator/install/#system-requirements)'
- en: '**Jupyter Notebook**: Download and install Jupyter Notebook:'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Jupyter Notebook**：下载并安装Jupyter Notebook：'
- en: '[https://jupyter.org/install](https://jupyter.org/install)'
  id: totrans-17
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[https://jupyter.org/install](https://jupyter.org/install)'
- en: We can also use open source, online Python editors such as **Google Colab**
    ([https://colab.research.google.com/](https://colab.research.google.com/)) or
    **Replit** ([https://replit.com/](https://replit.com/))
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们还可以使用开源的在线Python编辑器，如**Google Colab** ([https://colab.research.google.com/](https://colab.research.google.com/))或**Replit**
    ([https://replit.com/](https://replit.com/))
- en: 'The Python source code and the entire notebook created in this chapter are
    available in this book’s GitHub repository:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中创建的Python源代码和整个笔记本都可在本书的GitHub仓库中找到：
- en: '[https://github.com/PacktPublishing/Data-Labeling-in-Machine-Learning-with-Python](https://github.com/PacktPublishing/Data-Labeling-in-Machine-Learning-with-Python)'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/PacktPublishing/Data-Labeling-in-Machine-Learning-with-Python](https://github.com/PacktPublishing/Data-Labeling-in-Machine-Learning-with-Python)'
- en: You also need to create an Azure account and add an OpenAI resource for working
    with generative AI. To sign up for a free Azure subscription, visit [https://azure.microsoft.com/free](https://azure.microsoft.com/free).
    To request access to the Azure OpenAI service, visit [https://aka.ms/oaiapply](https://aka.ms/oaiapply).
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 您还需要创建一个Azure账户，并为使用生成式AI添加一个OpenAI资源。要注册免费的Azure订阅，请访问[https://azure.microsoft.com/free](https://azure.microsoft.com/free)。要申请访问Azure
    OpenAI服务，请访问[https://aka.ms/oaiapply](https://aka.ms/oaiapply)。
- en: 'Once you have provisioned the Azure OpenAI service, deploy the LLM model –
    either GPT-3.5-Turbo or GPT 4.0 – from Azure OpenAI Studio. Then copy the keys
    for OpenAI from OpenAI Studio and set up the following environment variables:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您已配置Azure OpenAI服务，请从Azure OpenAI Studio部署LLM模型——无论是GPT-3.5-Turbo还是GPT 4.0。然后从OpenAI
    Studio复制OpenAI的密钥，并设置以下环境变量：
- en: '[PRE0]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Your endpoint should look like this: [https://YOUR_RESOURCE_NAME.openai.azure.com/](https://YOUR_RESOURCE_NAME.openai.azure.com/).'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 您的端点应如下所示：[https://YOUR_RESOURCE_NAME.openai.azure.com/](https://YOUR_RESOURCE_NAME.openai.azure.com/)。
- en: EDA and data labeling
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: EDA和数据标注
- en: In this section, we will gain an understanding of what EDA is. We will see why
    we need to perform it and discuss its advantages. We will also look at the life
    cycle of an ML project and learn about the role of data labeling in this cycle.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将了解EDA是什么。我们将探讨为什么需要执行它，并讨论其优势。我们还将查看机器学习项目的生命周期，并了解数据标注在这个周期中的作用。
- en: EDA comprises **data discovery**, **data collection**, **data cleaning**, and
    **data exploration**. These steps are part of any machine learning project. The
    data exploration step includes tasks such as data visualization, summary statistics,
    correlation analysis, and data distribution analysis. We will dive deep into these
    steps in the upcoming sections.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: EDA包括**数据发现**、**数据收集**、**数据清洗**和**数据探索**。这些步骤是任何机器学习项目的组成部分。数据探索步骤包括数据可视化、汇总统计、相关性分析和数据分布分析等任务。我们将在接下来的章节中深入探讨这些步骤。
- en: 'Here are some real-world examples of EDA:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一些EDA的实际世界示例：
- en: '**Customer churn analysis**: Suppose you work for a telecommunications company
    and you want to understand why customers are churning (canceling their subscriptions);
    in this case, conducting EDA on customer churn data can provide valuable insights.'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**客户流失分析**：假设您为一家电信公司工作，并想了解为什么客户会流失（取消他们的订阅）；在这种情况下，对客户流失数据进行EDA可以提供有价值的见解。'
- en: '**Income data analysis**: EDA on the *Income* dataset with predictive features
    such as education, employment status, and marital status helps to predict whether
    the salary of a person is greater than $50K.'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**收入数据分析**：对*Income*数据集进行EDA，包括教育、就业状态和婚姻状态等预测特征，有助于预测一个人的薪水是否超过$50K。'
- en: EDA is a critical process for any ML or data science project, and it allows
    us to understand the data and gain some valuable insights into the data domain
    and business.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: EDA对于任何机器学习或数据科学项目都是一个关键过程，它使我们能够了解数据，并在数据领域和业务中获得一些有价值的见解。
- en: In this chapter, we will use various Python libraries, such as Pandas, and call
    the `describe` and `info` functions on Pandas to generate data summaries. We will
    discover anomalies in the data and any outliers in the given dataset. We will
    also figure out various data types and any missing values in the data. We will
    understand whether any data type conversions are required, such as converting
    `string` to `float`, for performing further analysis. We will also analyze the
    data formats and see whether any transformations are required to standardize them,
    such as the date format. We will analyze the counts of different labels and understand
    whether the dataset is balanced or imbalanced. We will understand the relationships
    between various features in the data and calculate the correlations between features.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将使用各种Python库，如Pandas，并在Pandas上调用`describe`和`info`函数以生成数据摘要。我们将发现数据中的异常和给定数据集中的任何异常值。我们还将确定各种数据类型以及数据中的任何缺失值。我们将了解是否需要进行任何数据类型转换，例如将`字符串`转换为`浮点数`，以进行进一步分析。我们还将分析数据格式，并查看是否需要进行任何转换以标准化它们，例如日期格式。我们将分析不同标签的计数，并了解数据集是否平衡或不平衡。我们将了解数据中各种特征之间的关系，并计算特征之间的相关性。
- en: To summarize, we will understand the patterns in the given dataset and also
    identify the relationships between various features in the data samples. Finally,
    we will come up with a strategy and domain rules for data cleaning and transformation.
    This helps us to predict labels for unlabeled data.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 总结来说，我们将理解给定数据集中的模式，并识别数据样本中各种特征之间的关系。最后，我们将制定数据清洗和转换的策略和领域规则。这有助于我们预测未标记数据的标签。
- en: We will plot various data visualizations using Python libraries such as `seaborn`
    and `matplotlib`. We will create bar charts, histograms, heatmaps, and various
    charts to visualize the importance of features in the dataset and how they depend
    on each other.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用Python库如`seaborn`和`matplotlib`绘制各种数据可视化。我们将创建条形图、直方图、热图和各种图表，以可视化数据集中特征的重要性以及它们之间的相互依赖关系。
- en: Understanding the ML project life cycle
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解机器学习项目生命周期
- en: 'The following are the major steps in an ML project:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一个机器学习项目的主要步骤：
- en: '![Figure 1.1 – ML project life cycle diagram](img/B18944_01_01.jpg)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![图1.1 – 机器学习项目生命周期图](img/B18944_01_01.jpg)'
- en: Figure 1.1 – ML project life cycle diagram
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.1 – 机器学习项目生命周期图
- en: Let’s look at them in detail.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们详细看看它们。
- en: Defining the business problem
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 定义业务问题
- en: The first step in every ML project is to understand the business problem and
    define clear goals that can be measured at the end of the project.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 每个机器学习项目的第一步是理解业务问题并定义在项目结束时可以衡量的明确目标。
- en: Data discovery and data collection
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据发现和数据收集
- en: In this step, you identify and gather potential data sources that may be relevant
    to your project’s objectives. This involves finding datasets, databases, APIs,
    or any other sources that may contain the data needed for your analysis and modeling.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一步中，你将识别和收集可能与你的项目目标相关的潜在数据源。这包括找到数据集、数据库、API或任何可能包含你分析建模所需数据的其他来源。
- en: The goal of **data discovery** is to understand the landscape of available data
    and assess its quality, relevance, and potential limitations.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '**数据发现**的目标是了解可用数据的格局，评估其质量、相关性和潜在限制。'
- en: Data discovery can also involve discussions with domain experts and stakeholders
    to identify what data is essential for solving business problems or achieving
    the project’s goals.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 数据发现也可能涉及与领域专家和利益相关者的讨论，以确定解决业务问题或实现项目目标所必需的数据。
- en: After identifying various sources for data, data engineers will develop data
    pipelines to extract and load the data to the target data lake and perform some
    data preprocessing tasks such as data cleaning, de-duplication, and making data
    readily available to ML engineers and data scientists for further processing.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在确定数据来源后，数据工程师将开发数据管道以提取和加载数据到目标数据湖，并执行一些数据预处理任务，例如数据清洗、去重以及使数据便于机器学习工程师和数据科学家进一步处理。
- en: Data exploration
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据探索
- en: '**Data exploration** follows data discovery and is primarily focused on understanding
    the data, gaining insights, and identifying patterns or anomalies.'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '**数据探索**紧随数据发现之后，主要关注理解数据、获取洞察力以及识别模式或异常。'
- en: During data exploration, you may perform basic statistical analysis, create
    data visualizations, and conduct initial observations to understand the data’s
    characteristics.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 在数据探索过程中，你可能需要进行基本的统计分析，创建数据可视化，并进行初步观察以了解数据的特征。
- en: Data exploration can also involve identifying missing values, outliers, and
    potential data quality issues, but it typically does not involve making systematic
    changes to the data.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 数据探索还可能包括识别缺失值、异常值和潜在的数据质量问题，但它通常不涉及对数据进行系统性的更改。
- en: During data exploration, you assess the available labeled data and determine
    whether it’s sufficient for your ML task. If you find that the labeled data is
    small and insufficient for model training, you may identify the need for additional
    labeled data.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在数据探索过程中，你评估可用的标注数据，并确定它是否足够用于你的机器学习任务。如果你发现标注数据量小且不足以进行模型训练，你可能需要识别出需要额外标注数据的需求。
- en: Data labeling
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据标注
- en: '**Data labeling** involves acquiring or generating more labeled examples to
    supplement your training dataset. You may need to manually label additional data
    points or use programming techniques such as data augmentation to expand your
    labeled dataset. The process of assigning labels to data samples is called **data
    annotation** or data labeling.'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '**数据标注**涉及获取或生成更多标注示例以补充你的训练数据集。你可能需要手动标注额外的数据点或使用编程技术，如数据增强，来扩展你的标注数据集。将标签分配给数据样本的过程称为**数据标注**或数据标注。'
- en: Most of the time, it is too expensive or time-consuming to outsource the manual
    data labeling task. Also, data is often not allowed to be shared with external
    third-party organizations due to data privacy. So, automating the data labeling
    process with an in-house development team using Python helps to label the data
    quickly and at an affordable cost.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数情况下，外包手动数据标注任务既昂贵又耗时。此外，由于数据隐私问题，数据通常不允许与外部第三方组织共享。因此，使用Python和内部开发团队自动化数据标注过程有助于快速且经济地标注数据。
- en: Most of the data science books available on the market are lacking information
    about this important step. So, this book aims to address the various methods to
    programmatically label data using Python as well as the annotation tools available
    on the market.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 市面上大多数数据科学书籍都缺乏关于这一重要步骤的信息。因此，本书旨在介绍使用Python编程以及市场上可用的标注工具对数据进行程序化标注的各种方法。
- en: After obtaining a sufficient amount of labeled data, you proceed with traditional
    data preprocessing tasks, such as handling missing values, encoding features,
    scaling, and feature engineering.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在获得足够数量的标注数据后，你将进行传统的数据预处理任务，例如处理缺失值、编码特征、缩放和特征工程。
- en: Model training
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 模型训练
- en: Once the data is adequately prepared, then that dataset is fed into the model
    by ML engineers to train the model.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦数据准备充分，ML工程师将数据集输入模型以进行模型训练。
- en: Model evaluation
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 模型评估
- en: After the model is trained, the next step is to evaluate the model on a validation
    dataset to see how good the model is and avoid bias and overfitting.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 模型训练完成后，下一步是在验证数据集上评估模型，以了解模型的好坏，并避免偏差和过拟合。
- en: You can evaluate the model’s performance using various metrics and techniques
    and iterate on the model-building process as needed.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用各种指标和技术来评估模型的表现，并根据需要迭代模型构建过程。
- en: Model deployment
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 模型部署
- en: Finally, you deploy your model into production and monitor for continuous improvement
    using **ML Operations** (**MLOps**). MLOps aims to streamline the process of taking
    ML models to production and maintaining and monitoring them.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，你将模型部署到生产环境中，并使用**机器学习操作**（**MLOps**）进行持续改进。MLOps旨在简化将机器学习模型推向生产并维护和监控它们的过程。
- en: In this book, we will focus on data labeling. In a real-world project, the datasets
    that sources provide us with for analytics and ML are not clean and not labeled.
    So, we need to explore unlabeled data to understand correlations and patterns
    and help us define the rules for data labeling using Python labeling functions.
    Data exploration helps us to understand the level of cleaning and transformation
    required before starting data labeling and model training.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，我们将重点关注数据标注。在实际项目中，为我们提供用于分析和机器学习的数据集通常是不干净且未标注的。因此，我们需要探索未标注数据以了解相关性和模式，并帮助我们使用Python标注函数定义数据标注的规则。数据探索帮助我们了解在开始数据标注和模型训练之前所需的清理和转换程度。
- en: This is where Python helps us to explore and perform a quick analysis of raw
    data using various libraries (such as Pandas, Seaborn, and ydata-profiling libraries),
    otherwise known as EDA.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是 Python 如何帮助我们使用各种库（如 Pandas、Seaborn 和 ydata-profiling 库）探索和快速分析原始数据，这些库也被称为
    EDA。
- en: Introducing Pandas DataFrames
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍 Pandas DataFrame
- en: 'Pandas is an open source library used for data analysis and manipulation. It
    provides various functions for data wrangling, cleaning, and merging operations.
    Let us see how to explore data using the `pandas` library. For this, we will use
    the *Income* dataset located on GitHub and explore it to find the following insights:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: Pandas 是一个开源库，用于数据分析和处理。它提供了各种数据整理、清洗和合并操作的功能。让我们看看如何使用 `pandas` 库来探索数据。为此，我们将使用位于
    GitHub 上的 *Income* 数据集，并探索它以找到以下见解：
- en: How many unique values are there for age, education, and profession in the *Income*
    dataset? What are the observations for each unique age?
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 *收入* 数据集中，年龄、教育和职业有多少个唯一值？每个唯一年龄的观测值是什么？
- en: Summary statistics such as mean value and quantile values for each feature.
    What is the average age of the adult for the income range > $50K?
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个特征的均值和分位数等汇总统计信息。对于收入范围 > $50K 的成年人，平均年龄是多少？
- en: How is income dependent on independent variables such as age, education, and
    profession using bivariate analysis?
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何使用双变量分析来了解收入与年龄、教育、职业等独立变量之间的关系？
- en: Let us first read the data into a DataFrame using the `pandas` library.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们首先使用 `pandas` 库将数据读入 DataFrame。
- en: 'A DataFrame is a structure that represents two-dimensional data with columns
    and rows, and it is similar to a SQL table. To get started, ensure that you create
    the `requirements.txt` file and add the required Python libraries as follows:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: DataFrame 是一种表示具有列和行的二维数据的结构，它类似于 SQL 表。要开始，请确保您创建了 `requirements.txt` 文件，并添加了所需的
    Python 库，如下所示：
- en: '![Figure 1.2 – Contents of the requirements.txt file](img/B18944_01_02..jpg)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.2 – requirements.txt 文件的内容](img/B18944_01_02..jpg)'
- en: Figure 1.2 – Contents of the requirements.txt file
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.2 – requirements.txt 文件的内容
- en: 'Next, run the following command from your Python notebook cell to install the
    libraries added in the `requirements.txt` file:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，从您的 Python 笔记本单元格中运行以下命令以安装 `requirements.txt` 文件中添加的库：
- en: '[PRE1]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Now, let’s import the required Python libraries using the following `import`
    statements:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们使用以下 `import` 语句导入所需的 Python 库：
- en: '[PRE2]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Next, in the following code snippet, we are reading the `adult_income.csv`
    file and writing to the DataFrame (`df`):'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下代码片段中，我们正在读取 `adult_income.csv` 文件并将其写入 DataFrame (`df`)：
- en: '[PRE3]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Now the data is loaded to `df`.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 现在数据已加载到 `df`。
- en: 'Let us see the size of the DataFrame using the following code snippet:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用以下代码片段查看 DataFrame 的大小：
- en: '[PRE4]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'We will see the shape of the DataFrame as a result:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将看到以下结果作为 DataFrame 的形状：
- en: '![Figure 1.3 – Shape of the DataFrame](img/B18944_01_03..jpg)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.3 – DataFrame 的形状](img/B18944_01_03..jpg)'
- en: Figure 1.3 – Shape of the DataFrame
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.3 – DataFrame 的形状
- en: So, we can see that there are 32,561 observations (rows) and 15 features (columns)
    in the dataset.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们可以看到数据集中有 32,561 个观测值（行）和 15 个特征（列）。
- en: 'Let us print the 15 column names in the dataset:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们打印数据集中的 15 个列名：
- en: '[PRE5]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'We get the following result:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 我们得到以下结果：
- en: '![Figure 1.4 – The names of the columns in our dataset](img/B18944_01_04..jpg)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.4 – 我们数据集中的列名](img/B18944_01_04..jpg)'
- en: Figure 1.4 – The names of the columns in our dataset
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.4 – 我们数据集中的列名
- en: 'Now, let’s see the first five rows of the data in the dataset with the following
    code:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们使用以下代码查看数据集中的前五行数据：
- en: '[PRE6]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'We can see the output in *Figure 1**.5*:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在 *图 1**.5* 中看到输出：
- en: '![Figure 1.5 – The first five rows of data](img/B18944_01_05..jpg)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.5 – 数据的前五行](img/B18944_01_05..jpg)'
- en: Figure 1.5 – The first five rows of data
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.5 – 数据的前五行
- en: 'Let’s see the last five rows of the dataset using `tail`, as shown in the following
    figure:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用 `tail` 查看数据集的最后五行，如图所示：
- en: '[PRE7]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: We will get the following output.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将得到以下输出。
- en: '![Figure 1.6 – The last five rows of data](img/B18944_01_06..jpg)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.6 – 数据的最后五行](img/B18944_01_06..jpg)'
- en: Figure 1.6 – The last five rows of data
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.6 – 数据的最后五行
- en: 'As we can see, `education` and `education.num` are redundant columns, as `education.num`
    is just the ordinal representation of the `education` column. So, we will remove
    the redundant `education.num` column from the dataset as one column is enough
    for model training. We will also drop the `race` column from the dataset using
    the following code snippet as we will not use it here:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们所见，`education` 和 `education.num` 是冗余列，因为 `education.num` 只是 `education` 列的序数表示。因此，我们将从数据集中删除冗余的
    `education.num` 列，因为一个列对于模型训练就足够了。我们还将使用以下代码片段从数据集中删除 `race` 列，因为我们在这里不会使用它：
- en: '[PRE8]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Here, `axis = 1` refers to the columns axis, which means that you are specifying
    that you want to drop a column. In this case, you are dropping the columns labeled
    `education.num` and `race` from the DataFrame.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，`axis = 1` 指的是列轴，这意味着你指定要删除一列。在这种情况下，你正在删除标记为 `education.num` 和 `race` 的列。
- en: 'Now, let’s print the columns using `info()` to make sure the `race` and `education.num`
    columns are dropped from the DataFrame:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们使用 `info()` 打印列，以确保 `race` 和 `education.num` 列已从 DataFrame 中删除：
- en: '[PRE9]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'We will see the following output:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将看到以下输出：
- en: '![Figure 1.7 – Columns in the DataFrame](img/B18944_01_07..jpg)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.7 – DataFrame 中的列](img/B18944_01_07..jpg)'
- en: Figure 1.7 – Columns in the DataFrame
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.7 – DataFrame 中的列
- en: We can see in the preceding data there are now only 13 columns as we deleted
    2 of them from the previous total of 15 columns.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到，在前面数据中现在只有 13 列，因为我们从之前的 15 列中删除了 2 列。
- en: In this section, we have seen what a Pandas DataFrame is and loaded a CSV dataset
    into one. We also saw the various columns in the DataFrame and their data types.
    In the following section, we will generate the summary statistics for the important
    features using Pandas.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们了解了 Pandas DataFrame 是什么，并将一个 CSV 数据集加载到一个 DataFrame 中。我们还看到了 DataFrame
    中的各种列及其数据类型。在下一节中，我们将使用 Pandas 生成重要特征的摘要统计量。
- en: Summary statistics and data aggregates
  id: totrans-113
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要统计量和数据聚合
- en: In this section, we will derive the summary statistics for numerical columns.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将推导数值列的摘要统计量。
- en: Before generating summary statistics, we will identify the categorical columns
    and numerical columns in the dataset. Then, we will calculate the summary statistics
    for all numerical columns.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 在生成摘要统计量之前，我们将识别数据集中的分类列和数值列。然后，我们将计算所有数值列的摘要统计量。
- en: We will also calculate the mean value of each numerical column for the target
    class. Summary statistics are useful to gain insights about each feature’s mean
    values and their effect on the target label class.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还将计算每个数值列针对目标类的平均值。摘要统计量对于了解每个特征的均值及其对目标标签类的影响非常有用。
- en: 'Let’s print the `categorical` columns using the following code snippet:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用以下代码片段打印 `categorical` 列：
- en: '[PRE10]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'We will get the following result:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将得到以下结果：
- en: '![Figure 1.8 – Categorical columns](img/B18944_01_08..jpg)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.8 – 分类列](img/B18944_01_08..jpg)'
- en: Figure 1.8 – Categorical columns
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.8 – 分类列
- en: 'Now, let’s print the `numerical` columns using the following code snippet:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们使用以下代码片段打印 `numerical` 列：
- en: '[PRE11]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'We will get the following output:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将得到以下输出：
- en: '![Figure 1.9 – Numerical columns](img/B18944_01_09..jpg)'
  id: totrans-125
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.9 – 数值列](img/B18944_01_09..jpg)'
- en: Figure 1.9 – Numerical columns
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.9 – 数值列
- en: Summary statistics
  id: totrans-127
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 摘要统计
- en: 'Now, let’s generate summary statistics (i.e., mean, standard deviation, minimum
    value, maximum value, and lower (25%), middle (50%), and higher (75%) percentiles)
    using the following code snippet:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们使用以下代码片段生成摘要统计量（即平均值、标准差、最小值、最大值以及下限（25%）、中位数（50%）和上限（75%）分位数）：
- en: '[PRE12]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'We will get the following results:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将得到以下结果：
- en: '![Figure 1.10 – Summary statistics](img/B18944_01_10..jpg)'
  id: totrans-131
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.10 – 摘要统计](img/B18944_01_10..jpg)'
- en: Figure 1.10 – Summary statistics
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.10 – 摘要统计
- en: As shown in the results, the mean value of `age` is 38.5 years, the minimum
    age is 17 years, and the maximum age is 90 years in the dataset. As we have only
    five numerical columns in the dataset, we can only see five rows in this summary
    statistics table.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 如结果所示，`age` 的平均值是 38.5 岁，最小年龄是 17 岁，最大年龄是 90 岁。由于数据集中只有五个数值列，因此在这个摘要统计表中我们只能看到五行。
- en: Data aggregates of the feature for each target class
  id: totrans-134
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 特征针对每个目标类的数据聚合
- en: 'Now, let’s calculate the average age of the people for each income group range
    using the following code snippet:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们使用以下代码片段计算每个收入组范围的平均年龄：
- en: '[PRE13]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'We will see the following output:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将看到以下输出：
- en: '![Figure 1.11 – Average age by income group](img/B18944_01_11..jpg)'
  id: totrans-138
  prefs: []
  type: TYPE_IMG
  zh: '![图1.11 – 按收入组平均年龄](img/B18944_01_11..jpg)'
- en: Figure 1.11 – Average age by income group
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.11 – 按收入组平均年龄
- en: As shown in the results, we have used the `groupby` clause on the target variable
    and calculated the mean of the age in each group. The mean age is 36.78 for people
    with an income group of less than or equal to $50K. Similarly, the mean age is
    44.2 for the income group greater than $50K.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 如结果所示，我们已经在目标变量上使用了`groupby`子句，并计算了每个组的年龄平均值。对于收入组小于或等于$50K的人群，平均年龄是36.78岁。同样，对于收入组大于$50K的人群，平均年龄是44.2岁。
- en: 'Now, let’s calculate the average hours per week of the people for each income
    group range using the following code snippet:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们使用以下代码片段计算每个收入组范围的每周平均小时数：
- en: '[PRE14]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'We will get the following output:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将得到以下输出：
- en: '![Figure 1.12 – Average hours per week by income group](img/B18944_01_12..jpg)'
  id: totrans-144
  prefs: []
  type: TYPE_IMG
  zh: '![图1.12 – 按收入组平均每周小时数](img/B18944_01_12..jpg)'
- en: Figure 1.12 – Average hours per week by income group
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.12 – 按收入组平均每周小时数
- en: As shown in the results, the average hours per week for the income group =<
    $50K is 38.8 hours. Similarly, the average hours per week for the income group
    > $50K is 45.47 hours.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 如结果所示，收入组=<= $50K的每周平均小时数是38.8小时。同样，收入组> $50K的每周平均小时数是45.47小时。
- en: 'Alternatively, we can write a generic reusable function for calculating the
    `numerical` column group by the `categorical` column as follows:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，我们可以编写一个通用的可重用函数，用于按`categorical`列对`numerical`列进行分组，如下所示：
- en: '[PRE15]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'If we want to get aggregations of multiple columns for each target income group,
    then we can calculate aggregations as follows:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们想要为每个目标收入组获取多列的聚合，那么我们可以按以下方式计算聚合：
- en: '[PRE16]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'We get the following results:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 我们得到以下结果：
- en: '![Figure 1.13 – Aggregations for multiple columns](img/B18944_01_13..jpg)'
  id: totrans-152
  prefs: []
  type: TYPE_IMG
  zh: '![图1.13 – 多列的聚合](img/B18944_01_13..jpg)'
- en: Figure 1.13 – Aggregations for multiple columns
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.13 – 多列的聚合
- en: As shown in the results, we have calculated the summary statistics for age and
    hours per week for each income group.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 如结果所示，我们已为每个收入组计算了年龄和每周小时数的汇总统计。
- en: We learned how to calculate the aggregate values of features for the target
    group using reusable functions. This aggregate value gives us a correlation of
    those features for the target label value.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 我们学习了如何使用可重用函数计算目标组的特征聚合值。这个聚合值为我们提供了这些特征与目标标签值之间的相关性。
- en: Creating visualizations using Seaborn for univariate and bivariate analysis
  id: totrans-156
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Seaborn创建单变量和双变量分析的可视化
- en: In this section, we are going to explore each variable separately. We are going
    to summarize the data for each feature and analyze the pattern present in it.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将分别探索每个变量。我们将总结每个特征的数据，并分析其中存在的模式。
- en: Univariate analysis is an analysis using individual features. We will also perform
    a bivariate analysis later in this section.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 单变量分析是使用单个特征的分析。我们将在本节后面进行双变量分析。
- en: Univariate analysis
  id: totrans-159
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 单变量分析
- en: Now, let us do a univariate analysis for the age, education, work class, hours
    per week, and occupation features.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们对年龄、教育、工作类别、每周小时数和职业特征进行单变量分析。
- en: 'First, let’s get the counts of unique values for each column using the following
    code snippet:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们使用以下代码片段获取每个列的唯一值计数：
- en: '[PRE17]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '![Figure 1.14 – Unique values for each column](img/B18944_01_14..jpg)'
  id: totrans-163
  prefs: []
  type: TYPE_IMG
  zh: '![图1.14 – 每个列的唯一值](img/B18944_01_14..jpg)'
- en: Figure 1.14 – Unique values for each column
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.14 – 每个列的唯一值
- en: As shown in the results, there are 73 unique values for `age`, 9 unique values
    for `workclass`, 16 unique values for `education`, 15 unique values for `occupation`,
    and so on.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 如结果所示，`age`有73个唯一值，`workclass`有9个唯一值，`education`有16个唯一值，`occupation`有15个唯一值，等等。
- en: 'Now, let us see the unique values count for `age` in the DataFrame:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们看看DataFrame中`age`的唯一值计数：
- en: '[PRE18]'
  id: totrans-167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'The result is as follows:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Figure 1.15 – Value counts for age](img/B18944_01_15..jpg)'
  id: totrans-169
  prefs: []
  type: TYPE_IMG
  zh: '![图1.15 – 年龄值计数](img/B18944_01_15..jpg)'
- en: Figure 1.15 – Value counts for age
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.15 – 年龄值计数
- en: We can see in the results that there are 898 observations (rows) with the age
    of 36\. Similarly, there are 6 observations with the age of 83.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在结果中看到，有898个观测值（行）的年龄为36岁。同样，有6个观测值的年龄为83岁。
- en: Histogram of age
  id: totrans-172
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 年龄直方图
- en: Histograms are used to visualize the distribution of continuous data. Continuous
    data is data that can take on any value within a range (e.g., age, height, weight,
    temperature, etc.).
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 直方图用于可视化连续数据的分布。连续数据是可以取范围内任何值的（例如，年龄、身高、体重、温度等）。
- en: 'Let us plot a histogram using Seaborn to see the distribution of `age` in the
    dataset:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用Seaborn绘制直方图来查看数据集中`age`的分布：
- en: '[PRE19]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'We get the following results:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 我们得到以下结果：
- en: '![Figure 1.16 – The histogram of age](img/B18944_01_16..jpg)'
  id: totrans-177
  prefs: []
  type: TYPE_IMG
  zh: '![图1.16 – 年龄直方图](img/B18944_01_16..jpg)'
- en: Figure 1.16 – The histogram of age
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.16 – 年龄直方图
- en: As we can see in the age histogram, there are many people in the age range of
    23 to 45 in the given observations in the dataset.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们在年龄直方图中所见，在数据集中的给定观测值中，有很多人在23到45岁之间。
- en: Bar plot of education
  id: totrans-180
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '`education`的条形图'
- en: 'Now, let us check the distribution of `education` in the given dataset:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们检查给定数据集中`education`的分布情况：
- en: '[PRE20]'
  id: totrans-182
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '![Figure 1.17 – The bar chart of education](img/B18944_01_17..jpg)'
  id: totrans-183
  prefs: []
  type: TYPE_IMG
  zh: '![图1.17 – `education`的柱状图](img/B18944_01_17..jpg)'
- en: Figure 1.17 – The bar chart of education
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.17 – `education`的柱状图
- en: As we see, the `HS.grad` count is higher than that for the `Bachelors` degree
    holders. Similarly, the `Masters` degree holders count is lower than the `Bachelors`
    degree holders count.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们所见，拥有`HS.grad`学位的人数高于拥有`Bachelors`学位的人数。同样，拥有`Masters`学位的人数少于拥有`Bachelors`学位的人数。
- en: Bar chart of workclass
  id: totrans-186
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '`workclass`的柱状图'
- en: 'Now, let’s see the distribution of `workclass` in the dataset:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们看看数据集中`workclass`的分布情况：
- en: '[PRE21]'
  id: totrans-188
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Let’s plot the bar chart to visualize the distribution of different values
    of `workclass`:'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们绘制柱状图来可视化`workclass`不同值的分布：
- en: '![Figure 1.18 – Bar chart of workclass](img/B18944_01_18..jpg)'
  id: totrans-190
  prefs: []
  type: TYPE_IMG
  zh: '![图1.18 – `workclass`的柱状图](img/B18944_01_18..jpg)'
- en: Figure 1.18 – Bar chart of workclass
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.18 – `workclass`的柱状图
- en: As shown in the `workclass` bar chart, there are more private employees than
    other kinds.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 如`workclass`柱状图所示，私营企业员工比其他类型的员工多。
- en: Bar chart of income
  id: totrans-193
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 收入柱状图
- en: 'Let’s see the unique value for the `income` target variable and see the distribution
    of `income`:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们查看`income`目标变量的唯一值，并查看`income`的分布：
- en: '[PRE22]'
  id: totrans-195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'The result is as follows:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '![Figure 1.19 – Distribution of income](img/B18944_01_19..jpg)'
  id: totrans-197
  prefs: []
  type: TYPE_IMG
  zh: '![图1.19 – 收入分布](img/B18944_01_19..jpg)'
- en: Figure 1.19 – Distribution of income
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.19 – 收入分布
- en: As shown in the results, there are 24,720 observations with an income greater
    than $50K and 7,841 observations with an income of less than $50K. In the real
    world, more people have an income greater than $50K and a small portion of people
    have less than $50K income, assuming the income is in US dollars and for 1 year.
    As this ratio closely reflects the real-world scenario, we do not need to balance
    the minority class dataset using synthetic data.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 如结果所示，有24,720个收入超过$50K的观测值，以及7,841个收入低于$50K的观测值。在现实世界中，有更多的人收入超过$50K，而收入低于$50K的人占少数，假设收入为美元，且为一年。由于这个比例紧密反映了现实世界的情况，我们不需要使用合成数据来平衡少数类数据集。
- en: '![Figure 1.20 – Bar chart of income](img/B18944_01_20..jpg)'
  id: totrans-200
  prefs: []
  type: TYPE_IMG
  zh: '![图1.20 – 收入柱状图](img/B18944_01_20..jpg)'
- en: Figure 1.20 – Bar chart of income
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.20 – 收入柱状图
- en: In this section, we have seen the size of the data, column names, and data types,
    and the first and last five rows of the dataset. We also dropped some unnecessary
    columns. We performed univariate analysis to see the unique value counts and plotted
    the bar charts and histograms to understand the distribution of values for important
    columns.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们看到了数据的大小、列名和数据类型，以及数据集的前五行和最后五行。我们还删除了一些不必要的列。我们进行了单变量分析，以查看唯一值计数，并绘制柱状图和直方图来了解重要列的值分布。
- en: Bivariate analysis
  id: totrans-203
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 双变量分析
- en: 'Let’s do a bivariate analysis of age and income to find the relationship between
    them. Bivariate analysis is the analysis of two variables to find the relationship
    between them. We will plot a histogram using the Python Seaborn library to visualize
    the relationship between `age` and `income`:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们进行年龄和收入的双变量分析，以找出它们之间的关系。双变量分析是分析两个变量以找出它们之间关系的方法。我们将使用Python Seaborn库绘制直方图来可视化`age`和`income`之间的关系：
- en: '[PRE23]'
  id: totrans-205
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'The plot is as follows:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 图如下：
- en: '![Figure 1.21 – Histogram of age with income](img/B18944_01_21..jpg)'
  id: totrans-207
  prefs: []
  type: TYPE_IMG
  zh: '![图1.21 – 年龄与收入相关的直方图](img/B18944_01_21..jpg)'
- en: Figure 1.21 – Histogram of age with income
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.21 – 年龄与收入相关的直方图
- en: From the preceding histogram, we can see that income is greater than $50K for
    the age group between 30 and 60\. Similarly, for the age group less than 30, income
    is less than $50K.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 从前面的直方图中，我们可以看到，在 30 至 60 岁的年龄组中，收入超过 50K 美元。同样，对于 30 岁以下的年龄组，收入低于 50K 美元。
- en: 'Now let’s plot the histogram to do a bivariate analysis of `education` and
    `income`:'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们绘制直方图，对 `education` 和 `income` 进行双变量分析：
- en: '[PRE24]'
  id: totrans-211
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Here is the plot:'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是图表：
- en: '![Figure 1.22 – Histogram of education with income](img/B18944_01_22..jpg)'
  id: totrans-213
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.22 – 教育与收入直方图](img/B18944_01_22..jpg)'
- en: Figure 1.22 – Histogram of education with income
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.22 – 教育与收入直方图
- en: From the preceding histogram, we can see that income is greater than $50K for
    the majority of the `Masters` education adults. On the other hand, income is less
    than $50K for the majority of `HS-grad adults`.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 从前面的直方图中，我们可以看到，对于大多数 `Masters` 教育成年人，收入超过 50K 美元。另一方面，对于大多数 `HS-grad adults`，收入低于
    50K 美元。
- en: 'Now, let’s plot the histogram to do a bivariate analysis of `workclass` and
    `income`:'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们绘制直方图，对 `workclass` 和 `income` 进行双变量分析：
- en: '[PRE25]'
  id: totrans-217
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'We get the following plot:'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 我们得到以下图表：
- en: '![Figure 1.23 – Histogram of workclass and income](img/B18944_01_23..jpg)'
  id: totrans-219
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.23 – 工作类别与收入直方图](img/B18944_01_23..jpg)'
- en: Figure 1.23 – Histogram of workclass and income
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.23 – 工作类别与收入直方图
- en: From the preceding histogram, we can see that income is greater than $50K for
    `Self-emp-inc` adults. On the other hand, income is less than $50K for the majority
    of `Private` and `Self-emp-not-inc` employees.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 从前面的直方图中，我们可以看到，对于 `Self-emp-inc` 成年人，收入超过 50K 美元。另一方面，对于大多数 `Private` 和 `Self-emp-not-inc`
    员工，收入低于 50K 美元。
- en: 'Now let’s plot the histogram to do a bivariate analysis of `sex` and `income`:'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们绘制直方图，对 `sex` 和 `income` 进行双变量分析：
- en: '[PRE26]'
  id: totrans-223
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '![Figure 1.24 – Histogram of sex and income](img/B18944_01_24..jpg)'
  id: totrans-224
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.24 – 性别与收入直方图](img/B18944_01_24..jpg)'
- en: Figure 1.24 – Histogram of sex and income
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.24 – 性别与收入直方图
- en: From the preceding histogram, we can see that income is more than $50K for male
    adults and less than $50K for most female employees.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 从前面的直方图中，我们可以看到，对于男性成年人，收入超过 50K 美元，而对于大多数女性员工，收入低于 50K 美元。
- en: In this section, we have learned how to analyze data using Seaborn visualization
    libraries.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们学习了如何使用 Seaborn 可视化库分析数据。
- en: Alternatively, we can explore data using the ydata-profiling library with a
    few lines of code.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，我们可以使用几行代码通过 ydata-profiling 库探索数据。
- en: Profiling data using the ydata-profiling library
  id: totrans-229
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 ydata-profiling 库进行数据配置文件分析
- en: In this section, let us explore the dataset and generate a profiling report
    with various statistics using the `ydata-profiling` library ([https://docs.profiling.ydata.ai/4.5/](https://docs.profiling.ydata.ai/4.5/)).
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，让我们使用 `ydata-profiling` 库（[https://docs.profiling.ydata.ai/4.5/](https://docs.profiling.ydata.ai/4.5/)）来探索数据集并生成包含各种统计信息的配置文件报告。
- en: The `ydata-profiling` library is a Python library for easy EDA, profiling, and
    report generation.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: '`ydata-profiling` 库是一个用于轻松进行 EDA、配置文件和报告生成的 Python 库。'
- en: 'Let us see how to use `ydata-profiling` for fast and efficient EDA:'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看如何使用 `ydata-profiling` 进行快速高效的 EDA：
- en: 'Install the `ydata-profiling` library using `pip` as follows:'
  id: totrans-233
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令安装 `ydata-profiling` 库：
- en: '[PRE27]'
  id: totrans-234
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'First, let us import the Pandas profiling library as follows:'
  id: totrans-235
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，让我们按照以下方式导入 Pandas profiling 库：
- en: '[PRE28]'
  id: totrans-236
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Then, we can use Pandas profiling to generate reports.
  id: totrans-237
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 然后，我们可以使用 Pandas profiling 生成报告。
- en: 'Now, we will read the *Income* dataset into the Pandas DataFrame:'
  id: totrans-238
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将读取 *Income* 数据集到 Pandas DataFrame 中：
- en: '[PRE29]'
  id: totrans-239
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: '%pip install ydata-profiling --upgrade'
  id: totrans-240
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '%pip install ydata-profiling --upgrade'
- en: '[PRE30]'
  id: totrans-241
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Now let us run the following commands to generate the profiling report:'
  id: totrans-242
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让我们运行以下命令以生成配置文件报告：
- en: '[PRE31]'
  id: totrans-243
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: We can also generate the report using the `profile_report()` function on the
    Pandas DataFrame.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 我们也可以使用 Pandas DataFrame 上的 `profile_report()` 函数生成报告。
- en: After running the preceding cell, all the data loaded in `df` will be analyzed
    and the report will be generated. The time taken to generate the report depends
    on the size of the dataset.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 执行前面的单元格后，`df` 中加载的所有数据将被分析，并生成报告。生成报告所需的时间取决于数据集的大小。
- en: The output of the preceding cell is a report with sections. Let us understand
    the report that is generated.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 前一个单元格的输出是一个包含章节的报告。让我们了解生成的报告。
- en: 'The generated profiling report contains the following sections:'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 生成的配置文件报告包含以下部分：
- en: '**Overview**'
  id: totrans-248
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**概述**'
- en: '**Variables**'
  id: totrans-249
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**变量**'
- en: '**Interactions**'
  id: totrans-250
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**交互**'
- en: '**Correlations**'
  id: totrans-251
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**相关性**'
- en: '**Missing values**'
  id: totrans-252
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**缺失值**'
- en: '**Sample**'
  id: totrans-253
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**样本**'
- en: '**Duplicate rows**'
  id: totrans-254
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**重复行**'
- en: 'Under the **Overview** section in the report, there are three tabs:'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 在报告的 **概述** 部分中，有三个标签页：
- en: '**Overview**'
  id: totrans-256
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**概述**'
- en: '**Alerts**'
  id: totrans-257
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**警报**'
- en: '**Reproduction**'
  id: totrans-258
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**繁殖**'
- en: 'As shown in the following figure, the `Numeric` and `Categorical` variables:'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 如以下图所示，`数值` 和 `分类` 变量：
- en: '![Figure 1.25 – Statistics of the dataset](img/B18944_01_25..jpg)'
  id: totrans-260
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.25 – 数据集的统计数据](img/B18944_01_25..jpg)'
- en: Figure 1.25 – Statistics of the dataset
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.25 – 数据集的统计数据
- en: 'The **Alerts** tab under **Overview** shows all the variables that are highly
    correlated with each other and the number of cells that have zero values, as follows:'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 在 **概述** 下的 **警报** 选项卡显示了高度相关的所有变量以及具有零值的单元格数量，如下所示：
- en: '![Figure 1.26 – Alerts](img/B18944_01_26..jpg)'
  id: totrans-263
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.26 – 警报](img/B18944_01_26..jpg)'
- en: Figure 1.26 – Alerts
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.26 – 警报
- en: 'The **Reproduction** tab under **Overview** shows the duration it took for
    the analysis to generate this report, as follows:'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 在 **概述** 下的 **繁殖** 选项卡显示了分析生成此报告所需的时间，如下所示：
- en: '![Figure 1.27 – Reproduction](img/B18944_01_27..jpg)'
  id: totrans-266
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.27 – 繁殖](img/B18944_01_27..jpg)'
- en: Figure 1.27 – Reproduction
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.27 – 繁殖
- en: Variables section
  id: totrans-268
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 变量部分
- en: Let us walk through the **Variables** section in the report.
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们浏览报告中的 **变量** 部分。
- en: Under the **Variables** section, we can select any variable in the dataset under
    the dropdown and see the statistical information about the dataset, such as the
    number of unique values for that variable, missing values for that variable, the
    size of that variable, and so on.
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 在 **变量** 部分下，我们可以在下拉菜单中选择数据集中的任何变量，并查看有关数据集的统计信息，例如该变量的唯一值数量、该变量的缺失值数量、该变量的大小等。
- en: 'In the following figure, we selected the `age` variable in the dropdown and
    can see the statistics about that variable:'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下图中，我们选择了下拉菜单中的 `age` 变量，并可以看到该变量的统计数据：
- en: '![Figure 1.28 – Variables](img/B18944_01_28..jpg)'
  id: totrans-272
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.28 – 变量](img/B18944_01_28..jpg)'
- en: Figure 1.28 – Variables
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.28 – 变量
- en: Interactions section
  id: totrans-274
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 交互部分
- en: 'As shown in the following figure, this report also contains the **Interactions**
    plot to show how one variable relates to another variable:'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 如以下图所示，此报告还包含 **交互** 图，以显示一个变量如何与另一个变量相关：
- en: '![Figure 1.29 – Interactions](img/B18944_01_29..jpg)'
  id: totrans-276
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.29 – 交互](img/B18944_01_29..jpg)'
- en: Figure 1.29 – Interactions
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.29 – 交互
- en: Correlations
  id: totrans-278
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 相关性
- en: Now, let's see the **Correlations** section in the report; we can see the correlation
    between various variables in **Heatmap**. Also, we can see various correlation
    coefficients in the **Table** form.
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们看看报告中的 **相关性** 部分；我们可以在 **热图** 中看到各种变量之间的相关性。此外，我们还可以以 **表格** 形式看到各种相关系数。
- en: "![Figure 1.30 \uFEFF– Correlations](img/B18944_01_30..jpg)"
  id: totrans-280
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.30 – 相关性](img/B18944_01_30..jpg)'
- en: Figure 1.30 – Correlations
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.30 – 相关性
- en: Heatmaps use color intensity to represent values. The colors typically range
    from cool to warm hues, with cool colors (e.g., blue or green) indicating low
    values and warm colors (e.g., red or orange) indicating high values. Rows and
    columns of the matrix are represented on both the *x* axis and *y* axis of the
    heatmap. Each cell at the intersection of a row and column represents a specific
    value in the data.
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 热图使用颜色强度来表示值。颜色通常从冷色调到暖色调，其中冷色（例如，蓝色或绿色）表示低值，暖色（例如，红色或橙色）表示高值。矩阵的行和列在热图的 *x*
    轴和 *y* 轴上表示。矩阵交叉处的每个单元格代表数据中的特定值。
- en: The color intensity of each cell corresponds to the magnitude of the value it
    represents. Darker colors indicate higher values, while lighter colors represent
    lower values.
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 每个单元格的颜色强度对应于它所代表的值的幅度。较深的颜色表示较高的值，而较浅的颜色表示较低的值。
- en: As we can see in the preceding figure, the intersection cell between income
    and hours per week shows a high-intensity blue color, which indicates there is
    a high correlation between income and hours per week. Similarly, the intersection
    cell between income and capital gain shows a high-intensity blue color, indicating
    a high correlation between those two features.
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 如前图所示，收入和每周小时数的交叉单元格显示高强度的蓝色，这表明收入和每周小时数之间存在高度相关性。同样，收入和资本收益的交叉单元格也显示高强度的蓝色，表明这两个特征之间存在高度相关性。
- en: Missing values
  id: totrans-285
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 缺失值
- en: This section of the report shows the counts of total values present within the
    data and provides a good understanding of whether there are any missing values.
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 报告的这一部分显示了数据中存在的总值的数量，并有助于了解是否存在任何缺失值。
- en: 'Under **Missing values**, we can see two tabs:'
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 在 **缺失值** 下，我们可以看到两个选项卡：
- en: The **Count** plot
  id: totrans-288
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**计数** 图'
- en: The **Matrix** plot
  id: totrans-289
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**矩阵** 图'
- en: Count plot
  id: totrans-290
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 计数图
- en: In *Figure 1**.31*, the shows that all variables have a count of 32,561, which
    is the count of rows (observations) in the dataset. That indicates that there
    are no missing values in the dataset.
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 在**图1.31**中，显示所有变量都有32,561个计数，这是数据集中行（观测值）的计数。这表明数据集中没有缺失值。
- en: '![Figure 1.31 – Missing values count](img/B18944_01_31..jpg)'
  id: totrans-292
  prefs: []
  type: TYPE_IMG
  zh: '![图1.31 – 缺失值计数](img/B18944_01_31..jpg)'
- en: Figure 1.31 – Missing values count
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.31 – 缺失值计数
- en: Matrix plot
  id: totrans-294
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 矩阵图
- en: 'The following **Matrix** plot indicates where the missing values are (if there
    are any missing values in the dataset):'
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的**矩阵**图表明缺失值的位置（如果数据集中有任何缺失值）：
- en: '![Figure 1.32 – Missing values matrix](img/B18944_01_32..jpg)'
  id: totrans-296
  prefs: []
  type: TYPE_IMG
  zh: '![图1.32 – 缺失值矩阵](img/B18944_01_32..jpg)'
- en: Figure 1.32 – Missing values matrix
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.32 – 缺失值矩阵
- en: Sample data
  id: totrans-298
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 样本数据
- en: This section shows the sample data for the first 10 rows and the last 10 rows
    in the dataset.
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 本节展示了数据集中前10行和最后10行的样本数据。
- en: '![Figure 1.33 – Sample data](img/B18944_01_33..jpg)'
  id: totrans-300
  prefs: []
  type: TYPE_IMG
  zh: '![图1.33 – 样本数据](img/B18944_01_33..jpg)'
- en: Figure 1.33 – Sample data
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.33 – 样本数据
- en: This section shows the most frequently occurring rows and the number of duplicates
    in the dataset.
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 本节展示了数据集中最常出现的行和重复的数量。
- en: '![Figure 1.34 – Duplicate rows](img/B18944_01_34..jpg)'
  id: totrans-303
  prefs: []
  type: TYPE_IMG
  zh: '![图1.34 – 重复行](img/B18944_01_34..jpg)'
- en: Figure 1.34 – Duplicate rows
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.34 – 重复行
- en: We have seen how to analyze the data using Pandas and then how to visualize
    the data by plotting various plots such as bar charts and histograms using sns,
    seaborn, and pandas-ydata-profiling. Next, let us see how to perform data analysis
    using OpenAI LLM and the LangChain Pandas Dataframe agent by asking questions
    with natural language.
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经看到了如何使用Pandas分析数据，然后如何通过绘制各种图表，如条形图和直方图，使用sns、seaborn和pandas-ydata-profiling来可视化数据。接下来，让我们看看如何通过用自然语言提问来使用OpenAI
    LLM和LangChain Pandas Dataframe代理进行数据分析。
- en: Unlocking insights from data with OpenAI and LangChain
  id: totrans-306
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用OpenAI和LangChain从数据中解锁见解
- en: '**Artificial intelligence** is transforming how people analyze and interpret
    data. Exciting **generative AI** systems allow anyone to have natural conversations
    with their data, even if they have no coding or data science expertise. This democratization
    of data promises to uncover insights and patterns that may have previously remained
    hidden.'
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: '**人工智能**正在改变人们分析和解释数据的方式。令人兴奋的**生成式AI**系统使任何人都能与他们的数据进行自然对话，即使他们没有编码或数据科学的专业知识。这种数据民主化承诺揭示可能之前一直隐藏的见解和模式。'
- en: One pioneering system in this space is **LangChain**’s **Pandas DataFrame agent**,
    which leverages the power of **large language models** (**LLMs**) such as **Azure
    OpenAI**’s **GPT-4**. LLMs are AI systems trained on massive text datasets, allowing
    them to generate human-like text. LangChain provides a framework to connect LLMs
    with external data sources.
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 这个领域的一个先驱系统是**LangChain**的**Pandas DataFrame代理**，它利用了**大型语言模型**（**LLMs**）如**Azure
    OpenAI**的**GPT-4**的力量。LLMs是在大量文本数据集上训练的AI系统，使它们能够生成类似人类的文本。LangChain提供了一个框架来连接LLMs与外部数据源。
- en: By simply describing in plain English what you want to know about your data
    stored in a Pandas DataFrame, this agent can automatically respond in natural
    language.
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 通过简单地用普通英语描述你想要了解的存储在Pandas DataFrame中的数据，这个代理可以自动用自然语言进行响应。
- en: The user experience feels like magic. You upload a CSV dataset and ask a question
    by typing or speaking. For example, *“What were the top 3 best-selling products
    last year?”* The agent interprets your intent and writes and runs Pandas and Python
    code to load the data, analyze it, and formulate a response...all within seconds.
    The barrier between human language and data analysis dissolves.
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 用户体验感觉就像魔法。你上传CSV数据集，通过键入或说话提问。例如，“去年销量前3名的产品是什么？”代理解释你的意图，编写并运行Pandas和Python代码来加载数据，分析它，并形成响应……所有都在几秒钟内完成。人类语言与数据分析之间的障碍消失了。
- en: Under the hood, the LLM generates Python code based on your question, which
    gets passed to the LangChain agent for execution. The agent handles running the
    code against your DataFrame, capturing any output or errors, and iterating if
    necessary to refine the analysis until an accurate human-readable answer is reached.
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 在幕后，LLM根据你的问题生成Python代码，该代码被传递给LangChain代理以执行。代理处理运行代码对你的DataFrame进行操作，捕获任何输出或错误，并在必要时迭代以细化分析，直到达到准确的可读答案。
- en: By collaborating, the agent and LLM remove the need to worry about syntax, APIs,
    parameters, or debugging data analysis code. The system understands what you want
    to know and makes it happen automatically through the magic of generative AI.
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 通过协作，代理和LLM消除了对语法、API、参数或调试数据分析代码的担忧。系统理解您想要了解的内容，并通过生成式AI的魔力自动实现。
- en: This natural language interface to data analysis opens game-changing potential.
    Subject-matter experts without programming skills can independently extract insights
    from data in their field. Data-driven decisions can happen faster. Exploratory
    analysis and ideation are simpler. The future where analytics is available to
    all AI assistants has arrived.
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: 这种数据分析的自然语言界面开启了颠覆性的潜力。没有编程技能的主题专家可以独立地从他们领域的资料中提取见解。数据驱动的决策可以更快地发生。探索性分析和创意构思变得简单。数据分析对所有AI助手都变得可用的未来已经到来。
- en: Let’s see how the agent works behind the scenes to send a response.
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看代理在幕后如何发送响应。
- en: 'When a user sends a query to the LangChain `create_pandas_dataframe_agent`
    agent and LLM, the following steps are performed behind the scenes:'
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 当用户向LangChain的`create_pandas_dataframe_agent`代理和语言模型发送查询时，幕后执行以下步骤：
- en: The user’s query is received by the LangChain agent.
  id: totrans-316
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用户查询被LangChain代理接收。
- en: The agent interprets the user’s query and analyzes its intention.
  id: totrans-317
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 代理解释用户的查询并分析其意图。
- en: The agent then generates the necessary commands to perform the first step of
    the analysis. For example, it could generate an SQL query that is sent to the
    tool that the agent knows will execute SQL queries.
  id: totrans-318
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 代理随后生成执行分析第一步所需的命令。例如，它可能生成一个SQL查询，并将其发送到代理已知可以执行SQL查询的工具。
- en: The agent analyzes the response it receives from the tool and determines whether
    it is what the user wants. If it is, the agent returns the answer; if not, the
    agent analyzes what the next step should be and iterates again.
  id: totrans-319
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 代理分析从工具收到的响应，并确定它是否是用户想要的。如果是，代理返回答案；如果不是，代理分析下一步应该是什么，并再次迭代。
- en: The agent keeps generating commands for the tools it can control until it obtains
    the response the user is looking for. It is even capable of interpreting execution
    errors that occur and generating the corrected command. The agent iterates until
    it satisfies the user’s question or reaches the limit we have set.
  id: totrans-320
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 代理会持续生成它能够控制的工具的命令，直到获得用户期望的响应。它甚至能够解释发生的执行错误并生成修正后的命令。代理会迭代直到满足用户的问题或达到我们设定的限制。
- en: 'We can represent this with the following diagram:'
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以用以下图表来表示这一点：
- en: '![Figure 1.35 – LangChain Pandas agent flow for Data analysis](img/B18944_01_35.jpg)'
  id: totrans-322
  prefs: []
  type: TYPE_IMG
  zh: '![图1.35 – LangChain Pandas代理数据分析流程](img/B18944_01_35.jpg)'
- en: Figure 1.35 – LangChain Pandas agent flow for Data analysis
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.35 – LangChain Pandas代理数据分析流程
- en: Let’s see how to perform data analysis and find insights about the `income`
    dataset using the LangChain `create_pandas_dataframe_agent` agent and LLM.
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看如何使用LangChain的`create_pandas_dataframe_agent`代理和LLM进行数据分析，并找到关于`income`数据集的见解。
- en: The key steps are importing the necessary LangChain modules, loading data into
    a DataFrame, instantiating an LLM, and creating the DataFrame agent by passing
    the required objects. The agent can now analyze the data through natural language
    queries.
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 关键步骤包括导入必要的LangChain模块、将数据加载到DataFrame中、实例化LLM以及通过传递所需对象创建DataFrame代理。现在，代理可以通过自然语言查询分析数据。
- en: 'First, let’s install the required libraries. To install the LangChain library,
    open your Python notebook and type the following:'
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们安装所需的库。要安装LangChain库，打开您的Python笔记本并输入以下内容：
- en: '[PRE32]'
  id: totrans-327
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: This installs the `langchain` and `langchain_experimental` packages so you can
    import the necessary modules.
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: 这将安装`langchain`和`langchain_experimental`包，以便您可以导入所需的模块。
- en: 'Let’s import `AzureChatOpenAI`, the Pandas DataFrame agent, and other required
    libraries:'
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们导入`AzureChatOpenAI`、Pandas DataFrame代理和其他所需的库：
- en: '[PRE33]'
  id: totrans-330
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Let’s configure the OpenAI endpoint and keys. Your OpenAI endpoint and key
    values are available in the Azure OpenAI portal:'
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们配置OpenAI端点和密钥。您的OpenAI端点和密钥值可在Azure OpenAI门户中找到：
- en: '[PRE34]'
  id: totrans-332
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: Let’s load CSV data into Pandas DataFrame.
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们将CSV数据加载到Pandas DataFrame中。
- en: 'The `adult.csv` dataset is the dataset that we want to analyze and we have
    placed this CSV file in the same folder where we are running this Python code:'
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: '`adult.csv`数据集是我们想要分析的数据集，我们已将此CSV文件放置在我们运行此Python代码的同一文件夹中：'
- en: '[PRE35]'
  id: totrans-335
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: Let’s instantiate the GPT-4 LLM.
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们实例化GPT-4语言模型。
- en: 'Assuming, you have deployed the GPT-4 model in Azure OpenAI Studio as per the
    *Technical requirements* section, here, we are passing the `gpt4` endpoint, key,
    and deployment name to create the instance of GPT-4 as follows:'
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 假设您已根据*技术要求*部分在Azure OpenAI Studio中部署了GPT-4模型，这里我们传递`gpt4`端点、密钥和部署名称以创建GPT-4实例，如下所示：
- en: '[PRE36]'
  id: totrans-338
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: Setting the temperature to `0.0` has the model return the most accurate outputs.
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: 将温度设置为`0.0`可以使模型返回最准确的结果。
- en: 'Let’s create a Pandas DataFrame agent. To create the Pandas DataFrame agent,
    we need to pass the `gpt4` model instance and the DataFrame:'
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们创建一个Pandas DataFrame代理。要创建Pandas DataFrame代理，我们需要传递`gpt4`模型实例和DataFrame：
- en: '[PRE37]'
  id: totrans-341
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: Pass the `gpt4` LLM instance and the DataFrame, and set `verbose` to `True`
    to see the output. Finally, let’s ask a question and run the agent.
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 将`gpt4` LLM实例和DataFrame传递，并将`verbose`设置为`True`以查看输出。最后，让我们提出一个问题并运行代理。
- en: 'As illustrated in *Figure 1**.36*, when we ask the following questions to the
    LangChain agent in the Python notebook, the question is passed to the LLM. The
    LLM generates Python code for this query and sends it back to the agent. The agent
    then executes this code in the Python environment with the CSV file, obtains a
    response, and the LLM converts that response to natural language before sending
    it back to the agent and the user:'
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: 如*图1.36*所示，当我们向Python笔记本中的LangChain代理提出以下问题时，问题被传递给LLM。LLM为该查询生成Python代码，并将其发送回代理。然后代理在Python环境中执行此代码，使用CSV文件获得响应，LLM将此响应转换为自然语言，然后再将其发送回代理和用户：
- en: '[PRE38]'
  id: totrans-344
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'Output:'
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: 输出：
- en: '![Figure 1.36 – Agent response for row and column count](img/B18944_01_36.jpg)'
  id: totrans-346
  prefs: []
  type: TYPE_IMG
  zh: '![图1.36 – 行和列计数代理响应](img/B18944_01_36.jpg)'
- en: Figure 1.36 – Agent response for row and column count
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.36 – 行和列计数代理响应
- en: 'We try the next question:'
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: 我们尝试下一个问题：
- en: '[PRE39]'
  id: totrans-349
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'Here’s the output:'
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是输出：
- en: '![Figure 1.37 – agent response for first five records](img/B18944_01_37.jpg)'
  id: totrans-351
  prefs: []
  type: TYPE_IMG
  zh: '![图1.37 – 前五条记录的代理响应](img/B18944_01_37.jpg)'
- en: Figure 1.37 – agent response for first five records
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.37 – 前五条记录的代理响应
- en: This way, the LangChain Pandas DataFrame agent facilitates interaction with
    the DataFrame by interpreting natural language queries, generating corresponding
    Python code, and presenting the results in a human-readable format.
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: 这样，LangChain Pandas DataFrame代理通过解释自然语言查询，生成相应的Python代码，并以人类可读的格式呈现结果，从而方便与DataFrame进行交互。
- en: 'You can try these questions and see the responses from the agent:'
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以尝试这些问题并查看代理的响应：
- en: '`query = "calculate the average age of the people for each income` `group ?"`'
  id: totrans-355
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`query = "计算每个收入` `组的平均年龄?"`'
- en: '`query ="provide summary statistics for` `this dataset"`'
  id: totrans-356
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`query = "提供此数据集的摘要统计信息?"`'
- en: '`query = "provide count of unique values for` `each column"`'
  id: totrans-357
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`query = "提供每列唯一值的计数?"`'
- en: '`query = "draw the histogram of` `the age"`'
  id: totrans-358
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`query = "绘制` `年龄`的直方图"`'
- en: 'Next, let’s try the following query to plot the bar chart:'
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们尝试以下查询来绘制条形图：
- en: '[PRE40]'
  id: totrans-360
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: The Langchain agent responded with a bar chart that shows the counts for different
    education levels, as follows.
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: Langchain代理以条形图的形式响应，显示了不同教育水平的计数，如下所示。
- en: '![Figure 1.38 – Agent response for bar chart](img/B18944_01_38.jpg)'
  id: totrans-362
  prefs: []
  type: TYPE_IMG
  zh: '![图1.38 – 条形图代理响应](img/B18944_01_38.jpg)'
- en: Figure 1.38 – Agent response for bar chart
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.38 – 条形图代理响应
- en: 'The plot of the following query shows a comparison of income for different
    education levels – master’s and HS-GRAD. And we can see the income is less than
    $5,000 for `education.num` 8 to 10 when compared to higher education:'
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: 以下查询的绘图显示了不同教育水平（硕士和HS-GRAD）的收入比较。我们可以看到，与高等教育相比，`education.num` 8到10的收入低于5,000美元：
- en: '[PRE41]'
  id: totrans-365
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'Here’s the output:'
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是输出：
- en: '![Figure 1.39 – Agent response for comparison of income](img/B18944_01_39.jpg)'
  id: totrans-367
  prefs: []
  type: TYPE_IMG
  zh: '![图1.39 – 收入比较代理响应](img/B18944_01_39.jpg)'
- en: Figure 1.39 – Agent response for comparison of income
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.39 – 收入比较代理响应
- en: 'Next, let’s try the following query to find any outliers in the data:'
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们尝试以下查询以查找数据中的任何异常值：
- en: '[PRE42]'
  id: totrans-370
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: This plot shows outliers in age greater than 80 years.
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: 此图显示了80岁以上的年龄异常值。
- en: '![Figure 1.40 – Agent response for outliers](img/B18944_01_40.jpg)'
  id: totrans-372
  prefs: []
  type: TYPE_IMG
  zh: '![图1.40 – 异常值代理响应](img/B18944_01_40.jpg)'
- en: Figure 1.40 – Agent response for outliers
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.40 – 异常值代理响应
- en: We have seen how to perform data analysis and find insights about the `income`
    dataset using natural language with the power of LangChain and OpenAI LLMs.
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经看到如何使用LangChain和OpenAI LLM的力量通过自然语言执行数据分析并找到关于`income`数据集的见解。
- en: Summary
  id: totrans-375
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we have learned how to use Pandas and matplotlib to analyze
    a dataset and understand the data and correlations between various features. This
    understanding of data and patterns in the data is required to build the rules
    for labeling raw data before using it for training ML models and fine-tuning LLMs.
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了如何使用 Pandas 和 matplotlib 分析数据集，并理解各种特征之间的数据和相关性。在将原始数据用于训练机器学习模型和微调大型语言模型之前，理解数据和数据中的模式对于建立标记原始数据的规则是必需的。
- en: We also went through various examples for aggregating columns and categorical
    values using `groupby` and `mean`. Then, we created reusable functions so that
    those functions can be reused simply by calling and passing column names to get
    aggregates of one or more columns.
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还通过使用 `groupby` 和 `mean` 对列和分类值进行聚合的多个示例进行了学习。然后，我们创建了可重用的函数，这样只需通过调用并传递列名，就可以简单地重用这些函数来获取一个或多个列的聚合值。
- en: Finally, we saw a fast and easy exploration of data using the `ydata-profiling`
    library with simple one-line Python code. Using this library, we need not remember
    many Pandas functions. We can simply call one line of code to perform a detailed
    analysis of data. We can create detailed reports of statistics for each variable
    with missing values, correlations, interactions, and duplicate rows.
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们看到了如何使用 `ydata-profiling` 库通过简单的单行 Python 代码快速轻松地探索数据。使用这个库，我们不需要记住许多 Pandas
    函数。我们可以简单地调用一行代码来执行数据的详细分析。我们可以为每个具有缺失值的变量创建详细的统计报告，包括相关性、交互作用和重复行。
- en: Once we get a good sense of our data using EDA, we will be able to build the
    rules for creating labels for the dataset.
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们通过 EDA 对我们的数据有了良好的理解，我们就能为创建数据集标签的规则建立规则。
- en: In the next chapter, we will see how to build these rules using Python libraries
    such as `snorkel` and `compose` to label an unlabeled dataset. We will also explore
    other methods, such as pseudo-labeling and K-means clustering, for data labeling.
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将看到如何使用 Python 库如 `snorkel` 和 `compose` 来构建这些规则，以对未标记的数据集进行标记。我们还将探索其他数据标记方法，例如伪标记和
    K-means 聚类。
