- en: '*Chapter 9*: Drift and Drift Detection'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第9章*：漂移和漂移检测'
- en: Throughout the previous chapters, you have discovered plenty of ways to build
    **machine learning** (**ML**) models that work in an online manner. They are able
    to update their learned decision rules from one single observation rather than
    having to retrain completely as is common in most ML models.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的章节中，你已经发现了许多构建**机器学习**（**ML**）模型的方法，这些模型以在线方式工作。它们能够从单个观察值更新其学习到的决策规则，而不是像大多数机器学习模型那样需要完全重新训练。
- en: One reason that this is great is streaming, as these models will allow you to
    work and learn continuously. However, we could argue that a traditional ML model
    can also predict on a single observation. Even batch learning and offline models
    can predict a single new observation at a time. To get more insight into the added
    value of online ML, this chapter will go in depth into drift and drift detection.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 这之所以很棒，一个原因是流式处理，因为这些模型将允许你持续工作和学习。然而，我们可以争论说，传统的机器学习模型也可以对单个观察值进行预测。即使是批量学习和离线模型也可以一次预测一个新观察值。为了更深入地了解在线机器学习的附加值，本章将深入探讨漂移和漂移检测。
- en: To get to an improved understanding of those concepts, the chapter will start
    with an in-depth description of what drift is. You will then see different types
    of drift, including concept drift, data drift, and retraining strategy issues.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更深入地理解这些概念，本章将从漂移的定义开始进行详细描述。然后，你将看到不同类型的漂移，包括概念漂移、数据漂移和重新训练策略问题。
- en: After that, you will be exposed to a number of methods to detect both data drift
    and concept drift. You will also see a number of methods to counteract drift and
    will be introduced to model explicability and retraining strategies.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，你将接触到多种检测数据漂移和概念漂移的方法。你还将看到多种对抗漂移的方法，并介绍模型可解释性和重新训练策略。
- en: For now, let's get started with the basics by having a deeper look at a definition
    of drift.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们通过深入探讨漂移的定义来从基础知识开始。
- en: 'This chapter will cover the following topics:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Defining drift
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定义漂移
- en: Introducing model explicability
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 介绍模型可解释性
- en: Measuring drift
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测量漂移
- en: Measuring drift in Python
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Python中测量漂移
- en: Counteracting drift
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对抗漂移
- en: Technical requirements
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'You can find all the code for this book on GitHub at the following link: [https://github.com/PacktPublishing/Machine-Learning-for-Streaming-Data-with-Python](https://github.com/PacktPublishing/Machine-Learning-for-Streaming-Data-with-Python).
    If you are not yet familiar with Git and GitHub, the easiest way to download the
    notebooks and code samples is by doing the following:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在以下链接的GitHub上找到这本书的所有代码：[https://github.com/PacktPublishing/Machine-Learning-for-Streaming-Data-with-Python](https://github.com/PacktPublishing/Machine-Learning-for-Streaming-Data-with-Python)。如果你还不熟悉Git和GitHub，以下是最简单下载笔记本和代码样本的方法：
- en: Go to the link of the repository.
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往存储库的链接。
- en: Go to the green **Code** button.
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击绿色的**代码**按钮。
- en: Select **Download zip**.
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**下载zip**。
- en: When you download the ZIP file, you unzip it in your local environment, and
    you will be able to access the code through your preferred Python editor.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 当你下载ZIP文件时，你需要在本地环境中解压缩它，然后你将通过你首选的Python编辑器访问代码。
- en: Python environment
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Python环境
- en: To follow along with this book, you can download the code in the repository
    and execute it using your preferred Python editor.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 要跟随这本书，你可以下载存储库中的代码，并使用你首选的Python编辑器执行它。
- en: If you are not yet familiar with Python environments, I would advise you to
    check out Anaconda ([https://www.anaconda.com/products/individual](https://www.anaconda.com/products/individual)),
    which comes with Jupyter Notebook and JupyterLab, which are both great for executing
    notebooks. It also comes with Spyder and **Visual Studio Code** (**VS Code**)
    for editing scripts and programs.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你还不熟悉Python环境，我建议你查看Anaconda（[https://www.anaconda.com/products/individual](https://www.anaconda.com/products/individual)），它包含了Jupyter
    Notebook和JupyterLab，这两个都是执行笔记本的绝佳选择。它还包含了Spyder和**Visual Studio Code**（**VS Code**）用于编辑脚本和程序。
- en: If you have difficulty installing Python or the associated programs on your
    machine, you can check out **Google Colabatory** (**Google Colab**) ([https://colab.research.google.com/](https://colab.research.google.com/))
    or Kaggle Notebooks ([https://www.kaggle.com/code](https://www.kaggle.com/code)),
    which both allow you to run Python code in online notebooks for free, without
    any setup required.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在您的机器上安装Python或相关程序有困难，您可以查看**Google Colabatory**（**Google Colab**）([https://colab.research.google.com/](https://colab.research.google.com/))或Kaggle
    Notebooks([https://www.kaggle.com/code](https://www.kaggle.com/code))，这两个都允许您在在线笔记本中免费运行Python代码，无需任何设置。
- en: Note
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The code in the book will generally use Colab and Kaggle Notebooks with Python
    version 3.7.13, and you can set up your own environment to mimic this.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 书中的代码通常将使用Colab和Kaggle Notebooks，Python版本为3.7.13，您可以根据需要设置自己的环境来模拟这种情况。
- en: Defining drift
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 定义漂移
- en: It is a well-known and commonly observed problem that models tend to start performing
    worse with time. Whether your metric is accuracy, R2 score, F1 score, or anything
    else, you will see a slow but steady decrease in performance over time if you
    put models into production and do not update them.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 模型随着时间的推移往往开始表现得更差，这是一个众所周知且普遍观察到的问题。无论您的指标是准确率、R2分数、F1分数还是其他任何指标，如果您将模型投入生产而不更新它们，您都会看到性能随着时间的推移缓慢但稳定地下降。
- en: Depending on your use case, this decrease may become problematic quickly or
    slowly. Some use cases need to have continuous, near-perfect predictions. In some
    use cases— for example, for specialized ML in which the models have a direct impact
    on life—you would be strongly shocked if you observed a 1 percent decrease. In
    other use cases, ML is used more as automation than as prediction, and the business
    partners may not even notice a 5 percent decrease.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 根据您的用例，这种下降可能会迅速或缓慢地变得有问题。一些用例需要连续、近乎完美的预测。在某些用例中——例如，对于对生活有直接影响的专业机器学习模型——如果您观察到1%的下降，您可能会感到非常震惊。在其他用例中，机器学习更多地被用作自动化而不是预测，商业伙伴可能甚至不会注意到5%的下降。
- en: Whether it is going to impact you is not the question here. What is sure, is
    that in general, you will see your models decreasing. The goal for this chapter
    is to make sure to find out why model performance is decreasing, how you can measure
    it, and what can be done about it if you decide that it is too problematic for
    your use case.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 是否会影响您不是这里的问题。可以肯定的是，总的来说，您会看到您的模型在下降。本章的目标是确保找出为什么模型性能在下降，您如何衡量它，以及如果您认为它对您的用例来说问题太大，您可以做什么。
- en: In the next section, we will start by presenting three different types of drift
    that you may encounter in streaming use cases.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将首先介绍您可能在流用例中遇到的三种不同类型的漂移。
- en: Three types of drift
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 三种漂移类型
- en: 'There are two reasons for drift that are generally considered with streaming
    data: concept drift and data drift. In this part, you will first discover concept
    and data drift, but you will also see how retraining strategies can have an impact
    on your model drifting away from the data rather than the opposite.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在流数据中，通常考虑两种漂移原因：概念漂移和数据漂移。在本部分中，您将首先发现概念和数据漂移，但您也会看到重新训练策略如何影响模型偏离数据而不是相反。
- en: Concept drift
  id: totrans-31
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 概念漂移
- en: In concept drift, we try to explain worsening model performance by a change
    in the concept that we are modeling. This means that the statistical properties
    of the target variable are changing, and therefore the model is no longer adequate
    for our use case.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在概念漂移中，我们试图通过我们建模的概念变化来解释模型性能的下降。这意味着目标变量的统计属性正在变化，因此模型不再适合我们的用例。
- en: A simplified example of concept change is a model that tries to forecast hot
    chocolate sales of a certain bar. Maybe the model was perfect for a certain while,
    but at some point, a competing bar got installed in the area. The underlying demand
    process has changed, and this was logically not included in the model, as the
    competition was not relevant when the model was built.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 概念变化的一个简化例子是试图预测某个巧克力棒热巧克力销售的模型。也许这个模型在一段时间内是完美的，但某个时候，一个竞争品牌在该地区安装了。潜在的需求过程已经改变，这在逻辑上没有被包括在模型中，因为当模型构建时竞争并不相关。
- en: 'When the concept changes, the model needs to be updated to take into account
    the most recent processes, as the model is no longer adequate for the use case.
    The following schematic diagram shows what goes wrong in the case of concept drift:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 当概念发生变化时，模型需要更新以考虑最新的过程，因为模型对于用例来说不再足够合适。以下示意图展示了概念漂移情况下出现的问题：
- en: '![Figure 9.1 – Concept drift'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '![图9.1 – 概念漂移'
- en: '](img/B18335_09_1.jpg)'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B18335_09_1.jpg)'
- en: Figure 9.1 – Concept drift
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 图9.1 – 概念漂移
- en: Now that you have seen the theory behind concept drift, the next section will
    present data drift—a second important type of drift.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经了解了概念漂移背后的理论，下一节将介绍数据漂移——第二种重要的漂移类型。
- en: Data drift
  id: totrans-39
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 数据漂移
- en: When we talk about data drift, we talk about a change in the statistical properties
    of independent variables. This is mainly relevant when we have worked with a sample
    of data (maybe just based on what we had available), but then we start to realize
    that the sample is no longer representative of the data that we are receiving
    at the current moment.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们谈论数据漂移时，我们谈论的是独立变量统计属性的变化。这主要与我们处理数据样本（可能只是基于我们可用的数据）相关，但后来我们开始意识到这个样本不再代表我们现在接收到的数据。
- en: Examples include changes in measurement machines, where a new measurement device
    may give slightly different measurements than the old material. Imagine we change
    the thermometer and our new thermometer measures about 0.5 degrees higher than
    the old one. You can understand that the model is not able to take this type of
    information into account and will make wrong predictions as the model takes the
    temperature higher than it should.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，测量机器的变化，新的测量设备可能比旧材料给出略微不同的测量结果。想象一下我们更换了温度计，新的温度计测量的温度比旧的高约0.5度。你可以理解模型无法考虑这种类型的信息，并且当模型将温度设定得高于实际时，将会做出错误的预测。
- en: 'The following schematic diagram shows what goes wrong in the case of data drift:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示意图展示了数据漂移情况下出现的问题：
- en: '![Figure 9.2 – Data drift'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '![图9.2 – 数据漂移'
- en: '](img/B18335_09_2.jpg)'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B18335_09_2.jpg)'
- en: Figure 9.2 – Data drift
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 图9.2 – 数据漂移
- en: Having covered two important causes of drift, the next section will present
    model decay and misspecification—a third drift-related problem.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在讨论了漂移的两个重要原因之后，下一节将介绍模型退化和误指定——第三个与漂移相关的问题。
- en: Model decay and misspecification
  id: totrans-47
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 模型退化和误指定
- en: Although not generally considered a problem of drift in the literature, I find
    it important to also mention problems with the model as one of the problems behind
    drifting and decaying performance. In real-life situations, humans are imperfect
    and make mistakes. Theoretically, we should expect models to be well specified
    and therefore not be the reasons for any problems.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然在文献中通常不认为模型问题是漂移的问题，但我认为将模型问题作为漂移和性能下降背后的一个问题也很重要。在现实情况下，人类是不完美的，会犯错误。理论上，我们应该期望模型被很好地指定，因此不应成为任何问题的原因。
- en: In practice, however, retraining of models may be wrongly automated, thereby
    introducing small problems that slowly, with time, add up to large problems, and
    this may be an important reason for model decay and lowering performance.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在实践中，模型的重新训练可能被错误地自动化，从而引入了小问题，这些问题随着时间的推移逐渐累积成大问题，这可能是模型退化性能下降的重要原因。
- en: 'The following schematic diagram shows what goes wrong in the case of model
    problems, due to any reason such as misspecification or retraining problems:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示意图展示了由于任何原因（如误指定或重新训练问题）导致的模型问题出现的问题：
- en: '![Figure 9.3 – Model-induced problems'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '![图9.3 – 模型引起的错误'
- en: '](img/B18335_09_3.jpg)'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B18335_09_3.jpg)'
- en: Figure 9.3 – Model-induced problems
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 图9.3 – 模型引起的错误
- en: Having seen three potential reasons for drift in streaming models, the next
    section will explain how model explicability can be used as a solution against
    drift.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在了解了流模型中漂移的三个潜在原因之后，下一节将解释如何使用模型可解释性作为对抗漂移的解决方案。
- en: Introducing model explicability
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 引入模型可解释性
- en: When models are learning in an online fashion, they are repeatedly relearning.
    This relearning process is happening automatically, and it is often impossible
    for a human user to keep an eye on the models continuously. In addition, this
    would go against the main goal of doing ML as the goal is to let machines—or models—take
    over, rather than having continuous human intervention.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 当模型以在线方式学习时，它们会反复重新学习。这个重新学习的过程是自动发生的，通常人类用户无法持续关注模型。此外，这也会违背进行机器学习的主要目标，因为目标是让机器或模型接管，而不是持续的人类干预。
- en: When models learn or relearn, data scientists are generally faced with programmatic
    model-building interfaces. Imagine a random forest, in which hundreds of decision
    trees are acting at the same time to predict a target variable for a new observation.
    Even the task of printing out and looking at all those decisions would be a huge
    task.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 当模型学习或重新学习时，数据科学家通常面临程序化模型构建接口。想象一下，一个随机森林，其中数百个决策树同时作用来预测新观察的目标变量。即使打印出并查看所有这些决策也是一个巨大的任务。
- en: Model explicability is a big topic in recent advances in ML. By throwing black-box
    models at data-science use cases, big mistakes are occurring. An example is that
    when self-driving cars were trained on a biased sample containing too many white
    people, the cars were measured to have more accidents with black people, just
    because of a data-science error. Understanding what happens in your model can
    have a life-saving impact.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 模型可解释性是机器学习最近进展中的一个重要话题。通过将黑盒模型应用于数据科学用例，正在发生一些重大错误。一个例子是，当自动驾驶汽车在包含过多白人的有偏样本上训练时，汽车被测量出与黑人发生更多事故，仅仅是因为数据科学错误。了解你模型中发生的事情可以产生救命的影响。
- en: When considering drift in models, it is also important to understand what happens
    in your model. The first model that you deploy is likely to be quite close to
    your expectation. After that, the model will relearn from every data point it
    encounters. If there are biases in the data, or if biases are occurring from over-
    or underfitting (and this happens when the model is running in autonomy), then
    at some point, you are likely to miss out on those trends.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在考虑模型中的漂移时，了解你模型中发生的事情也很重要。你部署的第一个模型可能非常接近你的预期。之后，模型将从遇到的每个数据点重新学习。如果数据中存在偏差，或者如果偏差是由于过拟合或欠拟合（当模型在自主运行时发生）而产生的，那么在某个时候，你可能会错过那些趋势。
- en: You need to make sure to set up an initial method for model explicability as
    well as continue to investigate the topic. In the current chapter, we'll be focusing
    on data drift and concept drift, but keep in mind that model misspecification
    can also be a huge contributor to decreasing accuracy. This will be covered in
    more depth in [*Chapter 11*](B18335_11_ePub.xhtml#_idTextAnchor215).
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要确保设置一个初始的方法来确保模型的可解释性，并继续研究这个话题。在当前章节中，我们将重点关注数据漂移和概念漂移，但请记住，模型误设也可能是一个导致准确性下降的巨大贡献者。这将在第11章中更深入地讨论。[第11章](B18335_11_ePub.xhtml#_idTextAnchor215)。
- en: For now, let's move on to some methods for measuring drift.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们继续探讨一些衡量漂移的方法。
- en: Measuring drift
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 衡量漂移
- en: There are two important things to consider for drift. We should first be able
    to measure drift, as we cannot counteract something that we are not aware of.
    Secondly, once we become aware of drift, we should define the right strategies
    for counteracting it. Let's discuss measurements for drift first.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 对于漂移，有两个重要的事情需要考虑。首先，我们应该能够衡量漂移，因为我们无法对抗我们不知道的东西。其次，一旦我们意识到漂移，我们应该定义正确的策略来对抗它。让我们首先讨论漂移的测量方法。
- en: Measuring data drift
  id: totrans-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 衡量数据漂移
- en: As described earlier, data drift means that the measurements are slowly changing
    over time, whereas the underlying concepts stay the same. To measure this, descriptive
    statistics can be very useful. As you have seen a lot of descriptive statistics
    in earlier chapters, we will not repeat the theory behind this.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，数据漂移意味着测量值随着时间的推移而缓慢变化，而基本概念保持不变。为了衡量这一点，描述性统计可以非常有用。既然你在前面的章节中已经看到了很多描述性统计，我们就不重复介绍其背后的理论了。
- en: 'To apply descriptive statistics to measure data drift, we could simply set
    up a number of descriptive statistics and track them over time. For each variable,
    you could set up the following:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 要应用描述性统计来衡量数据漂移，我们可以简单地设置一些描述性统计指标，并随着时间的推移跟踪它们。对于每个变量，你可以设置以下内容：
- en: Measurements of centrality (mean, median, mode)
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 中心性测量（均值、中位数、众数）
- en: Measurements of variation (standard deviation, variance, **interquartile range**,
    or **IQR**)
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 变化的测量（标准差、方差、**四分位距**或**IQR**）
- en: Event correlation between the variables
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 变量之间的事件相关性
- en: Besides this, it would be necessary to track drift on specific time scales.
    If you expect drift on very long periods, you could compute these descriptive
    statistics on a monthly or even yearly basis, but for quicker detection, it could
    be weekly, daily, or even hourly or more frequent.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，跟踪特定时间尺度的漂移也是必要的。如果你预计在非常长的时间段内会有漂移，你可以按月甚至按年计算这些描述性统计，但为了更快地检测，可以是每周、每天，甚至每小时或更频繁。
- en: The comparison of these metrics over time would allow you to detect a change
    in the data, which would be a common cause for drift in your model.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 这些指标随时间的变化比较将允许你检测数据中的变化，这可能是你模型中漂移的常见原因。
- en: Measuring concept drift
  id: totrans-72
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 测量概念漂移
- en: When measuring concept drift, the best thing to do is to set up a thorough tracking
    of model performance over time. The performance metric that you use will depend
    on your use case and on the type of model you use but may include an R2 score
    for regression, accuracy, an F1 score for validation, or even more.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在测量概念漂移时，最好的做法是设置一个详尽的模型性能随时间变化的跟踪。你使用的性能指标将取决于你的用例和所使用的模型类型，但可能包括回归的R2分数、准确度、验证的F1分数，甚至更多。
- en: When measuring model performance over time, you are likely to see a decrease
    if no model updating is done. With online models that relearn on every data point,
    this should theoretically be less of an issue. When you do see your performance
    decrease, this indicates that something is off somewhere in your system.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 当你在时间上测量模型性能时，如果没有进行模型更新，你很可能会看到性能下降。对于在线模型，它们会在每个数据点上重新学习，理论上这应该是一个较小的问题。当你看到你的性能下降时，这表明你的系统中某个地方出了问题。
- en: If you are already measuring data drift, this would be a good first thing to
    look at, as data drift is likely to cause decreasing model performance. If data
    drift is not occurring, you are likely to have a concept drift in your system.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你已经在测量数据漂移，这将是一个很好的起点，因为数据漂移很可能会导致模型性能下降。如果数据漂移没有发生，你系统中可能存在概念漂移。
- en: 'It is important to keep in mind that measuring model drift and data drift are
    closely linked together in practice: it is hard to attribute decreasing performance
    to one specific root cause. The goal should be to keep your model performance
    high and find solutions for this if things are off. Measuring both performance
    and individual statistics and even more metrics together is what will make your
    strategy powerful against drift.'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 重要的是要记住，在实践中，测量模型漂移和数据漂移是紧密相连的：很难将性能下降归因于一个特定的根本原因。目标应该是保持模型性能高，如果出现问题，找到解决方案。同时测量性能、个别统计数据以及更多指标将使你的策略对抗漂移更加强大。
- en: Let's now see some Python examples of how to detect drift in modeling.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们来看一些Python示例，说明如何检测建模中的漂移。
- en: Measuring drift in Python
  id: totrans-78
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Python中测量漂移
- en: When measuring drift, the first thing to do is to make sure that your model
    is writing out logs or results in some way. For the following example, you'll
    use a dataset in which each prediction was logged so that we have for each prediction
    the input variables, the prediction, the ground truth, and the absolute differences
    between prediction and ground truth as an indicator of error.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 在测量漂移时，首先要确保你的模型以某种方式记录日志或结果。在下面的例子中，你将使用一个数据集，其中每个预测都被记录下来，这样我们就有每个预测的输入变量、预测、真实值以及预测与真实值之间的绝对差异作为误差的指标。
- en: Logging your model's behavior is an absolute prerequisite if you want to work
    on drift detection. Let's start with some basic measurements that could help you
    to detect drift using Python.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 记录模型的行为是进行漂移检测的绝对前提条件。让我们从一些基本的测量开始，这些测量可以帮助你使用Python检测漂移。
- en: A basic intuitive approach to measuring drift
  id: totrans-81
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 测量漂移的基本直观方法
- en: 'In this section, you will discover an intuitive approach to measuring drift.
    Here are the steps we''ll follow:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，你将发现一种直观的测量漂移的方法。以下是我们将遵循的步骤：
- en: 'To get started measuring drift on our logged results data, we start by importing
    the data as a `pandas` DataFrame. This is done in the following code block:'
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要开始测量我们记录的结果数据中的漂移，我们首先将数据导入为`pandas` DataFrame。这在上面的代码块中完成：
- en: Code block 9-1
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块9-1
- en: '[PRE0]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'You will obtain a table that looks like the one shown here:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 你将获得一个看起来像下面这样的表格：
- en: '![Figure 9.4 – The data'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '![图9.4 – 数据]'
- en: '](img/B18335_09_4.jpg)'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/B18335_09_4.jpg]'
- en: Figure 9.4 – The data
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 图9.4 – 数据
- en: 'Now that you have the drift-detection data, let''s have a look at the development
    of the error over time by doing a `groupby` operation on the day and looking at
    the average error, as follows:'
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在你有了漂移检测数据，让我们通过在日期上执行`groupby`操作并查看平均错误来查看错误随时间的发展，如下所示：
- en: Code Block 9-2
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块9-2
- en: '[PRE1]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'You will obtain the following result:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 你将获得以下结果：
- en: '![Figure 9.5 – The result'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '![图9.5 – 结果'
- en: '](img/B18335_09_5.jpg)'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/B18335_09_5.jpg]'
- en: Figure 9.5 – The result
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 图9.5 – 结果
- en: You can clearly see that the error is strongly increasing over time, so we can
    be quite certain that we have a problem with model drift here. Now, of course,
    it is not yet defined whether this problem is caused by a problem in the data
    or a problem in the concept.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以清楚地看到错误随着时间的推移而强烈增加，因此我们可以相当肯定地认为我们这里有一个模型漂移的问题。当然，现在还没有定义这个问题是由数据问题还是概念问题引起的。
- en: 'Let''s do an analysis with the target variable to see whether the target has
    experienced large changes over time. The following code does an average of the
    ground-truth value per day, to see whether there was a clear drift in the target
    variable:'
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们通过分析目标变量来查看目标是否在时间上经历了大的变化。以下代码对每天的地面实况值进行平均，以查看目标变量是否出现了明显的漂移：
- en: Code block 9-3
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块9-3
- en: '[PRE2]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The result looks like this:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 结果看起来是这样的：
- en: '![Figure 9.6 – The result (continued)'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '![图9.6 – 结果（继续'
- en: '](img/B18335_09_6.jpg)'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/B18335_09_6.jpg]'
- en: Figure 9.6 – The result (continued)
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 图9.6 – 结果（继续）
- en: We do see a quite important change on average over this period.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 我们确实看到在这个时期平均上有一个相当重要的变化。
- en: 'Let''s take our inspection further and also do this analysis for each of the
    independent variables. The following code does an average of the three independent
    variables per day to see if there is any obvious shift in there:'
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们进一步检查，并为每个独立变量也进行这种分析。以下代码对每天三个独立变量进行平均，以查看是否存在任何明显的偏移：
- en: Code block 9-4
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块9-4
- en: '[PRE3]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'You will obtain the following result:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 你将获得以下结果：
- en: '![Figure 9.7 – The groupby result'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: '![图9.7 – 分组结果'
- en: '](img/B18335_09_7.jpg)'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/B18335_09_7.jpg]'
- en: Figure 9.7 – The groupby result
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 图9.7 – 分组结果
- en: We see a very clear change happening in the third explanatory variable, `X3`.
    It is highly probable that this is the cause of our model shift.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 我们看到第三个解释变量`X3`发生了非常明显的变化。这很可能就是我们的模型发生偏移的原因。
- en: Measuring drift with robust tools
  id: totrans-114
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用稳健的工具测量漂移
- en: If you are working on small use cases and you do not want to integrate with
    large external platforms, the previous examples are really good. However, if you
    are working at a company where you are limited in resources, it may not be possible
    or not worth it to develop code for common use cases from scratch.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你正在处理小型用例，并且不想与大型外部平台集成，那么前面的例子真的很好。然而，如果你在一个资源受限的公司工作，从头开始为常见用例开发代码可能不可行或不值得。
- en: Drift detection is a use case that is getting quite some popularity at the moment,
    so more and more robust solutions are being presented to the public—be it paid
    programs, cloud programs, or open source solutions.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 漂移检测是目前相当受欢迎的一个用例，因此越来越多的稳健解决方案被公之于众——无论是付费程序、云程序还是开源解决方案。
- en: Next, I will present a number of useful solutions that you could look at if
    you are interested in taking on external platforms for doing your model performance
    follow-ups and your drift-detection use cases. As those platforms are owned by
    companies and are sometimes paid, I do not want to go into much depth here, but
    it is good to give you some pointers in case this is of interest to you.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我将介绍一些有用的解决方案，如果你对在外部平台上进行模型性能跟踪和漂移检测用例感兴趣，你可以考虑这些解决方案。由于这些平台属于公司，有时是付费的，我不想在这里深入探讨，但如果你对此感兴趣，提供一些指导是有好处的。
- en: Soda SQL
  id: totrans-118
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Soda SQL
- en: One solution that is interesting to look at is Soda SQL. This is a tool that
    is specific for data quality, so it is not necessarily tuned for ML use cases.
    However, data quality issues will almost necessarily result in problematic models,
    so I find it valuable to discuss this solution.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 一个值得关注的解决方案是Soda SQL。这是一个专门针对数据质量的工具，因此它不一定针对ML用例进行了优化。然而，数据质量问题几乎必然会导致有问题的模型，所以我发现讨论这个解决方案很有价值。
- en: 'You can find full information here: [https://docs.soda.io/](https://docs.soda.io/).
    Soda SQL is a tool that is really oriented toward data engineering, so I won''t
    go too much into detail here, but I do recommend keeping it in mind for your use
    cases.'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在此找到完整信息：[https://docs.soda.io/](https://docs.soda.io/)。Soda SQL是一个真正面向数据工程工具，所以在这里我不会过多深入细节，但我确实建议您在使用案例中记住它。
- en: MLflow with whylogs
  id: totrans-121
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: MLflow with whylogs
- en: A tool that is much more oriented toward ML models in production is the `whylogs`
    open source Python library, which integrates with the WhyLabs app ([whylabsapp.com](http://whylabsapp.com)).
    If you sign up for an account with WhyLabs, you can use their **application programming
    interface** (**API**) and send your model logging directly to their databases,
    where it will be analyzed and made accessible to you.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 一个更多面向生产中ML模型的工具是`whylogs`开源Python库，它与WhyLabs应用程序（[whylabsapp.com](http://whylabsapp.com)）集成。如果您在WhyLabs注册了一个账户，您可以使用他们的**应用程序编程接口**（**API**）并将您的模型日志直接发送到他们的数据库，在那里它将被分析并可供您访问。
- en: Neptune
  id: totrans-123
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Neptune
- en: A comparable tool is being delivered by Neptune ([neptune.ai](http://neptune.ai)).
    The goal of Neptune is also to present an **ML operations** (**MLOps**) platform
    to which you can send your logging data from basically any Python (or other) model
    environment. After that, you can access the performance on their web platform,
    and all the heavy lifting for drift detection is taken off your shoulders.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: Neptune（[neptune.ai](http://neptune.ai)）也在提供类似的工具。Neptune的目标也是提供一个**机器学习操作**（**MLOps**）平台，您可以从基本上任何Python（或其他）模型环境中发送您的日志数据。之后，您可以在他们的网络平台上访问性能，并且漂移检测的所有繁重工作都从您的肩上卸下。
- en: You have now seen some theoretical methods for measuring and detecting drift,
    and some start-up platforms that are proposing to do this type of work for you
    if you do not have the capacity to deliver it. Still, we have not talked about
    something equally important, which is counteracting drift.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 您现在已经看到了一些用于测量和检测漂移的理论方法，以及一些启动平台，如果您没有能力完成这项工作，它们会为您做这类工作。尽管如此，我们还没有讨论到同样重要的一点，那就是对抗漂移。
- en: Counteracting drift
  id: totrans-126
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 对抗漂移
- en: As discussed in the introduction, model drift is bound to happen. Maybe it happens
    very slowly or maybe it occurs quickly, but it is something that cannot really
    be avoided if we don't try to actively counteract it.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 如引言中所述，模型漂移是必然发生的。它可能发生得非常缓慢，也可能发生得很快，但如果我们不尝试积极对抗它，这实际上是无法避免的。
- en: What you will realize in the coming section is that online learning, which has
    been covered extensively in this book, is actually a very performant method against
    drift. Although we had not yet clearly defined drift, you will now come to understand
    that online learning has a strong added value here.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的章节中，您将意识到在线学习，这本书已经广泛介绍了，实际上是一种对抗漂移的高效方法。尽管我们还没有明确定义漂移，但您现在将理解在线学习在这里有很大的附加值。
- en: 'We will now recapitulate two approaches for counteracting drift, depending
    on the type of work you are doing, as follows:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在将回顾两种对抗漂移的方法，具体取决于您正在做的工作类型，如下所述：
- en: Retraining for offline learning
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 离线学习的重新训练
- en: Online learning
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在线学习
- en: Let's start with the most traditional case, which is offline learning with retraining
    strategies implemented against model decay.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从最传统的案例开始，即通过实施针对模型衰减的重新训练策略进行的离线学习。
- en: Offline learning with retraining strategies against drift
  id: totrans-133
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 针对漂移的离线学习重新训练策略
- en: 'Offline learning is still the most commonly used method for ML. In offline
    learning, the model is trained once and then used only for prediction. The following
    schematic diagram depicts the offline learning process:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 离线学习仍然是ML中最常用的方法。在离线学习中，模型只训练一次，然后仅用于预测。以下示意图描述了离线学习过程：
- en: '![Figure 9.8 – Schematic diagram of offline learning'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: '![图9.8 – 离线学习示意图'
- en: '](img/B18335_09_8.jpg)'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B18335_09_8.jpg)'
- en: Figure 9.8 – Schematic diagram of offline learning
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 图9.8 – 离线学习示意图
- en: To update the model, it is generally necessary to retrain the full model and
    deploy a new version to your production environment. This is shown in *Figure
    9.9*.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 要更新模型，通常需要重新训练整个模型并将新版本部署到您的生产环境中。这如图*图9.9*所示。
- en: The advantages of this approach are that the model builder has complete control
    over their model. There is no risk of the model learning new—wrong—processes.
    This comes at the cost of not updating when data or concept drift occurs. In this
    way, its advantages and disadvantages are the opposite of online learning.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 这种方法的优势在于模型构建者对其模型有完全控制。没有风险模型会学习到新的——错误——过程。然而，这需要付出代价，即当数据或概念发生漂移时，模型不会更新。因此，它的优势和劣势与在线学习相反。
- en: Online learning against drift
  id: totrans-140
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 对抗漂移的在线学习
- en: 'As you have seen throughout this book, online learning is an alternative to
    offline learning and allows the model to update whenever a new data point arrives.
    The following diagram illustrates how a retraining strategy works:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你在本书中看到的，在线学习是离线学习的替代方案，并允许模型在新的数据点到达时随时更新。以下图表说明了重新训练策略是如何工作的：
- en: '![Figure 9.9 – Schematic diagram of online learning'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 9.9 – Schematic diagram of online learning]'
- en: '](img/B18335_09_9.jpg)'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/B18335_09_9.jpg]'
- en: Figure 9.9 – Schematic diagram of online learning
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 图9.9 – 在线学习的示意图
- en: 'Using online learning, the model has some autonomy in updating and will theoretically
    stay closer to the data: less drift should occur. However, this comes at a cost
    of the model builder not having full control over the theory model. Learning may
    go in the wrong direction, and unwanted decision rules are learned by the model.'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 使用在线学习，模型在更新方面具有一定的自主性，理论上将更接近数据：应该发生更少的漂移。然而，这需要模型构建者对理论模型没有完全控制。学习可能会走向错误的方向，模型可能会学习到不想要的决策规则。
- en: The advantages are the opposite of offline learning, and it will really depend
    on the business case whether to choose online or offline learning.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 优势与离线学习相反，是否选择在线或离线学习将真正取决于业务案例。
- en: Summary
  id: totrans-147
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, you have first been introduced to the underlying foundations
    of model drift. You have seen that model drift and a decrease in model performance
    over time are to be expected in ML models in a real-life environment.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你首先被介绍到了模型漂移的潜在基础。你看到，在现实世界的环境中，机器学习模型中模型漂移和模型性能随时间的下降是可以预期的。
- en: Decreasing performance can generally be attributed to drifting data, drifting
    concepts, or model-induced problems. Drifting data occurs when data measurements
    change over time, but the underlying theoretical concept behind the model stays
    the same. Concept drift captures problems of those theoretical underlying foundations
    of the learned processes.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 性能下降通常可以归因于漂移数据、漂移概念或模型引起的问题。当数据测量随时间变化，但模型背后的基本理论概念保持不变时，就会发生数据漂移。概念漂移捕捉了学习过程的理论基础问题。
- en: Model- and model retraining-related problems are generally not considered standard
    reasons for drift, but they should still be monitored and taken seriously. Depending
    on your business case, relearning—especially if monitoring is lacking—can introduce
    large problems with ML systems.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 模型和模型重新训练相关的问题通常不被视为漂移的标准原因，但它们仍然应该被监控并认真对待。根据你的业务案例，重新学习——尤其是如果缺乏监控——可能会给机器学习系统引入大问题。
- en: Data drift can generally be measured well by using descriptive statistics. Concept
    drift is often harder to measure, but its presence can be deduced from an otherwise
    inexplicable decrease in model performance. In general, the importance here is
    not in attributing the decreasing performance to a specific cause, but rather
    in solving the problem using one of the provided solutions.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 通常可以使用描述性统计很好地衡量数据漂移。概念漂移通常更难衡量，但它的存在可以从模型性能的不可解释下降中推断出来。一般来说，这里的重要性不在于将下降的性能归因于特定的原因，而在于使用提供的解决方案之一解决问题。
- en: Retraining strategies can often be used for offline models. They are a way to
    update models, without giving up control of learned decision rules. Online models,
    as thoroughly presented throughout the earlier chapters of this book, are a great
    alternative to retraining offline models. The great advantage of using online
    models is that online models are made specifically for retraining. These models
    allow for a larger degree of autonomy and will prove useful in many business cases,
    as long as monitoring of both data and models is implemented correctly.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 重新训练策略通常可以用于离线模型。它们是更新模型的一种方式，而不放弃对学习决策规则的控制。正如本书前几章详细介绍的，在线模型是重新训练离线模型的绝佳替代方案。使用在线模型的一个巨大优势是，这些模型专门为重新训练而设计。这些模型允许更大的自主性，只要正确实施数据和模型的监控，它们将在许多业务案例中非常有用。
- en: In the next chapter, you will see how to adapt **feature transformation** (**FT**)
    and scaling to the online modeling case. FT and scaling are standard practice
    in many ML use cases, but due to drift in data—and bias in windowing—it poses
    some theoretical difficulties that need to be taken into account.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，您将了解如何将**特征转换**（**FT**）和缩放应用于在线建模案例。FT和缩放是许多机器学习用例中的标准实践，但由于数据漂移——以及窗口中的偏差——它带来了一些需要考虑的理论难题。
- en: Further reading
  id: totrans-154
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'Model drift: [https://www.ibm.com/cloud/watson-studio/drift](https://www.ibm.com/cloud/watson-studio/drift)'
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 模型漂移：[https://www.ibm.com/cloud/watson-studio/drift](https://www.ibm.com/cloud/watson-studio/drift)
- en: 'Data drift: [https://docs.microsoft.com/en-us/azure/machine-learning/how-to-monitor-datasets?tabs=python](https://docs.microsoft.com/en-us/azure/machine-learning/how-to-monitor-datasets?tabs=python)'
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据漂移：[https://docs.microsoft.com/en-us/azure/machine-learning/how-to-monitor-datasets?tabs=python](https://docs.microsoft.com/en-us/azure/machine-learning/how-to-monitor-datasets?tabs=python)
- en: 'Concept drift: [https://www.iguazio.com/blog/concept-drift-deep-dive-how-to-build-a-drift-aware-ml-system/](https://www.iguazio.com/blog/concept-drift-deep-dive-how-to-build-a-drift-aware-ml-system/)'
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 概念漂移：[https://www.iguazio.com/blog/concept-drift-deep-dive-how-to-build-a-drift-aware-ml-system/](https://www.iguazio.com/blog/concept-drift-deep-dive-how-to-build-a-drift-aware-ml-system/)
- en: 'Dealing with concept drift: [https://neptune.ai/blog/concept-drift-best-practices](https://neptune.ai/blog/concept-drift-best-practices)'
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 处理概念漂移：[https://neptune.ai/blog/concept-drift-best-practices](https://neptune.ai/blog/concept-drift-best-practices)
- en: 'Retraining strategies: [https://www.kdnuggets.com/2019/12/ultimate-guide-model-retraining.html](https://www.kdnuggets.com/2019/12/ultimate-guide-model-retraining.html)'
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 重新训练策略：[https://www.kdnuggets.com/2019/12/ultimate-guide-model-retraining.html](https://www.kdnuggets.com/2019/12/ultimate-guide-model-retraining.html)
