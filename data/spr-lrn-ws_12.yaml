- en: 4\. Autoregression
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: 4\. 自回归
- en: 'Activity 4.01: Autoregression Model Based on Periodic Data'
  id: totrans-1
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 活动4.01：基于周期数据的自回归模型
- en: Import the necessary packages, classes, and libraries.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 导入必要的包、类和库。
- en: Note
  id: totrans-3
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 注意
- en: 'This activity will work on an earlier version of pandas, ensure that you downgrade
    the version of pandas using the command:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 该活动将使用早期版本的pandas，请确保使用以下命令降级pandas版本：
- en: pip install pandas==0.24.2
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: pip install pandas==0.24.2
- en: 'The code is as follows:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 代码如下：
- en: import pandas as pd
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: import pandas as pd
- en: import numpy as np
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: import numpy as np
- en: from statsmodels.tsa.ar_model import AR
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: from statsmodels.tsa.ar_model import AR
- en: from statsmodels.graphics.tsaplots import plot_acf
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: from statsmodels.graphics.tsaplots import plot_acf
- en: import matplotlib.pyplot as plt
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: import matplotlib.pyplot as plt
- en: 'Load the data and convert the Date column to datetime:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 加载数据并将Date列转换为datetime类型：
- en: df = pd.read_csv('../Datasets/austin_weather.csv')
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: df = pd.read_csv('../Datasets/austin_weather.csv')
- en: df.Date = pd.to_datetime(df.Date)
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: df.Date = pd.to_datetime(df.Date)
- en: print(df.head())
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: print(df.head())
- en: print(df.tail())
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: print(df.tail())
- en: 'The output for df.head() should look as follows:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: df.head()的输出应如下所示：
- en: '![Figure 4.22: Output for df.head()'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '![图4.22：df.head()的输出'
- en: '](img/image-6NRIUD3J.jpg)'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/image-6NRIUD3J.jpg)'
- en: 'Figure 4.22: Output for df.head()'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.22：df.head()的输出
- en: 'The output for df.tail() should look as follows:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: df.tail()的输出应如下所示：
- en: '![Figure 4.23: Output for df.tail()'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '![图4.23：df.tail()的输出'
- en: '](img/image-79U4JNOU.jpg)'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/image-79U4JNOU.jpg)'
- en: 'Figure 4.23: Output for df.tail()'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.23：df.tail()的输出
- en: 'Plot the complete set of average temperature values (df.TempAvgF) with Date
    on the x axis:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 绘制完整的平均温度值集（df.TempAvgF），以Date为x轴：
- en: fig, ax = plt.subplots(figsize = (10, 7))
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: fig, ax = plt.subplots(figsize = (10, 7))
- en: ax.scatter(df.Date, df.TempAvgF)
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: ax.scatter(df.Date, df.TempAvgF)
- en: plt.show()
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: plt.show()
- en: 'The output will be as follows:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 输出如下所示：
- en: '![Figure 4.24: Plot of Austin temperature data over several years'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '![图4.24：奥斯汀温度数据的多年变化图'
- en: '](img/image-MN96GL2H.jpg)'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/image-MN96GL2H.jpg)'
- en: 'Figure 4.24: Plot of Austin temperature data over several years'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.24：奥斯汀温度数据的多年变化图
- en: Note the periodic behavior of the data. It's sensible given that temperature
    varies over an annual weather cycle.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 注意数据的周期性行为。考虑到温度随年度天气周期变化，这是合理的。
- en: 'Construct an autocorrelation plot (using statsmodels) to see whether the average
    temperature can be used with an autoregression model. Where is the lag acceptable
    and where is it not for an autoregression model? Check the following code:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 构建一个自相关图（使用statsmodels），以查看是否可以使用自回归模型来预测平均温度。自回归模型的滞后期在哪些地方是可接受的，哪些地方则不可接受？请查看以下代码：
- en: max_lag = 730
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: max_lag = 730
- en: fig, ax = plt.subplots(figsize = (10, 7))
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: fig, ax = plt.subplots(figsize = (10, 7))
- en: acf_plot = plot_acf(x = df.TempAvgF, ax = ax, lags = max_lag, \
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: acf_plot = plot_acf(x = df.TempAvgF, ax = ax, lags = max_lag, \
- en: use_vlines = False, alpha = 0.9, \
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: use_vlines = False, alpha = 0.9, \
- en: title = 'Autocorrelation of Austin Temperature '\
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: title = '奥斯汀温度的自相关'
- en: '''vs. lag'')'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '''vs. 滞后'')'
- en: ax.grid(True)
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: ax.grid(True)
- en: ax.text(280, -0.01, '90% confidence interval', fontsize = 9)
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: ax.text(280, -0.01, '90%置信区间', fontsize = 9)
- en: ax.set_xlabel('Lag', fontsize = 14)
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: ax.set_xlabel('滞后', fontsize = 14)
- en: ax.tick_params(axis = 'both', labelsize = 12)
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: ax.tick_params(axis = 'both', labelsize = 12)
- en: 'The plot should look as follows:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 图表应如下所示：
- en: '![Figure 4.25: Autocorrelation versus lag (days)'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '![图4.25：自相关与滞后（天数）的关系'
- en: '](img/image-S6EAOA1L.jpg)'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/image-S6EAOA1L.jpg)'
- en: 'Figure 4.25: Autocorrelation versus lag (days)'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.25：自相关与滞后（天数）的关系
- en: The lag is acceptable only when the autocorrelation line lies outside the 90%
    confidence bounds, as represented by the shaded area. Note that, in this case,
    instead of a steadily decreasing ACF value, we see peaks and valleys. This should
    match your intuition because the original data shows a periodic pattern. Also,
    note that there are very strong positive and negative correlations. It is possible
    to leverage the strong negative correlation at around 180 days (half a year),
    but that is a more advanced time series topic beyond our scope here. The main
    takeaway from Figure 4.25 is that there is a very steep drop in the ACF after
    short lag times. Now, use the same methods as before to look at the lag plots
    versus the ACF.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 只有当自相关线位于90%置信区间之外时，滞后期才是可接受的，置信区间以阴影区域表示。请注意，在这种情况下，我们看到的是峰值和谷值，而不是稳定下降的ACF值。这应该符合你的直觉，因为原始数据展示了周期性模式。另外，请注意，存在非常强的正相关和负相关。在大约180天（半年）左右，可能会利用强烈的负相关，但那是一个更高级的时间序列话题，超出了我们这里的讨论范围。从图4.25中可以得出的主要结论是，在短滞后期后，ACF有一个非常陡峭的下降。现在，使用与之前相同的方法查看滞后图与ACF的关系。
- en: 'Get the actual ACF values:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 获取实际的ACF值：
- en: 'corr0 = np.correlate(df.TempAvgF[0: ] - df.TempAvgF.mean(), \'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 'corr0 = np.correlate(df.TempAvgF[0: ] - df.TempAvgF.mean(), \'
- en: 'df.TempAvgF[0: ] - df.TempAvgF.mean(), mode = ''valid'')'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 'df.TempAvgF[0: ] - df.TempAvgF.mean(), mode = ''valid'')'
- en: corrs = [np.correlate(df.TempAvgF[:(df.TempAvgF.shape[0] - i)] \
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: corrs = [np.correlate(df.TempAvgF[:(df.TempAvgF.shape[0] - i)] \
- en: '- df.TempAvgF.mean(), df.TempAvgF[i: ] \'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '- df.TempAvgF.mean(), df.TempAvgF[i: ] \'
- en: '- df.TempAvgF.mean(), mode = ''valid'')'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '- df.TempAvgF.mean(), mode = ''valid'')'
- en: for i in range(max_lag)] / corr0
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: for i in range(max_lag)] / corr0
- en: 'We need the same utility grid plotting function we developed in Exercise 4.01,
    Creating an Autoregression Model:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要在练习 4.01 中开发的相同实用网格绘图函数，用于创建自回归模型：
- en: '"""'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '"""'
- en: utility function to plot out a range of
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 用于绘制一系列滞后图的实用函数
- en: plots depicting self-correlation
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 展示自相关的图
- en: '"""'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '"""'
- en: def plot_lag_grid(series, corrs, axis_min, axis_max, \
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: def plot_lag_grid(series, corrs, axis_min, axis_max, \
- en: 'num_plots, total_lag, n_rows, n_cols):'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 'num_plots, total_lag, n_rows, n_cols):'
- en: lag_step = int(total_lag / num_plots)
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: lag_step = int(total_lag / num_plots)
- en: fig = plt.figure(figsize = (18, 16))
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: fig = plt.figure(figsize = (18, 16))
- en: 'for i, var_name in enumerate(range(num_plots)):'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 'for i, var_name in enumerate(range(num_plots)):'
- en: corr = corrs[lag_step * i]
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: corr = corrs[lag_step * i]
- en: ax = fig.add_subplot(n_rows, n_cols, i + 1)
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: ax = fig.add_subplot(n_rows, n_cols, i + 1)
- en: ax.scatter(series, series.shift(lag_step * i))
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: ax.scatter(series, series.shift(lag_step * i))
- en: ax.set_xlim(axis_min, axis_max)
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: ax.set_xlim(axis_min, axis_max)
- en: ax.set_ylim(axis_min, axis_max)
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: ax.set_ylim(axis_min, axis_max)
- en: ax.set_title('lag = ' + str(lag_step * i))
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: ax.set_title('lag = ' + str(lag_step * i))
- en: ax.text(axis_min + 0.05 * (axis_max - axis_min), \
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: ax.text(axis_min + 0.05 * (axis_max - axis_min), \
- en: axis_max - 0.05 * (axis_max - axis_min), \
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: axis_max - 0.05 * (axis_max - axis_min), \
- en: '''correlation = '' + str(round(corr[0], 3)))'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '''相关性 = '' + str(round(corr[0], 3)))'
- en: fig.tight_layout()
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: fig.tight_layout()
- en: plt.show()
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: plt.show()
- en: 'Now, given that we have an indication that we are interested in short lags,
    but also that there are strong correlations around a half year and a full year,
    let''s look at two timescales:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，既然我们已经有迹象表明我们对短滞后感兴趣，但也发现半年和一年附近有强相关性，让我们看看两个时间尺度：
- en: plot_lag_grid(df.TempAvgF, corrs, df.TempAvgF.min(), \
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: plot_lag_grid(df.TempAvgF, corrs, df.TempAvgF.min(), \
- en: df.TempAvgF.max(), 9, 45, 3, 3)
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: df.TempAvgF.max(), 9, 45, 3, 3)
- en: plot_lag_grid(df.TempAvgF, corrs, df.TempAvgF.min(), \
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: plot_lag_grid(df.TempAvgF, corrs, df.TempAvgF.min(), \
- en: df.TempAvgF.max(), 9, 405, 3, 3)
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: df.TempAvgF.max(), 9, 405, 3, 3)
- en: 'The output for short lags will be as follows:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 短滞后的输出结果如下：
- en: '![Figure 4.26: Lag plots with short lags'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 4.26：短滞后的滞后图'
- en: '](img/image-I4WY2ZXG.jpg)'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/image-I4WY2ZXG.jpg)'
- en: 'Figure 4.26: Lag plots with short lags'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.26：短滞后的滞后图
- en: 'The output for longer lags will be as follows:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 较长滞后的输出结果如下：
- en: '![Figure 4.27: Lag plots with longer lags'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 4.27：较长滞后的滞后图'
- en: '](img/image-QG5SLXLX.jpg)'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/image-QG5SLXLX.jpg)'
- en: 'Figure 4.27: Lag plots with longer lags'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.27：较长滞后的滞后图
- en: We can see from Figure 4.26 that the correlation degrades consistently from
    lag 5 to 40\. Over a longer timescale, Figure 4.27 shows that the correlation
    degrades rapidly and then improves as we near a lag of one year. This matches
    the intuition from the plot of the raw data (side note—this should reinforce the
    importance of EDA).
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以从图 4.26 看出，相关性从滞后 5 到 40 一直在下降。随着时间尺度的延长，图 4.27 显示相关性快速下降，然后随着滞后接近一年时逐渐改善。这与原始数据的图表直觉相吻合（附注——这应该加强EDA的重要性）。
- en: 'We would expect from our initial analysis that the autoregression model would
    focus on fairly short lags. Let''s use the statsmodelsAR function to build a model
    and see the results:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 我们从初步分析中预期，自回归模型将专注于相对短的滞后。让我们使用 statsmodelsAR 函数来构建一个模型并查看结果：
- en: '"""'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '"""'
- en: statsmodels AR function builds an autoregression model
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: statsmodels AR 函数构建自回归模型
- en: using all the defaults, it will determine the max lag
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 使用所有默认设置，它将确定最大滞后
- en: and provide all the model coefficients
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 并提供所有模型系数
- en: '"""'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '"""'
- en: model = AR(df.TempAvgF)
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: model = AR(df.TempAvgF)
- en: model_fit = model.fit()
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: model_fit = model.fit()
- en: model fit now contains all the model information
  id: totrans-100
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 模型拟合现在包含了所有模型信息
- en: max_lag = model_fit.k_ar
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: max_lag = model_fit.k_ar
- en: '"""'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '"""'
- en: note that by using defaults, the maximum lag is
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，使用默认设置时，最大滞后是
- en: computed as round(12*(nobs/100.)**(1/4.))
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 计算方法为 round(12*(nobs/100.)**(1/4.))
- en: see https://www.statsmodels.org/devel/generated/statsmodels.tsa.ar_model.AR.fit.html#statsmodels.tsa.ar_model.AR.fit
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 请参见 [https://www.statsmodels.org/devel/generated/statsmodels.tsa.ar_model.AR.fit.html#statsmodels.tsa.ar_model.AR.fit](https://www.statsmodels.org/devel/generated/statsmodels.tsa.ar_model.AR.fit.html#statsmodels.tsa.ar_model.AR.fit)
- en: '"""'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '"""'
- en: 'print(''Max Lag: '' + str(max_lag))'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: print('最大滞后：' + str(max_lag))
- en: 'print(''Coefficients: \n'' + str(model_fit.params))'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: print('系数：\n' + str(model_fit.params))
- en: how far into the future we want to predict
  id: totrans-109
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 我们想预测多远的未来
- en: max_forecast = 365
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: max_forecast = 365
- en: generate predictions from the model
  id: totrans-111
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从模型生成预测值
- en: 'pred_temp = pd.DataFrame({''pred_temp'': \'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 'pred_temp = pd.DataFrame({''pred_temp'': \'
- en: model_fit.predict(start = max_lag, \
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: model_fit.predict(start = max_lag, \
- en: end = df.shape[0] \
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: end = df.shape[0] \
- en: + max_forecast - 1)})
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: + max_forecast - 1)})
- en: attach the dates for visualization
  id: totrans-116
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 附加日期以便可视化
- en: pred_temp['Date'] = df.loc[pred_temp.index, 'Date'].reindex()
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: pred_temp['Date'] = df.loc[pred_temp.index, 'Date'].reindex()
- en: pred_temp.loc[(max(df.index) + 1):, 'Date'] = \
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: pred_temp.loc[(max(df.index) + 1):, 'Date'] = \
- en: pd.to_datetime([max(df.Date) \
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: pd.to_datetime([max(df.Date) \
- en: + pd.Timedelta(days = i)
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: + pd.Timedelta(days = i)
- en: for i in range(1, max_forecast + 1)])
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: for i in range(1, max_forecast + 1)])
- en: 'The result is a model with lags of up to 23 days:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 结果是一个具有最多23天滞后的模型：
- en: '![Figure 4.28: AR model of Austin temperature data'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 4.28：奥斯汀温度数据的AR模型'
- en: '](img/image-0SLEXDL5.jpg)'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/image-0SLEXDL5.jpg)'
- en: 'Figure 4.28: AR model of Austin temperature data'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.28：奥斯汀温度数据的AR模型
- en: 'Plot the predictions, forecast, and raw data on the same plot:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 在同一图表上绘制预测、预报和原始数据：
- en: '"""'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '"""'
- en: visualize the predictions overlaid on the real data
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 可视化叠加在实际数据上的预测
- en: as well as the extrapolation to the future
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 以及对未来的外推
- en: '"""'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '"""'
- en: fig, ax = plt.subplots(figsize = (10, 7))
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: fig, ax = plt.subplots(figsize = (10, 7))
- en: ax.plot(df.Date, df.TempAvgF, c = "blue", \
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: ax.plot(df.Date, df.TempAvgF, c = "blue", \
- en: linewidth = 4, label = 'Actual Average Temperature')
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: linewidth = 4, label = '实际平均温度')
- en: 'ax.plot(pred_temp.loc[0 : len(df.TempAvgF), ''Date''], \'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 'ax.plot(pred_temp.loc[0 : len(df.TempAvgF), ''Date''], \'
- en: 'pred_temp.loc[0 : len(df.TempAvgF), ''pred_temp''], \'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 'pred_temp.loc[0 : len(df.TempAvgF), ''pred_temp''], \'
- en: c = "yellow", linewidth = 0.5, \
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: c = "yellow", linewidth = 0.5, \
- en: label = 'Predicted Temperature')
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: label = '预测温度')
- en: ax.plot(pred_temp.loc[len(df.TempAvgF):, 'Date'], \
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: ax.plot(pred_temp.loc[len(df.TempAvgF):, 'Date'], \
- en: pred_temp.loc[len(df.TempAvgF):, 'pred_temp'], \
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: pred_temp.loc[len(df.TempAvgF):, 'pred_temp'], \
- en: c = "red", linewidth = 2, \
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: c = "red", linewidth = 2, \
- en: label = 'Forecast Temperature')
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: label = '预测温度')
- en: ax.set_xlabel('Date', fontsize = 14)
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: ax.set_xlabel('日期', fontsize = 14)
- en: ax.tick_params(axis = 'both', labelsize = 12)
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: ax.tick_params(axis = 'both', labelsize = 12)
- en: ax.set_title('Austin Texas Average Daily Temperature')
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: ax.set_title('奥斯汀德克萨斯州每日平均温度')
- en: ax.tick_params(axis = 'both', labelsize = 12)
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: ax.tick_params(axis = 'both', labelsize = 12)
- en: ax.legend()
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: ax.legend()
- en: plt.show()
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: plt.show()
- en: 'The output will be as follows:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 输出结果如下：
- en: '![Figure 4.29: Austin temperature predictions and forecast'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 4.29：奥斯汀温度预测与预报'
- en: '](img/image-62BMHFHF.jpg)'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/image-62BMHFHF.jpg)'
- en: 'Figure 4.29: Austin temperature predictions and forecast'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.29：奥斯汀温度预测与预报
- en: 'Let''s zoom in on the end of the data, on the last 30 days of the data and
    on the first 30 forecast values:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们放大查看数据的最后30天，以及前30个预测值：
- en: zoom in on a window near the end of the raw data
  id: totrans-153
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 放大查看原始数据末端附近的窗口
- en: window = 30
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: window = 30
- en: fig, ax = plt.subplots(figsize = (10, 7))
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: fig, ax = plt.subplots(figsize = (10, 7))
- en: 'ax.plot(df.Date[(len(df.TempAvgF) - window) : len(df.TempAvgF)], \'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 'ax.plot(df.Date[(len(df.TempAvgF) - window) : len(df.TempAvgF)], \'
- en: 'df.TempAvgF[(len(df.TempAvgF) - window) : \'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 'df.TempAvgF[(len(df.TempAvgF) - window) : \'
- en: len(df.TempAvgF)], \
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: len(df.TempAvgF)], \
- en: c = "blue", linewidth = 4, \
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: c = "blue", linewidth = 4, \
- en: label = 'Actual Average Temperature')
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: label = '实际平均温度')
- en: ax.plot(pred_temp.Date.iloc[(-max_forecast \
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: ax.plot(pred_temp.Date.iloc[(-max_forecast \
- en: '- window):(-max_forecast)], \'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: '- window):(-max_forecast)], \'
- en: pred_temp.pred_temp.iloc[(-max_forecast \
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: pred_temp.pred_temp.iloc[(-max_forecast \
- en: '- window):(-max_forecast)], \'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: '- window):(-max_forecast)], \'
- en: c = "red", linewidth = 2, label = 'Predicted Temperature')
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: c = "red", linewidth = 2, label = '预测温度')
- en: ax.plot(pred_temp.loc[len(df.TempAvgF):\
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: ax.plot(pred_temp.loc[len(df.TempAvgF):\
- en: (len(df.TempAvgF) + window), 'Date'], \
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: (len(df.TempAvgF) + window), 'Date'], \
- en: pred_temp.loc[len(df.TempAvgF):\
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: pred_temp.loc[len(df.TempAvgF):\
- en: (len(df.TempAvgF) + window), 'pred_temp'], \
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: (len(df.TempAvgF) + window), 'pred_temp'], \
- en: c = "green", linewidth = 2, label = 'Forecast Temperature')
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: c = "green", linewidth = 2, label = '预测温度')
- en: ax.set_xlabel('Date', fontsize = 14)
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: ax.set_xlabel('日期', fontsize = 14)
- en: ax.tick_params(axis = 'both', labelsize = 12)
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: ax.tick_params(axis = 'both', labelsize = 12)
- en: ax.set_title('Austin Texas Average Daily Temperature')
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: ax.set_title('奥斯汀德克萨斯州每日平均温度')
- en: ax.tick_params(axis = 'both', labelsize = 12)
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: ax.tick_params(axis = 'both', labelsize = 12)
- en: ax.set_xticks(pd.date_range(df.Date[len(df.TempAvgF) - window], \
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: ax.set_xticks(pd.date_range(df.Date[len(df.TempAvgF) - window], \
- en: df.Date[len(df.TempAvgF) - 1] \
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: df.Date[len(df.TempAvgF) - 1] \
- en: + pd.Timedelta(days = window), 5))
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: + pd.Timedelta(days = window), 5))
- en: ax.legend()
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: ax.legend()
- en: plt.show()
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: plt.show()
- en: 'We will get the following output:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将得到以下输出：
- en: '![Figure 4.30: Detail of predictions near the end of the data'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 4.30：数据末端预测的详细情况'
- en: '](img/image-55LKGBXK.jpg)'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/image-55LKGBXK.jpg)'
- en: 'Figure 4.30: Detail of predictions near the end of the data'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.30：数据末端预测的详细情况
- en: Note
  id: totrans-184
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 注释
- en: To access the source code for this specific section, please refer to https://packt.live/3hOXUQL.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 若要访问此特定部分的源代码，请参考 https://packt.live/3hOXUQL.
- en: You can also run this example online at https://packt.live/313Vmbl. You must
    execute the entire Notebook in order to get the desired result.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以在 https://packt.live/313Vmbl 在线运行这个示例。你必须执行整个 Notebook 才能得到预期的结果。
- en: 'Now that the activity is successfully completed, upgrade the version of pandas
    to continue to smoothly run the exercises and activities present in the rest of
    the book. To upgrade pandas, run:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 现在活动已成功完成，升级 pandas 的版本，以便顺利运行书中其余部分的练习和活动。要升级 pandas，运行：
- en: pip install pandas==1.0.3
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: pip install pandas==1.0.3
