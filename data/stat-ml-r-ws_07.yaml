- en: '6'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '6'
- en: Effective Reporting with R Markdown
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 R Markdown 进行有效报告
- en: The previous chapter covered the different types of graphing techniques, all
    of which are static. In this chapter, we will take this one step further and discuss
    how to generate graphs and tables using **R** **Markdown** consistently.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 上一章介绍了不同的绘图技术，所有这些都是静态的。在本章中，我们将更进一步，讨论如何使用 **R** **Markdown** 一致地生成图表和表格。
- en: By the end of this chapter, you will have learned the fundamentals of R Markdown
    reports, including how to add, fine-tune, and customize figures and tables to
    make interactive and effective reports. You will also know how to generate effective
    R Markdown reports that can add some flying colors to your presentations.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 到本章结束时，您将学习到 R Markdown 报告的基础知识，包括如何添加、微调和自定义图表和表格以制作交互式和有效的报告。您还将了解如何生成有效的
    R Markdown 报告，这可以为您的演示增添色彩。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Fundamentals of R Markdown
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: R Markdown 基础
- en: Generating a financial analysis report
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 生成财务分析报告
- en: Customizing R Markdown reports
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自定义 R Markdown 报告
- en: Technical requirements
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'To complete the exercises in this chapter, you will need to have the latest
    versions of the following packages:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 要完成本章的练习，您需要拥有以下软件包的最新版本：
- en: '`rmarkdown`, version 2.17'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`rmarkdown`, 版本 2.17'
- en: '`quantmod`, version 0.4.20'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`quantmod`, 版本 0.4.20'
- en: '`lubridate`, version 1.8.0'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`lubridate`, 版本 1.8.0'
- en: Please note that the versions of the packages mentioned in the preceding list
    are the latest ones while I am writing this book. All the code and data for this
    chapter is available at [https://github.com/PacktPublishing/The-Statistics-and-Machine-Learning-with-R-Workshop/tree/main/Chapter_6](https://github.com/PacktPublishing/The-Statistics-and-Machine-Learning-with-R-Workshop/tree/main/Chapter_6).
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，前面提到的软件包版本是在我编写本书时的最新版本。本章的所有代码和数据均可在以下网址找到：[https://github.com/PacktPublishing/The-Statistics-and-Machine-Learning-with-R-Workshop/tree/main/Chapter_6](https://github.com/PacktPublishing/The-Statistics-and-Machine-Learning-with-R-Workshop/tree/main/Chapter_6)。
- en: Fundamentals of R Markdown
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: R Markdown 基础
- en: R Markdown is a formatting language that can help you effectively and dynamically
    reveal insights from the data and generate reports in the form of a PDF, an HTML
    file, or a web application. It allows you to tidy up your analyses via various
    forms of graphs and tables covered earlier in this book, and present them in a
    consistent, neat, and transparent manner that facilitates easy reproduction by
    another analyst. Either in academia or industry, demonstrating reproducibility
    in your analysis is an essential quality of your work. When others can easily
    reproduce and understand what you did in your analysis, it makes communication
    much easier and your work more trustworthy. Since all outputs are code-based,
    the ability to easily reproduce your work also makes it convenient to fine-tune
    the analysis when you present your initial work and come back with further modifications
    to be done, a common iterative process in real-life data analysis.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: R Markdown 是一种格式化语言，可以帮助您有效地动态地从数据中揭示洞察力，并以 PDF、HTML 文件或网络应用程序的形式生成报告。它允许您通过本书前面介绍的各种图表和表格形式整理您的分析，并以一致、整洁、透明的方式展示，便于其他分析师轻松复制。无论是在学术界还是工业界，证明您分析的可重复性是您工作的一个基本品质。当其他人可以轻松复制并理解您在分析中所做的工作时，这会使沟通更加容易，并使您的工作更加值得信赖。由于所有输出都是基于代码的，因此您在展示初步工作并返回进行进一步修改时，可以轻松地微调分析，这是现实数据分析中常见的迭代过程。
- en: Using R Markdown, you can present your code along with the output (including
    graphs and tables) and add surrounding text as context. It is similar to Jupyter
    Notebook using Python, yet it has advantages backed by the tidyverse ecosystem.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 R Markdown，您可以将代码及其输出（包括图表和表格）一起展示，并添加周围文本作为上下文。它与使用 Python 的 Jupyter Notebook
    类似，但它在 tidyverse 生态系统支持下具有优势。
- en: R Markdown is based on the Markdown syntax, which is a simple-to-follow markup
    language that allows the user to create web page-like files from plain text files.
    Let’s start by downloading the R Markdown package and creating a simple starter
    file.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: R Markdown 基于Markdown语法，这是一种易于遵循的标记语言，允许用户从纯文本文件创建类似网页的文件。让我们先下载 R Markdown
    软件包，并创建一个简单的起始文件。
- en: Getting started with R Markdown
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 开始使用 R Markdown
- en: 'R Markdown allows us to create efficient reports to summarize our analyses
    and communicate the results to end users. The first thing we need to get R Markdown
    up and running in RStudio is to download the `rmarkdown` package and load it into
    the console, which can be done via the following commands:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: R Markdown 允许我们创建高效的报告来总结我们的分析，并将结果传达给最终用户。要在 RStudio 中启动 R Markdown，我们首先需要下载
    `rmarkdown` 包并将其加载到控制台，这可以通过以下命令完成：
- en: '[PRE0]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'R Markdown has a dedicated type of file that ends with `.Rmd`. To create an
    R Markdown file, we can select **File** | **New File** | **R Markdown** in RStudio;
    this will make the window shown in *Figure 6**.1* appear. The left panel contains
    the different formats we can choose from, where **Document** is a collection of
    common file types such as HTML, PDF, and Word, **Presentation** renders the R
    Markdown file in a presentation mode similar to PowerPoint, **Shiny** adds an
    interactive **Shiny** component (interactive widgets) in the R Markdown file,
    and **From Template** provides a list of starter templates to accelerate report
    generation:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: R Markdown 有一种专门的文件类型，以 `.Rmd` 结尾。要创建 R Markdown 文件，我们可以在 RStudio 中选择 **文件**
    | **新建文件** | **R Markdown**；这将显示 *图 6**.1* 中的窗口。左侧面板包含我们可以选择的不同格式，其中 **文档** 是一组常见的文件类型，如
    HTML、PDF 和 Word，**演示** 以类似 PowerPoint 的演示模式呈现 R Markdown 文件，**Shiny** 在 R Markdown
    文件中添加交互式 **Shiny** 组件（交互式小部件），**从模板** 提供了一系列启动模板以加速报告生成：
- en: '![Figure 6.1 – Creating an R Markdown file](img/B18680_06_001.jpg)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.1 – 创建 R Markdown 文件](img/B18680_06_001.jpg)'
- en: Figure 6.1 – Creating an R Markdown file
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.1 – 创建 R Markdown 文件
- en: Let’s start with the `my first rmarkdown`) and clicking `.Rmd` file with a basic
    set of instructions will be created. Not all of this information will be used,
    so feel free to delete unnecessary code in the script after you gain familiarity
    with the common components.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从 `my first rmarkdown` 开始，并点击 `.Rmd` 文件，将创建一个包含基本指令的文件。并非所有这些信息都会被使用，因此熟悉常见组件后，您可以自由删除脚本中的不必要代码。
- en: 'An R Markdown document consists of three components: the metadata for the file,
    the text for the report, and the code for the analysis. We’ll look at each of
    these components in the following sections.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: R Markdown 文档由三个组件组成：文件的元数据、报告的文本和分析的代码。我们将在以下各节中查看这些组件。
- en: Getting to know the YAML header
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 了解 YAML 标题
- en: 'The top of the R Markdown script, as shown in *Figure 6**.2*, is a set of metadata
    header information wrapped by two sets of three hyphens, `---`, and contained
    in the YAML header. YAML, a human-readable data serialization language, is a syntax
    for hierarchical data structures commonly used for configuration files. In this
    case, the default information includes the title, output format, and date, represented
    as key-value pairs. The information contained in the header impacts the whole
    document. For example, to generate a PDF file, we could simply switch from `html_document`
    to `pdf_document` in the output configuration. This is the minimal set of information
    needed in a header, although you are encouraged to add the author information
    (via the same initial window in *Figure 6**.2*) to show the authorship of your
    work:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 如 *图 6**.2* 所示，R Markdown 脚本的顶部是一组由两组三个连字符 `---` 包裹的元数据标题信息，并包含在 YAML 标题中。YAML，一种人类可读的数据序列化语言，是用于配置文件中分层数据结构的语法。在这种情况下，默认信息包括标题、输出格式和日期，以键值对的形式表示。标题中的信息会影响整个文档。例如，要生成
    PDF 文件，我们只需在输出配置中将 `html_document` 切换为 `pdf_document`。这是标题中所需的最小信息集，尽管鼓励您添加作者信息（通过
    *图 6**.2* 中的相同初始窗口）以显示您的工作版权：
- en: '![Figure 6.2 – YAML header of the default R Markdown script](img/B18680_06_002.jpg)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.2 – 默认 R Markdown 脚本的 YAML 标题](img/B18680_06_002.jpg)'
- en: Figure 6.2 – YAML header of the default R Markdown script
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.2 – 默认 R Markdown 脚本的 YAML 标题
- en: 'With the header information in place, and assuming all the additional code
    is deleted, we can compile the R Markdown file into an HTML file by clicking on
    the `test.Rmd`:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在设置好标题信息并假设所有额外的代码都已删除后，我们可以通过点击 `test.Rmd` 来编译 R Markdown 文件为 HTML 文件：
- en: '![Figure 6.3 – Converting the R Markdown file into an HTML file using the Knit
    button](img/B18680_06_003.jpg)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.3 – 使用 Knit 按钮将 R Markdown 文件转换为 HTML 文件](img/B18680_06_003.jpg)'
- en: Figure 6.3 – Converting the R Markdown file into an HTML file using the Knit
    button
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.3 – 使用 Knit 按钮将 R Markdown 文件转换为 HTML 文件
- en: Knitting the R Markdown file will generate an HTML file that opens in a separate
    preview window. It will also save an HTML file named `test.html` in the same folder
    as the R Markdown file.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 编译R Markdown文件将生成一个在单独的预览窗口中打开的HTML文件。它还会在同一文件夹中保存一个名为`test.html`的HTML文件。
- en: Next, we will learn more about the structure and syntax of the main body of
    an R Markdown file, including text formatting and handling code chunks.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将学习更多关于R Markdown文件主体结构和语法的知识，包括文本格式化和处理代码块。
- en: Formatting textual information
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 格式化文本信息
- en: Textual information is of equal, if not higher, importance than the code you
    write for analysis and modeling. Good code is often well documented, and this
    is even more critical when your end user is non-technical. Putting proper background
    information, assumption, context, and decision-making processes in place is an
    essential companion to your technical analysis, besides transparency and consistency
    of the analysis. In this section, we will review the common commands we can use
    to format text.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 文本信息的重要性与您为分析和建模编写的代码相当，甚至更高。好的代码通常有很好的文档，当您的最终用户是非技术性的时，这一点尤为重要。在适当的位置放置背景信息、假设、上下文和决策过程是您技术分析的重要伴侣，除了分析的透明性和一致性之外。在本节中，我们将回顾我们可以用来格式化文本的常用命令。
- en: Exercise 6.1 – formatting text in R Markdown
  id: totrans-37
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 练习6.1 – 在R Markdown中格式化文本
- en: 'In this exercise, we will generate the text shown in *Figure 6**.4* using R
    Markdown:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个练习中，我们将使用R Markdown生成*图6.4*中显示的文本：
- en: '![Figure 6.4 – Sample text generated as an HTML file using R Markdown](img/B18680_06_004.jpg)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![图6.4 – 使用R Markdown生成的HTML文件示例文本](img/B18680_06_004.jpg)'
- en: Figure 6.4 – Sample text generated as an HTML file using R Markdown
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.4 – 使用R Markdown生成的HTML文件示例文本
- en: 'The text includes a header, some words in italics or bold, a mathematical expression,
    and four unordered list items. Let’s look at how to generate this text:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 文本包括标题、一些斜体或粗体的单词、一个数学表达式和四个无序列表项。让我们看看如何生成这个文本：
- en: 'Write a level-one header using the `#` symbol:'
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`#`符号编写一级标题：
- en: '[PRE1]'
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Note that the more hashes we use, the smaller the header will be. Remember to
    place the hash at the start of the line and add a single space after the hash
    and before the text.
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意，我们使用的井号越多，标题就会越小。请记住，在井号和文本之间添加一个空格。
- en: 'Write the middle sentence by wrapping the text in `* *` for italics and `$$`
    for mathematical expressions:'
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过将文本包裹在`* *`中以实现斜体和`$$`以实现数学表达式，来编写中间句子：
- en: '[PRE2]'
  id: totrans-46
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Generate the unordered list by starting each item with `*` and wrapping the
    text in `** **` for bold:'
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过在每个项目前使用`*`并使用`** **`将文本包裹起来以实现粗体，来生成无序列表：
- en: '[PRE3]'
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Note that we can easily switch the output file from HTML to PDF, simply by
    changing `output: html_document` to `output: pdf_document`. The resulting output
    is shown in *Figure 6**.5*:'
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '注意，我们可以轻松地将输出文件从HTML切换到PDF，只需将`output: html_document`更改为`output: pdf_document`。结果输出显示在*图6.5*中：'
- en: '![Figure 6.5 – Sample text generated as a PDF file using R Markdown](img/B18680_06_005.jpg)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![图6.5 – 使用R Markdown生成的PDF文件示例文本](img/B18680_06_005.jpg)'
- en: Figure 6.5 – Sample text generated as a PDF file using R Markdown
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.5 – 使用R Markdown生成的PDF文件示例文本
- en: Knitting the R Markdown file into a PDF document may require you to install
    additional packages, such as LaTeX. When an error pops up complaining that the
    package is unavailable, simply go to the console and install this package before
    knitting again. We can also use the drop-down menu from the **Knit** button to
    choose the desired output format.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 将R Markdown文件编译成PDF文档可能需要您安装额外的包，例如LaTeX。当出现错误提示说该包不可用时，只需在控制台中安装此包，然后再进行编译。我们还可以使用**编译**按钮的下拉菜单来选择所需的输出格式。
- en: In addition, the value for the date key in the YAML header is a string. If you
    would like to display it as the current date automatically, you can replace the
    string with `` "` [PRE4]` [PRE5]`, which separate code from text in the R Markdown
    file. A code chunk is also accompanied by the corresponding rules and specifications
    on the language used and other configurations inside curly braces, `{}`. Code
    chunks allow us to render code-based outputs or display the code in the report.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，YAML标题中日期键的值是一个字符串。如果您想自动显示当前日期，可以将字符串替换为`[PRE4]` [PRE5]，这在R Markdown文件中用于将代码与文本分开。代码块还伴随着对应于所使用语言和其他配置的规则和规范，这些规则和规范位于花括号`{}`内。代码块允许我们渲染基于代码的输出或在报告中显示代码。
- en: 'An example code chunk is shown in the following code snippet, where we indicate
    the type of language as R and perform an assignment operation:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的代码片段展示了示例代码块，其中我们指定语言类型为R并执行赋值操作：
- en: '[PRE6]{r}'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE6]{r}'
- en: a = 1
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: a = 1
- en: '[PRE7]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Besides typing in the commands for a code chunk, we can also click on the code
    icon (starting with the letter `c`) in the toolbar and choose the option for the
    R language, as shown in *Figure 6**.6*. Note that you can also use other languages
    such as Python, thus making R Markdown a versatile tool that allows us to use
    different programming languages in one working file:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 除了输入代码块的命令外，我们还可以在工具栏中点击代码图标（以字母`c`开头）并选择R语言的选项，如图*图6.6*所示。请注意，您还可以使用其他语言，如Python，从而使R
    Markdown成为一个多功能的工具，允许我们在一个工作文件中使用不同的编程语言：
- en: '![Figure 6.6 – Inserting an R code chunk](img/B18680_06_006.jpg)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![图6.6 – 插入R代码块](img/B18680_06_006.jpg)'
- en: Figure 6.6 – Inserting an R code chunk
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.6 – 插入R代码块
- en: 'Each chunk of code can be executed by clicking on the green arrow at the right-hand
    side of each chunk, with the result shown just below the code chunk. For example,
    *Figure 6**.7* shows the output after performing the assignment and printing the
    variable:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 每个代码块都可以通过点击每个代码块右侧的绿色箭头来执行，结果将显示在代码块下方。例如，*图6.7*显示了执行赋值和打印变量后的输出：
- en: '![Figure 6.7 – Executing a code chunk](img/B18680_06_007.jpg)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![图6.7 – 执行代码块](img/B18680_06_007.jpg)'
- en: Figure 6.7 – Executing a code chunk
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.7 – 执行代码块
- en: 'We can also specify other options in the curly braces of a code chunk. For
    example, we may not want to include a particular code chunk in the output of the
    resulting HTML file. To hide the code itself and only show the output of the code,
    we can add `echo=FALSE` to the accompanying configuration of the code chunk, as
    shown in the following code block:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以在代码块的大括号中指定其他选项。例如，我们可能不希望在生成的HTML文件输出中包含特定的代码块。为了隐藏代码本身并只显示代码的输出，我们可以在代码块的相关配置中添加`echo=FALSE`，如下面的代码块所示：
- en: '[PRE8]{r echo=FALSE}'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE8]{r echo=FALSE}'
- en: a = 1
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: a = 1
- en: a
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: a
- en: '[PRE9]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '*Figure 6**.8* shows the two different types of output in the resulting HTML
    file:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '*图6.8*显示了生成的HTML文件中的两种不同类型的输出：'
- en: '![Figure 6.8 – Showing and hiding the source code in the HTML file](img/B18680_06_008.jpg)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![图6.8 – 在HTML文件中显示和隐藏源代码](img/B18680_06_008.jpg)'
- en: Figure 6.8 – Showing and hiding the source code in the HTML file
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.8 – 在HTML文件中显示和隐藏源代码
- en: 'In addition, when we load a package in the current session, we may get a warning
    message in the console. In R Markdown, such a warning message will also appear
    in the resulting HTML. To hide the warning message, we can add `warning=FALSE`
    to the configuration. For example, in the following code snippet, we are hiding
    the warning message while loading the `dplyr` package:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，当我们加载当前会话中的包时，我们可能在控制台得到一个警告消息。在R Markdown中，这样的警告消息也会出现在生成的HTML中。要隐藏警告消息，我们可以在配置中添加`warning=FALSE`。例如，在下面的代码片段中，我们在加载`dplyr`包时隐藏了警告消息：
- en: '[PRE10]{r warning=FALSE}'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE10]{r warning=FALSE}'
- en: library(dplyr)
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: library(dplyr)
- en: '[PRE11]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '*Figure 6**.9* compares the two scenarios when loading a package with or without
    showing the warning message:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '*图6.9*比较了加载包时显示或隐藏警告消息的两个场景：'
- en: '![Figure 6.9 – Hiding the warning message while loading a package](img/B18680_06_009.jpg)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![图6.9 – 加载包时隐藏警告消息](img/B18680_06_009.jpg)'
- en: Figure 6.9 – Hiding the warning message while loading a package
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.9 – 加载包时隐藏警告消息
- en: With these building blocks covered, we will conduct a case study on generating
    a financial analysis report using Google stock price data in the following section.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 在这些构建块介绍完毕后，我们将在下一节进行案例研究，使用谷歌股票价格数据生成财务分析报告。
- en: Generating a financial analysis report
  id: totrans-80
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 生成财务分析报告
- en: 'In this section, we will analyze Google’s stock data from Yahoo! Finance. To
    facilitate data download and analysis, we will use the `quantmod` package, which
    is designed to assist quantitative traders in developing, testing, and deploying
    statistically based trading models. Let’s install the package and load it into
    the console:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将分析来自Yahoo! Finance的谷歌股票数据。为了方便数据下载和分析，我们将使用`quantmod`包，该包旨在帮助量化交易者开发、测试和部署基于统计的贸易模型。让我们安装这个包并将其加载到控制台：
- en: '[PRE12]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Next, we will generate an HTML report using R Markdown and cover the basics
    of data querying and analysis.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将使用R Markdown生成HTML报告，并介绍数据查询和分析的基础知识。
- en: Getting and displaying the data
  id: totrans-84
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 获取和显示数据
- en: Let’s go through an exercise to generate an initial report that automatically
    queries stock data from Yahoo! Finance and displays the basic information in the
    dataset.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过一个练习来生成一个初始报告，该报告会自动从Yahoo! Finance查询股票数据，并显示数据集中的基本信息。
- en: Exercise 6.2 – generating the base report
  id: totrans-86
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 练习6.2 – 生成基本报告
- en: 'In this exercise, we will set up an R Markdown file, download Google’s stock
    price data, and display general information about the dataset:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个练习中，我们将设置一个R Markdown文件，下载谷歌的股价数据，并显示数据集的一般信息：
- en: 'Create an empty R Markdown file named `Financial analysis` and set the corresponding
    `output`, `date`, and `author` in the YAML file:'
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`Financial analysis`的空R Markdown文件，并在YAML文件中设置相应的`output`、`date`和`author`：
- en: '[PRE13]'
  id: totrans-89
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Create a code chunk to load the `quantmod` package and query Google’s stock
    price data using the `getSymbols()` function. Store the resulting data in `df`.
    Also, hide all messages in the resulting HTML file and add the necessary text
    for illustration:'
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个代码块来加载`quantmod`包并使用`getSymbols()`函数查询谷歌的股价数据。将结果数据存储在`df`中。同时隐藏结果HTML文件中的所有消息，并添加必要的文本说明：
- en: '[PRE14]{r warning=FALSE, message=FALSE}'
  id: totrans-91
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[PRE14]{r warning=FALSE, message=FALSE}'
- en: library(quantmod)
  id: totrans-92
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: library(quantmod)
- en: df = getSymbols("GOOG", auto.assign=FALSE)
  id: totrans-93
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: df = getSymbols("GOOG", auto.assign=FALSE)
- en: '[PRE15]'
  id: totrans-94
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Here, we specify `warning=FALSE` to hide the warning message when loading the
    package and `message=FALSE` to hide the messages that are generated when calling
    the `getSymbols()` function. We also specify `auto.assign=FALSE` to assign the
    resulting DataFrame to the `df` variable. Also, note that we can add text as comments
    inside the code chunks, which will be treated as typical comments that start with
    a hash sign, `#`, are.
  id: totrans-95
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在这里，我们指定`warning=FALSE`以隐藏加载包时的警告消息，`message=FALSE`以隐藏调用`getSymbols()`函数时生成的消息。我们还指定`auto.assign=FALSE`将结果DataFrame分配给`df`变量。另外，请注意，我们可以在代码块内添加文本作为注释，这些注释将被视为以井号`#`开头的典型注释。
- en: 'Count the total number of rows and display the first and last two rows of the
    DataFrame via three separate code chunks. Add corresponding text to serve as documentation
    for the code:'
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过三个单独的代码块计算总行数并显示DataFrame的前两行和最后两行。为代码添加相应的文本作为文档：
- en: '[PRE16]{r}'
  id: totrans-97
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[PRE16]{r}'
- en: nrow(df)
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: nrow(df)
- en: '[PRE17]{r}'
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[PRE17]{r}'
- en: head(df, 2)
  id: totrans-100
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: head(df, 2)
- en: '[PRE18]{r}'
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[PRE18]{r}'
- en: tail(df, 2)
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: tail(df, 2)
- en: '[PRE19]'
  id: totrans-103
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Note that we use `` ` ` `` to indicate inline code within the text.
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意，我们使用`` ` ` ``来表示文本中的内联代码。
- en: 'At this point, we can knit the R Markdown file to observe the resulting HTML
    file, as shown in *Figure 6**.10*. It is a good practice to check the output frequently
    so that any potential unexpected error can be corrected in time:'
  id: totrans-105
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 到目前为止，我们可以编织R Markdown文件以观察生成的HTML文件，如图*图6.10*所示。经常检查输出是一个好习惯，这样就可以及时纠正任何潜在的不期望的错误：
- en: '![Figure 6.10 – Displaying the HTML output](img/B18680_06_010.jpg)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![图6.10 – 显示HTML输出](img/B18680_06_010.jpg)'
- en: Figure 6.10 – Displaying the HTML output
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.10 – 显示HTML输出
- en: 'Plot the time series of the daily closing price using the `chart_Series()`
    function:'
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`chart_Series()`函数绘制每日收盘价的时间序列图：
- en: '[PRE20]{r}'
  id: totrans-109
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[PRE20]{r}'
- en: chart_Series(df$GOOG.Close,name="Google Stock Price")
  id: totrans-110
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: chart_Series(df$GOOG.Close,name="Google Stock Price")
- en: '[PRE21]'
  id: totrans-111
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Adding this code chunk to the R Markdown document and knitting it generates
    the same output file with an additional graph, as shown in *Figure 6**.11*. The
    `chart_Series()` function is a utility function for plotting that’s provided by
    `quantmod`. We can also plot it based on the `ggplot` package, as discussed in
    the previous chapter:'
  id: totrans-112
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 将此代码块添加到R Markdown文档中并编织它，将生成与*图6.11*中所示相同的输出文件，并增加一个额外的图形。`chart_Series()`函数是`quantmod`提供的用于绘图的实用函数。我们也可以根据前一章讨论的`ggplot`包来绘制它：
- en: '![Figure 6.11 – Daily stock price of Google since 2017](img/B18680_06_011.jpg)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![图6.11 – 自2017年以来谷歌的每日股价](img/B18680_06_011.jpg)'
- en: Figure 6.11 – Daily stock price of Google since 2017
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.11 – 自2017年以来谷歌的每日股价
- en: 'In addition to generating figures from code, we can include links and images
    to the output. This image can be loaded either from a local drive or from the
    web. In the following code snippet, we are adding a line of text with a hyperlink
    to an example image and showing the image in the next line by directly reading
    it from GitHub:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 除了从代码生成图形外，我们还可以将链接和图片包含在输出中。此图片可以从本地驱动器或从网络加载。在下面的代码片段中，我们添加了一行带有超链接的文本，指向一个示例图片，并在下一行直接从GitHub读取显示该图片：
- en: '[PRE22]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Note that we added a hyperlink to the word `here` by wrapping it inside square
    brackets, followed by the hyperlink in parentheses. To add an image, we can add
    an exclamation mark in front of the square brackets. We can also specify the size
    of the image by adding `{width=250px}` after the image link.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，我们通过将单词 `here` 放在方括号内并跟在括号中的超链接后面来添加一个超链接。要添加图片，我们可以在方括号前添加一个感叹号。我们还可以通过在图片链接后添加
    `{width=250px}` 来指定图片的大小。
- en: 'Knitting the previous code in R Markdown generates *Figure 6**.12*:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 在 R Markdown 中编译前面的代码生成 *图 6**.12*：
- en: '![Figure 6.12 – Visualizing an image from GitHub](img/B18680_06_012.jpg)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.12 – 从 GitHub 可视化图像](img/B18680_06_012.jpg)'
- en: Figure 6.12 – Visualizing an image from GitHub
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.12 – 从 GitHub 可视化图像
- en: Next, we will perform data analysis and display the result as text.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将执行数据分析并将结果以文本形式显示。
- en: Performing data analysis
  id: totrans-122
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 执行数据分析
- en: With the dataset loaded, we can perform data analysis and present insights in
    the resulting output document, all generated automatically and consistently. For
    example, we can present high-level statistics about the stock price for a particular
    period of interest, such as the average, maximum, and minimum prices. These statistics
    can be embedded into text, making the presentation style more natural and self-contained.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 加载数据集后，我们可以在生成的输出文档中执行数据分析并展示洞察力，所有这些都是自动且一致的。例如，我们可以展示特定时期内股票价格的高级统计数据，如平均、最大和最小价格。这些统计数据可以嵌入到文本中，使演示风格更加自然和自包含。
- en: Exercise 6.3 – performing simple data analysis
  id: totrans-124
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 练习 6.3 – 执行简单的数据分析
- en: 'In this exercise, we will extract the year-to-date highest, average, and lowest
    stock prices of Google. To achieve this, we will first transform the dataset from
    its original `xts` format into a `tibble` object, then summarize these statistics
    using `dplyr`. Finally, we will display this information within the text of the
    HTML document:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个练习中，我们将提取 Google 的年度最高、平均和最低股价。为此，我们首先将数据集从其原始的 `xts` 格式转换为 `tibble` 对象，然后使用
    `dplyr` 总结这些统计量。最后，我们将在 HTML 文档的文本中显示这些信息：
- en: 'Load the `dplyr` and `tibble` packages and convert `df` from `xts` into `tibble`
    format. Store the resulting `tibble` object in `df_tbl`:'
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 加载 `dplyr` 和 `tibble` 包，并将 `df` 从 `xts` 格式转换为 `tibble` 格式。将生成的 `tibble` 对象存储在
    `df_tbl` 中：
- en: '[PRE23]'
  id: totrans-127
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Here, we will use the `as_tibble()` function to convert the `xts` object into
    `tibble` format, followed by the `add_column()` function to insert a date column
    at the beginning of the DataFrame. The date information is available as an index
    in the original `xts` object.
  id: totrans-128
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在这里，我们将使用 `as_tibble()` 函数将 `xts` 对象转换为 `tibble` 格式，然后使用 `add_column()` 函数在
    DataFrame 的开头插入一个日期列。日期信息作为索引存在于原始的 `xts` 对象中。
- en: 'Extract the year-to-date highest, average, and lowest closing prices since
    2022\. Store the results in `max_ytd`, `avg_ytd`, and `min_ytd`, respectively:'
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 存储自 2022 年以来的年度最高、平均和最低收盘价，分别存储在 `max_ytd`、`avg_ytd` 和 `min_ytd` 中：
- en: '[PRE24]'
  id: totrans-130
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: For each statistic, we first filter by date, followed by extracting the relevant
    statistic based on the `GOOG.Close` column. Finally, we return the result as a
    single scalar value instead of a DataFrame.
  id: totrans-131
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于每个统计量，我们首先按日期过滤，然后根据 `GOOG.Close` 列提取相关统计量。最后，我们将结果作为单个标量值返回，而不是 DataFrame。
- en: 'Display these statistics in text:'
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以文本形式显示这些统计量：
- en: '[PRE25]'
  id: totrans-133
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'As shown in *Figure 6**.13*, knitting the document outputs the statistics in
    the HTML file, which allows us to reference the code results in the HTML report:'
  id: totrans-134
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如 *图 6**.13* 所示，编译文档将统计量输出到 HTML 文件中，这使得我们可以在 HTML 报告中引用代码结果：
- en: '![Figure 6.13 – Extracting simple statistics and displaying them in HTML form](img/B18680_06_013.jpg)'
  id: totrans-135
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.13 – 提取简单统计量并在 HTML 格式中显示](img/B18680_06_013.jpg)'
- en: Figure 6.13 – Extracting simple statistics and displaying them in HTML form
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.13 – 提取简单统计量并在 HTML 格式中显示
- en: In the next section, we will look at adding plots to the HTML report.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将探讨如何在 HTML 报告中添加图表。
- en: Adding plots to the report
  id: totrans-138
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在报告中添加图表
- en: Adding plots to the HTML report works the same way as in the RStudio console.
    We could simply write the plotting code in a chunk, and the graph will appear
    in the resulting report after we’ve knitted the R Markdown file. Let’s go through
    an exercise to visualize the stock price using the `ggplot2` package we covered
    in the previous chapter.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 在 HTML 报告中添加图表的方式与在 RStudio 控制台中相同。我们只需在代码块中编写绘图代码，然后编译 R Markdown 文件后，图表就会出现在生成的报告中。让我们通过一个练习来可视化使用上一章中介绍的
    `ggplot2` 包的股票价格。
- en: Exercise 6.4 – adding plots using ggplot2
  id: totrans-140
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 练习6.4 – 使用ggplot2添加图表
- en: 'In this exercise, we will visualize the average monthly closing price for the
    past three years as line plots. We will also explore different configuration options
    for the figure in the report:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个练习中，我们将通过线形图可视化过去三年的平均月收盘价。我们还将探索报告中图表的不同配置选项：
- en: 'Create a dataset that contains the average monthly closing price between 2019
    and 2021:'
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个包含2019年至2021年间月度平均收盘价的数据库：
- en: '[PRE26]'
  id: totrans-143
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Here, we first create two additional columns called `Month` and `Year` that
    are derived based on the date column using the `month()` and `year()` functions
    from the `lubridate` package. We also convert `Month` into a factor-typed column
    with levels between 1 and 12 so that this column can follow a particular sequence
    when we plot the monthly price later. Similarly, we set `Year` as a character-typed
    column to ensure that it will not be interpreted by `ggplot2` as a numeric variable.
  id: totrans-144
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在这里，我们首先创建两个额外的列，分别称为`Month`和`Year`，这些列是基于日期列通过`lubridate`包中的`month()`和`year()`函数派生出来的。我们还把`Month`列转换为因子类型的列，其级别在1到12之间，这样当我们在后面绘制月度价格图时，这个列可以遵循特定的顺序。同样，我们将`Year`列设置为字符类型的列，以确保它不会被`ggplot2`解释为数值变量。
- en: Next, we filter the `df_tbl` variable by `Year`, group by `Year` and `Month`,
    and calculate the average `GOOG.Close` value, followed by using the `ungroup()`
    function to remove the group structure in the resulting DataFrame saved in `tmp_df`.
  id: totrans-145
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 接下来，我们通过`Year`对`df_tbl`变量进行筛选，按`Year`和`Month`分组，并计算`GOOG.Close`的平均值，然后使用`ungroup()`函数从保存在`tmp_df`中的结果DataFrame中移除分组结构。
- en: 'Plot the monthly average closing price each year as a separate line in a line
    chart. Change the corresponding figure label and text size:'
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在线形图中将每年的月度平均收盘价作为单独的线条绘制。更改相应的图表标签和文本大小：
- en: '[PRE27]'
  id: totrans-147
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Running the previous commands in a code chunk will generate the output shown
    in *Figure 6**.14*. Note that we have also added a header and some text to point
    out the purpose and context of the code. The code and the output are shown automatically
    after knitting the R Markdown file, thus making R Markdown a great option for
    producing transparent, engaging, and reproducible technical reports:'
  id: totrans-148
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在代码块中运行前面的命令将生成*图6**.14*中显示的输出。请注意，我们还添加了标题和一些文本，以指出代码的目的和上下文。在编织R Markdown文件后，代码和输出会自动显示，这使得R
    Markdown成为生成透明、吸引人和可重复的技术报告的绝佳选择：
- en: '![Figure 6.14 – Adding a plot to show the monthly average closing price for
    the past three years](img/B18680_06_014.jpg)'
  id: totrans-149
  prefs: []
  type: TYPE_IMG
  zh: '![图6.14 – 添加图表以显示过去三年的月度平均收盘价](img/B18680_06_014.jpg)'
- en: Figure 6.14 – Adding a plot to show the monthly average closing price for the
    past three years
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.14 – 添加图表以显示过去三年的月度平均收盘价
- en: We can also configure the size and position of the figure.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以配置图表的大小和位置。
- en: 'Shrink the size of the figure by setting `fig.width=5` and `fig.height=3` in
    the configuration section of the code chunk and show the output graph:'
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过在代码块的配置部分设置`fig.width=5`和`fig.height=3`来缩小图表的大小，并显示输出图形：
- en: '[PRE28]{r fig.width=5, fig.height=3}'
  id: totrans-153
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[PRE28]{r fig.width=5, fig.height=3}'
- en: p
  id: totrans-154
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: p
- en: '[PRE29]'
  id: totrans-155
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Knitting the document with these added commands produces *Figure 6**.15*:'
  id: totrans-156
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用这些添加的命令编织文档会产生**图6**.15：
- en: '![Figure 6.15 – Changing the size of the figure](img/B18680_06_015.jpg)'
  id: totrans-157
  prefs: []
  type: TYPE_IMG
  zh: '![图6.15 – 改变图表的大小](img/B18680_06_015.jpg)'
- en: Figure 6.15 – Changing the size of the figure
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.15 – 改变图表的大小
- en: 'Align the position of the figure so that it’s at the center of the document:'
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将图表的位置对齐，使其位于文档的中心：
- en: '[PRE30]{r fig.width=5, fig.height=3, fig.align=''center''}'
  id: totrans-160
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[PRE30]{r fig.width=5, fig.height=3, fig.align=''center''}'
- en: p
  id: totrans-161
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: p
- en: '[PRE31]'
  id: totrans-162
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Knitting the document with these added commands produces *Figure 6**.16*:'
  id: totrans-163
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用这些添加的命令编织文档会产生**图6**.16：
- en: '![Figure 6.16 – Changing the position of the figure](img/B18680_06_016.jpg)'
  id: totrans-164
  prefs: []
  type: TYPE_IMG
  zh: '![图6.16 – 改变图表的位置](img/B18680_06_016.jpg)'
- en: Figure 6.16 – Changing the position of the figure
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.16 – 改变图表的位置
- en: 'Add a caption to the plot:'
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为图表添加标题：
- en: '[PRE32]{r fig.width=5, fig.height=3, fig.align=''center'', fig.cap='' Figure
    1.1 Monthly average closing price between 2019 and 2021''}'
  id: totrans-167
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[PRE32]{r fig.width=5, fig.height=3, fig.align=''center'', fig.cap=''图1.1 2019年至2021年间的月度平均收盘价''}'
- en: p
  id: totrans-168
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: p
- en: '[PRE33]'
  id: totrans-169
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Knitting the document with these added commands produces *Figure 6**.17*:'
  id: totrans-170
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用这些添加的命令编织文档会产生**图6**.17：
- en: '![Figure 6.17 – Adding a caption to the figure](img/B18680_06_017.jpg)'
  id: totrans-171
  prefs: []
  type: TYPE_IMG
  zh: '![图6.17 – 为图表添加标题](img/B18680_06_017.jpg)'
- en: Figure 6.17 – Adding a caption to the figure
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.17 – 为图表添加标题
- en: Besides graphs, tables are also commonly used to present and summarize information
    in a report. We’ll look at how to generate tables in the next section.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 除了图形外，表格也是报告中常用的一种用于呈现和总结信息的方式。我们将在下一节中探讨如何生成表格。
- en: Adding tables to the report
  id: totrans-174
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 向报告中添加表格
- en: Representing information in a table is a good complement to its graph counterpart
    when the report user is interested in delving further into the details or even
    using it for further analysis. For end users, being able to access and use the
    data in the report plays a pivotal role as this gives them more control over the
    already preprocessed information in the report. In other words, an R Markdown-based
    HTML report not only summarizes information as graphs for easy digestion but also
    provides detailed information on specific data sources as tables to facilitate
    ad hoc analysis.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 当报告用户对深入了解细节或进一步分析感兴趣时，以表格形式呈现信息是图形对应物的良好补充。对于最终用户来说，能够访问和使用报告中的数据起着关键作用，因为这给了他们更多控制权，可以控制报告中已经预处理好的信息。换句话说，基于
    R Markdown 的 HTML 报告不仅以图形形式总结信息以便于消化，还提供了关于特定数据源的详细信息作为表格，以促进即席分析。
- en: We can add tables using the `kable()` function from the `knitr` package, the
    backbone engine that supports executing code in each code chunk, and then perform
    dynamic report generation upon knitting the R Markdown document. Note that it
    is a good practice to preprocess and clean the data before presenting it as a
    table via `kable()`; the task should only be visualizing a clean and organized
    table.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用 `knitr` 包中的 `kable()` 函数添加表格，该函数是支持在每个代码块中执行代码的核心引擎，然后在对 R Markdown 文档进行编织时进行动态报告生成。请注意，在通过
    `kable()` 将数据作为表格展示之前进行预处理和清理数据是一个好的实践；这项任务应该只涉及展示一个干净且有序的表格。
- en: Let’s go through an exercise to look at how to add clean tables to the report.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过一个练习来看看如何向报告中添加干净的表格。
- en: Exercise 6.5 – adding tables using kable()
  id: totrans-178
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 练习 6.5 – 使用 kable() 添加表格
- en: 'In this exercise, we will show the top five rows of the `tmp_df` variable in
    a table, then demonstrate different configuration options for displaying the table:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个练习中，我们将以表格形式展示 `tmp_df` 变量的前五行，然后演示不同的表格显示配置选项：
- en: 'Show the top five rows of `tmp_df` using the `kable()` function from the `knitr`
    package:'
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `knitr` 包中的 `kable()` 函数显示 `tmp_df` 的前五行：
- en: '[PRE34]{r}'
  id: totrans-181
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[PRE34]{r}'
- en: library(knitr)
  id: totrans-182
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: library(knitr)
- en: kable(tmp_df[1:5,])
  id: totrans-183
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: kable(tmp_df[1:5,])
- en: '[PRE35]'
  id: totrans-184
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'Knitting the document with these added commands produces *Figure 6**.18*:'
  id: totrans-185
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用这些添加的命令编织文档会产生 *图 6**.18*：
- en: '![Figure 6.18 – Adding a table to the report](img/B18680_06_018.jpg)'
  id: totrans-186
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.18 – 向报告中添加表格](img/B18680_06_018.jpg)'
- en: Figure 6.18 – Adding a table to the report
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.18 – 向报告中添加表格
- en: 'Change the column names of the table using the `col.names` argument:'
  id: totrans-188
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `col.names` 参数更改表格的列名：
- en: '[PRE36]{r}'
  id: totrans-189
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[PRE36]{r}'
- en: kable(tmp_df[1:5,], col.names=c("Year", "Month", "Average closing price"))
  id: totrans-190
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: kable(tmp_df[1:5,], col.names=c("Year", "Month", "Average closing price"))
- en: '[PRE37]'
  id: totrans-191
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'Knitting the document with these added commands produces *Figure 6**.19*:'
  id: totrans-192
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用这些添加的命令编织文档会产生 *图 6**.19*：
- en: '![Figure 6.19 – Changing column names in the table](img/B18680_06_019.jpg)'
  id: totrans-193
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.19 – 更改表格中的列名](img/B18680_06_019.jpg)'
- en: Figure 6.19 – Changing column names in the table
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.19 – 更改表格中的列名
- en: We can also modify the column alignment within the table using the `align` argument.
    The default column alignment is on the right for the numeric column and the left
    for all other types of columns. As shown in *Figure 6**.19*, the `Year` (character
    typed) and `Month` (factor typed) columns are aligned on the left, and `Average
    closing price` (numeric) is aligned on the right. The alignment is specified column-wise
    using a single letter, with `"l"` denoting aligning to the left, `"c"` to the
    center, and `"r"` to the right.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以使用 `align` 参数修改表格内的列对齐方式。默认情况下，数值列的列对齐在右侧，其他所有类型的列对齐在左侧。如 *图 6**.19* 所示，`Year`（字符类型）和
    `Month`（因子类型）列左对齐，而 `Average closing price`（数值）列右对齐。对齐方式按列指定，使用单个字母表示，其中 `"l"`
    表示左对齐，`"c"` 表示居中对齐，`"r"` 表示右对齐。
- en: 'Align all columns to the center using the `align` argument:'
  id: totrans-196
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `align` 参数将所有列对齐到中心：
- en: '[PRE38]{r}'
  id: totrans-197
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[PRE38]{r}'
- en: kable(tmp_df[1:5,], col.names=c("Year", "Month", "Average closing price"), align="ccc")
  id: totrans-198
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: kable(tmp_df[1:5,], col.names=c("Year", "Month", "Average closing price"), align="ccc")
- en: '[PRE39]'
  id: totrans-199
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'Here, we specify `align="ccc"` to align all columns to the center. Knitting
    the document with these added commands produces *Figure 6**.20*:'
  id: totrans-200
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在这里，我们指定 `align="ccc"` 以将所有列对齐到中心。使用这些添加的命令编织文档会产生 *图 6**.20*：
- en: '![Figure 6.20 – Centering all the columns in the table](img/B18680_06_020.jpg)'
  id: totrans-201
  prefs: []
  type: TYPE_IMG
  zh: '![图6.20 – 使表格的所有列居中](img/B18680_06_020.jpg)'
- en: Figure 6.20 – Centering all the columns in the table
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.20 – 使表格的所有列居中
- en: Lastly, we can also add a caption to the table.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们还可以为表格添加一个标题。
- en: 'Add a caption to the table using the `caption` argument:'
  id: totrans-204
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <style>
- en: '[PRE40]{r}'
  id: totrans-205
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[PRE40]{r}'
- en: kable(tmp_df[1:5,], col.names=c("Year", "Month", "Average closing price"), align="ccc",
    caption="Table 1.1 Average monthly closing price")
  id: totrans-206
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'date: "2022-10-12"'
- en: '[PRE41]'
  id: totrans-207
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE41]'
- en: Code chunk options
  id: totrans-208
  prefs:
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 'author: "刘鹏"'
- en: Display both code and result be default.
  id: totrans-209
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'html_document:'
- en: '[PRE42]'
  id: totrans-210
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE42]'
- en: '[PRE43]'
  id: totrans-211
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE43]'
- en: Execute the code chunk but hide both code and result in the output by setting
    `include=FALSE`.
  id: totrans-212
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 执行代码块，但通过设置`include=FALSE`在输出中隐藏代码和结果。
- en: '[PRE44]'
  id: totrans-213
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE44]'
- en: Display the code and result.
  id: totrans-214
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'author: "刘鹏"'
- en: '[PRE45]'
  id: totrans-215
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE45]'
- en: '[PRE46]'
  id: totrans-216
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE46]'
- en: Execute the code chunk and only display the result in the output by setting
    `echo=FALSE`.
  id: totrans-217
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '---'
- en: '[PRE47]'
  id: totrans-218
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE47]'
- en: '[PRE48]'
  id: totrans-219
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE48]'
- en: Do not execute the code chunk and only display the code in the output by setting
    `eval=FALSE`.
  id: totrans-220
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 不执行代码块，并通过设置`eval=FALSE`在输出中仅显示代码。
- en: '[PRE49]'
  id: totrans-221
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE49]'
- en: '[PRE50]'
  id: totrans-222
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE50]'
- en: All results are in separate blocks by default.
  id: totrans-223
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用这些命令编织文档会产生*图6.37**。37*：
- en: '[PRE51]'
  id: totrans-224
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE51]'
- en: Collapsing all results in one block by setting `collapse=TRUE`.
  id: totrans-225
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在本章中，我们介绍了R Markdown，这是一个灵活、透明且一致的报告生成工具。我们首先回顾了R Markdown的基础知识，包括YAML标题和代码块等基本构建块，然后介绍了文本格式化技巧。
- en: '[PRE52]'
  id: totrans-226
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE52]'
- en: '[PRE53]'
  id: totrans-227
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE53]'
- en: Hide warning by setting `warning=FALSE`.
  id: totrans-228
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: body {
- en: '[PRE54]'
  id: totrans-229
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE54]'
- en: '[PRE55]'
  id: totrans-230
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE55]'
- en: Set global options.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 显示代码和结果。
- en: '[PRE56]'
  id: totrans-232
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: '[PRE57]'
  id: totrans-233
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: '---'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: '---'
- en: 'title: "Financial analysis"'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: 'output:'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块选项
- en: 'html_document:'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 'font-size: 20px;'
- en: 'toc: true'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 执行代码块，并通过设置`echo=FALSE`在输出中仅显示结果。
- en: 'date: "2022-10-12"'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 'date: "2022-10-12"'
- en: 'author: "Liu Peng"'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 设置全局选项。
- en: '---'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: '---'
- en: '[PRE58]'
  id: totrans-242
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: '---'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: body {
- en: 'title: "Financial analysis"'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: 'output:'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 'background-color: #F5F5F5;'
- en: 'html_document:'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 'params:'
- en: 'toc: true'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 通过设置`warning=FALSE`隐藏警告。
- en: 'toc_float: true'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 'toc_float: true'
- en: 'date: "2022-10-12"'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 'date: "2022-10-12"'
- en: 'author: "Liu Peng"'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 'output:'
- en: '---'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: pre {
- en: '[PRE59]'
  id: totrans-252
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: '---'
  id: totrans-253
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '---'
- en: 'title: "Financial analysis"'
  id: totrans-254
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'html_document:'
- en: 'output:'
  id: totrans-255
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'background-color: #F5F5F5;'
- en: 'html_document:'
  id: totrans-256
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'html_document:'
- en: 'toc: true'
  id: totrans-257
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'toc: true'
- en: 'toc_float: true'
  id: totrans-258
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'toc_float: true'
- en: 'date: "2022-10-12"'
  id: totrans-259
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'date: "2022-10-12"'
- en: 'author: "Liu Peng"'
  id: totrans-260
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: 'params:'
  id: totrans-261
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'params:'
- en: 'year: 2020'
  id: totrans-262
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'year: 2020'
- en: '---'
  id: totrans-263
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '---'
- en: '[PRE60]'
  id: totrans-264
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE60]'
- en: Generating report using parameters
  id: totrans-265
  prefs:
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用参数生成报告
- en: Summary statistics of year `r params$year`
  id: totrans-266
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: '[PRE61]'
  id: totrans-267
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE61]'
- en: '[PRE62]'
  id: totrans-268
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE62]'
- en: '---'
  id: totrans-269
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '---'
- en: 'title: "Financial analysis"'
  id: totrans-270
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '---'
- en: 'output:'
  id: totrans-271
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'output:'
- en: 'html_document:'
  id: totrans-272
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'color: blue;'
- en: 'toc: true'
  id: totrans-273
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'toc: true'
- en: 'toc_float: true'
  id: totrans-274
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 默认情况下，所有结果都在单独的块中。
- en: 'date: "2022-10-12"'
  id: totrans-275
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'title: "财务分析"'
- en: 'author: "Liu Peng"'
  id: totrans-276
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'author: "刘鹏"'
- en: 'params:'
  id: totrans-277
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'author: "刘鹏"'
- en: 'year: 2021'
  id: totrans-278
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'year: 2021'
- en: '---'
  id: totrans-279
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE63]'
  id: totrans-280
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE63]'
- en: Summary statistics of year `r params$year` and quarter `r params$quarter`
  id: totrans-281
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 年份`r params$year`和季度`r params$quarter`的摘要统计
- en: '[PRE64]'
  id: totrans-282
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE64]'
- en: '[PRE65]'
  id: totrans-283
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE65]'
- en: Customizing report style
  id: totrans-284
  prefs:
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 自定义报告样式
- en: <style>
  id: totrans-285
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <style>
- en: body {
  id: totrans-286
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: body {
- en: 'color: blue;'
  id: totrans-287
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '---'
- en: 'background-color: #F5F5F5;'
  id: totrans-288
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'color: orange;'
- en: '}'
  id: totrans-289
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图6.37 – 改变报告标题的颜色、字体大小和透明度
- en: </style>
  id: totrans-290
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: </style>
- en: '[PRE66]'
  id: totrans-291
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE66]'
- en: Customizing report style
  id: totrans-292
  prefs:
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 自定义报告样式
- en: <style>
  id: totrans-293
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <style>
- en: body {
  id: totrans-294
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 默认显示代码和结果。
- en: 'color: blue;'
  id: totrans-295
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'color: blue;'
- en: 'background-color: #F5F5F5;'
  id: totrans-296
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'title: "财务分析"'
- en: '}'
  id: totrans-297
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'color: green;'
- en: pre {
  id: totrans-298
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用`caption`参数为表格添加标题：
- en: 'color: red;'
  id: totrans-299
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: kable(tmp_df[1:5,], col.names=c("Year", "Month", "Average closing price"), align="ccc",
    caption="表1.1 平均收盘价")
- en: '}'
  id: totrans-300
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'color: red;'
- en: </style>
  id: totrans-301
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: </style>
- en: '[PRE67]'
  id: totrans-302
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE67]'
- en: Customizing report style
  id: totrans-303
  prefs:
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 自定义报告样式
- en: <style>
  id: totrans-304
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <style>
- en: body {
  id: totrans-305
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: body {
- en: 'color: blue;'
  id: totrans-306
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'color: blue;'
- en: 'background-color: #F5F5F5;'
  id: totrans-307
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-308
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: pre {
  id: totrans-309
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'border-color: green;'
- en: 'color: red;'
  id: totrans-310
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'color: red;'
- en: '}'
  id: totrans-311
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'background-color: #F5F5F5;'
- en: '#TOC {'
  id: totrans-312
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '#TOC {'
- en: 'color: green;'
  id: totrans-313
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: pre {
- en: 'font-size: 16px;'
  id: totrans-314
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'font-size: 16px;'
- en: 'border-color: green;'
  id: totrans-315
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'border-color: green;'
- en: '}'
  id: totrans-316
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 年份`r params$year`的摘要统计
- en: </style>
  id: totrans-317
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'output:'
- en: '[PRE68]'
  id: totrans-318
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE68]'
- en: Customizing report style
  id: totrans-319
  prefs:
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 自定义报告样式
- en: <style>
  id: totrans-320
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'title: "财务分析"'
- en: body {
  id: totrans-321
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: </style>
- en: 'color: blue;'
  id: totrans-322
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'color: blue;'
- en: 'background-color: #F5F5F5;'
  id: totrans-323
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'background-color: #F5F5F5;'
- en: '}'
  id: totrans-324
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: pre {
  id: totrans-325
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'output:'
- en: 'color: red;'
  id: totrans-326
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'color: red;'
- en: '}'
  id: totrans-327
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '#TOC {'
  id: totrans-328
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'html_document:'
- en: 'color: green;'
  id: totrans-329
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'color: green;'
- en: 'font-size: 16px;'
  id: totrans-330
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'font-size: 16px;'
- en: 'border-color: green;'
  id: totrans-331
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'toc: true'
- en: '}'
  id: totrans-332
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'toc: true'
- en: '#header {'
  id: totrans-333
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '#header {'
- en: 'color: orange;'
  id: totrans-334
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'toc_float: true'
- en: 'opacity: 0.8;'
  id: totrans-335
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'opacity: 0.8;'
- en: 'font-size: 20px;'
  id: totrans-336
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 通过设置`collapse=TRUE`将所有结果合并到一个块中。
- en: '}'
  id: totrans-337
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: </style>
  id: totrans-338
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: </style>
- en: '```'
  id: totrans-339
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: 'Note that the style for the header is specified using `#header` without any
    space in between. Knitting the document with these commands produces *Figure 6**.37*:'
  id: totrans-340
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意，标题的样式是通过使用`#header`来指定的，其中没有任何空格。
- en: '![Figure 6.37 – Changing the color, font size, and opacity of the header in
    the report](img/B18680_06_037.jpg)'
  id: totrans-341
  prefs: []
  type: TYPE_IMG
  zh: '![图6.37 – 改变报告标题的颜色、字体大小和透明度](img/B18680_06_037.jpg)'
- en: Figure 6.37 – Changing the color, font size, and opacity of the header in the
    report
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: '#TOC {'
- en: That concludes this exercise. Now, let’s wrap up this chapter.
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: 这项练习到此结束。现在，让我们总结本章内容。
- en: Summary
  id: totrans-344
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we introduced R Markdown, a flexible, transparent, and consistent
    report-generation tool. We started by going over the fundamentals of R Markdown,
    including the basic building blocks such as YAML headers and code chunks, followed
    by text formatting techniques.
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: 'title: "财务分析"'
- en: Next, we covered a case study using Google’s stock data. After downloading the
    stock data from the web, we generated a report to summarize the statistics of
    the daily closing price, added plots and tables to the report, performed data
    processing, and displayed the results with different styling options. We also
    explored a few different ways to configure a code chunk.
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们通过使用谷歌的股票数据进行了案例研究。在从网络下载股票数据后，我们生成了一份报告来总结每日收盘价的统计数据，向报告中添加了图表和表格，进行了数据处理，并使用不同的样式选项展示了结果。我们还探索了几种配置代码块的不同方法。
- en: Lastly, we discussed how to customize the R Markdown reports. The topics we
    covered included adding a table of contents to the report, creating repetitive
    reports using parameters in the YAML header, and changing the visual style of
    the report by editing the visual properties of different components using CSS.
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们讨论了如何自定义 R Markdown 报告。我们涵盖的主题包括在报告中添加目录，使用 YAML 标头中的参数创建重复的报告，以及通过编辑不同组件的视觉属性来更改报告的视觉风格，使用
    CSS 进行编辑。
- en: With the next chapter, we will begin *Part 2* of this book and introduce the
    fundamentals of linear algebra and calculus using R.
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将开始本书的**第二部分**，并使用 R 语言介绍线性代数和微积分的基础知识。
