- en: Feature Understanding – What&#x27;s in My Dataset?
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 特征理解 – 我的数据集中有什么？
- en: 'Finally! We can start to jump into some real data, some real code, and some
    real results. Specifically, we will be diving deeper into the following ideas:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 最后！我们可以开始深入研究一些真实的数据，一些真实的代码，以及一些真实的结果。具体来说，我们将更深入地探讨以下想法：
- en: Structured versus unstructured data
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 结构化数据与非结构化数据对比
- en: Quantitative versus qualitative data
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定量数据与定性数据
- en: The four levels of data
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据的四个层次
- en: Exploratory data analysis and data visualizations
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索性数据分析与数据可视化
- en: Descriptive statistics
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 描述性统计
- en: Each of these topics will give us a better sense of the data given to us, what
    is present within the dataset, what is not present within the dataset, and some
    basic notions on how to proceed from there.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '这些每个主题都将使我们更好地了解我们得到的数据，数据集中有什么，数据集中没有什么，以及一些基本的概念，告诉我们如何从这里开始进行下一步。 '
- en: If you're familiar with, *Principles of Data Science*, much of this echoes *Chapter
    2, Types of Data* of that book. That being said, in this chapter, we will specifically
    look at our data less from a holistic standpoint, and more from a machine-learning
    standpoint.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你熟悉《数据科学原理》，那么其中很多内容都与那本书的**第二章，数据类型**相呼应。但话虽如此，在本章中，我们将从机器学习的角度，而不是整体的角度，具体地查看我们的数据。
- en: The structure, or lack thereof, of data
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据的结构，或者缺乏结构
- en: When given a new dataset, it is first important to recognize whether or not
    your data is structured or unstructured*:*
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 当你得到一个新的数据集时，首先重要的是要识别你的数据是有组织的还是非组织的**：**
- en: '**Structured (organized) data**: Data that can be broken down into observations
    and characteristics. They are generally organized using a tabular method (where
    rows are observations and columns are characteristics).'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**结构化（有组织）数据**：可以分解为观察和特征的数据。它们通常使用表格方法（其中行是观察，列是特征）进行组织。'
- en: '**Unstructured (unorganized) data**: Data that exists as a free-flowing entity
    and does not follow standard organizational hierarchy such as tabularity. Often,
    unstructured data appears to us as a *blob* of data, or as a single characteristic
    (column).'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**非结构化（无组织）数据**：以自由流动的实体存在的数据，不遵循标准组织层次结构，如表格化。通常，非结构化数据在我们看来像是一个数据**块**，或者是一个单一的特征（列）。'
- en: 'A few examples that highlight the difference between structured and unstructured
    data are as follows:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些突出显示结构化和非结构化数据之间差异的例子：
- en: Data that exists in a raw free-text form, including server logs and tweets,
    are unstructured
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以原始文本形式存在的数据，包括服务器日志和推文，都是非结构化的。
- en: Meteorological data, as reported by scientific instruments in precise movements,
    would be considered highly structured as they exist in a tabular row/column structure
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由科学仪器精确测量的气象数据，由于其存在于表格化的行/列结构中，会被认为是高度结构化的。
- en: An example of unstructured data – server logs
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 非结构化数据的一个例子 – 服务器日志
- en: 'As an example of unstructured data, we have pulled some sample server logs
    from a public source and included them in a text document. We can take a glimpse
    of what this unstructured data looks like, so we can recognize it in the future:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 作为非结构化数据的一个例子，我们从公共来源抽取了一些样本服务器日志，并将它们包含在一个文本文档中。我们可以一瞥这种非结构化数据的样子，以便我们将来能够识别它：
- en: '[PRE0]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'We created a DataFrame in pandas called `logs` that hold our server logs. To
    take a look, let''s call the `.head()` method to look at the first few rows:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在pandas中创建了一个名为`logs`的DataFrame来存储我们的服务器日志。为了查看，让我们调用`.head()`方法来查看前几行：
- en: '[PRE1]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'This will show us a table of the first 5 rows in our logs DataFrame as follows:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 这将向我们展示我们的日志DataFrame中的前5行表格如下：
- en: '| **Info** |  |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '| **信息** |  |'
- en: '| 0 | 64.242.88.10 - - [07/Mar/2004:16:05:49 -0800] ... |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| 0 | 64.242.88.10 - - [07/Mar/2004:16:05:49 -0800] ... |'
- en: '| 1 | 64.242.88.10 - - [07/Mar/2004:16:06:51 -0800] ... |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '| 1 | 64.242.88.10 - - [07/Mar/2004:16:06:51 -0800] ... |'
- en: '| 2 | 64.242.88.10 - - [07/Mar/2004:16:10:02 -0800] ... |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
  zh: '| 2 | 64.242.88.10 - - [07/Mar/2004:16:10:02 -0800] ... |'
- en: '| 3 | 64.242.88.10 - - [07/Mar/2004:16:11:58 -0800] ... |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '| 3 | 64.242.88.10 - - [07/Mar/2004:16:11:58 -0800] ... |'
- en: '| 4 | 64.242.88.10 - - [07/Mar/2004:16:20:55 -0800] ... |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
  zh: '| 4 | 64.242.88.10 - - [07/Mar/2004:16:20:55 -0800] ... |'
- en: We can see in our logs that each row represents a single log and there is only
    a single column, the text of the log itself. Not exactly a characteristic or anything,
    just the raw log is taken directly from the server. This is a great example of
    unstructured data. Most often, data in the form of text is usually unstructured.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到在我们的日志中，每一行代表一条单独的日志，并且只有一个列，即日志本身的文本。这并不是一个特征或其他东西，只是直接从服务器获取的原始日志。这是一个非结构化数据的绝佳例子。通常，以文本形式存在的数据通常是未结构化的。
- en: It is important to recognize that most unstructured data can be transformed
    into structured data through a few manipulations, but this is something that we
    will tackle in the next chapter.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 重要的是要认识到，大多数非结构化数据可以通过一些操作转换为结构化数据，但这是我们在下一章将要解决的问题。
- en: Most of the data that we will be working on the book will be structured. That
    means that there will be a sense of rows and columns. Given this, we can start
    to look at the types of values in the cells of our tabular data.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在本书中处理的大部分数据将是结构化的。这意味着将有一种行和列的感觉。鉴于这一点，我们可以开始查看表格数据单元格中的值类型。
- en: Quantitative versus qualitative data
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 定性与定性数据
- en: To accomplish our diagnoses of the various types of data, we will begin with
    the highest order of separation. When dealing with structured, tabular data (which
    we usually will be doing), the first question we generally ask ourselves is whether
    the values are of a numeric or categorical nature.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 为了完成我们对各种类型数据的诊断，我们将从最高层次的分离开始。当我们处理结构化、表格数据时（我们通常是这样做的），我们通常问自己的第一个问题是值是数值的还是分类的。
- en: '**Quantitative data **are data that are numerical in nature. They should be
    measuring the quantity of something.'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '**定量数据**是本质上是数值的数据。它们应该测量某物的数量。'
- en: '**Qualitative data** are data that are categorical in nature. They should be
    describing the quality of something.'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '**定性数据**是本质上是分类的数据。它们应该描述某物的质量。'
- en: 'Basic examples:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 基本示例：
- en: Weather measured as temperature in Fahrenheit or Celsius would be quantitative
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以华氏度或摄氏度测量的天气是定量的
- en: Weather measured as cloudy or sunny would be qualitative
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以多云或晴朗测量的天气是定性的
- en: The name of a person visiting the White House would be qualitative
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 访问白宫的人的名字将是定性的
- en: The amount of blood you donate at a blood drive is quantitative
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在献血活动中捐赠的血液量是定量的
- en: The first two examples show that we can describe similar systems using data
    from both the qualitative and quantitative side. In fact, in most datasets, we
    will be working with both qualitative and quantitative data.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 前两个例子表明，我们可以使用定性和定量两方面的数据来描述类似的系统。事实上，在大多数数据集中，我们将同时处理定性和定量数据。
- en: Sometimes, data can, arguably, be either quantitative or qualitative. The ranking
    you would give a restaurant (one through five stars) could be considered quantitative
    or qualitative, for example. While they are numbers, the numbers themselves might
    also represent categories. For example, if the restaurant rating app asked you
    to rate the restaurant using a quantitative star system, then feasibly the restaurant's
    average ranking might be a decimal, like 4.71 stars, making the data quantitative.
    At the same time, if the app asked you if you *hated it*, *thought it was OK*,
    *liked it*, *loved it*, or *really loved it*, then these are now categories. As
    a result of these ambiguities between quantitative and qualitative data, we employ
    an even deeper method called the four levels of data. Before we do that, let's
    introduce our first dataset for the chapter and really solidify some examples
    of qualitative and quantitative data.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，数据可以被认为是定量的或定性的。例如，你给餐厅评的等级（一星到五星级）可以被认为是定量的或定性的。虽然它们是数字，但这些数字本身也可能代表类别。例如，如果餐厅评分应用要求你使用定量的星级系统来评分，那么餐厅的平均排名可能是一个小数，比如4.71星，这使得数据成为定量的。同时，如果应用要求你表达你对餐厅的“讨厌”、“一般”、“喜欢”、“热爱”或“非常热爱”，那么这些现在就是类别。由于这些定量和定性数据之间的模糊性，我们采用了一种更深入的方法，称为数据四层次法。在我们这样做之前，让我们介绍本章的第一个数据集，并真正巩固一些定性和定量数据的例子。
- en: Salary ranges by job classification
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 按职业分类的薪资范围
- en: 'Let''s first do some import statements:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们先做一些导入语句：
- en: '[PRE2]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'And then, let''s import our first dataset, which will explore salaries of different
    job titles in San Francisco. This dataset is available publicly and so you are
    encouraged to play around with it as much as you want:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '然后，让我们导入我们的第一个数据集，该数据集将探讨旧金山不同职位的薪资。这个数据集是公开的，因此你被鼓励尽可能多地玩弄它： '
- en: '[PRE3]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Let us have a look at the following table to understand better:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看一下以下表格，以更好地理解：
- en: '|  | **SetID** | **Job Code** | **Eff Date** | **Sal End Date** | **Salary
    SetID** | **Sal Plan** | **Grade** | **Step** | **Biweekly High Rate** | **Biweekly
    Low Rate** | **Union Code** | **Extended Step** | **Pay Type** |'
  id: totrans-48
  prefs: []
  type: TYPE_TB
  zh: '|  | **SetID** | **Job Code** | **Eff Date** | **Sal End Date** | **Salary
    SetID** | **Sal Plan** | **Grade** | **Step** | **Biweekly High Rate** | **Biweekly
    Low Rate** | **Union Code** | **Extended Step** | **Pay Type** |'
- en: '| 0 | COMMN | 0109 | 07/01/2009 12:00:00 AM | 06/30/2010 12:00:00 AM | COMMN
    | SFM | 00000 | 1 | $0.00 | $0.00 | 330 | 0 | C |'
  id: totrans-49
  prefs: []
  type: TYPE_TB
  zh: '| 0 | COMMN | 0109 | 2009年07月01日 12:00:00 AM | 2010年06月30日 12:00:00 AM | COMMN
    | SFM | 00000 | 1 | $0.00 | $0.00 | 330 | 0 | C |'
- en: '| 1 | COMMN | 0110 | 07/01/2009 12:00:00 AM | 06/30/2010 12:00:00 AM  | COMMN
    | SFM | 00000 | 1 | $15.00 | $15.00 | 323 | 0 | D |'
  id: totrans-50
  prefs: []
  type: TYPE_TB
  zh: '| 1 | COMMN | 0110 | 2009年07月01日 12:00:00 AM | 2010年06月30日 12:00:00 AM | COMMN
    | SFM | 00000 | 1 | $15.00 | $15.00 | 323 | 0 | D |'
- en: '| 2 | COMMN | 0111 | 07/01/2009 12:00:00 AM | 06/30/2010 12:00:00 AM | COMMN
    | SFM | 00000 | 1 | $25.00 | $25.00 | 323 | 0 | D |'
  id: totrans-51
  prefs: []
  type: TYPE_TB
  zh: '| 2 | COMMN | 0111 | 2009年07月01日 12:00:00 AM | 2010年06月30日 12:00:00 AM | COMMN
    | SFM | 00000 | 1 | $25.00 | $25.00 | 323 | 0 | D |'
- en: '| 3 | COMMN | 0112 | 07/01/2009 12:00:00 AM | 06/30/2010 12:00:00 AM | COMMN
    | SFM | 00000 | 1 | $50.00 | $50.00 | 323 | 0 | D |'
  id: totrans-52
  prefs: []
  type: TYPE_TB
  zh: '| 3 | COMMN | 0112 | 2009年07月01日 12:00:00 AM | 2010年06月30日 12:00:00 AM | COMMN
    | SFM | 00000 | 1 | $50.00 | $50.00 | 323 | 0 | D |'
- en: '| 4 | COMMN | 0114 | 07/01/2009 12:00:00 AM | 06/30/2010 12:00:00 AM | COMMN
    | SFM | 00000 | 1 | $100.00 | $100.00 | 323 | 0 | M |'
  id: totrans-53
  prefs: []
  type: TYPE_TB
  zh: '| 4 | COMMN | 0114 | 2009年07月01日 12:00:00 AM | 2010年06月30日 12:00:00 AM | COMMN
    | SFM | 00000 | 1 | $100.00 | $100.00 | 323 | 0 | M |'
- en: 'We can see that we have a bunch of columns, and some already start to jump
    out at us as being quantitative or qualitative. Let''s get a sense of how many
    rows of data there are using the `.info()` command:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到，我们有一系列列，其中一些已经很明显是定量或定性列。让我们使用`.info()`命令来了解数据中有多少行数据：
- en: '[PRE4]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'So, we have `1356 entries` (rows) and `13 columns`. The `.info()` command also
    tells us the number of `non-null` items in each column. This is important because
    missing data is by far one of the most common issues in feature engineering. Sometimes,
    we are working with datasets that are just incomplete. In pandas, we have many
    ways of figuring out if we are working with missing data, and many ways of dealing
    with them. A very quick and common way to count the number of missing values is
    to run:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们有`1356`条记录（行）和`13`列。`.info()`命令还告诉我们每列中`非空`项的数量。这很重要，因为缺失数据是特征工程中最常见的问题之一。有时，我们处理的是不完整的数据集。在pandas中，我们有多种方法来找出我们是否在处理缺失数据，以及多种处理它们的方法。快速且常见的一种方法是运行：
- en: '[PRE5]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'So, we see we are not missing any pieces of data in this one, phew (for now).
    Moving on, let''s run the `describe` method to check out some descriptive statistics
    of our quantitative columns (which we should have). Note that the `describe` method
    will default to describing quantitative columns, but will describe qualitative
    columns if there are no quantitative columns:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们看到在这个数据集中我们没有遗漏任何数据片段，谢天谢地（目前如此）。接下来，让我们运行`describe`方法来查看我们定量列的一些描述性统计信息（我们本应该有的）。请注意，`describe`方法默认描述定量列，但如果没有定量列，则会描述定性列：
- en: '[PRE6]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Let us have a look at the following table for a better understanding here:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看一下以下表格，以更好地理解这一点：
- en: '|  | **Step** | **Union Code** | **Extended Step** |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '|  | **Step** | **Union Code** | **Extended Step** |'
- en: '| **count** | 1356.000000 | 1356.000000 | 1356.000000 |'
  id: totrans-62
  prefs: []
  type: TYPE_TB
  zh: '| **计数** | 1356.000000 | 1356.000000 | 1356.000000 |'
- en: '| **mean** | 1.294985 | 392.676991 | 0.150442 |'
  id: totrans-63
  prefs: []
  type: TYPE_TB
  zh: '| **平均值** | 1.294985 | 392.676991 | 0.150442 |'
- en: '| **std** | 1.045816 | 338.100562 | 1.006734 |'
  id: totrans-64
  prefs: []
  type: TYPE_TB
  zh: '| **标准差** | 1.045816 | 338.100562 | 1.006734 |'
- en: '| **min** | 1.000000 | 1.000000 | 0.000000 |'
  id: totrans-65
  prefs: []
  type: TYPE_TB
  zh: '| **最小值** | 1.000000 | 1.000000 | 0.000000 |'
- en: '| **25%** | 1.000000 | 21.000000 | 0.000000 |'
  id: totrans-66
  prefs: []
  type: TYPE_TB
  zh: '| **25%** | 1.000000 | 21.000000 | 0.000000 |'
- en: '| **50%** | 1.000000 | 351.000000 | 0.000000 |'
  id: totrans-67
  prefs: []
  type: TYPE_TB
  zh: '| **50%** | 1.000000 | 351.000000 | 0.000000 |'
- en: '| **75%** | 1.000000 | 790.000000 | 0.000000 |'
  id: totrans-68
  prefs: []
  type: TYPE_TB
  zh: '| **75%** | 1.000000 | 790.000000 | 0.000000 |'
- en: '| **max** | 5.000000 | 990.000000 | 11.000000 |'
  id: totrans-69
  prefs: []
  type: TYPE_TB
  zh: '| **最大值** | 5.000000 | 990.000000 | 11.000000 |'
- en: 'According to pandas, we only have three quantitative columns: `Step`, `Union
    Code`, and `Extended Step`. Let''s ignore `Step` and `Extended Step` for now,
    and also notice that `Union Code` isn''t really quantitative. While it is a number,
    it doesn''t really represent a quantity of something, it''s merely describing
    the union through a unique coding. So, we have some work to do here to even understand
    the features that we are more interested in. Most notably, let''s say we wish
    to pull out a single quantitative column, the `Biweekly High Rate`, and a single
    qualitative column, `Grade` (the type of job):'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 根据pandas，我们只有三个定量列：`Step`、`Union Code`和`Extended Step`。现在我们先忽略`Step`和`Extended
    Step`，同时注意`Union Code`实际上并不是定量列。虽然它是一个数字，但它并不真正代表某种数量的东西，它只是通过唯一的编码来描述联合。因此，我们需要做一些工作来理解我们更感兴趣的特性。最值得注意的是，比如说我们希望提取一个单一的定量列，即`Biweekly
    High Rate`，以及一个单一的定性列，即`Grade`（工作类型）：
- en: '[PRE7]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'The following is the result of the preceding code:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是在前面的代码运行后的结果：
- en: '![](img/0e3e0c58-4b55-44c1-b323-5e01abc6065b.png)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0e3e0c58-4b55-44c1-b323-5e01abc6065b.png)'
- en: 'To do some cleaning up on these columns, let''s remove those dollar signs (`$`)
    from the salary rate and ensure that the columns are of the correct type. When
    working with quantitative columns, we generally want them to be integer or floats
    (floats are preferred), while qualitative columns are usually strings or Unicode
    objects:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 为了清理这些列，让我们从工资率中移除那些美元符号（`$`），并确保列是正确的类型。当我们处理定量列时，我们通常希望它们是整数或浮点数（浮点数更受欢迎），而定性列通常是字符串或Unicode对象：
- en: '[PRE8]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'To clean up this column, let''s use the map feature in pandas to efficiently
    map a function to an entire series of data:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 为了清理这个列，让我们使用pandas中的映射功能来高效地将函数映射到整个数据序列：
- en: '[PRE9]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The following table gives us a better understanding here:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 下表让我们更好地理解这里的情况：
- en: '|  | **Biweekly High Rate** | **Grade** |'
  id: totrans-79
  prefs: []
  type: TYPE_TB
  zh: '|  | **Biweekly High Rate** | **Grade** |'
- en: '| **0** | 0.00 | 00000 |'
  id: totrans-80
  prefs: []
  type: TYPE_TB
  zh: '| **0** | 0.00 | 00000 |'
- en: '| **1** | 15.00 | 00000 |'
  id: totrans-81
  prefs: []
  type: TYPE_TB
  zh: '| **1** | 15.00 | 00000 |'
- en: '| **2** | 25.00 | 00000 |'
  id: totrans-82
  prefs: []
  type: TYPE_TB
  zh: '| **2** | 25.00 | 00000 |'
- en: '| **3** | 50.00 | 00000 |'
  id: totrans-83
  prefs: []
  type: TYPE_TB
  zh: '| **3** | 50.00 | 00000 |'
- en: '| **4** | 100.00 | 00000 |'
  id: totrans-84
  prefs: []
  type: TYPE_TB
  zh: '| **4** | 100.00 | 00000 |'
- en: 'To finish our transformation of the `Biweekly High Rate` column, we will cast
    the whole thing as a `float`:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 为了完成我们对`Biweekly High Rate`列的转换，我们将整个列转换为`float`：
- en: '[PRE10]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'While we are casting, let''s also cast the `Grade` column as a string:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们在铸造时，也让`Grade`列作为一个字符串进行铸造：
- en: '[PRE11]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'We see that we now have a total of:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 我们看到我们现在总共有：
- en: 1,356 rows (like we started with)
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 1,356行（就像我们开始时一样）
- en: 'Two columns (that we selected):'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 两个列（我们选择的）：
- en: '**Biweekly High Rate**: A quantitative column that refers to the average high
    weekly salary for a specified department:'
  id: totrans-92
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**双周高率**：一个指特定部门平均每周工资的定量列：'
- en: This column is quantitative because the the values are numerical in nature and
    describe the quantity of money that the person earns weekly
  id: totrans-93
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这个列是定量的，因为值是数值性的，描述了个人每周赚取的金额
- en: It is of type float, which we cast it to
  id: totrans-94
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它是浮点类型，我们将其转换为
- en: '**Grade**: The department that the salary is in reference to:'
  id: totrans-95
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Grade**：工资所参考的部门：'
- en: This column is definitely qualitative because the codes refer to a department
    and not a quantity of any kind
  id: totrans-96
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这个列肯定是定性的，因为代码指的是一个部门，而不是任何类型的数量
- en: It is of type object, which is the type pandas will stipulate if it is a string
  id: totrans-97
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它是对象类型，这是pandas在它是字符串时会规定的类型
- en: To break quantitative and qualitative data even further, let's dive into the
    four levels of data.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 为了进一步区分定量和定性数据，让我们深入了解数据的四个级别。
- en: The four levels of data
  id: totrans-99
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据的四个级别
- en: 'We already know that we can identify data as being either qualitative or quantitative.
    But, from there, we can go further. The four levels of data are:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经知道我们可以将数据识别为定性或定量。但是，从这里我们可以更进一步。数据的四个级别是：
- en: The nominal level
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 名义级别
- en: The ordinal level
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 序数级别
- en: The interval level
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 间隔级别
- en: The ratio level
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 比率级别
- en: Each level comes with a varying level of control and mathematical possibilities.
    It is crucial to know which level data lives on because it will dictate the types
    of visualizations and operations you are allowed to perform.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 每个级别都伴随着不同级别的控制和数学可能性。知道数据处于哪个级别至关重要，因为它将决定你可以执行的可视化和操作类型。
- en: The nominal level
  id: totrans-106
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 名义级别
- en: The first level of data, the nominal level, has the weakest structure. It consists
    of data that are purely described by name. Basic examples include blood type (A,
    O, AB), species of animal, or names of people. These types of data are all qualitative.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 数据的第一级，名义级别，结构最弱。它由纯粹通过名称描述的数据组成。基本例子包括血型（A，O，AB）、动物物种或人名。这些类型的数据都是定性的。
- en: 'Some other examples include:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 一些其他例子包括：
- en: In the `SF Job Salary` dataset, the `Grade` column would be nominal
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`SF Job Salary`数据集中，`Grade`列将是名义的
- en: Given visitor logs of a company, the first and last names of the visitors would
    be nominal
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 给定一家公司的访客日志，访客的姓名和姓氏将是名义的
- en: Species of animals in a lab experiment would be nominal
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实验室动物物种将是名义的
- en: Mathematical operations allowed
  id: totrans-112
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 允许的数学运算
- en: At each level, we will describe briefly the type of math that is allowed, and
    more importantly, not allowed. At this level, we cannot perform any quantitative
    mathematical operations, such as addition or division. These would not make any
    sense. Due to the lack of addition and division, we obviously cannot find an average
    value at the nominal level. There is no average name or average job department.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 在每个水平上，我们将简要描述允许的数学类型，更重要的是，不允许的数学类型。在这个水平上，我们不能执行任何定量数学运算，如加法或除法。这些都没有意义。由于缺乏加法和除法，我们显然不能在名义水平上找到平均值。没有平均名称或平均职业部门。
- en: 'We can, however, do basic counts using pandas'' `value_counts` methods:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用 pandas 的 `value_counts` 方法进行基本的计数：
- en: '[PRE12]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'The most commonly occurring `Grade` is `00000`, meaning that that is our **mode**
    or most commonly occurring category. Because of our ability to count at the nominal
    level, graphs, like bar charts, are available to us:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 最常见的 `Grade` 是 `00000`，这意味着这是我们**众数**或最常出现的类别。由于我们在名义水平上能够计数，因此像条形图这样的图表对我们是可用的：
- en: '[PRE13]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'The following is the result of the preceding code:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 以下为前述代码的结果：
- en: '![](img/2f219471-ae45-4ba2-9da7-789fd421dd6a.png)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/2f219471-ae45-4ba2-9da7-789fd421dd6a.png)'
- en: 'At the nominal level, we may also utilize pie charts:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 在名义水平上，我们也可以使用饼图：
- en: '[PRE14]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'The following is the output of the preceding code:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 以下为前述代码的输出：
- en: '![](img/60033570-ccb5-4bb3-a54f-98e6f1266cfc.png)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/60033570-ccb5-4bb3-a54f-98e6f1266cfc.png)'
- en: The ordinal level
  id: totrans-124
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 序数水平
- en: 'The nominal level provided us with much in the way of capabilities for further
    exploration. Moving one level up, we are now on the ordinal scale. The ordinal
    scale inherits all of the properties of the nominal level, but has important additional
    properties:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 名义水平为我们提供了许多进一步探索的能力。提升一个水平，我们现在处于序数尺度。序数尺度继承了名义水平的所有属性，但具有重要的附加属性：
- en: Data at the ordinal level can be **naturally ordered**
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 序数水平的数据可以**自然排序**
- en: This implies that some data values in the column can be considered better than
    or greater than others
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这意味着列中的某些数据值可以被认为是比其他数据值更好或更大的
- en: As with the nominal level, data at the ordinal level is still categorical in
    nature, even if numbers are used to represent the categories.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 与名义水平一样，序数水平的数据本质上仍然是分类的，即使使用数字来表示类别。
- en: Mathematical operations allowed
  id: totrans-129
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 允许的数学运算
- en: We have a few new abilities to work with at the ordinal level compared to the
    nominal level. At the ordinal level, we may still do basic counts as we did at
    the nominal level, but we can also introduce comparisons and orderings into the
    mix. For this reason, we may utilize new graphs at this level. We may use bar
    and pie charts like we did at the nominal level, but because we now have ordering
    and comparisons, we can calculate medians and percentiles. With medians and percentiles,
    stem-and-leaf plots, as well as box plots, are possible.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 与名义水平相比，我们在序数水平上有一些新的能力。在序数水平上，我们可能仍然像在名义水平上那样进行基本的计数，但我们可以引入比较和排序。因此，我们可能在这个层面上使用新的图表。我们可能使用条形图和饼图，就像在名义水平上那样，但由于我们现在有了排序和比较，我们可以计算中位数和百分位数。有了中位数和百分位数，茎叶图以及箱线图都是可能的。
- en: 'Some examples of data at the ordinal level include:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 序数水平数据的例子包括：
- en: Using a Likert scale (rating something on a scale from one to ten, for example)
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用李克特量表（例如，在1到10的量表上对某物进行评分）
- en: Grade levels on an exam (F, D, C, B, A)
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 考试的等级水平（F，D，C，B，A）
- en: 'For a real-world example of data at the ordinal scale, let''s bring in a new
    dataset. This dataset holds key insights into how much people enjoy the San Francisco
    International Airport or SFO. This dataset is also publicly available on SF''s
    open database ([https://data.sfgov.org/Transportation/2013-SFO-Customer-Survey/mjr8-p6m5](https://data.sfgov.org/Transportation/2013-SFO-Customer-Survey/mjr8-p6m5)):'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 为了提供一个序数尺度数据的现实世界例子，让我们引入一个新的数据集。这个数据集包含关于人们享受旧金山国际机场（SFO）的关键见解。这个数据集也公开在旧金山的开放数据库上([https://data.sfgov.org/Transportation/2013-SFO-Customer-Survey/mjr8-p6m5](https://data.sfgov.org/Transportation/2013-SFO-Customer-Survey/mjr8-p6m5))：
- en: '[PRE15]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'This CSV has many, many columns:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 这个 CSV 有很多列：
- en: '[PRE16]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '`95` columns, to be exact. For more information on the columns available for
    this dataset, check out the data dictionary on the website ([https://data.sfgov.org/api/views/mjr8-p6m5/files/FHnAUtMCD0C8CyLD3jqZ1-Xd1aap8L086KLWQ9SKZ_8?download=true&filename=AIR_DataDictionary_2013-SFO-Customer-Survey.pdf](https://data.sfgov.org/api/views/mjr8-p6m5/files/FHnAUtMCD0C8CyLD3jqZ1-Xd1aap8L086KLWQ9SKZ_8?download=true&filename=AIR_DataDictionary_2013-SFO-Customer-Survey.pdf))'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: '`95`列，确切地说。有关此数据集可用的列的更多信息，请查看网站上的数据字典（[https://data.sfgov.org/api/views/mjr8-p6m5/files/FHnAUtMCD0C8CyLD3jqZ1-Xd1aap8L086KLWQ9SKZ_8?download=true&filename=AIR_DataDictionary_2013-SFO-Customer-Survey.pdf](https://data.sfgov.org/api/views/mjr8-p6m5/files/FHnAUtMCD0C8CyLD3jqZ1-Xd1aap8L086KLWQ9SKZ_8?download=true&filename=AIR_DataDictionary_2013-SFO-Customer-Survey.pdf))'
- en: 'For now, let''s focus on a single column, `Q7A_ART`. As described by the publicly
    available data dictionary, `Q7A_ART` is about artwork and exhibitions. The possible
    choices are 0, 1, 2, 3, 4, 5, 6 and each number has a meaning:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们专注于一个单独的列，`Q7A_ART`。根据公开可用的数据字典描述，`Q7A_ART`是关于艺术品和展览的。可能的选项是0，1，2，3，4，5，6，每个数字都有其含义：
- en: '**1**: Unacceptable'
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**1**：不可接受'
- en: '**2**: Below Average'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**2**：低于平均水平'
- en: '**3**: Average'
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**3**：平均'
- en: '**4**: Good'
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**4**：良好'
- en: '**5**: Outstanding'
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**5**：杰出'
- en: '**6**: Have Never Used or Visited'
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**6**：从未使用或访问过'
- en: '**0**: Blank'
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**0**：空白'
- en: 'We can represent it as follows:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以表示如下：
- en: '[PRE17]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'The pandas is considering the column numerical because it is full of numbers,
    however, we must remember that even though the cells'' values are numbers, those
    numbers represent a category, and therefore this data belongs to the qualitative
    side, and more specifically, ordinal. If we remove the `0` and `6` category, we
    are left with five ordinal categories which basically resemble the star rating
    of restaurant ratings:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: Pandas正在考虑将列数值化，因为它充满了数字，然而，我们必须记住，尽管单元格的值是数字，但这些数字代表一个类别，因此这些数据属于定性方面，更具体地说，是序数。如果我们移除`0`和`6`类别，我们将剩下五个序数类别，基本上类似于餐厅评分的星级：
- en: '[PRE18]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'We will then cast the values as strings:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 我们然后将值转换为字符串：
- en: '[PRE19]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Now that we have our ordinal data in the right format, let''s look at some
    visualizations:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经将序数数据格式化正确，让我们看看一些可视化：
- en: '[PRE20]'
  id: totrans-154
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'The following is the result of the preceding code:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是对前面代码的结果：
- en: '![](img/ed1e4cc9-73d6-4fa4-87e7-77de7dec49fb.png)'
  id: totrans-156
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ed1e4cc9-73d6-4fa4-87e7-77de7dec49fb.png)'
- en: 'We can also visualize this as a bar chart as follows:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 我们也可以将其可视化如下：
- en: '[PRE21]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'The following is the output of the preceding code:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是对前面代码的输出：
- en: '![](img/451880ea-7f27-4f98-8156-96c9d03af6ff.png)'
  id: totrans-160
  prefs: []
  type: TYPE_IMG
  zh: '![](img/451880ea-7f27-4f98-8156-96c9d03af6ff.png)'
- en: 'However, now we can also introduce box plots since we are at the ordinal level:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，现在我们也可以引入箱线图，因为我们处于序数级别：
- en: '[PRE22]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'The following is the output of the preceding code:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是对前面代码的输出：
- en: '![](img/9ce8981c-244b-4e42-9989-6368745ebcc0.png)'
  id: totrans-164
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9ce8981c-244b-4e42-9989-6368745ebcc0.png)'
- en: This box plot would not be possible for the `Grade` column in the salary data,
    as finding a median would not be possible.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 这个箱线图对于工资数据的`Grade`列是不可能的，因为找到中位数是不可能的。
- en: The interval level
  id: totrans-166
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 序数水平
- en: We are starting to cook with gas now. At the nominal and ordinal level, we were
    working with data that was qualitative in nature. There was data that did not
    describe a true quantity. At the interval level, we move away from this notion
    and move into quantitative data. At the interval data level, we are working with
    numerical data that not only has ordering like at the ordinal level, but also
    has meaningful differences between values. This means that at the interval level,
    not only may we order and compare values, we may also **add** and **subtract**
    values.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在开始用煤气做饭了。在名义和序数水平上，我们处理的是定性数据。有些数据并没有描述真正的数量。在区间水平上，我们摆脱了这个概念，进入了定量数据。在区间数据水平上，我们处理的是数值数据，这些数据不仅像在序数水平上那样有顺序，而且值之间还有有意义的差异。这意味着在区间水平上，我们不仅可以排序和比较值，还可以**加**和**减**值。
- en: 'Example:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 示例：
- en: A classic example of data at the interval level is temperature. If it is 90
    degrees in Texas, and 40 degrees in Alaska, then we may calculate a 90-40 = 50
    degrees difference between the locations. This may seem like a very simple example,
    but thinking back on the last two levels, we have never had this amount of control
    over our data before.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 数据在区间水平的经典例子是温度。如果德克萨斯州是90度，阿拉斯加是40度，那么我们可以在两个地点之间计算出90-40=50度的温差。这可能看起来是一个非常简单的例子，但回想一下前两个水平，我们以前从未对我们的数据有如此程度的控制。
- en: 'Non-example:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 非示例：
- en: A classic non-example of data that is not at the interval level are Likert scales.
    We have identified Likert at the ordinal levels for their ability to be ordered,
    but it is important to notice that subtractions do not have a true consistent
    meaning. If we subtract a 5-3 on a Likert scale, the resulting 2 doesn't actually
    mean the number 2, nor does it represent the category 2\. Thus, subtraction in
    a Likert scale is difficult.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 数据不在区间水平上的一个经典非例子是李克特量表。我们已经确定了李克特量表在序数水平上的能力，即其可排序性，但重要的是要注意，减法并没有真正的、一致的意义。如果我们从李克特量表上减去5-3，得到的2实际上并不代表数字2，也不代表类别2。因此，李克特量表中的减法是困难的。
- en: Mathematical operations allowed
  id: totrans-172
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 允许进行数学运算
- en: 'Remember, at the interval level, we have addition and subtraction to work with. This
    is a real game-changer. With the ability to add values together, we may introduce
    two familiar concepts, the **arithmetic mean** (referred to simply as the mean) and **standard
    deviation**. At the interval level, both of these are available to us. To see
    a great example of this, let''s pull in a new dataset, one about climate change:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 记住，在区间水平上，我们有加法和减法可以操作。这是一个真正的变革。有了将值相加的能力，我们可以引入两个熟悉的概念，即**算术平均数**（简称为均值）和**标准差**。在区间水平上，这两个概念都对我们可用。为了看到这个的一个很好的例子，让我们引入一个新的数据集，一个关于气候变化的数据集：
- en: '[PRE23]'
  id: totrans-174
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Let us have a look at the following table for a better understanding:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们查看以下表格以获得更好的理解：
- en: '| **dt** | **AverageTemperature** | **AverageTemperatureUncertainty** | **City**
    | **Country** | **Latitude** | **Longitude** |  |'
  id: totrans-176
  prefs: []
  type: TYPE_TB
  zh: '| **dt** | **平均温度** | **平均温度不确定性** | **城市** | **国家** | **纬度** | **经度** |  |'
- en: '| **0** | 1743-11-01 | 6.068 | 1.737 | Århus | Denmark | 57.05N | 10.33E |'
  id: totrans-177
  prefs: []
  type: TYPE_TB
  zh: '| **0** | 1743-11-01 | 6.068 | 1.737 | 奥胡斯 | 丹麦 | 57.05N | 10.33E |'
- en: '| **1** | 1743-12-01 | NaN | NaN | Århus | Denmark | 57.05N | 10.33E |'
  id: totrans-178
  prefs: []
  type: TYPE_TB
  zh: '| **1** | 1743-12-01 | NaN | NaN | 奥胡斯 | 丹麦 | 57.05N | 10.33E |'
- en: '| **2** | 1744-01-01 | NaN | NaN | Århus | Denmark | 57.05N | 10.33E |'
  id: totrans-179
  prefs: []
  type: TYPE_TB
  zh: '| **2** | 1744-01-01 | NaN | NaN | 奥胡斯 | 丹麦 | 57.05N | 10.33E |'
- en: '| **3** | 1744-02-01 | NaN | NaN | Århus | Denmark | 57.05N | 10.33E |'
  id: totrans-180
  prefs: []
  type: TYPE_TB
  zh: '| **3** | 1744-02-01 | NaN | NaN | 奥胡斯 | 丹麦 | 57.05N | 10.33E |'
- en: '| **4** | 1744-03-01 | NaN | NaN | Århus | Denmark | 57.05N | 10.33E |'
  id: totrans-181
  prefs: []
  type: TYPE_TB
  zh: '| **4** | 1744-03-01 | NaN | NaN | 奥胡斯 | 丹麦 | 57.05N | 10.33E |'
- en: 'This dataset has 8.6 million rows, where each row quantifies the average temperature
    of cities around the world by the month, going back to the 18th century. Note
    that just by looking at the first five rows, we already have some missing values.
    Let''s remove them for now in order to get a better look:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 这个数据集有860万行，其中每一行按月份量化了从18世纪以来世界各地城市的平均温度。注意，仅通过查看前五行，我们已经有了一些缺失值。现在让我们先移除它们，以便更好地观察：
- en: '[PRE24]'
  id: totrans-183
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'The following table gives us a better understanding here:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 下表能让我们更好地理解这一点：
- en: '| **dt** | **AverageTemperature** | **AverageTemperatureUncertainty** | **City**
    | **Country** | **Latitude** | **Longitude** |  |'
  id: totrans-185
  prefs: []
  type: TYPE_TB
  zh: '| **dt** | **平均温度** | **平均温度不确定性** | **城市** | **国家** | **纬度** | **经度** |  |'
- en: '| **0** | 1743-11-01 | 6.068 | 1.737 | Århus | Denmark | 57.05N | 10.33E |'
  id: totrans-186
  prefs: []
  type: TYPE_TB
  zh: '| **0** | 1743-11-01 | 6.068 | 1.737 | 奥胡斯 | 丹麦 | 57.05N | 10.33E |'
- en: '| 5 | 1744-04-01 | 5.788 | 3.624 | Århus | Denmark | 57.05N | 10.33E |'
  id: totrans-187
  prefs: []
  type: TYPE_TB
  zh: '| 5 | 1744-04-01 | 5.788 | 3.624 | 奥胡斯 | 丹麦 | 57.05N | 10.33E |'
- en: '| 6 | 1744-05-01 | 10.644 | 1.283 | Århus | Denmark | 57.05N | 10.33E |'
  id: totrans-188
  prefs: []
  type: TYPE_TB
  zh: '| 6 | 1744-05-01 | 10.644 | 1.283 | 奥胡斯 | 丹麦 | 57.05N | 10.33E |'
- en: '| 7 | 1744-06-01 | 14.051 | 1.347 | Århus | Denmark | 57.05N | 10.33E |'
  id: totrans-189
  prefs: []
  type: TYPE_TB
  zh: '| 7 | 1744-06-01 | 14.051 | 1.347 | 奥胡斯 | 丹麦 | 57.05N | 10.33E |'
- en: '| 8 | 1744-07-01 | 16.082 | 1.396 | Århus | Denmark | 57.05N | 10.33E |'
  id: totrans-190
  prefs: []
  type: TYPE_TB
  zh: '| 8 | 1744-07-01 | 16.082 | 1.396 | 奥胡斯 | 丹麦 | 57.05N | 10.33E |'
- en: 'Let''s see if we have any missing values with the following line of code:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看以下代码行是否有任何缺失值：
- en: '[PRE25]'
  id: totrans-192
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'The column in question is called `AverageTemperature`. One quality of data
    at the interval level, which temperature is, is that we cannot use a bar/pie chart
    here because we have too many values:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 有关的问题列被称为 `平均温度`。数据在区间水平上的一个特点是，由于我们拥有太多的值，因此我们不能在这里使用柱状图/饼图：
- en: '[PRE26]'
  id: totrans-194
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 111,994 values is absurd to plot, and also absurd because we know that the data
    is quantitative. Likely, the most common graph to utilize starting at this level
    would be the **histogram**. This graph is a cousin of the bar graph, and visualizes
    buckets of quantities and shows frequencies of these buckets.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 111,994个值绘制出来是荒谬的，而且也是荒谬的，因为我们知道数据是定量的。在这个水平上，最常用的图表可能是**直方图**。这种图表是柱状图的亲戚，它将数量分成桶，并显示这些桶的频率。
- en: 'Let''s see a histogram for the AverageTemperature around the world, to see
    the distribution of temperatures in a very holistic view:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看全球平均温度的直方图，以从非常全面的角度查看温度分布：
- en: '[PRE27]'
  id: totrans-197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'The following is the output of the preceding code:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的代码输出如下：
- en: '![](img/34557624-2946-4bdc-8af7-54c0746a4efd.png)'
  id: totrans-199
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/34557624-2946-4bdc-8af7-54c0746a4efd.png)'
- en: 'Here, we can see that we have an average value of 20°C. Let''s confirm this:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们可以看到平均值为20°C。让我们来确认这一点：
- en: '[PRE28]'
  id: totrans-201
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'We were close. The mean seems to be around 17°. Let''s make this a bit more
    fun and add new columns called `year` and `century`, and also subset the data
    to only be the temperatures recorded in the US:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 我们很接近。平均值似乎在17°左右。让我们让这个更有趣一些，并添加新的列称为“year”和“century”，并且仅将数据子集为美国记录的温度：
- en: '[PRE29]'
  id: totrans-203
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'With the new column `century`, let''s plot four histograms of temperature,
    one for each century:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 使用新的“century”列，让我们绘制四个温度直方图，每个世纪一个：
- en: '[PRE30]'
  id: totrans-205
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'The following is the output of the preceding code:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的代码输出如下：
- en: '![](img/aa154be5-faa1-40ed-8330-502c5549ed6d.png)'
  id: totrans-207
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/aa154be5-faa1-40ed-8330-502c5549ed6d.png)'
- en: 'Here, we have our four histograms, showing that the `AverageTemperature` is
    going up slightly. Let''s confirm this:'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们有我们的四个直方图，显示平均温度略有上升。让我们来确认这一点：
- en: '[PRE31]'
  id: totrans-209
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'The following is the output of the preceding code:'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的代码输出如下：
- en: '![](img/f0569aa0-3de6-49a3-86ea-e5ebbee765e5.png)'
  id: totrans-211
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/f0569aa0-3de6-49a3-86ea-e5ebbee765e5.png)'
- en: 'Interesting! And because differences are significant at this level, we can
    answer the question of how much, on average, the temperature has risen since the
    18th century in the US. Let''s store the changes over the centuries as its own
    pandas Series object first:'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 很有趣！由于在这个层面上差异是显著的，我们可以回答自18世纪以来，美国平均温度上升了多少的问题。首先，让我们将几个世纪的温度变化存储为其自己的pandas
    Series对象：
- en: '[PRE32]'
  id: totrans-213
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'And now, let''s use the indices in the Series to subtract the value in the
    21st century minus the value in the 18th century, to get the difference in temperature:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们使用Series的索引来从21世纪的值中减去18世纪的值，以得到温度差异：
- en: '[PRE33]'
  id: totrans-215
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: Plotting two columns at the interval level
  id: totrans-216
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在间隔级别绘制两个列
- en: 'One large advantage of having two columns of data at the interval level, or
    higher, is that it opens us up to using scatter plots where we can graph two columns
    of data on our axes and visualize data-points as literal points on the graph.
    The `year` and `averageTemperature` column of our `climate change` dataset are
    both at the interval level, as they both have meaning differences, so let''s take
    a crack at plotting all of the monthly recorded US temperatures as a scatter plot,
    where the *x* axis will be the year and the *y* axis will be the temperature.
    We hope to notice a trending increase in temperature, as the line graph previously
    suggested:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 在具有间隔级别或更高级别的两个数据列的情况下，有一个很大的优势，那就是它使我们能够使用散点图，我们可以将两个数据列绘制在我们的轴上，并将数据点可视化为图上的实际点。我们的“气候变化”数据集的“year”和“averageTemperature”列都处于间隔级别，因为它们都有意义差异，所以让我们尝试绘制所有记录的美国月度温度的散点图，其中*x*轴将是年份，*y*轴将是温度。我们希望注意到温度的趋势性上升，正如之前的线图所暗示的：
- en: '[PRE34]'
  id: totrans-218
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'The following is the output of the preceding code:'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的代码输出如下：
- en: '![](img/a0cb0ab6-e844-4bf8-b39b-e065cf236925.png)'
  id: totrans-220
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/a0cb0ab6-e844-4bf8-b39b-e065cf236925.png)'
- en: Oof, that's not pretty. There seems to be a lot of noise, and that is to be
    expected. Every year has multiple towns reporting multiple average temperatures,
    so it makes sense that we see many vertical points at each year.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 哎呀，这看起来不太美观。似乎有很多噪声，这是可以预料的。每年都有多个城镇报告多个平均温度，因此我们每年看到许多垂直点是有道理的。
- en: 'Let''s employ a `groupby` the year column to remove much of this noise:'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用年份列的`groupby`来消除大部分噪声：
- en: '[PRE35]'
  id: totrans-223
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'The following is the output of the preceding code:'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的代码输出如下：
- en: '![](img/2690320e-c787-443c-8983-c28834545e5e.png)'
  id: totrans-225
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/2690320e-c787-443c-8983-c28834545e5e.png)'
- en: 'Better! We can definitely see the increase over the years, but let''s smooth
    it out slightly by taking a rolling mean over the years:'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 好多了！我们确实可以看到年份的变化，但让我们通过在年份上取滚动平均值来稍微平滑一下：
- en: '[PRE36]'
  id: totrans-227
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'The following is the output of the preceding code:'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的代码输出如下：
- en: '![](img/bb05280f-619e-4eab-8138-2b36106e54d2.png)'
  id: totrans-229
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/bb05280f-619e-4eab-8138-2b36106e54d2.png)'
- en: So, our ability to plot two columns of data at the interval level has re-confirmed
    what the previous line graph suggested; that there does seem to be a general trend
    upwards in average temperature across the US.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们绘制间隔级别两个数据列的能力再次证实了之前的线图所暗示的；似乎美国平均温度确实有普遍上升的趋势。
- en: The interval level of data provides a whole new level of understanding of our
    data, but we aren't done yet.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 数据的区间级别为我们提供了对数据的新理解层面，但我们还没有完成。
- en: The ratio level
  id: totrans-232
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 比率级别
- en: Finally, we move up to the highest level, the ratio level. At this level, we
    arguably have the highest degree of control and mathematics at our disposal. At
    the ratio level, like the interval level, we are still working with quantitative
    data. We inherit addition and subtraction from the interval level, but now we
    have a notion of *true zero* which gives us the ability to multiply and divide
    values.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们上升到最高级别，即比率级别。在这个层面上，我们可以说我们拥有最高程度的控制和可用数学。在比率级别，就像区间级别一样，我们仍在处理定量数据。我们从区间级别继承了加法和减法，但现在我们有一个关于*真正零*的概念，这使我们能够乘除数值。
- en: Mathematical operations allowed
  id: totrans-234
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 允许的数学运算
- en: At the ratio level, we may multiply and divide values together. This may not
    seem like a big deal, but it does allow us to make unique observations about data
    at this level that we cannot do at lower levels. Let's jump into a few examples
    to see exactly what this means.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 在比率级别，我们可以一起乘除数值。这看起来可能不是什么大事，但它确实允许我们对这个层面的数据进行独特的观察，而在较低级别则无法做到。让我们通过一些例子来具体了解这意味着什么。
- en: 'Example:'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 示例：
- en: 'When working with financial data, we almost always have to work with some monetary
    value. Money is at the ratio level because we have a concept of having "zero money".
    For this reason, we may make statements such as:'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 当处理财务数据时，我们几乎总是需要处理一些货币价值。货币处于比率层面，因为我们有一个“没有钱”的概念。因此，我们可能会做出如下陈述：
- en: $100 is *twice *as much as $50 because 100/50 = 2
  id: totrans-238
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: $100是$50的两倍，因为100/50 = 2
- en: 10mg of penicillin is *half *as much as 20mg of penicillin because 10/20 = .5
  id: totrans-239
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 10毫克的青霉素是20毫克青霉素的一半，因为10/20 = 0.5
- en: It is because of the existence of zero that ratios have meaning at this level.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 正是因为存在零，比率在这个层面上才有意义。
- en: 'Non-example:'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 非示例：
- en: We generally consider temperature to be at the interval level and not the ratio
    level, because it doesn't make sense to say something like 100 degreeis twice
    as hot as 50 degree. That doesn't quite make sense. Temperature is quite subjective
    and this is not objectively correct.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 我们通常认为温度处于区间级别而不是比率级别，因为说100度是50度的两倍没有意义。这并不完全合理。温度是非常主观的，这并不是客观正确的。
- en: It can be argued that Celsius and Fahrenheit have a starting point mainly because
    we can convert them into Kelvin, which does boast a true zero. In reality, because
    Celsius and Fahrenheit allow negative values, while Kelvin does not; both Celsius
    and Fahrenheit do not have a real *true zero*, while Kelvin does.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 可以认为摄氏度和华氏度有一个起点主要是因为我们可以将它们转换为开尔文，而开尔文确实有一个真正的零。实际上，因为摄氏度和华氏度允许负值，而开尔文不允许；所以摄氏度和华氏度都没有真正的*真正零*，而开尔文有。
- en: 'Going back to the salary data from San Francisco, we now see that the salary
    weekly rate is at the ratio level, and there we can start making new observations.
    Let''s begin by looking at the highest paid salaries:'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 回到旧金山的薪酬数据，我们现在看到薪酬周薪率处于比率级别，在那里我们可以开始做出新的观察。让我们从查看最高薪酬开始：
- en: '[PRE37]'
  id: totrans-245
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'The following is the output of the preceding code:'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是在前面的代码中的输出：
- en: '![](img/188ffdf5-9fa2-4672-af3a-c1f81a9c6d14.png)'
  id: totrans-247
  prefs: []
  type: TYPE_IMG
  zh: '![](img/188ffdf5-9fa2-4672-af3a-c1f81a9c6d14.png)'
- en: 'If we look up the highest-paid salary in a San Francisco public record found
    at:'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们查看以下在旧金山公共记录中找到的最高薪酬：
- en: '[http://sfdhr.org/sites/default/files/documents/Classification%20and%20Compensation/Archives/Compensation-Manual-FY09-10.pdf](http://sfdhr.org/sites/default/files/documents/Classification%20and%20Compensation/Archives/Compensation-Manual-FY09-10.pdf)'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://sfdhr.org/sites/default/files/documents/Classification%20and%20Compensation/Archives/Compensation-Manual-FY09-10.pdf](http://sfdhr.org/sites/default/files/documents/Classification%20and%20Compensation/Archives/Compensation-Manual-FY09-10.pdf)'
- en: 'We see that it is the **General Manager**, **Public Transportation Dept.**.
    Let''s take a look at the lowest-paid jobs by employing a similar strategy:'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 我们看到它是**总经理**，**公共交通部门**。让我们采用类似的策略来查看最低薪酬的工作：
- en: '[PRE38]'
  id: totrans-251
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'The following is the output of the preceding code:'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是在前面的代码中的输出：
- en: '![](img/6ff7f1f3-ea27-4106-b9b2-84627f788e4e.png)'
  id: totrans-253
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6ff7f1f3-ea27-4106-b9b2-84627f788e4e.png)'
- en: Again, looking up the lowest-paid job, we see that it is a **Camp Assistant**.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 再次，查看最低薪酬的工作，我们看到它是一个**营地助理**。
- en: 'Because money is at the ratio level, we can also find the ratio of the highest-paid
    employee to the lowest-paid employee:'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 因为货币处于比率级别，我们也可以找到最高薪酬员工与最低薪酬员工的比率：
- en: '[PRE39]'
  id: totrans-256
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: The highest-paid employee makes 14x the lowest city employee. Thanks, ratio
    level!
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 最高薪的员工是最低城市员工的 14 倍。感谢比率水平！
- en: Recap of the levels of data
  id: totrans-258
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据水平的总结
- en: Understanding the various levels of data is necessary to perform feature engineering.
    When it comes time to build new features, or fix old ones, we must have ways of
    identifying how to work with every column.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 理解数据的各种水平是进行特征工程所必需的。当涉及到构建新特征或修复旧特征时，我们必须有识别如何处理每一列的方法。
- en: 'Here is a quick table to summarize what is and isn''t possible at every level:'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是一个快速表格，总结了每个水平上可能和不可能的事情：
- en: '| **Level of Measurement** | **Properties** | **Examples** | **Descriptive
    statistics** | **Graphs** |'
  id: totrans-261
  prefs: []
  type: TYPE_TB
  zh: '| **测量水平** | **属性** | **例子** | **描述性统计** | **图表** |'
- en: '| Nominal | DiscreteOrderless | Binary Responses (True or False)Names of PeopleColors
    of paint | Frequencies/Percentages Mode | BarPie |'
  id: totrans-262
  prefs: []
  type: TYPE_TB
  zh: '| 名义 | 离散 无序 | 二元响应（真或假）人的名字 油漆的颜色 | 频率/百分比 模式 | 条形图 饼图'
- en: '| Ordinal | Ordered categoriesComparisons | Likert ScalesGrades on an exam
    | FrequenciesModeMedianPercentiles | BarPieStem and leaf |'
  id: totrans-263
  prefs: []
  type: TYPE_TB
  zh: '| 有序 | 有序类别 比较对比 | 李克特量表 考试成绩 | 频率 模式 中位数 百分位数 | 条形图 饼图 茎叶图'
- en: '| Interval | Differences between ordered values have meaning | Deg. C or FSome
    Likert Scales (must be specific) | FrequenciesModeMedianMeanStandard Deviation
    | Bar Pie'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: '| 间隔 | 有序值之间的差异具有意义 | 摄氏度或华氏度某些李克特量表（必须是具体的） | 频率 模式 中位数 平均值 标准差 | 条形图 饼图'
- en: Stem and leafBox plotHistogram |
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 茎叶图 箱线图 直方图
- en: '| Ratio | ContinuousTrue 0 allows ratio statements (for example, $100 is twice
    as much as $50) | MoneyWeight | MeanStandard Deviation | HistogramBox plot |'
  id: totrans-266
  prefs: []
  type: TYPE_TB
  zh: '| 比率 | 连续的 0 允许比率陈述（例如，$100 是 $50 的两倍） | 货币 重量 | 平均值 标准差 | 直方图 箱线图'
- en: 'The following is a table showing the types of statistics allowed at each level:'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 下表显示了每个水平允许的统计类型：
- en: '| **Statistic** | **Nominal** | **Ordinal** | **Interval** | **Ratio** |'
  id: totrans-268
  prefs: []
  type: TYPE_TB
  zh: '| **统计量** | **名义** | **有序** | **间隔** | **比率**'
- en: '| Mode | √ | √ | √ | Sometimes |'
  id: totrans-269
  prefs: []
  type: TYPE_TB
  zh: '| 模式 | √ | √ | √ | 有时'
- en: '| Median | X | √ | √ | √ |'
  id: totrans-270
  prefs: []
  type: TYPE_TB
  zh: '| 中位数 | X | √ | √ | √'
- en: '| Range, Min. Max | X | √ | √ | √ |'
  id: totrans-271
  prefs: []
  type: TYPE_TB
  zh: '| 范围、最小值 最大值 | X | √ | √ | √'
- en: '| Mean | X | X | √ | √ |'
  id: totrans-272
  prefs: []
  type: TYPE_TB
  zh: '| 平均值 | X | X | √ | √'
- en: '| SD | X | X | √ | √ |'
  id: totrans-273
  prefs: []
  type: TYPE_TB
  zh: '| 标准差 | X | X | √ | √'
- en: 'And finally, the following is a table showing purely the graphs that are and
    are not possible at each level:'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，以下是一个表格，显示了每个水平上可能和不可能的图表：
- en: '| **Graph** | **Nominal** | **Ordinal** | **Interval** | **Ratio** |'
  id: totrans-275
  prefs: []
  type: TYPE_TB
  zh: '| **图表** | **名义** | **有序** | **间隔** | **比率**'
- en: '| Bar/Pie | √ | √ | Sometimes | X |'
  id: totrans-276
  prefs: []
  type: TYPE_TB
  zh: '| 条形图/饼图 | √ | √ | 有时 | X'
- en: '| Stem and Leaf | X | √ | √ | √ |'
  id: totrans-277
  prefs: []
  type: TYPE_TB
  zh: '| 茎叶图 | X | √ | √ | √'
- en: '| Boxplot | X | √ | √ | √ |'
  id: totrans-278
  prefs: []
  type: TYPE_TB
  zh: '| 箱线图 | X | √ | √ | √'
- en: '| Histogram | X | X | Sometimes | √ |'
  id: totrans-279
  prefs: []
  type: TYPE_TB
  zh: '| 直方图 | X | X | 有时 | √'
- en: 'Whenever you are faced with a new dataset, here is a basic workflow to follow:'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 面对新的数据集时，以下是一个基本的流程：
- en: Is the data organized or unorganized? Does our data exist in a tabular format
    with distinct rows and columns, or does it exist as a mess of text in an unstructured
    format?
  id: totrans-281
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 数据是有序的还是无序的？我们的数据是否以具有明确行和列的表格格式存在，或者是否以无结构的文本混乱存在？
- en: Is each column quantitative or qualitative? Are the values in the cells numbers
    that represent quantity, or strings that do not?
  id: totrans-282
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 每一列是定量还是定性？单元格中的值是代表数量的数字，还是不表示数量的字符串？
- en: At what level of data is each column? Are the values at the nominal, ordinal,
    interval, or ratio level?
  id: totrans-283
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 每一列数据处于什么水平？这些值是名义水平、有序水平、间隔水平还是比率水平？
- en: What graphs can I utilize to visualize my data—bar, pie, box, histogram, and
    so on?
  id: totrans-284
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我可以利用哪些图表来可视化我的数据——条形图、饼图、箱线图、直方图等等？
- en: 'Here is a visualization of this flow:'
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是这个流程的视觉表示：
- en: '![](img/7839f08c-8139-4885-bf43-be312bf00679.png)'
  id: totrans-286
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7839f08c-8139-4885-bf43-be312bf00679.png)'
- en: Summary
  id: totrans-287
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: Understanding the features that we are working with is step zero of feature
    engineering. If we cannot understand the data given to us, we will never hope
    to fix, create, and utilize features in order to create well-performing, machine-learning
    pipelines. In this chapter, we were able to recognize, and extract the levels
    of data from our datasets and use that information to create useful and meaningful
    visuals that shine new lights on our data.
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 理解我们正在处理的特征是特征工程的第一步。如果我们不能理解给定的数据，我们就永远无法希望修复、创建和利用特征，以便创建表现良好的机器学习管道。在本章中，我们能够识别并从我们的数据集中提取数据水平，并使用这些信息创建有用的和有意义的视觉图表，为我们的数据带来新的洞察。
- en: In the next chapter, we will use all of this new-found knowledge of the levels
    of data to start improving our features, and we will start to use machine-learning
    to effectively measure the impact of our feature engineering pipelines.
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将利用这些新发现的数据层级知识来开始改进我们的特性，并且我们将开始使用机器学习来有效地衡量我们特性工程流程的影响。
